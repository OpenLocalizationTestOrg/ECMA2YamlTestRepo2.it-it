### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activities.TransactedReceiveScope
  id: TransactedReceiveScope
  children:
  - System.ServiceModel.Activities.TransactedReceiveScope.#ctor
  - System.ServiceModel.Activities.TransactedReceiveScope.Body
  - System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(System.Activities.NativeActivityMetadata)
  - System.ServiceModel.Activities.TransactedReceiveScope.Execute(System.Activities.NativeActivityContext)
  - System.ServiceModel.Activities.TransactedReceiveScope.Request
  - System.ServiceModel.Activities.TransactedReceiveScope.Variables
  langs:
  - csharp
  name: TransactedReceiveScope
  nameWithType: TransactedReceiveScope
  fullName: System.ServiceModel.Activities.TransactedReceiveScope
  type: Class
  summary: "Un&quot;attività che definisce l&quot;ambito della durata di una transazione iniziata da un messaggio ricevuto. La transazione può essere propagata nel flusso di lavoro al messaggio di avvio o essere creata dal dispatcher quando viene ricevuto il messaggio."
  remarks: "L&quot;attività TransactedReceiveScope consente di controllare la durata della transazione propagata.      > [!WARNING] > Per un&quot;attività TransactedReceiveScope origine (un TransactedReceiveScope che contiene un <xref:System.ServiceModel.Activities.Receive>attività con <xref:System.ServiceModel.Activities.Receive.CanCreateInstance%2A>impostato su `true`), viene creata la transazione prima che il runtime viene avviata l&quot;esecuzione dell&quot;attività TransactedReceiveScope.</xref:System.ServiceModel.Activities.Receive.CanCreateInstance%2A> </xref:System.ServiceModel.Activities.Receive> Questa transazione non si trova a livello di attività del flusso di lavoro, ma si trova ai livelli di persistenza sottostante. Se l&quot;esecuzione del flusso di lavoro incontra un <xref:System.Activities.Statements.Persist>attività prima dell&quot;attività TransactedReceiveScope, il runtime tenta di rendere persistente nella transazione di ambiente.</xref:System.Activities.Statements.Persist> Questo comportamento causa un blocco fino al completamento della transazione. Poiché l&quot;esecuzione del flusso di lavoro non ha raggiunto la <xref:System.ServiceModel.Activities.TransactedReceiveScope.Body%2A>sezione, la transazione non può terminare.</xref:System.ServiceModel.Activities.TransactedReceiveScope.Body%2A> Questo deadlock provoca il blocco fino al timeout della transazione del flusso di lavoro. Quando la transazione scade, l&quot;istanza appena creata viene interrotta.      > [!IMPORTANT] > Quando si usa un TransactedReceiveScope, è consigliabile posizionare tutti Receive nel flusso di lavoro all&quot;interno delle attività TransactedReceiveScope.      > [!IMPORTANT] > Quando si utilizza TransactedReceiveScope e i messaggi arrivano nell&quot;ordine errato, il flusso di lavoro verrà interrotta quando si tenta di recapitare il messaggio di ordine prima. È necessario accertarsi che il flusso di lavoro è sempre in uno stato punto di interruzione quando il flusso di lavoro diventa inattivo. In questo modo sarà possibile riavviare il flusso di lavoro da un punto di persistenza precedente deve essere interrotto il flusso di lavoro."
  example:
  - "The following example shows how to use the TransactedReceiveScope class in a <xref:System.Activities.Statements.Sequence> activity.  \n  \n [!code-cs[TransactedReceiveScope#0](~/add/codesnippet/csharp/common/codeserviceworkflow.cs#0)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Body")]

      public sealed class TransactedReceiveScope : System.Activities.NativeActivity
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.NativeActivity
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)
  - System.Activities.NativeActivity.CanInduceIdle
  - System.Activities.NativeActivity.Implementation
  - System.Activities.NativeActivity.ImplementationVersion
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  platform:
  - net462
- uid: System.ServiceModel.Activities.TransactedReceiveScope.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  langs:
  - csharp
  name: TransactedReceiveScope()
  nameWithType: TransactedReceiveScope.TransactedReceiveScope()
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.TransactedReceiveScope()
  type: Constructor
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Activities.TransactedReceiveScope&quot;> </xref> classe."
  syntax:
    content: public TransactedReceiveScope ();
    parameters: []
  overload: System.ServiceModel.Activities.TransactedReceiveScope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Body
  id: Body
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  langs:
  - csharp
  name: Body
  nameWithType: TransactedReceiveScope.Body
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Body
  type: Property
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Ottiene o imposta il <xref href=&quot;System.Activities.Activity&quot;> </xref> che costituisce il corpo del <xref href=&quot;System.ServiceModel.Activities.TransactedReceiveScope&quot;> </xref> attività."
  remarks: "La transazione è di ambiente per la durata intera del corpo."
  example:
  - "The following example shows how to set the Body property.  \n  \n [!code-cs[TransactedReceiveScope#0](~/add/codesnippet/csharp/common/codeserviceworkflow.cs#0)]"
  syntax:
    content: public System.Activities.Activity Body { get; set; }
    return:
      type: System.Activities.Activity
      description: "Il corpo dell&quot;ambito di ricezione transazionale."
  overload: System.ServiceModel.Activities.TransactedReceiveScope.Body*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(System.Activities.NativeActivityMetadata)
  id: CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  langs:
  - csharp
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: TransactedReceiveScope.CacheMetadata(NativeActivityMetadata)
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(NativeActivityMetadata)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  syntax:
    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.NativeActivityMetadata
      description: "Da aggiungere."
  overload: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Execute(System.Activities.NativeActivityContext)
  id: Execute(System.Activities.NativeActivityContext)
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  langs:
  - csharp
  name: Execute(NativeActivityContext)
  nameWithType: TransactedReceiveScope.Execute(NativeActivityContext)
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Execute(NativeActivityContext)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  syntax:
    content: protected override void Execute (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "Da aggiungere."
  overload: System.ServiceModel.Activities.TransactedReceiveScope.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Request
  id: Request
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  langs:
  - csharp
  name: Request
  nameWithType: TransactedReceiveScope.Request
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Request
  type: Property
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Ottiene o imposta il <xref href=&quot;System.ServiceModel.Activities.Receive&quot;> </xref> attività associata a questo <xref href=&quot;System.ServiceModel.Activities.TransactedReceiveScope&quot;> </xref> attività."
  remarks: ''
  example:
  - "The following example shows how to set the Request property.  \n  \n [!code-cs[TransactedReceiveScope#0](~/add/codesnippet/csharp/common/codeserviceworkflow.cs#0)]"
  syntax:
    content: public System.ServiceModel.Activities.Receive Request { get; set; }
    return:
      type: System.ServiceModel.Activities.Receive
      description: "L&quot;attività di ricezione associato all&quot;ambito di ricezione transazionale."
  overload: System.ServiceModel.Activities.TransactedReceiveScope.Request*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Variables
  id: Variables
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  langs:
  - csharp
  name: Variables
  nameWithType: TransactedReceiveScope.Variables
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Variables
  type: Property
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.Activities
  summary: "Ottiene la raccolta di <xref href=&quot;System.Activities.Variable&quot;> </xref> associato a questo <xref href=&quot;System.ServiceModel.Activities.TransactedReceiveScope&quot;> </xref>."
  remarks: ''
  example:
  - "The following example shows how to set the Variables property.  \n  \n [!code-cs[TransactedReceiveScope#0](~/add/codesnippet/csharp/common/codeserviceworkflow.cs#0)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> Variables { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}
      description: "Le variabili associate all&quot;ambito di ricezione transazionale."
  overload: System.ServiceModel.Activities.TransactedReceiveScope.Variables*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.NativeActivity
  isExternal: false
  name: System.Activities.NativeActivity
- uid: System.ServiceModel.Activities.TransactedReceiveScope.#ctor
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: TransactedReceiveScope()
  nameWithType: TransactedReceiveScope.TransactedReceiveScope()
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.TransactedReceiveScope()
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Body
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Body
  nameWithType: TransactedReceiveScope.Body
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Body
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: TransactedReceiveScope.CacheMetadata(NativeActivityMetadata)
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata(NativeActivityMetadata)
- uid: System.Activities.NativeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: NativeActivityMetadata
  nameWithType: NativeActivityMetadata
  fullName: System.Activities.NativeActivityMetadata
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Execute(System.Activities.NativeActivityContext)
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Execute(NativeActivityContext)
  nameWithType: TransactedReceiveScope.Execute(NativeActivityContext)
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Execute(NativeActivityContext)
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Request
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Request
  nameWithType: TransactedReceiveScope.Request
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Request
- uid: System.ServiceModel.Activities.Receive
  parent: System.ServiceModel.Activities
  isExternal: false
  name: Receive
  nameWithType: Receive
  fullName: System.ServiceModel.Activities.Receive
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Variables
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Variables
  nameWithType: TransactedReceiveScope.Variables
  fullName: System.ServiceModel.Activities.TransactedReceiveScope.Variables
- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Variable>
  nameWithType: Collection<Variable>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Variable>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Variable
    name: Variable
    nameWithType: Variable
    fullName: Variable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Activities.TransactedReceiveScope.#ctor*
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: TransactedReceiveScope
  nameWithType: TransactedReceiveScope.TransactedReceiveScope
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Body*
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Body
  nameWithType: TransactedReceiveScope.Body
- uid: System.ServiceModel.Activities.TransactedReceiveScope.CacheMetadata*
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: CacheMetadata
  nameWithType: TransactedReceiveScope.CacheMetadata
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Execute*
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Execute
  nameWithType: TransactedReceiveScope.Execute
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Request*
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Request
  nameWithType: TransactedReceiveScope.Request
- uid: System.ServiceModel.Activities.TransactedReceiveScope.Variables*
  parent: System.ServiceModel.Activities.TransactedReceiveScope
  isExternal: false
  name: Variables
  nameWithType: TransactedReceiveScope.Variables
