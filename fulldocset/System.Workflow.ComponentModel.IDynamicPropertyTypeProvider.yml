### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  id: IDynamicPropertyTypeProvider
  children:
  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)
  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)
  langs:
  - csharp
  name: IDynamicPropertyTypeProvider
  nameWithType: IDynamicPropertyTypeProvider
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  type: Interface
  summary: "Fornisce un tipo di proprietà all&quot;infrastruttura dell&quot;associazione. Viene implementato dalle attività che contiene una proprietà di tipo variabile, in cui il tipo può variare a seconda delle impostazioni di altre attività."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Questa interfaccia consente all&quot;attività padre di associare due proprietà e indicare all&quot;infrastruttura dell&quot;associazione, il tipo da utilizzare nella convalida dell&quot;associazione. Ad esempio, potrebbe essere un&quot;attività con due proprietà, `TypeProperty` e `ValueProperty`, dove `TypeProperty` specifica un tipo valido per il valore di `ValueProperty`. In tal caso, l&quot;attività padre implementa l&quot;interfaccia IDynamicPropertyTypeProvider."
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public interface IDynamicPropertyTypeProvider
  implements: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)
  id: GetAccessType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  langs:
  - csharp
  name: GetAccessType(IServiceProvider,String)
  nameWithType: IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Restituisce il tipo di accesso per la proprietà specificata."
  remarks: "Utilizzato in fase di compilazione per controllare se le proprietà sono associate correttamente fra loro. Senza questa interfaccia, queste informazioni vengono derivate direttamente dai getter/setter di proprietà."
  syntax:
    content: public System.Workflow.ComponentModel.Compiler.AccessTypes GetAccessType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Oggetto che implementa <xref:System.IServiceProvider>per fornire accesso ai servizi in fase di progettazione, se necessario.</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "Il nome della proprietà."
    return:
      type: System.Workflow.ComponentModel.Compiler.AccessTypes
      description: "Un <xref href=&quot;System.Workflow.ComponentModel.Compiler.AccessTypes&quot;> </xref> valore di enumerazione che indica il livello di accesso della proprietà."
  overload: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)
  id: GetPropertyType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  langs:
  - csharp
  name: GetPropertyType(IServiceProvider,String)
  nameWithType: IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Restituisce il <xref:System.Type>della proprietà specificata.</xref:System.Type>"
  remarks: "Utilizzato in fase di compilazione per controllare se le proprietà sono associate correttamente fra loro."
  syntax:
    content: public Type GetPropertyType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Oggetto che implementa <xref:System.IServiceProvider>per fornire accesso ai servizi in fase di progettazione, se necessario.</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "Il nome della proprietà."
    return:
      type: System.Type
      description: "Il <xref:System.Type>per la proprietà il cui nome è passato come il <code> propertyName  </code>parametro.</xref:System.Type>"
  overload: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  isExternal: false
  name: GetAccessType(IServiceProvider,String)
  nameWithType: IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
- uid: System.Workflow.ComponentModel.Compiler.AccessTypes
  parent: System.Workflow.ComponentModel.Compiler
  isExternal: false
  name: AccessTypes
  nameWithType: AccessTypes
  fullName: System.Workflow.ComponentModel.Compiler.AccessTypes
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  isExternal: false
  name: GetPropertyType(IServiceProvider,String)
  nameWithType: IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType*
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  isExternal: false
  name: GetAccessType
  nameWithType: IDynamicPropertyTypeProvider.GetAccessType
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType*
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  isExternal: false
  name: GetPropertyType
  nameWithType: IDynamicPropertyTypeProvider.GetPropertyType
