### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.PerformanceData.CounterData
  id: CounterData
  children:
  - System.Diagnostics.PerformanceData.CounterData.Decrement
  - System.Diagnostics.PerformanceData.CounterData.Increment
  - System.Diagnostics.PerformanceData.CounterData.IncrementBy(System.Int64)
  - System.Diagnostics.PerformanceData.CounterData.RawValue
  - System.Diagnostics.PerformanceData.CounterData.Value
  langs:
  - csharp
  name: CounterData
  nameWithType: CounterData
  fullName: System.Diagnostics.PerformanceData.CounterData
  type: Class
  summary: "Contiene i dati non elaborati per un contatore."
  remarks: "La <xref:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item%2A?displayProperty=fullName>proprietà restituisce un&quot;istanza di questa classe.</xref:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item%2A?displayProperty=fullName>       Questa classe fornisce metodi thread-safe per leggere e scrivere i dati del contatore."
  syntax:
    content: public sealed class CounterData
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterData.Decrement
  id: Decrement
  parent: System.Diagnostics.PerformanceData.CounterData
  langs:
  - csharp
  name: Decrement()
  nameWithType: CounterData.Decrement()
  fullName: System.Diagnostics.PerformanceData.CounterData.Decrement()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Decrementa il valore del contatore di 1."
  remarks: "Questo metodo in modo sicuro decrementa il valore del contatore per le applicazioni a thread multipli.       Per diminuire il valore del contatore da un valore specifico, chiamare il <xref:System.Diagnostics.PerformanceData.CounterData.IncrementBy%2A>metodo e impostare il `value` parametro su un numero negativo.</xref:System.Diagnostics.PerformanceData.CounterData.IncrementBy%2A>       Per impostare il valore del contatore, usare il <xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>proprietà.</xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>"
  syntax:
    content: public void Decrement ();
    parameters: []
  overload: System.Diagnostics.PerformanceData.CounterData.Decrement*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterData.Increment
  id: Increment
  parent: System.Diagnostics.PerformanceData.CounterData
  langs:
  - csharp
  name: Increment()
  nameWithType: CounterData.Increment()
  fullName: System.Diagnostics.PerformanceData.CounterData.Increment()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Incrementa il valore del contatore di 1."
  remarks: "Questo metodo in modo sicuro incrementa il valore del contatore per le applicazioni a thread multipli.       Per impostare il valore del contatore, usare il <xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>proprietà.</xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>       Per incrementare il valore del contatore da un valore specifico, chiamare il <xref:System.Diagnostics.PerformanceData.CounterData.IncrementBy%2A>metodo.</xref:System.Diagnostics.PerformanceData.CounterData.IncrementBy%2A>"
  syntax:
    content: public void Increment ();
    parameters: []
  overload: System.Diagnostics.PerformanceData.CounterData.Increment*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterData.IncrementBy(System.Int64)
  id: IncrementBy(System.Int64)
  parent: System.Diagnostics.PerformanceData.CounterData
  langs:
  - csharp
  name: IncrementBy(Int64)
  nameWithType: CounterData.IncrementBy(Int64)
  fullName: System.Diagnostics.PerformanceData.CounterData.IncrementBy(Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Incrementa il valore del contatore al valore specificato."
  remarks: "Questo metodo in modo sicuro incrementa il valore del contatore per le applicazioni a thread multipli.       Per impostare il valore del contatore, usare il <xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>proprietà.</xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>       Per incrementare il valore del contatore di 1, chiamare il <xref:System.Diagnostics.PerformanceData.CounterData.Increment%2A>metodo.</xref:System.Diagnostics.PerformanceData.CounterData.Increment%2A>"
  syntax:
    content: public void IncrementBy (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Quantità in base alla quale incrementare il valore del contatore. Il valore di incremento può essere positivo o negativo."
  overload: System.Diagnostics.PerformanceData.CounterData.IncrementBy*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterData.RawValue
  id: RawValue
  parent: System.Diagnostics.PerformanceData.CounterData
  langs:
  - csharp
  name: RawValue
  nameWithType: CounterData.RawValue
  fullName: System.Diagnostics.PerformanceData.CounterData.RawValue
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Imposta o ottiene i dati del contatore non elaborati."
  remarks: "Questa proprietà non è thread-safe ed è appropriata solo per l&quot;accesso a thread singolo. Per l&quot;accesso ai dati del contatore a thread multipli, utilizzare il <xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>proprietà.</xref:System.Diagnostics.PerformanceData.CounterData.Value%2A>"
  syntax:
    content: public long RawValue { get; set; }
    return:
      type: System.Int64
      description: "I dati del contatore non elaborati."
  overload: System.Diagnostics.PerformanceData.CounterData.RawValue*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterData.Value
  id: Value
  parent: System.Diagnostics.PerformanceData.CounterData
  langs:
  - csharp
  name: Value
  nameWithType: CounterData.Value
  fullName: System.Diagnostics.PerformanceData.CounterData.Value
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Imposta o ottiene i dati del contatore."
  remarks: "Questa proprietà fornisce un accesso sicuro ai dati del contatore per le applicazioni a thread multipli. Se le prestazioni sono di importanza fondamentale, utilizzare il <xref:System.Diagnostics.PerformanceData.CounterData.RawValue%2A>proprietà; tuttavia, il <xref:System.Diagnostics.PerformanceData.CounterData.RawValue%2A>proprietà non è thread-safe.</xref:System.Diagnostics.PerformanceData.CounterData.RawValue%2A> </xref:System.Diagnostics.PerformanceData.CounterData.RawValue%2A>       Si noti che la proprietà Value non è thread-safe in .NET Framework 3.5.       Per incrementare il valore del contatore, è consigliabile utilizzare il <xref:System.Diagnostics.PerformanceData.CounterData.Increment%2A>o <xref:System.Diagnostics.PerformanceData.CounterData.IncrementBy%2A>metodo.</xref:System.Diagnostics.PerformanceData.CounterData.IncrementBy%2A> </xref:System.Diagnostics.PerformanceData.CounterData.Increment%2A>"
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: public long Value { get; set; }
    return:
      type: System.Int64
      description: "I dati del contatore."
  overload: System.Diagnostics.PerformanceData.CounterData.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.PerformanceData.CounterData.Decrement
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: Decrement()
  nameWithType: CounterData.Decrement()
  fullName: System.Diagnostics.PerformanceData.CounterData.Decrement()
- uid: System.Diagnostics.PerformanceData.CounterData.Increment
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: Increment()
  nameWithType: CounterData.Increment()
  fullName: System.Diagnostics.PerformanceData.CounterData.Increment()
- uid: System.Diagnostics.PerformanceData.CounterData.IncrementBy(System.Int64)
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: IncrementBy(Int64)
  nameWithType: CounterData.IncrementBy(Int64)
  fullName: System.Diagnostics.PerformanceData.CounterData.IncrementBy(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.PerformanceData.CounterData.RawValue
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: RawValue
  nameWithType: CounterData.RawValue
  fullName: System.Diagnostics.PerformanceData.CounterData.RawValue
- uid: System.Diagnostics.PerformanceData.CounterData.Value
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: Value
  nameWithType: CounterData.Value
  fullName: System.Diagnostics.PerformanceData.CounterData.Value
- uid: System.Diagnostics.PerformanceData.CounterData.Decrement*
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: Decrement
  nameWithType: CounterData.Decrement
- uid: System.Diagnostics.PerformanceData.CounterData.Increment*
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: Increment
  nameWithType: CounterData.Increment
- uid: System.Diagnostics.PerformanceData.CounterData.IncrementBy*
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: IncrementBy
  nameWithType: CounterData.IncrementBy
- uid: System.Diagnostics.PerformanceData.CounterData.RawValue*
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: RawValue
  nameWithType: CounterData.RawValue
- uid: System.Diagnostics.PerformanceData.CounterData.Value*
  parent: System.Diagnostics.PerformanceData.CounterData
  isExternal: false
  name: Value
  nameWithType: CounterData.Value
