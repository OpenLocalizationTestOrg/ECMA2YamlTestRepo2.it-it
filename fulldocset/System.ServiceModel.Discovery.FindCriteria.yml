### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Discovery.FindCriteria
  id: FindCriteria
  children:
  - System.ServiceModel.Discovery.FindCriteria.#ctor
  - System.ServiceModel.Discovery.FindCriteria.#ctor(System.Type)
  - System.ServiceModel.Discovery.FindCriteria.ContractTypeNames
  - System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria
  - System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName})
  - System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Type)
  - System.ServiceModel.Discovery.FindCriteria.Duration
  - System.ServiceModel.Discovery.FindCriteria.Extensions
  - System.ServiceModel.Discovery.FindCriteria.IsMatch(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)
  - System.ServiceModel.Discovery.FindCriteria.MaxResults
  - System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy
  - System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact
  - System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap
  - System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone
  - System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix
  - System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid
  - System.ServiceModel.Discovery.FindCriteria.Scopes
  langs:
  - csharp
  name: FindCriteria
  nameWithType: FindCriteria
  fullName: System.ServiceModel.Discovery.FindCriteria
  type: Class
  summary: "Rappresenta i criteri da utilizzare durante la ricerca di servizi."
  remarks: '[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]tramite FindCriteria e l&quot;operazione di ricerca, vedere [trovare individuazione e FindCriteria](~/add/includes/ajax-current-ext-md.md)'
  syntax:
    content: public class FindCriteria
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: FindCriteria()
  nameWithType: FindCriteria.FindCriteria()
  fullName: System.ServiceModel.Discovery.FindCriteria.FindCriteria()
  type: Constructor
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Crea una nuova istanza di <xref href=&quot;System.ServiceModel.Discovery.FindCriteria&quot;> </xref>."
  syntax:
    content: public FindCriteria ();
    parameters: []
  overload: System.ServiceModel.Discovery.FindCriteria.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: FindCriteria(Type)
  nameWithType: FindCriteria.FindCriteria(Type)
  fullName: System.ServiceModel.Discovery.FindCriteria.FindCriteria(Type)
  type: Constructor
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Crea una nuova istanza di <xref href=&quot;System.ServiceModel.Discovery.FindCriteria&quot;> </xref> classe con il nome specificato di un tipo di contratto."
  syntax:
    content: public FindCriteria (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "Il nome del tipo di contratto da cercare."
  overload: System.ServiceModel.Discovery.FindCriteria.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.ContractTypeNames
  id: ContractTypeNames
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: ContractTypeNames
  nameWithType: FindCriteria.ContractTypeNames
  fullName: System.ServiceModel.Discovery.FindCriteria.ContractTypeNames
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Ottiene la raccolta di nomi di tipi di contratto da cercare."
  remarks: "Se è specificato più di un nome di contratto, servizio risponderanno solo gli endpoint corrispondenti a tutti i contratti."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Xml.XmlQualifiedName> ContractTypeNames { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Xml.XmlQualifiedName}
      description: "I nomi dei tipi di contratto da cercare."
  overload: System.ServiceModel.Discovery.FindCriteria.ContractTypeNames*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria
  id: CreateMetadataExchangeEndpointCriteria
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: CreateMetadataExchangeEndpointCriteria()
  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria()
  fullName: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria()
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Crea criteri di endpoint di scambio dei metadati da utilizzare durante la ricerca di servizi."
  syntax:
    content: public static System.ServiceModel.Discovery.FindCriteria CreateMetadataExchangeEndpointCriteria ();
    parameters: []
    return:
      type: System.ServiceModel.Discovery.FindCriteria
      description: "Criteri dell&quot;endpoint da utilizzare per trovare servizi."
  overload: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName})
  id: CreateMetadataExchangeEndpointCriteria(System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName})
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: CreateMetadataExchangeEndpointCriteria(IEnumerable<XmlQualifiedName>)
  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria(IEnumerable<XmlQualifiedName>)
  fullName: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(IEnumerable<XmlQualifiedName>)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Crea un oggetto che contiene i criteri di endpoint di scambio dei metadati derivati dalla raccolta specificata dei nomi XML completi."
  remarks: "Un <xref:System.Xml.XmlQualifiedName>è un nome completo dello spazio locale nel formato `namespace:localname`.</xref:System.Xml.XmlQualifiedName>"
  syntax:
    content: public static System.ServiceModel.Discovery.FindCriteria CreateMetadataExchangeEndpointCriteria (System.Collections.Generic.IEnumerable<System.Xml.XmlQualifiedName> contractTypeNames);
    parameters:
    - id: contractTypeNames
      type: System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName}
      description: "Raccolta di enumerazioni che rappresentano i nomi di tipo di contratto."
    return:
      type: System.ServiceModel.Discovery.FindCriteria
      description: "Criteri dell&quot;endpoint da utilizzare per trovare servizi."
  overload: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Type)
  id: CreateMetadataExchangeEndpointCriteria(System.Type)
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: CreateMetadataExchangeEndpointCriteria(Type)
  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria(Type)
  fullName: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(Type)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Crea un oggetto che contiene i criteri di endpoint di scambio dei metadati derivati dal tipo di contratto specificato."
  remarks: "Il <xref:System.ServiceModel.Discovery.FindCriteria>informazioni vengono utilizzate per creare un endpoint che è possibile cercare i servizi.</xref:System.ServiceModel.Discovery.FindCriteria>"
  syntax:
    content: public static System.ServiceModel.Discovery.FindCriteria CreateMetadataExchangeEndpointCriteria (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "Tipo di contratto di servizio."
    return:
      type: System.ServiceModel.Discovery.FindCriteria
      description: "Criteri dell&quot;endpoint da utilizzare per trovare servizi."
  overload: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.Duration
  id: Duration
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: Duration
  nameWithType: FindCriteria.Duration
  fullName: System.ServiceModel.Discovery.FindCriteria.Duration
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Ottiene o imposta un <xref:System.TimeSpan>che specifica il periodo di timeout operazione di ricerca.</xref:System.TimeSpan>"
  syntax:
    content: public TimeSpan Duration { get; set; }
    return:
      type: System.TimeSpan
      description: "Il periodo di timeout dell&quot;operazione di ricerca."
  overload: System.ServiceModel.Discovery.FindCriteria.Duration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.Extensions
  id: Extensions
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: Extensions
  nameWithType: FindCriteria.Extensions
  fullName: System.ServiceModel.Discovery.FindCriteria.Extensions
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Ottiene una raccolta di estensioni di <xref href=&quot;System.ServiceModel.Discovery.FindCriteria&quot;> </xref> istanza."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Xml.Linq.XElement> Extensions { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Xml.Linq.XElement}
      description: "Estensioni XML."
  overload: System.ServiceModel.Discovery.FindCriteria.Extensions*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.IsMatch(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)
  id: IsMatch(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: IsMatch(EndpointDiscoveryMetadata)
  nameWithType: FindCriteria.IsMatch(EndpointDiscoveryMetadata)
  fullName: System.ServiceModel.Discovery.FindCriteria.IsMatch(EndpointDiscoveryMetadata)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Determina se il servizio descritto dall&quot;oggetto specificato corrisponde a un set di criteri <xref href=&quot;System.ServiceModel.Discovery.EndpointDiscoveryMetadata&quot;> </xref> istanza."
  syntax:
    content: public bool IsMatch (System.ServiceModel.Discovery.EndpointDiscoveryMetadata endpointDiscoveryMetadata);
    parameters:
    - id: endpointDiscoveryMetadata
      type: System.ServiceModel.Discovery.EndpointDiscoveryMetadata
      description: "I metadati di individuazione di endpoint che descrive il servizio in questione."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il servizio corrisponde ai criteri, in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Discovery.FindCriteria.IsMatch*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.MaxResults
  id: MaxResults
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: MaxResults
  nameWithType: FindCriteria.MaxResults
  fullName: System.ServiceModel.Discovery.FindCriteria.MaxResults
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Ottiene o imposta il numero massimo di risposte richieste dall&quot;operazione di ricerca."
  syntax:
    content: public int MaxResults { get; set; }
    return:
      type: System.Int32
      description: "Il numero massimo di risposte richieste dall&quot;operazione di ricerca."
  overload: System.ServiceModel.Discovery.FindCriteria.MaxResults*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy
  id: ScopeMatchBy
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: ScopeMatchBy
  nameWithType: FindCriteria.ScopeMatchBy
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Ottiene o imposta un URI che specifica la modalità di corrispondenza degli ambiti."
  syntax:
    content: public Uri ScopeMatchBy { get; set; }
    return:
      type: System.Uri
      description: "URI che specifica la modalità di corrispondenza degli ambiti."
  overload: System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact
  id: ScopeMatchByExact
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: ScopeMatchByExact
  nameWithType: FindCriteria.ScopeMatchByExact
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact
  type: Field
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Specifica che tramite un confronto tra maiuscole e minuscole (http://schemas.xmlsoap.org/ws/2004/10/discovery/strcmp0) come definito dalla corrispondenza degli ambiti di [specifica WS-Discovery](http://go.microsoft.com/fwlink/?LinkId=122347)."
  syntax:
    content: public static readonly Uri ScopeMatchByExact;
    return:
      type: System.Uri
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap
  id: ScopeMatchByLdap
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: ScopeMatchByLdap
  nameWithType: FindCriteria.ScopeMatchByLdap
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap
  type: Field
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Specifica che tramite il metodo LDAP (http://schemas.xmlsoap.org/ws/2004/10/discovery/ldap) come definito da corrispondenza degli ambiti di [specifica WS-Discovery](http://go.microsoft.com/fwlink/?LinkId=122347)."
  syntax:
    content: public static readonly Uri ScopeMatchByLdap;
    return:
      type: System.Uri
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone
  id: ScopeMatchByNone
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: ScopeMatchByNone
  nameWithType: FindCriteria.ScopeMatchByNone
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone
  type: Field
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Specifica che vengono ignorati gli ambiti definiti dal [specifica WS-Discovery](http://go.microsoft.com/fwlink/?LinkId=122347)."
  syntax:
    content: public static readonly Uri ScopeMatchByNone;
    return:
      type: System.Uri
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix
  id: ScopeMatchByPrefix
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: ScopeMatchByPrefix
  nameWithType: FindCriteria.ScopeMatchByPrefix
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix
  type: Field
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Specifica che gli ambiti vengono confrontati usando il metodo di prefisso (http://schemas.xmlsoap.org/ws/2004/10/discovery/rfc2396) come definito dal [specifica WS-Discovery](http://go.microsoft.com/fwlink/?LinkId=122347)."
  syntax:
    content: public static readonly Uri ScopeMatchByPrefix;
    return:
      type: System.Uri
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid
  id: ScopeMatchByUuid
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: ScopeMatchByUuid
  nameWithType: FindCriteria.ScopeMatchByUuid
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid
  type: Field
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Specifica che tramite il metodo UUID (http://schemas.xmlsoap.org/ws/2004/10/discovery/uuid) come definito dalla corrispondenza degli ambiti di [specifica WS-Discovery](http://go.microsoft.com/fwlink/?LinkId=122347)."
  syntax:
    content: public static readonly Uri ScopeMatchByUuid;
    return:
      type: System.Uri
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.FindCriteria.Scopes
  id: Scopes
  parent: System.ServiceModel.Discovery.FindCriteria
  langs:
  - csharp
  name: Scopes
  nameWithType: FindCriteria.Scopes
  fullName: System.ServiceModel.Discovery.FindCriteria.Scopes
  type: Property
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery
  summary: "Ottiene una raccolta degli URI assoluti che rappresenta gli ambiti utilizzati per cercare un servizio."
  remarks: "Se è specificato più di un ambito, solo gli endpoint di servizio corrispondenti a tutti gli ambiti verranno inviata una risposta."
  syntax:
    content: public System.Collections.ObjectModel.Collection<Uri> Scopes { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Uri}
      description: "Una raccolta degli URI assoluti utilizzata per cercare un servizio."
  overload: System.ServiceModel.Discovery.FindCriteria.Scopes*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Discovery.FindCriteria.#ctor
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: FindCriteria()
  nameWithType: FindCriteria.FindCriteria()
  fullName: System.ServiceModel.Discovery.FindCriteria.FindCriteria()
- uid: System.ServiceModel.Discovery.FindCriteria.#ctor(System.Type)
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: FindCriteria(Type)
  nameWithType: FindCriteria.FindCriteria(Type)
  fullName: System.ServiceModel.Discovery.FindCriteria.FindCriteria(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Discovery.FindCriteria.ContractTypeNames
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: ContractTypeNames
  nameWithType: FindCriteria.ContractTypeNames
  fullName: System.ServiceModel.Discovery.FindCriteria.ContractTypeNames
- uid: System.Collections.ObjectModel.Collection{System.Xml.XmlQualifiedName}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<XmlQualifiedName>
  nameWithType: Collection<XmlQualifiedName>
  fullName: System.Collections.ObjectModel.Collection<System.Xml.XmlQualifiedName>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Xml.XmlQualifiedName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlQualifiedName
    name: XmlQualifiedName
    nameWithType: XmlQualifiedName
    fullName: XmlQualifiedName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: CreateMetadataExchangeEndpointCriteria()
  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria()
  fullName: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria()
- uid: System.ServiceModel.Discovery.FindCriteria
  parent: System.ServiceModel.Discovery
  isExternal: false
  name: FindCriteria
  nameWithType: FindCriteria
  fullName: System.ServiceModel.Discovery.FindCriteria
- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName})
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: CreateMetadataExchangeEndpointCriteria(IEnumerable<XmlQualifiedName>)
  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria(IEnumerable<XmlQualifiedName>)
  fullName: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(IEnumerable<XmlQualifiedName>)
- uid: System.Collections.Generic.IEnumerable{System.Xml.XmlQualifiedName}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<XmlQualifiedName>
  nameWithType: IEnumerable<XmlQualifiedName>
  fullName: System.Collections.Generic.IEnumerable<System.Xml.XmlQualifiedName>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Xml.XmlQualifiedName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlQualifiedName
    name: XmlQualifiedName
    nameWithType: XmlQualifiedName
    fullName: XmlQualifiedName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(System.Type)
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: CreateMetadataExchangeEndpointCriteria(Type)
  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria(Type)
  fullName: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria(Type)
- uid: System.ServiceModel.Discovery.FindCriteria.Duration
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: Duration
  nameWithType: FindCriteria.Duration
  fullName: System.ServiceModel.Discovery.FindCriteria.Duration
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Discovery.FindCriteria.Extensions
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: Extensions
  nameWithType: FindCriteria.Extensions
  fullName: System.ServiceModel.Discovery.FindCriteria.Extensions
- uid: System.Collections.ObjectModel.Collection{System.Xml.Linq.XElement}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<XElement>
  nameWithType: Collection<XElement>
  fullName: System.Collections.ObjectModel.Collection<System.Xml.Linq.XElement>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Xml.Linq.XElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: XElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Discovery.FindCriteria.IsMatch(System.ServiceModel.Discovery.EndpointDiscoveryMetadata)
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: IsMatch(EndpointDiscoveryMetadata)
  nameWithType: FindCriteria.IsMatch(EndpointDiscoveryMetadata)
  fullName: System.ServiceModel.Discovery.FindCriteria.IsMatch(EndpointDiscoveryMetadata)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Discovery.EndpointDiscoveryMetadata
  parent: System.ServiceModel.Discovery
  isExternal: false
  name: EndpointDiscoveryMetadata
  nameWithType: EndpointDiscoveryMetadata
  fullName: System.ServiceModel.Discovery.EndpointDiscoveryMetadata
- uid: System.ServiceModel.Discovery.FindCriteria.MaxResults
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: MaxResults
  nameWithType: FindCriteria.MaxResults
  fullName: System.ServiceModel.Discovery.FindCriteria.MaxResults
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: ScopeMatchBy
  nameWithType: FindCriteria.ScopeMatchBy
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: ScopeMatchByExact
  nameWithType: FindCriteria.ScopeMatchByExact
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByExact
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: ScopeMatchByLdap
  nameWithType: FindCriteria.ScopeMatchByLdap
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByLdap
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: ScopeMatchByNone
  nameWithType: FindCriteria.ScopeMatchByNone
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByNone
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: ScopeMatchByPrefix
  nameWithType: FindCriteria.ScopeMatchByPrefix
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByPrefix
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: ScopeMatchByUuid
  nameWithType: FindCriteria.ScopeMatchByUuid
  fullName: System.ServiceModel.Discovery.FindCriteria.ScopeMatchByUuid
- uid: System.ServiceModel.Discovery.FindCriteria.Scopes
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: Scopes
  nameWithType: FindCriteria.Scopes
  fullName: System.ServiceModel.Discovery.FindCriteria.Scopes
- uid: System.Collections.ObjectModel.Collection{System.Uri}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Uri>
  nameWithType: Collection<Uri>
  fullName: System.Collections.ObjectModel.Collection<System.Uri>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Uri>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Discovery.FindCriteria.#ctor*
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: FindCriteria
  nameWithType: FindCriteria.FindCriteria
- uid: System.ServiceModel.Discovery.FindCriteria.ContractTypeNames*
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: ContractTypeNames
  nameWithType: FindCriteria.ContractTypeNames
- uid: System.ServiceModel.Discovery.FindCriteria.CreateMetadataExchangeEndpointCriteria*
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: CreateMetadataExchangeEndpointCriteria
  nameWithType: FindCriteria.CreateMetadataExchangeEndpointCriteria
- uid: System.ServiceModel.Discovery.FindCriteria.Duration*
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: Duration
  nameWithType: FindCriteria.Duration
- uid: System.ServiceModel.Discovery.FindCriteria.Extensions*
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: Extensions
  nameWithType: FindCriteria.Extensions
- uid: System.ServiceModel.Discovery.FindCriteria.IsMatch*
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: IsMatch
  nameWithType: FindCriteria.IsMatch
- uid: System.ServiceModel.Discovery.FindCriteria.MaxResults*
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: MaxResults
  nameWithType: FindCriteria.MaxResults
- uid: System.ServiceModel.Discovery.FindCriteria.ScopeMatchBy*
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: ScopeMatchBy
  nameWithType: FindCriteria.ScopeMatchBy
- uid: System.ServiceModel.Discovery.FindCriteria.Scopes*
  parent: System.ServiceModel.Discovery.FindCriteria
  isExternal: false
  name: Scopes
  nameWithType: FindCriteria.Scopes
