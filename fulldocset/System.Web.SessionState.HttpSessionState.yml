### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.HttpSessionState
  id: HttpSessionState
  children:
  - System.Web.SessionState.HttpSessionState.Abandon
  - System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  - System.Web.SessionState.HttpSessionState.Clear
  - System.Web.SessionState.HttpSessionState.CodePage
  - System.Web.SessionState.HttpSessionState.Contents
  - System.Web.SessionState.HttpSessionState.CookieMode
  - System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  - System.Web.SessionState.HttpSessionState.Count
  - System.Web.SessionState.HttpSessionState.GetEnumerator
  - System.Web.SessionState.HttpSessionState.IsCookieless
  - System.Web.SessionState.HttpSessionState.IsNewSession
  - System.Web.SessionState.HttpSessionState.IsReadOnly
  - System.Web.SessionState.HttpSessionState.IsSynchronized
  - System.Web.SessionState.HttpSessionState.Item(System.Int32)
  - System.Web.SessionState.HttpSessionState.Item(System.String)
  - System.Web.SessionState.HttpSessionState.Keys
  - System.Web.SessionState.HttpSessionState.LCID
  - System.Web.SessionState.HttpSessionState.Mode
  - System.Web.SessionState.HttpSessionState.Remove(System.String)
  - System.Web.SessionState.HttpSessionState.RemoveAll
  - System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  - System.Web.SessionState.HttpSessionState.SessionID
  - System.Web.SessionState.HttpSessionState.StaticObjects
  - System.Web.SessionState.HttpSessionState.SyncRoot
  - System.Web.SessionState.HttpSessionState.Timeout
  langs:
  - csharp
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
  type: Class
  summary: "Fornisce accesso ai valori di stato sessione, nonché le impostazioni a livello di sessione e metodi di gestione della durata."
  remarks: "ASP.NET fornisce la gestione dello stato della sessione per consentire di archiviare informazioni associate a una sessione del browser univoco in più richieste. È possibile archiviare una raccolta di valori a cui fa riferimento il nome della chiave o all&quot;indice numerico. Accesso a funzionalità e i valori della sessione è disponibile utilizzando la classe HttpSessionState, che è possibile accedere tramite il <xref:System.Web.HttpContext.Session%2A>proprietà dell&quot;oggetto corrente <xref:System.Web.HttpContext>, oppure la <xref:System.Web.UI.Page.Session%2A>proprietà di <xref:System.Web.UI.Page>.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.Session%2A> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.Session%2A>       I dati della sessione sono associato a una specifica sessione del browser utilizzando un identificatore univoco. Per impostazione predefinita, questo identificatore viene archiviato in un cookie di sessione non soggetto a scadenza nel browser, ma è anche possibile configurare l&quot;applicazione per archiviare l&quot;identificatore di sessione nell&quot;URL impostando il `cookieless` attributo `true` o <xref:System.Web.HttpCookieMode>nell&quot;elemento di configurazione dell&quot;applicazione.</xref:System.Web.HttpCookieMode> In ASP.NET è possibile inoltre determinare se i cookie sono supportati dal browser, specificando un valore di <xref:System.Web.HttpCookieMode>per il `cookieless` attributo.</xref:System.Web.HttpCookieMode> È anche possibile ASP.NET determinare se i cookie sono abilitati per il browser, specificando un valore di <xref:System.Web.HttpCookieMode>per il `cookieless` attributo.</xref:System.Web.HttpCookieMode> Se i cookie sono supportati quando <xref:System.Web.HttpCookieMode>è specificato o abilitata quando <xref:System.Web.HttpCookieMode>viene specificato, la sessione identificatore sarà archiviato in un cookie; in caso contrario l&quot;identificatore di sessione verrà archiviato nell&quot;URL.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode>       Le sessioni vengono avviate durante la prima richiesta e verranno mantenuti i valori della sessione fino a quando viene effettuata una nuova richiesta dal browser prima del numero di minuti specificato in <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>archiviazione di proprietà.</xref:System.Web.SessionState.HttpSessionState.Timeout%2A> Inizio di una nuova sessione, la sessione <xref:System.Web.SessionState.SessionStateModule.Start>viene generato l&quot;evento.</xref:System.Web.SessionState.SessionStateModule.Start> È possibile utilizzare questo evento per eseguire operazioni aggiuntive all&quot;inizio di una sessione, ad esempio l&quot;impostazione predefinita i valori della sessione. Quando una sessione di timeout, il <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>metodo viene chiamato, o verso il basso, la sessione viene chiusa l&quot;applicazione ASP.NET <xref:System.Web.SessionState.SessionStateModule.End>viene generato l&quot;evento.</xref:System.Web.SessionState.SessionStateModule.End> </xref:System.Web.SessionState.HttpSessionState.Abandon%2A> È possibile utilizzare questo evento per eseguire le operazioni di pulitura necessarie. Il <xref:System.Web.SessionState.SessionStateModule.End>evento viene generato solo quando lo stato della sessione `mode` è impostata su <xref:System.Web.SessionState.SessionStateMode>.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateModule.End>       Per migliorare le prestazioni, le sessioni che usano i cookie non allocare spazio di archiviazione di sessione fino a quando i dati vengono archiviati nel <xref:System.Web.UI.Page.Session%2A>oggetto.</xref:System.Web.UI.Page.Session%2A> Per ulteriori informazioni, vedere il <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>proprietà.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>       Lo stato della sessione non viene mantenuto oltre i limiti per le applicazioni ASP.NET. Se una si accede a un&quot;altra applicazione, le informazioni di sessione non sono disponibile per la nuova applicazione.       I valori della sessione vengono archiviati in memoria nel server Web, per impostazione predefinita. È anche possibile archiviare i valori della sessione in un database di SQL Server, un server di stato ASP.NET o un server personalizzato. Ciò consente di mantenere i valori di sessione nei casi in cui il processo di ASP.NET o IIS o l&quot;applicazione ASP.NET viene riavviato e per rendere disponibili i valori della sessione tra tutti i server in una Web farm. Questo comportamento viene configurato tramite l&quot;impostazione di `mode` su un valore valido dell&quot;attributo <xref:System.Web.SessionState.SessionStateMode>valore nell&quot;elemento di configurazione dell&quot;applicazione.</xref:System.Web.SessionState.SessionStateMode> Per ulteriori informazioni, vedere [modalità stato sessione](~/add/includes/ajax-current-ext-md.md).       Le alternative allo stato della sessione includono lo stato dell&quot;applicazione (vedere la proprietà <xref:System.Web.HttpApplication.Application%2A>) e la cache ASP.NET (vedere lo spazio dei nomi <xref:System.Web.Caching>), che archiviano le variabili che sono accessibili da tutti gli utenti di un&quot;applicazione ASP.NET; il profilo ASP.NET (vedere lo spazio dei nomi <xref:System.Web.Profile>), che conserva i valori di utente in un archivio dati senza scadenza con un timeout. ASP.NET <xref:System.Web.UI.WebControls?displayProperty=fullName>, che mantiene i valori di controllo nel <xref:System.Web.UI.Control.ViewState%2A>; <xref:System.Web.HttpResponse.Cookies%2A>; <xref:System.Web.HttpRequest.QueryString%2A>proprietà; e i campi in un form HTML sono disponibili da un HTTP `POST` utilizzando il <xref:System.Web.HttpRequest.Form%2A>insieme.</xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.HttpResponse.Cookies%2A> </xref:System.Web.UI.Control.ViewState%2A> </xref:System.Web.UI.WebControls?displayProperty=fullName> </xref:System.Web.Profile> </xref:System.Web.Caching> </xref:System.Web.HttpApplication.Application%2A> Per ulteriori informazioni sulle differenze tra lo stato della sessione e altre alternative di gestione dello stato, vedere [suggerimenti per la gestione dello stato di ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example sets and retrieves values from session state.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpSessionState#30](~/add/codesnippet/csharp/t-system.web.sessionstat_5_1.aspx)]\n [!code-vb[HttpSessionState#30](~/add/codesnippet/visualbasic/t-system.web.sessionstat_5_1.aspx)]"
  syntax:
    content: 'public sealed class HttpSessionState : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Abandon
  id: Abandon
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Abandon()
  nameWithType: HttpSessionState.Abandon()
  fullName: System.Web.SessionState.HttpSessionState.Abandon()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Annulla la sessione corrente."
  remarks: "Una volta chiamato il metodo di abbandono, la sessione corrente non è più valida e può essere avviata una nuova sessione. Le cause di abbandonare il <xref:System.Web.SessionState.SessionStateModule.End>generazione dell&quot;evento.</xref:System.Web.SessionState.SessionStateModule.End> Un nuovo <xref:System.Web.SessionState.SessionStateModule.Start>evento verrà generato per la richiesta successiva.</xref:System.Web.SessionState.SessionStateModule.Start>       Per impostazione predefinita, gli identificatori di sessione per sessioni abbandonate o sono scadute vengono riciclati. Ovvero, se viene effettuata una richiesta che include l&quot;identificatore di sessione per una sessione scaduta o chiusa, viene avviata una nuova sessione utilizzando lo stesso identificatore di sessione. È possibile disabilitare questo impostando `regenerateExpiredSessionId` attributo dell&quot;elemento di configurazione per `true`. Per ulteriori informazioni, vedere [gli identificatori di sessione](~/add/includes/ajax-current-ext-md.md).       Il <xref:System.Web.SessionState.SessionStateModule.End>l&quot;evento è supportato solo quando la <xref:System.Web.SessionState.HttpSessionState.Mode%2A>proprietà è impostata su <xref:System.Web.SessionState.SessionStateMode>.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A> </xref:System.Web.SessionState.SessionStateModule.End>"
  syntax:
    content: public void Abandon ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: HttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.HttpSessionState.Add(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Aggiunge un nuovo elemento alla raccolta degli stati di sessione."
  remarks: "Se il `name` parametro fa riferimento a un elemento di stato sessione esistente, l&quot;elemento esistente viene sovrascritto con l&quot;oggetto specificato `value`."
  example:
  - "The following example shows how to store values in session state by using the Add method. It also shows how to remove values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Remove%2A> method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents session state on the Web page. The <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_16_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_16_1.aspx)]"
  syntax:
    content: public void Add (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "Il nome dell&quot;elemento da aggiungere alla raccolta degli stati di sessione."
    - id: value
      type: System.Object
      description: "Il valore dell&quot;elemento da aggiungere alla raccolta degli stati di sessione."
  overload: System.Web.SessionState.HttpSessionState.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Clear
  id: Clear
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpSessionState.Clear()
  fullName: System.Web.SessionState.HttpSessionState.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Rimuove tutte le chiavi e valori dalla raccolta degli stati sessione."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CodePage
  id: CodePage
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CodePage
  nameWithType: HttpSessionState.CodePage
  fullName: System.Web.SessionState.HttpSessionState.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene o imposta l&quot;identificatore del set di caratteri per la sessione corrente."
  remarks: "Un set di caratteri (tabella codici) viene utilizzato per interpretare i dati di caratteri multibyte, determinando il valore di carattere e l&quot;ordinamento. Le impostazioni della pagina di codice si applicano solo ai dati di caratteri multibyte, non per i dati di tipo carattere Unicode.       Questo <xref:System.Web.SessionState.IHttpSessionState.CodePage%2A>proprietà viene fornita per compatibilità con solo le versioni precedenti di ASP.</xref:System.Web.SessionState.IHttpSessionState.CodePage%2A> Se non si desidera mantenere la compatibilità con le pagine ASP, usare il <xref:System.Web.HttpResponse.ContentEncoding%2A>proprietà invece.</xref:System.Web.HttpResponse.ContentEncoding%2A>"
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "L&quot;identificatore del set di caratteri per la sessione corrente."
  overload: System.Web.SessionState.HttpSessionState.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Contents
  id: Contents
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Contents
  nameWithType: HttpSessionState.Contents
  fullName: System.Web.SessionState.HttpSessionState.Contents
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene un riferimento all&quot;oggetto stato della sessione corrente."
  remarks: "La proprietà di contenuto viene fornita per compatibilità con le versioni precedenti di ASP."
  example:
  - "The following code example lists the item names and values in the Contents property.  \n  \n [!code-cs[HttpSessionState#9](~/add/codesnippet/csharp/p-system.web.sessionstat_8_1.aspx)]\n [!code-vb[HttpSessionState#9](~/add/codesnippet/visualbasic/p-system.web.sessionstat_8_1.aspx)]"
  syntax:
    content: public System.Web.SessionState.HttpSessionState Contents { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "Corrente <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.Contents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CookieMode
  id: CookieMode
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
  fullName: System.Web.SessionState.HttpSessionState.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene un valore che indica se l&quot;applicazione è configurata per sessioni senza cookie."
  remarks: "Quando <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>è `true`, la proprietà CookieMode restituisce <xref:System.Web.HttpCookieMode>; in caso contrario la proprietà CookieMode restituisce <xref:System.Web.HttpCookieMode>.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> </xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>"
  example:
  - "The following code example sets the `cookieless` session attribute to `true` in the Web.config file. For this sample application configuration, the CookieMode property would return <xref:System.Web.HttpCookieMode>.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "Uno del <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref> valori che indicano se l&quot;applicazione è configurata per sessioni senza cookie. Il valore predefinito è <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.HttpSessionState.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Copia la raccolta di valori di stato sessione in una matrice unidimensionale, iniziando dall&quot;indice specificato della matrice."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Il <xref:System.Array>che riceve i valori della sessione.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Indice in base zero `array` da cui avviare la copia."
  overload: System.Web.SessionState.HttpSessionState.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Count
  id: Count
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Count
  nameWithType: HttpSessionState.Count
  fullName: System.Web.SessionState.HttpSessionState.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene il numero di elementi nella raccolta degli stati di sessione."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Il numero di elementi nella raccolta."
  overload: System.Web.SessionState.HttpSessionState.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator
  id: GetEnumerator
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.HttpSessionState.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Restituisce un enumeratore che può essere usato per leggere tutti i nomi delle variabili dello stato sessione nella sessione corrente."
  remarks: ''
  example:
  - "The following example shows how to store values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Add%2A> method. It also shows how to remove values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Remove%2A> method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents of session state on the Web page. The GetEnumerator method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_14_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_14_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Un <xref:System.Collections.IEnumerator>che può scorrere i nomi delle variabili nella raccolta degli stati di sessione.</xref:System.Collections.IEnumerator>"
  overload: System.Web.SessionState.HttpSessionState.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsCookieless
  id: IsCookieless
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
  fullName: System.Web.SessionState.HttpSessionState.IsCookieless
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene un valore che indica se l&quot;ID di sessione è incorporato nell&quot;URL o archiviato in un cookie HTTP."
  remarks: "ASP.NET identifica in modo univoco le sessioni con un browser. Per impostazione predefinita, l&quot;identificatore univoco per una sessione verrà archiviato in un cookie di sessione non soggetto a scadenza nel browser. È possibile specificare che gli identificatori di sessione non essere archiviati in un cookie impostando il `cookieless` attributo `true` nell&quot;elemento di configurazione.      > [!NOTE] > Per migliorare la sicurezza dell&quot;applicazione, l&quot;applicazione deve consentire agli utenti di effettuare la disconnessione, a quel punto è necessario chiamare il <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>metodo.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Questo riduce il rischio di un&quot;origine indesiderata utilizzando l&quot;identificatore univoco nell&quot;URL per recuperare i dati privati, archiviati nella sessione per un utente.       ASP.NET mantiene lo stato della sessione senza cookie inserendo automaticamente un ID di sessione univoco nell&quot;URL della pagina. Ad esempio, l&quot;URL seguente è stato modificato da ASP.NET per includere il lit3py55t21z5v55vlm25s55 ID di sessione univoco: ```   http://www.example.com/(S(4danlfat035muve4g0mvgfrr))/orderform.aspx   ``` ASP.NET consente di modificare i collegamenti contenuti in tutte le pagine richieste incorporando un valore di ID di sessione nei collegamenti subito prima dell&quot;invio di ogni pagina nel browser. Lo stato della sessione viene mantenuto fino a quando l&quot;utente segue il percorso di collegamenti che fornisce il sito. Tuttavia, se l&quot;agente utente riscrive un URL, l&quot;istanza dello stato sessione andranno persi.       L&quot;ID di sessione è incorporato nell&quot;URL dopo la barra che segue il nome dell&quot;applicazione e prima di qualsiasi identificatore di file o directory virtuale rimanenti. In questo modo ASP.NET per risolvere il nome dell&quot;applicazione prima di coinvolgere il <xref:System.Web.SessionState.SessionStateModule>nella richiesta.</xref:System.Web.SessionState.SessionStateModule>       Per impostazione predefinita, gli identificatori di sessione utilizzati in sessioni senza cookie vengono riciclati. Ovvero, se viene effettuata una richiesta con un ID di sessione è scaduta, viene avviata una nuova sessione utilizzando l&quot;ID di sessione fornito con la richiesta. Questo comportamento può comportare la condivisione indesiderata dei dati della sessione quando un collegamento che contiene un ID di sessione senza cookie è condiviso tra più browser, ad esempio tramite un motore di ricerca o un altro programma. È possibile ridurre la possibilità di dati della sessione è condivisi da più client, disabilitare il riciclo di identificatori di sessione. A tale scopo, impostare il `regenerateExpiredSessionId` attributo dell&quot;elemento di configurazione per `true`. Il risultato sarà un nuovo ID di sessione quando viene effettuata una richiesta di sessione senza cookie con un ID sessione scaduti. Si noti che se la richiesta effettuata con l&quot;ID di sessione scaduto utilizza HTTP `POST` (metodo), quindi tutti i dati verranno persi quando `regenerateExpiredSessionId` è `true`, come ASP.NET esegue un reindirizzamento per assicurarsi che il browser ha il nuovo ID di sessione nell&quot;URL.      > [!NOTE] > Durante l&quot;impostazione di `regenerateExpiredSessionId` attributo `true` riduce la possibilità della indesiderati condivisione dei dati della sessione, non protegge da un&quot;origine indesiderata l&quot;accesso alla sessione di un altro utente ottenendo il <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valore e inserendolo nelle richieste inviate al server.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Se si archiviano informazioni personali o riservate nello stato sessione, è consigliabile utilizzare SSL per crittografare le comunicazioni tra il browser e il server che include il. <xref:System.Web.SessionState.HttpSessionState.SessionID%2A></xref:System.Web.SessionState.HttpSessionState.SessionID%2A>"
  example:
  - "The following code example sets the `cookieless` session attribute to true in the Web.config file.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      regenerateExpiredSessionId=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public bool IsCookieless { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la sessione è incorporata nell&quot;URL. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsCookieless*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsNewSession
  id: IsNewSession
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
  fullName: System.Web.SessionState.HttpSessionState.IsNewSession
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene un valore che indica se la sessione è stata creata con la richiesta corrente."
  syntax:
    content: public bool IsNewSession { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la sessione è stata creata con la richiesta corrente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsNewSession*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly
  id: IsReadOnly
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.HttpSessionState.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene un valore che indica se la sessione è di sola lettura."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la sessione è di sola lettura. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized
  id: IsSynchronized
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.HttpSessionState.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene un valore che indica se l&quot;accesso alla raccolta di valori di stato sessione è sincronizzato (thread-safe)."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;accesso alla raccolta è sincronizzato (thread-safe); in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: HttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.HttpSessionState.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene o imposta un valore di sessione da un indice numerico."
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "L&quot;indice numerico del valore di sessione."
    return:
      type: System.Object
      description: "Il valore dello stato della sessione archiviato in corrispondenza dell&quot;indice specificato, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se l&quot;elemento non esiste."
  overload: System.Web.SessionState.HttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Item(System.String)
  id: Item(System.String)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Item(String)
  nameWithType: HttpSessionState.Item(String)
  fullName: System.Web.SessionState.HttpSessionState.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene o imposta un valore di sessione in base al nome."
  syntax:
    content: public object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: "Il nome della chiave del valore di sessione."
    return:
      type: System.Object
      description: "Il valore dello stato sessione con il nome specificato, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se l&quot;elemento non esiste."
  overload: System.Web.SessionState.HttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Keys
  id: Keys
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Keys
  nameWithType: HttpSessionState.Keys
  fullName: System.Web.SessionState.HttpSessionState.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene una raccolta di chiavi per tutti i valori archiviati nella raccolta degli stati di sessione."
  syntax:
    content: public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
      description: "Il <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>che contiene tutte le chiavi di sessione.</xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>"
  overload: System.Web.SessionState.HttpSessionState.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.LCID
  id: LCID
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: LCID
  nameWithType: HttpSessionState.LCID
  fullName: System.Web.SessionState.HttpSessionState.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene o imposta l&quot;identificatore delle impostazioni locali (LCID) della sessione corrente."
  remarks: "La proprietà LCID viene fornita per compatibilità con solo le versioni precedenti di ASP. Se non si desidera mantenere la compatibilità con le pagine ASP, usare il <xref:System.Globalization.CultureInfo.LCID%2A>proprietà invece.</xref:System.Globalization.CultureInfo.LCID%2A>       Nello stato sessione ASP.NET memorizza l&quot;identificatore delle impostazioni locali. Il tipo di accesso della proprietà LCID di <xref:System.Globalization.CultureInfo.LCID%2A>proprietà per ottenere e impostare l&quot;identificatore.</xref:System.Globalization.CultureInfo.LCID%2A>"
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "Oggetto <xref:System.Globalization.CultureInfo>istanza che specifica la lingua della sessione corrente.</xref:System.Globalization.CultureInfo>"
  overload: System.Web.SessionState.HttpSessionState.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Mode
  id: Mode
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Mode
  nameWithType: HttpSessionState.Mode
  fullName: System.Web.SessionState.HttpSessionState.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene la modalità stato sessione corrente."
  remarks: "Per informazioni su come configurare il server per <xref:System.Web.SessionState.SessionStateMode>o <xref:System.Web.SessionState.SessionStateMode>archiviazione dello stato della sessione, vedere [panoramica dello stato della sessione di ASP.NET](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode>"
  example:
  - "The following code example sets the `mode` session attribute to <xref:System.Web.SessionState.SessionStateMode> in the Web.config file. For SQL Server session mode, the `sqlConnectionString` attribute is also required.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"SQLServer\"  \n      sqlConnectionString=\"Data Source=localhost;Integrated Security=SSPI\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.SessionState.SessionStateMode Mode { get; }
    return:
      type: System.Web.SessionState.SessionStateMode
      description: "Uno del <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> valori."
  overload: System.Web.SessionState.HttpSessionState.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Remove(String)
  nameWithType: HttpSessionState.Remove(String)
  fullName: System.Web.SessionState.HttpSessionState.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Elimina un elemento dalla raccolta degli stati di sessione."
  remarks: "Se la raccolta dello stato della sessione non contiene un elemento con l&quot;oggetto specificato `name`, la raccolta rimane invariata. Viene generata alcuna eccezione."
  example:
  - "The following example shows how to store values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Add%2A> method. It also shows how to remove values in session state by using the Remove method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents of session state on the Web page. The <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_6_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_6_1.aspx)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome dell&quot;elemento da eliminare dalla raccolta degli stati sessione."
  overload: System.Web.SessionState.HttpSessionState.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.RemoveAll
  id: RemoveAll
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: RemoveAll()
  nameWithType: HttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.HttpSessionState.RemoveAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Rimuove tutte le chiavi e valori dalla raccolta degli stati sessione."
  remarks: "RemoveAll esegue la stessa funzione <xref:System.Web.SessionState.HttpSessionState.Clear%2A>.</xref:System.Web.SessionState.HttpSessionState.Clear%2A>"
  syntax:
    content: public void RemoveAll ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.RemoveAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: HttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.HttpSessionState.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Elimina un elemento in corrispondenza dell&quot;indice specificato dalla raccolta degli stati sessione."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Indice dell&quot;elemento da rimuovere dalla raccolta degli stati di sessione."
  overload: System.Web.SessionState.HttpSessionState.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is equal to or greater than <xref:System.Web.SessionState.HttpSessionState.Count*>."
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.SessionID
  id: SessionID
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: SessionID
  nameWithType: HttpSessionState.SessionID
  fullName: System.Web.SessionState.HttpSessionState.SessionID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene l&quot;identificatore univoco per la sessione."
  remarks: "La proprietà SessionID è utilizzata per identificare in modo univoco un browser con i dati di sessione nel server. Il valore SessionID è casuale generato da ASP.NET e archiviato in un cookie di sessione non soggetto a scadenza nel browser. Il valore SessionID viene quindi inviato in un cookie con ogni richiesta all&quot;applicazione ASP.NET.       Se si desidera disabilitare l&quot;uso dei cookie nell&quot;applicazione ASP.NET e comunque usare dello stato della sessione, è possibile configurare l&quot;applicazione per archiviare l&quot;identificatore di sessione nell&quot;URL anziché un cookie impostando il `cookieless` attributo dell&quot;elemento di configurazione per `true`, o a <xref:System.Web.HttpCookieMode>, nel file Web. config dell&quot;applicazione.</xref:System.Web.HttpCookieMode> In ASP.NET è possibile inoltre determinare se i cookie sono supportati dal browser, specificando un valore di <xref:System.Web.HttpCookieMode>per il `cookieless` attributo.</xref:System.Web.HttpCookieMode> È anche possibile ASP.NET determinare se i cookie sono abilitati per il browser, specificando un valore di <xref:System.Web.HttpCookieMode>per il `cookieless` attributo.</xref:System.Web.HttpCookieMode> Se i cookie sono supportati quando <xref:System.Web.HttpCookieMode>è specificato o abilitata quando <xref:System.Web.HttpCookieMode>viene specificato, la sessione identificatore sarà archiviato in un cookie; in caso contrario l&quot;identificatore di sessione verrà archiviato nell&quot;URL.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> Per ulteriori informazioni, vedere il <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>proprietà.</xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>       SessionID verrà inviato tra il server e il browser in testo non crittografato, in un cookie o nell&quot;URL. Di conseguenza, un&quot;origine non autorizzata potrebbe accedere alla sessione di un altro utente ottenendo il valore SessionID e inserendolo nelle richieste inviate al server. Se si archiviano informazioni personali o riservate nello stato sessione, è consigliabile utilizzare SSL per crittografare le comunicazioni tra il browser e il server che include l&quot;ID sessione.       Quando si utilizza lo stato della sessione basato su cookie, ASP.NET non allocare spazio di archiviazione per i dati della sessione fino a quando il <xref:System.Web.UI.Page.Session%2A>oggetto viene utilizzato.</xref:System.Web.UI.Page.Session%2A> Di conseguenza, un nuovo ID di sessione viene generato per ogni richiesta di pagina fino a quando non si accede all&quot;oggetto di sessione. Se l&quot;applicazione richiede un ID di sessione statico per l&quot;intera sessione, è possibile implementare il `Session_Start` metodo nel file Global. asax dell&quot;applicazione e di archiviazione di dati nel <xref:System.Web.UI.Page.Session%2A>dell&quot;oggetto per correggere l&quot;ID di sessione o è possibile utilizzare codice in un&quot;altra parte dell&quot;applicazione in cui per archiviare in modo esplicito i dati di <xref:System.Web.UI.Page.Session%2A>oggetto.</xref:System.Web.UI.Page.Session%2A> </xref:System.Web.UI.Page.Session%2A>       Se l&quot;applicazione utilizza lo stato della sessione senza cookie, l&quot;ID di sessione viene generato nella visualizzazione della prima pagina e viene mantenuto per l&quot;intera sessione."
  example:
  - "The following code example shows a Web.config file that configures session state to use cookieless session identifiers. For more information, see the <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> property.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      cookieless=\"true\"  \n      regenerateExpiredSessionId=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public string SessionID { get; }
    return:
      type: System.String
      description: "Identificatore di sessione univoco."
  overload: System.Web.SessionState.HttpSessionState.SessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.StaticObjects
  id: StaticObjects
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
  fullName: System.Web.SessionState.HttpSessionState.StaticObjects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene una raccolta di oggetti dichiarati da <xref uid=&quot;langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; name=&quot;&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; href=&quot;&quot;> </xref> tag nel file Global. asax dell&quot;applicazione di ASP.NET."
  remarks: "Se un oggetto in una pagina non supporta la serializzazione e <xref:System.Web.SessionState.HttpSessionState.Mode%2A>è out-of-process (<xref:System.Web.SessionState.SessionStateMode> o <xref:System.Web.SessionState.SessionStateMode>), l&quot;oggetto non verrà creato e non verrà aggiunto a questa raccolta.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A>       La proprietà StaticObjects viene fornita per compatibilità con le versioni precedenti di ASP."
  example:
  - "The following code example lists the `id` and object type of the objects in the StaticObjects collection.  \n  \n [!code-cs[HttpSessionState#10](~/add/codesnippet/csharp/p-system.web.sessionstat_9_1.aspx)]\n [!code-vb[HttpSessionState#10](~/add/codesnippet/visualbasic/p-system.web.sessionstat_9_1.aspx)]"
  syntax:
    content: public System.Web.HttpStaticObjectsCollection StaticObjects { get; }
    return:
      type: System.Web.HttpStaticObjectsCollection
      description: "Un <xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref> contenente gli oggetti dichiarati nel file Global. asax."
  overload: System.Web.SessionState.HttpSessionState.StaticObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.SyncRoot
  id: SyncRoot
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
  fullName: System.Web.SessionState.HttpSessionState.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene un oggetto che può essere usato per sincronizzare l&quot;accesso alla raccolta di valori di stato sessione."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Oggetto che può essere usato per sincronizzare l&quot;accesso alla raccolta."
  overload: System.Web.SessionState.HttpSessionState.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Timeout
  id: Timeout
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Timeout
  nameWithType: HttpSessionState.Timeout
  fullName: System.Web.SessionState.HttpSessionState.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Ottiene e imposta la quantità di tempo, espresso in minuti, consentiti tra le richieste prima che il provider di stato sessione termini la sessione."
  remarks: "La proprietà di Timeout può essere impostata nel file Web. config per un&quot;applicazione mediante il `timeout` attributo dell&quot;elemento di configurazione oppure è possibile impostare il valore della proprietà Timeout utilizzando direttamente il codice dell&quot;applicazione.       Non è possibile impostare la proprietà di Timeout su un valore maggiore di 525.600 minuti (1 anno). Il valore predefinito è 20 minuti."
  example:
  - "The following code example sets the `timeout` session attribute to 30 minutes in the Web.config file.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "Il periodo di timeout, in minuti."
  overload: System.Web.SessionState.HttpSessionState.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.SessionState.HttpSessionState.Abandon
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Abandon()
  nameWithType: HttpSessionState.Abandon()
  fullName: System.Web.SessionState.HttpSessionState.Abandon()
- uid: System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Add(String,Object)
  nameWithType: HttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.HttpSessionState.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.HttpSessionState.Clear
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Clear()
  nameWithType: HttpSessionState.Clear()
  fullName: System.Web.SessionState.HttpSessionState.Clear()
- uid: System.Web.SessionState.HttpSessionState.CodePage
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: HttpSessionState.CodePage
  fullName: System.Web.SessionState.HttpSessionState.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.HttpSessionState.Contents
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Contents
  nameWithType: HttpSessionState.Contents
  fullName: System.Web.SessionState.HttpSessionState.Contents
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.SessionState.HttpSessionState.CookieMode
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
  fullName: System.Web.SessionState.HttpSessionState.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.HttpSessionState.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.SessionState.HttpSessionState.Count
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Count
  nameWithType: HttpSessionState.Count
  fullName: System.Web.SessionState.HttpSessionState.Count
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: GetEnumerator()
  nameWithType: HttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.HttpSessionState.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.SessionState.HttpSessionState.IsCookieless
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
  fullName: System.Web.SessionState.HttpSessionState.IsCookieless
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.HttpSessionState.IsNewSession
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
  fullName: System.Web.SessionState.HttpSessionState.IsNewSession
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.HttpSessionState.IsReadOnly
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.HttpSessionState.IsSynchronized
- uid: System.Web.SessionState.HttpSessionState.Item(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item(Int32)
  nameWithType: HttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.HttpSessionState.Item(Int32)
- uid: System.Web.SessionState.HttpSessionState.Item(System.String)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item(String)
  nameWithType: HttpSessionState.Item(String)
  fullName: System.Web.SessionState.HttpSessionState.Item(String)
- uid: System.Web.SessionState.HttpSessionState.Keys
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Keys
  nameWithType: HttpSessionState.Keys
  fullName: System.Web.SessionState.HttpSessionState.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase+KeysCollection
  nameWithType: NameObjectCollectionBase+KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection
- uid: System.Web.SessionState.HttpSessionState.LCID
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: LCID
  nameWithType: HttpSessionState.LCID
  fullName: System.Web.SessionState.HttpSessionState.LCID
- uid: System.Web.SessionState.HttpSessionState.Mode
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Mode
  nameWithType: HttpSessionState.Mode
  fullName: System.Web.SessionState.HttpSessionState.Mode
- uid: System.Web.SessionState.SessionStateMode
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateMode
  nameWithType: SessionStateMode
  fullName: System.Web.SessionState.SessionStateMode
- uid: System.Web.SessionState.HttpSessionState.Remove(System.String)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Remove(String)
  nameWithType: HttpSessionState.Remove(String)
  fullName: System.Web.SessionState.HttpSessionState.Remove(String)
- uid: System.Web.SessionState.HttpSessionState.RemoveAll
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAll()
  nameWithType: HttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.HttpSessionState.RemoveAll()
- uid: System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: HttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.HttpSessionState.RemoveAt(Int32)
- uid: System.Web.SessionState.HttpSessionState.SessionID
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: HttpSessionState.SessionID
  fullName: System.Web.SessionState.HttpSessionState.SessionID
- uid: System.Web.SessionState.HttpSessionState.StaticObjects
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
  fullName: System.Web.SessionState.HttpSessionState.StaticObjects
- uid: System.Web.HttpStaticObjectsCollection
  parent: System.Web
  isExternal: false
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection
  fullName: System.Web.HttpStaticObjectsCollection
- uid: System.Web.SessionState.HttpSessionState.SyncRoot
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
  fullName: System.Web.SessionState.HttpSessionState.SyncRoot
- uid: System.Web.SessionState.HttpSessionState.Timeout
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: HttpSessionState.Timeout
  fullName: System.Web.SessionState.HttpSessionState.Timeout
- uid: System.Web.SessionState.HttpSessionState.Abandon*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Abandon
  nameWithType: HttpSessionState.Abandon
- uid: System.Web.SessionState.HttpSessionState.Add*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Add
  nameWithType: HttpSessionState.Add
- uid: System.Web.SessionState.HttpSessionState.Clear*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Clear
  nameWithType: HttpSessionState.Clear
- uid: System.Web.SessionState.HttpSessionState.CodePage*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: HttpSessionState.CodePage
- uid: System.Web.SessionState.HttpSessionState.Contents*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Contents
  nameWithType: HttpSessionState.Contents
- uid: System.Web.SessionState.HttpSessionState.CookieMode*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
- uid: System.Web.SessionState.HttpSessionState.CopyTo*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CopyTo
  nameWithType: HttpSessionState.CopyTo
- uid: System.Web.SessionState.HttpSessionState.Count*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Count
  nameWithType: HttpSessionState.Count
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: GetEnumerator
  nameWithType: HttpSessionState.GetEnumerator
- uid: System.Web.SessionState.HttpSessionState.IsCookieless*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
- uid: System.Web.SessionState.HttpSessionState.IsNewSession*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
- uid: System.Web.SessionState.HttpSessionState.Item*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item
  nameWithType: HttpSessionState.Item
- uid: System.Web.SessionState.HttpSessionState.Keys*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Keys
  nameWithType: HttpSessionState.Keys
- uid: System.Web.SessionState.HttpSessionState.LCID*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: LCID
  nameWithType: HttpSessionState.LCID
- uid: System.Web.SessionState.HttpSessionState.Mode*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Mode
  nameWithType: HttpSessionState.Mode
- uid: System.Web.SessionState.HttpSessionState.Remove*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Remove
  nameWithType: HttpSessionState.Remove
- uid: System.Web.SessionState.HttpSessionState.RemoveAll*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAll
  nameWithType: HttpSessionState.RemoveAll
- uid: System.Web.SessionState.HttpSessionState.RemoveAt*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAt
  nameWithType: HttpSessionState.RemoveAt
- uid: System.Web.SessionState.HttpSessionState.SessionID*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: HttpSessionState.SessionID
- uid: System.Web.SessionState.HttpSessionState.StaticObjects*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
- uid: System.Web.SessionState.HttpSessionState.SyncRoot*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
- uid: System.Web.SessionState.HttpSessionState.Timeout*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: HttpSessionState.Timeout
