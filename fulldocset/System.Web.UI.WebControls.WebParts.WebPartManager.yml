### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  id: WebPartManager
  children:
  - System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  - System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  - System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  - System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  - System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  - System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  - System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  - System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  - System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  - System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  - System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  - System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  - System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  - System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  - System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  - System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  langs:
  - csharp
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
  type: Class
  summary: "Funge da classe centrale dell&quot;insieme di controlli Web part, gestione tutte le Web part controlli, funzionalità e gli eventi che si verificano in una pagina Web."
  remarks: "Il controllo WebPartManager funge da hub o controllo centro di un&quot;applicazione Web part. È necessario una sola - istanza del controllo WebPartManager in ogni pagina che utilizza controlli Web part. Come per la maggior parte degli aspetti di applicazioni Web part, il controllo WebPartManager funziona solo con gli utenti autenticati. Inoltre, la relativa funzionalità è garantita quasi interamente con i controlli server che risiedono in aree di Web part che ereditano dalla <xref:System.Web.UI.WebControls.WebParts.WebZone>classe.</xref:System.Web.UI.WebControls.WebParts.WebZone> I controlli server che si trovano in una pagina di fuori di queste aree possono avere poche funzionalità Web part o interazione con il controllo WebPartManager.       In qualità di hub per le funzionalità Web part in una pagina, il controllo WebPartManager esegue i tipi di attività descritte nella tabella seguente.      | Categoria attività | Il controllo esegue |   |-------------------|---------------------------|   | Rilevamento di controlli Web part | Tiene traccia dei diversi tipi di controlli in una pagina che forniscono funzionalità di Web part, inclusi i controlli <xref:System.Web.UI.WebControls.WebParts.WebPart>, connessioni, zone e altri utenti. |   | Aggiunta e rimozione di controlli Web part | Fornisce i metodi per l&quot;aggiunta, eliminazione e la chiusura dei controlli <xref:System.Web.UI.WebControls.WebParts.WebPart>in una pagina. |   | Le connessioni di amministrazione | Consente di creare connessioni tra i controlli e monitora le connessioni, nonché i processi di aggiunta e rimozione. |   | Personalizzazione delle pagine e controlli | Consente agli utenti di spostare i controlli in una pagina in posizioni diverse e avvia le viste in cui gli utenti possono modificare l&quot;aspetto, proprietà e il comportamento dei controlli.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Gestisce le impostazioni di personalizzazione specifiche dell&quot;utente in ogni pagina. |   | Per alternare tra diverse visualizzazioni di pagina | Consente di alternare diverse viste specifiche della pagina, in modo che gli utenti possono eseguire determinate attività, ad esempio la modifica di layout di pagina o controlli di modifica. |   | Generazione di eventi del ciclo di vita Web part | Definisce, genera e consente agli sviluppatori di gestire gli eventi del ciclo di vita dei controlli Web part, ad esempio quando i controlli sono da aggiungere, spostare, connesso o eliminare. |   | Abilitazione di importazione ed esportazione di controlli | Esporta flussi XML che contengono lo stato delle proprietà dei controlli <xref:System.Web.UI.WebControls.WebParts.WebPart>e consente agli utenti di importare i file per facilitare la personalizzazione di controlli complessi in altre pagine o siti. |       La classe di WebPartManager è di un ampio set di proprietà.</xref:System.Web.UI.WebControls.WebParts.WebPart> È coerente con il ruolo di WebPartManager degli altri controlli, dispone di una serie di proprietà che fanno riferimento a raccolte di controlli Web part, o altri oggetti di Web part speciali. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>, e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A>proprietà sono tutte le raccolte utilizzate dal controllo WebPartManager per il rilevamento e altre attività di gestione.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>       Un altro gruppo di proprietà contiene avvisi personalizzabili che si applicano in determinati scenari che si verificano in un&quot;applicazione Web part. Sono inclusi il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A>proprietà.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>       La classe WebPartManager esegue l&quot;override di alcune delle proprietà ereditate, vengono utilizzate da molti controlli server Web. Queste includono la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A>, e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A>proprietà.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>       Infine, è un gruppo di proprietà utili per accedere allo stato corrente dell&quot;applicazione. L&quot; <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>proprietà indica la modalità di visualizzazione corrente cui una pagina viene.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> L&quot; <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A>proprietà indica se un controllo è consentito per il rendering dello script lato client, che è importante in situazioni in cui gli utenti potrebbero browser con funzionalità diverse o esecuzione di script disattivato dall&quot;utente.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A> Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>proprietà è utile per fare riferimento a una classe di utilità che contiene le chiamate a un numero di metodi Web part per i casi di estendibilità.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> Nascondendo le chiamate a questi metodi in una classe separata (la <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>classe), la classe di WebPartManager proprietari viene semplificato l&quot;API.</xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>proprietà fornisce l&quot;accesso agli oggetti di personalizzazione che archiviano le impostazioni di personalizzazione degli utenti e rendere persistenti i dati in un archivio permanente.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>proprietà indica quale <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo in una pagina è attualmente selezionato dall&quot;utente o l&quot;applicazione.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>proprietà indica se i dati di personalizzazione in un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo è stato modificato.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>       Il controllo WebPartManager contiene cinque modalità di visualizzazione predefinite o viste di una pagina Web. Gli sviluppatori possono estendere questa funzionalità, creando modalità di visualizzazione personalizzate mediante l&quot;estensione di tipi, ad esempio la <xref:System.Web.UI.WebControls.WebParts.WebZone>classe o una <xref:System.Web.UI.WebControls.WebParts.ToolZone>classe.</xref:System.Web.UI.WebControls.WebParts.ToolZone> </xref:System.Web.UI.WebControls.WebParts.WebZone> Gli utenti possono passare una pagina in diverse modalità di visualizzazione, a condizione che il tipo corretto di controlli che corrispondono a una determinata modalità di visualizzazione sono presenti in una pagina.      > [!NOTE] > È possibile estendere questa funzionalità in modo che gli utenti possono passare in modalità di visualizzazione personalizzate senza la necessità di una zona corrispondente nella pagina. Tuttavia, il comportamento predefinito è che le modalità di visualizzazione corrispondono alle aree.       La modalità di visualizzazione standard sono rappresentate dai campi pubblici della classe WebPartManager. Nella tabella seguente sono riepilogati i campi e le modalità di visualizzazione che si riferiscono. La modalità di visualizzazione corrente di una pagina, come indicato in precedenza, è sempre un riferimento nel <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>impostato nella proprietà e il gruppo di modalità di visualizzazione che è possibile utilizzare in una pagina specifica, in base al tipo di aree presenti nella pagina di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>proprietà.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>      | Campo | Visualizzare i dettagli di modalità |   |-----------|--------------------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>| La visualizzazione di utente normale di una pagina Web. il predefinito e la modalità di visualizzazione più comuni. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>| La vista in cui gli utenti possono modificare o eliminare i controlli per modificare il layout di pagina. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>| La vista in cui una modifica interfaccia utente (UI) diviene visibile. gli utenti possono modificare l&quot;aspetto, proprietà e il comportamento dei controlli che sono visibili in modalità browse normale. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>| La vista in cui un catalogo dell&quot;interfaccia utente diviene visibile. gli utenti possono aggiungere controlli a una pagina da cataloghi dei controlli disponibili. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>| La vista in cui una connessione dell&quot;interfaccia utente diviene visibile. gli utenti possono connettersi, gestire o interrompere le connessioni tra i controlli. |       Il controllo WebPartManager contiene inoltre un numero di eventi critici del ciclo di vita di pagine Web part e controlli.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Questi eventi forniscono un controllo a livello di codice preciso il comportamento dei controlli Web part. La maggior parte dei metodi riguardano direttamente <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli (o altri controlli server o un utente che vengono inseriti in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zone in modo che funzionano come <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli).</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> Tuttavia, alcuni eventi relativi allo stato della pagina o le connessioni nella pagina. Nella tabella seguente sono elencati gli eventi disponibili e vengono riepilogati gli scopi.      > [!NOTE] > In tutti i casi nella tabella seguente, la parola &quot;controllo&quot; fa riferimento a un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo o qualsiasi controllo server che si trova in una zona e viene eseguito il wrapping con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>oggetto in fase di esecuzione.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>      | Evento | Descrizione |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>| Si verifica prima che un controllo viene aggiunto a una pagina per verificare che sia autorizzato. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>| Si verifica dopo che sono state attivate tutte le connessioni in una pagina. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>| Si verifica prima che il processo di attivazione di tutte le connessioni in una pagina. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>| Si verifica dopo che la modalità di visualizzazione corrente di una pagina è stato modificato. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>| Si verifica prima che il processo di modifica modalità di visualizzazione della pagina. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>| Si verifica dopo la selezione di un controllo è stata annullata. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>| Si verifica prima che il processo di annullamento della selezione di un controllo. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>| Si verifica dopo l&quot;aggiunta di un controllo a una zona. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>| Si verifica prima che il processo di aggiunta di un controllo a una zona. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>| Si verifica dopo la chiusura di un controllo (viene rimossa da una pagina). |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>| Si verifica subito prima del processo di chiusura di un controllo. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>| Si verifica dopo che un&quot;istanza di un controllo dinamico (che è stato creato a livello di codice o aggiunto da un catalogo) è stata eliminata definitivamente. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>| Si verifica prima che il processo di eliminazione di un controllo dinamico. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>| Si verifica dopo che un controllo è stato spostato all&quot;interno dell&quot;area o in un&quot;altra area. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>| Si verifica prima che il processo di spostamento di un controllo. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>| Si verifica dopo due controlli selezionati per la partecipazione in una connessione stabilita la connessione. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>| Si verifica prima che il processo di connessione di due controlli. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>| Si verifica dopo la disconnessione di due controlli connessi. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>| Si verifica subito prima del processo di disconnessione due controlli. |       Il controllo WebPartManager dispone di numerosi metodi per la gestione delle pagine Web part.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Un ampio set di metodi, non è elencate qui, sono metodi i cui nomi hanno il formato On*EventName*. Questi metodi in genere generano gli eventi associati e forniscono l&quot;evento con un gestore di tipo <xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler>.</xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler> La maggior parte di questi metodi può essere sottoposto a override dagli sviluppatori che ereditano dalla classe WebPartManager. Inoltre, gli sviluppatori di pagine possono fornire gestori personalizzati per gli eventi associati a questi metodi. Ad esempio, nel caso del <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>evento, lo sviluppatore della pagina è stato possibile aggiungere un `OnWebPartAdded` attributo il `<asp:webpartmanager>` elemento nel markup di una pagina Web e quindi assegnarlo nome di un metodo personalizzato per l&quot;attributo per la gestione personalizzata per l&quot;evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> L&quot;attributo corrisponde al <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>metodo e questo modello di base di gestione degli eventi funziona per la maggior parte delle Web part eventi e i relativi metodi associati.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>       Inoltre, il controllo di WebPartManager ha metodi particolari per l&quot;attività di gestione <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli (e controlli server o utente usato come <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli).</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> These methods include <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart></xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>       Un altro set di metodi è specializzato per le connessioni. This includes methods such as <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>       Infine, alcuni metodi di WebPartManager riguardano la funzionalità di personalizzazione. These include <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>       Per ulteriori informazioni su altri metodi di WebPartManager che sono accessibili tramite la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>proprietà, vedere la documentazione per la <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>classe.</xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>"
  example:
  - "The following code example demonstrates both declarative and programmatic use of the WebPartManager control.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The user control has a drop-down list control that shows the possible display modes on a page, given the Web Parts controls that are present on the page. In the Web page for this code example, this user control is declared just below the WebPartManager element in the page's markup, and there is a `Register` directive near the top of the Web page to register the control. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#6](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_1.ascx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#6](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_1.ascx)]  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. The page also contains some inline code that handles connection-related events for the WebPartManager control; you can see the effect of this code as you connect and disconnect controls.  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_2.aspx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_2.aspx)]  \n  \n The third part of the example is the source code for the controls. Note that there is an interface named `IZipCode`, and this interface is implemented in the `ZipCodeWebPart` class. This class has a special callback method named `ProvideIZipCode` that serves as a provider. The other type, named `WeatherWebPart`, is also implemented with a special method named `GetIZipCode`, which enables the control to act as a consumer of the other control.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you have compiled the source into an assembly, and the `Register` directive in the Web page references the assembly name. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_3.cs)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_3.vb)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection UI appears, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and then click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. You can enter a ZIP Code, and the consumer control will be updated with the value you enter. Because the `ZipCode` property was marked with the `Personalizable` attribute in the source code, this property value will persist across browser sessions, thus saving the value entered by a user. A more sophisticated consumer control could take the ZIP code information, look up weather information based on the code, and display it to a user."
  syntax:
    content: >-
      [System.ComponentModel.Bindable(false)]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.NonVisualControl]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      [System.Web.UI.ViewStateModeById]

      public class WebPartManager : System.Web.UI.Control, System.Web.UI.INamingContainer, System.Web.UI.WebControls.WebParts.IPersonalizable
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.UI.INamingContainer
  - System.Web.UI.WebControls.WebParts.IPersonalizable
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartManager()
  nameWithType: WebPartManager.WebPartManager()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartManager()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> classe."
  remarks: "Il costruttore di WebPartManager inizializza diverse variabili importanti utilizzate da di <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Un&quot;assegnazione che influisce direttamente sulla tutte le pagine Web part è costituita dal fatto che la modalità di visualizzazione pagina predefinito è impostata sulla modalità browse (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>"
  syntax:
    content: public WebPartManager ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  id: ActivateConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ActivateConnections()
  nameWithType: WebPartManager.ActivateConnections()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Attiva tutte le connessioni in una pagina Web che non sono attualmente attive."
  remarks: "Viene chiamato il metodo ActivateConnections ad ogni richiesta a una pagina per attivare le connessioni esistenti tra <xref:System.Web.UI.WebControls.WebParts.WebPart>e altri controlli server che si trovano <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zone.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> In alcuni casi, ad esempio se si verifica un conflitto nelle connessioni attivate, questo metodo, a sua volta chiama il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>metodo per terminare la connessione problematica.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> Durante il processo di disconnessione di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>viene generato l&quot;evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> In genere gli sviluppatori possono annullare questo evento, ma nel caso in cui si tratta di un conflitto tra le connessioni non può essere annullato, perché il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo necessaria risolvere il conflitto per terminare il processo di attivazione delle connessioni.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Per informazioni dettagliate, vedere <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>"
  syntax:
    content: protected virtual void ActivateConnections ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  id: AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AddWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Fornisce il metodo a livello di programmazione standard per l&quot;aggiunta di <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlli a una pagina Web."
  remarks: "Il metodo AddWebPart viene utilizzato sia per aggiungere nuovi dinamico <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli a una pagina e a riaprire controlli statici o dinamici che sono stati chiusi in precedenza in una pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart> Quando viene chiamato il metodo per aggiungere un nuovo controllo, crea effettivamente una copia del controllo a cui fa riferimento il `webPart` parametro. Gli sviluppatori devono fare riferimento per la copia del controllo, viene generato un nuovo ID di <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo restituito dal metodo per ottenere il nuovo valore di ID.</xref:System.Web.UI.WebControls.WebParts.WebPart> Quando il metodo viene chiamato per riaprire un controllo chiuso in precedenza, viene restituito un riferimento diretto al controllo a cui fa riferimento il `webPart` parametro.      > [!IMPORTANT] > Utilizzare sempre il metodo AddWebPart, anziché <xref:System.Web.UI.ControlCollection.Add%2A>dell&quot;insieme di controlli a cui fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=fullName>proprietà, per aggiungere <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli a livello di codice alla pagina, perché l&quot;uso di <xref:System.Web.UI.ControlCollection.Add%2A>metodo genera un&quot;eccezione.</xref:System.Web.UI.ControlCollection.Add%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=fullName> </xref:System.Web.UI.ControlCollection.Add%2A> Per aggiungere un controllo che non è un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo (in altre parole, un controllo server che verrà eseguito il wrapping con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>controllo in fase di esecuzione), è opportuno chiamare dapprima la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>per creare il controllo e quindi chiamare il metodo AddWebPart per aggiungere il controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Per una dimostrazione di questo approccio, vedere la sezione esempio."
  example:
  - "The following code example demonstrates use of the AddWebPart method to add a server control programmatically to a page. The page markup contains an empty `<asp:webpartzone>` element, and an `<asp:webpartmanager>` element. The first time the **Add Calendar** button is clicked, the code in the event handler creates a <xref:System.Web.UI.WebControls.Calendar> control, and adds it to a zone as a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object, calling the AddWebPart method.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/6da004d9-95d1-4401-9d7e-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/6da004d9-95d1-4401-9d7e-_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPart AddWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> (o control server o utente) da aggiungere a una pagina Web o aperto in una pagina."
    - id: zone
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: "Il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> che `webPart` viene aggiunto a."
    - id: zoneIndex
      type: System.Int32
      description: "Posizione di un intero che rappresenta il numero ordinale che `webPart` occupa `zone`, rispetto agli altri controlli in `zone`."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo che è stato aggiunto alla pagina."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>zone</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>zone</code> is not registered in the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control's collection of zones.  \n  \n \\- or -  \n  \n <code>webPart</code> is already in <code>zone</code>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore di <code> zoneIndex </code> è minore di zero."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  id: AuthorizeWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AuthorizeWebPart
  nameWithType: WebPartManager.AuthorizeWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica quando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*>metodo viene chiamato per determinare se un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o controllo server può essere aggiunti a una pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*>"
  remarks: "L&quot;evento AuthorizeWebPart si verifica ogni volta che un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo viene aggiunto a una pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart> Esistono diversi scenari comuni in cui un controllo può essere aggiunto a una pagina. Per una descrizione completa di questi, vedere la sezione Osservazioni per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>metodo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Quando viene aggiunto un controllo, deve essere controllato per verificare se il relativo <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>proprietà è stata impostata e, in tal caso, se il controllo è autorizzato a essere aggiunto alla pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       Gli sviluppatori possono creare gestori eventi per l&quot;evento AuthorizeWebPart, per fornire filtri per i controlli. Se un controllo <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>valore della proprietà non soddisfa i criteri nel codice del gestore eventi, il controllo non viene aggiunto alla pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>"
  example:
  - "The following code example demonstrates how to set a custom event handler for the AuthorizeWebPart event, which automatically overrides the default <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> method.  \n  \n The code in the `mgr1_AuthorizeWebPart` method checks whether the controls on the page have their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property values set to `user` and, if so, returns `true`, which means that they will be authorized and added to the page. This assumes the default approach is to allow users to view controls with a page in user personalization scope. Notice, however, that in the example one of the controls has its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property value set to `admin`. Developers might place this filter on a specialized control that was designed for only administrative users to see. This control will fail the authorization check during the AuthorizeWebPart event, and will not be displayed. Note that controls that do not have the property set are displayed as well; they are assumed not to be part of a filtering scenario because their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties are not set.  \n  \n [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_9_1.aspx)]\n [!code-cs[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_9_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  id: AvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene una raccolta di <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> gli oggetti che sono disponibili per la creazione di connessioni Web part tra i controlli server."
  remarks: "Questa proprietà Usa il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>metodo per creare la raccolta.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A> Per impostazione predefinita, quelli disponibili vengono letti dal file di configurazione dell&quot;applicazione."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.TransformerTypeCollection&quot;> </xref> che contiene un set di <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> oggetti."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  id: BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BeginWebPartConnecting(WebPart)
  nameWithType: WebPartManager.BeginWebPartConnecting(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Avvia il processo di connessione di due <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlli."
  remarks: "Il metodo BeginWebPartConnecting esiste in modo che il processo di creare connessioni tra i controlli può essere eseguito in fasi distinte, fornendo agli sviluppatori un maggiore controllo sul processo di connessione. Il metodo esegue una serie di controlli iniziali per garantire che `webPart` è in uno stato in cui una connessione la formazione corretta. Se `webPart` passa tutti i controlli, viene impostato come controllo attualmente selezionato (vedere la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>proprietà), e il processo di connessione può continuare.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void BeginWebPartConnecting (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Il controllo per il quale la connessione viene stabilita."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Non è la modalità di visualizzazione corrente nella pagina <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is closed.  \n  \n \\- or -  \n  \n <code>webPart</code> is not part of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n -or -  \n  \n <code>webPart</code> is equal to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  id: BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BeginWebPartEditing(WebPart)
  nameWithType: WebPartManager.BeginWebPartEditing(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Avvia il processo di modifica un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo."
  remarks: "Il metodo BeginWebPartEditing esiste in modo che il processo di modifica dei controlli può essere eseguito in fasi distinte, fornendo agli sviluppatori un maggiore controllo sul processo. Il metodo esegue una serie di controlli iniziali per garantire che `webPart` è in uno stato in cui può essere modificato. Se `webPart` passa tutti i controlli, viene impostato come controllo attualmente selezionato (vedere la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>proprietà), e può continuare il processo di modifica.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void BeginWebPartEditing (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Il controllo da modificare."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Non è la modalità di visualizzazione corrente nella pagina <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is closed.  \n  \n \\- or -  \n  \n <code>webPart</code> is not part of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n -or -  \n  \n <code>webPart</code> is equal to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  id: BrowseDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BrowseDisplayMode
  nameWithType: WebPartManager.BrowseDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Rappresenta la modalità di visualizzazione predefinito per le pagine che contengono i controlli Web part. Questo campo è di sola lettura."
  remarks: "Il campo BrowseDisplayMode fa riferimento a un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>oggetto che viene creato e contenuto di <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Poiché si tratta di un oggetto statico, è possibile fare riferimento ad esso direttamente tramite la <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe senza utilizzare un&quot;istanza del controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Quando una pagina che contiene Web part controlli primo caricamento, è in BrowseDisplayMode (modalità browse) per impostazione predefinita. Quando gli utenti cercano semplicemente come se fossero in una pagina Web normale, la pagina rimane in modalità browse. Se gli utenti desiderano personalizzare layout, controlli, aspetto o il comportamento di una pagina, la pagina dovranno passare a una delle modalità di visualizzazione speciali disponibili tramite il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>proprietà.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>"
  example:
  - "The following code example demonstrates how to work with the BrowseDisplayMode field programmatically. The code populates a drop-down list with the supported display modes, which in this case are browse and design. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to BrowseDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-cs[WebParts_WebPartManager_BrowseDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_5_1.aspx)]\n [!code-vb[WebParts_WebPartManager_BrowseDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_5_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice the label on the page that indicates you are in browse mode. Use the drop-down list control to switch the page to design mode. Notice that, because of the code in the `Page_PreRender` method, the label is now hidden."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  id: CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Controlla il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> i controlli che prenderanno parte a una connessione per determinare se sono in grado di essere connessi, quando i controlli consumer e provider dispongono di interfacce compatibili e un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> oggetto non è necessaria."
  remarks: "Questo metodo viene utilizzato per la connessione `provider` e `consumer` quando entrambi i controlli hanno connessione compatibili, tipi di punti in modo che un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>oggetto non è necessaria.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> È possibile utilizzare questo metodo per verificare che i due controlli possono essere connessi prima di chiamare <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>per creare una connessione a livello di codice.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       Questo overload viene utilizzato con la medesima implementazione il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>overload del metodo, con l&quot;unica eccezione che questo overload non richiede un trasformatore.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>"
  example:
  - "The following code example demonstrates how to use this method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, an `<asp:webpartmanager>` element, and some event-handling code that creates a connection using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks whether the connection can be made and, if so, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/6c629474-a5b1-438b-b1c7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/6c629474-a5b1-438b-b1c7-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. It contains an interface and two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, one acting as a provider, and the other as a consumer. Because they have compatible connection points (both of them recognize the `IZipCode` interface), a transformer is not needed to make the connection. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#2](~/add/codesnippet/csharp/6c629474-a5b1-438b-b1c7-_2.cs)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#2](~/add/codesnippet/visualbasic/6c629474-a5b1-438b-b1c7-_2.vb)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method."
  syntax:
    content: public bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Il controllo che fornisce dati `consumer` quando sono connessi i controlli."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> che consente di `provider` deve far parte di una connessione."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Il controllo che riceve i dati da `provider` quando sono connessi i controlli."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> che agisce come un metodo di callback in modo che `consumer` possono partecipare a una connessione."
    return:
      type: System.Boolean
      description: "Un valore booleano che indica se <code> provider </code> e <code> consumer </code> può essere connesso."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  id: CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Controlla il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlli prenderanno una connessione per determinare se sono in grado di connettersi e che utilizza un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> oggetto per creare la connessione tra un consumer incompatibile e provider."
  remarks: "Questo metodo viene utilizzato per la connessione `provider` e `consumer` quando entrambi i controlli hanno connessione incompatibili, tipi di punti in modo che un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>oggetto sono obbligatorie.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> È possibile utilizzare questo metodo per verificare che i due controlli possono essere connessi prima di chiamare <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>per creare una connessione a livello di codice.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       Questo overload viene utilizzato con la medesima implementazione il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>overload del metodo, con l&quot;unica eccezione che l&quot;overload richiede un trasformatore.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>"
  syntax:
    content: public virtual bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Il controllo che fornisce dati `consumer` quando sono connessi i controlli."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> che agisce come un metodo di callback in modo che `provider` possono partecipare a una connessione."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Il controllo che riceve i dati da `provider` quando sono connessi i controlli."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> che agisce come un metodo di callback in modo che `consumer` possono partecipare a una connessione."
    - id: transformer
      type: System.Web.UI.WebControls.WebParts.WebPartTransformer
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> che consente un incompatibile `provider` e `consumer` per la connessione."
    return:
      type: System.Boolean
      description: "Un valore booleano che indica se <code> provider </code> e <code> consumer </code> possono creare una connessione."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  id: CatalogDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CatalogDisplayMode
  nameWithType: WebPartManager.CatalogDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Rappresenta la modalità di visualizzazione utilizzata per l&quot;aggiunta di controlli server da un catalogo di controlli a una pagina Web. Questo campo è di sola lettura."
  remarks: "Il campo CatalogDisplayMode fa riferimento a un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>oggetto che viene creato e contenuto di <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Poiché si tratta di un oggetto statico, è possibile fare riferimento ad esso direttamente tramite la <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe senza utilizzare un&quot;istanza del controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Quando gli utenti desiderano aggiungere controlli a una pagina, se è disponibile un catalogo di controlli server, è possibile passare alla CatalogDisplayMode (modalità catalogo) e viene visualizzata l&quot;interfaccia utente di catalogo (UI). L&quot;interfaccia utente per un catalogo Web part viene fornito da un <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>controllo della zona.</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Gli sviluppatori di aggiungeranno questa zona alla pagina in fase di progettazione e quindi aggiungeranno i controlli server all&quot;area, in modo che gli utenti saranno in grado di aggiungere questi controlli alle pagine in fase di esecuzione. Dopo che lo sviluppatore è aggiunto a questi controlli, la modalità catalogo diventerà una modalità di visualizzazione supportate nella pagina quanto i controlli necessari per abilitare la modalità di catalogo.       Quando un utente passa a una pagina per la modalità, la zona e tutti i controlli server che sono stati aggiunti diventano visibili del catalogo e l&quot;utente può selezionare i controlli dal catalogo per aggiungere o rimuovere controlli della pagina. Dopo che i controlli sono stati aggiunti alla pagina, vengono visualizzati in modalità di visualizzazione normale e la pagina viene aggiornata."
  example:
  - "The following code example demonstrates how to work with the CatalogDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse, design, and catalog. The catalog mode is available because of the `<asp:CatalogZone>` element and its child elements in the Web page. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to CatalogDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-vb[WebParts_WebPartManager_CatalogDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_3_1.aspx)]\n [!code-cs[WebParts_WebPartManager_CatalogDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_3_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice that the label on the page is hidden. Use the drop-down list control to switch the page to catalog mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible. You can select the control in the catalog and add it to either of the two zones on the page."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  id: CheckRenderClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CheckRenderClientScript()
  nameWithType: WebPartManager.CheckRenderClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Controlla le funzionalità del browser che effettua la richiesta e il valore della <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*>proprietà, per determinare se eseguire il rendering client script</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*>"
  syntax:
    content: protected virtual bool CheckRenderClientScript ();
    parameters: []
    return:
      type: System.Boolean
      description: "Valore booleano che indica se il rendering dello script client."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  id: CloseProviderWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene o imposta un avviso che viene visualizzato quando un utente chiude un controllo che funge da provider per altri controlli in una connessione."
  remarks: "Quando un utente chiude un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo, in genere viene visualizzato alcun messaggio.</xref:System.Web.UI.WebControls.WebParts.WebPart> Per ulteriori informazioni sul significato della chiusura di un controllo, vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>metodo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>       Tuttavia, quando un controllo è connesso a un altro controllo e funge da provider di dati per l&quot;altro controllo, viene visualizzato un messaggio di avviso predefinito quando un utente tenta di chiudere il controllo. Il messaggio indica gli utenti che un controllo provider è in fase di chiusura, che significa che controlla connesso al provider come utenti non saranno disponibili dati da utilizzare. La proprietà CloseProviderWarning consente agli sviluppatori di personalizzare il messaggio di avviso che viene visualizzato all&quot;utente.       Se si assegna un valore di stringa vuota o null a questa proprietà, non verrà visualizzato alcun messaggio di avviso quando un utente chiude un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo che funge da provider.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to use the CloseProviderWarning property to display a custom warning to users.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected and an `<asp:webpartmanager>` element.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need the custom user control and the source code for the custom controls mentioned above. Obtain these two items from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n The following Web page code demonstrates how to assign a custom warning message to the CloseProviderWarning property in declarative markup in the `<asp:webpartmanager>` element.  \n  \n [!code-cs[WebParts_WebPartManager_CloseProviderWarning#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_979_1.aspx)]\n [!code-vb[WebParts_WebPartManager_CloseProviderWarning#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_979_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. Finally, click the verbs menu for the **ZIP Code** control (which is the provider control in this case) and select **Close**. The custom message you assigned to the CloseProviderWarning property is displayed."
  syntax:
    content: public virtual string CloseProviderWarning { get; set; }
    return:
      type: System.String
      description: "Stringa che contiene il messaggio di avviso. Il valore predefinito è un messaggio specifico delle impostazioni cultura fornito da .NET Framework."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CloseWebPart(WebPart)
  nameWithType: WebPartManager.CloseWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Chiude un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo in modo che non viene eseguito il rendering in una pagina Web, ma possono essere riaperte."
  remarks: "Il metodo CloseWebPart rimuove una <xref:System.Web.UI.WebControls.WebParts.WebPart>o altri server di controllo in modo che non viene sottoposto a rendering della pagina Web che originalmente conteneva tale</xref:System.Web.UI.WebControls.WebParts.WebPart> Il controllo chiuso viene aggiunto a un <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>oggetto, che mantiene un riferimento al controllo chiuso e rende possibile per il controllo per il ripristino della pagina.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Un oggetto chiuso <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo viene comunque visualizzato nella raccolta a cui fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>proprietà.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Chiudere un controllo non equivale a eliminarlo. I controlli chiusi sono ancora disponibili per il ripristino a una pagina, ma un&quot;istanza di controllo eliminato viene rimosso in modo permanente e non può mai essere ripristinata. Indipendentemente dal fatto che un <xref:System.Web.UI.WebControls.WebParts.WebPart>o controllo server (dichiarato nel markup della pagina) statico o dinamico (aggiunto alla pagina a livello di codice o da un utente da un catalogo Web part), può essere chiuso e riaperto in una pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart>       In genere, gli utenti possono chiudere un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo fare clic sul menu dei verbi e selezionando il verbo di chiusura.</xref:System.Web.UI.WebControls.WebParts.WebPart> Un controllo può anche essere chiusa dal direttamente la chiamata al metodo CloseWebPart e passare un riferimento a `webPart`.       In una pagina in cui <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli sono stati chiusi, se uno sviluppatore dichiara un `<asp:catalogzone>` elemento e in esso viene aggiunto un `<asp:pagecatalogpart>` elemento, fornisce un&quot;interfaccia utente semplice (UI) per gli utenti a ripristinare i controlli chiusi alla pagina in fase di esecuzione.</xref:System.Web.UI.WebControls.WebParts.WebPart> Gli utenti possono passare la pagina in modalità di visualizzazione catalogo e i controlli chiusi verranno visualizzati all&quot;interno del catalogo di pagina. Gli utenti possono selezionare i controlli chiusi e aggiungerli nuovamente alla pagina nella posizione desiderata e quindi i controlli selezionati vengono ripristinati alla pagina e sottoposto a rendering come di consueto.       Quando viene chiamato il metodo CloseWebPart, genera vari eventi: <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>(se sono presenti più controlli) e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>(se sono presenti controlli connessi).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> In genere gli sviluppatori possono annullare questi eventi, ma in alcuni casi non è possibile annullarle. Per informazioni dettagliate, vedere la documentazione per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>, e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>eventi.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>"
  example:
  - "The following code example demonstrates how to use the CloseWebPart method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change page display modes.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the code example is the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses the dynamic compilation approach; thus there is no `Assembly` attribute in the `Register` directive for this control at the top of the Web page. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_WebPartManager_CloseWebPart#3](~/add/codesnippet/visualbasic/b26a8753-d277-40c2-ba47-_1.vb)]\n [!code-cs[WebParts_WebPartManager_CloseWebPart#3](~/add/codesnippet/csharp/b26a8753-d277-40c2-ba47-_1.cs)]  \n  \n The third part of the code example is the Web page. The page contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, with an <`asp:pagecatalogpart>` element declared within it. This is what will contain the closed <xref:System.Web.UI.WebControls.WebParts.WebPart> control and enable users to add it back to the page. The `Button1_Click` method directly calls the CloseWebPart method to close the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, although a user can also close the control through the verbs menu.  \n  \n [!code-cs[WebParts_WebPartManager_CloseWebPart#1](~/add/codesnippet/csharp/b26a8753-d277-40c2-ba47-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_CloseWebPart#1](~/add/codesnippet/visualbasic/b26a8753-d277-40c2-ba47-_2.aspx)]  \n  \n After you load the page in a browser, close the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control by clicking the verbs menu (the arrow symbol) in the header of the control, and clicking **Close**. Now change the page to catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. The page catalog appears with the closed control. Select the check box next to the closed control, click **Add** to add it to the page, and then click **Close** to return the page to browse mode. The control is restored to the page. Now close it again, this time by clicking the **Close WebPart** button."
  syntax:
    content: public void CloseWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o controllo server viene chiuso in una <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n \\- or -  \n  \n <code>webPart</code> is a shared control and has already been closed by another user."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  id: ConnectDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectDisplayMode
  nameWithType: WebPartManager.ConnectDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Rappresenta la modalità di visualizzazione utilizzata per visualizzare un&quot;interfaccia speciale utente (UI) per gli utenti di gestire le connessioni tra <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlli. Questo campo è di sola lettura."
  remarks: "Il campo ConnectDisplayMode fa riferimento a un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>oggetto che viene creato e contenuto di <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Poiché si tratta di un oggetto statico, è possibile fare riferimento ad esso direttamente tramite la <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe senza utilizzare un&quot;istanza del controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Quando gli utenti desiderano gestire le connessioni tra <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli in una pagina Web, se un <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>zona è stato dichiarato nella pagina della pagina possono passare in modalità ConnectDisplayMode.</xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> La modalità di connessione consente di visualizzare un&quot;interfaccia utente speciale per gestire le connessioni, che include la possibilità di connettere o disconnettere i controlli e modificare i dettagli delle connessioni esistenti.       Se si desidera fornire agli utenti la possibilità di gestire le connessioni con l&quot;interfaccia utente fornita dall&quot;insieme di controlli Web part, è necessario dichiarare un `<asp:connectionszone>` elemento nel markup della pagina. A differenza di altri tipi di elementi <xref:System.Web.UI.WebControls.WebParts.WebZone>zone, non è necessario aggiungere altri tag all&quot;interno dell&quot;elemento; è sufficiente dichiarare l&quot;elemento da solo.</xref:System.Web.UI.WebControls.WebParts.WebZone>"
  example:
  - "The following code example demonstrates the usage of the ConnectDisplayMode mode.  \n  \n The code example has three parts:  \n  \n-   A source file that contains an interface and custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection.  \n  \n-   A Web page that provides a connection UI and demonstrates working with the ConnectDisplayMode mode.  \n  \n-   An explanation of how to run the example.  \n  \n The first part of the code example is a source file that contains an interface and two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that are designed so they can be connected. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compilation approach. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_ConnectDisplayMode#2](~/add/codesnippet/csharp/f-system.web.ui.webcontr_1_1.cs)]\n [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#2](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_1_1.vb)]  \n  \n The second part of the example is a Web page that hosts the custom controls. Within the server `<script>` tags on the page are several methods that populate a drop-down list with the display modes available on the page. A user can select these from the drop-down list to change the page's display mode. One of the available display modes is connect display mode, because an `<asp:connectionszone>` element is declared in the page's markup. Notice that this element does not contain any other child elements; it exists only to enable the connection management UI for users.  \n  \n The ConnectDisplayMode mode appears in this example in two places. First, in the `Page_Init` method, the connect display mode is added to the drop-down list of display modes, as the code loops through the collection referenced in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> property. Second, the `Page_PreRender` method checks the current display mode on the page, and if the current mode is ConnectDisplayMode, a message is displayed in a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[WebParts_WebPartManager_ConnectDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_1_2.aspx)]\n [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_1_2.aspx)]  \n  \n After you load the page in a browser, click the drop-down list and select **Connect** to switch the page into connect display mode. Notice that a message appears, telling you that the page is in connect display mode. Now click the verbs menu (an arrow symbol) in the title bar of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and then click **Connect** in the verbs menu. After the connection UI is displayed, click the link to create a connection. Use the drop-down list within the connection UI that appears, select the other control that will participate in the connection, and click the **Connect** button. The connection is established. Click the **Close** button, and then use the drop-down list at the top of the page to return the page to browse display mode."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  id: Connections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Connections
  nameWithType: WebPartManager.Connections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene un riferimento alla raccolta di tutte le connessioni correnti in una pagina Web."
  remarks: "La proprietà connessioni fornisce un modo per accedere al set corrente di connessioni in una pagina. La raccolta è di sola lettura, gli sviluppatori che desiderano modificare una connessione specifica dalla raccolta devono utilizzare i <xref:System.Web.UI.WebControls.WebParts.WebPartManager>metodi, ad esempio <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> e</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need the custom user control and the source code for the custom controls mentioned above. Obtain these two items from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n The following Web page code demonstrates how to use the Connections property programmatically to get the count of current connections on a page. Note that in the `<script>` tag section, the code to handle two events for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control accesses the Connections property to obtain the count.  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_34_1.aspx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_34_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) displays, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. Note that a label now displays the number of connections and the number of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. If you now return to connect mode and disconnect the two controls, when you return to browse mode, the label's content should be updated and there should be no connections."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> che contiene un set di <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> oggetti."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Connections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  id: ConnectionsActivated
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectionsActivated
  nameWithType: WebPartManager.ConnectionsActivated
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica dopo che tutte le connessioni Web part corrente in una pagina non sono connessi solo, ma hanno iniziato anche la condivisione dei dati tra i controlli di consumer e provider coinvolti in ogni connessione."
  remarks: "Nel ciclo di vita delle connessioni, questo evento viene generato al termine del processo di caricamento una pagina. Si verifica anche dopo il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>evento, che indica solo che la <xref:System.Web.UI.WebControls.WebParts.WebPart>o controlli server coinvolti in una connessione specifica sono stati connessi.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> Nel caso in cui sono presenti più connessioni in una pagina, il metodo ConnectionsActivated indica che tutte le connessioni Web part valide in una pagina sono ora attivi e in grado di condividere i dati. Sapere che tutte le connessioni sono attive, gli sviluppatori possono eseguire qualsiasi numero di attività, tra cui la notifica agli utenti dello stato di tutte le connessioni, la notifica di controlli di consumer per elaborare e visualizzare i dati dai propri provider e così via.       Questo evento è associato il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>metodo che genera l&quot;evento e consente agli sviluppatori di creare gestori personalizzati per l&quot;evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>       Gli sviluppatori di pagine è possono creare un gestore per l&quot;evento personalizzato aggiungendo il `OnConnectionsActivated` attributo il `<asp:webpartmanager>` elemento nella pagina e quindi assegnare un nome di metodo personalizzato per l&quot;attributo."
  syntax:
    content: public event EventHandler ConnectionsActivated;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  id: ConnectionsActivating
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectionsActivating
  nameWithType: WebPartManager.ConnectionsActivating
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica durante il processo di attivazione di tutte le connessioni Web part stabilite in una pagina Web."
  remarks: "Nel ciclo di vita delle connessioni, questo evento si verifica quando una pagina di completamento in corso il processo di caricamento, appena prima di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>metodo viene chiamato.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> È diverso dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>evento, che implica una determinata connessione tra <xref:System.Web.UI.WebControls.WebParts.WebPart>o altri controlli server.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> L&quot;evento ConnectionsActivating si verifica quando tutte le connessioni possibili in una pagina sono state collegate e stanno per essere attivato.       L&quot;evento ConnectionsActivating è associato il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>(metodo), che genera l&quot;evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> Gli sviluppatori di controlli che desiderano estendere il tipo di connessioni che possono essere aggiunti a una pagina può eseguire l&quot;override protetto <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>(metodo) e attivare tipi aggiuntivi di connessioni.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>       Gli sviluppatori di pagine è possono creare un gestore per l&quot;evento personalizzato aggiungendo il `OnConnectionsActivating` attributo il `<asp:webpartmanager>` elemento nella pagina e quindi assegnare un nome di metodo personalizzato per l&quot;attributo."
  syntax:
    content: public event EventHandler ConnectionsActivating;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  id: ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Crea una connessione tra due <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> controlla utilizzando solo i riferimenti ai controlli e i relativi specificato <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> oggetti."
  remarks: "Questo overload viene utilizzato per connettere i controlli quando i punti di connessione sono sufficientemente compatibili che possano connettersi senza utilizzare un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>oggetto.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Quando viene chiamato l&quot;overload del metodo, semplicemente passa la chiamata all&quot;altra versione di overload del metodo e passa `null` per il parametro che richiede un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>oggetto.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>       Quando si tenta di connettere due controlli a livello di codice, è possibile utilizzare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>metodo in un controllo condizionale per determinare se i controlli possono essere connessi direttamente.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>"
  example:
  - "The following code example demonstrates how to use this method to create a connection programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. From that example, you will need the source code for the user control that allows you to change display modes on the page, and the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n The code for the Web page that hosts the two controls follows. The page uses `Register` directives at the top to declare the user control and the custom controls. The custom controls are then referenced declaratively within an `<asp:webpartzone>` element. The code that handles the `Button1_Click` method creates a connection between the controls by using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method.  \n  \n [!code-cs[WebParts_WebPartManager_ConnectWebParts1#1](~/add/codesnippet/csharp/4892fea4-8419-4966-aca7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_ConnectWebParts1#1](~/add/codesnippet/visualbasic/4892fea4-8419-4966-aca7-_1.aspx)]  \n  \n After you load the page in a browser, click the **Connect WebPart Controls** button to form the connection. You can then enter some data in the text box, and click the **Enter 5-digit ZIP Code** button to demonstrate that the controls are connected, and that data entered in the first control is updated in the second."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo con il ruolo di fornire dati a un altro controllo connesso."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "Un metodo che serve come metodo di callback per la connessione. Nell&quot;implementazione all&quot;insieme di controlli Web part, si tratta di un metodo pubblico in `provider` che è contrassegnato con un <xref uid=&quot;langword_csharp_ConnectionProvider&quot; name=&quot;ConnectionProvider&quot; href=&quot;&quot;> </xref> attributo dei metadati."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo che ha il ruolo di ricevere dati da `provider`e quindi elaborarli o visualizzarli."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "Un metodo che si connette con `providerConnectionPoint` per ricevere i dati per la connessione. Nell&quot;implementazione all&quot;insieme di controlli Web part, si tratta di un metodo pubblico in `consumer` che è contrassegnato con un <xref uid=&quot;langword_csharp_ConnectionConsumer&quot; name=&quot;ConnectionConsumer&quot; href=&quot;&quot;> </xref> attributo dei metadati."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> che contiene varie informazioni sul provider e consumer necessarie per la connessione."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> insieme di raccolte dinamiche del controllo è di sola lettura."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  id: ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Crea una connessione tra due <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> controlla utilizzando i riferimenti ai controlli, i relativi specificati <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> oggetti e un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> oggetto."
  remarks: "Questo overload viene utilizzato per connettere i controlli quando i punti di connessione sono incompatibili. L&quot;incompatibilità si verifica quando `consumer` implementa un&quot;interfaccia diversa rispetto a `provider` come punto di connessione. Il trasformatore converte i dati in un tipo che può essere riconosciuto dal `consumer`."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> che presenta il ruolo di fornire dati a un altro controllo connesso."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "Un metodo pubblico in `provider` che è contrassegnato con un <xref uid=&quot;langword_csharp_ConnectionProvider&quot; name=&quot;ConnectionProvider&quot; href=&quot;&quot;> </xref> attributo dei metadati e viene utilizzato come un metodo di callback per la connessione."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> che dispone del ruolo di ricevere dati da `provider` o `transformer`e quindi elaborarli o visualizzarli."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "Un metodo pubblico in `consumer` che è contrassegnato con un <xref uid=&quot;langword_csharp_ConnectionConsumer&quot; name=&quot;ConnectionConsumer&quot; href=&quot;&quot;> </xref> attributo dei metadati e si connette con `providerConnectionPoint` per ricevere i dati per la connessione."
    - id: transformer
      type: System.Web.UI.WebControls.WebParts.WebPartTransformer
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> che consente la connessione tra due controlli convertendo i dati da `provider` in un formato che `consumer` in grado di elaborare."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> che contiene le informazioni sul transformer necessari per la connessione, provider e consumer."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Le connessioni sono già state attivate in <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  id: Controls
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Controls
  nameWithType: WebPartManager.Controls
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene la raccolta di tutti i <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>, server o controlli utente contenuti in <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> aree in una pagina Web e gestiti dal <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo."
  remarks: "La proprietà di controlli non fa riferimento gli altri controlli a cui fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo, ad esempio i vari controlli di zona <xref:System.Web.UI.WebControls.WebParts.EditorPart>o <xref:System.Web.UI.WebControls.WebParts.CatalogPart>i controlli e altri.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Questa proprietà viene utilizzata dall&quot;insieme di controlli Web part e nella maggior parte delle situazioni di sviluppo che non deve essere chiamato dal codice. Per questo motivo, anche se la proprietà è pubblica, è nascosta da IntelliSense. Gli sviluppatori che desiderano accedere alla raccolta di <xref:System.Web.UI.WebControls.WebParts.WebPart>o altri controlli server gestiti dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo deve utilizzare il relativo <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>proprietà.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public override System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> che contiene tutti i controlli gestiti dal <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CopyWebPart(WebPart)
  nameWithType: WebPartManager.CopyWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Utilizzato dal controllo Web part per creare una copia di un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o un server di controllo per aggiungere il controllo a una pagina Web."
  remarks: "È possibile chiamare il metodo CopyWebPart direttamente dal codice. Questo metodo viene chiamato internamente dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo come parte del processo di aggiunta di un nuovo dinamico <xref:System.Web.UI.WebControls.WebParts.WebPart>o controllo server a una pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Un controllo dinamico viene aggiunto a una pagina a livello di codice o tramite l&quot;interfaccia utente Web part (UI), ad esempio da un utente aggiunge un controllo da un catalogo di controlli, anziché un controllo statico, che viene dichiarato nel markup della pagina.      > [!NOTE] > Il metodo può essere sottoposto a override in una classe derivata se gli sviluppatori che desiderano abilitare il metodo gestire scenari di copia aggiuntivi. Per informazioni dettagliate, vedere la sezione Note per gli eredi.       Quando viene aggiunto un nuovo controllo dinamico, se si tratta di un <xref:System.Web.UI.WebControls.WebParts.WebPart>(controllo), il metodo CopyWebPart restituisce una nuova istanza del controllo.</xref:System.Web.UI.WebControls.WebParts.WebPart> Se il controllo viene aggiunto un altro tipo di controllo del server (ad esempio un controllo utente, un controllo personalizzato o un controllo ASP.NET), il controllo sarà già stato incluso con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>oggetto dall&quot;insieme di controlli Web part.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Quando il metodo CopyWebPart rileva un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>che controllo, restituisce una nuova istanza del <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>controllo con una nuova istanza del controllo figlio incapsulato al suo interno.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>       Quando il metodo CopyWebPart crea una nuova copia di un controllo per restituire, ripristina anche i valori di tutte le proprietà sui valori predefiniti. Si noti che, se si desidera conservare i valori delle proprietà personalizzabili e copiarle nella nuova istanza del controllo, è necessario chiamare il <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A>metodo nonché.</xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A> Il passaggio finale svolte dal CopyWebPart consiste nel chiamare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A>per ottenere un nuovo ID per il controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A>      > [!NOTE] > Poiché il metodo ottiene un nuovo ID per un controllo copiato, deve fare affidamento su come fare riferimento a un controllo dinamico che viene aggiunto a una pagina dal relativo ID originale. È invece necessario fare riferimento nella nuova istanza del controllo restituito dal metodo."
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPart CopyWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o un server di controllo da copiare."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> da aggiungere a una pagina."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  id: CreateAvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateAvailableTransformers()
  nameWithType: WebPartManager.CreateAvailableTransformers()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Crea un set di convertitori specificati nel file di configurazione di un sito Web e li aggiunge alla raccolta di convertitori a cui fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*>proprietà.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
      description: "Raccolta di convertitori specificati nel file di configurazione di un sito Web."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: WebPartManager.CreateControlCollection()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Restituisce la raccolta di tutti i controlli gestiti dal <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo in una pagina Web. Questa classe non può essere ereditata."
  syntax:
    content: protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> costituito da tutti i diversi controlli Web part gestiti dal <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  id: CreateDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDisplayModes()
  nameWithType: WebPartManager.CreateDisplayModes()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Crea il set di tutte le possibili modalità di visualizzazione per un&quot;applicazione Web part."
  remarks: "Questo metodo crea l&quot;elenco di tutte le possibili modalità di visualizzazione, non solo le modalità di visualizzazione è supportate in una pagina particolare. Per ulteriori informazioni sulle modalità di visualizzazione supportate, vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>proprietà.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>       Per impostazione predefinita, le Web part set controllo crea le seguenti modalità da utilizzare nelle pagine Web part di visualizzazione:- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>gli sviluppatori possono creare le modalità di visualizzazione personalizzate, con o senza aree personalizzate che derivano dal <xref:System.Web.UI.WebControls.WebParts.WebZone>o <xref:System.Web.UI.WebControls.WebParts.ToolZone>classi.</xref:System.Web.UI.WebControls.WebParts.ToolZone> </xref:System.Web.UI.WebControls.WebParts.WebZone> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Per creare una modalità di visualizzazione personalizzato, è necessario ereditare la <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>(classe), e per aggiungere la modalità di visualizzazione come modalità supportata in una pagina, è necessario ereditare la <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe ed eseguire l&quot;override del metodo CreateDisplayModes.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       Quando si aggiungono le modalità di visualizzazione utilizzando il <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A>(metodo), è necessario aggiungerle nell&quot;ordine in cui si desidera che vengano visualizzati nei controlli dell&quot;interfaccia utente (ad esempio un <xref:System.Web.UI.WebControls.ListBox>controllo) che forniscono agli utenti la modalità di visualizzazione disponibili in una pagina.</xref:System.Web.UI.WebControls.ListBox> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A>"
  example:
  - "The following code example demonstrates how to use the CreateDisplayModes method.  \n  \n The code example has five parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that hosts the other controls.  \n  \n-   A user control that resides in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone on the Web page, and enables you to enter and display text in a label.  \n  \n-   A source code file that contains two controls. One is a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, and the other is a custom <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> object to add to the page's default display modes.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is the Web page. It contains two <xref:System.Web.UI.WebControls.WebParts.WebPartZone> controls, both user controls, and the custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Notice the `Register` directives at the top of the page to reference the user controls and namespace for the compiled controls.  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_1.aspx)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_1.aspx)]  \n  \n The third part of the example is the user control for entering and displaying text. It uses a <xref:System.Web.UI.WebControls.MultiView> control to create multiple views of the UI. One view appears with the `Button1` button, the other without. Notice that in the overridden `OnPreRender` method, the code checks to see whether the page is currently in the custom display mode and, if so, displays the first view of the user control, which includes the button. If the page is not in the custom display mode, for example if the page is in browse or design mode, the button is hidden.  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_2.ascx)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_2.ascx)]  \n  \n The fourth part of the example is the source file for the two custom classes. Notice that the custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overrides the CreateDisplayModes method, and that it first calls the base method to add all the default display modes, and then adds the custom display mode. The custom display mode class, `InLineEditDisplayMode`, simply inherits from <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, sets the name of the display mode in the constructor, and overrides a number of the base properties to establish the characteristics of the custom display.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#3](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_3.cs)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#3](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_3.vb)]  \n  \n To run the code example, load the page in a browser. Notice that the page is currently in browse mode, and no button is visible. Using the **Display Mode** drop-down list control, change the page to **Inline Edit Display** mode, and notice that now the `Button1` button is visible in the lower user control. Add some text, and click the button to update the control. Notice that the page display is returned to browse mode, the text you entered is now displayed, and the button is once again hidden because the page is no longer in the custom display mode."
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> che contiene tutte le modalità di visualizzazione che sono supportate."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  id: CreateDynamicConnectionID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDynamicConnectionID()
  nameWithType: WebPartManager.CreateDynamicConnectionID()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene un valore univoco che funge da ID per una connessione dinamica."
  remarks: "Il metodo CreateDynamicConnectionID genera un valore GUID e lo converte in una stringa che funge da ID univoco per una connessione. Il metodo viene chiamato ogni volta che viene creata una connessione dinamica."
  syntax:
    content: protected virtual string CreateDynamicConnectionID ();
    parameters: []
    return:
      type: System.String
      description: "Stringa che contiene un ID univoco per una connessione."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  id: CreateDynamicWebPartID(System.Type)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDynamicWebPartID(Type)
  nameWithType: WebPartManager.CreateDynamicWebPartID(Type)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera un ID univoco per un dinamico <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo."
  remarks: "Quando <xref:System.Web.UI.WebControls.WebParts.WebPart>vengono aggiunti a una pagina Web, possono essere statici (ovvero il controllo viene dichiarato nel markup della pagina) o dinamici (ovvero vengono aggiunti a livello di codice).</xref:System.Web.UI.WebControls.WebParts.WebPart> In qualsiasi scenario in cui il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo creando nuovi controlli dinamici da aggiungere alla pagina, viene chiamato questo metodo per generare un ID univoco.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Il metodo è virtuale in modo che gli sviluppatori possono eseguirne l&quot;override se desiderano fornire un&quot;implementazione personalizzata per generare l&quot;ID."
  syntax:
    content: protected virtual string CreateDynamicWebPartID (Type webPartType);
    parameters:
    - id: webPartType
      type: System.Type
      description: "Il <xref:System.Type>del controllo per il quale è stato generato un ID.</xref:System.Type>"
    return:
      type: System.String
      description: "Stringa che contiene l&quot;ID univoco per un controllo."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPartType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  id: CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateErrorWebPart(String,String,String,String,String)
  nameWithType: WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Crea un controllo speciale che viene inserito in una pagina e visualizzato per gli utenti finali, quando il tentativo di caricare o creare un dinamico <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo ha esito negativo per qualche motivo."
  remarks: "Il metodo CreateErrorWebPart viene chiamato quando la Web part insieme di controlli tenta di caricare o creare un&quot;istanza di un dinamico <xref:System.Web.UI.WebControls.WebParts.WebPart>o del controllo server non riesce per qualche motivo.</xref:System.Web.UI.WebControls.WebParts.WebPart> Il metodo crea un <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>oggetto, viene assegnato un messaggio di errore e restituisce tale</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> Il <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>controllo verrà inserito al posto del controllo non riuscito e il messaggio di errore viene visualizzato nella pagina.</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>       È possibile chiamare il metodo CreateErrorWebPart direttamente dal codice. Tuttavia, è possibile ereditare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe e il metodo di estensione.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Per informazioni dettagliate, vedere la sezione Note per gli eredi.       Gli utenti finali possono lavorare con un <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>controllare in una pagina gran parte come se fossero una normale <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> Per rimuovere il messaggio di errore, è possibile chiudere il controllo facendo clic sul verbo di chiusura, a quel punto verrà aggiunto il controllo a un <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>oggetto, come qualsiasi altro controllo chiuso.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Se un utente finale elimina un <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>controllo, il controllo server che non è riuscito a caricare verrà eliminato anche dalla pagina.</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart (string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage);
    parameters:
    - id: originalID
      type: System.String
      description: "Stringa che rappresenta l&quot;ID di controllo non riuscito. Se un <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> è coinvolta l&quot;esito negativo, l&quot;ID è l&quot;ID del controllo server figlio."
    - id: originalTypeName
      type: System.String
      description: "Stringa che rappresenta il nome del <xref:System.Type>di controllo non riuscito.</xref:System.Type> Se un <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> è coinvolta l&quot;esito negativo, il nome del tipo è il tipo del controllo server figlio."
    - id: originalPath
      type: System.String
      description: "Stringa che contiene il percorso di un controllo utente, se un <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> che contiene un elemento figlio controllo utente è coinvolto nell&quot;errore."
    - id: genericWebPartID
      type: System.String
      description: "Stringa che restituisce l&quot;ID di un <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref>, se l&quot;errore di caricamento o creare un controllo è stata interessata da tale tipo di controllo."
    - id: errorMessage
      type: System.String
      description: "Stringa che contiene il messaggio di errore da visualizzare nella pagina."
    return:
      type: System.Web.UI.WebControls.WebParts.ErrorWebPart
      description: "Un <xref href=&quot;System.Web.UI.WebControls.WebParts.ErrorWebPart&quot;> </xref> che viene inserito in una pagina al posto di un controllo che non è stato possibile caricare o creare."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  id: CreatePersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreatePersonalization()
  nameWithType: WebPartManager.CreatePersonalization()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Restituisce un oggetto di personalizzazione per contenere i dati di personalizzazione di un utente per la pagina Web corrente."
  remarks: "Il metodo CreatePersonalization restituisce un oggetto per contenere e gestire le impostazioni di personalizzazione dell&quot;utente per la pagina corrente. Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo gestisce questo oggetto.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartPersonalization
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartPersonalization&quot;> </xref> per contenere i dati di personalizzazione di un utente."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  id: CreateWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateWebPart(Control)
  nameWithType: WebPartManager.CreateWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Esegue il wrapping di un controllo server che non è un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllare con un <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> oggetto, in modo che il controllo può disporre di funzionalità Web part."
  remarks: "Il metodo CreateWebPart è il meccanismo principale per l&quot;attivazione di controlli server che non sono <xref:System.Web.UI.WebControls.WebParts.WebPart>dovranno avere la stessa funzionalità di un <xref:System.Web.UI.WebControls.WebParts.WebPart>(controllo) e quindi partecipare completamente nelle applicazioni Web part.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Tramite questo metodo, gli sviluppatori notevolmente espandere il numero di controlli server che possono essere utilizzati in un&quot;applicazione Web part, poiché praticamente qualsiasi tipo di controllo server, controlli ASP.NET standard, i controlli utente e i controlli personalizzati, è possono utilizzare.       Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo Usa anche questo metodo in due altri scenari per eseguire il wrapping di controlli server con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>oggetto.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Quando gli utenti aggiungono controlli server a una pagina utilizzando la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>il controllo, se il controllo importato non è un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo, viene chiamato il metodo CreateWebPart.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Inoltre, quando i controlli server vengono dichiarati in un formato di persistenza all&quot;interno di un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zona in una pagina Web, il metodo viene chiamato per tutti i controlli che non sono di CreateWebPart <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       Quando si aggiunge a livello di codice un controllo server a una zona, un approccio tipico consiste nell&quot;utilizzare il metodo CreateWebPart per eseguire il wrapping del controllo con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>dell&quot;oggetto e quindi chiamare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>metodo per aggiungere il controllo alla raccolta di tutti <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli della pagina, che fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>proprietà.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>"
  example:
  - "The following code example demonstrates use of the CreateWebPart method. In the `Button2_Click method`, the CreateWebPart method is called to wrap a <xref:System.Web.UI.WebControls.Calendar> control with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object before adding it to the zone.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/6552ec5d-43c0-4c29-a8a1-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/6552ec5d-43c0-4c29-a8a1-_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Un controllo server che non è un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo."
    return:
      type: System.Web.UI.WebControls.WebParts.GenericWebPart
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> che esegue il wrapping <code> control </code> e consente il funzionamento come una vera <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  id: DeleteWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene o imposta un messaggio di avviso personalizzati visualizzato agli utenti finali durante l&quot;eliminazione di un controllo."
  remarks: "Quando un utente elimina un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo, in genere viene visualizzato un messaggio di avviso predefinito.</xref:System.Web.UI.WebControls.WebParts.WebPart> L&quot;utente viene informato quando viene eliminata l&quot;istanza di un controllo, l&quot;eliminazione è permanente. Lo sviluppatore può fornire agli utenti un modo per aggiungere una nuova istanza del controllo alla pagina (ad esempio tramite un catalogo di <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli, o a livello di codice), ma verrà rimosso definitivamente l&quot;istanza corrente di un controllo che viene eliminato.</xref:System.Web.UI.WebControls.WebParts.WebPart> La finestra di dialogo che viene visualizzato l&quot;avviso include un pulsante per l&quot;utente di annullare l&quot;eliminazione, se necessario.       La proprietà DeleteWarning consente agli sviluppatori di impostare il messaggio di avviso che viene visualizzato all&quot;utente.       Se si assegna una stringa vuota (&quot;&quot;) valore di questa proprietà, non la finestra di dialogo di avviso messaggio verrà visualizzato quando un utente elimina un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > DeleteWarning la proprietà non viene visualizzato nel caso di statico <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli e controlli server.</xref:System.Web.UI.WebControls.WebParts.WebPart> I controlli statici sono controlli server che vengono dichiarati all&quot;interno di un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zona nel markup della pagina Web.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Poiché tali controlli sono statici, non possono essere eliminate, in modo che il messaggio di avviso di eliminazione non è visualizzato in questo caso. I controlli statici possono essere chiusa dall&quot;utente, ma viene aggiunto un controllo chiuso al catalogo della pagina, da cui aggiungerlo nuovamente alla pagina da un utente, mentre un controllo eliminato non può essere recuperato."
  example:
  - "The following code example demonstrates the use of the DeleteWarning property declaratively and programmatically.  \n  \n There are four parts to the code example:  \n  \n-   A user control that enables you to change page display modes.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the code example is the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses the dynamic compilation approach; thus there is no `Assembly` attribute in the `Register` directive for this control at the top of the Web page. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWarning#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_226_1.cs)]\n [!code-vb[WebParts_WebPartManager_DeleteWarning#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_226_1.vb)]  \n  \n The third part of the code example is the Web page. The page contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, with the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control declared in the zone, so that a user can add it to the page at run time. Note that only dynamic controls (controls that are added to a page programmatically or from a catalog like this one) can be deleted from a page. Static controls (controls that are declared within a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone in the markup of a page) can be closed, but never deleted. The `<asp:webpartmanager>` element declares a custom value for the DeleteWarning property by using the `DeleteWarning` attribute. The `Button1_Click` method assigns another custom value to the DeleteWarning property.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWarning#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_226_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWarning#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_226_2.aspx)]  \n  \n After you load the page in a browser, you need to add the <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page. Using the **Display Mode** drop-down list control, select catalog mode. When the catalog appears, select the check box next to the custom control, click **Add** to add it to the page, and then click **Close** to return the page to browse mode. Now that the control is visible, you can delete it. Using the **Display Mode** control again, switch the page into design mode (you cannot delete controls while the page is in browse mode). Click the verbs menu (the arrow symbol) in the header of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control, and select **Delete**. The warning that you set on the `DeleteWarning` attribute appears. Click **Cancel**. Now click the button labeled **Change Delete Warning**, which changes the property value programmatically. From the verbs menu on the control, select **Delete** again, and notice that this time the other warning message appears."
  syntax:
    content: public virtual string DeleteWarning { get; set; }
    return:
      type: System.String
      description: "Stringa che contiene il testo del messaggio di avviso. Il valore predefinito è un messaggio di avviso localizzato."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DeleteWebPart(WebPart)
  nameWithType: WebPartManager.DeleteWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Rimuove in modo permanente un&quot;istanza dinamica di un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo da una pagina Web."
  remarks: "Il metodo DeleteWebPart consente di rimuovere definitivamente il controllo rappresentato dal `webPart` parametro da una pagina. A differenza di un controllo chiuso, che viene aggiunto il <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>controllo e può essere aggiunto nuovamente alla pagina, un&quot;istanza del controllo eliminato non può essere aggiunta alla pagina.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>      > [!NOTE] > Come implementato dal controllo Web part impostata, la possibilità per gli utenti di eliminare un dinamico <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo varia a seconda dell&quot;utente e l&quot;ambito di personalizzazione, in cui il controllo è stato aggiunto a una pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart> Se il controllo viene aggiunto quando la pagina è nell&quot;ambito condiviso (da un utente che dispone di autorizzazioni), quindi il controllo non può essere eliminato dai singoli utenti quando la pagina è nell&quot;ambito di utente.       È possibile eliminare solo i controlli dinamici. I controlli dinamici vengono aggiunti a una pagina a livello di codice o dagli utenti, aggiunta di controlli da un catalogo. I controlli statici vengono aggiunti a una pagina in modo dichiarativo nel markup o persistenza. Poiché i tag dichiarativi presenti in modo permanente nel markup, i controlli statici non possono essere eliminati, ma può essere chiuso e riaperto."
  example:
  - "The following code example demonstrates how to use the DeleteWebPart method. The first time the **Add Calendar** button is clicked, the code in the event handler creates a <xref:System.Web.UI.WebControls.Calendar> control, and adds it to a zone as a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object. Because the control is added programmatically, it is a dynamic control, and therefore it can be deleted. When a user clicks the **Delete Calendar** button, the code ensures that the control exists, and then deletes it by calling the DeleteWebPart method.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/116fed0f-0c12-4700-9cde-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/116fed0f-0c12-4700-9cde-_1.aspx)]"
  syntax:
    content: public void DeleteWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Il controllo server da eliminare."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  id: DesignDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DesignDisplayMode
  nameWithType: WebPartManager.DesignDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Rappresenta la modalità di visualizzazione utilizzata per modificare l&quot;aspetto delle pagine Web che contengono i controlli Web part. Questo campo è di sola lettura."
  remarks: "Il campo DesignDisplayMode fa riferimento a un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>oggetto che viene creato e contenuto di <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Poiché si tratta di un oggetto statico, è possibile fare riferimento ad esso direttamente tramite la <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe senza utilizzare un&quot;istanza del controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Quando una pagina che contiene Web part controlli primo caricamento, viene visualizzata <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>(modalità browse) per impostazione predefinita.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Quando gli utenti desiderano modificare il layout della pagina per lo spostamento dei controlli in aree diverse o all&quot;interno delle aree corrente, è necessario per prima cosa passare il DesignDisplayMode (modalità progettazione). Nella modalità progettazione, viene visualizzata l&quot;interfaccia utente (UI) per le varie zone e gli utenti possono trascinare i controlli per modificare il layout."
  example:
  - "The following code example demonstrates how to work with the DesignDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse and design. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to DesignDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-vb[WebParts_WebPartManager_DesignDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_6_1.aspx)]\n [!code-cs[WebParts_WebPartManager_DesignDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_6_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice that the label on the page is hidden. Use the drop-down list control to switch the page to design mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisconnectWebPart(WebPart)
  nameWithType: WebPartManager.DisconnectWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Rimuove un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o server di controllo che è stata chiusa o eliminata da tutte le connessioni si trova in."
  remarks: "Il metodo DisconnectWebPart viene chiamato internamente dal controllo Web part impostato quando viene chiuso in una pagina o l&quot;eliminazione da una pagina di un controllo. In questo caso, il metodo viene chiamato per rimuovere il controllo da tutte le connessioni in cui è interessato come un consumer o provider. Se il controllo viene rimosso da qualsiasi connessione, questo metodo chiama anche il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>metodo per terminare le connessioni in cui `webPart` è stata coinvolta.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>       Quando viene chiamato il metodo DisconnectWebPart, genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> In genere questo evento può essere annullato, ma in due casi non sarà possibile annullarla. Un caso si verifica durante le richieste alla pagina, quando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>metodo viene chiamato.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Se si verifica un conflitto tra le connessioni esistenti, verrà richiamato il metodo DisconnectWebPart per chiudere una delle connessioni in conflitto in questa istanza di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>evento non può essere annullato, perché il conflitto deve essere risolto.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>       Nel secondo caso si verifica quando un <xref:System.Web.UI.WebControls.WebParts.WebPart>o controllo server che è attualmente connesso è chiuso o eliminato.</xref:System.Web.UI.WebControls.WebParts.WebPart> In questo caso, poiché il controllo viene rimosso dalla pagina, è necessario essere terminato, pertanto da progettazione non è possibile annullare la connessione di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>evento per interrompere il processo di chiusura di una connessione.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Per ulteriori informazioni, vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>"
  example:
  - "The following code example demonstrates how to use the DisconnectWebPart method. Using two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, the Web page enables you to create a connection between the controls by clicking a button, while another button enables you to disconnect the controls. If you close one of the controls while the page is in browse mode and the controls are connected, an override of the DisconnectWebPart method disconnects the closed control, ends the connection, and displays a message.  \n  \n The code example has four parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A source file containing custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part is the file containing the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that will be connected, and a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses dynamic compilation, so the `Register` directive that references these components in the Web page is declared accordingly at the top of the Web page. For a walkthrough that demonstrates compiling options, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n In the source code, notice the inherited control `MyWebPartManager` that overrides the DisconnectWebPart method. This method checks each connection in a page to see whether the control being closed participates in the connection and, if so, calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method to end the connection. This is identical to the base implementation of the method in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. The overridden method then customizes the base implementation by writing a message to the page.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/csharp/71ce8e23-5620-4b82-8ba7-_1.cs)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/visualbasic/71ce8e23-5620-4b82-8ba7-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that near the top, it contains `Register` directives to register the user control, and the dynamically compiled assembly with the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. The page has two primary methods. The `Button1_Click` method creates a connection between the controls, while the `Button2_Click` method disconnects the controls.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/csharp/71ce8e23-5620-4b82-8ba7-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/visualbasic/71ce8e23-5620-4b82-8ba7-_2.aspx)]  \n  \n After you load the page, click the **Connect** button to connect the controls. Then click the verbs menu in one of the controls (the downward arrow in the header of the control), and select **Close** from the verbs menu. When you try to close the control, the overridden method is called, the connection is ended, and the message is written to the page. If you want to reset the page to restore the closed control and experiment with other options, click the **Reset User State** link to remove personalization data and restore the page's original state."
  syntax:
    content: protected virtual void DisconnectWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo che deve essere disconnessa."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  id: DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisconnectWebParts(WebPartConnection)
  nameWithType: WebPartManager.DisconnectWebParts(WebPartConnection)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(WebPartConnection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Esegue il processo di disconnessione di controlli server che sono connessi in una pagina Web."
  remarks: "Esegue il processo completo di chiusura di una connessione tra il metodo DisconnectWebParts <xref:System.Web.UI.WebControls.WebParts.WebPart>o controlli server, quando si passa il `connection` parametro.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Questo metodo viene utilizzato per disconnettere i controlli quando si inserisce un `<asp:connectionszone>` elemento in una pagina Web, per fornire un&quot;interfaccia utente (UI) per la gestione delle connessioni. Quando una pagina è modalità di connessione (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>), esiste una connessione corrente e gli utenti possono selezionare un pulsante che chiama il metodo DisconnectWebParts per terminare la connessione.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>       È possibile chiamare il metodo DisconnectWebParts direttamente dal codice, anche se si desidera disconnettere i controlli a livello di programmazione e senza la necessità di aggiungere un `<asp:connectionszone>` elemento a una pagina."
  example:
  - "The following code example demonstrates how to use the DisconnectWebParts method. Using two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, the Web page enables you to create a connection between the controls by clicking a button, while another button enables you to disconnect the controls.  \n  \n The code example has four parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A source file containing custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part is a file containing the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that will be connected. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses dynamic compilation, so the `Register` directive that references these components in the Web page is declared accordingly at the top of the Web page. For a walkthrough that demonstrates compiling options, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/csharp/01708fce-976e-4f0e-bfeb-_1.cs)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/visualbasic/01708fce-976e-4f0e-bfeb-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that near the top, it contains `Register` directives to register the user control and the dynamically compiled assembly with the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. The page has two primary methods. The `Button1_Click` method creates a connection between the controls, and the `Button2_Click` method disconnects the controls.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/csharp/01708fce-976e-4f0e-bfeb-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/visualbasic/01708fce-976e-4f0e-bfeb-_2.aspx)]  \n  \n After you load the page, you can click the **Connect** button to connect the controls. If you enter some text in the text box control, and then click the **Enter** button, the text will be displayed in the connected control (it would not be displayed if the controls were disconnected). If you click the **Disconnect** button, the controls will be disconnected. You can verify the connection status of the controls by using the **Display Mode** drop-down list control to switch the page into **Connect** mode. After doing that, click the verbs menu (represented by an arrow) in the title bar of one of the controls, and select the **Connect** item. The connection UI is displayed; it is available because there is an `<asp:connectionszone>` element declared in the page. You can also connect and disconnect the controls from this UI."
  syntax:
    content: public virtual void DisconnectWebParts (System.Web.UI.WebControls.WebParts.WebPartConnection connection);
    parameters:
    - id: connection
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> che rappresenta la connessione tra i controlli server."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>connection</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connection</code>non è contenuto in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*> o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*> is read-only.  \n  \n \\- or -  \n  \n <code>connection</code> has already been disconnected from <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*>.  \n  \n \\- or -  \n  \n <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*> is read-only.  \n  \n \\- or -  \n  \n <code>connection</code> has already been disconnected from <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  id: DisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene o imposta la modalità di visualizzazione attiva per una pagina Web contenente i controlli Web part."
  remarks: "Una pagina che contiene i controlli Web part è sempre in uno dei numerosi possibili modalità di visualizzazione. Per informazioni dettagliate sulle modalità di visualizzazione, vedere [modalità di visualizzazione Web part pagina](~/add/includes/ajax-current-ext-md.md).       La <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe crea le modalità di visualizzazione per una pagina Web.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Utilizzo della base <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>(classe), il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo crea diversi oggetti in modalità di visualizzazione standard che possono essere utilizzati nelle pagine che contengono i controlli Web part.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Queste modalità standard sono vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>Cenni preliminari sulla classe.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo gestisce inoltre le modalità di visualizzazione per le pagine che utilizzano i controlli Web part.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Tramite la proprietà DisplayMode, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo mantiene un riferimento per la modalità di visualizzazione corrente in una pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> È inoltre possibile utilizzare la proprietà DisplayMode per passare a una pagina in diverse modalità di visualizzazione. Per un esempio di modifica delle modalità di visualizzazione in una pagina che utilizza i controlli Web part, vedere [procedura dettagliata: modifica delle modalità di visualizzazione in una pagina Web part](~/add/includes/ajax-current-ext-md.md).       Come parte di gestione della modalità di visualizzazione, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo fornisce anche eventi e gestori di eventi relativi alla modalità di visualizzazione, ad esempio il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A>(metodo) e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>metodo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Questi metodi forniscono un meccanismo per la personalizzazione del comportamento della pagina e anche per l&quot;aggiunta di una modalità di visualizzazione personalizzate."
  example:
  - "The following code example demonstrates programmatic use of the DisplayMode property. After loading the page in a browser, you can use the buttons near the bottom of the page to switch display modes. The page is in browse mode by default when it loads. If you switch to design mode, you can drag the server controls from one zone to another, or arrange two controls within one zone. If you switch to edit mode, you can click the verbs menu in the header of either of the server controls, select **Edit**, and edit the control using the provided editing user interface (UI).  \n  \n> [!NOTE]\n>  Switching among display modes in a Web Parts application is very common, and you might want to provide a consistent, reusable way to do this on all your pages that contain Web Parts controls. For an example of a user control that changes display modes and that can be reused on many pages, see [Walkthrough: Changing Display Modes on a Web Parts Page](../Topic/Walkthrough:%20Changing%20Display%20Modes%20on%20a%20Web%20Parts%20Page.md).  \n  \n [!code-cs[WebParts_WebPartManager_DisplayMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_632_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DisplayMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_632_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> che determina la modalità di visualizzazione della pagina."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> è assegnato alla proprietà dell&quot;oggetto <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=\"System.Web.UI.WebControls.WebParts.WebPartDisplayMode\"></xref> object being assigned to the property is not one of the supported display modes.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.WebControls.WebParts.WebPartDisplayMode\"></xref> object being assigned to the property is disabled."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  id: DisplayModeChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModeChanged
  nameWithType: WebPartManager.DisplayModeChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica dopo la modalità di visualizzazione corrente in una Web part è stata modificata."
  remarks: "Modalità di visualizzazione sono parte integrante delle applicazioni Web part. Quando gli utenti passano a una modalità di visualizzazione diverse in una pagina Web, la pagina spesso avrà un aspetto molto diverso, a seconda dello scopo della nuova modalità di visualizzazione. Dopo che è stata modificata una modalità di visualizzazione, potrebbero apportare determinate modifiche nell&quot;interfaccia utente (UI), ad esempio nascondere o mostrare determinati controlli, modifica dell&quot;aspetto di elementi dell&quot;interfaccia utente selezionati e così via.      > [!NOTE] > Per ulteriori informazioni sulle modalità di visualizzazione, vedere [modalità di visualizzazione Web part pagina](~/add/includes/ajax-current-ext-md.md). Per ulteriori informazioni sull&quot;utilizzo degli eventi, vedere [procedura: utilizzare eventi in un&quot;applicazione Web Form](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  id: DisplayModeChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModeChanging
  nameWithType: WebPartManager.DisplayModeChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica dopo che un utente sceglie un verbo in una pagina Web che inizia il processo di modifica a una modalità di visualizzazione diverse."
  remarks: "Modalità di visualizzazione sono parte integrante delle applicazioni Web part. Quando gli utenti passano a una modalità di visualizzazione diverse in una pagina Web, la pagina spesso avrà un aspetto molto diverso, a seconda dello scopo della nuova modalità di visualizzazione. Dopo che un utente avvia il processo di modifica a una nuova modalità di visualizzazione facendo clic su un verbo, si desidera apportare alcune modifiche nell&quot;interfaccia utente (UI) utilizzando il <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A>proprietà per determinare cosa sarà la nuova modalità di visualizzazione e modifica di conseguenza vari elementi dell&quot;interfaccia utente.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A> Un modo utile per eseguire questa operazione è per eseguire l&quot;override di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>metodo per personalizzare l&quot;interfaccia utente.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>      > [!NOTE] > Per ulteriori informazioni sulle modalità di visualizzazione, vedere [modalità di visualizzazione Web part pagina](~/add/includes/ajax-current-ext-md.md). Per ulteriori informazioni sull&quot;utilizzo degli eventi, vedere [procedura: utilizzare eventi in un&quot;applicazione Web Form](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  id: DisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene una raccolta di sola lettura di tutte le modalità di visualizzazione che sono associati un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo."
  remarks: "I riferimenti di proprietà DisplayModes tutti associati modalità di visualizzazione, al contrario del <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>proprietà, che fa riferimento solo alle modalità di visualizzazione disponibili (supportate) nella pagina corrente.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>       Due modalità di visualizzazione fornito, esplorazione e progettazione, sono sempre supportate in una pagina. Le altre tre modalità di visualizzazione, modifica, catalogo e le connessioni, sono supportate solo quando una pagina con il tipo corrispondente della zona necessaria per una modalità di visualizzazione specifica da utilizzare. Ad esempio, se la pagina contiene un <xref:System.Web.UI.WebControls.WebParts.EditorZone>della zona, la modalità di modifica visualizzata nella raccolta a cui fa riferimento la proprietà DisplayModes, ma non sarà presente nella raccolta a cui fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>proprietà.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.EditorZone>"
  example:
  - "The following code example shows the programmatic use of the DisplayModes property. The code uses this property to populate the list with all the display modes available in the Web Parts control set, even those that are not supported on the current page. In this case, the catalog and connect display modes are not supported, because their corresponding required zones are not on the page.  \n  \n The other three display modes--browse, design, and edit--are supported on the page. Edit mode is supported because the page contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> zone, while browse and design modes are always supported.  \n  \n After you load the page in a browser, you can use the drop-down list control to switch the page from browse mode to design mode, and then to edit mode. In edit mode, you can click the drop-down verbs menu in the header of one of the server controls, and select **Edit** to edit the control. Note that if you select **Catalog** or **Connect** in the drop-down list, an error page is generated.  \n  \n [!code-cs[WebParts_WebPartManager_DisplayModes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_572_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DisplayModes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_572_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> che contiene il set di <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> oggetti associati con la <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  id: DynamicConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene la raccolta di tutte le connessioni dinamiche attualmente presenti in una pagina Web."
  remarks: "Le connessioni dinamiche sono creati a livello di codice, anziché in modo statico. Connessioni statiche vengono create dichiarandoli nel markup della pagina Web Form. Le connessioni dinamiche vengono generate a livello di codice o da un utente crea una connessione tramite l&quot;interfaccia di connessione utente (UI).       La raccolta DynamicConnections, sebbene sia in sola lettura ed è possibile modificarne il contenuto, fornire l&quot;accesso a ogni oggetto di connessione dinamica.      > [!NOTE] > Per eseguire operazioni comuni, ad esempio la connessione o disconnessione <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli, gli sviluppatori devono usare i metodi pubblici nella <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe, ad esempio <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, anziché tentare di modificare direttamente gli oggetti di connessione nella raccolta DynamicConnections.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> che contiene riferimenti a tutte le connessioni dinamiche in una pagina."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  id: EditDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EditDisplayMode
  nameWithType: WebPartManager.EditDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Rappresenta la modalità di visualizzazione in cui gli utenti finali possono modificare e modificare i controlli server. Questo campo è di sola lettura."
  remarks: "Il campo EditDisplayMode fa riferimento a un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>oggetto che viene creato e contenuto di <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Poiché si tratta di un oggetto statico, è possibile fare riferimento ad esso direttamente tramite la <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe senza utilizzare un&quot;istanza del controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Quando una pagina che contiene Web part controlli primo caricamento, viene visualizzata <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>(modalità browse) per impostazione predefinita.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Quando gli utenti desiderano modificare un controllo server, è necessario per prima cosa passare il EditDisplayMode (modalità di modifica). In secondo luogo, è necessario selezionare un controllo server specifico da modificare, scegliendo il verbo di modifica nel menu dei verbi nell&quot;intestazione del controllo. Dopo il controllo è in modalità di modifica, viene visualizzata l&quot;interfaccia di modifica utente (UI) per la modifica del controllo selezionato.       Per abilitare la modalità di modifica in una pagina, la pagina deve contenere almeno un <xref:System.Web.UI.WebControls.WebParts.EditorZone>controlli zona che include uno o più di modifica forniti, ad esempio il <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>controllo o controlli di modifica personalizzati.</xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorZone>"
  example:
  - "The following code example demonstrates how to work with the EditDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse, design, and edit. To support editing, an `<asp:EditorZone>` element is in the page. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to EditDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-cs[WebParts_WebPartManager_EditDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_7_1.aspx)]\n [!code-vb[WebParts_WebPartManager_EditDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_7_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice the label on the page is hidden. Use the drop-down list control to switch the page to edit mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible. Click the **Edit** verb in the verbs menu on one of the controls, to enable editing of that specific control."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  id: EnableClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene o imposta un valore che determina se gli script sul lato client è abilitato nella pagina Web contenente un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo."
  remarks: "La proprietà EnableClientScript consente agli sviluppatori di disabilitare gli script client. È consigliabile disabilitare lo script per motivi di sicurezza client o per garantire che tutti gli utenti di una pagina avrà un&quot;esperienza utente simile, anche se utilizzano browser diversi.       È possibile disabilitare mediante l&quot;aggiunta di script client un `EnableClientScript` attributo il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>elemento in una pagina Web, come la seguente riga di codice dichiarativo: `<asp:webpartmanager id=&quot;manager&quot; runat=&quot;server&quot;` `EnableClientScript=&quot;false&quot; />` gli sviluppatori possono inoltre eliminare questa proprietà tramite l&quot;eredità dalla <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe e impostando il valore predefinito valore `false`.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>        </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Il set di controlli Web part utilizza per fornire alcuni del client di interfaccia utente (UI) e le funzionalità di personalizzazione di script client. Se si disabilita client scripting, Web part controlli continuano a funzionare, ma alcune funzionalità sono disabilitate. La possibilità di trascinare i controlli in aree diverse è disabilitata, nonché la possibilità di eseguire il rendering dei verbi in un menu elenco a discesa nella barra del titolo di un controllo (i verbi vengono invece visualizzati come collegamenti nella barra del titolo del controllo)."
  syntax:
    content: public virtual bool EnableClientScript { get; set; }
    return:
      type: System.Boolean
      description: "Valore booleano che indica se è possibile eseguire lo script client nella pagina. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene un valore che indica che l&quot;utilizzo di temi è abilitato in una pagina Web."
  remarks: "Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo esegue l&quot;override della base <xref:System.Web.UI.Control.EnableTheming%2A>proprietà per verificare che restituisca un valore di `true`.</xref:System.Web.UI.Control.EnableTheming%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Questo avviene perché le Web part insieme di controlli richiede l&quot;utilizzo di temi per il rendering delle Web part i controlli che sono controlli figlio del <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo e che costituiscono l&quot;interfaccia utente (UI) di una pagina Web.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Ad esempio, vengono utilizzati per eseguire il rendering delle varie aree e i controlli che si trovano in aree, inclusi i diversi tipi di controlli parte (i controlli che ereditano dalla <xref:System.Web.UI.WebControls.WebParts.Part>classe), controlli utente, i controlli server ASP.NET e i controlli server personalizzati.</xref:System.Web.UI.WebControls.WebParts.Part>       Anche se la proprietà EnableTheming sottoposto a override viene implementata come una proprietà di lettura/scrittura in base alle relative proprietà di base, non è possibile impostare la proprietà, perché per impostazione predefinita deve sempre restituire un valore di `true`. Se si tenta di impostare la proprietà, un <xref:System.NotSupportedException>viene generata un&quot;eccezione.</xref:System.NotSupportedException>"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "Valore booleano che indica se i temi sono abilitati. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>in tutti i casi."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "È stato effettuato un tentativo di impostare il valore della proprietà."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  id: EndWebPartConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EndWebPartConnecting()
  nameWithType: WebPartManager.EndWebPartConnecting()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Completa il processo di connessione di un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> un altro controllo."
  remarks: "Il metodo EndWebPartConnecting completa il processo di connessione un <xref:System.Web.UI.WebControls.WebParts.WebPart>un altro controllo.</xref:System.Web.UI.WebControls.WebParts.WebPart> È l&quot;equivalente di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>metodo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>       Il metodo EndWebPartConnecting garantisce che l&quot;oggetto di personalizzazione a cui fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>proprietà è modificabile, condizione necessaria perché la formazione di una connessione è a sua volta un tipo di personalizzazione.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Il metodo verifica quindi che il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>oggetto non è `null`e infine chiama la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>metodo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void EndWebPartConnecting ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il controllo a cui fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>proprietà <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  id: EndWebPartEditing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EndWebPartEditing()
  nameWithType: WebPartManager.EndWebPartEditing()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Completa il processo di modifica un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo."
  remarks: "Il metodo EndWebPartEditing completa il processo di modifica un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPart> È l&quot;equivalente di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>metodo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>       Il metodo EndWebPartEditing garantisce che l&quot;oggetto di personalizzazione a cui fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>proprietà è modificabile, che è necessario perché la modifica di un controllo è un processo che richiede le modifiche di personalizzazione.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Il metodo verifica quindi che il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>oggetto non è `null`, in modo che attualmente selezionato <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo è possibile modificare e infine chiama la <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>(metodo).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void EndWebPartEditing ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il controllo a cui fa riferimento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>proprietà <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  id: ExportSensitiveDataWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene o imposta il testo di un messaggio di avviso che viene visualizzato quando un utente tenta di esportare i dati di stato sensibili da un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo."
  remarks: "Quando un utente tenta di esportare i dati di stato sensibili da un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo, se i dati esportati provengono da un membro che è stato contrassegnato come sensibile nel codice sorgente, viene visualizzato un messaggio di avviso all&quot;utente in una finestra di messaggio che informa che i dati sensibili da esportare e fornisce la possibilità di annullare l&quot;esportazione.</xref:System.Web.UI.WebControls.WebParts.WebPart> Gli sviluppatori possono contrassegnare i dati di un membro impostando il `isSensitive` parametro del `[Personalizable]` attributo `true` sul membro. Per ulteriori informazioni su questo attributo e un parametro, vedere la <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>classe.</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>      > [!IMPORTANT] > Quando si utilizza la funzionalità di esportazione di Web part, i dati sensibili possono essere potenzialmente esportati a utenti non autorizzati. Per informazioni dettagliate su come proteggersi da questa minaccia, vedere [protezione delle pagine Web part](~/add/includes/ajax-current-ext-md.md).       Ogni volta che gli utenti tentano di esportazione, viene visualizzato il messaggio predefinito. Assegnando un valore alla proprietà ExportSensitiveDataWarning, tuttavia, è possibile fornire un messaggio di avviso personalizzati."
  example:
  - "The following code example demonstrates the declarative use of the ExportSensitiveDataWarning property.  \n  \n The code for the following Web page uses a standard <xref:System.Web.UI.WebControls.BulletedList> control and places it in a zone. The control will be wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control at run time, which enables it to act as a true <xref:System.Web.UI.WebControls.WebParts.WebPart> control. To make the control exportable, an `ExportMode` attribute is added to the `<asp:bulletedlist>` element, and the attribute value is set to <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>, which means that both sensitive and non-sensitive data can be exported. Note also that in the `<asp:webpartmanager>` element, the `ExportSensitiveDataWarning` attribute is assigned a custom value.  \n  \n Note that for the code example to work, there is a setting you must add in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n [!code-vb[WebParts_WebPartManager_ExportSensitiveData#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1033_1.aspx)]\n [!code-cs[WebParts_WebPartManager_ExportSensitiveData#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1033_1.aspx)]  \n  \n After you load the page in a browser, click the verbs menu (represented by a downward arrow) in the title bar of the control that contains the links. In the verbs menu, select **Export**, and notice that a message box appears with the custom warning. If you want to continue with the export, click **OK**, which will allow you to save a local copy of an XML description file with all the data about the control."
  syntax:
    content: public virtual string ExportSensitiveDataWarning { get; set; }
    return:
      type: System.String
      description: "Stringa che contiene il messaggio di avviso. Il messaggio predefinito è un valore specifico delle impostazioni cultura fornito da .NET Framework."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  id: ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ExportWebPart(WebPart,XmlWriter)
  nameWithType: WebPartManager.ExportWebPart(WebPart,XmlWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(WebPart,XmlWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Crea un file di descrizione XML che contiene i dati di stato e proprietà per un controllo server."
  remarks: "Il metodo ExportWebPart assembla vari dati di stato e di proprietà da `webPart` in un file XML. I dati includono informazioni sul controllo, compresi i dati di stato, assembly e dati della proprietà. L&quot;utente che avvia l&quot;esportazione è possibile salvare il file XML su disco nel computer locale o in rete. Altri utenti possono quindi importare il file di descrizione in una pagina diversa o un sito Web e applicare i dati di stato e di proprietà a un&quot;istanza diversa di `webPart`. Fornisce un meccanismo rapido e semplice per gli utenti di condividere e riutilizzare le impostazioni dei controlli server e fornisce inoltre agli sviluppatori un mezzo per controllare l&quot;aspetto e il comportamento dei controlli esportati e importati.       Proprietà `webPart` non vengono esportati per impostazione predefinita. Per abilitare l&quot;esportazione di una proprietà, è necessario contrassegnarlo con il `[Personalizable]` attributo nel codice sorgente. È anche possibile contrassegnare una proprietà esportabile come contenente dati sensibili, impostando il `isSensitive` parametro il `[Personalizable]` attributo `true`. Per impostazione predefinita, `isSensitive` è `false`. Gli sviluppatori possono impostare il parametro `true` per indicare che i dati sensibili.       Per abilitare `webPart` per l&quot;esportazione, lo sviluppatore imposta relativo <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>al valore della proprietà <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>(che include tutte le proprietà personalizzabili e sensibili), o a <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>, che consente di esportare tutti gli elementi tranne le proprietà sensibili.</xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> </xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> </xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>      > [!IMPORTANT] > Consentire agli utenti di esportare i dati da controlli e per importare dati in altri controlli, comporta alcuni rischi di protezione. Gli sviluppatori devono utilizzare l&quot;approccio illustrato in precedenza per proteggere dati riservati e se si desidera evitare il rischio di esposizione dei dati, dovranno non abilitare l&quot;esportazione in `webPart` affatto. Per informazioni dettagliate sui problemi di sicurezza di Web part, vedere [protezione delle pagine Web part](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual void ExportWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Xml.XmlWriter writer);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Il controllo da cui saranno esportati i dati."
    - id: writer
      type: System.Xml.XmlWriter
      description: "Un <xref:System.Xml.XmlWriter>che scrive i dati esportati da `webPart` in un file di descrizione XML.</xref:System.Xml.XmlWriter>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not contained in the collection of controls referenced in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode*> property of <code>webPart</code> is set to a value of <xref href=\"System.Web.UI.WebControls.WebParts.WebPartExportMode\"></xref>, which means that export is disabled for <code>webPart</code>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  id: Focus
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Focus()
  nameWithType: WebPartManager.Focus()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Sottoposto a override per impedire che lo stato attivo viene sempre impostata sul <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllare, perché non contiene alcuna interfaccia utente (UI)."
  remarks: "Il metodo lo stato attivo esegue l&quot;override della base <xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName>(metodo) e genera un&quot;eccezione se il chiamante chiama il metodo.</xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName> Poiché il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo non dispone di alcuna interfaccia utente e non è mai visibile agli utenti, è possibile non consentire mai lo stato attivo deve essere impostato su se stesso.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public override void Focus ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Focus*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Un chiamante tenta di chiamare il metodo lo stato attivo, che non è supportato in un controllo che non include interfaccia utente."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetConsumerConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetConsumerConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Recupera la raccolta di <xref href=&quot;System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&quot;> </xref> gli oggetti che possono fungere da punti di connessione da un server di controllano che funge da consumer all&quot;interno di una connessione Web part."
  remarks: "Sempre una connessione Web part richiede esattamente due controlli, uno che funge da provider di dati, l&quot;altro che funge da consumer di dati. Ogni controllo deve avere uno o più metodi che sono definiti come punti di connessione. Nel caso di un controllo utente, i relativi punti di connessione sono <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>oggetti.</xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> Il recupero dei punti di connessione consumer, è necessario stabilire una connessione Web part.       Un consumer deve sempre disporre di almeno un punto di connessione per essere in grado di stabilire una connessione. Il metodo GetConsumerConnectionPoints controlla un controllo consumer e recupera una raccolta di tutti i relativi punti di connessione. Se un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo non dispone di alcun punto di connessione, il metodo restituisce una raccolta vuota.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to use the GetConsumerConnectionPoints method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see the topic [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property. Note that the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection> object that is retrieved by using the GetConsumerConnectionPoints method is then passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method to determine whether a connection between the two controls can be created.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/02749d07-cefa-48e1-9ad7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/02749d07-cefa-48e1-9ad7-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. You can obtain this code, and instructions for compiling it, from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Un controllo server che funge da consumer in una connessione."
    return:
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection&quot;> </xref> che contiene tutti i punti di connessione consumer."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  id: GetCurrentWebPartManager(System.Web.UI.Page)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetCurrentWebPartManager(Page)
  nameWithType: WebPartManager.GetCurrentWebPartManager(Page)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(Page)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Recupera un riferimento all&quot;istanza corrente del <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo in una pagina."
  remarks: "Il metodo GetCurrentWebPartManager è utile nei contesti in cui si desidera recuperare un riferimento all&quot;oggetto corrente <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> È di uno scenario comune in cui questa situazione si verifica se si scrive un controllo personalizzato che non è possibile sapere quali l&quot;ID di durante lo sviluppo di <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo nella relativa pagina saranno.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > GetCurrentWebPartManager il metodo è statico, pertanto è possibile chiamarlo direttamente senza la necessità di un&quot;istanza di un <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Alcuni controlli Web part insieme di controlli, ad esempio <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli, dispongono di un <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>proprietà che è possibile recuperare un riferimento all&quot;oggetto corrente <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> Di conseguenza, quando si utilizzano tali controlli, utilizzare questa proprietà per recuperare un riferimento.       Se si esegue la codifica in un contesto in cui si conosce l&quot;ID di <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo, ad esempio la scrittura di codice inline all&quot;interno di una pagina Web, è più semplice ed efficace per fare riferimento direttamente al <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo utilizzando il relativo ID.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to use the GetCurrentWebPartManager method. The example has two parts: a custom server control, and a Web page that hosts the control.  \n  \n The custom <xref:System.Web.UI.WebControls.Label> control uses the GetCurrentWebPartManager method to retrieve the ID of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control on the current page, and then displays the ID.  \n  \n [!code-cs[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/add/codesnippet/csharp/42edcc7a-0f38-4926-86e7-_1.cs)]\n [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/add/codesnippet/visualbasic/42edcc7a-0f38-4926-86e7-_1.vb)]  \n  \n The following code example provides the Web page that hosts the control in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone.  \n  \n [!code-cs[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/add/codesnippet/csharp/42edcc7a-0f38-4926-86e7-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/add/codesnippet/visualbasic/42edcc7a-0f38-4926-86e7-_2.aspx)]  \n  \n After you load the page in a browser, notice that the ID of the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control is displayed within the custom <xref:System.Web.UI.WebControls.Label> control."
  syntax:
    content: public static System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager (System.Web.UI.Page page);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "La pagina Web che contiene un&quot;istanza di <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref>."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManager
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> che fa riferimento l&quot;istanza corrente del controllo in una pagina."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>page</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetDisplayTitle(WebPart)
  nameWithType: WebPartManager.GetDisplayTitle(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene una stringa contenente il valore per il <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>proprietà di un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>"
  remarks: "Ottiene il valore calcolato della <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>proprietà `webPart`.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> Quando gli sviluppatori assegnano un valore per il <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>proprietà di un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo, questo metodo produce il valore da visualizzare come titolo.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> Il valore calcolato per i controlli senza nome è costituito da un numero aggiunto a una stringa, con il numero che indica la sequenza di un controllo all&quot;interno della zona corrente."
  syntax:
    content: protected virtual string GetDisplayTitle (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Il controllo per il quale il metodo restituisce il valore del <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>"
    return:
      type: System.String
      description: "Stringa che contiene il valore calcolato della <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>per <code> webPart </code>.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code>non si trova nel <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> insieme."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetExportUrl(WebPart)
  nameWithType: WebPartManager.GetExportUrl(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene il percorso virtuale relativo e la stringa di query che fanno parte della richiesta quando un utente tenta di esportare un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo."
  remarks: "Il valore restituito dal metodo GetExportUrl è un percorso virtuale relativo al percorso del server della pagina che contiene il controllo e il valore di stringa di query che forma la richiesta di esportazione inviata al server. Il metodo GetExportUrl codifica la stringa prima di consentire alla richiesta da inviare, per proteggersi da attacchi di uno script dannoso.      > [!NOTE] > Per ulteriori informazioni sulla protezione di applicazioni Web part, vedere [protezione delle pagine Web part](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string GetExportUrl (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> in fase di esportazione."
    return:
      type: System.String
      description: "Stringa che contiene il percorso virtuale relativo e la query di stringhe che formano la richiesta di esportazione di un controllo."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  id: GetGenericWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetGenericWebPart(Control)
  nameWithType: WebPartManager.GetGenericWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene un riferimento all&quot;istanza del <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> controllo che contiene un controllo server."
  remarks: "In generale, esistono due categorie di controlli che gli sviluppatori di inserire in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zone per partecipare alle applicazioni Web part: <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli che ereditano dalla <xref:System.Web.UI.WebControls.WebParts.WebPart>classe di base e altri controlli server, che possono essere controlli ASP.NET standard, i controlli personalizzati o controlli utente.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Quando uno di questi controlli viene posizionato in un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zona, assume la funzionalità di un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Oggetto <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo dispone di per sé questa funzionalità, ma non altri tipi di controlli server.</xref:System.Web.UI.WebControls.WebParts.WebPart> Per abilitare gli altri controlli server di agire come <xref:System.Web.UI.WebControls.WebParts.WebPart>Controlla quando vengono inseriti un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zona, ASP.NET esegue il wrapping con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>controllo.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> Poiché il <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>controllo eredita direttamente il <xref:System.Web.UI.WebControls.WebParts.WebPart>(classe), fornisce i controlli figlio con le funzionalità Web part true.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>       Spesso in fase di esecuzione, gli sviluppatori di pagina potrebbero essere necessario recuperare un riferimento al <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>controllo contenente uno dei controlli server in una zona.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Il metodo GetGenericWebPart consente loro di recuperare un riferimento di <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>controllo.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart>"
  example:
  - "The following code example demonstrates the use of the GetGenericWebPart method. The code example contains a <xref:System.Web.UI.WebControls.Calendar> control declared within a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone. The `Button1_Click` method first prints the ID of the <xref:System.Web.UI.WebControls.Calendar> control to a label, and then uses the GetGenericWebPart method to retrieve a reference to the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control that wraps the calendar. The ID of the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control, and the ID of its child control (which is the <xref:System.Web.UI.WebControls.Calendar> control), are both printed to a second label.  \n  \n [!code-cs[WebParts_WebPartManager_GetGenericWebPart#1](~/add/codesnippet/csharp/d656242f-a1d2-490c-85d4-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_GetGenericWebPart#1](~/add/codesnippet/visualbasic/d656242f-a1d2-490c-85d4-_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Un controllo server esistente in un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> e viene incluso come controllo figlio di un <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> in fase di esecuzione."
    return:
      type: System.Web.UI.WebControls.WebParts.GenericWebPart
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> che esegue il wrapping <code> control </code> come controllo figlio. Il metodo restituisce <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se <code> control </code> non è inclusa in un <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetProviderConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetProviderConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Recupera la raccolta di <xref href=&quot;System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&quot;> </xref> gli oggetti che possono fungere da punti di connessione da un server di controllano che funge da provider all&quot;interno di una connessione Web part."
  remarks: "Sempre una connessione Web part richiede esattamente due controlli, uno che funge da provider di dati, l&quot;altro che funge da consumer di dati. Ogni controllo deve avere uno o più metodi che sono definiti come punti di connessione. Nel caso di un controllo provider, i relativi punti di connessione sono <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>oggetti.</xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>       Un provider deve sempre disporre di almeno un punto di connessione per essere in grado di stabilire una connessione. Il metodo GetProviderConnectionPoints controlla un controllo provider e recupera una raccolta di tutti i relativi punti di connessione. Il recupero dei punti di connessione del provider, è necessario stabilire una connessione Web part."
  example:
  - "The following code example demonstrates how to use the GetProviderConnectionPoints method.  \n  \n The example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property. Note that the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection> object that is retrieved by using the GetProviderConnectionPoints method is then passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method to determine whether a connection between the two controls can be created.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/7aa405f8-9f90-4b6f-8d66-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/7aa405f8-9f90-4b6f-8d66-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. You can obtain this code, and instructions for compiling it, from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Un controllo server che funge da provider in una connessione."
    return:
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection&quot;> </xref> che contiene tutti i punti di connessione del provider."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  id: ImportWebPart(System.Xml.XmlReader,System.String@)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ImportWebPart(XmlReader,String)
  nameWithType: WebPartManager.ImportWebPart(XmlReader,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(XmlReader,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Importa un file di descrizione XML che contiene i dati di stato e proprietà per un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllare e applica i dati al controllo."
  remarks: "Il metodo ImportWebPart Importa un file di descrizione XML che è stato creato con il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>metodo per un controllo server.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> Non è il controllo effettivo del server che verrà importato, ma solo il file di descrizione contenente dati di stato e di proprietà sul controllo. Il controllo e l&quot;assembly a cui fa riferimento nel file di descrizione deve essere già disponibili nel server in cui un utente tenta di importare il file di descrizione.       Per abilitare l&quot;importazione di un controllo, uno sviluppatore deve aggiungere un <xref:System.Web.UI.WebControls.WebParts.CatalogZone>controllo nella pagina in cui l&quot;importazione verrà abilitata.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> All&quot;interno della zona, un <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>controllo deve essere aggiunto.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Questo controllo fornisce una finestra di dialogo che consente agli utenti di individuare il file di descrizione da importare.       Dopo che un utente consente di individuare un file di descrizione e ha iniziato l&quot;importazione, il file di descrizione viene letto dal metodo ImportWebPart. Se non sono presenti errori e se l&quot;assembly e il controllo non viene trovati, il controllo server viene aggiunto al catalogo all&quot;interno di <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>controllo e i dati dello stato e di proprietà specificati nel file di descrizione vengono applicati al controllo.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> L&quot;utente può selezionare il controllo e aggiungerlo alla pagina.      > [!IMPORTANT] > Come il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>metodo, il metodo ImportWebPart presenta alcuni potenziali rischi di protezione.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> Perché implica l&quot;importazione di dati in un sito Web, un utente malintenzionato può provare a inserire i dati errati o script nel file di descrizione che viene importato. Quindi i dati errati possono apparire in una pagina o in un database o è stato possibile eseguire lo script. Per una panoramica sui potenziali rischi associati all&quot;importazione di file di descrizione e metodi per evitare tali rischi, vedere [protezione delle pagine Web part](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPart ImportWebPart (System.Xml.XmlReader reader, out string errorMessage);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>che legge i dati di stato e di proprietà dal file di descrizione XML che si sta importando.</xref:System.Xml.XmlReader>"
    - id: errorMessage
      type: System.String
      description: "Oggetto <xref:System.String>che viene visualizzata all&quot;utente se viene rilevato un errore durante l&quot;importazione.</xref:System.String>"
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> (o un controllo server che è stato eseguito il wrapping un <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> e quindi considerato come un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>) a cui fa riferimento nel file di descrizione XML importato."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: "<code>reader</code> could not read the file.  \n  \n \\- or -  \n  \n <code>reader</code> needed to display an import error message but did not find one in the file.  \n  \n \\- or -  \n  \n <code>reader</code> reached the end of the file without finding the XML element that contains the exported data."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  id: Internals
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Internals
  nameWithType: WebPartManager.Internals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene un riferimento di <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref> (classe), che viene usato per combinare e separare un set di metodi che vengono effettivamente implementati nel <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> classe, ma sono soprattutto utili per gli sviluppatori di controlli."
  remarks: "La proprietà di elementi interni espone l&quot;API per la chiamata in un set di <xref:System.Web.UI.WebControls.WebParts.WebPartManager>metodi che vengono utilizzati soprattutto nei casi di estendibilità.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Sono progettati per i metodi interni di accedervi tramite la proprietà di elementi interni. Poiché la proprietà è protetta, è possibile solo accedervi e chiamare i metodi all&quot;interno di un&quot;istanza della <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>classe ereditando dalla <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>      > [!NOTE] > Questa proprietà è nascosta da IntelliSense in [!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]. Tuttavia, in un oggetto derivato <xref:System.Web.UI.WebControls.WebParts.WebPartManager>(classe), è comunque possibile accedere la proprietà e i relativi membri diversi.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref>, tramite il quale un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> possono fare riferimento i vari metodi che sono stati separati nel <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Internals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  id: IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsAuthorized(WebPart)
  nameWithType: WebPartManager.IsAuthorized(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Esegue i passaggi iniziali per determinare se un controllo è autorizzato a essere aggiunto a una pagina."
  remarks: "Il metodo IsAuthorized è il metodo iniziale chiamato dal controllo Web part impostato per verificare le autorizzazioni per un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPart> Accetta `webPart` come parametro e avvia un processo per la determinazione se il controllo verrà aggiunto a una pagina. Chiamare questo metodo direttamente dal codice quando è necessario determinare se un determinato controllo è stato autorizzato.       Questo metodo esegue l&quot;attività iniziali per determinare se il controllo eredita la <xref:System.Web.UI.WebControls.WebParts.WebPart>classe oppure è un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>di controllo e, in tal caso, il tipo di controllo figlio contiene.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Per completare l&quot;attività di autorizzazione, viene chiamato il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>overload di metodo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>"
  example:
  - "The following code example demonstrates how to call the IsAuthorized method from your code to determine whether a control is authorized to be added to a page.  \n  \n The code example has three parts:  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control that overrides the IsAuthorized method.  \n  \n-   A Web page that creates a filter for a <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   An explanation of how to run the code example.  \n  \n This code example uses a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control that overrides the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload method to provide custom handling of the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property. This control checks for a property value of `admin` and, if the value is present, authorizes the control. If a control has a different value, it is not authorized; controls without the property value are authorized as well, as they are presumed not to be part of the filtering scenario.  \n  \n For this code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compile method. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/csharp/9c13e351-e761-4514-8860-_1.cs)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/visualbasic/9c13e351-e761-4514-8860-_1.vb)]  \n  \n The second part of the code example creates a filter that can potentially exclude a control. The following Web page contains three ASP.NET server controls in an `<asp:webpartzone>` element. Notice that the first and second controls have their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties set to different values, and the third does not assign the property. This authorization value can be checked at run time, and the control can be added to the page if the filter matches criteria set by the developer. Notice also that in the `Page_Load` method, the code calls the IsAuthorized method to determine whether each of the controls is authorized, and if so, it sets each control's <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> property.  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/csharp/9c13e351-e761-4514-8860-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/visualbasic/9c13e351-e761-4514-8860-_2.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page in a browser, note that the first control is displayed, because it matches the criteria in the overridden method. The second control is not added to the page, because it is excluded by the filter. The third control is also added, because it does not have its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property set. Notice that if you click the verbs menu icon in the title bar of either control, they can both be exported because their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> property values were assigned."
  syntax:
    content: public bool IsAuthorized (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o un altro controllo server viene verificata l&quot;autorizzazione."
    return:
      type: System.Boolean
      description: "Un valore booleano che indica se <code> webPart </code> possono essere aggiunti a una pagina."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  id: IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsAuthorized(Type,String,String,Boolean)
  nameWithType: WebPartManager.IsAuthorized(Type,String,String,Boolean)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Esegue i passaggi finali della determinazione delle autorizzazioni di un controllo da aggiungere a una pagina."
  remarks: "Il metodo di overload IsAuthorized esegue i passaggi finali della determinazione delle autorizzazioni di un controllo da aggiungere a una pagina. Il metodo assicura che `type` è un tipo valido e che `path` ha un valore solo se il controllo viene verificato è un controllo utente. Viene quindi chiamato critici <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>metodo, che genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>"
  example:
  - "The following code example demonstrates how to override the IsAuthorized method to determine whether a control is authorized to be added to a page.  \n  \n The first step is to create a filter that can potentially exclude a control. The following Web page contains three ASP.NET server controls in an `<asp:webpartzone>` element. Notice that the first and second controls have their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties set to different values, and the third does not assign the property. This authorization value can be checked at run time, and the control can be added to the page if the filter matches criteria set by the developer.  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/csharp/c3cfcde3-abf1-45f3-ace8-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/visualbasic/c3cfcde3-abf1-45f3-ace8-_1.aspx)]  \n  \n The second step is to override the IsAuthorized method, and create custom handling for authorization filters. Note that the code first checks whether the property has a value, so that any control that does not assign the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property will be added automatically. If a control has a filter, the code returns `true` only if the filter value is equal to `admin`. This demonstrates a simple mechanism you can use for displaying certain controls to certain users, depending on their role. While a full example using roles is beyond the scope of this topic, you could use the same logic as the overridden method in this code example, except that you could check whether the current user is in a role that matches the authorization filter value, and then add the control only for that user. This would enable you to create pages where some users would see all the controls, and other users would see only selected controls. This is how the logic that checks the filter might look if you used roles:  \n  \n [Visual Basic]  \n  \n```  \nIf Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter) Then  \n  return True  \nElse  \n  return False  \nEnd If  \n```  \n  \n [C#]  \n  \n```  \nif(Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter))  \n    return true;  \nelse  \n    return false;  \n```  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compile method. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/csharp/c3cfcde3-abf1-45f3-ace8-_2.cs)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/visualbasic/c3cfcde3-abf1-45f3-ace8-_2.vb)]  \n  \n After you load the page in a browser, note that the first control is displayed, because it matches the criteria in the overridden method. The second control is not added to the page, because its filter value is excluded. The third control is added, because it does not have its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property set. If you change the property value on the second control to match that of the first control, and then run the page again, the second control is added as well."
  syntax:
    content: public virtual bool IsAuthorized (Type type, string path, string authorizationFilter, bool isShared);
    parameters:
    - id: type
      type: System.Type
      description: "Il <xref:System.Type>del controllo viene verificato l&quot;autorizzazione.</xref:System.Type>"
    - id: path
      type: System.String
      description: "Il percorso relativo dell&quot;applicazione al file di origine per il controllo di autorizzazione, se il controllo è un controllo utente."
    - id: authorizationFilter
      type: System.String
      description: "È assegnato un valore di stringa arbitraria di <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*>proprietà di un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo, utilizzato per verificare se un controllo può essere aggiunto a una pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*>"
    - id: isShared
      type: System.Boolean
      description: "Indica se il controllo viene verificato l&quot;autorizzazione è un controllo condiviso, vale a dire che è visibile a tutti gli utenti dell&quot;applicazione e il relativo <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared*>proprietà è impostato su <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared*>"
    return:
      type: System.Boolean
      description: "Valore booleano che indica se un controllo è autorizzato a essere aggiunto a una pagina."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code> is a user control, and <code>path</code> is either <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\").  \n  \n \\- or -  \n  \n <code>type</code> is not a user control, and <code>path</code> has a value assigned to it."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  id: IsCustomPersonalizationStateDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene un valore che indica se sono state apportate modifiche di personalizzazione che hanno effetto sui dettagli di personalizzazione a livello di pagina applicando il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo."
  remarks: "Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo utilizza la proprietà IsCustomPersonalizationStateDirty internamente per rilevare se i dati di personalizzazione a livello di pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> I dati di personalizzazione viene modificato quando gli utenti eseguono azioni a livello di pagina, ad esempio aggiungendo o rimuovendo <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli, la connessione o disconnessione di controlli, la modifica del layout della pagina spostando i controlli e altre azioni.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > Gli utenti possono anche eseguire la personalizzazione a livello di controllo, ovvero apportare modifiche di personalizzazione di un controllo specifico e le modifiche interessano solo il controllo. Un esempio la modifica del controllo e modifica il testo del titolo o il colore di sfondo. Personalizzazione a livello di controllo non interessano i dati di personalizzazione a livello di pagina rilevati dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager>(controllo), e il valore della proprietà IsCustomPersonalizationStateDirty non è stato modificato in `true` quando si verifica la personalizzazione a livello di controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Anche se il metodo è protetto e non essere accessibile direttamente da un chiamante, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>proprietà è accessibile direttamente dai chiamanti, e restituisce il valore di questa proprietà.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>"
  syntax:
    content: protected virtual bool IsCustomPersonalizationStateDirty { get; }
    return:
      type: System.Boolean
      description: "Valore booleano che indica se sono state apportate modifiche di personalizzazione. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: WebPartManager.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Carica controllare i dati di stato che è stati salvati da una richiesta di pagina precedente e devono essere ripristinato su una richiesta successiva."
  remarks: "Il metodo è utile per ripristinare i dati della proprietà che devono essere mantenuti durante i postback della pagina e di LoadControlState anche quando il <xref:System.Web.UI.Control.EnableViewState%2A>è impostata su `false`.</xref:System.Web.UI.Control.EnableViewState%2A>"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Contiene i dati dello stato persistente da caricare."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>savedState</code>non è un valido <xref:System.Web.UI.PageStatePersister.ControlState*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: LoadCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Archivia i dati di personalizzazione che sono stati passati al <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo dagli oggetti di personalizzazione da utilizzare in un secondo momento durante il processo di inizializzazione."
  remarks: "Il metodo LoadCustomPersonalizationState fornisce i dati di stato salvato nel formato di un <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>oggetto.</xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> Questi dati viene utilizzati per caricare i dati di personalizzazione nei controlli Web part ed eseguire altre attività di inizializzazione.      > [!NOTE] > Questo metodo viene chiamato da una sequenza di metodi che inizia quando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A>metodo richiede inizialmente associato <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>oggetto per fornire i dati sulla personalizzazione di <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A>       È possibile chiamare questo metodo direttamente dal codice. Tuttavia, è possibile chiamare direttamente il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>(metodo), che a sua volta chiama il metodo LoadCustomPersonalizationState e restituisce i dati di personalizzazione.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>"
  syntax:
    content: protected virtual void LoadCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> che contiene i dati dello stato da caricare."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  id: MediumPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene un <xref href=&quot;System.Security.PermissionSet&quot;> </xref> oggetto che consente solo <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> autorizzazione e <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> autorizzazione."
  remarks: "Il <xref:System.Security.PermissionSet>oggetto restituito da questa proprietà viene utilizzata durante l&quot;importazione per la deserializzazione di tipo.</xref:System.Security.PermissionSet>"
  syntax:
    content: protected virtual System.Security.PermissionSet MediumPermissionSet { get; }
    return:
      type: System.Security.PermissionSet
      description: "Oggetto <xref href=&quot;System.Security.PermissionSet&quot;> </xref> oggetto che consente solo <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> autorizzazione e <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> autorizzazione."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  id: MinimalPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene un <xref href=&quot;System.Security.PermissionSet&quot;> </xref> oggetto che consente solo <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> autorizzazione e <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> autorizzazione."
  remarks: "Il <xref:System.Security.PermissionSet>oggetto restituito da questa proprietà viene utilizzata durante l&quot;importazione per tutte le funzioni ad eccezione del fatto digitare la deserializzazione.</xref:System.Security.PermissionSet>"
  syntax:
    content: protected virtual System.Security.PermissionSet MinimalPermissionSet { get; }
    return:
      type: System.Security.PermissionSet
      description: "Ottiene un <xref href=&quot;System.Security.PermissionSet&quot;> </xref> oggetto che consente solo <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> autorizzazione e <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> autorizzazione."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  id: MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MoveWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Sposta un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o controllo del server da una <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona a un&quot;altra, o una nuova posizione all&quot;interno della stessa area."
  remarks: "Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo utilizza il metodo MoveWebPart per spostare `webPart` in una nuova posizione nella stessa area o in un&quot;area diversa.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> È possibile chiamare questo metodo direttamente dal codice e viene anche richiamato quando un utente si sposta un controllo in una nuova posizione utilizzando diverse opzioni nell&quot;interfaccia utente Web part (UI).       Una serie di condizioni deve essere soddisfatti prima `webPart` possono essere spostati, e la maggior parte di questi elementi sono indicata da elementi elencati nella sezione eccezioni di questo argomento. Se `webPart` non è contenuto un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zona prima di tutto, non può essere spostato in una zona.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       Le condizioni, la sequenza di azioni seguente si verifica per spostare `webPart`: 1.  Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>metodo genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>      2.  `webPart`viene rimosso dall&quot;area corrente (se necessario) e aggiunto alla nuova area o nella nuova posizione all&quot;interno della relativa area.      3.  Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>metodo genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>      4.  Il `zoneIndex` di ogni <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo nelle aree di origine e di destinazione viene reimpostato per riflettere lo spostamento del controllo.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to call the MoveWebPart method directly from code to move a <xref:System.Web.UI.WebControls.WebParts.WebPart> control from one zone to another.  \n  \n The code example has three parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how to run the code example.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is a Web page that contains two zones, each of which contains two server controls. When a user clicks the **Move WebPart** button on the page, the code in the `Button1_Click` method moves a control from the first zone to a new position in the second zone. Notice that the code first must call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> method to retrieve the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object that wraps the `list1` control. This is required because the first parameter of the MoveWebPart method requires a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, whereas `list1` is an ASP.NET server control.  \n  \n [!code-cs[WebParts_WebPartManager_MoveWebPart#1](~/add/codesnippet/csharp/49caf3f6-e63d-4133-bdf2-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_MoveWebPart#1](~/add/codesnippet/visualbasic/49caf3f6-e63d-4133-bdf2-_1.aspx)]  \n  \n After the page loads, click the **Move WebPart** button, and note that the control that contains the links moves into the middle position in the second zone. This movement of the control is accomplished programmatically by calling the MoveWebPart method. You can also use the **Display Mode** drop-down list control to switch the page to design mode, and in design mode, you can drag the controls to different zones or different positions within their zones. The MoveWebPart method is also called by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control to handle such user-initiated moves."
  syntax:
    content: public virtual void MoveWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o un altro controllo server viene spostato."
    - id: zone
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: "La destinazione <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> a cui `webPart` è stato spostato."
    - id: zoneIndex
      type: System.Int32
      description: "Un numero intero che indica l&quot;indice di `webPart` relazione ad altri controlli all&quot;interno di `zone`."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not contained in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection of the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control.  \n  \n \\- or -  \n  \n <code>zone</code> is not contained in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones*> collection of the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control.  \n  \n \\- or -  \n  \n The zone referenced by the <code>webPart</code> control's <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which means that <code>webPart</code> is not currently contained in a zone."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>or <code>zone</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>zoneIndex</code>è minore di zero."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  id: OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  nameWithType: WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart&quot;> </xref> evento e richiama un gestore per l&quot;evento, se presente."
  remarks: "Viene chiamato il metodo OnAuthorizeWebPart dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>(metodo), quando un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo viene eseguita la verifica per l&quot;autorizzazione da aggiungere a una pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Quando viene chiamato il metodo OnAuthorizeWebPart, genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>evento, e se è presente un metodo del gestore per l&quot;evento, richiama il gestore.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>       Il processo di autorizzazione <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli è un&quot;importante funzionalità Web part.</xref:System.Web.UI.WebControls.WebParts.WebPart> Ogni <xref:System.Web.UI.WebControls.WebParts.WebPart>o controllo server che viene aggiunto a una zona dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo passa attraverso un processo di autorizzazione per determinare se il controllo può essere aggiunto.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart> Per impostazione predefinita, il set di controlli Web part non fornisce i criteri di filtro per impedire l&quot;aggiunta a una zona di controlli. Ma il set di controlli forniscono i meccanismi necessari agli sviluppatori di creare i propri criteri di filtro. Tramite questi meccanismi, è possibile creare scenari di applicazione di filtri personalizzati. Ad esempio, è possibile creare un filtro in modo che, se un utente è un ruolo di amministratore, alcuni controlli verrebbero aggiunto a un&quot;area quando viene eseguito il rendering della pagina e se l&quot;utente è in un ruolo utente, non sarebbe possibile aggiungere tali controlli.       I meccanismi per filtrare i controlli durante il processo di autorizzazione sono il <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>proprietà <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>e OnAuthorizeWebPart metodi e <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>evento il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       Per creare un filtro, sono disponibili essenzialmente due attività. In primo luogo, si devono assegnare stringhe per il <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>proprietà di ogni <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo che si desidera filtrare.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Questi valori stringa possono essere arbitrari, ma devono contenere i criteri che si desidera filtrare. Ad esempio, se si desidera un determinato controllo utente da aggiungere a un&quot;area solo se un amministratore visualizza la pagina, quindi è possibile assegnare un valore stringa `admin` alla proprietà. È quindi possibile utilizzare la funzionalità di ruoli ASP.NET e aggiungere tutti gli utenti del sito per ruoli diversi, ad esempio amministratore, manager e utente. Verificare il ruolo di un utente durante il caricamento di una pagina, il codice di filtro, confrontarlo con il valore di filtro di autorizzazione su un controllo viene selezionato e se, ad esempio, l&quot;utente è un ruolo di amministratore e impostare il controllo <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>valore `admin`, il controllo può essere aggiunto.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       Il secondo passaggio nella creazione di un filtro consiste nello scrivere codice per verificare il <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>i valori delle proprietà in <xref:System.Web.UI.WebControls.WebParts.WebPart>Controlla e determinare se è autorizzata ogni controllo prima di essere aggiunto alla relativa zona.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Sono disponibili due opzioni per la posizione in cui inserire il codice di filtro. La prima opzione è l&quot;opzione preferita per gli sviluppatori di pagine. È possibile creare un metodo per gestire il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>evento direttamente nel codice di script server della pagina Web o in un file di separazione del codice.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Associare il metodo con l&quot;evento mediante l&quot;aggiunta di `OnAuthorizeWebPart` attributo al tag per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllare nella pagina, come illustrato nel seguente codice di markup di esempio.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      ```   <asp:webpartmanager id=&quot;manager1&quot; runat=&quot;server&quot;       OnAuthorizeWebPart=&quot;manager1_AuthorizeWebPart&quot; />   ```Il metodo personalizzato dovrà è controllare ogni <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo per i criteri di filtro e quindi, in base ai risultati, assegnare un valore booleano per la <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A>proprietà del <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs>oggetto per indicare se il <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo può essere aggiunto.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs> </xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> Il codice nella sezione esempio illustra come eseguire questa operazione.       La seconda opzione per la posizione in cui inserire il codice dell&quot;applicazione di filtri è da cui ereditare la <xref:System.Web.UI.WebControls.WebParts.WebPartManager>classe ed eseguire l&quot;override di un metodo per controllare i criteri di filtro.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> I due metodi è possibile eseguire l&quot;override per questo scopo sono il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName>metodo o il metodo OnAuthorizeWebPart.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> Anche se dei metodi funzionerà, nella maggior parte dei casi è preferibile eseguire l&quot;override di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>metodo, perché consente un maggiore controllo a livello di codice tramite il processo di autorizzazione intero, mentre il metodo OnAuthorizeWebPart esegue solo un&quot;attività specifica, che consiste nel generare l&quot;evento e il controllo per un gestore.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Per un esempio di codice di un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPartManager>che esegue l&quot;override di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>metodo, vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName>overload del metodo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to set a custom event handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event, so that the handler can provide custom filtering code for the OnAuthorizeWebPart method. This example would be a typical way for a page developer to provide a filtering scenario and authorization of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls to be added to a page.  \n  \n In the Web page, notice that the `<asp:webpartmanager>` element has the `OnAuthorizeWebPart` attribute with the name of the event handler assigned to it. The method checks whether the controls on the page have their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property values set to `admin` and, if so, returns `true`, which means that they will be authorized and added to the page.  \n  \n> [!NOTE]\n>  Note that controls that do not have any value assigned to the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property are added as well, because they are assumed not to be part of a filtering scenario. This would be a common approach in a filtering scenario: some controls would be filtered, and others would not be, because they are presumed to be available for all users.  \n  \n [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/visualbasic/fb74240d-1119-4128-abbc-_1.aspx)]\n [!code-cs[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/csharp/fb74240d-1119-4128-abbc-_1.aspx)]  \n  \n Because setting up users in roles is beyond the scope of this topic, this code example does not check user roles in the filtering. However, the scenario of filtering controls according to user roles is likely to be one of the most common uses of this filtering feature. If you have roles on your site, and you want to check user roles in this method to filter controls, the method would resemble the following code block (versus the simpler approach in the preceding code example, which does not use roles).  \n  \n [Visual Basic]  \n  \n```  \nProtected Sub WebPartManager1_AuthorizeWebPart(ByVal sender _  \n  As Object, ByVal e As WebPartAuthorizationEventArgs)  \n  \n  If String.IsNullOrEmpty(e.AuthorizationFilter) Then  \n    If Roles.IsUserInRole(Page.User.Identity.Name, _  \n      e.AuthorizationFilter) Then  \n  \n      e.IsAuthorized = True  \n    Else  \n      e.IsAuthorized = False  \n    End If  \n  End If  \n  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void mgr1_AuthorizeWebPart(object sender,   \n  WebPartAuthorizationEventArgs e)  \n{  \n  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  \n  {  \n    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  \n      e.IsAuthorized = true;  \n    else  \n      e.IsAuthorized = false;  \n  }  \n}  \n```"
  syntax:
    content: protected virtual void OnAuthorizeWebPart (System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  id: OnConnectionsActivated(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnConnectionsActivated(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivated(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated&quot;> </xref> evento per indicare che una pagina e i relativi controlli vengono caricati e attivazione delle connessioni nella pagina per avviare la condivisione di dati."
  remarks: "Il metodo OnConnectionsActivated genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>evento dopo che è stato completato il processo di caricamento di una pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> Il metodo fornisce un modo per aggiungere un gestore per l&quot;evento.       Gli sviluppatori di pagine è possono aggiungere un gestore personalizzato per l&quot;evento aggiungendo un `OnConnectionsActivated` attributo il `<asp:webpartmanager>` elemento in una pagina e quindi assegnare un nome di metodo personalizzato per l&quot;attributo."
  syntax:
    content: protected virtual void OnConnectionsActivated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  id: OnConnectionsActivating(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnConnectionsActivating(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivating(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating&quot;> </xref> evento per indicare che una pagina e i relativi controlli sono stati caricati e che inizia il processo di attivazione delle connessioni."
  remarks: "Il metodo OnConnectionsActivating genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>evento, che fornisce agli sviluppatori un meccanismo per la personalizzazione a livello di codice il processo di attivazione delle connessioni.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>       Gli sviluppatori di pagine è possono aggiungere un gestore personalizzato per l&quot;evento aggiungendo un `OnConnectionsActivating` attributo il `<asp:webpartmanager>` elemento in una pagina e quindi assegnare un nome di metodo personalizzato per l&quot;attributo."
  syntax:
    content: protected virtual void OnConnectionsActivating (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  id: OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged&quot;> </xref> evento per indicare che il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo ha completato il processo di passaggio da una modalità di visualizzazione a altra in una pagina Web."
  remarks: "Il metodo OnDisplayModeChanged in base modulo genera semplicemente il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>"
  syntax:
    content: protected virtual void OnDisplayModeChanged (System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs&quot;> </xref> che contiene i dati dell&quot;evento associati alla modalità di visualizzazione modificato."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  id: OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging&quot;> </xref> evento per indicare che il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo sta per passare da una modalità di visualizzazione a altra in una pagina Web."
  remarks: "Il metodo OnDisplayModeChanging in base modulo genera semplicemente il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>"
  syntax:
    content: protected virtual void OnDisplayModeChanging (System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
      description: "Un <xref:System.EventArgs>che contiene i dati dell&quot;evento associati a una modalità di visualizzazione di modifica.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: WebPartManager.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> evento, che è il primo evento nel <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> ciclo di vita di controllo."
  remarks: "Il metodo OnInit chiama il metodo di base, che genera il <xref:System.Web.UI.Control.Init>evento per il controllo e quindi esegue diversi passaggi preparatori, ad esempio verificare che sia presente solo un&quot;istanza del <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllare in una pagina e il caricamento di dati di personalizzazione.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.Control.Init>"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Un&quot;altra <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo nella pagina"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: WebPartManager.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> evento che si verifica poco prima che un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> rendering del controllo in una pagina Web."
  remarks: "Il metodo OnPreRender chiama il metodo di base, che genera il <xref:System.Web.UI.Control.PreRender>Controlla diversi script client che sono necessarie le pagine che contengono le Web part di eventi per il controllo e registri.</xref:System.Web.UI.Control.PreRender>"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnSelectedWebPartChanged(WebPartEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged&quot;> </xref> evento che si verifica dopo un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo è stato appena selezionato o ha cancellato la selezione."
  remarks: "Il metodo OnSelectedWebPartChanged genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>evento, ovvero in genere un punto nel tempo in cui uno sviluppatore potrebbe voler modificare l&quot;aspetto dell&quot;interfaccia utente (UI).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> Ad esempio, quando un nuovo <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo è selezionato, set di controlli Web part viene impostato il rendering del controllo appena selezionato.</xref:System.Web.UI.WebControls.WebParts.WebPart> Dopo la selezione di un controllo è deselezionata, il rendering è tornato alla normalità.       Dopo che un utente seleziona un determinato <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo per la modifica, viene chiamato il metodo OnSelectedWebPartChanged.</xref:System.Web.UI.WebControls.WebParts.WebPart> Quando l&quot;utente ha completato la modifica del controllo e si chiude, con il risultato che la selezione del controllo è deselezionata, viene chiamato nuovamente il metodo OnSelectedWebPartChanged."
  syntax:
    content: protected virtual void OnSelectedWebPartChanged (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnSelectedWebPartChanging(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging&quot;> </xref> evento che si verifica durante il processo di modifica del <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo attualmente selezionato."
  remarks: "Il metodo OnSelectedWebPartChanging genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>evento che si verifica durante il processo di modifica del <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo attualmente selezionato.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>       Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo utilizza questo metodo e l&quot;evento associato, per fornire la possibilità di annullare un processo in cui il controllo selezionato in fase di modifica.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Ad esempio, il metodo viene chiamato all&quot;interno del <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>(metodo) e anche all&quot;interno di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>metodo per fornire un modo per annullare il processo di.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> Se un utente sceglie il verbo di annullamento su un controllo che viene modificato, il controllo non è più selezionato e le modifiche non salvate, in quanto il metodo OnSelectedWebPartChanging rende possibile annullare le modifiche.      > [!NOTE] > Il metodo viene chiamato in modo analogo durante i metodi che iniziano e terminano il processo di connessione un <xref:System.Web.UI.WebControls.WebParts.WebPart>un altro controllo, per abilitare l&quot;annullamento del processo.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Gli sviluppatori di pagine è possono creare un gestore personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>eventi aggiungendo il `OnSelectedWebPartChanging` attributo il `<asp:webpartmanager>` elemento nel markup della pagina dichiarativo e l&quot;assegnazione all&quot;attributo del nome di un metodo personalizzato.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>"
  syntax:
    content: protected virtual void OnSelectedWebPartChanging (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: WebPartManager.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Eleva la base <xref href=&quot;System.Web.UI.Control.Unload&quot;> </xref> eventi e rimuove il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> istanza da una pagina Web."
  syntax:
    content: protected override void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Dati dell&quot;evento associati alla rimozione del controllo."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartAdded(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartAdded(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded&quot;> </xref> evento che si verifica dopo un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo è stato aggiunto a una pagina."
  remarks: "Viene chiamato il metodo OnWebPartAdded durante il processo di aggiunta di un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo (o un altro controllo server che viene aggiunto a un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zona) a una pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Gli sviluppatori di pagine è possono creare un gestore personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>eventi aggiungendo il `OnWebPartAdded` attributo il `asp:webpartmanager>` elemento e l&quot;assegnazione di un nome di metodo personalizzato per l&quot;attributo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>"
  syntax:
    content: protected virtual void OnWebPartAdded (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  id: OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartAdding(WebPartAddingEventArgs)
  nameWithType: WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding&quot;> </xref> evento che si verifica durante il processo di aggiunta di un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo (o un controllo server o utente) a un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona."
  remarks: "Il metodo OnWebPartAdding genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>evento per indicare che un controllo è in corso l&quot;aggiunta.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> Il metodo fornisce anche l&quot;opzione per annullare il processo di aggiunta. Se il controllo viene aggiunto correttamente, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>l&quot;evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>       Gli sviluppatori di pagina possono fornire un gestore personalizzato per l&quot;evento associato mediante l&quot;aggiunta di `OnWebPartAdding` attributo il `<asp:webpartmanager>` elemento in una pagina Web e quindi assegnare un nome di metodo personalizzato per l&quot;attributo."
  syntax:
    content: protected virtual void OnWebPartAdding (System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartClosed(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartClosed(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed&quot;> </xref> evento per segnalare che un controllo è stato rimosso da una pagina."
  remarks: "Il metodo OnWebPartClosed genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>evento per indicare che un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo (o altri controlli server o utente) sono stato chiuso correttamente in una pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       Per chiudere un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo si intende rimuovere da una pagina in modo che non viene eseguito e posizionarlo in un particolare oggetto contenitore definito in un catalogo.</xref:System.Web.UI.WebControls.WebParts.WebPart> In un catalogo, che corrisponde alla <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>di controllo, mantiene i riferimenti a chiuso <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli per ogni pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Se un <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>controllo viene dichiarato in una pagina all&quot;interno di un <xref:System.Web.UI.WebControls.WebParts.CatalogZone>zona, gli utenti possono impostare la pagina in modalità di visualizzazione catalogo e aggiungere nuovamente alla pagina tutti i controlli che in precedenza sono stati chiusi.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>       Il metodo OnWebPartClosed fornisce una possibilità per gli sviluppatori di creare un gestore personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> Gli sviluppatori di pagine è possono aggiungere un gestore personalizzato per l&quot;evento aggiungendo un `OnWebPartClosed` attributo il `<asp:webpartmanager>` elemento in una pagina e quindi assegnare un nome di metodo personalizzato per l&quot;attributo. Un&quot;attività utile che uno sviluppatore può eseguire in questo metodo consiste nel visualizzare un segnaposto al posto del controllo chiuso, completare la procedura aggiungere il controllo alla pagina con una descrizione comando che verrebbe informare gli utenti."
  syntax:
    content: protected virtual void OnWebPartClosed (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartClosing(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing&quot;> </xref> evento che si verifica durante il processo di un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o controllo server viene rimosso da una pagina."
  remarks: "Il metodo OnWebPartClosing genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>evento per indicare che un controllo è in fase di chiusura o rimosso da una pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> Il metodo fornisce anche l&quot;opzione per annullare il processo di chiusura. Se il controllo viene rimosso correttamente dalla pagina, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>l&quot;evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       Gli sviluppatori di pagina possono fornire un gestore personalizzato per l&quot;evento associato mediante l&quot;aggiunta di `OnWebPartClosinging` attributo il `<asp:webpartmanager>` elemento in una pagina Web e quindi assegnare un nome di metodo personalizzato per l&quot;attributo."
  syntax:
    content: protected virtual void OnWebPartClosing (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartDeleted(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted&quot;> </xref> evento che si verifica dopo un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo è stato eliminato in modo permanente da una pagina."
  remarks: "Viene chiamato il metodo OnWebPartDeleted durante il processo di eliminazione di un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo (o un altro controllo server che viene aggiunto a un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zona) da una pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Gli sviluppatori di pagine è possono creare un gestore personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>eventi aggiungendo il `OnWebPartDeleted` attributo il `asp:webpartmanager>` elemento e l&quot;assegnazione di un nome di metodo personalizzato per l&quot;attributo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>"
  syntax:
    content: protected virtual void OnWebPartDeleted (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartDeleting(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting&quot;> </xref> evento, che indica che una dinamica <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo (o control server o utente contenuti in un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona) è in corso l&quot;eliminazione."
  remarks: "Solo dinamica <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli possono essere eliminati e, quando viene eliminato un controllo, l&quot;istanza del controllo verrà rimosso definitivamente da una pagina e non può essere ripristinato.</xref:System.Web.UI.WebControls.WebParts.WebPart> Dinamica <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli che vengono aggiunti a livello di programmazione, o da un catalogo Web part, a differenza dei controlli statici che sono dichiarati nel markup della pagina Web.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Il metodo OnWebPartDeleting genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>evento per indicare che un controllo viene viene eliminato definitivamente dalla relativa area.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> Il metodo fornisce inoltre la possibilità di annullare il processo di eliminazione. Se il controllo viene eliminato correttamente, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>l&quot;evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>       Gli sviluppatori di pagina possono fornire un gestore personalizzato per l&quot;evento associato mediante l&quot;aggiunta di `OnWebPartDeleting` attributo il `<asp:webpartmanager>` elemento in una pagina Web e quindi assegnare un nome di metodo personalizzato per l&quot;attributo."
  syntax:
    content: protected virtual void OnWebPartDeleting (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartMoved(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartMoved(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved&quot;> </xref> evento che si verifica dopo un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo è stato spostato in un percorso diverso in una pagina."
  remarks: "Il metodo OnWebPartMoved genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>evento alla fine del <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>metodo, che garantisce che il processo di spostamento di un controllo è stato completato prima di qualsiasi codice nell&quot;evento gestore viene eseguito.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>evento viene generato quando un controllo viene spostato all&quot;interno della relativa area o in un&quot;altra area e non è importante se lo spostamento viene eseguito a livello di codice o da un utente di trascinare il controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Gli sviluppatori di pagine è possono creare un gestore personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>eventi aggiungendo il `OnWebPartMoved` attributo il `asp:webpartmanager>` elemento e l&quot;assegnazione di un nome di metodo personalizzato per l&quot;attributo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>"
  syntax:
    content: protected virtual void OnWebPartMoved (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  id: OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartMoving(WebPartMovingEventArgs)
  nameWithType: WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving&quot;> </xref> evento, che indica che un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o control server o un utente in un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona è in corso lo spostamento."
  remarks: "Il metodo OnWebPartMoving genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>evento che si verifica quando un <xref:System.Web.UI.WebControls.WebParts.WebPart>o altro controllo server viene spostato all&quot;interno dell&quot;area o in un&quot;altra area.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> Il metodo fornisce inoltre la possibilità di annullare il processo di spostamento. Se lo spostamento viene completato correttamente, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>l&quot;evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Gli sviluppatori di pagina possono fornire un gestore personalizzato per l&quot;evento associato mediante l&quot;aggiunta di `OnWebPartMoving` attributo il `<asp:webpartmanager>` elemento in una pagina Web e quindi assegnare un nome di metodo personalizzato per l&quot;attributo."
  syntax:
    content: protected virtual void OnWebPartMoving (System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  id: OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsConnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected&quot;> </xref> evento che si verifica dopo aver stabilita una connessione tra <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlli."
  remarks: "Genera l&quot;evento corrispondente alla fine del metodo OnWebPartsConnected il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>metodo, che garantisce che i passaggi necessari per connettere due controlli vengono completati prima che venga eseguito qualsiasi codice nel gestore eventi.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       Il metodo consente di controllare a livello di codice il processo di creazione di connessioni e l&quot;evento associato è un pratico punto in cui aggiornare l&quot;interfaccia utente (UI) o notificare a un utente che sia stata stabilita una connessione.       Gli sviluppatori di pagine è possono creare un gestore personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>eventi aggiungendo il `OnWebPartsConnected` attributo il `asp:webpartmanager>` elemento e l&quot;assegnazione di un nome di metodo personalizzato per l&quot;attributo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>"
  syntax:
    content: protected virtual void OnWebPartsConnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  id: OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting&quot;> </xref> evento che si verifica durante il processo di stabilire una connessione tra due <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o controlli server o utente contenuti in un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona."
  remarks: "Il metodo OnWebPartsConnecting genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>evento che si verifica durante il tentativo di stabilire una connessione di due controlli.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> Il metodo fornisce la possibilità di annullare il tentativo di connessione. Se la connessione ha esito positivo, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>l&quot;evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>       Gli sviluppatori di pagina possono fornire un gestore personalizzato per l&quot;evento associato mediante l&quot;aggiunta di `OnWebPartsConnecting` attributo il `<asp:webpartmanager>` elemento in una pagina Web e quindi assegnare un nome di metodo personalizzato per l&quot;attributo."
  syntax:
    content: protected virtual void OnWebPartsConnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  id: OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected&quot;> </xref> evento che si verifica dopo la connessione tra <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlli è stata terminata."
  remarks: "Genera l&quot;evento corrispondente alla fine del metodo OnWebPartsDisconnected il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>metodo, che esegue il processo di terminazione di una connessione tra due controlli.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>       Il metodo consente di controllare a livello di codice il processo di chiusura di una connessione, in modo che gli sviluppatori possono informare l&quot;utente, apportare modifiche all&quot;interfaccia utente (UI) o apportare altre modifiche all&quot;applicazione.       Gli sviluppatori di pagine è possono creare un gestore personalizzato per il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>eventi aggiungendo il `OnWebPartsDisconnected` attributo il `asp:webpartmanager>` elemento e l&quot;assegnazione di un nome di metodo personalizzato per l&quot;attributo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>"
  syntax:
    content: protected virtual void OnWebPartsDisconnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  id: OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting&quot;> </xref> evento, che indica che due <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o controlli server o utente in un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona in corso la chiusura di una connessione."
  remarks: "Il metodo OnWebPartsDisconnecting genera il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>evento che si verifica quando due controlli terminano una connessione.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Il metodo fornisce la possibilità di annullare il processo di disconnessione. Se la connessione viene rimosso correttamente, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>l&quot;evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>       Gli sviluppatori di pagina possono fornire un gestore personalizzato per l&quot;evento associato mediante l&quot;aggiunta di `OnWebPartsDisconnecting` attributo il `<asp:webpartmanager>` elemento in una pagina Web e quindi assegnare un nome di metodo personalizzato per l&quot;attributo."
  syntax:
    content: protected virtual void OnWebPartsDisconnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  id: Personalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Personalization
  nameWithType: WebPartManager.Personalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene un riferimento a un oggetto che contiene i dati di personalizzazione per una pagina Web."
  remarks: "La proprietà di personalizzazione consente di accedere il <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>oggetto associato a una pagina tramite il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> Utilizzare questa proprietà, è possibile accedere ai diversi membri dell&quot;oggetto di personalizzazione. Ad esempio, è possibile utilizzare il <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A>metodo per l&quot;ambito di personalizzazione della pagina da condiviso a un ambito di utente, o viceversa.</xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> Inoltre, è possibile trovare l&quot;ambito di personalizzazione corrente della pagina, se la personalizzazione sia abilitata anche nella pagina, il provider utilizzato per i dati di personalizzazione e altro ancora.       Si noti che i dati a cui fa riferimento la proprietà di personalizzazione sono solo i dati di personalizzazione a livello di pagina che tiene traccia di <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> I dati di personalizzazione specifiche del controllo, ad esempio i valori delle proprietà personalizzabili nei <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli, non fa parte della proprietà di personalizzazione.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > Per ulteriori informazioni sulla personalizzazione delle Web part, vedere [Panoramica sulla personalizzazione delle parti Web](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the Personalization property programmatically.  \n  \n The following Web page allows a user to enter edit mode to edit certain aspects of the <xref:System.Web.UI.WebControls.Calendar> control. The **Toggle Scope** button switches the page to user or shared personalization scope. The **Edit Mode** and **Browse Mode** buttons each switch the page into the appropriate display mode. Notice that in the `<script>` tag section of the file, two of the methods that handle events use the Personalization property to access useful members of the underlying object. Specifically, these methods use the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> method and the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> property on the object accessed through the Personalization property.  \n  \n [!code-cs[WebParts_WebPartManager_Personalization#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_970_1.aspx)]\n [!code-vb[WebParts_WebPartManager_Personalization#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_970_1.aspx)]  \n  \n For the code example to run, you also must enable a user or users to personalize pages in shared scope. Add an entry to the Web.config file, within the `<system.web>` section, that looks like the following markup.  \n  \n```  \n<webParts>  \n  <personalization>  \n    <authorization>  \n      <allow  \n        users=\"[Replace the text and brackets with a user name or   \n           group.]\"  \n        roles=\"admin\"   \n        verbs=\"enterSharedScope\"  />  \n    </authorization>  \n  </personalization>  \n</webParts>   \n```  \n  \n After you load the page in a browser, click the **Toggle Scope** button, and notice that the page now says the scope is shared. Click **Edit Mode** to change the display mode, click the verbs menu on the visible control, and select **Edit** from the menu. Notice that the user interface (UI) for both editing controls appears. Now click **Browse Mode** to return to normal browsing. If the page says it is in shared scope, click **Toggle Scope** again to ensure the page is in user scope. Next, follow the same steps to edit the control again, but notice that now in the editing UI, the <xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart> control does not appear. That is because this control only works when the page is in shared personalization scope."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartPersonalization
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartPersonalization&quot;> </xref> che contiene i dati di personalizzazione."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  id: RegisterClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: RegisterClientScript()
  nameWithType: WebPartManager.RegisterClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Consente di <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo di generare script lato client che viene utilizzato per le diverse funzionalità di personalizzazione, ad esempio il trascinamento <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlli in una pagina Web."
  syntax:
    content: protected virtual void RegisterClientScript ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: WebPartManager.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Sottoposto a override per impedire la <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo rendering di contenuti da."
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Un <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> che riceve il contenuto del controllo da scrivere nella pagina."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: WebPartManager.SaveControlState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Salva dati sullo stato per il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo in modo da ripristinare i dati per future richieste alla pagina Web contenente il controllo."
  remarks: "Il SaveControlState metodo salva i dati per le proprietà che devono essere mantenute durante i postback di pagina, anche quando il <xref:System.Web.UI.Control.EnableViewState%2A>è impostata su `false`.</xref:System.Web.UI.Control.EnableViewState%2A>"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "Un <xref:System.Object>che conterrà il controllo di dati salvati.</xref:System.Object>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SaveCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Salva i dati personalizzati della personalizzazione mediante il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllare, in modo che questi dati possono essere ricaricati ogni volta che la pagina viene ricaricata più volte."
  remarks: "Il metodo SaveCustomPersonalizationState è fondamentale nel processo di personalizzazione, perché abilita le impostazioni utente personalizzate da archiviare per future sessioni del browser e visite a una pagina. Il metodo salva i dati dello stato di personalizzazione, che include elementi quali le operazioni seguenti: dinamica <xref:System.Web.UI.WebControls.WebParts.WebPart>o i controlli server che sono stati aggiunti a una pagina o eliminati da una pagina; controlli che sono stati spostati in una pagina e le connessioni dinamiche che sono state create o eliminate.</xref:System.Web.UI.WebControls.WebParts.WebPart>       È possibile chiamare questo metodo direttamente dal codice. È possibile, tuttavia, chiamare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>(metodo), che a sua volta chiama questo metodo per salvare i dati di personalizzazione.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>"
  syntax:
    content: protected virtual void SaveCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> che contiene i dati dello stato da caricare."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  id: SelectedWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene un riferimento a un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o un altro controllo server che attualmente selezionato per la modifica o per la creazione di una connessione con un altro controllo."
  remarks: "La proprietà SelectedWebPart restituisce un riferimento a un <xref:System.Web.UI.WebControls.WebParts.WebPart>o un altro controllo server che attualmente selezionato per la modifica o per la creazione di una connessione con un altro controllo.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo fornisce diversi metodi ed eventi utili per la gestione del processo di selezione di un controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>evento si verifica subito dopo un controllo è selezionato, ma prima che vengano apportate modifiche.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> Per eseguire alcune azioni sul controllo dopo la selezione, eseguire l&quot;override di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>metodo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> Potrebbe ad esempio, si desidera modificare l&quot;aspetto di un controllo è selezionato ma non è ancora stato modificato per evidenziare visivamente il controllo selezionato.       Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>evento si verifica subito dopo il controllo selezionato è stato modificato.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> Per eseguire alcune azioni sul controllo dopo la modifica, eseguire l&quot;override di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>metodo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo attualmente selezionato per la modifica o di stabilire una connessione."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  id: SelectedWebPartChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPartChanged
  nameWithType: WebPartManager.SelectedWebPartChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica dopo la selezione di uno <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo è cambiata ed è stato spostato in un altro controllo in una pagina Web."
  remarks: "Questo evento può essere utilizzato in combinazione con il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>metodo per modificare l&quot;interfaccia utente (UI) di un controllo selezionato.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> Ad esempio, se l&quot;utente passa la pagina in modalità progettazione (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>) e quindi seleziona un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo con l&quot;intenzione di trascinarlo in una nuova posizione, è comune per modificare il rendering del controllo selezionato, ad esempio modificando il colore del bordo o sfondo quando è selezionato.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>      > [!NOTE] > Per ulteriori informazioni sull&quot;utilizzo degli eventi, vedere [procedura: utilizzare eventi in un&quot;applicazione Web Form](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  id: SelectedWebPartChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPartChanging
  nameWithType: WebPartManager.SelectedWebPartChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica durante il processo di modifica del <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o controllo server è attualmente selezionato in una pagina Web."
  remarks: "Questo evento può essere utilizzato in combinazione con il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>metodo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> Gli sviluppatori di pagina possono creare un gestore eventi all&quot;interno del codice tramite l&quot;aggiunta di `OnSelectedWebPartChanging` attributo il `<asp:webpartmanager>` elemento in una pagina e impostando il valore dell&quot;attributo per il nome di un metodo personalizzato che gestirà l&quot;evento.       Questo evento viene generato durante il processo di avvio o chiusura di una connessione tra i controlli e quando l&quot;inizio e fine di una modifica di un controllo. Per informazioni dettagliate, vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>metodo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>       In genere, quando l&quot;evento SelectedWebPartChanging viene generato come risultato diretto di un&quot;azione dell&quot;utente che modifica il controllo selezionato, è possibile annullare l&quot;evento. Tuttavia, è uno scenario in cui l&quot;evento non può essere annullato. Se un <xref:System.Web.UI.WebControls.WebParts.WebPartZone>controllo viene eliminato, il <xref:System.Web.UI.WebControls.WebParts.WebPart>tutti i controlli in esso contenuti devono essere chiusi, in caso contrario potrebbe essere orfani.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> In questo caso il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo chiude il <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli, non l&quot;utente e deve determinare a quale controllo è selezionato e quando modificare la selezione senza alcun rischio di interruzione, in modo tale da completare il processo di pulizia di tutti i controlli.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Pertanto, in base alla progettazione di SelectedWebPartChanging (metodo) non può essere annullata in questo scenario. Per un evento correlato che può essere annullato, vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  id: SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SetPersonalizationDirty()
  nameWithType: WebPartManager.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Imposta un flag che indica che i dati di personalizzazione personalizzato per il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo è stato modificato."
  remarks: "Il metodo SetPersonalizationDirty imposta un flag che determina i componenti di personalizzazione nel controllo Web part impostato per salvare i dati di personalizzazione aggiornato. Per ulteriori informazioni sugli scenari che possono comportare modifiche ai dati di personalizzazione registrati dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager>di controllo, vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>proprietà.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Il metodo SetPersonalizationDirty non può essere chiamato direttamente dal codice e non può essere sottoposto a override, in quanto è utilizzato internamente dal controllo Web part impostato come parte della funzionalità di personalizzazione di Web part."
  syntax:
    content: protected void SetPersonalizationDirty ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SetSelectedWebPart(WebPart)
  nameWithType: WebPartManager.SetSelectedWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Imposta il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>valore della proprietà uguale all&quot;oggetto attualmente selezionato <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o control server.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  remarks: "Viene chiamato il metodo di SetSelectedWebPart durante i processi che possono iniziano o terminano la modifica del controllo specificato per il `webPart` parametro e quelli che possono iniziare o terminare una connessione che include `webPart`.       All&quot;inizio dei processi di modifica e di connessione, `webPart` è il controllo che è stato selezionato per la modifica o di immettere una connessione.       Alla fine dei processi di modifica e di connessione, `null` viene passato al metodo SetSelectedWebPart, che il controllo selezionato non è più selezionato."
  syntax:
    content: protected void SetSelectedWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o controllo server che è stata selezionata."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  id: SkinID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SkinID
  nameWithType: WebPartManager.SkinID
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene o imposta una stringa vuota (&quot;&quot;) in modo che sia non possibile applicare alcuna interfaccia per il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo."
  remarks: "La proprietà SkinID esegue l&quot;override ereditato <xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName>proprietà per evitare il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo, che è un controllo invisibile, dall&quot;utilizzo di interfacce.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName> L&quot;implementazione della proprietà impedisce l&quot;assegnazione restituendo sempre una stringa vuota da un&quot;interfaccia di `get` funzione di accesso e generando sempre un&quot;eccezione se viene eseguito un tentativo di impostare un valore `set` della funzione di accesso."
  syntax:
    content: public override string SkinID { get; set; }
    return:
      type: System.String
      description: "Una stringa vuota che impedisce il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo da un&quot;interfaccia assegnato."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "È stato effettuato un tentativo di impostare il valore della proprietà."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  id: StaticConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene un riferimento alla raccolta di tutti i <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> gli oggetti definiti come connessioni statiche in una pagina Web."
  remarks: "La proprietà StaticConnections viene utilizzata il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo per rilevare e gestire tutte le connessioni statiche in una pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Una connessione statica, a differenza di una connessione dinamica, non è necessario essere aggiunti a una pagina ogni volta che viene eseguito il rendering della pagina.       La raccolta a cui fa riferimento questa proprietà contiene tutte le connessioni statiche presenti nella pagina, se vengono creati a livello di codice o specificati con un `<asp:webpartconnection>` elemento nel markup della pagina."
  example:
  - "The following code example demonstrates programmatic use of the StaticConnections property.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need to obtain the first two parts of the example--the custom user control and the source code for the custom controls and interface--from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. That topic also explains your options for compiling the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n The third part of the code example is the Web page. The declarative markup for the page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the StaticConnections property.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_98_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_98_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> che contiene tutte le connessioni statiche nella pagina."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  id: SupportedDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene una raccolta di sola lettura di tutte le modalità di visualizzazione disponibili in una particolare pagina Web."
  remarks: "La proprietà SupportedDisplayModes contiene solo la modalità di visualizzazione sono effettivamente disponibili in una pagina, in base ai tipi di controlli di zona presenti nella pagina.      > [!NOTE] > Modalità di visualizzazione possono essere disabilitate e quando una modalità di visualizzazione è disabilitata, non viene aggiunto alla raccolta SupportedDisplayModes, anche quando il tipo di zona che supporta tale modalità di visualizzazione corrispondente è presente nella pagina.       Modalità di visualizzazione e la modalità di progettazione sono sempre supportate. La modalità di visualizzazione che può variare sono la modifica, catalogo e le modalità di connessione. Ognuna di queste modalità di visualizzazione è associata a un particolare tipo di <xref:System.Web.UI.WebControls.WebParts.ToolZone>controllo.</xref:System.Web.UI.WebControls.WebParts.ToolZone> È la presenza di un&quot;area speciale tipizzata in una pagina Web che causa una specifica modalità di visualizzazione da aggiungere alla raccolta a cui fa riferimento la proprietà SupportedDisplayModes. Ad esempio, se una pagina Web contiene un <xref:System.Web.UI.WebControls.WebParts.EditorZone>zona ma non un <xref:System.Web.UI.WebControls.WebParts.CatalogZone>della zona, quindi la modalità di modifica è una delle modalità supportate in questa pagina, ma non è supportata la modalità di visualizzazione del catalogo.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.EditorZone>      > [!NOTE] > SupportedDisplayModes la proprietà è diverso dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>proprietà, che fa riferimento a una raccolta contenente tutte le modalità di visualizzazione disponibili per l&quot;oggetto corrente <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllare, anche quelli che non sono supportate in una pagina particolare.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>"
  example:
  - "The following code example shows the programmatic use of the SupportedDisplayModes property. The code uses this property to populate the list with only the display modes available in the current Web page.  \n  \n There are three supported display modes on this page: browse, design, and edit. The first two are always available, and the edit mode is available in this code example because the page contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control. The catalog and connect display modes are not shown, because their corresponding zones are not on this page.  \n  \n [!code-vb[WebParts_WebPartManager_SupportedDisplayModes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_388_1.aspx)]\n [!code-cs[WebParts_WebPartManager_SupportedDisplayModes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_388_1.aspx)]  \n  \n After you load the page in a browser, you can use the drop-down list control to switch the page from browse mode to design mode, and then to edit mode. In edit mode, you can click the drop-down verbs menu in the header of one of the server controls, and select **Edit** to edit the control."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> che contiene il set di <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> oggetti disponibili in una pagina Web specifica."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene un valore che indica se i dati dello stato di personalizzazione gestito dal <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo è stato modificato in una pagina Web."
  remarks: "La proprietà IPersonalizable.IsDirty fornisce un modo per i chiamanti per determinare se i dati che sono gestiti da stato della personalizzazione di <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo è stato modificato.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Quando gli utenti personalizzano dettagli a livello di pagina, ad esempio modifica il layout di pagina, la creazione o eliminazione di connessioni e aggiunta o eliminazione di controlli, i dati di personalizzazione è gestito dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllare le modifiche.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Si tratta di un metodo pass-through che restituisce ai chiamanti il valore di protetto <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>proprietà, che non sono direttamente accessibili dai chiamanti.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>      > [!NOTE] > IPersonalizable.IsDirty la proprietà non indica se i valori delle proprietà personalizzabili, o le proprietà che influiscono sull&quot;aspetto dei singoli <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli, sono stati modificati.</xref:System.Web.UI.WebControls.WebParts.WebPart> Personalizzazione a livello di controllo verrà rilevata singolarmente per ogni controllo. La proprietà IPersonalizable.IsDirty indica solo se i dati di personalizzazione che è a livello di pagina ed è gestito dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo è stato modificato.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Nell&quot;elenco seguente vengono descritti alcuni casi comuni di personalizzazione che possono provocare la proprietà IPersonalizable.IsDirty restituire un valore di `true`, a indicare che il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo dispone di dati di personalizzazione modificati:-la chiusura di un valore statico <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo (o controllo server o utente) in una pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>      -Il ripristino di un valore statico chiuso <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo da un catalogo di pagina a una pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart>      -Spostamento di un controllo all&quot;interno dell&quot;area o in un&quot;altra zona.      -Aggiunta di un controllo da un catalogo di <xref:System.Web.UI.WebControls.WebParts.WebPart>o controlli server o aggiunta di un controllo a livello di codice.</xref:System.Web.UI.WebControls.WebParts.WebPart>      -Creazione di una connessione tra due <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli, a livello di codice o tramite l&quot;interfaccia utente (UI) di connessione.</xref:System.Web.UI.WebControls.WebParts.WebPart>      -L&quot;eliminazione di una connessione tra due <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli, a livello di codice o tramite la connessione dell&quot;interfaccia utente.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Per accedere a questo valore della proprietà, è necessario eseguire il cast di <xref:System.Web.UI.WebControls.WebParts.WebPartManager>istanza del controllo di <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>interfaccia; è possibile quindi leggere il <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>valore della proprietà.</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates a simple usage of the IPersonalizable.IsDirty property, to indicate some common page personalization instances that cause a <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control's personalization data to change.  \n  \n The code example has four parts:  \n  \n-   A user control that allows you to change display modes on a page that contains Web Parts controls.  \n  \n-   A source file that contains the code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an interface.  \n  \n-   A Web page that hosts all the controls.  \n  \n-   An explanation of how the code example works.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is the source file with the custom controls and the interface. Notice that the `IZipCode` interface exposes one method, and that this method as implemented in the custom `ZipCodeWebPart` control serves as a callback method to enable `ZipCodeWebPart` to act as a provider in a connection scenario. The other control, `WeatherWebPart`, acts as the consumer control in a connection; it can consume the particular interface provided by `ZipCodeWebPart`. In a real application, `WeatherWebPart` could consume a personalized ZIP Code value from the provider, and then provide graphical weather information to users.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation; therefore, notice that the `Register` directive for this component at the top of the Web page contains only `TagPrefix` and `Namespace` attributes, without an `Assembly` attribute. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsDirty#2](~/add/codesnippet/csharp/c24ecc1a-95a5-4007-8876-_1.cs)]\n [!code-vb[WebParts_WebPartManager_IsDirty#2](~/add/codesnippet/visualbasic/c24ecc1a-95a5-4007-8876-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that it contains two <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zones, with the first one containing the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. There is also a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, which contains a standard <xref:System.Web.UI.WebControls.Calendar> control that users can add to the page. The `<asp:connectionszone>` element provides a connection UI for users to create connections between controls. In the `Page_PreRender` method, notice that it checks to see whether the personalization data has changed and, if so, updates the text of `Label1`.  \n  \n [!code-cs[WebParts_WebPartManager_IsDirty#1](~/add/codesnippet/csharp/c24ecc1a-95a5-4007-8876-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_IsDirty#1](~/add/codesnippet/visualbasic/c24ecc1a-95a5-4007-8876-_2.aspx)]  \n  \n After you load the page in a browser, try to create some of the scenarios listed in the Remarks section of this topic that will change the personalization data. As you make various changes, when a change involves one of the personalization scenarios tracked by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, the text of the `Label1` control is displayed to indicate that personalization data has changed. For example, you can:  \n  \n-   Create a connection between controls by clicking the **Connect WebPart Controls** button.  \n  \n-   Use the **Display Mode** drop-down list control to switch the page to catalog mode, and add the **My Calendar** control to the second <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone.  \n  \n-   Change the page back to browse mode, click on the verbs menu (shown with an arrow symbol in the title bar) for the **My Calendar** control, and select **Close** to close it and add it to the page catalog.  \n  \n-   Return the page to catalog mode, and add the **My Calendar** control back to the page.  \n  \n-   Use the **Display Mode** control to switch the page to design mode, and rearrange the layout of the controls by dragging one or more of them to another zone, or to a different position in the same zone."
  syntax:
    content: bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty { get; }
    return:
      type: System.Boolean
      description: "Valore booleano che indica se i dati dello stato di personalizzazione sono stato modificato."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Restituisce salvati in precedenza dati dello stato di personalizzazione che deve essere caricato il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo."
  remarks: "Questo metodo è un&quot;implementazione del <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=fullName>metodo, che fornisce un modo per del set di controlli Web part per accedere direttamente alla protetto <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=fullName>metodo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=fullName> Quando questo metodo viene chiamato, memorizza i dati personalizzati che sono gestiti dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo e che in precedenza è stato salvato nell&quot;archivio permanente dei dati per l&quot;utilizzo in un secondo momento nel processo di inizializzazione.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > Nella maggior parte dei casi, codice dello sviluppatore di pagina e il controllo non è necessario chiamare questo metodo, perché viene utilizzato principalmente per i controlli Web part come meccanismo per il recupero dei dati di personalizzazione."
  syntax:
    content: void IPersonalizable.Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> che contiene i dati dello stato da caricare."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Salva i dati dello stato di personalizzazione che sono gestiti dal <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo."
  remarks: "Il metodo IPersonalizable.Save è un&quot;implementazione del <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=fullName>metodo, che fornisce un modo per del set di controlli Web part per accedere direttamente alla protetto <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=fullName>metodo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=fullName> Quando questo metodo viene chiamato, Salva dati di tutte le personalizzazioni che sono gestiti dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo nell&quot;archivio permanente dei dati configurato per un&quot;applicazione Web part.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      > [!NOTE] > Nella maggior parte dei casi, codice dello sviluppatore di pagina e il controllo non è necessario chiamare questo metodo, perché viene principalmente utilizzato dal controllo Web part impostato come meccanismo per il salvataggio di dati di personalizzazione."
  syntax:
    content: void IPersonalizable.Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> che contiene i dati dello stato da salvare."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: WebPartManager.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Applica i dati dello stato di personalizzazione per il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo e chiama il metodo di base per attivare il rilevamento modifiche ai dati dello stato di visualizzazione per il controllo."
  remarks: "Le modifiche ai dati dello stato di visualizzazione vengono archiviate un <xref:System.Web.UI.StateBag>oggetti e sono accessibili tramite il controllo <xref:System.Web.UI.Control.ViewState%2A>proprietà.</xref:System.Web.UI.Control.ViewState%2A> </xref:System.Web.UI.StateBag>"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  id: Visible
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Visible
  nameWithType: WebPartManager.Visible
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene un valore che abilita la visualizzazione dei controlli figlio."
  remarks: "Il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo esegue l&quot;override della base <xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName>proprietà per restituire sempre un valore di `true` per la proprietà Visible.</xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Anche se il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo stesso non è visibile, la proprietà Visible deve essere impostato su `true` in modo che tutti i controlli figlio sono visibili per impostazione predefinita.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Se si tenta di impostare il valore della proprietà visibile, viene sempre generato un errore perché il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo ha eseguito l&quot;override di proprietà di base e impedisce l&quot;assegnazione di qualsiasi valore alla proprietà.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Questa proprietà non è associabile nelle finestre di progettazione, ma è associabile in fase di esecuzione. Per ulteriori informazioni, vedere <xref:System.ComponentModel.BindableAttribute>.</xref:System.ComponentModel.BindableAttribute>"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "Un valore booleano che indica se un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo e i relativi controlli figlio sono visibili. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>in tutti i casi."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Visible*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "È stato effettuato un tentativo di assegnare un valore alla proprietà."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  id: WebPartAdded
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartAdded
  nameWithType: WebPartManager.WebPartAdded
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica dopo un dinamico <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o altro controllo server è stato aggiunto un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> area, per indicare che il controllo è stato aggiunto correttamente."
  remarks: "L&quot;evento WebPartAdded è utile per indicare che un controllo dinamico (un controllo a livello di codice aggiunto non dichiarato nel markup della pagina) è stato aggiunto a una zona. In combinazione con il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>(metodo), l&quot;evento fornisce agli sviluppatori un modo per aggiornare l&quot;interfaccia utente (UI) o di avvisare in caso contrario gli utenti che un controllo è stato aggiunto.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  id: WebPartAdding
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartAdding
  nameWithType: WebPartManager.WebPartAdding
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica durante il processo di aggiunta di un dinamico <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o un altro controllo server a un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona."
  remarks: "Viene generato l&quot;evento WebPartAdding dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A>metodo dopo aver iniziato il processo di aggiunta di un controllo a una zona.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> Questo evento fornisce la possibilità di annullare il processo prima del completamento. Se il processo di aggiunta ha esito positivo, questo evento è seguito dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>       Gli sviluppatori di pagine possono fornire gestori personalizzati per l&quot;evento mediante l&quot;aggiunta di `OnWebPartAdding` attributo il `<asp:webpartmanager>` elemento in una pagina e assegnando un nome di metodo personalizzato per l&quot;attributo."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  id: WebPartClosed
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartClosed
  nameWithType: WebPartManager.WebPartClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica quando un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo (o controllo server o utente) viene rimosso da una pagina."
  remarks: "L&quot;evento WebPartClosed indica che un controllo è stato chiuso, da un utente o a livello di codice. Per chiudere un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo si intende rimuovere da una pagina in modo che non viene eseguito e posizionarlo in un particolare oggetto contenitore definito in un catalogo.</xref:System.Web.UI.WebControls.WebParts.WebPart> In un catalogo, che corrisponde alla <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>di controllo, mantiene i riferimenti a chiuso <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli per ogni pagina.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Se un <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>controllo viene dichiarato in una pagina all&quot;interno di un <xref:System.Web.UI.WebControls.WebParts.CatalogZone>zona, gli utenti possono passare una modalità di visualizzazione catalogo e aggiungere a una pagina tutti i controlli che in precedenza sono stati chiusi.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>       L&quot;evento WebPartClosed è associato al <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>metodo, che genera l&quot;evento e fornisce un gestore per la categoria.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>       Gli sviluppatori di pagine è possono aggiungere un gestore personalizzato per l&quot;evento aggiungendo un `OnWebPartClosed` attributo il `<asp:webpartmanager>` elemento in una pagina e quindi assegnare un nome di metodo personalizzato per l&quot;attributo."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  id: WebPartClosing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartClosing
  nameWithType: WebPartManager.WebPartClosing
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica durante il processo di rimozione di un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo (o controllo server o utente) da una pagina."
  remarks: "Viene generato l&quot;evento WebPartClosing dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A>metodo quando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo è in corso la chiusura di un controllo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A> Se la rimozione del controllo ha esito positivo, questo evento è seguito dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       Gli sviluppatori di pagina possono fornire un gestore personalizzato per l&quot;evento mediante l&quot;aggiunta di `OnWebPartClosed` attributo il `asp:webpartmanager>` elemento in una pagina e assegnando un nome di metodo personalizzato per l&quot;attributo.       In genere, quando viene generato l&quot;evento WebPartClosing come risultato diretto di una chiusura utente un <xref:System.Web.UI.WebControls.WebParts.WebPart>(controllo), l&quot;evento può essere annullato.</xref:System.Web.UI.WebControls.WebParts.WebPart> Tuttavia, è uno scenario in cui l&quot;evento non può essere annullato. Se un <xref:System.Web.UI.WebControls.WebParts.WebPartZone>controllo viene eliminato, il <xref:System.Web.UI.WebControls.WebParts.WebPart>tutti i controlli in esso contenuti devono essere chiusi, in caso contrario potrebbe essere orfani.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> In questo caso il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo chiude il <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli, non dell&quot;utente.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> E quando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo è in corso la chiamata di <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>metodo per chiudere ogni controllo e viene generato l&quot;evento WebPartClosing, non è possibile annullare l&quot;evento (per impostazione predefinita) perché il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>deve completare l&quot;attività di pulizia dei controlli della zona.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  id: WebPartDeleted
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartDeleted
  nameWithType: WebPartManager.WebPartDeleted
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica dopo un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o altro controllo server è stato eliminato da un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona."
  remarks: "L&quot;evento WebPartDeleted è utile per indicare che un controllo dinamico (un controllo a livello di codice aggiunto non dichiarato nel markup della pagina) è stato eliminato da una zona. In combinazione con il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>(metodo), l&quot;evento fornisce agli sviluppatori un modo per aggiornare l&quot;interfaccia utente (UI) o di avvisare in caso contrario gli utenti che un controllo è stato eliminato.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  id: WebPartDeleting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartDeleting
  nameWithType: WebPartManager.WebPartDeleting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica durante il processo di eliminazione permanente di un&quot;istanza di un dinamico <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o un altro controllo server da un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona."
  remarks: "Viene generato l&quot;evento WebPartDeleting dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A>(metodo), durante il processo di eliminazione di un controllo dinamico (che è stato aggiunto a livello di codice o da un utente tramite l&quot;interfaccia utente Web part).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> L&quot;evento fornisce la possibilità di annullare il processo prima del completamento. Se il processo di eliminazione viene completato correttamente, questo evento è seguito dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>       Gli sviluppatori di pagine possono fornire gestori personalizzati per l&quot;evento mediante l&quot;aggiunta di `OnWebPartDeleting` attributo il `<asp:webpartmanager>` elemento in una pagina e assegnando un nome di metodo personalizzato per l&quot;attributo."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  id: WebPartMoved
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartMoved
  nameWithType: WebPartManager.WebPartMoved
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica dopo un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o controllo server è stato spostato in un percorso diverso in una pagina Web."
  remarks: "Questo evento si applica sia statico (dichiarato nel markup della pagina Web) e i controlli dinamici. È associato il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>metodo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> Poiché l&quot;evento viene generato dopo uno spostamento è stato completato, gli sviluppatori possono includere un gestore eventi per fornire notifiche agli utenti, una convalida o altre azioni. Per aggiungere un gestore eventi, è possibile aggiungere un `OnWebPartMoved` attributo il `<asp:webpartmanager>` elemento in una pagina e assegnare il nome di un metodo personalizzato per l&quot;attributo."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  id: WebPartMoving
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartMoving
  nameWithType: WebPartManager.WebPartMoving
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica durante il processo di spostamento di un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o un altro controllo server che è contenuto in un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona."
  remarks: "L&quot;evento WebPartMoving viene generato quando un <xref:System.Web.UI.WebControls.WebParts.WebPart>o altro controllo server è stato spostato all&quot;interno della relativa area o in un&quot;altra area.</xref:System.Web.UI.WebControls.WebParts.WebPart> Ciò può verificarsi quando un utente trascina un controllo e quando si verifica uno spostamento a livello di codice.       Viene generato l&quot;evento WebPartMoving dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>metodo e consente di annullare il processo di spostamento prima del completamento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> Se lo spostamento viene completato e il controllo viene inserito in una nuova posizione, questo evento è seguito dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Gli sviluppatori di pagine è possono creare un gestore per l&quot;evento personalizzato aggiungendo il `OnWebPartMoving` attributo il `<asp:webpartmanager>` elemento e l&quot;assegnazione di un nome di metodo personalizzato per l&quot;attributo."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  id: WebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebParts
  nameWithType: WebPartManager.WebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene un riferimento a tutti i <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlli rilevati tramite il <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> controllo in una pagina Web."
  remarks: "La proprietà della Web part viene utilizzata il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo per tenere traccia di tutti <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli che sono contenuti all&quot;interno di <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>aree della pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Anche se la raccolta è di sola lettura, è possibile accedere a singoli <xref:System.Web.UI.WebControls.WebParts.WebPart>Controlla a livello di codice tramite la raccolta e apportare modifiche a tali.</xref:System.Web.UI.WebControls.WebParts.WebPart>      > [!NOTE] > È possibile avere un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo inserito in una pagina di fuori di un <xref:System.Web.UI.WebControls.WebParts.WebPartZone>zona, il controllo non viene rilevato dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo o a cui fa riferimento nella propria raccolta Web part.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> Tuttavia, è necessario utilizzare un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo all&quot;esterno di una zona, in quanto esso perderebbe la funzionalità Web part e agisce come un normale controllo server.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Qualsiasi tipo di controllo che può essere inserito in una zona, se un oggetto personalizzato <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo, un controllo ASP.NET standard, un controllo utente o un controllo server personalizzato, può essere considerato come un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo in fase di esecuzione.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Quando un controllo che non è un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo venga posizionato un <xref:System.Web.UI.WebControls.WebParts.WebPartZone>zona, in fase di esecuzione ASP.NET include il controllo con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>dell&quot;oggetto, in modo che il controllo può comportarsi come un vero <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> Pertanto, tramite la proprietà della Web part, il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo può registrare qualsiasi tipo di controllo del server, indipendentemente dal fatto che derivi dalla <xref:System.Web.UI.WebControls.WebParts.WebPart>classe.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to use the WebParts property programmatically to access individual <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. Notice that in the declarative markup for the Web page, within the `<asp:webpartzone>` element there are two standard ASP.NET server controls. Although these do not inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class, because they are in a zone they will be wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time, and thus will be included in the collection referenced by the WebParts property. You could also add custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, user controls, or custom server controls in this zone, and they would be handled the same way.  \n  \n [!code-vb[WebParts_WebPartManager_WebParts#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_992_1.aspx)]\n [!code-cs[WebParts_WebPartManager_WebParts#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_992_1.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page into a browser, if you click the **WebPart Count** button, the code uses the WebParts property to return the count of controls in the collection. If you click the **Hide Calendar Title** button, the code changes the calendar so that it renders with only a border and not a title."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCollection&quot;> </xref> che contiene riferimenti a un set di <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlli."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  id: WebPartsConnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsConnected
  nameWithType: WebPartManager.WebPartsConnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica dopo aver stabilita una connessione tra <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlli (o controlli server o utente)."
  remarks: "L&quot;evento WebPartsConnected è associato il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A>metodo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A> L&quot;evento è utile perché dopo avere stabilito che una connessione è stata completata, si potrebbe voler informare l&quot;utente del fact o anche modificare l&quot;interfaccia utente (UI) della pagina. Ad esempio, si potrebbe voler visualizzare un&quot;immagine che suggerisce una connessione tra due controlli o visualizza un breve messaggio e quindi modificare la modalità di visualizzazione pagina eseguire il backup in modalità di visualizzazione.       Gli sviluppatori di pagina possono associare un gestore dell&quot;evento personalizzato con questo evento aggiungendo il `OnWebPartsConnected` attributo il `<asp:webpartmanager>` elemento nella pagina e assegnando un nome di metodo personalizzato per l&quot;attributo."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  id: WebPartsConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsConnecting
  nameWithType: WebPartManager.WebPartsConnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica durante il processo di creazione di una connessione tra <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlli (o i controlli server o utente posizionati in un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zona)."
  remarks: "Viene generato l&quot;evento WebPartsConnecting dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A>metodo e segnala che ha iniziato il processo di connessione (ad esempio, un utente ha selezionato un controllo e fa clic su un verbo di connessione), ma non è ancora completato.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> L&quot;evento fornisce la possibilità di annullare una connessione prima del completamento. Se la connessione viene completata correttamente, questo evento è seguito dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>       Gli sviluppatori di pagine è possono aggiungere un gestore per l&quot;evento personalizzato aggiungendo il `OnWebPartsConnecting` attributo il `<asp:webpartmanager>` elemento e l&quot;assegnazione di un nome di metodo personalizzato per l&quot;attributo."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  id: WebPartsDisconnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsDisconnected
  nameWithType: WebPartManager.WebPartsDisconnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica dopo la connessione tra due <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o controlli server è stata terminata."
  remarks: "L&quot;evento WebPartsDisconnected è associato il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A>metodo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A> L&quot;evento è utile perché dopo avere stabilito che una connessione viene terminata, si potrebbe voler informare l&quot;utente, eseguire alcune operazioni di pulizia nel codice o apportare altre modifiche nell&quot;interfaccia utente (UI).       Gli sviluppatori di pagina possono associare un gestore dell&quot;evento personalizzato con questo evento aggiungendo il `OnWebPartsDisConnected` attributo il `<asp:webpartmanager>` elemento nella pagina e assegnando un nome di metodo personalizzato per l&quot;attributo."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  id: WebPartsDisconnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsDisconnecting
  nameWithType: WebPartManager.WebPartsDisconnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Si verifica durante il processo di chiusura della connessione tra connesso in precedenza <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> o controlli server."
  remarks: "Viene generato l&quot;evento WebPartsDisconnecting dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A>metodo e segnala il fatto che un utente ha fatto clic su un verbo di disconnessione o <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>in caso contrario la chiamata a metodo.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> L&quot;evento fornisce la possibilità di annullare il processo di chiusura di una connessione prima del completamento. Se la connessione viene chiusa correttamente, questo evento è seguito dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>       Gli sviluppatori di pagine è possono aggiungere un gestore per l&quot;evento personalizzato aggiungendo il `OnWebPartsDisconnecting` attributo il `<asp:webpartmanager>` elemento e l&quot;assegnazione di un nome di metodo personalizzato per l&quot;attributo.       In genere, quando l&quot;evento WebPartsDisconnecting viene generato come risultato diretto di un&quot;azione dell&quot;utente che termina una connessione, è possibile annullare l&quot;evento. Tuttavia, esistono diversi scenari in cui l&quot;evento non può essere annullato. Il primo scenario è, se un <xref:System.Web.UI.WebControls.WebParts.WebPartZone>controllo viene eliminato, il <xref:System.Web.UI.WebControls.WebParts.WebPart>tutti i controlli in esso contenuti devono essere chiusi, in caso contrario potrebbe essere orfani.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> In questo caso il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo chiude il <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli, non l&quot;utente e deve inoltre essere in grado di terminare le connessioni di eventuali controlli connessi senza alcun rischio di interruzione, in modo tale da completare il processo di pulizia e chiusura di tutti i controlli.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Pertanto, in base alla progettazione di WebPartsDisconnecting (metodo) non può essere annullata in questo scenario. Per un evento correlato che può essere annullato, vedere il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>       Il secondo scenario in cui non è possibile annullare l&quot;evento WebPartsDisconnecting è quando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>metodo viene chiamato (this chiamato durante ogni richiesta a una pagina, ad esempio), viene rilevato un conflitto tra le connessioni esistenti in una pagina.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Ad esempio, ad esempio un utente si connette controllo x al controllo y ma condiviso di un utente si connette controllo x al controllo z e ancora controllo x non è possibile creare più connessioni. In questo caso, le singole impostazioni dell&quot;utente per la connessione hanno la precedenza e <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo risolve il conflitto chiamando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>(metodo) e termina la connessione tra x e z per l&quot;utente specifico.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Poiché la disconnessione è essenziale per risolvere il conflitto, in base alla progettazione di WebPartsDisconnecting evento non può essere annullato in questo scenario.       Il terzo scenario in cui non può essere annullato il metodo WebPartsDisconnecting è quando un <xref:System.Web.UI.WebControls.WebParts.WebPart>o controllo server che è attualmente connesso viene eliminato o chiuso.</xref:System.Web.UI.WebControls.WebParts.WebPart> Poiché il controllo dovrà essere rimosso dalla pagina, è necessario rimuovere la connessione. Pertanto, quando il <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo richiama il <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>(metodo), che a sua volta genera l&quot;evento WebPartsDisconnecting, per impostazione predefinita non è disponibile alcuna possibilità di annullamento dell&quot;evento.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  id: Zones
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Zones
  nameWithType: WebPartManager.Zones
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene un riferimento a una raccolta di tutti i <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zone in una pagina Web."
  remarks: "Viene utilizzata la proprietà di zone dal <xref:System.Web.UI.WebControls.WebParts.WebPartManager>controllo per tenere traccia di <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zone in una pagina Web.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Si noti che la proprietà non fa riferimento a tutti i tipi di zone; solo le zone che derivano da fa riferimento la <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>classe, inclusi <xref:System.Web.UI.WebControls.WebParts.WebPartZone>zone.</xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       Anche se la raccolta a cui fa riferimento la proprietà è di sola lettura, è possibile usarlo per accedere ai singoli oggetti nella raccolta e utilizzarli a livello di codice."
  example:
  - "The following code example demonstrates how to use the Zones property programmatically to access individual <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone controls. Notice that in the declarative markup for the Web page, there are two `<asp:webpartzone>` elements, each containing a server control. In the `<script>` section of the page, the code uses the Zones property to access the individual zones, listing all the zone IDs and then changing the background color on the second zone.  \n  \n [!code-cs[WebParts_WebPartManager_Zones#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_860_1.aspx)]\n [!code-vb[WebParts_WebPartManager_Zones#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_860_1.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page into a browser, if you click the **List Zone IDs** button, the code uses the Zones property to list the IDs of all zones in the collection. If you click the **Change Zone BackColor** button, the code changes the background color of the second zone."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneCollection&quot;> </xref> che fa riferimento a un set di <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> zone."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Zones*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.EndOfStreamException
  isExternal: true
  name: System.IO.EndOfStreamException
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartManager()
  nameWithType: WebPartManager.WebPartManager()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartManager()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ActivateConnections()
  nameWithType: WebPartManager.ActivateConnections()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AddWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
- uid: System.Web.UI.WebControls.WebParts.WebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneBase
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneBase
  nameWithType: WebPartZoneBase
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneBase
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AuthorizeWebPart
  nameWithType: WebPartManager.AuthorizeWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAuthorizationEventHandler
  nameWithType: WebPartAuthorizationEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: TransformerTypeCollection
  nameWithType: TransformerTypeCollection
  fullName: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartConnecting(WebPart)
  nameWithType: WebPartManager.BeginWebPartConnecting(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartEditing(WebPart)
  nameWithType: WebPartManager.BeginWebPartEditing(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BrowseDisplayMode
  nameWithType: WebPartManager.BrowseDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayMode
  nameWithType: WebPartDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ProviderConnectionPoint
  nameWithType: ProviderConnectionPoint
  fullName: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
- uid: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ConsumerConnectionPoint
  nameWithType: ConsumerConnectionPoint
  fullName: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
- uid: System.Web.UI.WebControls.WebParts.WebPartTransformer
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartTransformer
  nameWithType: WebPartTransformer
  fullName: System.Web.UI.WebControls.WebParts.WebPartTransformer
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CatalogDisplayMode
  nameWithType: WebPartManager.CatalogDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CheckRenderClientScript()
  nameWithType: WebPartManager.CheckRenderClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseWebPart(WebPart)
  nameWithType: WebPartManager.CloseWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectDisplayMode
  nameWithType: WebPartManager.ConnectDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Connections
  nameWithType: WebPartManager.Connections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionCollection
  nameWithType: WebPartConnectionCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectionsActivated
  nameWithType: WebPartManager.ConnectionsActivated
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectionsActivating
  nameWithType: WebPartManager.ConnectionsActivating
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnection
  nameWithType: WebPartConnection
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Controls
  nameWithType: WebPartManager.Controls
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CopyWebPart(WebPart)
  nameWithType: WebPartManager.CopyWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateAvailableTransformers()
  nameWithType: WebPartManager.CreateAvailableTransformers()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateControlCollection()
  nameWithType: WebPartManager.CreateControlCollection()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDisplayModes()
  nameWithType: WebPartManager.CreateDisplayModes()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes()
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCollection
  nameWithType: WebPartDisplayModeCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicConnectionID()
  nameWithType: WebPartManager.CreateDynamicConnectionID()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicWebPartID(Type)
  nameWithType: WebPartManager.CreateDynamicWebPartID(Type)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateErrorWebPart(String,String,String,String,String)
  nameWithType: WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(String,String,String,String,String)
- uid: System.Web.UI.WebControls.WebParts.ErrorWebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ErrorWebPart
  nameWithType: ErrorWebPart
  fullName: System.Web.UI.WebControls.WebParts.ErrorWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreatePersonalization()
  nameWithType: WebPartManager.CreatePersonalization()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization()
- uid: System.Web.UI.WebControls.WebParts.WebPartPersonalization
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartPersonalization
  nameWithType: WebPartPersonalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartPersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateWebPart(Control)
  nameWithType: WebPartManager.CreateWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(Control)
- uid: System.Web.UI.WebControls.WebParts.GenericWebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: GenericWebPart
  nameWithType: GenericWebPart
  fullName: System.Web.UI.WebControls.WebParts.GenericWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWebPart(WebPart)
  nameWithType: WebPartManager.DeleteWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DesignDisplayMode
  nameWithType: WebPartManager.DesignDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebPart(WebPart)
  nameWithType: WebPartManager.DisconnectWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebParts(WebPartConnection)
  nameWithType: WebPartManager.DisconnectWebParts(WebPartConnection)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(WebPartConnection)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModeChanged
  nameWithType: WebPartManager.DisplayModeChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeEventHandler
  nameWithType: WebPartDisplayModeEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModeChanging
  nameWithType: WebPartManager.DisplayModeChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCancelEventHandler
  nameWithType: WebPartDisplayModeCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EditDisplayMode
  nameWithType: WebPartManager.EditDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartConnecting()
  nameWithType: WebPartManager.EndWebPartConnecting()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartEditing()
  nameWithType: WebPartManager.EndWebPartEditing()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportWebPart(WebPart,XmlWriter)
  nameWithType: WebPartManager.ExportWebPart(WebPart,XmlWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(WebPart,XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Focus()
  nameWithType: WebPartManager.Focus()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Focus()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetConsumerConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetConsumerConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(WebPart)
- uid: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ConsumerConnectionPointCollection
  nameWithType: ConsumerConnectionPointCollection
  fullName: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetCurrentWebPartManager(Page)
  nameWithType: WebPartManager.GetCurrentWebPartManager(Page)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(Page)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetDisplayTitle(WebPart)
  nameWithType: WebPartManager.GetDisplayTitle(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetExportUrl(WebPart)
  nameWithType: WebPartManager.GetExportUrl(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetGenericWebPart(Control)
  nameWithType: WebPartManager.GetGenericWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(Control)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetProviderConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetProviderConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(WebPart)
- uid: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ProviderConnectionPointCollection
  nameWithType: ProviderConnectionPointCollection
  fullName: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ImportWebPart(XmlReader,String)
  nameWithType: WebPartManager.ImportWebPart(XmlReader,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(XmlReader,String)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Internals
  nameWithType: WebPartManager.Internals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
- uid: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManagerInternals
  nameWithType: WebPartManagerInternals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized(WebPart)
  nameWithType: WebPartManager.IsAuthorized(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized(Type,String,String,Boolean)
  nameWithType: WebPartManager.IsAuthorized(Type,String,String,Boolean)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(Type,String,String,Boolean)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: WebPartManager.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PersonalizationDictionary
  nameWithType: PersonalizationDictionary
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MoveWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  nameWithType: WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAuthorizationEventArgs
  nameWithType: WebPartAuthorizationEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivated(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivated(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivating(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivating(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeEventArgs
  nameWithType: WebPartDisplayModeEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCancelEventArgs
  nameWithType: WebPartDisplayModeCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: WebPartManager.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: WebPartManager.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanged(WebPartEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartEventArgs
  nameWithType: WebPartEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanging(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCancelEventArgs
  nameWithType: WebPartCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: WebPartManager.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdded(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartAdded(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdding(WebPartAddingEventArgs)
  nameWithType: WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAddingEventArgs
  nameWithType: WebPartAddingEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosed(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartClosed(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosing(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleted(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleting(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoved(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartMoved(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoving(WebPartMovingEventArgs)
  nameWithType: WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartMovingEventArgs
  nameWithType: WebPartMovingEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsEventArgs
  nameWithType: WebPartConnectionsEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsCancelEventArgs
  nameWithType: WebPartConnectionsCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Personalization
  nameWithType: WebPartManager.Personalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: RegisterClientScript()
  nameWithType: WebPartManager.RegisterClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: WebPartManager.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveControlState()
  nameWithType: WebPartManager.SaveControlState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPartChanged
  nameWithType: WebPartManager.SelectedWebPartChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartEventHandler
  nameWithType: WebPartEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPartChanging
  nameWithType: WebPartManager.SelectedWebPartChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCancelEventHandler
  nameWithType: WebPartCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetPersonalizationDirty()
  nameWithType: WebPartManager.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetSelectedWebPart(WebPart)
  nameWithType: WebPartManager.SetSelectedWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SkinID
  nameWithType: WebPartManager.SkinID
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: TrackViewState()
  nameWithType: WebPartManager.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Visible
  nameWithType: WebPartManager.Visible
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartAdded
  nameWithType: WebPartManager.WebPartAdded
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartAdding
  nameWithType: WebPartManager.WebPartAdding
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
- uid: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAddingEventHandler
  nameWithType: WebPartAddingEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartClosed
  nameWithType: WebPartManager.WebPartClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartClosing
  nameWithType: WebPartManager.WebPartClosing
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartDeleted
  nameWithType: WebPartManager.WebPartDeleted
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartDeleting
  nameWithType: WebPartManager.WebPartDeleting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartMoved
  nameWithType: WebPartManager.WebPartMoved
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartMoving
  nameWithType: WebPartManager.WebPartMoving
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
- uid: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartMovingEventHandler
  nameWithType: WebPartMovingEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebParts
  nameWithType: WebPartManager.WebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCollection
  nameWithType: WebPartCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsConnected
  nameWithType: WebPartManager.WebPartsConnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsEventHandler
  nameWithType: WebPartConnectionsEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsConnecting
  nameWithType: WebPartManager.WebPartsConnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsCancelEventHandler
  nameWithType: WebPartConnectionsCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsDisconnected
  nameWithType: WebPartManager.WebPartsDisconnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsDisconnecting
  nameWithType: WebPartManager.WebPartsDisconnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Zones
  nameWithType: WebPartManager.Zones
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneCollection
  nameWithType: WebPartZoneCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ActivateConnections
  nameWithType: WebPartManager.ActivateConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AddWebPart
  nameWithType: WebPartManager.AddWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartConnecting
  nameWithType: WebPartManager.BeginWebPartConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartEditing
  nameWithType: WebPartManager.BeginWebPartEditing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts
  nameWithType: WebPartManager.CanConnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CheckRenderClientScript
  nameWithType: WebPartManager.CheckRenderClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseWebPart
  nameWithType: WebPartManager.CloseWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Connections
  nameWithType: WebPartManager.Connections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts
  nameWithType: WebPartManager.ConnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Controls
  nameWithType: WebPartManager.Controls
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CopyWebPart
  nameWithType: WebPartManager.CopyWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateAvailableTransformers
  nameWithType: WebPartManager.CreateAvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateControlCollection
  nameWithType: WebPartManager.CreateControlCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDisplayModes
  nameWithType: WebPartManager.CreateDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicConnectionID
  nameWithType: WebPartManager.CreateDynamicConnectionID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicWebPartID
  nameWithType: WebPartManager.CreateDynamicWebPartID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateErrorWebPart
  nameWithType: WebPartManager.CreateErrorWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreatePersonalization
  nameWithType: WebPartManager.CreatePersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateWebPart
  nameWithType: WebPartManager.CreateWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWebPart
  nameWithType: WebPartManager.DeleteWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebPart
  nameWithType: WebPartManager.DisconnectWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebParts
  nameWithType: WebPartManager.DisconnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartConnecting
  nameWithType: WebPartManager.EndWebPartConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartEditing
  nameWithType: WebPartManager.EndWebPartEditing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportWebPart
  nameWithType: WebPartManager.ExportWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Focus
  nameWithType: WebPartManager.Focus
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetConsumerConnectionPoints
  nameWithType: WebPartManager.GetConsumerConnectionPoints
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetCurrentWebPartManager
  nameWithType: WebPartManager.GetCurrentWebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetDisplayTitle
  nameWithType: WebPartManager.GetDisplayTitle
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetExportUrl
  nameWithType: WebPartManager.GetExportUrl
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetGenericWebPart
  nameWithType: WebPartManager.GetGenericWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetProviderConnectionPoints
  nameWithType: WebPartManager.GetProviderConnectionPoints
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ImportWebPart
  nameWithType: WebPartManager.ImportWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Internals
  nameWithType: WebPartManager.Internals
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized
  nameWithType: WebPartManager.IsAuthorized
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadControlState
  nameWithType: WebPartManager.LoadControlState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadCustomPersonalizationState
  nameWithType: WebPartManager.LoadCustomPersonalizationState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MoveWebPart
  nameWithType: WebPartManager.MoveWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnAuthorizeWebPart
  nameWithType: WebPartManager.OnAuthorizeWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivated
  nameWithType: WebPartManager.OnConnectionsActivated
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivating
  nameWithType: WebPartManager.OnConnectionsActivating
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanged
  nameWithType: WebPartManager.OnDisplayModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanging
  nameWithType: WebPartManager.OnDisplayModeChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnInit
  nameWithType: WebPartManager.OnInit
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnPreRender
  nameWithType: WebPartManager.OnPreRender
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanged
  nameWithType: WebPartManager.OnSelectedWebPartChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanging
  nameWithType: WebPartManager.OnSelectedWebPartChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnUnload
  nameWithType: WebPartManager.OnUnload
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdded
  nameWithType: WebPartManager.OnWebPartAdded
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdding
  nameWithType: WebPartManager.OnWebPartAdding
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosed
  nameWithType: WebPartManager.OnWebPartClosed
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosing
  nameWithType: WebPartManager.OnWebPartClosing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleted
  nameWithType: WebPartManager.OnWebPartDeleted
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleting
  nameWithType: WebPartManager.OnWebPartDeleting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoved
  nameWithType: WebPartManager.OnWebPartMoved
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoving
  nameWithType: WebPartManager.OnWebPartMoving
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnected
  nameWithType: WebPartManager.OnWebPartsConnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnecting
  nameWithType: WebPartManager.OnWebPartsConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnected
  nameWithType: WebPartManager.OnWebPartsDisconnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnecting
  nameWithType: WebPartManager.OnWebPartsDisconnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Personalization
  nameWithType: WebPartManager.Personalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: RegisterClientScript
  nameWithType: WebPartManager.RegisterClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Render
  nameWithType: WebPartManager.Render
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveControlState
  nameWithType: WebPartManager.SaveControlState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveCustomPersonalizationState
  nameWithType: WebPartManager.SaveCustomPersonalizationState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetPersonalizationDirty
  nameWithType: WebPartManager.SetPersonalizationDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetSelectedWebPart
  nameWithType: WebPartManager.SetSelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SkinID
  nameWithType: WebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: TrackViewState
  nameWithType: WebPartManager.TrackViewState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Visible
  nameWithType: WebPartManager.Visible
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebParts
  nameWithType: WebPartManager.WebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Zones
  nameWithType: WebPartManager.Zones
