### YamlMime:ManagedReference
items:
- uid: System.Net.ServicePoint
  id: ServicePoint
  children:
  - System.Net.ServicePoint.Address
  - System.Net.ServicePoint.BindIPEndPointDelegate
  - System.Net.ServicePoint.Certificate
  - System.Net.ServicePoint.ClientCertificate
  - System.Net.ServicePoint.CloseConnectionGroup(System.String)
  - System.Net.ServicePoint.ConnectionLeaseTimeout
  - System.Net.ServicePoint.ConnectionLimit
  - System.Net.ServicePoint.ConnectionName
  - System.Net.ServicePoint.CurrentConnections
  - System.Net.ServicePoint.Expect100Continue
  - System.Net.ServicePoint.IdleSince
  - System.Net.ServicePoint.MaxIdleTime
  - System.Net.ServicePoint.ProtocolVersion
  - System.Net.ServicePoint.ReceiveBufferSize
  - System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  - System.Net.ServicePoint.SupportsPipelining
  - System.Net.ServicePoint.UseNagleAlgorithm
  langs:
  - csharp
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
  type: Class
  summary: "Fornisce la gestione connessione per le connessioni HTTP."
  remarks: "La classe ServicePoint gestisce le connessioni a una risorsa Internet in base alle informazioni host passate della risorsa URI Uniform Resource Identifier (). La connessione iniziale alla risorsa determina le informazioni che gestisce l&quot;oggetto ServicePoint, che viene quindi condiviso da tutte le richieste successive a tale risorsa.       ServicePoint oggetti gestiti dalla <xref:System.Net.ServicePointManager>classe e vengono creati, se necessario, con la <xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=fullName>metodo.</xref:System.Net.ServicePointManager.FindServicePoint%2A?displayProperty=fullName> </xref:System.Net.ServicePointManager> ServicePoint oggetti non vengono mai creati direttamente, ma vengono sempre creati e gestiti dalla <xref:System.Net.ServicePointManager>classe.</xref:System.Net.ServicePointManager> È impostato il numero massimo di oggetti ServicePoint che possono essere creati il <xref:System.Net.ServicePointManager.MaxServicePoints%2A?displayProperty=fullName>proprietà.</xref:System.Net.ServicePointManager.MaxServicePoints%2A?displayProperty=fullName>       Ogni oggetto ServicePoint mantiene la propria connessione a una risorsa Internet fino a quando non è rimasto inattivo superiore a quello specificato nella <xref:System.Net.ServicePoint.MaxIdleTime%2A>proprietà.</xref:System.Net.ServicePoint.MaxIdleTime%2A> Quando una ServicePoint supera il <xref:System.Net.ServicePoint.MaxIdleTime%2A>valore, può essere riutilizzata in un&quot;altra connessione.</xref:System.Net.ServicePoint.MaxIdleTime%2A> Il valore predefinito di <xref:System.Net.ServicePoint.MaxIdleTime%2A>è l&quot;impostazione di <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName>proprietà.</xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName> </xref:System.Net.ServicePoint.MaxIdleTime%2A>       Quando il <xref:System.Net.ServicePoint.ConnectionLeaseTimeout%2A>è impostata su un valore diverso da -1 e trascorre il tempo specificato, una connessione ServicePoint attiva viene chiusa dopo la richiesta successiva.</xref:System.Net.ServicePoint.ConnectionLeaseTimeout%2A> Ciò è utile per le applicazioni che non richiedono connessioni attive che sono aperti in modo indefinito, come se fossero per impostazione predefinita.      > [!NOTE] > In condizioni di carico elevato, alcune applicazioni possono essere eseguite da thread liberi nel pool di thread, causando prestazioni insufficienti del sistema (ad esempio gli orari di transazione elevati e variabili). Vedere [http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp](http://msdn.microsoft.com/library/default.asp?url=/library/dnpag/html/scalenetchapt17.asp) per un numero di modifiche alla configurazione apportate per risolvere il problema."
  example:
  - "The following code example creates a ServicePoint object that connects to the URI www.contoso.com.  \n  \n [!code-cpp[System.Net.ServicePoint#1](~/add/codesnippet/cpp/t-system.net.servicepoint_1.cpp)]\n [!code-vb[System.Net.ServicePoint#1](~/add/codesnippet/visualbasic/t-system.net.servicepoint_1.vb)]\n [!code-cs[System.Net.ServicePoint#1](~/add/codesnippet/csharp/t-system.net.servicepoint_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.CompilerServices.FriendAccessAllowed]

      public class ServicePoint
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.ServicePoint.Address
  id: Address
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: Address
  nameWithType: ServicePoint.Address
  fullName: System.Net.ServicePoint.Address
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene l&quot;identificatore URI (Uniform Resource) del server che si <xref href=&quot;System.Net.ServicePoint&quot;> </xref> si connette l&quot;oggetto."
  remarks: ''
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#2](~/add/codesnippet/cpp/p-system.net.servicepoin_3_1.cpp)]\n [!code-vb[System.Net.ServicePoint#2](~/add/codesnippet/visualbasic/p-system.net.servicepoin_3_1.vb)]\n [!code-cs[System.Net.ServicePoint#2](~/add/codesnippet/csharp/p-system.net.servicepoin_3_1.cs)]"
  syntax:
    content: public Uri Address { get; }
    return:
      type: System.Uri
      description: "Un&quot;istanza di <xref:System.Uri>classe che contiene l&quot;URI del server Internet da questo <xref href=&quot;System.Net.ServicePoint&quot;> </xref> si connette l&quot;oggetto.</xref:System.Uri>"
  overload: System.Net.ServicePoint.Address*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il <xref href=&quot;System.Net.ServicePoint&quot;> </xref> è in modalità di host."
  platform:
  - net462
- uid: System.Net.ServicePoint.BindIPEndPointDelegate
  id: BindIPEndPointDelegate
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: BindIPEndPointDelegate
  nameWithType: ServicePoint.BindIPEndPointDelegate
  fullName: System.Net.ServicePoint.BindIPEndPointDelegate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Specifica il delegato per associare una variabile locale <xref:System.Net.IPEndPoint>con un <xref href=&quot;System.Net.ServicePoint&quot;> </xref>.</xref:System.Net.IPEndPoint>"
  remarks: "Alcune tecniche di bilanciamento del carico richiedono un client di utilizzare un IP locale indirizzo e la porta numero specifici, anziché <xref:System.Net.IPAddress.Any?displayProperty=fullName>(o <xref:System.Net.IPAddress.IPv6Any?displayProperty=fullName>per protocollo Internet versione 6) e una porta temporanea</xref:System.Net.IPAddress.IPv6Any?displayProperty=fullName> </xref:System.Net.IPAddress.Any?displayProperty=fullName> Il BindIPEndPointDelegate può soddisfare questo requisito."
  syntax:
    content: public System.Net.BindIPEndPoint BindIPEndPointDelegate { get; set; }
    return:
      type: System.Net.BindIPEndPoint
      description: "Un delegato che forza una <xref href=&quot;System.Net.ServicePoint&quot;> </xref> di utilizzare un numero porta e indirizzo IP (Internet Protocol) locale specifico. Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePoint.BindIPEndPointDelegate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.Certificate
  id: Certificate
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: Certificate
  nameWithType: ServicePoint.Certificate
  fullName: System.Net.ServicePoint.Certificate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene il certificato ricevuto per questo <xref href=&quot;System.Net.ServicePoint&quot;> </xref> oggetto."
  remarks: "Sebbene un <xref:System.Net.ServicePoint>oggetto può rendere più connessioni a una risorsa Internet, è possibile gestire un solo certificato.</xref:System.Net.ServicePoint>"
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_1_1.cpp)]\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_1_1.vb)]\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_1_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Un&quot;istanza di <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> classe che contiene il certificato di sicurezza ricevuto per il <xref href=&quot;System.Net.ServicePoint&quot;> </xref> oggetto."
  overload: System.Net.ServicePoint.Certificate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.ClientCertificate
  id: ClientCertificate
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ClientCertificate
  nameWithType: ServicePoint.ClientCertificate
  fullName: System.Net.ServicePoint.ClientCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene l&quot;ultimo certificato client inviato al server."
  remarks: ''
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_19_1.cpp)]\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_19_1.vb)]\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_19_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> oggetto che contiene i valori pubblici dell&quot;ultimo certificato client inviato al server."
  overload: System.Net.ServicePoint.ClientCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.CloseConnectionGroup(System.String)
  id: CloseConnectionGroup(System.String)
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: CloseConnectionGroup(String)
  nameWithType: ServicePoint.CloseConnectionGroup(String)
  fullName: System.Net.ServicePoint.CloseConnectionGroup(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Rimuove il gruppo di connessione specificata da questo <xref href=&quot;System.Net.ServicePoint&quot;> </xref> oggetto."
  remarks: "Gruppi di connessione associano un set di richieste a un particolare tipo di connessione o un set di connessioni. Questo metodo rimuove e chiude tutte le connessioni che appartengono al gruppo di connessione specificata."
  syntax:
    content: public bool CloseConnectionGroup (string connectionGroupName);
    parameters:
    - id: connectionGroupName
      type: System.String
      description: "Il nome del gruppo di connessione che contiene le connessioni da chiudere e rimuovere da questo punto di servizio."
    return:
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>valore che indica se il gruppo di connessione è stata chiusa.</xref:System.Boolean>"
  overload: System.Net.ServicePoint.CloseConnectionGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.ConnectionLeaseTimeout
  id: ConnectionLeaseTimeout
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ConnectionLeaseTimeout
  nameWithType: ServicePoint.ConnectionLeaseTimeout
  fullName: System.Net.ServicePoint.ConnectionLeaseTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il numero di millisecondi dopo il quale un oggetto attivo <xref href=&quot;System.Net.ServicePoint&quot;> </xref> connessione viene chiusa."
  remarks: "È possibile utilizzare questa proprietà per garantire che un <xref:System.Net.ServicePoint>connessioni attive dell&quot;oggetto non rimangono aperte per un periodo illimitato.</xref:System.Net.ServicePoint> Questa proprietà è destinata a scenari in cui le connessioni devono essere eliminate e ristabilite periodicamente, ad esempio scenari di bilanciamento del carico.       Per impostazione predefinita, quando <xref:System.Net.FtpWebRequest.KeepAlive%2A>è `true` per una richiesta, il <xref:System.Net.ServicePoint.MaxIdleTime%2A>proprietà imposta il timeout di chiusura <xref:System.Net.ServicePoint>connessioni a causa di inattività.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.MaxIdleTime%2A> </xref:System.Net.FtpWebRequest.KeepAlive%2A> Se il <xref:System.Net.ServicePoint>dispone di connessioni attive, <xref:System.Net.ServicePoint.MaxIdleTime%2A>non ha alcun effetto e le connessioni rimangono aperte per un periodo illimitato.</xref:System.Net.ServicePoint.MaxIdleTime%2A> </xref:System.Net.ServicePoint>       Quando la proprietà di ConnectionLeaseTimeout è impostata su un valore diverso da-1 e dopo il tempo specificato allo scadere dell&quot;intervallo, un oggetto attivo <xref:System.Net.ServicePoint>connessione viene chiusa dopo l&quot;elaborazione di una richiesta impostando <xref:System.Net.FtpWebRequest.KeepAlive%2A>a `false` in tale richiesta.</xref:System.Net.FtpWebRequest.KeepAlive%2A> </xref:System.Net.ServicePoint>       L&quot;impostazione di questo valore influisce su tutte le connessioni gestite dal <xref:System.Net.ServicePoint>oggetto.</xref:System.Net.ServicePoint>"
  example:
  - "The following code example sets the value of this property.  \n  \n [!code-cs[NCLServicePoint#1](~/add/codesnippet/csharp/p-system.net.servicepoin_15_1.cs)]\n [!code-vb[NCLServicePoint#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_15_1.vb)]\n [!code-cpp[NCLServicePoint#1](~/add/codesnippet/cpp/p-system.net.servicepoin_15_1.cpp)]"
  syntax:
    content: public int ConnectionLeaseTimeout { get; set; }
    return:
      type: System.Int32
      description: "Oggetto <xref:System.Int32>che specifica il numero di millisecondi che un oggetto attivo <xref href=&quot;System.Net.ServicePoint&quot;> </xref> connessione rimane aperta.</xref:System.Int32> Il valore predefinito è -1, che consente a un oggetto attivo <xref href=&quot;System.Net.ServicePoint&quot;> </xref> connessione rimanere connesso per un periodo illimitato. Impostare questa proprietà su 0 per forzare <xref href=&quot;System.Net.ServicePoint&quot;> </xref> chiusura dopo una richiesta di manutenzione delle connessioni."
  overload: System.Net.ServicePoint.ConnectionLeaseTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore specificato per un&quot;operazione set è un numero negativo minore di -1."
  platform:
  - net462
- uid: System.Net.ServicePoint.ConnectionLimit
  id: ConnectionLimit
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ConnectionLimit
  nameWithType: ServicePoint.ConnectionLimit
  fullName: System.Net.ServicePoint.ConnectionLimit
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta il numero massimo di connessioni consentite sul <xref href=&quot;System.Net.ServicePoint&quot;> </xref> oggetto."
  remarks: "La proprietà ConnectionLimit imposta il numero massimo di connessioni che il <xref:System.Net.ServicePoint>oggetto possibile apportare a una risorsa Internet.</xref:System.Net.ServicePoint> Il valore della proprietà ConnectionLimit impostato sul valore del <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A?displayProperty=fullName>proprietà quando il <xref:System.Net.ServicePoint>oggetto viene creato; successive diventa <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A>non hanno alcun effetto su esistente <xref:System.Net.ServicePoint>oggetti.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> </xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A?displayProperty=fullName>"
  example:
  - "The following code example uses the ConnectionLimit property to check the maximum number of connections that the <xref:System.Net.ServicePoint> object can make to the specified Uniform Resource Identifier (URI).  \n  \n [!code-cpp[System.Net.ServicePoint#4](~/add/codesnippet/cpp/p-system.net.servicepoin_6_1.cpp)]\n [!code-vb[System.Net.ServicePoint#4](~/add/codesnippet/visualbasic/p-system.net.servicepoin_6_1.vb)]\n [!code-cs[System.Net.ServicePoint#4](~/add/codesnippet/csharp/p-system.net.servicepoin_6_1.cs)]"
  syntax:
    content: public int ConnectionLimit { get; set; }
    return:
      type: System.Int32
      description: "Il numero massimo di connessioni consentite sul <xref href=&quot;System.Net.ServicePoint&quot;> </xref> oggetto."
  overload: System.Net.ServicePoint.ConnectionLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il limite di connessioni è uguale o minore di 0."
  platform:
  - net462
- uid: System.Net.ServicePoint.ConnectionName
  id: ConnectionName
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ConnectionName
  nameWithType: ServicePoint.ConnectionName
  fullName: System.Net.ServicePoint.ConnectionName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene il nome della connessione."
  remarks: "Se il <xref:System.Net.ServicePoint>oggetto è stato costruito con un <xref:System.Uri>oggetto (il <xref:System.Net.ServicePointManager.FindServicePoint%2A>o <xref:System.Net.ServicePointManager.FindServicePoint%2A>metodi, ad esempio), quindi la proprietà ConnectionName rappresenta il <xref:System.Uri.Scheme%2A>proprietà del <xref:System.Uri>oggetto utilizzato.</xref:System.Uri> </xref:System.Uri.Scheme%2A> </xref:System.Net.ServicePointManager.FindServicePoint%2A> </xref:System.Net.ServicePointManager.FindServicePoint%2A> </xref:System.Uri> </xref:System.Net.ServicePoint>       Se il <xref:System.Net.ServicePoint>oggetto è stato costruito da un host di rete e una porta, la proprietà ConnectionName contiene una stringa che rappresenta l&quot;host e la rete porta</xref:System.Net.ServicePoint> Se è impostata la proprietà ConnectionName quando viene costruita da un host e una porta, solo <xref:System.Net.WebRequest>oggetti con lo stesso <xref:System.Net.WebRequest.ConnectionGroupName%2A>valore possibile utilizzare questo <xref:System.Net.ServicePoint>oggetto.</xref:System.Net.ServicePoint> </xref:System.Net.WebRequest.ConnectionGroupName%2A> </xref:System.Net.WebRequest>"
  example:
  - >-
    [!code-cpp[System.Net.ServicePoint#4](~/add/codesnippet/cpp/p-system.net.servicepoin_0_1.cpp)]
     [!code-vb[System.Net.ServicePoint#4](~/add/codesnippet/visualbasic/p-system.net.servicepoin_0_1.vb)]
     [!code-cs[System.Net.ServicePoint#4](~/add/codesnippet/csharp/p-system.net.servicepoin_0_1.cs)]
  syntax:
    content: public string ConnectionName { get; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>che rappresenta il nome della connessione.</xref:System.String>"
  overload: System.Net.ServicePoint.ConnectionName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.CurrentConnections
  id: CurrentConnections
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: CurrentConnections
  nameWithType: ServicePoint.CurrentConnections
  fullName: System.Net.ServicePoint.CurrentConnections
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene il numero di connessioni aperte associate al <xref href=&quot;System.Net.ServicePoint&quot;> </xref> oggetto."
  remarks: "La proprietà CurrentConnections contiene il numero di connessioni aperte di Internet associata a questo <xref:System.Net.ServicePoint>oggetto.</xref:System.Net.ServicePoint> Il valore di CurrentConnections non può superare quello di <xref:System.Net.ServicePoint.ConnectionLimit%2A>.</xref:System.Net.ServicePoint.ConnectionLimit%2A>"
  example:
  - "The following code example uses the CurrentConnections property to determine the number of open Internet connections associated with this <xref:System.Net.ServicePoint> object.  \n  \n [!code-cpp[System.Net.ServicePoint#2](~/add/codesnippet/cpp/p-system.net.servicepoin_2_1.cpp)]\n [!code-vb[System.Net.ServicePoint#2](~/add/codesnippet/visualbasic/p-system.net.servicepoin_2_1.vb)]\n [!code-cs[System.Net.ServicePoint#2](~/add/codesnippet/csharp/p-system.net.servicepoin_2_1.cs)]"
  syntax:
    content: public int CurrentConnections { get; }
    return:
      type: System.Int32
      description: "Il numero di connessioni aperte associate al <xref href=&quot;System.Net.ServicePoint&quot;> </xref> oggetto."
  overload: System.Net.ServicePoint.CurrentConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.Expect100Continue
  id: Expect100Continue
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: Expect100Continue
  nameWithType: ServicePoint.Expect100Continue
  fullName: System.Net.ServicePoint.Expect100Continue
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta un <xref:System.Boolean>valore che determina se 100-Continue viene utilizzato il comportamento.</xref:System.Boolean>"
  remarks: "Quando questa proprietà è impostata su `true`, le richieste client che utilizzano il `POST` metodo prevede di ricevere un 100-continuare risposta dal server per indicare che il client deve inviare i dati da registrare. Questo meccanismo consente ai client di evitare l&quot;invio di grandi quantità di dati in rete quando il server, in base alle intestazioni di richiesta, intende rifiutare la richiesta.       Si supponga ad esempio la proprietà Expect100Continue è `false`. Quando la richiesta viene inviata al server, include i dati. Se, dopo aver letto le intestazioni della richiesta, il server richiede l&quot;autenticazione e invia una risposta 401, il client deve inviare di nuovo i dati con intestazioni di autenticazione appropriate.       Se la proprietà Expect100Continue `true`, le intestazioni della richiesta vengono inviate al server. Se il server non ha rifiutato la richiesta, viene inviato un 100-continuare la segnalazione di risposta che i dati possono essere trasmessi. Se, come nell&quot;esempio precedente, il server richiede l&quot;autenticazione, viene inviata la risposta 401 e il client non ha trasmesso inutilmente i dati.       La modifica del valore di questa proprietà non influiscono sulle connessioni esistenti. Solo le connessioni create dopo la modifica sono interessate.       Expect 100-continuare è descritta nella specifica IETF RFC 2616 Sezione 10.1.1."
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#9](~/add/codesnippet/cpp/p-system.net.servicepoin_4_1.cpp)]\n [!code-vb[System.Net.ServicePoint#9](~/add/codesnippet/visualbasic/p-system.net.servicepoin_4_1.vb)]\n [!code-cs[System.Net.ServicePoint#9](~/add/codesnippet/csharp/p-system.net.servicepoin_4_1.cs)]"
  syntax:
    content: public bool Expect100Continue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per prevedere i 100-continuare le risposte per <xref uid=&quot;langword_csharp_POST&quot; name=&quot;POST&quot; href=&quot;&quot;> </xref> richieste; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePoint.Expect100Continue*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.IdleSince
  id: IdleSince
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: IdleSince
  nameWithType: ServicePoint.IdleSince
  fullName: System.Net.ServicePoint.IdleSince
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene la data e ora che il <xref href=&quot;System.Net.ServicePoint&quot;> </xref> oggetto ultima connessione a un host."
  remarks: "La proprietà IdleSince registra l&quot;ultima data e ora in cui un punto di servizio è stato disconnesso da un host. Quando la differenza tra l&quot;ora corrente e IdleSince supera il valore di <xref:System.Net.ServicePoint.MaxIdleTime%2A>, <xref:System.Net.ServicePoint>l&quot;oggetto è disponibile per il riutilizzo in un&quot;altra connessione.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.MaxIdleTime%2A>"
  example:
  - "The following code example uses the IdleSince property to set and retrieve the date and time that the <xref:System.Net.ServicePoint> object was last connected to a host.  \n  \n [!code-cpp[System.Net.ServicePoint#3](~/add/codesnippet/cpp/p-system.net.servicepoin_7_1.cpp)]\n [!code-vb[System.Net.ServicePoint#3](~/add/codesnippet/visualbasic/p-system.net.servicepoin_7_1.vb)]\n [!code-cs[System.Net.ServicePoint#3](~/add/codesnippet/csharp/p-system.net.servicepoin_7_1.cs)]"
  syntax:
    content: public DateTime IdleSince { get; }
    return:
      type: System.DateTime
      description: "Oggetto <xref:System.DateTime>oggetto che contiene la data e ora in cui il <xref href=&quot;System.Net.ServicePoint&quot;> </xref> oggetto ultima connessione.</xref:System.DateTime>"
  overload: System.Net.ServicePoint.IdleSince*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.MaxIdleTime
  id: MaxIdleTime
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: MaxIdleTime
  nameWithType: ServicePoint.MaxIdleTime
  fullName: System.Net.ServicePoint.MaxIdleTime
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta la quantità di tempo una connessione associata la <xref href=&quot;System.Net.ServicePoint&quot;> </xref> oggetto può rimanere inattivo prima che la connessione viene chiusa."
  remarks: "È possibile impostare MaxIdleTime <xref:System.Threading.Timeout.Infinite?displayProperty=fullName>per indicare che una connessione associata la <xref:System.Net.ServicePoint>oggetto non deve mai.</xref:System.Net.ServicePoint> </xref:System.Threading.Timeout.Infinite?displayProperty=fullName>       Il valore predefinito della proprietà MaxIdleTime è il valore di <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName>proprietà quando il <xref:System.Net.ServicePoint>viene creato l&quot;oggetto.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A?displayProperty=fullName> Le modifiche successive il <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A>proprietà non hanno alcun effetto su esistente <xref:System.Net.ServicePoint>oggetti.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A>       Quando il MaxIdleTime per una connessione associata a un <xref:System.Net.ServicePoint>viene superato, la connessione rimane aperta fino a quando l&quot;applicazione tenta di utilizzare la connessione.</xref:System.Net.ServicePoint> In quel momento, il Framework chiude la connessione e crea una nuova connessione all&quot;host remoto."
  example:
  - "The following code example uses the MaxIdleTime property to set and retrieve the <xref:System.Net.ServicePoint> idle time.  \n  \n [!code-cpp[System.Net.ServicePoint#3](~/add/codesnippet/cpp/p-system.net.servicepoin_11_1.cpp)]\n [!code-vb[System.Net.ServicePoint#3](~/add/codesnippet/visualbasic/p-system.net.servicepoin_11_1.vb)]\n [!code-cs[System.Net.ServicePoint#3](~/add/codesnippet/csharp/p-system.net.servicepoin_11_1.cs)]"
  syntax:
    content: public int MaxIdleTime { get; set; }
    return:
      type: System.Int32
      description: "Il periodo di tempo, espresso in millisecondi, che una connessione associata la <xref href=&quot;System.Net.ServicePoint&quot;> </xref> oggetto può rimanere inattivo prima che venga chiuso e riutilizzato per un&quot;altra connessione."
  overload: System.Net.ServicePoint.MaxIdleTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "MaxIdleTime è impostato su minore di &lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt; o maggiore di &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.ServicePoint.ProtocolVersion
  id: ProtocolVersion
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ProtocolVersion
  nameWithType: ServicePoint.ProtocolVersion
  fullName: System.Net.ServicePoint.ProtocolVersion
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene la versione del protocollo HTTP che il <xref href=&quot;System.Net.ServicePoint&quot;> </xref> viene utilizzata da object."
  remarks: "Le versioni del protocollo HTTP sono HTTP/1.0 e HTTP/1.1."
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_22_1.cpp)]\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_22_1.vb)]\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_22_1.cs)]"
  syntax:
    content: public virtual Version ProtocolVersion { get; }
    return:
      type: System.Version
      description: "Oggetto <xref:System.Version>oggetto che contiene la versione del protocollo HTTP che il <xref href=&quot;System.Net.ServicePoint&quot;> </xref> viene utilizzata da object.</xref:System.Version>"
  overload: System.Net.ServicePoint.ProtocolVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: ReceiveBufferSize
  nameWithType: ServicePoint.ReceiveBufferSize
  fullName: System.Net.ServicePoint.ReceiveBufferSize
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta la dimensione del buffer di ricezione per il socket usato dalla <xref href=&quot;System.Net.ServicePoint&quot;> </xref>."
  remarks: "Per ulteriori informazioni, vedere <xref:System.Net.Sockets.Socket.ReceiveBufferSize%2A>.</xref:System.Net.Sockets.Socket.ReceiveBufferSize%2A>"
  example:
  - "The following code example sets the value of this property.  \n  \n [!code-cs[NCLServicePoint#1](~/add/codesnippet/csharp/p-system.net.servicepoin_9_1.cs)]\n [!code-vb[NCLServicePoint#1](~/add/codesnippet/visualbasic/p-system.net.servicepoin_9_1.vb)]\n [!code-cpp[NCLServicePoint#1](~/add/codesnippet/cpp/p-system.net.servicepoin_9_1.cpp)]"
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Oggetto <xref:System.Int32>che contiene la dimensione, in byte, del buffer di ricezione.</xref:System.Int32> Il valore predefinito è 8192."
  overload: System.Net.ServicePoint.ReceiveBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore specificato per un&quot;operazione set è maggiore di <xref:System.Int32>.</xref:System.Int32>"
  platform:
  - net462
- uid: System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  id: SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: SetTcpKeepAlive(Boolean,Int32,Int32)
  nameWithType: ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)
  fullName: System.Net.ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Abilita o disabilita l&quot;opzione keep-alive su una connessione TCP."
  remarks: "Un&quot;applicazione può richiedere che un provider TCP/IP consentono l&quot;uso di pacchetti keep-alive su una connessione TCP. Il valore predefinito è che l&quot;utilizzo di pacchetti keep-alive su una connessione TCP sia disabilitata.       Le impostazioni predefinite quando un socket TCP viene inizializzato il timeout di keep-alive set 2 ore e l&quot;intervallo keep-alive su 1 secondo. Il `keepAliveTime` parametro specifica il timeout in millisecondi, con alcuna attività fino a quando non viene inviato il primo pacchetto keep-alive. Il `keepAliveInterval` parametro specifica l&quot;intervallo, espresso in millisecondi, tra l&quot;invio di pacchetti keep-alive successivi se non viene ricevuto alcun riconoscimento. Il numero di probe keep-alive non può essere modificato e viene impostato su 10.       Se viene eliminata una connessione TCP come risultato di keep-alive, un <xref:System.Net.Sockets.SocketError>di <xref:System.Net.Sockets.SocketError>sul socket, viene restituito a tutte le chiamate in corso e tutte le chiamate successive avranno esito negativo con un <xref:System.Net.Sockets.SocketError> <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);
    parameters:
    - id: enabled
      type: System.Boolean
      description: "Se impostato su true, quindi l&quot;opzione keep-alive TCP su una connessione TCP verrà abilitata utilizzando l&quot;oggetto specificato `keepAliveTime` e `keepAliveInterval` valori.       Se impostato su false, quindi l&quot;opzione keep-alive TCP viene disabilitata e i parametri restanti vengono ignorati.       Il valore predefinito è false."
    - id: keepAliveTime
      type: System.Int32
      description: "Specifica il timeout in millisecondi, con alcuna attività fino a quando non viene inviato il primo pacchetto keep-alive.       Il valore deve essere maggiore di 0.  Se viene passato un valore minore o uguale a zero un <xref:System.ArgumentOutOfRangeException>viene generata un&quot;eccezione.</xref:System.ArgumentOutOfRangeException>"
    - id: keepAliveInterval
      type: System.Int32
      description: "Specifica l&quot;intervallo, espresso in millisecondi, tra l&quot;invio di pacchetti keep-alive successivi se non viene ricevuto alcun riconoscimento.       Il valore deve essere maggiore di 0.  Se viene passato un valore minore o uguale a zero un <xref:System.ArgumentOutOfRangeException>viene generata un&quot;eccezione.</xref:System.ArgumentOutOfRangeException>"
  overload: System.Net.ServicePoint.SetTcpKeepAlive*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore specificato per <code> keepAliveTime </code> o <code> keepAliveInterval </code> parametro è minore o uguale a 0."
  platform:
  - net462
- uid: System.Net.ServicePoint.SupportsPipelining
  id: SupportsPipelining
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: SupportsPipelining
  nameWithType: ServicePoint.SupportsPipelining
  fullName: System.Net.ServicePoint.SupportsPipelining
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Indica se il <xref href=&quot;System.Net.ServicePoint&quot;> </xref> oggetto supporta connessioni pipeline."
  remarks: "Pipelining consente ai client di inviare più richieste attraverso una connessione persistente senza attendere che ogni risposta dal server. Il server invia le risposte nello stesso ordine, come le richieste sono state ricevute.       Pipelining è descritto in dettaglio nella sezione 8.1.2.2 di IETF RFC 2616."
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#5](~/add/codesnippet/cpp/p-system.net.servicepoin_18_1.cpp)]\n [!code-vb[System.Net.ServicePoint#5](~/add/codesnippet/visualbasic/p-system.net.servicepoin_18_1.vb)]\n [!code-cs[System.Net.ServicePoint#5](~/add/codesnippet/csharp/p-system.net.servicepoin_18_1.cs)]"
  syntax:
    content: public bool SupportsPipelining { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Net.ServicePoint&quot;> </xref> oggetto supporta connessioni pipeline; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePoint.SupportsPipelining*
  exceptions: []
  platform:
  - net462
- uid: System.Net.ServicePoint.UseNagleAlgorithm
  id: UseNagleAlgorithm
  parent: System.Net.ServicePoint
  langs:
  - csharp
  name: UseNagleAlgorithm
  nameWithType: ServicePoint.UseNagleAlgorithm
  fullName: System.Net.ServicePoint.UseNagleAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene o imposta un <xref:System.Boolean>valore che determina se l&quot;algoritmo Nagle viene usato per le connessioni gestite da questo <xref href=&quot;System.Net.ServicePoint&quot;> </xref> oggetto.</xref:System.Boolean>"
  remarks: "L&quot;algoritmo Nagle viene usato per piccoli pacchetti di dati nel buffer e trasmetterli come un singolo pacchetto. Questo processo, noto come &quot;Nagle&quot;, è ampiamente utilizzato perché riduce il numero di pacchetti trasmessi e l&quot;overhead per ogni pacchetto.       La modifica del valore di questa proprietà non influiscono sulle connessioni esistenti. Solo le connessioni create dopo la modifica sono interessate.       L&quot;algoritmo Nagle è descritto nella specifica IETF RFC 896."
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cpp[System.Net.ServicePoint#9](~/add/codesnippet/cpp/p-system.net.servicepoin_16_1.cpp)]\n [!code-vb[System.Net.ServicePoint#9](~/add/codesnippet/visualbasic/p-system.net.servicepoin_16_1.vb)]\n [!code-cs[System.Net.ServicePoint#9](~/add/codesnippet/csharp/p-system.net.servicepoin_16_1.cs)]"
  syntax:
    content: public bool UseNagleAlgorithm { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per utilizzare l&quot;algoritmo Nagle; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ServicePoint.UseNagleAlgorithm*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.ServicePoint.Address
  parent: System.Net.ServicePoint
  isExternal: false
  name: Address
  nameWithType: ServicePoint.Address
  fullName: System.Net.ServicePoint.Address
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.ServicePoint.BindIPEndPointDelegate
  parent: System.Net.ServicePoint
  isExternal: false
  name: BindIPEndPointDelegate
  nameWithType: ServicePoint.BindIPEndPointDelegate
  fullName: System.Net.ServicePoint.BindIPEndPointDelegate
- uid: System.Net.BindIPEndPoint
  parent: System.Net
  isExternal: false
  name: BindIPEndPoint
  nameWithType: BindIPEndPoint
  fullName: System.Net.BindIPEndPoint
- uid: System.Net.ServicePoint.Certificate
  parent: System.Net.ServicePoint
  isExternal: false
  name: Certificate
  nameWithType: ServicePoint.Certificate
  fullName: System.Net.ServicePoint.Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Net.ServicePoint.ClientCertificate
  parent: System.Net.ServicePoint
  isExternal: false
  name: ClientCertificate
  nameWithType: ServicePoint.ClientCertificate
  fullName: System.Net.ServicePoint.ClientCertificate
- uid: System.Net.ServicePoint.CloseConnectionGroup(System.String)
  parent: System.Net.ServicePoint
  isExternal: false
  name: CloseConnectionGroup(String)
  nameWithType: ServicePoint.CloseConnectionGroup(String)
  fullName: System.Net.ServicePoint.CloseConnectionGroup(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.ServicePoint.ConnectionLeaseTimeout
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionLeaseTimeout
  nameWithType: ServicePoint.ConnectionLeaseTimeout
  fullName: System.Net.ServicePoint.ConnectionLeaseTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.ServicePoint.ConnectionLimit
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionLimit
  nameWithType: ServicePoint.ConnectionLimit
  fullName: System.Net.ServicePoint.ConnectionLimit
- uid: System.Net.ServicePoint.ConnectionName
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionName
  nameWithType: ServicePoint.ConnectionName
  fullName: System.Net.ServicePoint.ConnectionName
- uid: System.Net.ServicePoint.CurrentConnections
  parent: System.Net.ServicePoint
  isExternal: false
  name: CurrentConnections
  nameWithType: ServicePoint.CurrentConnections
  fullName: System.Net.ServicePoint.CurrentConnections
- uid: System.Net.ServicePoint.Expect100Continue
  parent: System.Net.ServicePoint
  isExternal: false
  name: Expect100Continue
  nameWithType: ServicePoint.Expect100Continue
  fullName: System.Net.ServicePoint.Expect100Continue
- uid: System.Net.ServicePoint.IdleSince
  parent: System.Net.ServicePoint
  isExternal: false
  name: IdleSince
  nameWithType: ServicePoint.IdleSince
  fullName: System.Net.ServicePoint.IdleSince
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Net.ServicePoint.MaxIdleTime
  parent: System.Net.ServicePoint
  isExternal: false
  name: MaxIdleTime
  nameWithType: ServicePoint.MaxIdleTime
  fullName: System.Net.ServicePoint.MaxIdleTime
- uid: System.Net.ServicePoint.ProtocolVersion
  parent: System.Net.ServicePoint
  isExternal: false
  name: ProtocolVersion
  nameWithType: ServicePoint.ProtocolVersion
  fullName: System.Net.ServicePoint.ProtocolVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Net.ServicePoint.ReceiveBufferSize
  parent: System.Net.ServicePoint
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: ServicePoint.ReceiveBufferSize
  fullName: System.Net.ServicePoint.ReceiveBufferSize
- uid: System.Net.ServicePoint.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)
  parent: System.Net.ServicePoint
  isExternal: false
  name: SetTcpKeepAlive(Boolean,Int32,Int32)
  nameWithType: ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)
  fullName: System.Net.ServicePoint.SetTcpKeepAlive(Boolean,Int32,Int32)
- uid: System.Net.ServicePoint.SupportsPipelining
  parent: System.Net.ServicePoint
  isExternal: false
  name: SupportsPipelining
  nameWithType: ServicePoint.SupportsPipelining
  fullName: System.Net.ServicePoint.SupportsPipelining
- uid: System.Net.ServicePoint.UseNagleAlgorithm
  parent: System.Net.ServicePoint
  isExternal: false
  name: UseNagleAlgorithm
  nameWithType: ServicePoint.UseNagleAlgorithm
  fullName: System.Net.ServicePoint.UseNagleAlgorithm
- uid: System.Net.ServicePoint.Address*
  parent: System.Net.ServicePoint
  isExternal: false
  name: Address
  nameWithType: ServicePoint.Address
- uid: System.Net.ServicePoint.BindIPEndPointDelegate*
  parent: System.Net.ServicePoint
  isExternal: false
  name: BindIPEndPointDelegate
  nameWithType: ServicePoint.BindIPEndPointDelegate
- uid: System.Net.ServicePoint.Certificate*
  parent: System.Net.ServicePoint
  isExternal: false
  name: Certificate
  nameWithType: ServicePoint.Certificate
- uid: System.Net.ServicePoint.ClientCertificate*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ClientCertificate
  nameWithType: ServicePoint.ClientCertificate
- uid: System.Net.ServicePoint.CloseConnectionGroup*
  parent: System.Net.ServicePoint
  isExternal: false
  name: CloseConnectionGroup
  nameWithType: ServicePoint.CloseConnectionGroup
- uid: System.Net.ServicePoint.ConnectionLeaseTimeout*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionLeaseTimeout
  nameWithType: ServicePoint.ConnectionLeaseTimeout
- uid: System.Net.ServicePoint.ConnectionLimit*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionLimit
  nameWithType: ServicePoint.ConnectionLimit
- uid: System.Net.ServicePoint.ConnectionName*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ConnectionName
  nameWithType: ServicePoint.ConnectionName
- uid: System.Net.ServicePoint.CurrentConnections*
  parent: System.Net.ServicePoint
  isExternal: false
  name: CurrentConnections
  nameWithType: ServicePoint.CurrentConnections
- uid: System.Net.ServicePoint.Expect100Continue*
  parent: System.Net.ServicePoint
  isExternal: false
  name: Expect100Continue
  nameWithType: ServicePoint.Expect100Continue
- uid: System.Net.ServicePoint.IdleSince*
  parent: System.Net.ServicePoint
  isExternal: false
  name: IdleSince
  nameWithType: ServicePoint.IdleSince
- uid: System.Net.ServicePoint.MaxIdleTime*
  parent: System.Net.ServicePoint
  isExternal: false
  name: MaxIdleTime
  nameWithType: ServicePoint.MaxIdleTime
- uid: System.Net.ServicePoint.ProtocolVersion*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ProtocolVersion
  nameWithType: ServicePoint.ProtocolVersion
- uid: System.Net.ServicePoint.ReceiveBufferSize*
  parent: System.Net.ServicePoint
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: ServicePoint.ReceiveBufferSize
- uid: System.Net.ServicePoint.SetTcpKeepAlive*
  parent: System.Net.ServicePoint
  isExternal: false
  name: SetTcpKeepAlive
  nameWithType: ServicePoint.SetTcpKeepAlive
- uid: System.Net.ServicePoint.SupportsPipelining*
  parent: System.Net.ServicePoint
  isExternal: false
  name: SupportsPipelining
  nameWithType: ServicePoint.SupportsPipelining
- uid: System.Net.ServicePoint.UseNagleAlgorithm*
  parent: System.Net.ServicePoint
  isExternal: false
  name: UseNagleAlgorithm
  nameWithType: ServicePoint.UseNagleAlgorithm
