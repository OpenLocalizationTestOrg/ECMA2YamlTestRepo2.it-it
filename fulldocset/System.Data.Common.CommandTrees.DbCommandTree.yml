### YamlMime:ManagedReference
items:
- uid: System.Data.Common.CommandTrees.DbCommandTree
  id: DbCommandTree
  children:
  - System.Data.Common.CommandTrees.DbCommandTree.Parameters
  langs:
  - csharp
  name: DbCommandTree
  nameWithType: DbCommandTree
  fullName: System.Data.Common.CommandTrees.DbCommandTree
  type: Class
  summary: "Una classe non modificabile che implementa la funzionalità di base per la Query, Insert, Update, Delete e tipi di struttura ad albero comando chiamata dalla funzione."
  remarks: "Un DbCommandTree è una classe astratta utilizzata per rappresentare query, operazioni (Data Manipulation Language) e chiamate di funzione o una routine."
  syntax:
    content: public abstract class DbCommandTree
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.DbCommandTree.Parameters
  id: Parameters
  parent: System.Data.Common.CommandTrees.DbCommandTree
  langs:
  - csharp
  name: Parameters
  nameWithType: DbCommandTree.Parameters
  fullName: System.Data.Common.CommandTrees.DbCommandTree.Parameters
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees
  summary: "Ottiene il nome e tipo corrispondente di ogni parametro che è possibile fare riferimento all&quot;interno di questa <xref href=&quot;System.Data.Common.CommandTrees.DbCommandTree&quot;> </xref>."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Metadata.Edm.TypeUsage>> Parameters { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Metadata.Edm.TypeUsage}}
      description: "Il nome e il tipo corrispondente di ogni parametro che è possibile fare riferimento all&quot;interno di questa <xref href=&quot;System.Data.Common.CommandTrees.DbCommandTree&quot;> </xref>."
  overload: System.Data.Common.CommandTrees.DbCommandTree.Parameters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Common.CommandTrees.DbCommandTree.Parameters
  parent: System.Data.Common.CommandTrees.DbCommandTree
  isExternal: false
  name: Parameters
  nameWithType: DbCommandTree.Parameters
  fullName: System.Data.Common.CommandTrees.DbCommandTree.Parameters
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Metadata.Edm.TypeUsage}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,TypeUsage>>
  nameWithType: IEnumerable<KeyValuePair<String,TypeUsage>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Metadata.Edm.TypeUsage>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Metadata.Edm.TypeUsage>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Data.Metadata.Edm.TypeUsage>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Data.Metadata.Edm.TypeUsage
    name: TypeUsage
    nameWithType: TypeUsage
    fullName: TypeUsage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.CommandTrees.DbCommandTree.Parameters*
  parent: System.Data.Common.CommandTrees.DbCommandTree
  isExternal: false
  name: Parameters
  nameWithType: DbCommandTree.Parameters
