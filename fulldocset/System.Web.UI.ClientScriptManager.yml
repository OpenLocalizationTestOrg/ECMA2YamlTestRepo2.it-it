### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ClientScriptManager
  id: ClientScriptManager
  children:
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  - System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)
  - System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)
  - System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.ValidateEvent(System.String)
  - System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)
  langs:
  - csharp
  name: ClientScriptManager
  nameWithType: ClientScriptManager
  fullName: System.Web.UI.ClientScriptManager
  type: Class
  summary: "Definisce metodi per la gestione di script client nelle applicazioni Web."
  remarks: "La classe ClientScriptManager viene utilizzata per gestire gli script client e aggiungerle alle applicazioni Web. È possibile ottenere un riferimento alla classe ClientScriptManager dal <xref:System.Web.UI.Page.ClientScript%2A>proprietà del <xref:System.Web.UI.Page>oggetto.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.ClientScript%2A>       È possibile aggiungere uno script client a una pagina Web in modo dichiarativo, includendo lo script nel markup HTML della pagina. Tuttavia, esistono situazioni quando è necessario aggiungere lo script client in modo dinamico. Per aggiungere uno script in modo dinamico, usare il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metodo, il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>metodo, il <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metodo, o il <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>metodo, a seconda di come e quando si desidera aggiungere lo script.</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Per ulteriori informazioni, vedere [procedura: aggiungere Client Script in modo dinamico per ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md).       La classe ClientScriptManager identifica in modo univoco gli script da una chiave <xref:System.String>e un <xref:System.Type>.</xref:System.Type> </xref:System.String> Script con la stessa chiave e tipo sono considerati duplicati. Utilizzando il tipo di script consente di evitare confusi simili di script da diversi controlli utente che potrebbero essere in uso nella pagina.       La classe ClientScriptManager può essere utilizzata per richiamare il callback client in situazioni quando è preferibile eseguire codice server dal client senza esegue un postback. Questo è definito l&quot;esecuzione di un callback fuori banda al server. In un callback del client, una funzione di script client invia una richiesta asincrona a una pagina Web ASP.NET. La pagina Web esegue una versione modificata del normale ciclo di vita per elaborare il callback. Utilizzare il <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metodo per ottenere un riferimento a una funzione di client che, quando richiamata, avvia un callback client per un evento del server.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Per ulteriori informazioni, vedere [implementazione di callback Client senza postback](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Gli script di callback non funzionerà nei browser meno recenti che non supportano il modello DOM (Document Object) e richiedono l&quot;attivazione di ECMAScript sul client. Per verificare se il browser supporta i callback, utilizzare il <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>proprietà, è possibile accedere tramite il <xref:System.Web.HttpRequest.Browser%2A>proprietà intrinseca di ASP.NET <xref:System.Web.HttpContext.Request%2A>oggetto.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>       Utilizzare il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>(metodo) e <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>metodo per definire un evento di postback del client.</xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Questi metodi consentono di funzioni di script client, quando viene richiamato, per il server eseguire il postback della pagina. Un evento di postback client è diverso da un callback client in quanto la pagina Web viene completato un ciclo di vita normale al processo di evento di postback del client.      > [!NOTE] > Se si utilizza un <xref:System.Web.UI.WebControls.Button>controllo e <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>è impostata su `false`, è possibile utilizzare il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>per restituire il client di postback evento per il <xref:System.Web.UI.WebControls.Button>controllo.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> </xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button>       Il <xref:System.Web.UI.WebControls.Button.OnClientClick%2A>proprietà del <xref:System.Web.UI.WebControls.Button>(controllo), <xref:System.Web.UI.WebControls.ImageButton>(controllo), e <xref:System.Web.UI.WebControls.LinkButton>controllo può essere utilizzato per eseguire client script</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.OnClientClick%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the ClientScriptManager class. Two client scripts are defined in the page: `PopupScript`, which displays an alert message when the page is loaded, and `ButtonClickScript`, which defines a client handler for an HTML button's `onClick` event.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/t-system.web.ui.clientsc_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/t-system.web.ui.clientsc_1.aspx)]"
  syntax:
    content: public sealed class ClientScriptManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  id: GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(Control,String,String,String)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un riferimento a una funzione di client che, quando richiamata, avvia un client callback a un evento del server. La funzione di client per questo metodo di overload include un controllo specificato, l&quot;argomento, lo script client e contesto."
  remarks: "Il metodo GetCallbackEventReference esegue un callback fuori banda per il server che è una versione modificata del normale ciclo di vita della pagina. Per ulteriori informazioni, vedere [implementazione di callback Client senza postback](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Quando il browser Microsoft Internet Explorer (versione 5.0 o versione successiva), il meccanismo di script di callback viene implementato tramite l&quot;oggetto Microsoft. XMLHTTP COM e richiede che il browser da impostare per l&quot;esecuzione di controlli ActiveX. Per altri browser, viene utilizzato XMLHttpRequest utilizzando locale modello DOM del browser (Document Object). Per verificare se un browser supporta i callback client, utilizzare il <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>proprietà.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> Per verificare se un browser supporta XML tramite HTTP, utilizzare il <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A>proprietà.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> Entrambe le proprietà sono accessibili tramite il <xref:System.Web.HttpRequest.Browser%2A>proprietà di ASP.NET intrinseco <xref:System.Web.HttpContext.Request%2A>oggetto.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A>       L&quot;overload del metodo GetCallbackEventReference il <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metodo esegue un callback in modo sincrono utilizzando XML tramite HTTP.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Quando si inviano i dati in modo sincrono in uno scenario di callback, callback sincrono restituito immediatamente e non blocca il browser. Nessun due callback sincroni possono eseguire contemporaneamente nel browser. Se mentre è in corso, viene generato un secondo callback sincrono, il secondo callback sincrono annullerà il primo e verrà restituito solo il secondo callback.       Per inviare dati in modo asincrono, utilizzare uno degli overload che accetta il `useAsync` parametro, che è un valore booleano valore che controlla questo comportamento. Nello scenario asincrono è possibile avere più callback in sospeso. Tuttavia, l&quot;ordine in cui vengono restituiti potrebbe non corrispondere all&quot;ordine in cui vengono avviate.       Inoltre, questo overload del <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>alcuna funzione di client per gestire il caso di una condizione di errore generato dal metodo consente di specificare il <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>(metodo).</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> </xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Per specificare un gestore di callback client degli errori, utilizzare uno degli overload che accetta il `clientErrorCallback` parametro.       Il metodo GetCallbackEventReference accetta una stringa facoltativa `argument` parametro e restituisce una stringa. Per passare o ricevere più valori, concatenare i valori di input o restituire stringa, rispettivamente.      > [!NOTE] > Evitare di utilizzare lo stato di visualizzazione nell&quot;implementazione di pagina o controllo proprietà che devono essere aggiornate durante le operazioni di callback di script. Se le proprietà sono di sopravvivenza di richieste di pagine, è possibile utilizzare lo stato della sessione."
  example:
  - "The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.  \n  \n Two callback mechanisms are shown; the difference between them is the use of the `context` parameter. A `ReceiveServerData1` client callback function is provided using the `context` parameter. In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page. A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string. If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the `ProcessCallBackError` client function is called.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/csharp/0153bfa5-9a40-4257-b817-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/visualbasic/0153bfa5-9a40-4257-b817-_1.aspx)]"
  syntax:
    content: public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Il server <xref href=&quot;System.Web.UI.Control&quot;> </xref> che gestisce il callback client. Il controllo deve implementare il <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> l&quot;interfaccia e fornire un <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metodo.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Un argomento passato dallo script client al server <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metodo.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "Il nome del gestore eventi client che riceve il risultato dell&quot;evento del server ha esito positivo."
    - id: context
      type: System.String
      description: "Lo script client che viene valutato sul client prima di avviare il callback. Il risultato dello script viene passato al gestore eventi client."
    return:
      type: System.String
      description: "Il nome di una funzione di client che richiama il callback client."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> specified is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Web.UI.Control&quot;> </xref> specificato non implementa il <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> interfaccia."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  id: GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(Control,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un riferimento a una funzione di client che, quando richiamata, avvia un client callback per gli eventi del server. La funzione di client per questo metodo di overload include un controllo specificato, argomento, lo script client, contesto e un valore booleano."
  remarks: "Questo overload del metodo di <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metodo richiede un `useAsync` parametro, che consente di eseguire il callback client in modo asincrono, impostando il valore su `true`.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Le versioni di overload del metodo che non richiedono la `useAsync` parametro impostato il valore su `false` per impostazione predefinita.       Per ulteriori informazioni su questo metodo, vedere la sezione Osservazioni per l&quot;overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metodo.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>"
  syntax:
    content: public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Il server <xref href=&quot;System.Web.UI.Control&quot;> </xref> che gestisce il callback client. Il controllo deve implementare il <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> l&quot;interfaccia e fornire un <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metodo.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Un argomento passato dallo script client al server <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metodo.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "Il nome del gestore eventi client che riceve il risultato dell&quot;evento del server ha esito positivo."
    - id: context
      type: System.String
      description: "Lo script client che viene valutato sul client prima di avviare il callback. Il risultato dello script viene passato al gestore eventi client."
    - id: useAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per eseguire il callback in modo asincrono; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per eseguire il callback in modo sincrono."
    return:
      type: System.String
      description: "Il nome di una funzione di client che richiama il callback client."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> specified is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Web.UI.Control&quot;> </xref> specificato non implementa il <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> interfaccia."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  id: GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(String,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un riferimento a una funzione di client che, quando richiamata, avvia un client callback per gli eventi del server. La funzione di client per questo metodo di overload include una destinazione specificata, argomento, lo script client, contesto, gestore degli errori e un valore booleano."
  remarks: "Questo overload di <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metodo accetta un `target` stringa parametro anziché una <xref:System.Web.UI.Control>parametro.</xref:System.Web.UI.Control> </xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Utilizzare questo overload quando si desidera che il callback per tornare a un valore diverso da una stringa contenente il <xref:System.Web.UI.Control.UniqueID%2A>del controllo.</xref:System.Web.UI.Control.UniqueID%2A>       Inoltre, questo overload del metodo di <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metodo richiede un `useAsync` e un `clientErrorCallback` parametro.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Il `useAsync` parametro consente di eseguire il callback client in modo asincrono, impostando il valore su `true`. Le versioni di overload del metodo che non richiedono la `useAsync` parametro impostato il valore su `false` per impostazione predefinita. Il `clientErrorCallback` parametro consente di definire il nome della funzione di client che viene chiamato se il gestore del server, il <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>metodo, viene restituito un errore.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Le versioni di overload del metodo che non richiedono la `clientErrorCallback` parametro impostato il valore su null.       Per ulteriori informazioni su questo metodo, vedere la sezione Osservazioni per l&quot;overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metodo.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>"
  example:
  - "The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.  \n  \n Two callback mechanisms are shown; the difference between them is the use of the `context` parameter. A `ReceiveServerData1` client callback function is provided using the `context` parameter. In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page. A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string. If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the client function `ProcessCallBackError` is called.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/csharp/b09113ee-01c3-4887-82a1-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/visualbasic/b09113ee-01c3-4887-82a1-_1.aspx)]"
  syntax:
    content: public string GetCallbackEventReference (string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);
    parameters:
    - id: target
      type: System.String
      description: "Il nome di un server <xref href=&quot;System.Web.UI.Control&quot;> </xref> che gestisce il callback client. Il controllo deve implementare il <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> l&quot;interfaccia e fornire un <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metodo.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Un argomento passato dallo script client al server <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metodo.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "Il nome del gestore eventi client che riceve il risultato dell&quot;evento del server ha esito positivo."
    - id: context
      type: System.String
      description: "Lo script client che viene valutato sul client prima di avviare il callback. Il risultato dello script viene passato al gestore eventi client."
    - id: clientErrorCallback
      type: System.String
      description: "Il nome del gestore eventi client che riceve il risultato quando si verifica un errore nel gestore dell&quot;evento server."
    - id: useAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>Per eseguire il callback in modo asincrono; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per eseguire il callback in modo sincrono."
    return:
      type: System.String
      description: "Il nome di una funzione di client che richiama il callback client."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  id: GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(Control,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un riferimento a una funzione di client che, quando richiamata, avvia un client callback per gli eventi del server. La funzione di client per questo metodo di overload include un controllo specificato, argomento, lo script client, contesto, gestore degli errori e il valore booleano."
  remarks: "Questo overload del metodo di <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metodo richiede un `useAsync` e un `clientErrorCallback` parametro.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Il `useAsync` parametro consente di eseguire il callback client in modo asincrono, impostando il valore su `true`. Le versioni di overload del metodo che non richiedono la `useAsync` parametro impostato il valore su `false` per impostazione predefinita. Il `clientErrorCallback` parametro consente di definire il nome della funzione di client che viene chiamato se il gestore del server (il <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>(metodo)) restituisce un errore.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> Le versioni di overload del metodo che non richiedono la `clientErrorCallback` parametro impostato il valore su null.       Per ulteriori informazioni su questo metodo, vedere la sezione Osservazioni per l&quot;overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>metodo.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>"
  syntax:
    content: public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Il server <xref href=&quot;System.Web.UI.Control&quot;> </xref> che gestisce il callback client. Il controllo deve implementare il <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> l&quot;interfaccia e fornire un <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metodo.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Un argomento passato dallo script client al server <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>metodo.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "Il nome del gestore eventi client che riceve il risultato dell&quot;evento del server ha esito positivo."
    - id: context
      type: System.String
      description: "Lo script client che viene valutato sul client prima di avviare il callback. Il risultato dello script viene passato al gestore eventi client."
    - id: clientErrorCallback
      type: System.String
      description: "Il nome del gestore eventi client che riceve il risultato quando si verifica un errore nel gestore dell&quot;evento server."
    - id: useAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>Per eseguire il callback in modo asincrono; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per eseguire il callback in modo sincrono."
    return:
      type: System.String
      description: "Il nome di una funzione di client che richiama il callback client."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> specified is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Web.UI.Control&quot;> </xref> specificato non implementa il <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> interfaccia."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  id: GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un riferimento, con <xref uid=&quot;langword_csharp_javascript:&quot; name=&quot;javascript:&quot; href=&quot;&quot;> </xref> aggiunto all&quot;inizio di esso, che può essere utilizzato in un evento di client per il postback al server per il controllo specificato e con gli argomenti dell&quot;evento specificato."
  remarks: "Utilizzo di <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metodo richiede che il controllo che gestisce il postback per implementare il <xref:System.Web.UI.IPostBackEventHandler>interfaccia.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Per implementare il <xref:System.Web.UI.IPostBackEventHandler>interfaccia per un <xref:System.Web.UI.Page>, utilizzare la direttiva.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>"
  example:
  - "The following code example demonstrates the use of the GetPostBackClientHyperlink method. The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface. When the HTML anchor element on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/visualbasic/366d34c0-2826-48a7-a56d-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/csharp/366d34c0-2826-48a7-a56d-_1.aspx)]  \n  \n The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/csharp/366d34c0-2826-48a7-a56d-_2.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/visualbasic/366d34c0-2826-48a7-a56d-_2.aspx)]"
  syntax:
    content: public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Il controllo del server per elaborare il postback."
    - id: argument
      type: System.String
      description: "Il parametro passato al controllo server."
    return:
      type: System.String
      description: "Stringa che rappresenta una chiamata JavaScript alla funzione di postback che include gli argomenti di evento e di ID del controllo di destinazione."
  overload: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  id: GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackClientHyperlink(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un riferimento, con <xref uid=&quot;langword_csharp_javascript:&quot; name=&quot;javascript:&quot; href=&quot;&quot;> </xref> aggiunto all&quot;inizio di esso, che può essere utilizzato in un evento di client per eseguire il postback al server per il controllo specificato con gli argomenti di evento specificato e l&quot;indicazione booleano se registrare di nuovo per la convalida degli eventi."
  remarks: "Utilizzo di <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metodo richiede che il controllo che gestisce il postback per implementare il <xref:System.Web.UI.IPostBackEventHandler>interfaccia.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Per implementare il <xref:System.Web.UI.IPostBackEventHandler>interfaccia per un <xref:System.Web.UI.Page>, utilizzare la direttiva.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>"
  syntax:
    content: public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument, bool registerForEventValidation);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Il controllo del server per elaborare il postback."
    - id: argument
      type: System.String
      description: "Il parametro passato al controllo server."
    - id: registerForEventValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per registrare l&quot;evento di postback per la convalida; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> non registrare l&quot;evento di postback per la convalida."
    return:
      type: System.String
      description: "Stringa che rappresenta una chiamata JavaScript alla funzione di postback che include gli argomenti di evento e di ID del controllo di destinazione."
  overload: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)
  id: GetPostBackEventReference(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(PostBackOptions)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Restituisce una stringa che può essere usata in un evento di client per causare il postback al server. La stringa di riferimento è definita dall&quot;oggetto <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> istanza."
  remarks: "Per implementare il <xref:System.Web.UI.IPostBackEventHandler>interfaccia per un <xref:System.Web.UI.Page>, utilizzare la direttiva.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       Il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metodo può essere utilizzato con il <xref:System.Web.UI.WebControls.Button>controllare quando il <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>proprietà `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> In questo scenario, il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>restituisce al client di postback evento per il <xref:System.Web.UI.WebControls.Button>controllo.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.PostBackOptions options);
    parameters:
    - id: options
      type: System.Web.UI.PostBackOptions
      description: "Oggetto <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> che definisce il postback."
    return:
      type: System.String
      description: "Stringa che, quando viene trattata come script nel client, avvia il postback client."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> parametro<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)
  id: GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(Control,String)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Restituisce una stringa che può essere usata in un evento di client per causare il postback al server. La stringa di riferimento è definita dal controllo specificato che gestisce il postback e un argomento stringa di informazioni aggiuntive sull&quot;evento."
  remarks: "Per implementare il <xref:System.Web.UI.IPostBackEventHandler>interfaccia per un <xref:System.Web.UI.Page>, utilizzare la direttiva.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       Il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metodo può essere utilizzato con il <xref:System.Web.UI.WebControls.Button>controllare quando il <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>proprietà `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> In questo scenario, il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>restituisce al client di postback evento per il <xref:System.Web.UI.WebControls.Button>controllo.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  example:
  - "The following code example demonstrates the use of the GetPostBackEventReference method. The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface. When the button on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/visualbasic/13f44f5d-33c0-40e6-bb2f-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/csharp/13f44f5d-33c0-40e6-bb2f-_1.aspx)]  \n  \n The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/csharp/13f44f5d-33c0-40e6-bb2f-_2.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/visualbasic/13f44f5d-33c0-40e6-bb2f-_2.aspx)]"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Il server <xref href=&quot;System.Web.UI.Control&quot;> </xref> che elabora il postback al server."
    - id: argument
      type: System.String
      description: "Stringa di argomenti facoltativi da passare al controllo che elabora il postback."
    return:
      type: System.String
      description: "Stringa che, quando viene trattata come script nel client, avvia il postback."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified <xref href=&quot;System.Web.UI.Control&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  id: GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(PostBackOptions,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Restituisce una stringa che può essere usata in un evento di client per causare il postback al server. La stringa di riferimento è definita dall&quot;oggetto <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> oggetto. Facoltativamente, registra il riferimento all&quot;evento per la convalida."
  remarks: "Per implementare il <xref:System.Web.UI.IPostBackEventHandler>interfaccia per un <xref:System.Web.UI.Page>oggetto, usare la direttiva.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       Il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metodo può essere utilizzato con il <xref:System.Web.UI.WebControls.Button>controllare quando il <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>proprietà `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> In questo scenario, il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>restituisce al client di postback evento per il <xref:System.Web.UI.WebControls.Button>controllo.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>       Se `registerForEventValidation` è `true`, le chiamate al metodo GetPostBackEventReference il <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29>metodo per registrare il riferimento all&quot;evento per la convalida con un ID di controllo univoco che rappresenta il controllo client che genera l&quot;evento.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29>"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.PostBackOptions options, bool registerForEventValidation);
    parameters:
    - id: options
      type: System.Web.UI.PostBackOptions
      description: "Oggetto <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> che definisce il postback."
    - id: registerForEventValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per registrare il riferimento all&quot;evento per la convalida; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Stringa che, quando viene trattata come script nel client, avvia il postback client."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.PostBackOptions&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  id: GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Restituisce una stringa da utilizzare in un evento di client per causare il postback al server. La stringa di riferimento è definita dal controllo specificato che gestisce il postback e un argomento stringa di informazioni aggiuntive sull&quot;evento. Facoltativamente, registra il riferimento all&quot;evento per la convalida."
  remarks: "Per implementare il <xref:System.Web.UI.IPostBackEventHandler>interfaccia per un <xref:System.Web.UI.Page>, utilizzare la direttiva.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       Il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>metodo può essere utilizzato con il <xref:System.Web.UI.WebControls.Button>controllare quando il <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>proprietà `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> In questo scenario, il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>restituisce al client di postback evento per il <xref:System.Web.UI.WebControls.Button>controllo.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>       Se `registerForEventValidation` è true, il <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29>chiamate al metodo di <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29>metodo per registrare il riferimento all&quot;evento per la convalida con un ID di controllo univoco che rappresenta il controllo client che genera l&quot;evento.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29>"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control, string argument, bool registerForEventValidation);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Il server <xref href=&quot;System.Web.UI.Control&quot;> </xref> che elabora il postback al server."
    - id: argument
      type: System.String
      description: "Una stringa di argomenti facoltativi da passare al `control`."
    - id: registerForEventValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per registrare il riferimento all&quot;evento per la convalida; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Stringa che, quando viene trattata come script nel client, avvia il postback."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified <xref href=&quot;System.Web.UI.Control&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)
  id: GetWebResourceUrl(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetWebResourceUrl(Type,String)
  nameWithType: ClientScriptManager.GetWebResourceUrl(Type,String)
  fullName: System.Web.UI.ClientScriptManager.GetWebResourceUrl(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un riferimento a una risorsa URL in un assembly."
  remarks: "Il metodo GetWebResourceUrl restituisce un riferimento URL a una risorsa incorporata in un assembly. Il riferimento restituito non è codificato in URL. Risorse possono essere qualsiasi file statico, immagini o file di script. Specificare il tipo in base all&quot;oggetto che sarà possibile accedere alla risorsa.       Una risorsa Web registrata con la pagina è identificata in modo univoco il tipo e nome. Solo una risorsa con una coppia di nome e il tipo specificato può essere registrata con la pagina. Il tentativo di registrare una risorsa che è già registrata non crea un duplicato della risorsa registrata.       Il metodo GetWebResourceUrl viene utilizzato in combinazione con il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A>metodo per accedere alle risorse incorporate nell&quot;assembly.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Per ulteriori informazioni sull&quot;utilizzo delle risorse nelle applicazioni, vedere [panoramica delle risorse pagina Web ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of the GetWebResourceUrl method. The *type* parameter in this example is set to the type of class in the assembly containing the resource. The `resourceName` parameter is specified with the fully qualified path to the resource, which includes the default namespace.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_2_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/csharp/m-system.web.ui.clientsc_2_1.aspx)]  \n  \n The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served. Compile the following class in a class library with a default namespace set to `Samples.AspNet.CS.Controls` or `Samples.AspNet.VB.Controls`, depending on what language you are using.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_2_2.vb)]\n [!code-cs[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/csharp/m-system.web.ui.clientsc_2_2.cs)]  \n  \n This example requires a JavaScript file named `Script_include.js`. The .js file is an embedded resource in the assembly that contains the `ClientScriptResourceLabel` object. If you are using [!INCLUDE[vs_current_short](~/add/includes/ajax-current-ext-md.md)], in the Properties window of the class library project, set **Build Action** to **Embedded Resource** when the script file is selected. If you are compiling the library at the command line, use the  switch to embed the resource.  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from resource script.'}  \n```"
  syntax:
    content: public string GetWebResourceUrl (Type type, string resourceName);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo della risorsa."
    - id: resourceName
      type: System.String
      description: "Il nome completo della risorsa nell&quot;assembly."
    return:
      type: System.String
      description: "Il riferimento di URL per la risorsa."
  overload: System.Web.UI.ClientScriptManager.GetWebResourceUrl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The web resource name is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The web resource name has a length of zero."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)
  id: IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptBlockRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se il blocco di script client è registrato con il <xref href=&quot;System.Web.UI.Page&quot;> </xref> oggetto utilizzando la chiave specificata."
  remarks: "Chiamare questo metodo prima di chiamare il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metodo per evitare la registrazione di script duplicati.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Ciò è particolarmente importante se lo script richiede una grande quantità di risorse server da creare.       Uno script client è identificato dalla rispettiva chiave e il relativo tipo. Script con la stessa chiave e tipo sono considerati duplicati.       Questo overload del metodo di <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>metodo chiama l&quot;overload che accetta sia un `key` e un `type` parametro con il tipo è impostato come <xref:System.Web.UI.Page>oggetto</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>"
  example:
  - >-
    [!code-cs[System.Web.UI.ClientScriptManager1#2](~/add/codesnippet/csharp/m-system.web.ui.clientsc_0_1.aspx)]
     [!code-vb[System.Web.UI.ClientScriptManager1#2](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_0_1.aspx)]
  syntax:
    content: public bool IsClientScriptBlockRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "La chiave del blocco di script client per la ricerca."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il blocco di script client è registrata; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)
  id: IsClientScriptBlockRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptBlockRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se il blocco di script client è registrato con il <xref href=&quot;System.Web.UI.Page&quot;> </xref> utilizzando una chiave e il tipo dell&quot;oggetto."
  remarks: "Chiamare questo metodo prima di chiamare il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metodo per evitare la registrazione di script duplicati.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Ciò è particolarmente importante se lo script richiede una grande quantità di risorse server da creare.       Uno script client è identificato dalla rispettiva chiave e il relativo tipo. Script con la stessa chiave e tipo sono considerati duplicati. Specificare il tipo in base all&quot;oggetto che sarà possibile accedere alla risorsa. Ad esempio, quando si utilizza un `Page` istanza per accedere alla risorsa, specificare il `Page` tipo."
  example:
  - "The following code example demonstrates the use of the IsClientScriptBlockRegistered method. Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/b20ef5ac-aa44-4132-8ad3-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/b20ef5ac-aa44-4132-8ad3-_1.aspx)]"
  syntax:
    content: public bool IsClientScriptBlockRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo del blocco di script client per la ricerca."
    - id: key
      type: System.String
      description: "La chiave del blocco di script client per la ricerca."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il blocco di script client è registrata; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il tipo di script client è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)
  id: IsClientScriptIncludeRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptIncludeRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se includere lo script client è registrato con il <xref href=&quot;System.Web.UI.Page&quot;> </xref> oggetto utilizzando la chiave specificata."
  remarks: "Chiamare questo metodo prima di chiamare il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>metodo per evitare la registrazione di script duplicati.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Ciò è particolarmente importante se lo script richiede una grande quantità di risorse server da creare.       Includere uno script client è identificata dalla rispettiva chiave e il relativo tipo. Script con la stessa chiave e tipo sono considerati duplicati.       Questo overload del metodo di <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>metodo chiama l&quot;overload che accetta sia un `key` e un `type` parametro con il tipo è impostato come un <xref:System.Web.UI.Page>oggetto.</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>"
  syntax:
    content: public bool IsClientScriptIncludeRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "La chiave dello script client includere per la ricerca."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se include lo script client è registrate; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)
  id: IsClientScriptIncludeRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptIncludeRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se includere lo script client è registrato con il <xref href=&quot;System.Web.UI.Page&quot;> </xref> utilizzando una chiave e il tipo dell&quot;oggetto."
  remarks: "Chiamare questo metodo prima di chiamare il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>metodo per evitare la registrazione di script client duplicate include.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Ciò è particolarmente importante se lo script richiede una grande quantità di risorse server da creare.       Includere uno script client è identificata dalla rispettiva chiave e il relativo tipo. Script con la stessa chiave e tipo sono considerati duplicati. Specificare il tipo in base all&quot;oggetto che sarà possibile accedere alla risorsa. Ad esempio, quando si utilizza un&quot;istanza di pagina per accedere alla risorsa, specificare il `Page` tipo."
  example:
  - "The following code example demonstrates the use of the IsClientScriptIncludeRegistered method. Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/csharp/1a97f23b-4196-4af6-89d9-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/visualbasic/1a97f23b-4196-4af6-89d9-_1.aspx)]  \n  \n This example requires a JavaScript file named `Script_include.js`, with the following contents:  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from include script.'}  \n```"
  syntax:
    content: public bool IsClientScriptIncludeRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo di script client inclusione da cercare."
    - id: key
      type: System.String
      description: "La chiave dello script client includere per la ricerca."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se include lo script client è registrate; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Tipo di includere lo script client è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)
  id: IsOnSubmitStatementRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsOnSubmitStatementRegistered(String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se l&quot;istruzione OnSubmit è registrata con il <xref href=&quot;System.Web.UI.Page&quot;> </xref> oggetto utilizzando la chiave specificata."
  remarks: "Chiamare questo metodo prima di chiamare il <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>metodo per evitare la registrazione di istruzioni OnSubmit duplicate.</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Ciò è particolarmente importante se l&quot;istruzione è richiesta una grande quantità di risorse server da creare.       Un&quot;istruzione viene identificata dalla rispettiva chiave e il relativo tipo. Istruzioni con la stessa chiave e tipo sono considerate duplicati.       Questo overload del metodo di <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>metodo chiama l&quot;overload che accetta sia un `key` e un `type` parametro con il tipo è impostato come <xref:System.Web.UI.Page>oggetto</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>"
  syntax:
    content: public bool IsOnSubmitStatementRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "Chiave dell&quot;istruzione OnSubmit da cercare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;istruzione OnSubmit è registrato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)
  id: IsOnSubmitStatementRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsOnSubmitStatementRegistered(Type,String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se l&quot;istruzione OnSubmit è registrata con il <xref href=&quot;System.Web.UI.Page&quot;> </xref> utilizzando una chiave specificata e il tipo dell&quot;oggetto."
  remarks: "Chiamare questo metodo prima di chiamare il <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>metodo per evitare la registrazione di istruzioni duplicate.</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Ciò è particolarmente importante se l&quot;istruzione è richiesta una grande quantità di risorse server da creare.       Un&quot;istruzione viene identificata dalla rispettiva chiave e il relativo tipo. Istruzioni con la stessa chiave e tipo sono considerate duplicati. Specificare il tipo in base all&quot;oggetto che sarà possibile accedere alla risorsa. Ad esempio, quando si utilizza un `Page` istanza per accedere alla risorsa, specificare il `Page` tipo."
  example:
  - "The following code example demonstrates the use of the IsOnSubmitStatementRegistered method. A script named `OnSubmitScript` is registered with the <xref:System.Web.UI.Page> so that when the page's form is submitted the script is invoked.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/visualbasic/081fc7d2-9213-49e8-ad42-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/csharp/081fc7d2-9213-49e8-ad42-_1.aspx)]"
  syntax:
    content: public bool IsOnSubmitStatementRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo di istruzione OnSubmit da cercare."
    - id: key
      type: System.String
      description: "Chiave dell&quot;istruzione OnSubmit da cercare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;istruzione OnSubmit è registrato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il tipo di istruzione OnSubmit è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)
  id: IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsStartupScriptRegistered(String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se lo script di avvio è registrato con il <xref href=&quot;System.Web.UI.Page&quot;> </xref> oggetto utilizzando la chiave specificata."
  remarks: "Chiamare questo metodo prima di chiamare il <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metodo per evitare la registrazione di script duplicati.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Ciò è particolarmente importante se lo script richiede una grande quantità di risorse server da creare.       Uno script di avvio è identificato in modo univoco la chiave e il relativo tipo. Script con la stessa chiave e tipo sono considerati duplicati.       Questo overload del metodo di <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>metodo chiama l&quot;overload che accetta una stringa di entrambi `key` e un `type` parametro con il tipo è impostato come <xref:System.Web.UI.Page>oggetto</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>"
  syntax:
    content: public bool IsStartupScriptRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "La chiave dello script di avvio per la ricerca."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se viene registrato lo script di avvio. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)
  id: IsStartupScriptRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsStartupScriptRegistered(Type,String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se lo script di avvio è registrato con il <xref href=&quot;System.Web.UI.Page&quot;> </xref> utilizzando una chiave specificata e il tipo dell&quot;oggetto."
  remarks: "Chiamare questo metodo prima di chiamare il <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metodo per evitare la registrazione di script duplicati.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Ciò è particolarmente importante se lo script richiede una grande quantità di risorse server da creare.       Uno script di avvio del client è identificato dalla rispettiva chiave e il relativo tipo. Script con la stessa chiave e tipo sono considerati duplicati."
  example:
  - "The following code example demonstrates the use of the IsStartupScriptRegistered method. Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/31c56db0-942d-4a34-be1e-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/31c56db0-942d-4a34-be1e-_1.aspx)]"
  syntax:
    content: public bool IsStartupScriptRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo di script di avvio per la ricerca."
    - id: key
      type: System.String
      description: "La chiave dello script di avvio per la ricerca."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se viene registrato lo script di avvio. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il tipo di script di avvio è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)
  id: RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterArrayDeclaration(String,String)
  nameWithType: ClientScriptManager.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra una dichiarazione di matrice JavaScript con la <xref href=&quot;System.Web.UI.Page&quot;> </xref> utilizzando un nome e un valore di matrice."
  remarks: "The RegisterArrayDeclaration checks to see whether a registered array exists with the same name as the name specified in the `arrayName` parameter and, if so, adds the values specified in the `arrayValue` parameter. Because the underlying storage mechanism is based on an <xref:System.Collections.ArrayList>, duplicates are allowed. If a registered array with the same name as the `arrayName` parameter does not exist, it is created and the values in the `arrayValue` parameter added to it.  \n  \n If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (\\\\\") in the `arrayValue` parameter. The value of the `arrayValue` parameter should be a single element. If more than one value needs to be added to the array, make multiple calls using the RegisterArrayDeclaration method."
  example:
  - "The following code example demonstrates the use of the RegisterArrayDeclaration and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods. The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/csharp/fb15aead-cb5d-4924-8be4-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/visualbasic/fb15aead-cb5d-4924-8be4-_1.aspx)]"
  syntax:
    content: public void RegisterArrayDeclaration (string arrayName, string arrayValue);
    parameters:
    - id: arrayName
      type: System.String
      description: "Il nome della matrice da registrare."
    - id: arrayValue
      type: System.String
      description: "Il valore di matrice o i valori da registrare."
  overload: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>arrayName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)
  id: RegisterClientScriptBlock(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptBlock(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra lo script client con il <xref href=&quot;System.Web.UI.Page&quot;> </xref> oggetto usando un tipo, una chiave e un valore letterale di script."
  remarks: "Uno script client è identificato dalla rispettiva chiave e il relativo tipo. Script con la stessa chiave e tipo sono considerati duplicati. Un solo script con un tipo specificato e una coppia di chiavi possono essere registrati con la pagina. Il tentativo di registrare uno script che è già registrato non crea un duplicato dello script.       Chiamare il <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>metodo per determinare se uno script client con una coppia di tipo e la chiave specificata è già registrato ed evitare inutili tentativi di aggiungere lo script.</xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>       In questo overload di <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>(metodo), è necessario assicurarsi che lo script fornito nel `script` parametro viene eseguito il wrapping un `<script>` blocco di elementi.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>       Il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metodo aggiunge un blocco di script nella parte superiore della pagina rendering.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> I blocchi di script non sono necessariamente restituiti nell&quot;ordine che vengono registrati. Se l&quot;ordine dei blocchi di script è importante, utilizzare un <xref:System.Text.StringBuilder>per raccogliere gli script in un&quot;unica stringa dell&quot;oggetto e quindi registrarli tutti in un blocco di script client singolo.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptBlock method.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager12#1](~/add/codesnippet/csharp/41f57bff-a479-4a3c-91bb-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager12#1](~/add/codesnippet/visualbasic/41f57bff-a479-4a3c-91bb-_1.aspx)]"
  syntax:
    content: public void RegisterClientScriptBlock (Type type, string key, string script);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo di script client da registrare."
    - id: key
      type: System.String
      description: "La chiave di script client da registrare."
    - id: script
      type: System.String
      description: "Valore letterale per registrare lo script di client."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  id: RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptBlock(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra lo script client con il <xref href=&quot;System.Web.UI.Page&quot;> </xref> utilizzando un tipo, una chiave, script letterale e un valore Boolean che indica se aggiungere tag script."
  remarks: "Uno script client è identificato dalla rispettiva chiave e il relativo tipo. Script con la stessa chiave e tipo sono considerati duplicati. Un solo script con un tipo specificato e una coppia di chiavi possono essere registrati con la pagina. Il tentativo di registrare uno script che è già registrato non crea un duplicato dello script.       Chiamare il <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>metodo per determinare se uno script client con una coppia di chiave e il tipo specificato è già registrato.</xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> Ciò consente di evitare inutili tentativi di aggiungere lo script.       In questo overload del <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>(metodo), è possibile indicare se lo script fornito nel `script` parametro viene eseguito il wrapping con un `<script>` blocco di elementi tramite il `addScriptTags` parametro.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Impostazione `addScriptTags` a `true` indica che il tag di script verrà aggiunto automaticamente.       Il <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>metodo aggiunge un blocco di script nella parte superiore della pagina rendering.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> I blocchi di script non sono necessariamente restituiti nell&quot;ordine che vengono registrati. Se l&quot;ordine dei blocchi di script è importante, utilizzare un <xref:System.Text.StringBuilder>per raccogliere gli script in un&quot;unica stringa dell&quot;oggetto e quindi registrarli tutti in un blocco di script client singolo.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptBlock method. Note that the `addScriptTags` parameter is set to `true` so the beginning and closing script tags are not included with the `script` parameter.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/e4221441-a348-44c8-8a15-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/e4221441-a348-44c8-8a15-_1.aspx)]"
  syntax:
    content: public void RegisterClientScriptBlock (Type type, string key, string script, bool addScriptTags);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo di script client da registrare."
    - id: key
      type: System.String
      description: "La chiave di script client da registrare."
    - id: script
      type: System.String
      description: "Valore letterale per registrare lo script di client."
    - id: addScriptTags
      type: System.Boolean
      description: "Valore booleano che indica se aggiungere tag script."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il tipo di blocco di script client è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)
  id: RegisterClientScriptInclude(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptInclude(String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra lo script client con il <xref href=&quot;System.Web.UI.Page&quot;> </xref> oggetto utilizzando una chiave e un URL, che consente lo script da chiamare dal client."
  remarks: "Includere uno script client è identificata dalla rispettiva chiave e il relativo tipo. Script con la stessa chiave e tipo sono considerati duplicati. Un solo script con un tipo specificato e una coppia di chiavi possono essere registrati con la pagina. Il tentativo di registrare uno script che è già registrato non crea un duplicato dello script.       Chiamare il <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A>metodo per determinare se includere uno script client con una chiave specificata e la coppia di tipo è già registrata ed evitare inutili tentativi di aggiungere lo script.</xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A>      > [!NOTE] > Per risolvere l&quot;URL del client, utilizzare il <xref:System.Web.UI.Control.ResolveClientUrl%2A>metodo.</xref:System.Web.UI.Control.ResolveClientUrl%2A> Questo metodo utilizza il contesto dell&quot;URL in cui viene chiamato per risolvere il percorso.       Questo overload del metodo di <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>metodo chiama l&quot;overload che accetta un `key`, un `URL`e un `type` parametro.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>       Il metodo aggiunge un blocco di script nella parte superiore della pagina rendering."
  example:
  - For related information, including syntax, usage, and an example, see <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.
  syntax:
    content: public void RegisterClientScriptInclude (string key, string url);
    parameters:
    - id: key
      type: System.String
      description: "La chiave dello script client inclusione da registrare."
    - id: url
      type: System.String
      description: "L&quot;URL dello script client inclusione da registrare."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)
  id: RegisterClientScriptInclude(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptInclude(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra lo script client inclusione con la <xref href=&quot;System.Web.UI.Page&quot;> </xref> oggetto utilizzando un tipo, una chiave e un URL."
  remarks: "Questo overload di <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>metodo accetta *chiave* e *url* parametri per identificare lo script, nonché una `type` includere parametri per specificare l&quot;identificazione dello script client.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Specificare il tipo in base all&quot;oggetto che sarà possibile accedere alla risorsa. Ad esempio, quando si utilizza un `Page` istanza per accedere alla risorsa, specificare il `Page` tipo.      > [!NOTE] > Per risolvere l&quot;URL del client, utilizzare il <xref:System.Web.UI.Control.ResolveClientUrl%2A>metodo.</xref:System.Web.UI.Control.ResolveClientUrl%2A> Questo metodo utilizza il contesto dell&quot;URL in cui viene chiamato per risolvere il percorso.       Questo metodo aggiunge un blocco di script nella parte superiore della pagina rendering."
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptInclude method. Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/csharp/cbae2904-30a8-438b-9fac-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/visualbasic/cbae2904-30a8-438b-9fac-_1.aspx)]  \n  \n This example requires a JavaScript file named Script_include.js with the following contents:  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from include script.'}  \n```"
  syntax:
    content: public void RegisterClientScriptInclude (Type type, string key, string url);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo di script client inclusione da registrare."
    - id: key
      type: System.String
      description: "La chiave dello script client inclusione da registrare."
    - id: url
      type: System.String
      description: "L&quot;URL dello script client inclusione da registrare."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Tipo di includere lo script client è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The URL is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The URL is empty."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)
  id: RegisterClientScriptResource(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptResource(Type,String)
  nameWithType: ClientScriptManager.RegisterClientScriptResource(Type,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra la risorsa di script client con il <xref href=&quot;System.Web.UI.Page&quot;> </xref> oggetto utilizzando un tipo e un nome di risorsa."
  remarks: "Il metodo RegisterClientScriptResource viene utilizzato quando si accede a risorse compilate da assembly tramite il gestore WebResource.axd HTTP. Il metodo RegisterClientScriptResource registra lo script con il <xref:System.Web.UI.Page>dell&quot;oggetto e impedisce la creazione di script duplicati.</xref:System.Web.UI.Page> Questo metodo include il contenuto dell&quot;URL della risorsa con un `<script>` blocco di elementi."
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptResource method.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/visualbasic/e804ef10-67d2-47bd-8da2-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/csharp/e804ef10-67d2-47bd-8da2-_1.aspx)]  \n  \n The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/visualbasic/e804ef10-67d2-47bd-8da2-_2.vb)]\n [!code-cs[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/csharp/e804ef10-67d2-47bd-8da2-_2.cs)]  \n  \n This example requires a JavaScript file named `Script_include.js`, with the following contents:  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from resource script.'}  \n```  \n  \n Compile the `Script_include.js` file as a resource in the `Samples.AspNet.CS.Controls` assembly that contains the `ClientScriptResourceLabel` class."
  syntax:
    content: public void RegisterClientScriptResource (Type type, string resourceName);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo della risorsa di script client da registrare."
    - id: resourceName
      type: System.String
      description: "Il nome della risorsa di script client da registrare."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptResource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The client resource name is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The client resource name has a length of zero."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)
  id: RegisterExpandoAttribute(System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterExpandoAttribute(String,String,String)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra una coppia nome/valore come attributo personalizzato (expando) del controllo specificato, dato un ID di controllo, il nome dell&quot;attributo e valore dell&quot;attributo."
  remarks: "Il metodo RegisterExpandoAttribute registra una coppia nome/valore come un attributo personalizzato (expando) specificata <xref:System.Web.UI.Control>.</xref:System.Web.UI.Control> L&quot;attributo expando viene impostato in modo dinamico da JavaScript per mantenere la compatibilità XHTML per il rendering del markup del controllo. Le offerte e le barre rovesciate nei valori dell&quot;attributo personalizzato (expando) vengono sottoposti a escape. Se non si desidera evitare, chiamare il <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>overload di metodo e impostare il `encode` parametro `false`.</xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>       Se l&quot;attributo expando non viene trovato o non è possibile trovare il controllo per aggiungere l&quot;attributo expando, lo script del client è ancora creato, ma non avrà alcun effetto del controllo."
  syntax:
    content: public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue);
    parameters:
    - id: controlId
      type: System.String
      description: "Il <xref href=&quot;System.Web.UI.Control&quot;> </xref> nella pagina che contiene l&quot;attributo personalizzato."
    - id: attributeName
      type: System.String
      description: "Il nome dell&quot;attributo personalizzato da registrare."
    - id: attributeValue
      type: System.String
      description: "Il valore dell&quot;attributo personalizzato."
  overload: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  id: RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterExpandoAttribute(String,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra una coppia nome/valore come attributo personalizzato (expando) del controllo specificato, dato un ID di controllo, un nome di attributo, un valore di attributo e un valore booleano che indica se codificare il valore dell&quot;attributo."
  remarks: "Il metodo RegisterExpandoAttribute registra una coppia nome/valore come un attributo personalizzato (expando) specificata <xref:System.Web.UI.Control>.</xref:System.Web.UI.Control> L&quot;attributo expando viene impostato in modo dinamico da JavaScript per mantenere la compatibilità XHTML per il rendering del markup del controllo. Impostare il `encode` parametro `true` se è necessario evitare le barre rovesciate nel valore dell&quot;attributo expando.       Se l&quot;attributo expando non viene trovato o non è possibile trovare il controllo per aggiungere l&quot;attributo expando, lo script del client è ancora creato, ma non avrà alcun effetto del controllo."
  example:
  - "The following code example demonstrates how to use the RegisterExpandoAttribute method of the <xref:System.Web.UI.ClientScriptManager> class. The client script in the rendered page sets the `title` attribute of a `<span>` element.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager6#1](~/add/codesnippet/visualbasic/fbe2457b-d4ba-44a2-ac6e-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager6#1](~/add/codesnippet/csharp/fbe2457b-d4ba-44a2-ac6e-_1.aspx)]"
  syntax:
    content: public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue, bool encode);
    parameters:
    - id: controlId
      type: System.String
      description: "Il <xref href=&quot;System.Web.UI.Control&quot;> </xref> nella pagina che contiene l&quot;attributo personalizzato."
    - id: attributeName
      type: System.String
      description: "Il nome dell&quot;attributo personalizzato da registrare."
    - id: attributeValue
      type: System.String
      description: "Il valore dell&quot;attributo personalizzato."
    - id: encode
      type: System.Boolean
      description: "Valore booleano che indica se codificare l&quot;attributo personalizzato da registrare."
  overload: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)
  id: RegisterForEventValidation(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterForEventValidation(String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra un riferimento dell&quot;evento per la convalida con un ID di controllo univoco che rappresenta il controllo client che genera l&quot;evento."
  remarks: "Per ulteriori informazioni ed esempi, vedere il <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>metodo.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>"
  example:
  - "The following example shows how to use the RegisterForEventValidation method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method in order to register a callback for validation, and how to validate that the callback originated from the page.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager9#2](~/add/codesnippet/csharp/m-system.web.ui.clientsc_1_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager9#2](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_1_1.aspx)]"
  syntax:
    content: public void RegisterForEventValidation (string uniqueId);
    parameters:
    - id: uniqueId
      type: System.String
      description: "ID univoco che rappresenta il controllo client che genera l&quot;evento."
  overload: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)
  id: RegisterForEventValidation(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterForEventValidation(PostBackOptions)
  nameWithType: ClientScriptManager.RegisterForEventValidation(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(PostBackOptions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra un riferimento a un evento per la convalida con <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref>."
  remarks: "Per ulteriori informazioni ed esempi, vedere il <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>metodo.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>"
  syntax:
    content: public void RegisterForEventValidation (System.Web.UI.PostBackOptions options);
    parameters:
    - id: options
      type: System.Web.UI.PostBackOptions
      description: "Oggetto <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> oggetto che specifica la modalità di generazione JavaScript sul lato client per avviare un evento postback."
  overload: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)
  id: RegisterForEventValidation(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterForEventValidation(String,String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra un riferimento dell&quot;evento per la convalida con un controllo univoco ID e argomenti di evento che rappresenta il controllo client che genera l&quot;evento."
  remarks: ''
  example:
  - "The following code example demonstrates using the RegisterForEventValidation method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page. To improve on the validation shown in the example, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role  \n  \n [!code-vb[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/visualbasic/b1669fea-2f0d-4c7f-a7ff-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/csharp/b1669fea-2f0d-4c7f-a7ff-_1.aspx)]  \n  \n The following code example demonstrates using the RegisterForEventValidation method to register a callback for validation.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager10#1](~/add/codesnippet/visualbasic/b1669fea-2f0d-4c7f-a7ff-_2.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager10#1](~/add/codesnippet/csharp/b1669fea-2f0d-4c7f-a7ff-_2.aspx)]"
  syntax:
    content: public void RegisterForEventValidation (string uniqueId, string argument);
    parameters:
    - id: uniqueId
      type: System.String
      description: "ID univoco che rappresenta il controllo client che genera l&quot;evento."
    - id: argument
      type: System.String
      description: "Argomenti dell&quot;evento passato all&quot;evento di client."
  overload: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il metodo viene chiamato prima di <xref:System.Web.UI.Page.Render*>metodo.</xref:System.Web.UI.Page.Render*>"
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)
  id: RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterHiddenField(String,String)
  nameWithType: ClientScriptManager.RegisterHiddenField(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterHiddenField(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra un valore nascosto con il <xref href=&quot;System.Web.UI.Page&quot;> </xref> oggetto."
  remarks: "Il metodo RegisterHiddenField crea nascosta `<input>` elemento nella pagina HTML di cui è stato eseguito rendering."
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and RegisterHiddenField methods. The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/csharp/0defa6d5-d8c8-43f1-af03-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/visualbasic/0defa6d5-d8c8-43f1-af03-_1.aspx)]"
  syntax:
    content: public void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);
    parameters:
    - id: hiddenFieldName
      type: System.String
      description: "Il nome del campo nascosto da registrare."
    - id: hiddenFieldInitialValue
      type: System.String
      description: "Il valore iniziale del campo da registrare."
  overload: System.Web.UI.ClientScriptManager.RegisterHiddenField*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hiddenFieldName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)
  id: RegisterOnSubmitStatement(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterOnSubmitStatement(Type,String,String)
  nameWithType: ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra un&quot;istruzione OnSubmit con il <xref href=&quot;System.Web.UI.Page&quot;> </xref> oggetto utilizzando un tipo, una chiave e un valore letterale di script. L&quot;istruzione viene eseguita quando il <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> viene inviato."
  remarks: "Un&quot;istruzione OnSubmit è identificata in modo univoco la chiave e il relativo tipo. Istruzioni con la stessa chiave e tipo sono considerate duplicati. Solo un&quot;istruzione con un tipo specificato e una coppia di chiavi può essere registrata con la pagina. Il tentativo di registrazione di un&quot;istruzione che è già registrata, non crea un duplicato dell&quot;istruzione.       Chiamare il <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>metodo per determinare se un&quot;istruzione OnSubmit è già registrata con una coppia di chiave e tipo ed evitare inutili tentativi di aggiungere lo script.</xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>       Il `script` parametro del metodo RegisterOnSubmitStatement può contenere più comandi di script, purché siano correttamente delimitati da punto e virgola (;).       RegisterOnSubmitStatement aggiunge uno script che viene eseguito prima che la pagina viene inviata e offre la possibilità di annullare l&quot;invio.       Per ulteriori informazioni sul form HTML e `OnSubmit` attributo, vedere il [sito Web World Wide Web Consortium (W3C)](http://go.microsoft.com/fwlink/?linkid=37125)."
  example:
  - "The following code example demonstrates the use of the RegisterOnSubmitStatement method.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/visualbasic/597b1063-1251-4d00-82f9-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/csharp/597b1063-1251-4d00-82f9-_1.aspx)]"
  syntax:
    content: public void RegisterOnSubmitStatement (Type type, string key, string script);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo di istruzione OnSubmit da registrare."
    - id: key
      type: System.String
      description: "Chiave dell&quot;istruzione OnSubmit da registrare."
    - id: script
      type: System.String
      description: "Il valore letterale dell&quot;istruzione OnSubmit da registrare."
  overload: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)
  id: RegisterStartupScript(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterStartupScript(Type,String,String)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra lo script di avvio con il <xref href=&quot;System.Web.UI.Page&quot;> </xref> oggetto utilizzando un tipo, una chiave e un valore letterale di script."
  remarks: "Uno script client è identificato dalla rispettiva chiave e il relativo tipo. Script con la stessa chiave e tipo sono considerati duplicati. Un solo script con un tipo specificato e una coppia di chiavi possono essere registrati con la pagina. Il tentativo di registrare uno script che è già registrato non crea un duplicato dello script.       Chiamare il <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>metodo per determinare se uno script di avvio con una coppia di tipo e la chiave specificata è già registrato ed evitare inutili tentativi di aggiungere lo script.</xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>       In questo overload di <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>(metodo), è necessario assicurarsi che lo script fornito nel `script` parametro viene eseguito il wrapping con un `<script>` blocco di elementi.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>       Il blocco di script aggiunto dal <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metodo viene eseguito al termine del caricamento della pagina ma prima della pagina <xref:System.Web.UI.Control.OnLoad%2A>viene generato l&quot;evento.</xref:System.Web.UI.Control.OnLoad%2A> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> I blocchi di script non sono necessariamente restituiti nell&quot;ordine che vengono registrati. Se l&quot;ordine dei blocchi di script è importante, utilizzare un <xref:System.Text.StringBuilder>per raccogliere gli script in un&quot;unica stringa dell&quot;oggetto e quindi registrarli tutti in un blocco di script client singolo.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterStartupScript method. Note that the beginning and closing script tags are included within the `script` parameter. To have the script tags added based on an additional parameter setting, see the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager11#1](~/add/codesnippet/csharp/77e56a73-ddd0-4c6d-99c5-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager11#1](~/add/codesnippet/visualbasic/77e56a73-ddd0-4c6d-99c5-_1.aspx)]"
  syntax:
    content: public void RegisterStartupScript (Type type, string key, string script);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo di script di avvio da registrare."
    - id: key
      type: System.String
      description: "La chiave di script di avvio da registrare."
    - id: script
      type: System.String
      description: "Valore letterale per registrare lo script di avvio."
  overload: System.Web.UI.ClientScriptManager.RegisterStartupScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  id: RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterStartupScript(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra lo script di avvio con il <xref href=&quot;System.Web.UI.Page&quot;> </xref> oggetto utilizzando un tipo, una chiave, un valore letterale di script e un valore booleano che indica se aggiungere tag script."
  remarks: "Uno script di avvio è identificato in modo univoco la chiave e il relativo tipo. Script con la stessa chiave e tipo sono considerati duplicati. Un solo script con un tipo specificato e una coppia di chiavi possono essere registrati con la pagina. Il tentativo di registrare uno script che è già registrato non crea un duplicato dello script.       Chiamare il <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>metodo per determinare se uno script di avvio con una coppia di tipo e la chiave specificata è già registrato ed evitare inutili tentativi di aggiungere lo script.</xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>       In questo overload del <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>(metodo), è possibile indicare se lo script fornito nel `script` parametro viene eseguito il wrapping con un `<script>` blocco di elementi tramite il `addScriptTags` parametro.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Impostazione `addScriptTags` a `true` indica che il tag di script verrà aggiunto automaticamente.       Il blocco di script aggiunto dal <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>metodo viene eseguito al termine del caricamento della pagina ma prima della pagina <xref:System.Web.UI.Control.OnLoad%2A>viene generato l&quot;evento.</xref:System.Web.UI.Control.OnLoad%2A> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> I blocchi di script non sono necessariamente restituiti nell&quot;ordine che vengono registrati. Se l&quot;ordine dei blocchi di script è importante, utilizzare un <xref:System.Text.StringBuilder>per raccogliere gli script in un&quot;unica stringa dell&quot;oggetto e quindi registrarli tutti in un blocco di script client singolo.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterStartupScript method. Note that the `addScriptTags` parameter is set to `false` so the beginning and closing script tags are included with the `script` parameter.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/8a83f4c8-e8ef-4a4a-b8c6-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/8a83f4c8-e8ef-4a4a-b8c6-_1.aspx)]"
  syntax:
    content: public void RegisterStartupScript (Type type, string key, string script, bool addScriptTags);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo di script di avvio da registrare."
    - id: key
      type: System.String
      description: "La chiave di script di avvio da registrare."
    - id: script
      type: System.String
      description: "Valore letterale per registrare lo script di avvio."
    - id: addScriptTags
      type: System.Boolean
      description: "Valore booleano che indica se aggiungere tag script."
  overload: System.Web.UI.ClientScriptManager.RegisterStartupScript*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String)
  id: ValidateEvent(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: ValidateEvent(String)
  nameWithType: ClientScriptManager.ValidateEvent(String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Convalida un evento di client che è stato registrato per la convalida utilizzando il <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>metodo.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>"
  syntax:
    content: public void ValidateEvent (string uniqueId);
    parameters:
    - id: uniqueId
      type: System.String
      description: "ID univoco che rappresenta il controllo client che genera l&quot;evento."
  overload: System.Web.UI.ClientScriptManager.ValidateEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)
  id: ValidateEvent(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: ValidateEvent(String,String)
  nameWithType: ClientScriptManager.ValidateEvent(String,String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Convalida un evento di client che è stato registrato per la convalida utilizzando il <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>metodo.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>"
  remarks: ''
  example:
  - "The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the ValidateEvent method to register a callback for validation and to validate that the callback originated from the page. To improve on the validation shown here, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role  \n  \n [!code-vb[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_3_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/csharp/m-system.web.ui.clientsc_3_1.aspx)]"
  syntax:
    content: public void ValidateEvent (string uniqueId, string argument);
    parameters:
    - id: uniqueId
      type: System.String
      description: "ID univoco che rappresenta il controllo client che genera l&quot;evento."
    - id: argument
      type: System.String
      description: "Gli argomenti dell&quot;evento passato all&quot;evento di client."
  overload: System.Web.UI.ClientScriptManager.ValidateEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>uniqueId</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o una stringa vuota (&quot;&quot;)."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(Control,String,String,String)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(Control,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(String,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(Control,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String)
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackClientHyperlink(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(PostBackOptions)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions)
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(Control,String)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String)
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(PostBackOptions,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetWebResourceUrl(Type,String)
  nameWithType: ClientScriptManager.GetWebResourceUrl(Type,String)
  fullName: System.Web.UI.ClientScriptManager.GetWebResourceUrl(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptBlockRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptBlockRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptIncludeRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptIncludeRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsOnSubmitStatementRegistered(String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsOnSubmitStatementRegistered(Type,String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsStartupScriptRegistered(String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsStartupScriptRegistered(Type,String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterArrayDeclaration(String,String)
  nameWithType: ClientScriptManager.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptBlock(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptBlock(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptInclude(String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptInclude(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptResource(Type,String)
  nameWithType: ClientScriptManager.RegisterClientScriptResource(Type,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(Type,String)
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterExpandoAttribute(String,String,String)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterExpandoAttribute(String,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation(String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String)
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation(PostBackOptions)
  nameWithType: ClientScriptManager.RegisterForEventValidation(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(PostBackOptions)
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation(String,String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterHiddenField(String,String)
  nameWithType: ClientScriptManager.RegisterHiddenField(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterHiddenField(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterOnSubmitStatement(Type,String,String)
  nameWithType: ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterStartupScript(Type,String,String)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterStartupScript(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: ValidateEvent(String)
  nameWithType: ClientScriptManager.ValidateEvent(String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String)
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: ValidateEvent(String,String)
  nameWithType: ClientScriptManager.ValidateEvent(String,String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String,String)
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference
  nameWithType: ClientScriptManager.GetCallbackEventReference
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackClientHyperlink
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference
  nameWithType: ClientScriptManager.GetPostBackEventReference
- uid: System.Web.UI.ClientScriptManager.GetWebResourceUrl*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetWebResourceUrl
  nameWithType: ClientScriptManager.GetWebResourceUrl
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptBlockRegistered
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptIncludeRegistered
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsOnSubmitStatementRegistered
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsStartupScriptRegistered
  nameWithType: ClientScriptManager.IsStartupScriptRegistered
- uid: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterArrayDeclaration
  nameWithType: ClientScriptManager.RegisterArrayDeclaration
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptBlock
  nameWithType: ClientScriptManager.RegisterClientScriptBlock
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptInclude
  nameWithType: ClientScriptManager.RegisterClientScriptInclude
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptResource*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptResource
  nameWithType: ClientScriptManager.RegisterClientScriptResource
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterExpandoAttribute
  nameWithType: ClientScriptManager.RegisterExpandoAttribute
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation
  nameWithType: ClientScriptManager.RegisterForEventValidation
- uid: System.Web.UI.ClientScriptManager.RegisterHiddenField*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterHiddenField
  nameWithType: ClientScriptManager.RegisterHiddenField
- uid: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterOnSubmitStatement
  nameWithType: ClientScriptManager.RegisterOnSubmitStatement
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterStartupScript
  nameWithType: ClientScriptManager.RegisterStartupScript
- uid: System.Web.UI.ClientScriptManager.ValidateEvent*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: ValidateEvent
  nameWithType: ClientScriptManager.ValidateEvent
