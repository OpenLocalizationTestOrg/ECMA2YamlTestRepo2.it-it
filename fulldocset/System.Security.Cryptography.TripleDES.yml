### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.TripleDES
  id: TripleDES
  children:
  - System.Security.Cryptography.TripleDES.#ctor
  - System.Security.Cryptography.TripleDES.Create
  - System.Security.Cryptography.TripleDES.Create(System.String)
  - System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])
  - System.Security.Cryptography.TripleDES.Key
  langs:
  - csharp
  name: TripleDES
  nameWithType: TripleDES
  fullName: System.Security.Cryptography.TripleDES
  type: Class
  summary: "Rappresenta la classe base per gli algoritmi Triple Data Encryption Standard da cui TripleDES tutti devono derivare le implementazioni."
  remarks: "TripleDES utilizza tre iterazioni successive del <xref:System.Security.Cryptography.DES>algoritmo.</xref:System.Security.Cryptography.DES> È possibile utilizzare due o tre chiavi a 56 bit.      > [!NOTE] > Un algoritmo di crittografia simmetrica più recente, Advanced Encryption Standard (AES), è disponibile. È possibile utilizzare la <xref:System.Security.Cryptography.Aes>classe e le relative classi derivate anziché la classe TripleDES.</xref:System.Security.Cryptography.Aes> Usa TripleDES solo per compatibilità con le applicazioni legacy e i dati.       Questo algoritmo supporta lunghezze di chiave da 128 a 192 bit in incrementi di 64 bit."
  example:
  - "The following code example method uses <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`. It then outputs the encrypted result to the file specified by `outName`.  \n  \n [!code-cpp[Classic TripleDESCryptoServiceProvider Example#1](~/add/codesnippet/cpp/t-system.security.crypto_61_1.cpp)]\n [!code-cs[Classic TripleDESCryptoServiceProvider Example#1](~/add/codesnippet/csharp/t-system.security.crypto_61_1.cs)]\n [!code-vb[Classic TripleDESCryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_61_1.vb)]  \n  \n Decryption can be handled in the same way; use <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A> instead of <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A>. The same key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) used to encrypt the file must be used to decrypt it."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class TripleDES : System.Security.Cryptography.SymmetricAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.SymmetricAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Clear
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
  - System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
  - System.Security.Cryptography.SymmetricAlgorithm.IV
  - System.Security.Cryptography.SymmetricAlgorithm.IVValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeySize
  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.Mode
  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Padding
  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDES.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.TripleDES
  langs:
  - csharp
  name: TripleDES()
  nameWithType: TripleDES.TripleDES()
  fullName: System.Security.Cryptography.TripleDES.TripleDES()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> classe."
  remarks: "È possibile creare un&quot;istanza di una classe astratta. Il codice dell&quot;applicazione verrà creata una nuova istanza di una classe derivata.       Questo metodo inizializza i campi protetti della <xref:System.Security.Cryptography.SymmetricAlgorithm>classe per i valori predefiniti elencati nella tabella seguente.</xref:System.Security.Cryptography.SymmetricAlgorithm>      | Campo | Il valore predefinito |   |-----------|-------------------|   | <xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|&192; |   | <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|&64; |   | <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|64|</xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue></xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue></xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>"
  syntax:
    content: protected TripleDES ();
    parameters: []
  overload: System.Security.Cryptography.TripleDES.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDES.Create
  id: Create
  parent: System.Security.Cryptography.TripleDES
  langs:
  - csharp
  name: Create()
  nameWithType: TripleDES.Create()
  fullName: System.Security.Cryptography.TripleDES.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Crea un&quot;istanza di un oggetto di crittografia per eseguire il <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> algoritmo."
  remarks: "Crea una nuova istanza della <xref:System.Security.Cryptography.TripleDES>classe.</xref:System.Security.Cryptography.TripleDES>"
  example:
  - "The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in a file.  \n  \n [!code-cs[Cryptography.3DES.Create.File#1](~/add/codesnippet/csharp/m-system.security.crypto_61_1.cs)]\n [!code-cpp[Cryptography.3DES.Create.File#1](~/add/codesnippet/cpp/m-system.security.crypto_61_1.cpp)]\n [!code-vb[Cryptography.3DES.Create.File#1](~/add/codesnippet/visualbasic/m-system.security.crypto_61_1.vb)]  \n  \n The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in memory.  \n  \n [!code-cpp[Cryptography.3DES.Create.Memory#1](~/add/codesnippet/cpp/m-system.security.crypto_61_2.cpp)]\n [!code-vb[Cryptography.3DES.Create.Memory#1](~/add/codesnippet/visualbasic/m-system.security.crypto_61_2.vb)]"
  syntax:
    content: public static System.Security.Cryptography.TripleDES Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.TripleDES
      description: "Un&quot;istanza di un oggetto di crittografia."
  overload: System.Security.Cryptography.TripleDES.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDES.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.TripleDES
  langs:
  - csharp
  name: Create(String)
  nameWithType: TripleDES.Create(String)
  fullName: System.Security.Cryptography.TripleDES.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Crea un&quot;istanza di un oggetto di crittografia per eseguire l&quot;implementazione specifica del <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> algoritmo."
  remarks: ''
  example:
  - "The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in a file.  \n  \n [!code-cpp[Cryptography.3DES.Createstring.File#1](~/add/codesnippet/cpp/m-system.security.crypto_55_1.cpp)]\n [!code-cs[Cryptography.3DES.Createstring.File#1](~/add/codesnippet/csharp/m-system.security.crypto_55_1.cs)]\n [!code-vb[Cryptography.3DES.Createstring.File#1](~/add/codesnippet/visualbasic/m-system.security.crypto_55_1.vb)]  \n  \n The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in memory.  \n  \n [!code-cs[Cryptography.3DES.Createstring.Memory#1](~/add/codesnippet/csharp/m-system.security.crypto_55_2.cs)]\n [!code-vb[Cryptography.3DES.Createstring.Memory#1](~/add/codesnippet/visualbasic/m-system.security.crypto_55_2.vb)]\n [!code-cpp[Cryptography.3DES.Createstring.Memory#1](~/add/codesnippet/cpp/m-system.security.crypto_55_2.cpp)]"
  syntax:
    content: public static System.Security.Cryptography.TripleDES Create (string str);
    parameters:
    - id: str
      type: System.String
      description: "Il nome dell&quot;implementazione specifica di <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> da utilizzare."
    return:
      type: System.Security.Cryptography.TripleDES
      description: "Un&quot;istanza di un oggetto di crittografia."
  overload: System.Security.Cryptography.TripleDES.Create*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])
  id: IsWeakKey(System.Byte[])
  parent: System.Security.Cryptography.TripleDES
  langs:
  - csharp
  name: IsWeakKey(Byte[])
  nameWithType: TripleDES.IsWeakKey(Byte[])
  fullName: System.Security.Cryptography.TripleDES.IsWeakKey(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Determina se la chiave specificata è debole."
  remarks: "Chiavi deboli sono chiavi in crittografie facili da interrompere. Se il testo è crittografato con una chiave debole, crittografare nuovamente la crittografia risulta con la stessa chiave debole restituisce il testo originale. In modalità a 128 bit, se i primi 64 bit sono uguali agli ultimi 64 bit, la chiave è debole. In modalità a 192 bit, se i primi 64 bit sono le stesse secondi 64 bit o se i secondi 64 bit sono uguali agli ultimi 64 bit, la chiave è debole.       Il tentativo di impostare una chiave debole genera un <xref:System.Security.Cryptography.CryptographicException>.</xref:System.Security.Cryptography.CryptographicException> Quando <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey%2A>viene chiamato per creare una chiave casuale, non viene mai restituita una chiave debole.</xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey%2A>"
  syntax:
    content: public static bool IsWeakKey (byte[] rgbKey);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "La chiave segreta per verificare la debolezza."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la chiave è debole; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.TripleDES.IsWeakKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Le dimensioni del <code> rgbKey </code> parametro non è valido."
  platform:
  - net462
- uid: System.Security.Cryptography.TripleDES.Key
  id: Key
  parent: System.Security.Cryptography.TripleDES
  langs:
  - csharp
  name: Key
  nameWithType: TripleDES.Key
  fullName: System.Security.Cryptography.TripleDES.Key
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene o imposta la chiave privata per il <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> algoritmo."
  remarks: "Questo algoritmo supporta lunghezze di chiave da 128 a 192 bit in incrementi di 64 bit."
  syntax:
    content: public override byte[] Key { get; set; }
    return:
      type: System.Byte[]
      description: "La chiave privata per il <xref href=&quot;System.Security.Cryptography.TripleDES&quot;> </xref> algoritmo."
  overload: System.Security.Cryptography.TripleDES.Key*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Si è verificato un tentativo di impostare la chiave <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "È stato effettuato un tentativo di impostare una chiave la cui lunghezza non valida.       - oppure - è stato effettuato un tentativo di impostare una chiave debole (vedere <xref:System.Security.Cryptography.TripleDES.IsWeakKey*>).</xref:System.Security.Cryptography.TripleDES.IsWeakKey*>"
  platform:
  - net462
references:
- uid: System.Security.Cryptography.SymmetricAlgorithm
  isExternal: false
  name: System.Security.Cryptography.SymmetricAlgorithm
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.TripleDES.#ctor
  parent: System.Security.Cryptography.TripleDES
  isExternal: false
  name: TripleDES()
  nameWithType: TripleDES.TripleDES()
  fullName: System.Security.Cryptography.TripleDES.TripleDES()
- uid: System.Security.Cryptography.TripleDES.Create
  parent: System.Security.Cryptography.TripleDES
  isExternal: false
  name: Create()
  nameWithType: TripleDES.Create()
  fullName: System.Security.Cryptography.TripleDES.Create()
- uid: System.Security.Cryptography.TripleDES
  parent: System.Security.Cryptography
  isExternal: false
  name: TripleDES
  nameWithType: TripleDES
  fullName: System.Security.Cryptography.TripleDES
- uid: System.Security.Cryptography.TripleDES.Create(System.String)
  parent: System.Security.Cryptography.TripleDES
  isExternal: false
  name: Create(String)
  nameWithType: TripleDES.Create(String)
  fullName: System.Security.Cryptography.TripleDES.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])
  parent: System.Security.Cryptography.TripleDES
  isExternal: false
  name: IsWeakKey(Byte[])
  nameWithType: TripleDES.IsWeakKey(Byte[])
  fullName: System.Security.Cryptography.TripleDES.IsWeakKey(Byte[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.TripleDES.Key
  parent: System.Security.Cryptography.TripleDES
  isExternal: false
  name: Key
  nameWithType: TripleDES.Key
  fullName: System.Security.Cryptography.TripleDES.Key
- uid: System.Security.Cryptography.TripleDES.#ctor*
  parent: System.Security.Cryptography.TripleDES
  isExternal: false
  name: TripleDES
  nameWithType: TripleDES.TripleDES
- uid: System.Security.Cryptography.TripleDES.Create*
  parent: System.Security.Cryptography.TripleDES
  isExternal: false
  name: Create
  nameWithType: TripleDES.Create
- uid: System.Security.Cryptography.TripleDES.IsWeakKey*
  parent: System.Security.Cryptography.TripleDES
  isExternal: false
  name: IsWeakKey
  nameWithType: TripleDES.IsWeakKey
- uid: System.Security.Cryptography.TripleDES.Key*
  parent: System.Security.Cryptography.TripleDES
  isExternal: false
  name: Key
  nameWithType: TripleDES.Key
