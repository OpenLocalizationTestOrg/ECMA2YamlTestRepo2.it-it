### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.PingReply
  id: PingReply
  children:
  - System.Net.NetworkInformation.PingReply.Address
  - System.Net.NetworkInformation.PingReply.Buffer
  - System.Net.NetworkInformation.PingReply.Options
  - System.Net.NetworkInformation.PingReply.RoundtripTime
  - System.Net.NetworkInformation.PingReply.Status
  langs:
  - csharp
  name: PingReply
  nameWithType: PingReply
  fullName: System.Net.NetworkInformation.PingReply
  type: Class
  summary: "Fornisce informazioni sullo stato e i dati risultanti da un <> </> *> o <> </> *> operazione."
  remarks: "La <xref:System.Net.NetworkInformation.Ping>classe tenta di inviare una richiesta echo Internet controllo Message Protocol (ICMP) a un computer remoto e ricevere informazioni dal computer tramite un messaggio di risposta echo ICMP.</xref:System.Net.NetworkInformation.Ping> La <xref:System.Net.NetworkInformation.Ping>classe utilizza istanze della classe PingReply per restituire informazioni sull&quot;operazione, ad esempio lo stato e il tempo impiegato per inviare la richiesta e la ricezione della risposta.</xref:System.Net.NetworkInformation.Ping>       Il <xref:System.Net.NetworkInformation.Ping.Send%2A>metodi restituiscono direttamente istanze della classe PingReply.</xref:System.Net.NetworkInformation.Ping.Send%2A> Il <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>i metodi restituiscono un PingReply nel <xref:System.Net.NetworkInformation.PingCompletedEventHandler>del metodo <xref:System.Net.NetworkInformation.PingCompletedEventArgs>parametro.</xref:System.Net.NetworkInformation.PingCompletedEventArgs> </xref:System.Net.NetworkInformation.PingCompletedEventHandler> </xref:System.Net.NetworkInformation.Ping.SendAsync%2A> Il PingReply avviene tramite il <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A>proprietà.</xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A>       Se il valore di <xref:System.Net.NetworkInformation.PingReply.Status%2A>non <xref:System.Net.NetworkInformation.IPStatus>, non utilizzare i valori restituiti da di <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A>o <xref:System.Net.NetworkInformation.PingReply.Buffer%2A>proprietà.</xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> </xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingReply.Status%2A> Il <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>proprietà restituirà zero, il <xref:System.Net.NetworkInformation.PingReply.Buffer%2A>proprietà restituirà una matrice vuota e <xref:System.Net.NetworkInformation.PingReply.Options%2A>restituirà `null`.</xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>"
  example:
  - "The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_6_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_6_1.cpp)]"
  syntax:
    content: public class PingReply
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Address
  id: Address
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Address
  nameWithType: PingReply.Address
  fullName: System.Net.NetworkInformation.PingReply.Address
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Ottiene l&quot;indirizzo dell&quot;host che invia la risposta echo messaggio protocollo ICMP (Internet Control)."
  remarks: "L&quot;indirizzo restituito da uno del <xref:System.Net.NetworkInformation.Ping.Send%2A>gli overload possono provenire da un computer remoto non autorizzato.</xref:System.Net.NetworkInformation.Ping.Send%2A> Non si connettono al computer remoto utilizzando questo indirizzo. Usare DNS per determinare l&quot;indirizzo IP del computer in cui si desidera connettersi."
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the value of this property.  \n  \n [!code-cs[NclPingSampler#2](~/add/codesnippet/csharp/p-system.net.networkinfo_2_1.cs)]\n [!code-cpp[NclPingSampler#2](~/add/codesnippet/cpp/p-system.net.networkinfo_2_1.cpp)]"
  syntax:
    content: public System.Net.IPAddress Address { get; }
    return:
      type: System.Net.IPAddress
      description: "Un <xref:System.Net.IPAddress>contenente la destinazione del messaggio echo ICMP.</xref:System.Net.IPAddress>"
  overload: System.Net.NetworkInformation.PingReply.Address*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Buffer
  id: Buffer
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Buffer
  nameWithType: PingReply.Buffer
  fullName: System.Net.NetworkInformation.PingReply.Buffer
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Ottiene il buffer dei dati ricevuti in un messaggio di risposta echo messaggio protocollo ICMP (Internet Control)."
  remarks: "Il buffer dei dati inviato con la richiesta echo ICMP viene restituito al mittente nella risposta echo, pertanto è possibile calcolare il tempo impiegato di andata e ritorno per un pacchetto di dimensioni note. Buffer di dati, combinati con il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>opzione, può essere utilizzato per individuare l&quot;unità massima di trasmissione per il percorso di rete tra il computer di origine e destinazione.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Per ulteriori informazioni, vedere &quot;Traceroute&quot; in RFC 1574, sezione 3.2, disponibile all&quot;indirizzo http://www.ietf.org.       Il buffer predefinito utilizzato con <xref:System.Net.NetworkInformation.Ping.Send%2A>e <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>contiene 32 byte di dati.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A>"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.  \n  \n [!code-cs[NclPingSampler#4](~/add/codesnippet/csharp/p-system.net.networkinfo_1_1.cs)]\n [!code-cpp[NclPingSampler#4](~/add/codesnippet/cpp/p-system.net.networkinfo_1_1.cpp)]"
  syntax:
    content: public byte[] Buffer { get; }
    return:
      type: System.Byte[]
      description: "Oggetto <xref:System.Byte>matrice contenente i dati ricevuti in un messaggio di risposta echo ICMP, oppure matrice vuota se è non stata ricevuta alcuna risposta.</xref:System.Byte>"
  overload: System.Net.NetworkInformation.PingReply.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Options
  id: Options
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Options
  nameWithType: PingReply.Options
  fullName: System.Net.NetworkInformation.PingReply.Options
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Ottiene le opzioni utilizzate per trasmettere la risposta a una richiesta echo Internet controllo Message Protocol (ICMP)."
  remarks: "Il valore TTL definisce il numero di volte in cui i nodi possono inoltrare un pacchetto durante la trasmissione tra l&quot;origine e destinazione. Se il numero di inoltri, noto anche come hop, supera il valore specificato per la durata (TTL), il pacchetto viene considerato non recapitabile e verrà ignorato.       Il <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>valore specificato nella richiesta echo l&quot;ICMP controlla la frammentazione del pacchetto.</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> Se <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>è `true` e le dimensioni del pacchetto superano l&quot;unità massima di trasmissione del percorso di rete del pacchetto, questo viene scartato e <xref:System.Net.NetworkInformation.IPStatus>viene restituito l&quot;errore.</xref:System.Net.NetworkInformation.IPStatus> </xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the values stored in the <xref:System.Net.NetworkInformation.PingOptions> object returned by this property.  \n  \n [!code-cs[NclPingSampler#3](~/add/codesnippet/csharp/p-system.net.networkinfo_3_1.cs)]\n [!code-cpp[NclPingSampler#3](~/add/codesnippet/cpp/p-system.net.networkinfo_3_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingOptions Options { get; }
    return:
      type: System.Net.NetworkInformation.PingOptions
      description: "Oggetto <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref> oggetto che contiene il Time to Live (TTL) e utilizzato per trasmettere la risposta se la direttiva di frammentazione <xref:System.Net.NetworkInformation.PingReply.Status*>è <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Net.NetworkInformation.PingReply.Status*>"
  overload: System.Net.NetworkInformation.PingReply.Options*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime
  id: RoundtripTime
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: RoundtripTime
  nameWithType: PingReply.RoundtripTime
  fullName: System.Net.NetworkInformation.PingReply.RoundtripTime
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Ottiene il numero di millisecondi impiegati per inviare una richiesta echo Internet controllo Message Protocol (ICMP) e ricevere il messaggio di risposta echo ICMP corrispondente."
  remarks: "Se la richiesta Echo non riesce, il tempo RoundtripTime viene indicato come 0, che è anche un valore valido quando la richiesta ha esito positivo. È necessario controllare la <xref:System.Net.NetworkInformation.PingReply.Status%2A>per determinare se il valore restituito da questa proprietà deve essere ignorato.</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.  \n  \n [!code-cs[NclPingSampler#4](~/add/codesnippet/csharp/p-system.net.networkinfo_4_1.cs)]\n [!code-cpp[NclPingSampler#4](~/add/codesnippet/cpp/p-system.net.networkinfo_4_1.cpp)]"
  syntax:
    content: public long RoundtripTime { get; }
    return:
      type: System.Int64
      description: "Un <xref:System.Int64>che specifica il tempo di round trip in millisecondi.</xref:System.Int64>"
  overload: System.Net.NetworkInformation.PingReply.RoundtripTime*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.PingReply.Status
  id: Status
  parent: System.Net.NetworkInformation.PingReply
  langs:
  - csharp
  name: Status
  nameWithType: PingReply.Status
  fullName: System.Net.NetworkInformation.PingReply.Status
  type: Property
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "Ottiene lo stato di un tentativo di inviare una richiesta echo Internet controllo Message Protocol (ICMP) e ricevere il messaggio di risposta echo ICMP corrispondente."
  remarks: "Se il valore di stato non è <xref:System.Net.NetworkInformation.IPStatus>, i valori restituiti da non utilizzare il <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A>o <xref:System.Net.NetworkInformation.PingReply.Buffer%2A>proprietà.</xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> </xref:System.Net.NetworkInformation.IPStatus> Il <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>e <xref:System.Net.NetworkInformation.PingReply.Buffer%2A>proprietà restituirà zero e <xref:System.Net.NetworkInformation.PingReply.Options%2A>restituirà `null`.</xref:System.Net.NetworkInformation.PingReply.Options%2A> </xref:System.Net.NetworkInformation.PingReply.Buffer%2A> </xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>"
  example:
  - "The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/p-system.net.networkinfo_8_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/p-system.net.networkinfo_8_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.IPStatus Status { get; }
    return:
      type: System.Net.NetworkInformation.IPStatus
      description: "Un <xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;> </xref> valore che indica il risultato della richiesta."
  overload: System.Net.NetworkInformation.PingReply.Status*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.NetworkInformation.PingReply.Address
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Address
  nameWithType: PingReply.Address
  fullName: System.Net.NetworkInformation.PingReply.Address
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.NetworkInformation.PingReply.Buffer
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Buffer
  nameWithType: PingReply.Buffer
  fullName: System.Net.NetworkInformation.PingReply.Buffer
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.PingReply.Options
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Options
  nameWithType: PingReply.Options
  fullName: System.Net.NetworkInformation.PingReply.Options
- uid: System.Net.NetworkInformation.PingOptions
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingOptions
  nameWithType: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: RoundtripTime
  nameWithType: PingReply.RoundtripTime
  fullName: System.Net.NetworkInformation.PingReply.RoundtripTime
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.NetworkInformation.PingReply.Status
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Status
  nameWithType: PingReply.Status
  fullName: System.Net.NetworkInformation.PingReply.Status
- uid: System.Net.NetworkInformation.IPStatus
  parent: System.Net.NetworkInformation
  isExternal: false
  name: IPStatus
  nameWithType: IPStatus
  fullName: System.Net.NetworkInformation.IPStatus
- uid: System.Net.NetworkInformation.PingReply.Address*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Address
  nameWithType: PingReply.Address
- uid: System.Net.NetworkInformation.PingReply.Buffer*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Buffer
  nameWithType: PingReply.Buffer
- uid: System.Net.NetworkInformation.PingReply.Options*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Options
  nameWithType: PingReply.Options
- uid: System.Net.NetworkInformation.PingReply.RoundtripTime*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: RoundtripTime
  nameWithType: PingReply.RoundtripTime
- uid: System.Net.NetworkInformation.PingReply.Status*
  parent: System.Net.NetworkInformation.PingReply
  isExternal: false
  name: Status
  nameWithType: PingReply.Status
