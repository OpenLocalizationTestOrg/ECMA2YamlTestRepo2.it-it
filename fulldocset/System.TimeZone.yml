### YamlMime:ManagedReference
items:
- uid: System.TimeZone
  id: TimeZone
  children:
  - System.TimeZone.#ctor
  - System.TimeZone.CurrentTimeZone
  - System.TimeZone.DaylightName
  - System.TimeZone.GetDaylightChanges(System.Int32)
  - System.TimeZone.GetUtcOffset(System.DateTime)
  - System.TimeZone.IsDaylightSavingTime(System.DateTime)
  - System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  - System.TimeZone.StandardName
  - System.TimeZone.ToLocalTime(System.DateTime)
  - System.TimeZone.ToUniversalTime(System.DateTime)
  langs:
  - csharp
  name: TimeZone
  nameWithType: TimeZone
  fullName: System.TimeZone
  type: Class
  summary: "Rappresenta un fuso orario."
  remarks: "Un fuso orario è un&quot;area geografica in cui viene utilizzata la stessa ora solare.      > [!IMPORTANT] > Laddove possibile, utilizzare la <xref:System.TimeZoneInfo>classe anziché la classe di fuso orario.</xref:System.TimeZoneInfo>       È possibile utilizzare la classe di fuso orario per recuperare le informazioni sul fuso orario corrente e per la conversione di ore dall&quot;ora locale in ora Coordinated Universal Time (UTC) o viceversa. Tuttavia, è possibile usare la classe di fuso orario per rappresentare fusi orari diversi da quello locale o per gestire le conversioni data e ora da un fuso orario a un altro. A tale scopo, utilizzare la <xref:System.TimeZoneInfo>classe.</xref:System.TimeZoneInfo> È possibile utilizzare questa classe per recuperare informazioni su qualsiasi fuso orario definito nel sistema locale, per creare fusi orari personalizzati e la conversione da un fuso orario a un altro.       La classe di fuso orario supporta solo una regola di regolazione dell&quot;ora legale singolo per il fuso orario locale. Di conseguenza, la classe di fuso orario in modo accurato può segnalare informazioni sull&quot;ora legale o eseguire la conversione tra l&quot;ora UTC e l&quot;ora locale solo per il periodo in cui viene applicata la regola di rettifica più recente. Al contrario, la <xref:System.TimeZoneInfo>classe supporta più regole di regolazione, che rende possibile l&quot;utilizzo dei dati cronologici fuso orario.</xref:System.TimeZoneInfo>"
  example:
  - "The following example references and displays selected `TimeZone` class elements.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/t-system.timezone_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/t-system.timezone_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/t-system.timezone_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class TimeZone
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.TimeZone.#ctor
  id: '#ctor'
  parent: System.TimeZone
  langs:
  - csharp
  name: TimeZone()
  nameWithType: TimeZone.TimeZone()
  fullName: System.TimeZone.TimeZone()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.TimeZone&quot;> </xref> classe."
  syntax:
    content: protected TimeZone ();
    parameters: []
  overload: System.TimeZone.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.CurrentTimeZone
  id: CurrentTimeZone
  parent: System.TimeZone
  langs:
  - csharp
  name: CurrentTimeZone
  nameWithType: TimeZone.CurrentTimeZone
  fullName: System.TimeZone.CurrentTimeZone
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene il fuso orario del computer in uso."
  remarks: "La proprietà CurrentTimeZone corrisponde al <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>proprietà.</xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> Se possibile, utilizzare il <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>proprietà.</xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>"
  example:
  - "The following example references the `CurrentTimeZone` property and displays the names for standard time and daylight saving time for the local time zone.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/p-system.timezone.curren_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/p-system.timezone.curren_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/p-system.timezone.curren_1.cs)]"
  syntax:
    content: public static TimeZone CurrentTimeZone { get; }
    return:
      type: System.TimeZone
      description: "Oggetto <xref href=&quot;System.TimeZone&quot;> </xref> oggetto che rappresenta il fuso orario locale corrente."
  overload: System.TimeZone.CurrentTimeZone*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.DaylightName
  id: DaylightName
  parent: System.TimeZone
  langs:
  - csharp
  name: DaylightName
  nameWithType: TimeZone.DaylightName
  fullName: System.TimeZone.DaylightName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene il nome della zona dell&quot;ora legale."
  remarks: "Se l&quot;ora legale non viene utilizzato il fuso orario, una stringa vuota (&quot;&quot;) viene restituito.       La proprietà DaylightName corrisponde alla <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName>proprietà.</xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName> Se possibile, utilizzare il <xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName>proprietà.</xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName>"
  example:
  - "The following example references and displays the `DaylightName` property of the current time zone.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/p-system.timezone.daylig_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/p-system.timezone.daylig_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/p-system.timezone.daylig_1.cs)]"
  syntax:
    content: public abstract string DaylightName { get; }
    return:
      type: System.String
      description: "Il nome della zona dell&quot;ora legale."
  overload: System.TimeZone.DaylightName*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.GetDaylightChanges(System.Int32)
  id: GetDaylightChanges(System.Int32)
  parent: System.TimeZone
  langs:
  - csharp
  name: GetDaylightChanges(Int32)
  nameWithType: TimeZone.GetDaylightChanges(Int32)
  fullName: System.TimeZone.GetDaylightChanges(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Restituisce il periodo di ora legale per un anno specifico."
  remarks: "È supportato solo un periodo di ora legale all&quot;anno.       Se l&quot;ora legale non viene utilizzato il fuso orario corrente, il valore restituito è un <xref:System.Globalization.DaylightTime>oggetto, in cui il valore di <xref:System.Globalization.DaylightTime.Start%2A>e <xref:System.Globalization.DaylightTime.End%2A>è <xref:System.DateTime.MinValue?displayProperty=fullName>e il valore di <xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=fullName>è un <xref:System.TimeSpan>inizializzato a 0 segni di graduazione.</xref:System.TimeSpan> </xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=fullName> </xref:System.DateTime.MinValue?displayProperty=fullName> </xref:System.Globalization.DaylightTime.End%2A> </xref:System.Globalization.DaylightTime.Start%2A> </xref:System.Globalization.DaylightTime>"
  syntax:
    content: public abstract System.Globalization.DaylightTime GetDaylightChanges (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "L&quot;anno che riguardano il periodo di ora legale."
    return:
      type: System.Globalization.DaylightTime
      description: "Oggetto <xref href=&quot;System.Globalization.DaylightTime&quot;> </xref> oggetto che contiene la data di inizio e fine dell&quot;ora legale in <code> year </code>."
  overload: System.TimeZone.GetDaylightChanges*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>è minore di 1 o maggiore di 9999."
  platform:
  - net462
- uid: System.TimeZone.GetUtcOffset(System.DateTime)
  id: GetUtcOffset(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: GetUtcOffset(DateTime)
  nameWithType: TimeZone.GetUtcOffset(DateTime)
  fullName: System.TimeZone.GetUtcOffset(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Restituisce l&quot;offset Coordinated Universal Time (UTC) per l&quot;ora locale specificato."
  remarks: "Questo metodo restituisce l&quot;offset o differenza tra il `time` parametro e Coordinated Universal Time (UTC). Vale a dire: `time` = UTC + offset, il metodo interpreta il fuso orario del `time` in base alle relative <xref:System.DateTime.Kind%2A>proprietà.</xref:System.DateTime.Kind%2A> Se il valore di <xref:System.DateTime.Kind%2A>proprietà <xref:System.DateTimeKind?displayProperty=fullName>o <xref:System.DateTimeKind?displayProperty=fullName>, il metodo restituisce l&quot;offset del fuso orario locale.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A> Se il valore della <xref:System.DateTime.Kind%2A>proprietà è <xref:System.DateTimeKind?displayProperty=fullName>, il metodo restituisce un offset uguale a <xref:System.TimeSpan.Zero?displayProperty=fullName>.</xref:System.TimeSpan.Zero?displayProperty=fullName> </xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       Se il fuso orario locale utilizza l&quot;ora legale, GetUtcOffset si applica la regola di rettifica corrente per `time` per determinare l&quot;offset del fuso orario locale. L&quot;offset restituito da GetUtcOffset indica se `time` rientra nell&quot;ora solare del fuso orario o l&quot;ora legale.      > [!NOTE] > GetUtcOffset il metodo riconosce solo la regola di regolazione dell&quot;ora legale corrente per il fuso orario locale. Di conseguenza, è sicuramente accurata restituisce l&quot;offset UTC di un&quot;ora locale solo durante il periodo in cui viene applicata la regola di rettifica più recente. Può restituire risultati non accurati se `time` è una cronologiche valore data e ora che è soggetto a una regola di rettifica precedente.       Il metodo GetUtcOffset corrisponde al <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName>metodo.</xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName> Se possibile, utilizzare il <xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName>metodo.</xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName>       Poiché il valore di data e ora rappresentato da `time` e offset di tale valore rispetto all&quot;ora UTC non sono strettamente collegati, una data locale o non specificata e il valore di ora può restituire un valore di offset diverso quando eseguito in computer diversi o nello stesso computer con fusi orari diversi. Se questo comportamento è inaccettabile, utilizzare un <xref:System.DateTimeOffset>invece opportuno.</xref:System.DateTimeOffset> Il <xref:System.DateTimeOffset>tipo di dati strettamente collegato a un valore di data e ora con l&quot;offset dall&quot;ora UTC.</xref:System.DateTimeOffset>"
  syntax:
    content: public abstract TimeSpan GetUtcOffset (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Un valore di data e ora."
    return:
      type: System.TimeSpan
      description: "L&quot;offset Coordinated Universal Time (UTC) da <code> time </code>."
  overload: System.TimeZone.GetUtcOffset*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime)
  id: IsDaylightSavingTime(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: IsDaylightSavingTime(DateTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Restituisce un valore che indica se la data e ora specificate in un periodo di ora legale."
  remarks: "L&quot;anno a cui si applica il periodo di ora legale è derivato dal `time` parametro.       Poiché la <xref:System.TimeZone>classe supporta una regola di regolazione dell&quot;ora legale singolo, il metodo IsDaylightSavingTime si applica la regola di rettifica corrente a qualsiasi data, indipendentemente dal fatto che la regola di rettifica è stata applicata in tale data.</xref:System.TimeZone> Supponendo che il sistema operativo ha dati cronologici precisi sull&quot;ora legale, un risultato più accurato è disponibile tramite il <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>metodo.</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> Se possibile, utilizzare il <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>metodo.</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>"
  syntax:
    content: public virtual bool IsDaylightSavingTime (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Data e ora."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> time </code> in legale tempo periodo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.TimeZone.IsDaylightSavingTime*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  id: IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: IsDaylightSavingTime(DateTime,DaylightTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Restituisce un valore che indica se la data e ora specificate entro il periodo di ora legale specificato."
  remarks: "Il <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>metodo fornisce la stessa funzionalità di questo overload del metodo IsDaylightSavingTime.</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName> Se possibile, utilizzare il <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>metodo.</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>"
  syntax:
    content: public static bool IsDaylightSavingTime (DateTime time, System.Globalization.DaylightTime daylightTimes);
    parameters:
    - id: time
      type: System.DateTime
      description: "Data e ora."
    - id: daylightTimes
      type: System.Globalization.DaylightTime
      description: "Da aggiungere."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>time</code> is in <code>daylightTimes</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.TimeZone.IsDaylightSavingTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>daylightTimes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.TimeZone.StandardName
  id: StandardName
  parent: System.TimeZone
  langs:
  - csharp
  name: StandardName
  nameWithType: TimeZone.StandardName
  fullName: System.TimeZone.StandardName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene il nome della zona ora solare."
  remarks: "La proprietà StandardName corrisponde alla <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName>proprietà.</xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName> Se possibile, utilizzare il <xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName>proprietà.</xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName>"
  example:
  - "The following example references and displays the `StandardName` property of the current time zone.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/p-system.timezone.standa_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/p-system.timezone.standa_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/p-system.timezone.standa_1.cs)]"
  syntax:
    content: public abstract string StandardName { get; }
    return:
      type: System.String
      description: "Il nome della zona ora solare."
  overload: System.TimeZone.StandardName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Si è verificato un tentativo di impostare questa proprietà su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.TimeZone.ToLocalTime(System.DateTime)
  id: ToLocalTime(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: ToLocalTime(DateTime)
  nameWithType: TimeZone.ToLocalTime(DateTime)
  fullName: System.TimeZone.ToLocalTime(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Restituisce l&quot;ora locale che corrisponde a una data e un valore di ora."
  remarks: "Nella tabella seguente viene illustrata la relazione tra il `time` parametro e <xref:System.DateTime>valore restituito da questo metodo.</xref:System.DateTime>      | `time` parametro | Comportamento | Valore restituito |   |----------------------|--------------|------------------|   | Un&quot;ora (UTC) Coordinated Universal Time (<xref:System.DateTimeKind?displayProperty=fullName>). | Converte l&quot;ora dall&quot;ora UTC in ora locale. | Il cui valore è l&quot;ora locale che corrisponde a un oggetto di <xref:System.DateTime> `time`. |   | Un&quot;ora locale (<xref:System.DateTimeKind?displayProperty=fullName>). | Nessuna conversione necessaria. | Lo stesso valore <xref:System.DateTime>rappresentato dal `time` parametro. |   | Un&quot;ora non specificata (<xref:System.DateTimeKind?displayProperty=fullName>). | Presuppone che l&quot;ora UTC e converte l&quot;ora locale rispetto a UTC. | Il cui valore è l&quot;ora locale che corrisponde a un oggetto di <xref:System.DateTime> `time`. |       Se il fuso orario locale utilizza l&quot;ora legale, ToLocalTime si applica la regola di rettifica corrente per `time` quando si esegue la conversione.</xref:System.DateTime> </xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTimeKind?displayProperty=fullName>      > [!NOTE] > ToLocalTime il metodo riconosce solo la regola di regolazione dell&quot;ora legale corrente per il fuso orario locale. Di conseguenza, è sicuramente accurata restituiscono l&quot;ora locale corrispondente a una determinata ora UTC per il periodo in cui viene applicata la regola di rettifica più recente. Può restituire risultati non accurati se `time` è una cronologiche valore data e ora che è soggetto a una regola di rettifica precedente.       Il metodo ToLocalTime corrisponde al <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName>metodo con il relativo `destinationTimeZone` parametro impostato su <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>.</xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> </xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName> Se possibile, utilizzare il <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName>metodo.</xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName>"
  syntax:
    content: public virtual DateTime ToLocalTime (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Ora Coordinated Universal Time (UTC)."
    return:
      type: System.DateTime
      description: "Oggetto <xref:System.DateTime>oggetto il cui valore è l&quot;ora locale che corrisponde a <code> time </code>.</xref:System.DateTime>"
  overload: System.TimeZone.ToLocalTime*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.ToUniversalTime(System.DateTime)
  id: ToUniversalTime(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: ToUniversalTime(DateTime)
  nameWithType: TimeZone.ToUniversalTime(DateTime)
  fullName: System.TimeZone.ToUniversalTime(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Restituisce il tempo universale coordinato (UTC) che corrisponde a un&quot;ora specificata."
  remarks: "Se il fuso orario locale utilizza l&quot;ora legale, ToUniversalTime si applica la regola di rettifica corrente per il `time` parametro quando si esegue la conversione.      > [!NOTE] > ToUniversalTime il metodo riconosce solo la regola di regolazione dell&quot;ora legale corrente per il fuso orario locale. Di conseguenza, è sicuramente restituire in modo accurato il tempo universale coordinato (UTC) corrispondente a una particolare ora locale per il periodo in cui viene applicata la regola di rettifica più recente. Può restituire risultati non accurati se `time` è una cronologiche valore data e ora che è soggetto a una regola di rettifica precedente.       Se il `time` parametro non è un&quot;ora ambigua, il metodo presuppone che sia un&quot;ora solare. (Un&quot;ora ambigua è che è possibile eseguire il mapping a un&quot;ora solare o a un&quot;ora legale del fuso orario locale). Se `time` è un&quot;ora non valida, il metodo sottrae semplicemente l&quot;ora locale rispetto all&quot;ora UTC del fuso orario locale offset per restituire l&quot;ora UTC. (Un&quot;ora non valida è che non esiste a causa dell&quot;applicazione delle regole di regolazione dell&quot;ora legale).       Poiché `time` viene interpretato in relazione al fuso orario corrente del sistema corrente, la data e l&quot;ora restituita da questo metodo può essere diverso se un&quot;applicazione viene eseguita su computer diversi o nello stesso computer con fusi orari diversi. Per i casi in cui un valore di data e ora deve rappresentare un singolo e non ambigua nel tempo, utilizzare un <xref:System.DateTimeOffset>valore per rappresentare l&quot;ora locale.</xref:System.DateTimeOffset>       Il metodo ToUniversalTime corrisponde alla <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName>overload del metodo con un <xref:System.DateTime>parametro la cui <xref:System.DateTime.Kind%2A>proprietà non è uguale a <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime.Kind%2A> </xref:System.DateTime> </xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName> Se possibile, utilizzare il <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName>overload del metodo.</xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName>"
  syntax:
    content: public virtual DateTime ToUniversalTime (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Data e ora."
    return:
      type: System.DateTime
      description: "Oggetto <xref:System.DateTime>oggetto il cui valore è il tempo universale coordinato (UTC) che corrisponde a <code> time </code>.</xref:System.DateTime>"
  overload: System.TimeZone.ToUniversalTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.TimeZone.#ctor
  parent: System.TimeZone
  isExternal: false
  name: TimeZone()
  nameWithType: TimeZone.TimeZone()
  fullName: System.TimeZone.TimeZone()
- uid: System.TimeZone.CurrentTimeZone
  parent: System.TimeZone
  isExternal: false
  name: CurrentTimeZone
  nameWithType: TimeZone.CurrentTimeZone
  fullName: System.TimeZone.CurrentTimeZone
- uid: System.TimeZone
  parent: System
  isExternal: false
  name: TimeZone
  nameWithType: TimeZone
  fullName: System.TimeZone
- uid: System.TimeZone.DaylightName
  parent: System.TimeZone
  isExternal: false
  name: DaylightName
  nameWithType: TimeZone.DaylightName
  fullName: System.TimeZone.DaylightName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.TimeZone.GetDaylightChanges(System.Int32)
  parent: System.TimeZone
  isExternal: false
  name: GetDaylightChanges(Int32)
  nameWithType: TimeZone.GetDaylightChanges(Int32)
  fullName: System.TimeZone.GetDaylightChanges(Int32)
- uid: System.Globalization.DaylightTime
  parent: System.Globalization
  isExternal: false
  name: DaylightTime
  nameWithType: DaylightTime
  fullName: System.Globalization.DaylightTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeZone.GetUtcOffset(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: GetUtcOffset(DateTime)
  nameWithType: TimeZone.GetUtcOffset(DateTime)
  fullName: System.TimeZone.GetUtcOffset(DateTime)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: IsDaylightSavingTime(DateTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  parent: System.TimeZone
  isExternal: false
  name: IsDaylightSavingTime(DateTime,DaylightTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
- uid: System.TimeZone.StandardName
  parent: System.TimeZone
  isExternal: false
  name: StandardName
  nameWithType: TimeZone.StandardName
  fullName: System.TimeZone.StandardName
- uid: System.TimeZone.ToLocalTime(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: ToLocalTime(DateTime)
  nameWithType: TimeZone.ToLocalTime(DateTime)
  fullName: System.TimeZone.ToLocalTime(DateTime)
- uid: System.TimeZone.ToUniversalTime(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: ToUniversalTime(DateTime)
  nameWithType: TimeZone.ToUniversalTime(DateTime)
  fullName: System.TimeZone.ToUniversalTime(DateTime)
- uid: System.TimeZone.#ctor*
  parent: System.TimeZone
  isExternal: false
  name: TimeZone
  nameWithType: TimeZone.TimeZone
- uid: System.TimeZone.CurrentTimeZone*
  parent: System.TimeZone
  isExternal: false
  name: CurrentTimeZone
  nameWithType: TimeZone.CurrentTimeZone
- uid: System.TimeZone.DaylightName*
  parent: System.TimeZone
  isExternal: false
  name: DaylightName
  nameWithType: TimeZone.DaylightName
- uid: System.TimeZone.GetDaylightChanges*
  parent: System.TimeZone
  isExternal: false
  name: GetDaylightChanges
  nameWithType: TimeZone.GetDaylightChanges
- uid: System.TimeZone.GetUtcOffset*
  parent: System.TimeZone
  isExternal: false
  name: GetUtcOffset
  nameWithType: TimeZone.GetUtcOffset
- uid: System.TimeZone.IsDaylightSavingTime*
  parent: System.TimeZone
  isExternal: false
  name: IsDaylightSavingTime
  nameWithType: TimeZone.IsDaylightSavingTime
- uid: System.TimeZone.StandardName*
  parent: System.TimeZone
  isExternal: false
  name: StandardName
  nameWithType: TimeZone.StandardName
- uid: System.TimeZone.ToLocalTime*
  parent: System.TimeZone
  isExternal: false
  name: ToLocalTime
  nameWithType: TimeZone.ToLocalTime
- uid: System.TimeZone.ToUniversalTime*
  parent: System.TimeZone
  isExternal: false
  name: ToUniversalTime
  nameWithType: TimeZone.ToUniversalTime
