### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlNodeChangedEventArgs
  id: XmlNodeChangedEventArgs
  children:
  - System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)
  - System.Xml.XmlNodeChangedEventArgs.Action
  - System.Xml.XmlNodeChangedEventArgs.NewParent
  - System.Xml.XmlNodeChangedEventArgs.NewValue
  - System.Xml.XmlNodeChangedEventArgs.Node
  - System.Xml.XmlNodeChangedEventArgs.OldParent
  - System.Xml.XmlNodeChangedEventArgs.OldValue
  langs:
  - csharp
  name: XmlNodeChangedEventArgs
  nameWithType: XmlNodeChangedEventArgs
  fullName: System.Xml.XmlNodeChangedEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Xml.XmlDocument.NodeChanged&quot;></xref>, <xref href=&quot;System.Xml.XmlDocument.NodeChanging&quot;></xref>, <xref href=&quot;System.Xml.XmlDocument.NodeInserted&quot;></xref>, <xref href=&quot;System.Xml.XmlDocument.NodeInserting&quot;></xref>, <xref href=&quot;System.Xml.XmlDocument.NodeRemoved&quot;></xref> and <xref href=&quot;System.Xml.XmlDocument.NodeRemoving&quot;></xref> events."
  remarks: "Il codice c# seguente viene illustrato come utilizzare il gestore dell&quot;evento.      ```   //Add a new event handler.   XmlDocument doc = new XmlDocument();   doc.NodeInserted += new XmlNodeChangedEventHandler(NodeInsertedHandler);   //Define the event handler.   void NodeInsertedHandler(Object src, XmlNodeChangedEventArgs args)   {    Console.WriteLine(&quot;Node &quot; + args.Node.Name + &quot; inserted!!&quot;);   }   ```      > [!NOTE]> Se un&quot;operazione è costituita da più azioni, le più eventi. Ad esempio, un <xref:System.Xml.XmlNode.AppendChild%2A>chiamata potrebbe essere necessario rimuovere il nodo aggiunto dal padre precedente.</xref:System.Xml.XmlNode.AppendChild%2A> In questo caso verrà visualizzato un `NodeRemoved` evento seguito da un `NodeInserted` evento."
  syntax:
    content: 'public class XmlNodeChangedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)
  id: '#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)'
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  nameWithType: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  fullName: System.Xml.XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Xml.XmlNodeChangedEventArgs&quot;> </xref> classe."
  syntax:
    content: public XmlNodeChangedEventArgs (System.Xml.XmlNode node, System.Xml.XmlNode oldParent, System.Xml.XmlNode newParent, string oldValue, string newValue, System.Xml.XmlNodeChangedAction action);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "Il <xref href=&quot;System.Xml.XmlNode&quot;> </xref> che ha generato l&quot;evento."
    - id: oldParent
      type: System.Xml.XmlNode
      description: "L&quot;elemento padre precedente <xref href=&quot;System.Xml.XmlNode&quot;> </xref> del <xref href=&quot;System.Xml.XmlNode&quot;> </xref> che ha generato l&quot;evento."
    - id: newParent
      type: System.Xml.XmlNode
      description: "Il nuovo elemento padre <xref href=&quot;System.Xml.XmlNode&quot;> </xref> del <xref href=&quot;System.Xml.XmlNode&quot;> </xref> che ha generato l&quot;evento."
    - id: oldValue
      type: System.String
      description: "Il valore precedente del <xref href=&quot;System.Xml.XmlNode&quot;> </xref> che ha generato l&quot;evento."
    - id: newValue
      type: System.String
      description: "Il nuovo valore della <xref href=&quot;System.Xml.XmlNode&quot;> </xref> che ha generato l&quot;evento."
    - id: action
      type: System.Xml.XmlNodeChangedAction
      description: "The <xref href=&quot;System.Xml.XmlNodeChangedAction&quot;></xref>."
  overload: System.Xml.XmlNodeChangedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.Action
  id: Action
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: Action
  nameWithType: XmlNodeChangedEventArgs.Action
  fullName: System.Xml.XmlNodeChangedEventArgs.Action
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene un valore che indica il tipo di nodo dell&quot;evento di modifica in corso."
  syntax:
    content: public System.Xml.XmlNodeChangedAction Action { get; }
    return:
      type: System.Xml.XmlNodeChangedAction
      description: "Un <xref uid=&quot;langword_csharp_XmlNodeChangedAction&quot; name=&quot;XmlNodeChangedAction&quot; href=&quot;&quot;> </xref> evento di modifica della descrizione del nodo di valore.       <table><thead><tr><th> Valore XmlNodeChangedAction       </th><th> Descrizione       </th></tr></thead><tbody><tr><td> Inserisci       </td><td> È stato o verrà inserito un nodo.       </td></tr><tr><td> Remove       </td><td> Un nodo è stato o verrà rimosso.       </td></tr><tr><td> Modifica       </td><td> Un nodo è stato o verrà modificato.       </td></tr></tbody></table><div class=&quot;alert NOTE&quot;>    Il <xref uid=&quot;langword_csharp_Action&quot; name=&quot;Action&quot; href=&quot;&quot;> </xref> valore non viene fatta distinzione tra cui l&quot;evento si è verificato (prima o dopo). È possibile creare gestori eventi separato per gestire entrambe le istanze.      </div>"
  overload: System.Xml.XmlNodeChangedEventArgs.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.NewParent
  id: NewParent
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: NewParent
  nameWithType: XmlNodeChangedEventArgs.NewParent
  fullName: System.Xml.XmlNodeChangedEventArgs.NewParent
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene il valore di <xref:System.Xml.XmlNode.ParentNode*>dopo il completamento dell&quot;operazione.</xref:System.Xml.XmlNode.ParentNode*>"
  syntax:
    content: public System.Xml.XmlNode NewParent { get; }
    return:
      type: System.Xml.XmlNode
      description: "Il valore di <xref uid=&quot;langword_csharp_ParentNode&quot; name=&quot;ParentNode&quot; href=&quot;&quot;> </xref> dopo il completamento dell&quot;operazione. Questa proprietà restituisce <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il nodo viene rimosso.       <div class=&quot;alert NOTE&quot;>    Per i nodi attributo questa proprietà restituisce <xref:System.Xml.XmlAttribute.OwnerElement*>.</xref:System.Xml.XmlAttribute.OwnerElement*>      </div>"
  overload: System.Xml.XmlNodeChangedEventArgs.NewParent*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.NewValue
  id: NewValue
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: NewValue
  nameWithType: XmlNodeChangedEventArgs.NewValue
  fullName: System.Xml.XmlNodeChangedEventArgs.NewValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene il nuovo valore del nodo."
  syntax:
    content: public string NewValue { get; }
    return:
      type: System.String
      description: "Il nuovo valore del nodo. Questa proprietà restituisce <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il nodo è un attributo né un nodo di testo oppure se il nodo viene rimosso.       Se viene chiamato in un <xref href=&quot;System.Xml.XmlDocument.NodeChanging&quot;> </xref> evento <xref uid=&quot;langword_csharp_NewValue&quot; name=&quot;NewValue&quot; href=&quot;&quot;> </xref> restituisce il valore del nodo se la modifica ha esito positivo. Se viene chiamato in un <xref href=&quot;System.Xml.XmlDocument.NodeChanged&quot;> </xref> evento <xref uid=&quot;langword_csharp_NewValue&quot; name=&quot;NewValue&quot; href=&quot;&quot;> </xref> restituisce il valore del nodo corrente."
  overload: System.Xml.XmlNodeChangedEventArgs.NewValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.Node
  id: Node
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: Node
  nameWithType: XmlNodeChangedEventArgs.Node
  fullName: System.Xml.XmlNodeChangedEventArgs.Node
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene il <xref href=&quot;System.Xml.XmlNode&quot;> </xref> che viene aggiunto, rimosso o modificato."
  syntax:
    content: public System.Xml.XmlNode Node { get; }
    return:
      type: System.Xml.XmlNode
      description: "Il <xref uid=&quot;langword_csharp_XmlNode&quot; name=&quot;XmlNode&quot; href=&quot;&quot;> </xref> che viene aggiunto, rimosso o modificato; questa proprietà non restituisce mai <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlNodeChangedEventArgs.Node*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.OldParent
  id: OldParent
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: OldParent
  nameWithType: XmlNodeChangedEventArgs.OldParent
  fullName: System.Xml.XmlNodeChangedEventArgs.OldParent
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene il valore della <xref:System.Xml.XmlNode.ParentNode*>prima dell&quot;inizio dell&quot;operazione.</xref:System.Xml.XmlNode.ParentNode*>"
  syntax:
    content: public System.Xml.XmlNode OldParent { get; }
    return:
      type: System.Xml.XmlNode
      description: "Il valore di <xref uid=&quot;langword_csharp_ParentNode&quot; name=&quot;ParentNode&quot; href=&quot;&quot;> </xref> prima dell&quot;inizio dell&quot;operazione. Questa proprietà restituisce <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il nodo non dispone di un elemento padre.       <div class=&quot;alert NOTE&quot;>    Per i nodi attributo questa proprietà restituisce <xref:System.Xml.XmlAttribute.OwnerElement*>.</xref:System.Xml.XmlAttribute.OwnerElement*>      </div>"
  overload: System.Xml.XmlNodeChangedEventArgs.OldParent*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlNodeChangedEventArgs.OldValue
  id: OldValue
  parent: System.Xml.XmlNodeChangedEventArgs
  langs:
  - csharp
  name: OldValue
  nameWithType: XmlNodeChangedEventArgs.OldValue
  fullName: System.Xml.XmlNodeChangedEventArgs.OldValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene il valore originale del nodo."
  syntax:
    content: public string OldValue { get; }
    return:
      type: System.String
      description: "Il valore originale del nodo. Questa proprietà restituisce <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il nodo è un attributo né un nodo di testo oppure se è stato inserito il nodo.       Se viene chiamato in un <xref href=&quot;System.Xml.XmlDocument.NodeChanging&quot;> </xref> evento <xref uid=&quot;langword_csharp_OldValue&quot; name=&quot;OldValue&quot; href=&quot;&quot;> </xref> restituisce il valore corrente del nodo che verrà sostituito se la modifica ha esito positivo. Se viene chiamato in un <xref href=&quot;System.Xml.XmlDocument.NodeChanged&quot;> </xref> evento <xref uid=&quot;langword_csharp_OldValue&quot; name=&quot;OldValue&quot; href=&quot;&quot;> </xref> restituisce il valore del nodo prima delle modifiche."
  overload: System.Xml.XmlNodeChangedEventArgs.OldValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Xml.XmlNodeChangedEventArgs.#ctor(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  nameWithType: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
  fullName: System.Xml.XmlNodeChangedEventArgs.XmlNodeChangedEventArgs(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlNodeChangedAction
  parent: System.Xml
  isExternal: false
  name: XmlNodeChangedAction
  nameWithType: XmlNodeChangedAction
  fullName: System.Xml.XmlNodeChangedAction
- uid: System.Xml.XmlNodeChangedEventArgs.Action
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: Action
  nameWithType: XmlNodeChangedEventArgs.Action
  fullName: System.Xml.XmlNodeChangedEventArgs.Action
- uid: System.Xml.XmlNodeChangedEventArgs.NewParent
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: NewParent
  nameWithType: XmlNodeChangedEventArgs.NewParent
  fullName: System.Xml.XmlNodeChangedEventArgs.NewParent
- uid: System.Xml.XmlNodeChangedEventArgs.NewValue
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: NewValue
  nameWithType: XmlNodeChangedEventArgs.NewValue
  fullName: System.Xml.XmlNodeChangedEventArgs.NewValue
- uid: System.Xml.XmlNodeChangedEventArgs.Node
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: Node
  nameWithType: XmlNodeChangedEventArgs.Node
  fullName: System.Xml.XmlNodeChangedEventArgs.Node
- uid: System.Xml.XmlNodeChangedEventArgs.OldParent
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: OldParent
  nameWithType: XmlNodeChangedEventArgs.OldParent
  fullName: System.Xml.XmlNodeChangedEventArgs.OldParent
- uid: System.Xml.XmlNodeChangedEventArgs.OldValue
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: OldValue
  nameWithType: XmlNodeChangedEventArgs.OldValue
  fullName: System.Xml.XmlNodeChangedEventArgs.OldValue
- uid: System.Xml.XmlNodeChangedEventArgs.#ctor*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: XmlNodeChangedEventArgs
  nameWithType: XmlNodeChangedEventArgs.XmlNodeChangedEventArgs
- uid: System.Xml.XmlNodeChangedEventArgs.Action*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: Action
  nameWithType: XmlNodeChangedEventArgs.Action
- uid: System.Xml.XmlNodeChangedEventArgs.NewParent*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: NewParent
  nameWithType: XmlNodeChangedEventArgs.NewParent
- uid: System.Xml.XmlNodeChangedEventArgs.NewValue*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: NewValue
  nameWithType: XmlNodeChangedEventArgs.NewValue
- uid: System.Xml.XmlNodeChangedEventArgs.Node*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: Node
  nameWithType: XmlNodeChangedEventArgs.Node
- uid: System.Xml.XmlNodeChangedEventArgs.OldParent*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: OldParent
  nameWithType: XmlNodeChangedEventArgs.OldParent
- uid: System.Xml.XmlNodeChangedEventArgs.OldValue*
  parent: System.Xml.XmlNodeChangedEventArgs
  isExternal: false
  name: OldValue
  nameWithType: XmlNodeChangedEventArgs.OldValue
