### YamlMime:ManagedReference
items:
- uid: System.Configuration.Provider.ProviderCollection
  id: ProviderCollection
  children:
  - System.Configuration.Provider.ProviderCollection.#ctor
  - System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)
  - System.Configuration.Provider.ProviderCollection.Clear
  - System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)
  - System.Configuration.Provider.ProviderCollection.Count
  - System.Configuration.Provider.ProviderCollection.GetEnumerator
  - System.Configuration.Provider.ProviderCollection.IsSynchronized
  - System.Configuration.Provider.ProviderCollection.Item(System.String)
  - System.Configuration.Provider.ProviderCollection.Remove(System.String)
  - System.Configuration.Provider.ProviderCollection.SetReadOnly
  - System.Configuration.Provider.ProviderCollection.SyncRoot
  - System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  langs:
  - csharp
  name: ProviderCollection
  nameWithType: ProviderCollection
  fullName: System.Configuration.Provider.ProviderCollection
  type: Class
  summary: "Rappresenta una raccolta di oggetti provider che ereditano da <xref href=&quot;System.Configuration.Provider.ProviderBase&quot;> </xref>."
  remarks: "La classe ProviderCollection utilizza un oggetto sottostante <xref:System.Collections.Hashtable>oggetto usato per archiviare le coppie nome/valore di provider.</xref:System.Collections.Hashtable>"
  syntax:
    content: 'public class ProviderCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.#ctor
  id: '#ctor'
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: ProviderCollection()
  nameWithType: ProviderCollection.ProviderCollection()
  fullName: System.Configuration.Provider.ProviderCollection.ProviderCollection()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Configuration.Provider.ProviderCollection&quot;> </xref> classe."
  remarks: "Il costruttore ProviderCollection Inizializza sottostante <xref:System.Collections.Hashtable>oggetto utilizzato per archiviare gli elementi della raccolta.</xref:System.Collections.Hashtable>"
  syntax:
    content: public ProviderCollection ();
    parameters: []
  overload: System.Configuration.Provider.ProviderCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)
  id: Add(System.Configuration.Provider.ProviderBase)
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: Add(ProviderBase)
  nameWithType: ProviderCollection.Add(ProviderBase)
  fullName: System.Configuration.Provider.ProviderCollection.Add(ProviderBase)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Aggiunge un provider alla raccolta."
  remarks: "Il metodo Add esegue la ricerca di tutte le eccezioni (come indicato nella sezione eccezioni) e quindi chiama il <xref:System.Collections.Hashtable.Add%2A?displayProperty=fullName>metodo.</xref:System.Collections.Hashtable.Add%2A?displayProperty=fullName> Passa l&quot;oggetto a cui fa riferimento il `provider` parametro, nonché <xref:System.Configuration.Provider.ProviderBase.Name%2A>proprietà del provider da utilizzare come chiave nel <xref:System.Collections.Hashtable>oggetto.</xref:System.Collections.Hashtable> </xref:System.Configuration.Provider.ProviderBase.Name%2A>"
  syntax:
    content: public virtual void Add (System.Configuration.Provider.ProviderBase provider);
    parameters:
    - id: provider
      type: System.Configuration.Provider.ProviderBase
      description: "Il provider da aggiungere."
  overload: System.Configuration.Provider.ProviderCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La raccolta è di sola lettura."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>provider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Configuration.Provider.ProviderBase.Name*> of <code>provider</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The length of the <xref:System.Configuration.Provider.ProviderBase.Name*> of <code>provider</code> is less than 1."
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.Clear
  id: Clear
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ProviderCollection.Clear()
  fullName: System.Configuration.Provider.ProviderCollection.Clear()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Rimuove tutti gli elementi dall&quot;insieme."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Configuration.Provider.ProviderCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La raccolta è impostata su sola lettura."
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)
  id: CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: CopyTo(ProviderBase[],Int32)
  nameWithType: ProviderCollection.CopyTo(ProviderBase[],Int32)
  fullName: System.Configuration.Provider.ProviderCollection.CopyTo(ProviderBase[],Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Copia il contenuto della raccolta nella matrice indicata a partire dall&quot;indice specificato."
  remarks: "La matrice in cui vengono copiati gli elementi deve avere un&quot;indicizzazione in base zero."
  syntax:
    content: public void CopyTo (System.Configuration.Provider.ProviderBase[] array, int index);
    parameters:
    - id: array
      type: System.Configuration.Provider.ProviderBase[]
      description: "Matrice in cui copiare gli elementi della raccolta."
    - id: index
      type: System.Int32
      description: "Indice dell&quot;elemento della raccolta in corrispondenza del quale avviare il processo di copia."
  overload: System.Configuration.Provider.ProviderCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.Count
  id: Count
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: Count
  nameWithType: ProviderCollection.Count
  fullName: System.Configuration.Provider.ProviderCollection.Count
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Ottiene il numero di provider nella raccolta."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Il numero di provider nella raccolta."
  overload: System.Configuration.Provider.ProviderCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ProviderCollection.GetEnumerator()
  fullName: System.Configuration.Provider.ProviderCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Restituisce un oggetto che implementa il <xref:System.Collections.IEnumerator>interfaccia per scorrere la raccolta.</xref:System.Collections.IEnumerator>"
  remarks: "La <xref:System.Configuration.Provider.ProviderCollection>classe archivia la raccolta in un <xref:System.Collections.Hashtable>oggetto.</xref:System.Collections.Hashtable> </xref:System.Configuration.Provider.ProviderCollection> Le chiamate del metodo GetEnumerator il <xref:System.Collections.Hashtable.GetEnumerator%2A?displayProperty=fullName>metodo.</xref:System.Collections.Hashtable.GetEnumerator%2A?displayProperty=fullName>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Oggetto che implementa <xref:System.Collections.IEnumerator>per scorrere la raccolta.</xref:System.Collections.IEnumerator>"
  overload: System.Configuration.Provider.ProviderCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ProviderCollection.IsSynchronized
  fullName: System.Configuration.Provider.ProviderCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Ottiene un valore che indica se l&quot;accesso alla raccolta è sincronizzato (thread-safe)."
  remarks: "Questa proprietà è inclusa per soddisfare il <xref:System.Collections.ICollection>interfaccia.</xref:System.Collections.ICollection>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>in tutti i casi."
  overload: System.Configuration.Provider.ProviderCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ProviderCollection.Item(String)
  fullName: System.Configuration.Provider.ProviderCollection.Item(String)
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Ottiene il provider con il nome specificato."
  syntax:
    content: public System.Configuration.Provider.ProviderBase this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "La chiave con cui viene identificato il provider."
    return:
      type: System.Configuration.Provider.ProviderBase
      description: "Il provider con il nome specificato."
  overload: System.Configuration.Provider.ProviderCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: ProviderCollection.Remove(String)
  fullName: System.Configuration.Provider.ProviderCollection.Remove(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Rimuove un provider dalla raccolta."
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del provider da rimuovere."
  overload: System.Configuration.Provider.ProviderCollection.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La raccolta è stata impostata su sola lettura."
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.SetReadOnly
  id: SetReadOnly
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: ProviderCollection.SetReadOnly()
  fullName: System.Configuration.Provider.ProviderCollection.SetReadOnly()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Imposta la raccolta di sola lettura."
  remarks: "La <xref:System.Configuration.Provider.ProviderCollection>classe è di lettura/scrittura per impostazione predefinita.</xref:System.Configuration.Provider.ProviderCollection> Il metodo SetReadOnly imposta la raccolta di sola lettura. Dopo una raccolta è impostata su sola lettura, alcune chiamate al metodo (ad esempio <xref:System.Configuration.Provider.ProviderCollection.Remove%2A>e <xref:System.Configuration.Provider.ProviderCollection.Add%2A>genererà un&quot;eccezione.</xref:System.Configuration.Provider.ProviderCollection.Add%2A> </xref:System.Configuration.Provider.ProviderCollection.Remove%2A>       Si noti che verranno impostati più funzionalità basate su provider loro <xref:System.Configuration.Provider.ProviderCollection>oggetto in sola lettura dopo la creazione di istanze di tutti i provider configurati.</xref:System.Configuration.Provider.ProviderCollection>"
  syntax:
    content: public void SetReadOnly ();
    parameters: []
  overload: System.Configuration.Provider.ProviderCollection.SetReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.SyncRoot
  id: SyncRoot
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ProviderCollection.SyncRoot
  fullName: System.Configuration.Provider.ProviderCollection.SyncRoot
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Ottiene l&quot;oggetto corrente."
  remarks: "Questa proprietà è inclusa per soddisfare il <xref:System.Collections.ICollection>interfaccia.</xref:System.Collections.ICollection>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "L&quot;oggetto corrente."
  overload: System.Configuration.Provider.ProviderCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ProviderCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.Provider.ProviderCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Copia gli elementi del <xref href=&quot;System.Configuration.Provider.ProviderCollection&quot;> </xref> in una matrice, iniziando in corrispondenza dell&quot;indice matrice specifico."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando l&quot;istanza di CopyTo viene eseguito il cast a un <xref:System.Collections.ICollection>interfaccia.</xref:System.Collections.ICollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Matrice in cui copiare gli elementi della raccolta."
    - id: index
      type: System.Int32
      description: "Indice della matrice in corrispondenza del quale iniziare la copia di istanze del provider dalla raccolta."
  overload: System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Provider.ProviderCollection.#ctor
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: ProviderCollection()
  nameWithType: ProviderCollection.ProviderCollection()
  fullName: System.Configuration.Provider.ProviderCollection.ProviderCollection()
- uid: System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Add(ProviderBase)
  nameWithType: ProviderCollection.Add(ProviderBase)
  fullName: System.Configuration.Provider.ProviderCollection.Add(ProviderBase)
- uid: System.Configuration.Provider.ProviderBase
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderBase
  nameWithType: ProviderBase
  fullName: System.Configuration.Provider.ProviderBase
- uid: System.Configuration.Provider.ProviderCollection.Clear
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Clear()
  nameWithType: ProviderCollection.Clear()
  fullName: System.Configuration.Provider.ProviderCollection.Clear()
- uid: System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: CopyTo(ProviderBase[],Int32)
  nameWithType: ProviderCollection.CopyTo(ProviderBase[],Int32)
  fullName: System.Configuration.Provider.ProviderCollection.CopyTo(ProviderBase[],Int32)
- uid: System.Configuration.Provider.ProviderBase[]
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderBase
  nameWithType: ProviderBase
  fullName: System.Configuration.Provider.ProviderBase[]
  spec.csharp:
  - uid: System.Configuration.Provider.ProviderBase
    name: ProviderBase
    nameWithType: ProviderBase
    fullName: ProviderBase[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.Provider.ProviderCollection.Count
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Count
  nameWithType: ProviderCollection.Count
  fullName: System.Configuration.Provider.ProviderCollection.Count
- uid: System.Configuration.Provider.ProviderCollection.GetEnumerator
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ProviderCollection.GetEnumerator()
  fullName: System.Configuration.Provider.ProviderCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Configuration.Provider.ProviderCollection.IsSynchronized
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ProviderCollection.IsSynchronized
  fullName: System.Configuration.Provider.ProviderCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.Provider.ProviderCollection.Item(System.String)
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Item(String)
  nameWithType: ProviderCollection.Item(String)
  fullName: System.Configuration.Provider.ProviderCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.Provider.ProviderCollection.Remove(System.String)
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Remove(String)
  nameWithType: ProviderCollection.Remove(String)
  fullName: System.Configuration.Provider.ProviderCollection.Remove(String)
- uid: System.Configuration.Provider.ProviderCollection.SetReadOnly
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: SetReadOnly()
  nameWithType: ProviderCollection.SetReadOnly()
  fullName: System.Configuration.Provider.ProviderCollection.SetReadOnly()
- uid: System.Configuration.Provider.ProviderCollection.SyncRoot
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ProviderCollection.SyncRoot
  fullName: System.Configuration.Provider.ProviderCollection.SyncRoot
- uid: System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ProviderCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.Provider.ProviderCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Configuration.Provider.ProviderCollection.#ctor*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: ProviderCollection
  nameWithType: ProviderCollection.ProviderCollection
- uid: System.Configuration.Provider.ProviderCollection.Add*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Add
  nameWithType: ProviderCollection.Add
- uid: System.Configuration.Provider.ProviderCollection.Clear*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Clear
  nameWithType: ProviderCollection.Clear
- uid: System.Configuration.Provider.ProviderCollection.CopyTo*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: CopyTo
  nameWithType: ProviderCollection.CopyTo
- uid: System.Configuration.Provider.ProviderCollection.Count*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Count
  nameWithType: ProviderCollection.Count
- uid: System.Configuration.Provider.ProviderCollection.GetEnumerator*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ProviderCollection.GetEnumerator
- uid: System.Configuration.Provider.ProviderCollection.IsSynchronized*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ProviderCollection.IsSynchronized
- uid: System.Configuration.Provider.ProviderCollection.Item*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Item
  nameWithType: ProviderCollection.Item
- uid: System.Configuration.Provider.ProviderCollection.Remove*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Remove
  nameWithType: ProviderCollection.Remove
- uid: System.Configuration.Provider.ProviderCollection.SetReadOnly*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: SetReadOnly
  nameWithType: ProviderCollection.SetReadOnly
- uid: System.Configuration.Provider.ProviderCollection.SyncRoot*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ProviderCollection.SyncRoot
- uid: System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ProviderCollection.System.Collections.ICollection.CopyTo
