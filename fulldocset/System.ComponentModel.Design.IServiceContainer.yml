### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.IServiceContainer
  id: IServiceContainer
  children:
  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)
  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  - System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)
  - System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)
  langs:
  - csharp
  name: IServiceContainer
  nameWithType: IServiceContainer
  fullName: System.ComponentModel.Design.IServiceContainer
  type: Interface
  summary: "Fornisce un contenitore di servizi."
  remarks: "Un contenitore del servizio è, per definizione, un provider di servizi. Oltre a fornire servizi, nonché un meccanismo per l&quot;aggiunta e rimozione di servizi. I servizi sono una base dell&quot;architettura della fase di progettazione di .NET Framework. Servizi offrono accesso oggetti design-time a funzionalità specifiche e i metodi implementati da un oggetto servizio che fornisce uno o più servizi.       Per ottenere un servizio in fase di progettazione, chiamare il <xref:System.ComponentModel.Component.GetService%2A>metodo di un componente in modalità progettazione.</xref:System.ComponentModel.Component.GetService%2A> Finestre di progettazione e altri oggetti è possono aggiungere o rimuovere servizi in fase di progettazione tramite la <xref:System.ComponentModel.Design.IDesignerHost>interfaccia.</xref:System.ComponentModel.Design.IDesignerHost>       Contenitore del servizio possono essere contenuti in altri contenitori, che costituiscono una struttura ad albero di contenitori del servizio. Per impostazione predefinita, l&quot;interfaccia IServiceContainer aggiunge servizi al contenitore del servizio più vicino. Quando viene aggiunto un servizio, può essere aggiunto con le istruzioni per la promozione. Quando un servizio viene promosso, aggiungerlo a qualsiasi contenitore del servizio padre, in fino a quando non si raggiunge l&quot;inizio della struttura di contenitore di servizio. In questo modo una finestra di progettazione fornire un servizio globale che è possono utilizzare altri oggetti nel processo."
  example:
  - "The following code example contains the code for a <xref:System.Windows.Forms.Form> that is configured to demonstrate the behavior of a network of linked service containers.  \n  \n [!code-cs[IServiceContainerExample#1](~/add/codesnippet/csharp/t-system.componentmodel._108_1.cs)]\n [!code-cpp[IServiceContainerExample#1](~/add/codesnippet/cpp/t-system.componentmodel._108_1.cpp)]\n [!code-vb[IServiceContainerExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._108_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IServiceContainer : IServiceProvider
  implements:
  - System.IServiceProvider
  platform:
  - net462
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  parent: System.ComponentModel.Design.IServiceContainer
  langs:
  - csharp
  name: AddService(Type,ServiceCreatorCallback)
  nameWithType: IServiceContainer.AddService(Type,ServiceCreatorCallback)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,ServiceCreatorCallback)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Aggiunge il servizio specificato al contenitore del servizio."
  remarks: ''
  example:
  - "The following example illustrates how to add a service to an <xref:System.ComponentModel.Design.IServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#3](~/add/codesnippet/csharp/4abfcb9d-94a0-4da6-9ce0-_1.cs)]\n [!code-vb[ServiceContainerExample#3](~/add/codesnippet/visualbasic/4abfcb9d-94a0-4da6-9ce0-_1.vb)]\n [!code-cpp[ServiceContainerExample#3](~/add/codesnippet/cpp/4abfcb9d-94a0-4da6-9ce0-_1.cpp)]"
  syntax:
    content: public void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il tipo di servizio da aggiungere."
    - id: callback
      type: System.ComponentModel.Design.ServiceCreatorCallback
      description: "Un oggetto callback che viene utilizzato per creare il servizio. Consente di dichiarare disponibile un servizio, ma ritarda la creazione dell&quot;oggetto fino a quando non è richiesto il servizio."
  overload: System.ComponentModel.Design.IServiceContainer.AddService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)
  id: AddService(System.Type,System.Object)
  parent: System.ComponentModel.Design.IServiceContainer
  langs:
  - csharp
  name: AddService(Type,Object)
  nameWithType: IServiceContainer.AddService(Type,Object)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Aggiunge il servizio specificato al contenitore del servizio."
  remarks: ''
  example:
  - "The following example illustrates how to add a service to an <xref:System.ComponentModel.Design.IServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#2](~/add/codesnippet/csharp/78041303-5e2c-4bbb-9d48-_1.cs)]\n [!code-vb[ServiceContainerExample#2](~/add/codesnippet/visualbasic/78041303-5e2c-4bbb-9d48-_1.vb)]\n [!code-cpp[ServiceContainerExample#2](~/add/codesnippet/cpp/78041303-5e2c-4bbb-9d48-_1.cpp)]"
  syntax:
    content: public void AddService (Type serviceType, object serviceInstance);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il tipo di servizio da aggiungere."
    - id: serviceInstance
      type: System.Object
      description: "Un&quot;istanza del tipo di servizio da aggiungere. Questo oggetto deve implementare o ereditare dal tipo indicato per la `serviceType` parametro."
  overload: System.ComponentModel.Design.IServiceContainer.AddService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  parent: System.ComponentModel.Design.IServiceContainer
  langs:
  - csharp
  name: AddService(Type,ServiceCreatorCallback,Boolean)
  nameWithType: IServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Aggiunge il servizio specificato al contenitore del servizio e, facoltativamente, promuove il servizio ai contenitori del servizio padre."
  syntax:
    content: public void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il tipo di servizio da aggiungere."
    - id: callback
      type: System.ComponentModel.Design.ServiceCreatorCallback
      description: "Un oggetto callback che viene utilizzato per creare il servizio. Consente di dichiarare disponibile un servizio, ma ritarda la creazione dell&quot;oggetto fino a quando non è richiesto il servizio."
    - id: promote
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per promuovere questa richiesta a qualsiasi contenitore del servizio padre; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.IServiceContainer.AddService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  id: AddService(System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.IServiceContainer
  langs:
  - csharp
  name: AddService(Type,Object,Boolean)
  nameWithType: IServiceContainer.AddService(Type,Object,Boolean)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Aggiunge il servizio specificato al contenitore del servizio e, facoltativamente, promuove il servizio a qualsiasi contenitore del servizio padre."
  syntax:
    content: public void AddService (Type serviceType, object serviceInstance, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il tipo di servizio da aggiungere."
    - id: serviceInstance
      type: System.Object
      description: "Un&quot;istanza del tipo di servizio da aggiungere. Questo oggetto deve implementare o ereditare dal tipo indicato per la `serviceType` parametro."
    - id: promote
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per promuovere questa richiesta a qualsiasi contenitore del servizio padre; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.IServiceContainer.AddService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)
  id: RemoveService(System.Type)
  parent: System.ComponentModel.Design.IServiceContainer
  langs:
  - csharp
  name: RemoveService(Type)
  nameWithType: IServiceContainer.RemoveService(Type)
  fullName: System.ComponentModel.Design.IServiceContainer.RemoveService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Rimuove il tipo di servizio specificato dal contenitore del servizio."
  remarks: ''
  example:
  - "The following example demonstrates how to remove a service from an <xref:System.ComponentModel.Design.IServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#4](~/add/codesnippet/csharp/m-system.componentmodel._36_1.cs)]\n [!code-vb[ServiceContainerExample#4](~/add/codesnippet/visualbasic/m-system.componentmodel._36_1.vb)]\n [!code-cpp[ServiceContainerExample#4](~/add/codesnippet/cpp/m-system.componentmodel._36_1.cpp)]"
  syntax:
    content: public void RemoveService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il tipo di servizio da rimuovere."
  overload: System.ComponentModel.Design.IServiceContainer.RemoveService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)
  id: RemoveService(System.Type,System.Boolean)
  parent: System.ComponentModel.Design.IServiceContainer
  langs:
  - csharp
  name: RemoveService(Type,Boolean)
  nameWithType: IServiceContainer.RemoveService(Type,Boolean)
  fullName: System.ComponentModel.Design.IServiceContainer.RemoveService(Type,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Rimuove il tipo di servizio specificato dal contenitore del servizio e, facoltativamente, promuove il servizio ai contenitori del servizio padre."
  remarks: ''
  example:
  - "The following example demonstrates how to remove a service from an <xref:System.ComponentModel.Design.IServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#4](~/add/codesnippet/csharp/1ae84a0c-9fec-44a0-ac5a-_1.cs)]\n [!code-vb[ServiceContainerExample#4](~/add/codesnippet/visualbasic/1ae84a0c-9fec-44a0-ac5a-_1.vb)]\n [!code-cpp[ServiceContainerExample#4](~/add/codesnippet/cpp/1ae84a0c-9fec-44a0-ac5a-_1.cpp)]"
  syntax:
    content: public void RemoveService (Type serviceType, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il tipo di servizio da rimuovere."
    - id: promote
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per promuovere questa richiesta a qualsiasi contenitore del servizio padre; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.IServiceContainer.RemoveService*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: AddService(Type,ServiceCreatorCallback)
  nameWithType: IServiceContainer.AddService(Type,ServiceCreatorCallback)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,ServiceCreatorCallback)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.ServiceCreatorCallback
  parent: System.ComponentModel.Design
  isExternal: false
  name: ServiceCreatorCallback
  nameWithType: ServiceCreatorCallback
  fullName: System.ComponentModel.Design.ServiceCreatorCallback
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: AddService(Type,Object)
  nameWithType: IServiceContainer.AddService(Type,Object)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: AddService(Type,ServiceCreatorCallback,Boolean)
  nameWithType: IServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: AddService(Type,Object,Boolean)
  nameWithType: IServiceContainer.AddService(Type,Object,Boolean)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,Object,Boolean)
- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: RemoveService(Type)
  nameWithType: IServiceContainer.RemoveService(Type)
  fullName: System.ComponentModel.Design.IServiceContainer.RemoveService(Type)
- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: RemoveService(Type,Boolean)
  nameWithType: IServiceContainer.RemoveService(Type,Boolean)
  fullName: System.ComponentModel.Design.IServiceContainer.RemoveService(Type,Boolean)
- uid: System.ComponentModel.Design.IServiceContainer.AddService*
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: AddService
  nameWithType: IServiceContainer.AddService
- uid: System.ComponentModel.Design.IServiceContainer.RemoveService*
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: RemoveService
  nameWithType: IServiceContainer.RemoveService
