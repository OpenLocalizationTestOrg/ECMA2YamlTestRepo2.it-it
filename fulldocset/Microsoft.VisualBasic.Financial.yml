### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Financial
  id: Financial
  children:
  - Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  - Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  - Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  - Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  langs:
  - csharp
  name: Financial
  nameWithType: Financial
  fullName: Microsoft.VisualBasic.Financial
  type: Class
  summary: "Il <xref uid=&quot;langword_csharp_Financial&quot; name=&quot;Financial&quot; href=&quot;&quot;> </xref> modulo contiene procedure utilizzate per eseguire operazioni finanziarie."
  remarks: "Questo modulo supporta i membri della libreria run-time Visual Basic che eseguono calcoli finanziari, ad esempio l&quot;ammortamento del bene, i valori attuali e futuri, tassi di interesse, frequenze di ritorno e pagamenti."
  example:
  - "This example uses the `Rate` function to calculate the interest rate of a loan, given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).  \n  \n [!code-vb[VbVbalrMath#2](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._25_1.vb)]"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class Financial
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  id: DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: DDB(Double,Double,Double,Double,Double)
  nameWithType: Financial.DDB(Double,Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.DDB(Double,Double,Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> che specifica l&quot;ammortamento di un cespite per un periodo di tempo specifico utilizzando il metodo di ammortamento a doppia o di un altro metodo è stato specificato."
  remarks: "Il metodo di ammortamento calcola l&quot;ammortamento accelerato. L&quot;ammortamento è più elevata nel primo periodo e diminuisce nei periodi successivi.       Il `Life` e `Period` argomenti devono essere espressi nelle stesse unità. Ad esempio, se `Life` viene espresso in mesi, `Period` deve inoltre essere espresso in mesi. Tutti gli argomenti devono essere numeri positivi.       Il `DDB` funzione utilizza la formula seguente per calcolare l&quot;ammortamento per un determinato periodo: ammortamento / periodo = ((Cost – Salvage) * fattore) / vita"
  example:
  - "This example uses the `DDB` function to return the depreciation of an asset for a specified period given the initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), the total life of the asset in years (`LifeTime`), and the period in years for which the depreciation is calculated (`Depr`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/0a9b2d8a-2f04-4c59-80da-_1.vb)]"
  syntax:
    content: public static double DDB (double Cost, double Salvage, double Life, double Period, double Factor = 2);
    parameters:
    - id: Cost
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il costo iniziale del bene."
    - id: Salvage
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il valore del bene alla fine della sua vita utile."
    - id: Life
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica la durata utile del bene."
    - id: Period
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica di periodo per cui viene calcolato l&quot;ammortamento del bene."
    - id: Factor
      type: System.Double
      description: "Facoltativa. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica che il saldo di riduzione. Se omesso, viene utilizzato 2 (metodo di ammortamento)."
    return:
      type: System.Double
      description: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> che specifica l&quot;ammortamento di un cespite per un periodo di tempo specifico utilizzando il metodo di ammortamento a doppia o di un altro metodo è stato specificato."
  overload: Microsoft.VisualBasic.Financial.DDB*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Factor</code>&lt;= 0, <code>Salvage</code> &lt; 0, <code>Period</code> &lt;= 0, or <code>Period</code> &gt;<code>Life.</code>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: FV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.FV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.FV(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> specificando il valore futuro di una rendita in base a pagamenti periodici fissi e a un tasso di interesse fisso."
  remarks: "Una rendita è una serie di pagamenti fissi apportate nel tempo. Un&quot;annualità può essere un prestito (ad esempio un mutuo) o un investimento (ad esempio, un piano di risparmio mensile).       Il `Rate` e `NPer` argomenti devono essere calcolati utilizzando periodi di pagamento espressi nelle stesse unità. Ad esempio, se `Rate` è espresso in mesi, `NPer` deve anche essere espresso in mesi.       Per tutti gli argomenti, le uscite (ad esempio, i depositi per risparmi) sono rappresentata da numeri negativi. cassa ricevuto (ad esempio dividendi) è rappresentato da numeri positivi."
  example:
  - "This example uses the `FV` function to return the future value of an investment given the percentage rate that accrues per period (`APR / 12`), the total number of payments (`TotPmts`), the payment (`Payment`), the current value of the investment (`PVal`), and a number that indicates whether the payment is made at the beginning or end of the payment period (`PayType`). Note that because `Payment` represents cash paid out, it is a negative number.  \n  \n [!code-vb[VbVbalrMath#22](~/add/codesnippet/visualbasic/0c46fa91-bd2b-4dd0-a9f3-_1.vb)]"
  syntax:
    content: public static double FV (double Rate, double NPer, double Pmt, double PV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il tasso di interesse per periodo. Ad esempio, se si ottiene un prestito percentuale tasso di interesse (APR) pari al 10% e pagamenti mensili, la frequenza per ogni periodo è 0,1/12 o 0,0083."
    - id: NPer
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>che specifica il numero totale di periodi di pagamento di. Ad esempio, se i pagamenti mensili di un prestito, il prestito ha un totale di periodi di pagamento 4 x 12 (o 48)."
    - id: Pmt
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il pagamento da effettuare per ogni periodo. Pagamenti contengono in genere principale e interesse che non cambia nel corso dell&quot;annualità."
    - id: PV
      type: System.Double
      description: "Facoltativa. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il valore presentano (o attuale) di una serie di pagamenti futuri. Ad esempio, quando si richiede un prestito per acquistare un&quot;auto, l&quot;importo del prestito è il valore attuale attuale delle rate mensili che verranno pagate. Se omesso, viene utilizzato il valore 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Facoltativa. Oggetto di tipo <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> che specifica le scadenze dei pagamenti. Questo argomento deve essere <xref uid=&quot;langword_csharp_DueDate.EndOfPeriod&quot; name=&quot;DueDate.EndOfPeriod&quot; href=&quot;&quot;> </xref> se pagamenti sono dovuti alla fine del periodo di pagamento, o <xref uid=&quot;langword_csharp_DueDate.BegOfPeriod&quot; name=&quot;DueDate.BegOfPeriod&quot; href=&quot;&quot;> </xref> se pagamenti sono dovuti all&quot;inizio del periodo. Se omesso, <xref uid=&quot;langword_csharp_DueDate.EndOfPeriod&quot; name=&quot;DueDate.EndOfPeriod&quot; href=&quot;&quot;> </xref> verrà utilizzato."
    return:
      type: System.Double
      description: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> specificando il valore futuro di una rendita in base a pagamenti periodici fissi e a un tasso di interesse fisso."
  overload: Microsoft.VisualBasic.Financial.FV*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: IPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> che specifica il pagamento di interesse per un determinato periodo di un&quot;annualità in base a pagamenti periodici fissi e a un tasso di interesse fisso."
  remarks: "Una rendita è una serie di pagamenti fissi apportate nel tempo. Un&quot;annualità può essere un prestito (ad esempio un mutuo) o un investimento (ad esempio, un piano di risparmio mensile).       Il `Rate` e `NPer` argomenti devono essere calcolati utilizzando periodi di pagamento espressi nelle stesse unità. Ad esempio, se `Rate` è espresso in mesi, `NPer` deve anche essere espresso in mesi.       Per tutti gli argomenti, le uscite (ad esempio, i depositi per risparmi) sono rappresentata da numeri negativi. cassa ricevuto (ad esempio dividendi) è rappresentato da numeri positivi."
  example:
  - "This example uses the `IPmt` function to calculate how much of a payment is interest when all the payments are of equal value. Given are the interest percentage rate per period (`APR / 12`), the payment period for which the interest portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#26](~/add/codesnippet/visualbasic/2fa7f248-74e0-4498-aee1-_1.vb)]"
  syntax:
    content: public static double IPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il tasso di interesse per periodo. Ad esempio, se si ottiene un prestito percentuale tasso di interesse (APR) pari al 10% e pagamenti mensili, la frequenza per ogni periodo è 0,1/12 o 0,0083."
    - id: Per
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il periodo di pagamento compreso tra 1 e `NPer`."
    - id: NPer
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>che specifica il numero totale di periodi di pagamento di. Ad esempio, se i pagamenti mensili di un prestito, il prestito ha un totale di periodi di pagamento 4 x 12 (o 48)."
    - id: PV
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica presente valore o valore oggi, di una serie di pagamenti futuri. Ad esempio, quando si richiede un prestito per acquistare un&quot;auto, l&quot;importo del prestito è il valore attuale attuale delle rate mensili che verranno pagate."
    - id: FV
      type: System.Double
      description: "Facoltativa. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il valore futuro o saldo cassa desiderato dopo il pagamento finale. Ad esempio, il valore futuro di un prestito è $0 perché questo è il valore dopo l&quot;ultimo pagamento. Tuttavia, se si desidera salvare 50.000 in 18 anni per l&quot;istruzione del bambino, 50.000 è il valore futuro. Se omesso, viene utilizzato il valore 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Facoltativa. Oggetto di tipo <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> che specifica le scadenze dei pagamenti. Questo argomento deve essere `DueDate.EndOfPeriod` se pagamenti sono dovuti alla fine del periodo di pagamento, o `DueDate.BegOfPeriod` se pagamenti sono dovuti all&quot;inizio del periodo. Se omesso, `DueDate.EndOfPeriod` verrà utilizzato."
    return:
      type: System.Double
      description: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> che specifica il pagamento di interesse per un determinato periodo di un&quot;annualità in base a pagamenti periodici fissi e a un tasso di interesse fisso."
  overload: Microsoft.VisualBasic.Financial.IPmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Per</code>&lt;= 0 or <code>Per</code> &gt;<code>NPer</code>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  id: IRR(System.Double[]@,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: IRR(Double[],Double)
  nameWithType: Financial.IRR(Double[],Double)
  fullName: Microsoft.VisualBasic.Financial.IRR(Double[],Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> che specifica il tasso interno di rendimento di una serie di flussi di cassa periodici (pagamenti e Incassi)."
  remarks: "Il tasso di rendimento interno è il tasso di interesse di un investimento costituito entrate e uscite che si verificano a intervalli regolari.       Il `IRR` funzione Usa l&quot;ordine dei valori all&quot;interno della matrice per interpretare l&quot;ordine dei pagamenti e Incassi. Assicurarsi di immettere i valori di conferma e il pagamento nella sequenza corretta. Il flusso di cassa per ogni periodo non è necessario essere corretti, come nel caso di una rendita.       `IRR`viene calcolata per iterazione. A partire dal valore di `Guess`, `IRR` cicli di calcolo fino a quando il risultato è approssimato 0,00001%. Se `IRR` non è possibile trovare un risultato dopo 20 tentativi, si verifica un errore."
  example:
  - "In this example, the `IRR` function returns the internal rate of return for a series of five cash flows contained in the array `Values()`. The first array element is a negative cash flow representing business start-up costs. The remaining four cash flows represent positive cash flows for the subsequent four years. `Guess` is the estimated internal rate of return.  \n  \n [!code-vb[VbVbalrMath#20](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._228_1.vb)]"
  syntax:
    content: public static double IRR (ref double[] ValueArray, double Guess = 0.1);
    parameters:
    - id: ValueArray
      type: System.Double[]
      description: "Obbligatorio. Matrice di <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> specificando i valori del flusso di cassa. La matrice deve contenere almeno un valore negativo (uscita) e un valore positivo (entrata)."
    - id: Guess
      type: System.Double
      description: "Facoltativa. Oggetto che specifica il valore restituirà <xref uid=&quot;langword_csharp_IRR&quot; name=&quot;IRR&quot; href=&quot;&quot;> </xref>. Se omesso, `Guess` è 0,1 (10 percento)."
    return:
      type: System.Double
      description: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> che specifica il tasso interno di rendimento di una serie di flussi di cassa periodici (pagamenti e Incassi)."
  overload: Microsoft.VisualBasic.Financial.IRR*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Valori di argomento di matrice non sono validi o <code> Guess </code> &lt;= -1."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  id: MIRR(System.Double[]@,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: MIRR(Double[],Double,Double)
  nameWithType: Financial.MIRR(Double[],Double,Double)
  fullName: Microsoft.VisualBasic.Financial.MIRR(Double[],Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> che specifica il tasso di rendimento di una serie di flussi di cassa periodici (pagamenti e Incassi) interno modificato."
  remarks: "Il tasso interno di rendimento modificato è il tasso interno di rendimento quando pagamenti e Incassi sono finanziati a velocità diverse. Il `MIRR` funzione prende in considerazione sia il costo dell&quot;investimento (`FinanceRate`) e il tasso di interesse del cassa reinvestimento (`ReinvestRate`).       Il `FinanceRate` e `ReinvestRatearguments` sono percentuali espresse come valori decimali. Ad esempio, 12 percentuale è espresso come 0,12.       Il `MIRR` funzione Usa l&quot;ordine dei valori all&quot;interno della matrice per interpretare l&quot;ordine dei pagamenti e Incassi. Assicurarsi di immettere i valori di conferma e il pagamento nella sequenza corretta."
  example:
  - "This example uses the `MIRR` function to return the modified internal rate of return for a series of cash flows contained in the array `Values()`. `LoanAPR` represents the financing interest, and `InvAPR` represents the interest rate received on reinvestment.  \n  \n [!code-vb[VbVbalrMath#29](~/add/codesnippet/visualbasic/ba568dc0-432d-4a7b-b1d0-_1.vb)]"
  syntax:
    content: public static double MIRR (ref double[] ValueArray, double FinanceRate, double ReinvestRate);
    parameters:
    - id: ValueArray
      type: System.Double[]
      description: "Obbligatorio. Matrice di <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> specificando i valori del flusso di cassa. La matrice deve contenere almeno un valore negativo (uscita) e un valore positivo (entrata)."
    - id: FinanceRate
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il tasso di interesse a pagamento, come il costo del finanziamento."
    - id: ReinvestRate
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il tasso di interesse ricevuto sul reinvestimento."
    return:
      type: System.Double
      description: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> che specifica il tasso di rendimento di una serie di flussi di cassa periodici (pagamenti e Incassi) interno modificato."
  overload: Microsoft.VisualBasic.Financial.MIRR*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rank of <code>ValueArray</code> does not equal 1, <code>FinanceRate</code> = -1, or <code>ReinvestRate</code> = -1"
  - type: System.DivideByZeroException
    commentId: T:System.DivideByZeroException
    description: "Si è verificata la divisione per zero."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: NPer(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.NPer(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.NPer(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> specificando il numero di periodi per un&quot;annualità in base a pagamenti periodici fissi e a un tasso di interesse fisso."
  remarks: "Un&quot;annualità è una serie di pagamenti fissi effettuati in un periodo di tempo. Un&quot;annualità può essere un prestito (ad esempio un mutuo) o un investimento (ad esempio, un piano di risparmio mensile).       Per tutti gli argomenti, le uscite (ad esempio, i depositi per risparmi) sono rappresentata da numeri negativi. cassa ricevuto (ad esempio dividendi) è rappresentato da numeri positivi."
  example:
  - "This example uses the `NPer` function to return the number of periods during which payments must be made to pay off a loan whose value is contained in `PVal`. Also provided are the interest percentage rate per period (`APR / 12`), the payment (`Payment`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#19](~/add/codesnippet/visualbasic/57cf6dfc-5811-4703-a937-_1.vb)]"
  syntax:
    content: public static double NPer (double Rate, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il tasso di interesse per periodo. Ad esempio, se si ottiene un prestito percentuale tasso di interesse (APR) pari al 10% e pagamenti mensili, la frequenza per ogni periodo è 0,1/12 o 0,0083."
    - id: Pmt
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il pagamento da effettuare per ogni periodo. Pagamenti contengono in genere principale e interesse che non cambia nel corso dell&quot;annualità."
    - id: PV
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica presente valore o valore oggi, di una serie di pagamenti futuri. Ad esempio, quando si richiede un prestito per acquistare un&quot;auto, l&quot;importo del prestito è il valore attuale attuale delle rate mensili che verranno pagate."
    - id: FV
      type: System.Double
      description: "Facoltativa. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il valore futuro o saldo cassa desiderato dopo il pagamento finale. Ad esempio, il valore futuro di un prestito è $0 perché questo è il valore dopo l&quot;ultimo pagamento. Tuttavia, se si desidera salvare 50.000 in 18 anni per l&quot;istruzione del bambino, 50.000 è il valore futuro. Se omesso, viene utilizzato il valore 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Facoltativa. Oggetto di tipo <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> che specifica le scadenze dei pagamenti. Questo argomento deve essere `DueDate.EndOfPeriod` se pagamenti sono dovuti alla fine del periodo di pagamento, o `DueDate.BegOfPeriod` se pagamenti sono dovuti all&quot;inizio del periodo. Se omesso, `DueDate.EndOfPeriod` verrà utilizzato."
    return:
      type: System.Double
      description: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> specificando il numero di periodi per un&quot;annualità in base a pagamenti periodici fissi e a un tasso di interesse fisso."
  overload: Microsoft.VisualBasic.Financial.NPer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Rate</code>= 0 and <code>Pmt</code> = 0"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  id: NPV(System.Double,System.Double[]@)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: NPV(Double,Double[])
  nameWithType: Financial.NPV(Double,Double[])
  fullName: Microsoft.VisualBasic.Financial.NPV(Double,Double[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> specificando il valore attuale netto di un investimento in base a una serie di flussi di cassa periodici (pagamenti e Incassi) e un tasso di sconto."
  remarks: "Il valore attuale netto di un investimento è il valore corrente di una serie di pagamenti e Incassi future.       Il `NPV` funzione Usa l&quot;ordine dei valori all&quot;interno della matrice per interpretare l&quot;ordine dei pagamenti e Incassi. Assicurarsi di immettere i valori di conferma e il pagamento nella sequenza corretta.       Il `NPV` investimento inizia un periodo prima della data del primo valore del flusso di cassa e termina con l&quot;ultimo valore di cassa nella matrice.       Il calcolo del valore attuale netto è basato sui flussi di cassa futuri. Se il primo flusso di cassa si verifica all&quot;inizio del primo periodo, il primo valore deve essere aggiunto al valore restituito da `NPV` e non deve essere incluso nei valori del flusso di cassa di `ValueArray`.       Il `NPV` è simile alla funzione di `PV` funzione (valore attuale) con la differenza che il `PV` funzione i flussi di cassa inizino alla fine o all&quot;inizio di un periodo. A differenza di variabile `NPV` i valori del flusso di cassa, `PV` flussi di cassa devono essere corretti in tutta l&quot;investimento."
  example:
  - "This example uses the `NPV` function to return the net present value for a series of cash flows contained in the array `values()`. The return value, stored in `FixedRetRate`, represents the fixed internal rate of return.  \n  \n [!code-vb[VbVbalrMath#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._103_1.vb)]"
  syntax:
    content: public static double NPV (double Rate, ref double[] ValueArray);
    parameters:
    - id: Rate
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il tasso di sconto per la durata del periodo, espresso come numero decimale."
    - id: ValueArray
      type: System.Double[]
      description: "Obbligatorio. Matrice di <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> specificando i valori del flusso di cassa. La matrice deve contenere almeno un valore negativo (uscita) e un valore positivo (entrata)."
    return:
      type: System.Double
      description: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> specificando il valore attuale netto di un investimento in base a una serie di flussi di cassa periodici (pagamenti e Incassi) e un tasso di sconto."
  overload: Microsoft.VisualBasic.Financial.NPV*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ValueArray</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>, rank of <code>ValueArray</code> &lt;&gt; 1, or <code>Rate</code> = -1"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: Pmt(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.Pmt(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.Pmt(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> che specifica il pagamento per un&quot;annualità in base a pagamenti periodici fissi e a un tasso di interesse fisso."
  remarks: "Un&quot;annualità è una serie di pagamenti fissi effettuati durante un periodo di tempo. Un&quot;annualità può essere un prestito (ad esempio un mutuo) o un investimento (ad esempio, un piano di risparmio mensile).       Il `Rate` e `NPer` argomenti devono essere calcolati utilizzando periodi di pagamento espressi nelle stesse unità. Ad esempio, se `Rate` è espresso in mesi, `NPer` deve anche essere espresso in mesi.       Per tutti gli argomenti, cassa (ad esempio, i depositi per risparmi) è rappresentato da numeri negativi. cassa ricevuto (ad esempio dividendi) è rappresentato da numeri positivi."
  example:
  - "This example uses the `Pmt` function to return the monthly payment for a loan during a fixed period. Given are the interest percentage rate per period (`APR / 12`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period `(PayType).`  \n  \n [!code-vb[VbVbalrMath#7](~/add/codesnippet/visualbasic/7dc3a2f6-c47c-4a51-b799-_1.vb)]"
  syntax:
    content: public static double Pmt (double Rate, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il tasso di interesse per periodo. Ad esempio, se si ottiene un prestito percentuale tasso di interesse (APR) pari al 10% e pagamenti mensili, la frequenza per ogni periodo è 0,1/12 o 0,0083."
    - id: NPer
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il numero totale di periodi di pagamento della rendita. Ad esempio, se i pagamenti mensili di un prestito, il prestito ha un totale di periodi di pagamento 4 × 12 (o 48)."
    - id: PV
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il valore presente (o attuale) che una serie di pagamenti da effettuare in futuro vale la pena ora. Ad esempio, quando si richiede un prestito per acquistare un&quot;auto, l&quot;importo del prestito è il valore attuale attuale delle rate mensili che verranno pagate."
    - id: FV
      type: System.Double
      description: "Facoltativa. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il valore futuro o saldo cassa desiderato dopo il pagamento finale. Ad esempio, il valore futuro di un prestito è $0 perché questo è il valore dopo l&quot;ultimo pagamento. Tuttavia, se si desidera salvare 50.000 18 anni per l&quot;istruzione del bambino, 50.000 è il valore futuro. Se omesso, viene utilizzato il valore 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Facoltativa. Oggetto di tipo <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> che specifica le scadenze dei pagamenti. Questo argomento deve essere `DueDate.EndOfPeriod` se pagamenti sono dovuti alla fine del periodo di pagamento, o `DueDate.BegOfPeriod` se pagamenti sono dovuti all&quot;inizio del periodo. Se omesso, `DueDate.EndOfPeriod` verrà utilizzato."
    return:
      type: System.Double
      description: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> che specifica il pagamento per un&quot;annualità in base a pagamenti periodici fissi e a un tasso di interesse fisso."
  overload: Microsoft.VisualBasic.Financial.Pmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>NPer</code> = 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: PPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> che specifica il pagamento principale per un determinato periodo di un&quot;annualità in base a pagamenti periodici fissi e a un tasso di interesse fisso."
  remarks: "Un&quot;annualità è una serie di pagamenti fissi effettuati in un periodo di tempo. Un&quot;annualità può essere un prestito (ad esempio un mutuo) o un investimento (ad esempio, un piano di risparmio mensile).       Il `Rate` e `NPer` argomenti devono essere calcolati utilizzando periodi di pagamento espressi nelle stesse unità. Ad esempio, se `Rate` è espresso in mesi, `NPer` deve anche essere espresso in mesi.       Per tutti gli argomenti, cassa (ad esempio, i depositi per risparmi) è rappresentato da numeri negativi. cassa ricevuto (ad esempio dividendi) è rappresentato da numeri positivi."
  example:
  - "This example uses the `PPmt` function to calculate how much of a payment for a specific period is principal when all the payments are of equal value. Given are the interest percentage rate per period (`APR / 12`), the payment period for which the principal portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#24](~/add/codesnippet/visualbasic/43623fd2-2acb-4eab-9abc-_1.vb)]"
  syntax:
    content: public static double PPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il tasso di interesse per periodo. Ad esempio, se si ottiene un prestito percentuale tasso di interesse (APR) pari al 10% e pagamenti mensili, la frequenza per ogni periodo è 0,1/12 o 0,0083."
    - id: Per
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il periodo di pagamento compreso tra 1 e `NPer`."
    - id: NPer
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il numero totale di periodi di pagamento della rendita. Ad esempio, se i pagamenti mensili di un prestito, il prestito ha un totale di periodi di pagamento 4 x 12 (o 48)."
    - id: PV
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il valore corrente di una serie di pagamenti futuri. Ad esempio, quando si richiede un prestito per acquistare un&quot;auto, l&quot;importo del prestito è il valore attuale attuale delle rate mensili che verranno pagate."
    - id: FV
      type: System.Double
      description: "Facoltativa. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il valore futuro o saldo cassa desiderato dopo il pagamento finale. Ad esempio, il valore futuro di un prestito è $0 perché questo è il valore dopo l&quot;ultimo pagamento. Tuttavia, se si desidera salvare 50.000 in 18 anni per l&quot;istruzione del bambino, 50.000 è il valore futuro. Se omesso, viene utilizzato il valore 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Facoltativa. Oggetto di tipo <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> che specifica le scadenze dei pagamenti. Questo argomento deve essere `DueDate.EndOfPeriod` se pagamenti sono dovuti alla fine del periodo di pagamento, o `DueDate.BegOfPeriod` se pagamenti sono dovuti all&quot;inizio del periodo. Se omesso, `DueDate.EndOfPeriod` verrà utilizzato."
    return:
      type: System.Double
      description: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> che specifica il pagamento principale per un determinato periodo di un&quot;annualità in base a pagamenti periodici fissi e a un tasso di interesse fisso."
  overload: Microsoft.VisualBasic.Financial.PPmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Per</code>&lt;=0 or <code>Per</code> &gt; <code>NPer</code>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: PV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PV(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> specificando il valore attuale di un&quot;annualità in base a pagamenti periodici fissi da effettuare in futuro e un tasso di interesse fisso."
  remarks: "Un&quot;annualità è una serie di pagamenti fissi effettuati in un periodo di tempo. Un&quot;annualità può essere un prestito (ad esempio un mutuo) o un investimento (ad esempio, un piano di risparmio mensile).       Il `Rate` e `NPer` argomenti devono essere calcolati utilizzando periodi di pagamento espressi nelle stesse unità. Ad esempio, se `Rate` è espresso in mesi, `NPer` deve anche essere espresso in mesi.       Per tutti gli argomenti, le uscite (ad esempio, i depositi per risparmi) sono rappresentata da numeri negativi. cassa ricevuto (ad esempio dividendi) è rappresentato da numeri positivi."
  example:
  - "In this example, the `PV` function returns the present value of an $1,000,000 annuity that will provide $50,000 a year for the next 20 years. Provided are the expected annual percentage rate (`APR`), the total number of payments (`TotPmts`), the amount of each payment (`YrIncome`), the total future value of the investment (`FVal`), and a number that indicates whether each payment is made at the beginning or end of the payment period (`PayType`). Note that `YrIncome` is a negative number because it represents cash paid out from the annuity each year.  \n  \n [!code-vb[VbVbalrMath#25](~/add/codesnippet/visualbasic/0175a2c1-5f6c-4f6b-9587-_1.vb)]"
  syntax:
    content: public static double PV (double Rate, double NPer, double Pmt, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il tasso di interesse per periodo. Ad esempio, se si ottiene un prestito percentuale tasso di interesse (APR) pari al 10% e pagamenti mensili, la frequenza per ogni periodo è 0,1/12 o 0,0083."
    - id: NPer
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il numero totale di periodi di pagamento della rendita. Ad esempio, se i pagamenti mensili di un prestito, il prestito è 4 x 12 (o 48) periodi di pagamento."
    - id: Pmt
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il pagamento da effettuare per ogni periodo. Pagamenti contengono in genere capitale e gli interessi che non cambiano nel corso della durata dei pagamenti."
    - id: FV
      type: System.Double
      description: "Facoltativa. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il futuro valore o il saldo cassa desiderato dopo il pagamento finale. Ad esempio, il valore futuro di un prestito è $0 perché questo è il valore dopo l&quot;ultimo pagamento. Tuttavia, se si desidera salvare 50.000 in 18 anni per l&quot;istruzione del bambino, 50.000 è il valore futuro. Se omesso, viene utilizzato il valore 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Facoltativa. Oggetto di tipo <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> che specifica le scadenze dei pagamenti. Questo argomento deve essere `DueDate.EndOfPeriod` se pagamenti sono dovuti alla fine del periodo di pagamento, o `DueDate.BegOfPeriod` se pagamenti sono dovuti all&quot;inizio del periodo. Se omesso, `DueDate.EndOfPeriod` verrà utilizzato."
    return:
      type: System.Double
      description: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> specificando il valore attuale di un&quot;annualità in base a pagamenti periodici fissi da effettuare in futuro e un tasso di interesse fisso."
  overload: Microsoft.VisualBasic.Financial.PV*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  id: Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: Rate(Double,Double,Double,Double,DueDate,Double)
  nameWithType: Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  fullName: Microsoft.VisualBasic.Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> che specifica il tasso di interesse per periodo per un&quot;annualità."
  remarks: "Un&quot;annualità è una serie di pagamenti fissi effettuati in un periodo di tempo. Un&quot;annualità può essere un prestito (ad esempio un mutuo) o un investimento (ad esempio, un piano di risparmio mensile).       Per tutti gli argomenti, le uscite (ad esempio, i depositi per risparmi) sono rappresentata da numeri negativi. cassa ricevuto (ad esempio dividendi) è rappresentato da numeri positivi.       `Rate`viene calcolata per iterazione. A partire dal valore di `Guess`, `Rate` cicli di calcolo fino a quando il risultato è approssimato 0,00001%. Se `Rate` non è possibile trovare un risultato dopo 20 tentativi, si verifica un errore. Se il tentativo è pari al 10% e `Rate` ha esito negativo, provare a un valore diverso per `Guess`."
  example:
  - "This example uses the `Rate` function to calculate the interest rate of a loan given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).  \n  \n [!code-vb[VbVbalrMath#2](~/add/codesnippet/visualbasic/ea19cd36-8223-44a7-9131-_1.vb)]"
  syntax:
    content: public static double Rate (double NPer, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod, double Guess = 0.1);
    parameters:
    - id: NPer
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il numero totale di periodi di pagamento della rendita. Ad esempio, se i pagamenti mensili di un prestito, il prestito ha un totale di periodi di pagamento 4 * 12 (o 48)."
    - id: Pmt
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il pagamento da effettuare per ogni periodo. Pagamenti contengono in genere principale e interesse che non cambia nel corso dell&quot;annualità."
    - id: PV
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica l&quot;attuale valore o valore oggi, di una serie di pagamenti futuri. Ad esempio, quando si richiede un prestito per acquistare un&quot;auto, l&quot;importo del prestito è il valore attuale attuale delle rate mensili che verranno pagate."
    - id: FV
      type: System.Double
      description: "Facoltativa. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il futuro valore o il saldo cassa desiderato dopo il pagamento finale. Ad esempio, il valore futuro di un prestito è $0 perché questo è il valore dopo l&quot;ultimo pagamento. Tuttavia, se si desidera salvare 50.000 in 18 anni per l&quot;istruzione del bambino, 50.000 è il valore futuro. Se omesso, viene utilizzato il valore 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Facoltativa. Oggetto di tipo <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> che specifica le scadenze dei pagamenti. Questo argomento deve essere `DueDate.EndOfPeriod` se pagamenti sono dovuti alla fine del periodo di pagamento, o `DueDate.BegOfPeriod` se pagamenti sono dovuti all&quot;inizio del periodo. Se omesso, `DueDate.EndOfPeriod` verrà utilizzato."
    - id: Guess
      type: System.Double
      description: "Facoltativa. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>che specifica il valore è restituito da <xref uid=&quot;langword_csharp_Rate&quot; name=&quot;Rate&quot; href=&quot;&quot;> </xref>. Se omesso, `Guess` è 0,1 (10 percento)."
    return:
      type: System.Double
      description: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> che specifica il tasso di interesse per periodo per un&quot;annualità."
  overload: Microsoft.VisualBasic.Financial.Rate*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>NPer</code> &lt;= 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  id: SLN(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: SLN(Double,Double,Double)
  nameWithType: Financial.SLN(Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SLN(Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> che specifica l&quot;ammortamento di un cespite per un singolo periodo."
  remarks: "Il periodo di ammortamento deve essere espressi nella stessa unità di `Life` argomento. Tutti gli argomenti devono essere numeri positivi."
  example:
  - "This example uses the `SLN` function to return the straight-line depreciation of an asset for a single period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._10_1.vb)]"
  syntax:
    content: public static double SLN (double Cost, double Salvage, double Life);
    parameters:
    - id: Cost
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il costo iniziale del bene."
    - id: Salvage
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il valore del bene alla fine della sua vita utile."
    - id: Life
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica la durata utile del bene."
    return:
      type: System.Double
      description: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> che specifica l&quot;ammortamento di un cespite per un singolo periodo."
  overload: Microsoft.VisualBasic.Financial.SLN*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Life</code> = 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  id: SYD(System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: SYD(Double,Double,Double,Double)
  nameWithType: Financial.SYD(Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SYD(Double,Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> specificando l&quot;ammortamento a somma degli anni di un bene per un periodo specificato."
  remarks: "Il `Life` e `Period` argomenti devono essere espressi nelle stesse unità. Ad esempio, se `Life` viene espresso in mesi, `Period` deve inoltre essere espresso in mesi. Tutti gli argomenti devono essere numeri positivi."
  example:
  - "This example uses the `SYD` function to return the depreciation of an asset for a specified period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/9fc7d5a0-c6cb-4861-b899-_1.vb)]"
  syntax:
    content: public static double SYD (double Cost, double Salvage, double Life, double Period);
    parameters:
    - id: Cost
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il costo iniziale del bene."
    - id: Salvage
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il valore del bene alla fine della sua vita utile."
    - id: Life
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>specificare la lunghezza della vita utile del bene."
    - id: Period
      type: System.Double
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Specifica il periodo per cui viene calcolato l&quot;ammortamento del bene."
    return:
      type: System.Double
      description: "Restituisce un <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> specificando l&quot;ammortamento a somma degli anni di un bene per un periodo specificato."
  overload: Microsoft.VisualBasic.Financial.SYD*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Salvage</code>&lt; 0, <code>Period</code> &gt; <code>Life</code>, or <code>Period</code> &lt;=0."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.DivideByZeroException
  isExternal: true
  name: System.DivideByZeroException
- uid: Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: DDB(Double,Double,Double,Double,Double)
  nameWithType: Financial.DDB(Double,Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.DDB(Double,Double,Double,Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: FV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.FV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.FV(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.DueDate
  parent: Microsoft.VisualBasic
  isExternal: false
  name: DueDate
  nameWithType: DueDate
  fullName: Microsoft.VisualBasic.DueDate
- uid: Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IRR(Double[],Double)
  nameWithType: Financial.IRR(Double[],Double)
  fullName: Microsoft.VisualBasic.Financial.IRR(Double[],Double)
- uid: System.Double[]
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double[]
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: MIRR(Double[],Double,Double)
  nameWithType: Financial.MIRR(Double[],Double,Double)
  fullName: Microsoft.VisualBasic.Financial.MIRR(Double[],Double,Double)
- uid: Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPer(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.NPer(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.NPer(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPV(Double,Double[])
  nameWithType: Financial.NPV(Double,Double[])
  fullName: Microsoft.VisualBasic.Financial.NPV(Double,Double[])
- uid: Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Pmt(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.Pmt(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.Pmt(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PV(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Rate(Double,Double,Double,Double,DueDate,Double)
  nameWithType: Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  fullName: Microsoft.VisualBasic.Financial.Rate(Double,Double,Double,Double,DueDate,Double)
- uid: Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SLN(Double,Double,Double)
  nameWithType: Financial.SLN(Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SLN(Double,Double,Double)
- uid: Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SYD(Double,Double,Double,Double)
  nameWithType: Financial.SYD(Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SYD(Double,Double,Double,Double)
- uid: Microsoft.VisualBasic.Financial.DDB*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: DDB
  nameWithType: Financial.DDB
- uid: Microsoft.VisualBasic.Financial.FV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: FV
  nameWithType: Financial.FV
- uid: Microsoft.VisualBasic.Financial.IPmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IPmt
  nameWithType: Financial.IPmt
- uid: Microsoft.VisualBasic.Financial.IRR*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IRR
  nameWithType: Financial.IRR
- uid: Microsoft.VisualBasic.Financial.MIRR*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: MIRR
  nameWithType: Financial.MIRR
- uid: Microsoft.VisualBasic.Financial.NPer*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPer
  nameWithType: Financial.NPer
- uid: Microsoft.VisualBasic.Financial.NPV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPV
  nameWithType: Financial.NPV
- uid: Microsoft.VisualBasic.Financial.Pmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Pmt
  nameWithType: Financial.Pmt
- uid: Microsoft.VisualBasic.Financial.PPmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PPmt
  nameWithType: Financial.PPmt
- uid: Microsoft.VisualBasic.Financial.PV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PV
  nameWithType: Financial.PV
- uid: Microsoft.VisualBasic.Financial.Rate*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Rate
  nameWithType: Financial.Rate
- uid: Microsoft.VisualBasic.Financial.SLN*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SLN
  nameWithType: Financial.SLN
- uid: Microsoft.VisualBasic.Financial.SYD*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SYD
  nameWithType: Financial.SYD
