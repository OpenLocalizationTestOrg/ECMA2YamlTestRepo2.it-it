### YamlMime:ManagedReference
items:
- uid: System.Globalization.SortVersion
  id: SortVersion
  children:
  - System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)
  - System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)
  - System.Globalization.SortVersion.Equals(System.Object)
  - System.Globalization.SortVersion.FullVersion
  - System.Globalization.SortVersion.GetHashCode
  - System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  - System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  - System.Globalization.SortVersion.SortId
  langs:
  - csharp
  name: SortVersion
  nameWithType: SortVersion
  fullName: System.Globalization.SortVersion
  type: Class
  summary: "Fornisce informazioni sulla versione Unicode utilizzata per confrontare e ordinare le stringhe."
  remarks: "Dal [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)] tramite il [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], ogni versione di.NET Framework include le tabelle che contengono ordinamenti e dati sulla normalizzazione delle stringhe e che si basano su una particolare versione del formato Unicode. Nel [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)], la presenza di queste tabelle dipende dal sistema operativo:: nel [!INCLUDE[win7](~/add/includes/win7-md.md)] e versioni precedenti del sistema operativo Windows, le tabelle continuano a essere utilizzato per il confronto e ordinamento delle stringhe.      -Scegliere [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)], .NET Framework delega confronto tra stringhe e il sistema operativo delle operazioni di ordinamento.       Di conseguenza, il risultato di un confronto tra stringhe può dipendono non solo la versione di .NET Framework, ma anche la versione del sistema operativo, come illustrato nella tabella seguente. Si noti che questo elenco delle versioni supportate di Unicode si applica a carattere di confronto e ordinamento di sola lettura. non si applica alla classificazione di caratteri Unicode in base alla categoria.      |. Versione di .NET Framework | Sistema operativo | Versione Unicode |   |----------------------------|----------------------|---------------------|   | [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]| Tutti i sistemi operativi | Unicode 5.0 |   | [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)] e versioni successive di .NET Framework | [!INCLUDE[win7](~/add/includes/win7-md.md)]| Unicode 5.0 |   | [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)] e versioni successive di .NET Framework | [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)] e versioni successive del sistema operativo di Windows | Unicode 6.0 |       In [!INCLUDE[win8](~/add/includes/ajax-current-ext-md.md)], perché la versione Unicode utilizzata in confronto tra stringhe e ordinamento dipende dalla versione del sistema operativo, i risultati del confronto tra stringhe possono variare anche per le applicazioni eseguite in una versione specifica di .NET Framework.       La classe SortVersion fornisce informazioni sulla versione Unicode utilizzata da .NET Framework per il confronto di stringa e di ordinamento. Consente agli sviluppatori di scrivere applicazioni in grado di rilevare e gestire correttamente le modifiche nella versione Unicode utilizzata per confrontare e ordinare le stringhe di un&quot;applicazione.       È possibile creare un&quot;istanza di un oggetto SortVersion in due modi: - chiamando il <xref:System.Globalization.SortVersion.%23ctor%2A>costruttore, che crea un nuovo SortVersion basato su un numero di versione dell&quot;oggetto e ordinare ID.</xref:System.Globalization.SortVersion.%23ctor%2A> Questo costruttore è molto utile durante la ricreazione di un oggetto SortVersion da dati salvati.      -Per il recupero del valore di <xref:System.Globalization.CompareInfo.Version%2A?displayProperty=fullName>proprietà.</xref:System.Globalization.CompareInfo.Version%2A?displayProperty=fullName> Questa proprietà fornisce informazioni sulla versione Unicode utilizzata da .NET Framework in cui è in esecuzione l&quot;applicazione.       La classe SortVersion ha due proprietà, <xref:System.Globalization.SortVersion.FullVersion%2A>e <xref:System.Globalization.SortVersion.SortId%2A>, che indicano la versione Unicode e le impostazioni cultura specifiche, utilizzato per il confronto di stringa.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> Il <xref:System.Globalization.SortVersion.FullVersion%2A>proprietà è un valore numerico arbitrario che riflette la versione Unicode utilizzata per il confronto di stringhe e <xref:System.Globalization.SortVersion.SortId%2A>proprietà è un oggetto arbitrario <xref:System.Guid>che riflette le impostazioni cultura di cui vengono adottate per il confronto di stringa.</xref:System.Guid> </xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> I valori di queste due proprietà sono importanti solo quando si confrontano due oggetti SortVersion utilizzando il <xref:System.Globalization.SortVersion.Equals%2A>(metodo), il <xref:System.Globalization.SortVersion.op_Equality%2A>operatore o <xref:System.Globalization.SortVersion.op_Inequality%2A>operatore.</xref:System.Globalization.SortVersion.op_Inequality%2A> </xref:System.Globalization.SortVersion.op_Equality%2A> </xref:System.Globalization.SortVersion.Equals%2A>       È in genere possibile utilizzare un oggetto di SortVersion durante il salvataggio o il recupero di un tipo di dati di stringa delle impostazioni cultura, ordinata, ad esempio indici o il valore letterale stringhe stesse. Questa operazione richiede i passaggi seguenti: 1.  Quando i dati della stringa ordinato viene salvati, la <xref:System.Globalization.SortVersion.FullVersion%2A>e <xref:System.Globalization.SortVersion.SortId%2A>i valori delle proprietà vengono inoltre salvati.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A>      2.  Quando vengono recuperati i dati della stringa ordinato, è possibile ricreare l&quot;oggetto SortVersion utilizzato per ordinare le stringhe mediante la chiamata di <xref:System.Globalization.SortVersion.%23ctor%2A>costruttore.</xref:System.Globalization.SortVersion.%23ctor%2A>      3.  Questo oggetto SortVersion appena creata un&quot;istanza viene confrontato con un oggetto SortVersion che riflette le impostazioni cultura di cui vengono adottate per ordinare i dati di stringa.      4.  Se i due oggetti SortVersion non sono uguali, è necessario riordinare i dati della stringa.       Nell&quot;esempio viene illustrato questo concetto."
  example:
  - "The following example contains a portion of the source code from an application that uses the SortVersion class to ensure that the native names of <xref:System.Globalization.RegionInfo> objects are ordered appropriately for the current system and current culture. It uses the <xref:System.IO.BinaryReader> and <xref:System.IO.BinaryWriter> objects to store and retrieve ordered data from a data file named `Regions.dat` rather than retrieving and ordering data each time the application is run. The example first checks to determine whether the data file exists. If it does not, it creates the data and sets the `reindex` flag, which indicates that the data must be resorted and saved again. Otherwise, it retrieves the data and compares the saved SortVersion object with the SortVersion object for the current culture on the current system. If they are not equal, or if the `reindex` flag had been set previously, it resorts the <xref:System.Globalization.RegionInfo> data.  \n  \n [!code-cs[System.Globalization.SortVersion#1](~/add/codesnippet/csharp/t-system.globalization.s_0_1.cs)]\n [!code-vb[System.Globalization.SortVersion#1](~/add/codesnippet/visualbasic/t-system.globalization.s_0_1.vb)]"
  syntax:
    content: 'public sealed class SortVersion : IEquatable<System.Globalization.SortVersion>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Globalization.SortVersion>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)
  id: '#ctor(System.Int32,System.Guid)'
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: SortVersion(Int32,Guid)
  nameWithType: SortVersion.SortVersion(Int32,Guid)
  fullName: System.Globalization.SortVersion.SortVersion(Int32,Guid)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Crea una nuova istanza di <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> classe."
  remarks: "Questo costruttore crea un <xref:System.Globalization.SortVersion>oggetto con la versione specificata e l&quot;ordinamento ID.</xref:System.Globalization.SortVersion> Il `fullVersion` argomento è assegnato al <xref:System.Globalization.SortVersion.FullVersion%2A>proprietà.</xref:System.Globalization.SortVersion.FullVersion%2A> Il `sortId` argomento è assegnato al <xref:System.Globalization.SortVersion.SortId%2A>proprietà.</xref:System.Globalization.SortVersion.SortId%2A>       Questo costruttore è utile per ricreare un <xref:System.Globalization.SortVersion>oggetto dai dati che sono stati serializzati o salvati.</xref:System.Globalization.SortVersion> Questa versione può quindi essere confrontata con la versione corrente dell&quot;applicazione per determinare se è disponibile la versione Unicode usata per visualizzare e ordinare le stringhe dell&quot;applicazione."
  syntax:
    content: public SortVersion (int fullVersion, Guid sortId);
    parameters:
    - id: fullVersion
      type: System.Int32
      description: "Un numero di versione."
    - id: sortId
      type: System.Guid
      description: "Un ID di ordinamento."
  overload: System.Globalization.SortVersion.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)
  id: Equals(System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: Equals(SortVersion)
  nameWithType: SortVersion.Equals(SortVersion)
  fullName: System.Globalization.SortVersion.Equals(SortVersion)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce un valore che indica se questo <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> istanza è uguale a un oggetto specificato <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> oggetto."
  remarks: "Due <xref:System.Globalization.SortVersion>oggetti sono uguali se i relativi <xref:System.Globalization.SortVersion.FullVersion%2A>e <xref:System.Globalization.SortVersion.SortId%2A>le proprietà sono uguali.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> </xref:System.Globalization.SortVersion>"
  syntax:
    content: public bool Equals (System.Globalization.SortVersion other);
    parameters:
    - id: other
      type: System.Globalization.SortVersion
      description: "Oggetto da confrontare con questa istanza."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> other </code> rappresenta la stessa versione di questa istanza; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.SortVersion.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SortVersion.Equals(Object)
  fullName: System.Globalization.SortVersion.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce un valore che indica se questo <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> istanza è uguale a un oggetto specificato."
  remarks: "Due <xref:System.Globalization.SortVersion>oggetti sono uguali se i relativi <xref:System.Globalization.SortVersion.FullVersion%2A>e <xref:System.Globalization.SortVersion.SortId%2A>le proprietà sono uguali.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> </xref:System.Globalization.SortVersion>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto da confrontare con questa istanza."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> obj </code> è un <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> oggetto che rappresenta la stessa versione di questa istanza; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.SortVersion.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.FullVersion
  id: FullVersion
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: FullVersion
  nameWithType: SortVersion.FullVersion
  fullName: System.Globalization.SortVersion.FullVersion
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Ottiene il numero di versione completo di <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> oggetto."
  remarks: "Il valore della proprietà FullVersion riflette la versione Unicode utilizzata per normalizzare e confrontare le stringhe."
  syntax:
    content: public int FullVersion { get; }
    return:
      type: System.Int32
      description: "Il numero di versione di questo <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> oggetto."
  overload: System.Globalization.SortVersion.FullVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.GetHashCode
  id: GetHashCode
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SortVersion.GetHashCode()
  fullName: System.Globalization.SortVersion.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce un codice hash per questa istanza."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash di un intero con segno a 32 bit."
  overload: System.Globalization.SortVersion.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  id: op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: op_Equality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Equality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Equality(SortVersion,SortVersion)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Indica se due <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> istanze sono uguali."
  remarks: "Due <xref:System.Globalization.SortVersion>oggetti sono uguali se sono entrambi `null`, o se i relativi <xref:System.Globalization.SortVersion.FullVersion%2A>e <xref:System.Globalization.SortVersion.SortId%2A>le proprietà sono uguali.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> </xref:System.Globalization.SortVersion>"
  syntax:
    content: public static bool op_Equality (System.Globalization.SortVersion left, System.Globalization.SortVersion right);
    parameters:
    - id: left
      type: System.Globalization.SortVersion
      description: "La prima istanza da confrontare."
    - id: right
      type: System.Globalization.SortVersion
      description: "La seconda istanza da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the values of <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Globalization.SortVersion.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  id: op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: op_Inequality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Inequality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Inequality(SortVersion,SortVersion)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Indica se due <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> istanze non sono uguali."
  remarks: "Due <xref:System.Globalization.SortVersion>oggetti non sono uguali se `null` e l&quot;altro non lo è, o se hanno diverse <xref:System.Globalization.SortVersion.FullVersion%2A>o <xref:System.Globalization.SortVersion.SortId%2A>i valori delle proprietà.</xref:System.Globalization.SortVersion.SortId%2A> </xref:System.Globalization.SortVersion.FullVersion%2A> </xref:System.Globalization.SortVersion>"
  syntax:
    content: public static bool op_Inequality (System.Globalization.SortVersion left, System.Globalization.SortVersion right);
    parameters:
    - id: left
      type: System.Globalization.SortVersion
      description: "La prima istanza da confrontare."
    - id: right
      type: System.Globalization.SortVersion
      description: "La seconda istanza da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i valori di <code> left </code> e <code> right </code> non sono uguali; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.SortVersion.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.SortVersion.SortId
  id: SortId
  parent: System.Globalization.SortVersion
  langs:
  - csharp
  name: SortId
  nameWithType: SortVersion.SortId
  fullName: System.Globalization.SortVersion.SortId
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Ottiene un identificatore univoco globale per <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> oggetto."
  remarks: "Il valore della proprietà SortId riflette le impostazioni cultura di cui convenzioni influiscono sulla stringa di confronto e ordinamento."
  syntax:
    content: public Guid SortId { get; }
    return:
      type: System.Guid
      description: "Un identificatore univoco globale per questo <xref href=&quot;System.Globalization.SortVersion&quot;> </xref> oggetto."
  overload: System.Globalization.SortVersion.SortId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortVersion(Int32,Guid)
  nameWithType: SortVersion.SortVersion(Int32,Guid)
  fullName: System.Globalization.SortVersion.SortVersion(Int32,Guid)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: Equals(SortVersion)
  nameWithType: SortVersion.Equals(SortVersion)
  fullName: System.Globalization.SortVersion.Equals(SortVersion)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.SortVersion
  parent: System.Globalization
  isExternal: false
  name: SortVersion
  nameWithType: SortVersion
  fullName: System.Globalization.SortVersion
- uid: System.Globalization.SortVersion.Equals(System.Object)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: Equals(Object)
  nameWithType: SortVersion.Equals(Object)
  fullName: System.Globalization.SortVersion.Equals(Object)
- uid: System.Globalization.SortVersion.FullVersion
  parent: System.Globalization.SortVersion
  isExternal: false
  name: FullVersion
  nameWithType: SortVersion.FullVersion
  fullName: System.Globalization.SortVersion.FullVersion
- uid: System.Globalization.SortVersion.GetHashCode
  parent: System.Globalization.SortVersion
  isExternal: false
  name: GetHashCode()
  nameWithType: SortVersion.GetHashCode()
  fullName: System.Globalization.SortVersion.GetHashCode()
- uid: System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Equality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Equality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Equality(SortVersion,SortVersion)
- uid: System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Inequality(SortVersion,SortVersion)
  nameWithType: SortVersion.op_Inequality(SortVersion,SortVersion)
  fullName: System.Globalization.SortVersion.op_Inequality(SortVersion,SortVersion)
- uid: System.Globalization.SortVersion.SortId
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortId
  nameWithType: SortVersion.SortId
  fullName: System.Globalization.SortVersion.SortId
- uid: System.Globalization.SortVersion.#ctor*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortVersion
  nameWithType: SortVersion.SortVersion
- uid: System.Globalization.SortVersion.Equals*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: Equals
  nameWithType: SortVersion.Equals
- uid: System.Globalization.SortVersion.FullVersion*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: FullVersion
  nameWithType: SortVersion.FullVersion
- uid: System.Globalization.SortVersion.GetHashCode*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: GetHashCode
  nameWithType: SortVersion.GetHashCode
- uid: System.Globalization.SortVersion.op_Equality*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Equality
  nameWithType: SortVersion.op_Equality
- uid: System.Globalization.SortVersion.op_Inequality*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: op_Inequality
  nameWithType: SortVersion.op_Inequality
- uid: System.Globalization.SortVersion.SortId*
  parent: System.Globalization.SortVersion
  isExternal: false
  name: SortId
  nameWithType: SortVersion.SortId
