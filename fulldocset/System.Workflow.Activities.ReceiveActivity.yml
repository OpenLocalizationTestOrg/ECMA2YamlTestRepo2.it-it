### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.ReceiveActivity
  id: ReceiveActivity
  children:
  - System.Workflow.Activities.ReceiveActivity.#ctor
  - System.Workflow.Activities.ReceiveActivity.#ctor(System.String)
  - System.Workflow.Activities.ReceiveActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ReceiveActivity.CanCreateInstance
  - System.Workflow.Activities.ReceiveActivity.Context
  - System.Workflow.Activities.ReceiveActivity.ContextToken
  - System.Workflow.Activities.ReceiveActivity.Dispose(System.Boolean)
  - System.Workflow.Activities.ReceiveActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ReceiveActivity.FaultMessage
  - System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
  - System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)
  - System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)
  - System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)
  - System.Workflow.Activities.ReceiveActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.Activities.ReceiveActivity.Initialize(System.IServiceProvider)
  - System.Workflow.Activities.ReceiveActivity.InitializeProperties
  - System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ReceiveActivity.OperationValidation
  - System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
  - System.Workflow.Activities.ReceiveActivity.ParameterBindings
  - System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
  - System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)
  - System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName
  - System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  - System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
  langs:
  - csharp
  name: ReceiveActivity
  nameWithType: ReceiveActivity
  fullName: System.Workflow.Activities.ReceiveActivity
  type: Class
  summary: "Attività di servizio che implementa un&quot;operazione definita da un [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] contratto di servizio."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]L&quot;attività di ReceiveActivity viene utilizzato quando un flusso di lavoro implementa un&quot;operazione definita un [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] contratto di servizio. ReceiveActivity può implementare un&quot;operazione da un contratto di servizio già definito o è possibile definire il contratto di servizio e l&quot;operazione all&quot;interno del flusso di lavoro. Quest&quot;ultimo è noto come un contratto di priorità del flusso di lavoro.       L&quot;attività di ReceiveActivity supporta un set di modelli di scambio dei messaggi predefinito. Questi modelli includono: - unidirezionale client che invia il messaggio non prevede il servizio per inviare una risposta di ricezione. Il contratto dell&quot;operazione deve essere un tipo restituito void.      -Ricezione richiesta - Invio risposta dopo che un messaggio viene ricevuto ed elaborato dall&quot;attività ReceiveActivity, una risposta viene inviata al client. Quando l&quot;operazione del contratto dispone di un tipo restituito void, all&quot;attività di trasmissione viene inviato un riconoscimento.      -Ricezione richiesta - Invio errore dopo che un messaggio viene ricevuto ed elaborato tramite l&quot;attività di ReceiveActivity, una risposta o un errore viene inviato al client.      > [!NOTE] > Per garantire che la persistenza venga eseguita correttamente e non rende persistenti i messaggi temporanei, assicurarsi che le attività figlio di ReceiveActivity non vengono mantenute da soli. Questa situazione può verificarsi se le attività figlio diventano inattive durante la creazione di un provider di persistenza con `UnloadOnIdle` impostato su `true`, per l&quot;istanza.      > [!NOTE] > Questa attività sia parte di [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]. Per l&quot;attività equivalente in [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], vedere <xref:System.ServiceModel.Activities.Receive>.</xref:System.ServiceModel.Activities.Receive>"
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.ReceiveActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.ReceiveActivity), "Design.Resources.ReceiveActivity.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.ReceiveActivityValidator))]

      public sealed class ReceiveActivity : System.Workflow.Activities.SequenceActivity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  - System.Workflow.ComponentModel.CompositeActivity
  - System.Workflow.Activities.SequenceActivity
  implements:
  - System.Workflow.Activities.IEventActivity
  - System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  inheritedMembers:
  - System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.CompositeActivity.Activities
  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ReceiveActivity()
  nameWithType: ReceiveActivity.ReceiveActivity()
  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity()
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> classe."
  remarks: "Il <xref:System.Workflow.Activities.ReceiveActivity>costruttore in genere viene richiamato nel file code-beside creato dalla finestra di progettazione del flusso di lavoro.</xref:System.Workflow.Activities.ReceiveActivity>"
  example:
  - "The following example shows how to create a new instance of the <xref:System.Workflow.Activities.ReceiveActivity> class.  This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#11](~/add/codesnippet/csharp/receiveactivity/snippets.cs#11)]"
  syntax:
    content: public ReceiveActivity ();
    parameters: []
  overload: System.Workflow.Activities.ReceiveActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ReceiveActivity(String)
  nameWithType: ReceiveActivity.ReceiveActivity(String)
  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity(String)
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> classe, l&quot;inizializzazione relativo <xref:System.Workflow.ComponentModel.Activity.Name*>proprietà.</xref:System.Workflow.ComponentModel.Activity.Name*>"
  remarks: "Il <xref:System.Workflow.Activities.ReceiveActivity>costruttore in genere viene richiamato nel file code-beside creato dalla finestra di progettazione del flusso di lavoro.</xref:System.Workflow.Activities.ReceiveActivity>"
  example:
  - "The following example shows how to create a new instance of the <xref:System.Workflow.Activities.ReceiveActivity> class.  \n  \n [!code-cs[ReceiveActivity#12](~/add/codesnippet/csharp/receiveactivity/snippets.cs#12)]"
  syntax:
    content: public ReceiveActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome da assegnare all&quot;istanza di attività."
  overload: System.Workflow.Activities.ReceiveActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Cancel(ActivityExecutionContext)
  nameWithType: ReceiveActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.Cancel(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Da aggiungere."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "Da aggiungere."
  overload: System.Workflow.Activities.ReceiveActivity.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.CanCreateInstance
  id: CanCreateInstance
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: CanCreateInstance
  nameWithType: ReceiveActivity.CanCreateInstance
  fullName: System.Workflow.Activities.ReceiveActivity.CanCreateInstance
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Ottiene o imposta se l&quot;operazione comporta una nuova istanza di servizio del flusso di lavoro da creare."
  remarks: "Oggetto <xref:System.Workflow.Activities.ReceiveActivity>attività con CanCreateInstance impostato su `true` rappresenta un&quot;operazione del servizio che, quando richiamata da un client del servizio senza far parte di una conversazione, causa una nuova istanza del servizio flusso di lavoro creato.</xref:System.Workflow.Activities.ReceiveActivity>       Servizi flussi di lavoro che non dispongono di un <xref:System.Workflow.Activities.ReceiveActivity>attività con CanCreateInstance impostato su `true` non è possibile creare istanze di un client tramite una chiamata a operazioni del servizio.</xref:System.Workflow.Activities.ReceiveActivity> Tali flussi di lavoro può essere create usando il <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>metodo dell&quot;oggetto associato <xref:System.Workflow.Runtime.WorkflowRuntime>oggetto.</xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A>       Il valore predefinito per questa proprietà è `false`."
  example:
  - "The following example shows how to set the `CanCreateInstance` property. This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#0](~/add/codesnippet/csharp/receiveactivity/snippets.cs#0)]"
  syntax:
    content: public bool CanCreateInstance { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se viene creata una nuova istanza del flusso di lavoro; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Activities.ReceiveActivity.CanCreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Context
  id: Context
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Context
  nameWithType: ReceiveActivity.Context
  fullName: System.Workflow.Activities.ReceiveActivity.Context
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Ottiene le informazioni di contesto per questa attività."
  remarks: "Informazioni di contesto vengono utilizzate per la comunicazione tra il client e il servizio con cui sta comunicando e includono elementi come l&quot;identificazione per la correlazione."
  example:
  - "The following example shows how to access the `Context` property.  \n  \n [!code-cs[ReceiveActivity#17](~/add/codesnippet/csharp/receiveactivity/snippets.cs#17)]"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> Context { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Oggetto &lt;xref:System.Collections.Generic.IDictionary%602&gt; oggetto che contiene informazioni di contesto per questa attività."
  overload: System.Workflow.Activities.ReceiveActivity.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.ContextToken
  id: ContextToken
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ContextToken
  nameWithType: ReceiveActivity.ContextToken
  fullName: System.Workflow.Activities.ReceiveActivity.ContextToken
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Rappresenta un token che può essere usato per specificare il contesto che deve essere utilizzato per correlare lo scambio tra un <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> attività e il client che comunica con l&quot;attività."
  remarks: "Ogni ContextToken è definito all&quot;interno dell&quot;ambito di un&quot;attività del proprietario. Gli utenti possono modellare due token del contesto distinti con lo stesso nome ma ambiti del proprietario diversi. Il valore dei contesti associati a questi token di contesto sono diversi in fase di esecuzione.       Per impostazione predefinita, ogni flusso di lavoro è un token del contesto radice implicito, con ambito a livello di attività radice. Il nome del token del contesto radice è &quot;(RootContext)&quot; e <xref:System.Workflow.Activities.ContextToken.OwnerActivityName%2A>è `null`.</xref:System.Workflow.Activities.ContextToken.OwnerActivityName%2A> Se un <xref:System.Workflow.Activities.ReceiveActivity>attività non dispone di un ContextToken associato, viene utilizzato il token del contesto radice.</xref:System.Workflow.Activities.ReceiveActivity>"
  example:
  - "The following code example shows how to access the `ContextToken` property. This code example is adapted from the `Conversations` SDK sample, from the `SupplierWorkflow.Designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#1](~/add/codesnippet/csharp/receiveactivity/snippets.cs#1)]"
  syntax:
    content: public System.Workflow.Activities.ContextToken ContextToken { get; set; }
    return:
      type: System.Workflow.Activities.ContextToken
      description: "Oggetto <xref href=&quot;System.Workflow.Activities.ContextToken&quot;> </xref> che può essere utilizzato per la correlazione."
  overload: System.Workflow.Activities.ReceiveActivity.ContextToken*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ReceiveActivity.Dispose(Boolean)
  fullName: System.Workflow.Activities.ReceiveActivity.Dispose(Boolean)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.Workflow.Activities.ReceiveActivity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: ReceiveActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Da aggiungere."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "Da aggiungere."
  overload: System.Workflow.Activities.ReceiveActivity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessage
  id: FaultMessage
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: FaultMessage
  nameWithType: ReceiveActivity.FaultMessage
  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessage
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Eccezione che viene restituito quando un&quot;attività di ricezione completa l&quot;esecuzione."
  remarks: "Se la proprietà di FaultMessage è impostata su un&quot;istanza del tipo <xref:System.ServiceModel.FaultException>, il messaggio di errore viene restituito al client dopo il completamento.</xref:System.ServiceModel.FaultException>       Se viene generata un&quot;eccezione durante l&quot;esecuzione di attività e la proprietà FaultMessage è impostata, l&quot;errore specificato viene quindi restituito al client. Se viene generata un&quot;eccezione durante l&quot;esecuzione di attività e la proprietà FaultMessage è impostata e l&quot;operazione associata dispone un <xref:System.ServiceModel.FaultContractAttribute>attributo che specifica un tipo di errore che corrisponde a quello della proprietà FaultMessage, quindi il canale non viene interrotta e il client potrà comunque comunicare con il server.</xref:System.ServiceModel.FaultContractAttribute> Se la proprietà FaultMessage non è impostata, viene restituita l&quot;eccezione generata come un errore al client."
  example:
  - "The following code sample shows how to access the `FaultMessage` property.  \n  \n [!code-cs[ReceiveActivity#2](~/add/codesnippet/csharp/receiveactivity/snippets.cs#2)]"
  syntax:
    content: public System.ServiceModel.FaultException FaultMessage { get; set; }
    return:
      type: System.ServiceModel.FaultException
      description: "Oggetto <xref:System.ServiceModel.FaultException>oggetto che contiene il testo del messaggio di errore e i dettagli.</xref:System.ServiceModel.FaultException>"
  overload: System.Workflow.Activities.ReceiveActivity.FaultMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
  id: FaultMessageProperty
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: FaultMessageProperty
  nameWithType: ReceiveActivity.FaultMessageProperty
  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Rappresenta il <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> che fa riferimento il <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage*>proprietà.</xref:System.Workflow.Activities.ReceiveActivity.FaultMessage*>"
  remarks: "Questa proprietà di dipendenza può essere utilizzata per impostare un&quot;associazione tra l&quot;attività di ricezione <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>proprietà e una proprietà/campo pubblico del flusso di lavoro di tipo <xref:System.ServiceModel.FaultException>o proprietà/campo pubblico un&quot;altra attività dello stesso tipo.</xref:System.ServiceModel.FaultException> </xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>       Questa proprietà di dipendenza può inoltre essere utilizzata per impostare il valore associato di <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>proprietà di un <xref:System.Workflow.Activities.ReceiveActivity>attività.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>       Questa proprietà di dipendenza può inoltre essere utilizzata per ottenere l&quot;associazione o valore associato di <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>proprietà del <xref:System.Workflow.Activities.ReceiveActivity>attività.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A>"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty FaultMessageProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)
  id: GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: GetContext(Activity,ContextToken)
  nameWithType: ReceiveActivity.GetContext(Activity,ContextToken)
  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,ContextToken)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Metodo statico che restituisce informazioni di un&quot;istanza di attività e un token del contesto di contesto."
  remarks: "Informazioni di contesto vengono utilizzate per la comunicazione tra il client e il servizio con cui sta comunicando e includono elementi come l&quot;identificazione per la correlazione."
  example:
  - "The following example shows how to use the `GetContext` method.  \n  \n [!code-cs[ReceiveActivity#13](~/add/codesnippet/csharp/receiveactivity/snippets.cs#13)]"
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,string> GetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ContextToken contextToken);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "Istanza di attività richiesto per le informazioni di contesto."
    - id: contextToken
      type: System.Workflow.Activities.ContextToken
      description: "Il token del contesto utilizzato dall&quot;attività."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Raccolta che contiene basata su dizionario <xref:System.Xml.XmlQualifiedName>chiavi e i relativi <xref:System.String>valori.</xref:System.String> </xref:System.Xml.XmlQualifiedName>"
  overload: System.Workflow.Activities.ReceiveActivity.GetContext*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)
  id: GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: GetContext(Activity,String,String)
  nameWithType: ReceiveActivity.GetContext(Activity,String,String)
  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,String,String)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Metodo statico che restituisce informazioni di un&quot;istanza di attività e un token del contesto di contesto."
  remarks: "Informazioni di contesto vengono utilizzate per la comunicazione tra il client e il servizio con cui sta comunicando e includono elementi come l&quot;identificazione per la correlazione."
  example:
  - "The following example shows how to use the `GetContext` method.  \n  \n [!code-cs[ReceiveActivity#15](~/add/codesnippet/csharp/receiveactivity/snippets.cs#15)]"
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,string> GetContext (System.Workflow.ComponentModel.Activity activity, string contextName, string ownerActivityName);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "Istanza di attività richiesto per le informazioni di contesto."
    - id: contextName
      type: System.String
      description: "Nome del token del contesto utilizzato dall&quot;attività."
    - id: ownerActivityName
      type: System.String
      description: "Il nome del nome dell&quot;attività proprietaria."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Una raccolta basata su dizionario che contiene <xref:System.Xml.XmlQualifiedName>chiavi e i relativi <xref:System.String>valori.</xref:System.String> </xref:System.Xml.XmlQualifiedName>"
  overload: System.Workflow.Activities.ReceiveActivity.GetContext*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)
  id: GetRootContext(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: GetRootContext(Activity)
  nameWithType: ReceiveActivity.GetRootContext(Activity)
  fullName: System.Workflow.Activities.ReceiveActivity.GetRootContext(Activity)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Metodo statico che restituisce informazioni di contesto per il contesto radice associato a un&quot;istanza dell&quot;attività specificata. Informazioni di contesto vengono utilizzate per la comunicazione tra un&quot;applicazione host e il servizio del flusso di lavoro."
  remarks: "Informazioni di contesto vengono utilizzate per la comunicazione tra il client e il servizio con cui sta comunicando e includono elementi come l&quot;identificazione per la correlazione."
  example:
  - "The following example shows how to use the `GetRootContext` method.  \n  \n [!code-cs[ReceiveActivity#16](~/add/codesnippet/csharp/receiveactivity/snippets.cs#16)]"
  syntax:
    content: public static System.Collections.Generic.IDictionary<string,string> GetRootContext (System.Workflow.ComponentModel.Activity activity);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "L&quot;istanza dell&quot;attività figlio."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Una raccolta basata su dizionario che contiene <xref:System.Xml.XmlQualifiedName>chiavi e i relativi <xref:System.String>valori che rappresentano informazioni di contesto per un contesto radice.</xref:System.String> </xref:System.Xml.XmlQualifiedName> Per impedire la logica di creazione dell&quot;istanza personalizzato, viene ricevuto il messaggio che genera la creazione di una nuova istanza nel contesto radice."
  overload: System.Workflow.Activities.ReceiveActivity.GetRootContext*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)
  id: GetWorkflowServiceAttributes(System.Object)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: GetWorkflowServiceAttributes(Object)
  nameWithType: ReceiveActivity.GetWorkflowServiceAttributes(Object)
  fullName: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Restituisce il <xref href=&quot;System.Workflow.Activities.WorkflowServiceAttributes&quot;> </xref> attributi per il servizio implementato dal <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> attività. Questi attributi includono elementi come il <> </> *>, il <> </> *>, <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults*>e se includere i dettagli dell&quot;eccezione in tutti gli errori restituiti dal <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> attività.</xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults*>"
  remarks: "Il <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty>proprietà è una proprietà di dipendenza collegata definita dal <xref:System.Workflow.Activities.ReceiveActivity>attività.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> Questa proprietà di dipendenza è associata al flusso di lavoro radice che contiene il <xref:System.Workflow.Activities.ReceiveActivity>attività utilizzando la <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A>chiamata al metodo in fase di progettazione.</xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> </xref:System.Workflow.Activities.ReceiveActivity>       Il <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty>proprietà viene utilizzata per definire gli attributi di comportamento a livello di servizio che vengono applicati per il servizio del flusso di lavoro all&quot;avvio.</xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> Questi non può essere modificati in fase di esecuzione.      > [!NOTE] > Se il flusso di lavoro corrente avvia un altro flusso di lavoro tramite un <xref:System.Workflow.Activities.InvokeWorkflowActivity>attività, il flusso di lavoro richiamato non erediterà gli attributi del servizio il richiamo del flusso di lavoro.</xref:System.Workflow.Activities.InvokeWorkflowActivity>      > [!NOTE] > Se gli attributi del servizio sono impostati per un&quot;attività personalizzata e tale attività è inclusa in un flusso di lavoro, tali attributi del servizio vengono utilizzati. Gli attributi del servizio vengono utilizzati solo per le attività personalizzate, se l&quot;attività personalizzata viene eseguita come un flusso di lavoro."
  example:
  - "The following example shows how to use the `GetWorkflowServiceAttributes` method.  \n  \n [!code-cs[ReceiveActivity#5](~/add/codesnippet/csharp/receiveactivity/snippets.cs#5)]"
  syntax:
    content: public static object GetWorkflowServiceAttributes (object dependencyObject);
    parameters:
    - id: dependencyObject
      type: System.Object
      description: "L&quot;oggetto per recuperare gli attributi del servizio."
    return:
      type: System.Object
      description: "Oggetto <xref:System.Object>che rappresenta un <xref href=&quot;System.Workflow.Activities.WorkflowServiceAttributes&quot;> </xref> oggetto che contiene i dati degli attributi del servizio.</xref:System.Object>"
  overload: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  id: HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.Activities.ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Da aggiungere."
    - id: exception
      type: System.Exception
      description: "Da aggiungere."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "Da aggiungere."
  overload: System.Workflow.Activities.ReceiveActivity.HandleFault*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.Initialize(System.IServiceProvider)
  id: Initialize(System.IServiceProvider)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: Initialize(IServiceProvider)
  nameWithType: ReceiveActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.Activities.ReceiveActivity.Initialize(IServiceProvider)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void Initialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "Da aggiungere."
  overload: System.Workflow.Activities.ReceiveActivity.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.InitializeProperties
  id: InitializeProperties
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: InitializeProperties()
  nameWithType: ReceiveActivity.InitializeProperties()
  fullName: System.Workflow.Activities.ReceiveActivity.InitializeProperties()
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void InitializeProperties ();
    parameters: []
  overload: System.Workflow.Activities.ReceiveActivity.InitializeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: OnSequenceComplete(ActivityExecutionContext)
  nameWithType: ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnSequenceComplete (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Da aggiungere."
  overload: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.OperationValidation
  id: OperationValidation
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: OperationValidation
  nameWithType: ReceiveActivity.OperationValidation
  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidation
  type: Event
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Si verifica quando viene ricevuto un messaggio per un&quot;operazione è necessaria la convalida."
  remarks: "Si tratta di un gestore eventi facoltativo generato quando il <xref:System.Workflow.Activities.ReceiveActivity>attività sta per ricevere un messaggio.</xref:System.Workflow.Activities.ReceiveActivity> Il gestore associato può essere utilizzato per eseguire controlli di sicurezza basati su ClaimSet per autorizzare la chiamata del client dell&quot;operazione del servizio implementata dal <xref:System.Workflow.Activities.ReceiveActivity>attività.</xref:System.Workflow.Activities.ReceiveActivity>       Impostazione <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName>per `false` nell&quot;evento gestore rifiuta la chiamata all&quot;operazione del servizio e il client riceve un <xref:System.ServiceModel.FaultException>.</xref:System.ServiceModel.FaultException> </xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName> Se <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName>è impostato su `true`, quindi la chiamata all&quot;operazione del servizio ha esito positivo e <xref:System.Workflow.Activities.ReceiveActivity>attività riceve ed elabora il messaggio.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=fullName>"
  example:
  - "The following example shows how to use the `OperationValidation` event.  \n  \n [!code-cs[ReceiveActivity#7](~/add/codesnippet/csharp/receiveactivity/snippets.cs#7)]"
  syntax:
    content: public event EventHandler<System.Workflow.Activities.OperationValidationEventArgs> OperationValidation;
    return:
      type: System.EventHandler{System.Workflow.Activities.OperationValidationEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
  id: OperationValidationEvent
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: OperationValidationEvent
  nameWithType: ReceiveActivity.OperationValidationEvent
  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Rappresenta il <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> che fa riferimento il <xref href=&quot;System.Workflow.Activities.ReceiveActivity.OperationValidation&quot;> </xref> evento."
  remarks: "Questa proprietà di evento di dipendenza può essere utilizzata per associare dell&quot;attività di ricezione <xref:System.Workflow.Activities.ReceiveActivity.OperationValidation>evento da un gestore eventi pubblico sulla classe del flusso di lavoro.</xref:System.Workflow.Activities.ReceiveActivity.OperationValidation>"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty OperationValidationEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.ParameterBindings
  id: ParameterBindings
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ParameterBindings
  nameWithType: ReceiveActivity.ParameterBindings
  fullName: System.Workflow.Activities.ReceiveActivity.ParameterBindings
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Ottiene la raccolta di parametri associabili come disponibile nell&quot;elenco di parametri formali del servizio."
  remarks: "ParameterBindings può essere utilizzato per specificare un&quot;associazione tra i parametri dell&quot;operazione del servizio e un campo o proprietà pubbliche del flusso di lavoro che contengono il <xref:System.Workflow.Activities.ReceiveActivity>attività.</xref:System.Workflow.Activities.ReceiveActivity> Quando un client richiama l&quot;operazione, i valori dei parametri corrispondenti vengono scritti per associare le proprietà del flusso di lavoro durante l&quot;esecuzione dell&quot;attività di ricezione.       ParameterBindings anche utilizzabile dalle attività figlio dell&quot;attività di ricezione per leggere i valori di parametro passati dalla chiamata del client. Le attività figlio possono utilizzare l&quot;insieme di ParameterBindings per impostare il valore restituito dell&quot;elemento padre <xref:System.Workflow.Activities.ReceiveActivity>attività.</xref:System.Workflow.Activities.ReceiveActivity>       Tutti i parametri del contratto di servizio devono essere inclusi nel `ParameterBindings` proprietà. Parametri non associati generano avvisi di compilatore all&quot;atto della compilazione e un&quot;eccezione può verificarsi quando il <xref:System.Workflow.Activities.ReceiveActivity>restituisce questo messaggio al client.</xref:System.Workflow.Activities.ReceiveActivity>"
  example:
  - "The following example shows how to access the `ParameterBindings` property. This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#3](~/add/codesnippet/csharp/receiveactivity/snippets.cs#3)]"
  syntax:
    content: public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }
    return:
      type: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
      description: "Il <xref href=&quot;System.Workflow.ComponentModel.WorkflowParameterBindingCollection&quot;> </xref> di parametri associabili."
  overload: System.Workflow.Activities.ReceiveActivity.ParameterBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
  id: ServiceOperationInfo
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: ServiceOperationInfo
  nameWithType: ReceiveActivity.ServiceOperationInfo
  fullName: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Definisce l&quot;operazione di contratto e del servizio che il <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> implementa di attività."
  remarks: "La proprietà ServiceOperationInfo può essere impostata su un&quot;istanza di tipo <xref:System.Workflow.Activities.TypedOperationInfo>o <xref:System.Workflow.Activities.OperationInfo>.</xref:System.Workflow.Activities.OperationInfo> </xref:System.Workflow.Activities.TypedOperationInfo> <xref:System.Workflow.Activities.TypedOperationInfo>può essere usato per configurare un&quot;attività di ricezione utilizzando una classe [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] contratto di servizio.</xref:System.Workflow.Activities.TypedOperationInfo>       Un&quot;istanza di <xref:System.Workflow.Activities.OperationInfo>può essere usato per configurare un&quot;attività di ricezione per lo scenario di contratto del flusso di lavoro-first.</xref:System.Workflow.Activities.OperationInfo>"
  example:
  - "The following example shows how to access the `ServiceOperationInfo` property. This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.  \n  \n [!code-cs[ReceiveActivity#4](~/add/codesnippet/csharp/receiveactivity/snippets.cs#4)]"
  syntax:
    content: public System.Workflow.Activities.OperationInfoBase ServiceOperationInfo { get; set; }
    return:
      type: System.Workflow.Activities.OperationInfoBase
      description: "Un <xref href=&quot;System.Workflow.Activities.OperationInfoBase&quot;> </xref> oggetto che contiene il nome del contratto, il tipo di contratto, l&quot;operazione denominata (che potrebbe essere diverso dal nome del metodo), se l&quot;operazione è un&quot;operazione unidirezionale e informazioni sul metodo, inclusi i parametri sull&quot;operazione."
  overload: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)
  id: SetWorkflowServiceAttributes(System.Object,System.Object)
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: SetWorkflowServiceAttributes(Object,Object)
  nameWithType: ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)
  fullName: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Imposta gli attributi per il servizio implementato dal <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> attività. Questi attributi includono elementi come il <> </> *>, <> </> *> e se includere i dettagli dell&quot;eccezione in tutti gli errori restituiti dal <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> attività."
  remarks: "Il <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty>proprietà è una proprietà di dipendenza collegata definita dal <xref:System.Workflow.Activities.ReceiveActivity>attività.</xref:System.Workflow.Activities.ReceiveActivity> </xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> Questa proprietà di dipendenza è associata al flusso di lavoro radice che contiene il <xref:System.Workflow.Activities.ReceiveActivity>attività utilizzando il metodo SetWorkflowServiceAttributes chiamare in fase di progettazione.</xref:System.Workflow.Activities.ReceiveActivity>       Il <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty>proprietà viene utilizzata per definire gli attributi di comportamento a livello di servizio che vengono applicati per il servizio del flusso di lavoro all&quot;avvio.</xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> Questi non può essere modificati in fase di esecuzione.      > [!NOTE] > Se il flusso di lavoro corrente avvia un altro flusso di lavoro tramite un <xref:System.Workflow.Activities.InvokeWorkflowActivity>attività, il flusso di lavoro richiamato non erediterà gli attributi del servizio il richiamo del flusso di lavoro.</xref:System.Workflow.Activities.InvokeWorkflowActivity>      > [!NOTE] > Se gli attributi del servizio sono impostati per un&quot;attività personalizzata e tale attività è inclusa in un flusso di lavoro, tali attributi del servizio non viene utilizzato. Gli attributi del servizio vengono utilizzati solo nelle attività personalizzate, se l&quot;attività personalizzata viene eseguita come un flusso di lavoro."
  example:
  - "The following example shows how to use the `SetWorkflowServiceAttributes` method.  \n  \n [!code-cs[ReceiveActivity#6](~/add/codesnippet/csharp/receiveactivity/snippets.cs#6)]"
  syntax:
    content: public static void SetWorkflowServiceAttributes (object dependencyObject, object value);
    parameters:
    - id: dependencyObject
      type: System.Object
      description: "Oggetto a cui applicare gli attributi di servizio."
    - id: value
      type: System.Object
      description: "Il <xref href=&quot;System.Workflow.Activities.WorkflowServiceAttributes&quot;> </xref> oggetto che contiene i dati dell&quot;attributo del servizio da applicare."
  overload: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName
  id: System#Workflow#Activities#IEventActivity#QueueName
  isEii: true
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
  type: Property
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Ottiene il nome del <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> in cui l&quot;attività è in attesa per i dati in arrivo."
  syntax:
    content: IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }
    return:
      type: System.IComparable
      description: "Il nome del <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> in cui l&quot;attività è in attesa per i dati in arrivo."
  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  isEii: true
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Crea la sottoscrizione del <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> attività a un evento."
  syntax:
    content: void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);
    parameters:
    - id: parentContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Il <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> che rappresenta l&quot;ambiente di esecuzione del <xref href=&quot;System.Workflow.Activities.ReceiveActivity&quot;> </xref> attività."
    - id: parentEventHandler
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "Il <xref:System.EventHandler>che gestisce l&quot;evento.</xref:System.EventHandler> Questo gestore eventi è di proprietà dell&quot;attività padre."
  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  isEii: true
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Annulla la sottoscrizione di un <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> a un evento."
  syntax:
    content: void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> parentEventHandler);
    parameters:
    - id: parentContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Il <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> che rappresenta l&quot;ambiente di esecuzione del <xref href=&quot;System.Workflow.Activities.WebServiceInputActivity&quot;> </xref> attività."
    - id: parentEventHandler
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "Il <xref:System.EventHandler>che gestisce l&quot;evento.</xref:System.EventHandler> Questo gestore eventi è di proprietà dell&quot;attività padre."
  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  isEii: true
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  nameWithType: ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  syntax:
    content: void IActivityEventListener<QueueEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Da aggiungere."
    - id: e
      type: System.Workflow.ComponentModel.QueueEventArgs
      description: "Da aggiungere."
  overload: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
  id: WorkflowServiceAttributesProperty
  parent: System.Workflow.Activities.ReceiveActivity
  langs:
  - csharp
  name: WorkflowServiceAttributesProperty
  nameWithType: ReceiveActivity.WorkflowServiceAttributesProperty
  fullName: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
  type: Field
  assemblies:
  - System.WorkflowServices
  namespace: System.Workflow.Activities
  summary: "Rappresenta il <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> che fa riferimento il <xref:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*>proprietà.</xref:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*>"
  remarks: "La proprietà WorkflowServiceAttributesProperty è una proprietà di dipendenza collegata definita dal <xref:System.Workflow.Activities.ReceiveActivity>attività.</xref:System.Workflow.Activities.ReceiveActivity> Questa proprietà di dipendenza è associata al flusso di lavoro radice che contiene il <xref:System.Workflow.Activities.ReceiveActivity>attività utilizzando la <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A>chiamata al metodo in fase di progettazione.</xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> </xref:System.Workflow.Activities.ReceiveActivity>       La proprietà WorkflowServiceAttributesProperty viene utilizzata per definire gli attributi di comportamento a livello di servizio che vengono applicati per il servizio del flusso di lavoro all&quot;avvio. Questi non può essere modificati in fase di esecuzione."
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty WorkflowServiceAttributesProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Activities.SequenceActivity
  isExternal: false
  name: System.Workflow.Activities.SequenceActivity
- uid: System.Workflow.Activities.ReceiveActivity.#ctor
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ReceiveActivity()
  nameWithType: ReceiveActivity.ReceiveActivity()
  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity()
- uid: System.Workflow.Activities.ReceiveActivity.#ctor(System.String)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ReceiveActivity(String)
  nameWithType: ReceiveActivity.ReceiveActivity(String)
  fullName: System.Workflow.Activities.ReceiveActivity.ReceiveActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.ReceiveActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Cancel(ActivityExecutionContext)
  nameWithType: ReceiveActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.Cancel(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.ReceiveActivity.CanCreateInstance
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: CanCreateInstance
  nameWithType: ReceiveActivity.CanCreateInstance
  fullName: System.Workflow.Activities.ReceiveActivity.CanCreateInstance
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Activities.ReceiveActivity.Context
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Context
  nameWithType: ReceiveActivity.Context
  fullName: System.Workflow.Activities.ReceiveActivity.Context
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ReceiveActivity.ContextToken
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ContextToken
  nameWithType: ReceiveActivity.ContextToken
  fullName: System.Workflow.Activities.ReceiveActivity.ContextToken
- uid: System.Workflow.Activities.ContextToken
  parent: System.Workflow.Activities
  isExternal: false
  name: ContextToken
  nameWithType: ContextToken
  fullName: System.Workflow.Activities.ContextToken
- uid: System.Workflow.Activities.ReceiveActivity.Dispose(System.Boolean)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ReceiveActivity.Dispose(Boolean)
  fullName: System.Workflow.Activities.ReceiveActivity.Dispose(Boolean)
- uid: System.Workflow.Activities.ReceiveActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: ReceiveActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessage
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: FaultMessage
  nameWithType: ReceiveActivity.FaultMessage
  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessage
- uid: System.ServiceModel.FaultException
  parent: System.ServiceModel
  isExternal: true
  name: FaultException
  nameWithType: FaultException
  fullName: System.ServiceModel.FaultException
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: FaultMessageProperty
  nameWithType: ReceiveActivity.FaultMessageProperty
  fullName: System.Workflow.Activities.ReceiveActivity.FaultMessageProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetContext(Activity,ContextToken)
  nameWithType: ReceiveActivity.GetContext(Activity,ContextToken)
  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,ContextToken)
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetContext(Activity,String,String)
  nameWithType: ReceiveActivity.GetContext(Activity,String,String)
  fullName: System.Workflow.Activities.ReceiveActivity.GetContext(Activity,String,String)
- uid: System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetRootContext(Activity)
  nameWithType: ReceiveActivity.GetRootContext(Activity)
  fullName: System.Workflow.Activities.ReceiveActivity.GetRootContext(Activity)
- uid: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetWorkflowServiceAttributes(Object)
  nameWithType: ReceiveActivity.GetWorkflowServiceAttributes(Object)
  fullName: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.Activities.ReceiveActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.Activities.ReceiveActivity.HandleFault(ActivityExecutionContext,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Workflow.Activities.ReceiveActivity.Initialize(System.IServiceProvider)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Initialize(IServiceProvider)
  nameWithType: ReceiveActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.Activities.ReceiveActivity.Initialize(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.Activities.ReceiveActivity.InitializeProperties
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: InitializeProperties()
  nameWithType: ReceiveActivity.InitializeProperties()
  fullName: System.Workflow.Activities.ReceiveActivity.InitializeProperties()
- uid: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: OnSequenceComplete(ActivityExecutionContext)
  nameWithType: ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(ActivityExecutionContext)
- uid: System.Workflow.Activities.ReceiveActivity.OperationValidation
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: OperationValidation
  nameWithType: ReceiveActivity.OperationValidation
  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidation
- uid: System.EventHandler{System.Workflow.Activities.OperationValidationEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<OperationValidationEventArgs>
  nameWithType: EventHandler<OperationValidationEventArgs>
  fullName: System.EventHandler<System.Workflow.Activities.OperationValidationEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Activities.OperationValidationEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Activities.OperationValidationEventArgs
    name: OperationValidationEventArgs
    nameWithType: OperationValidationEventArgs
    fullName: OperationValidationEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: OperationValidationEvent
  nameWithType: ReceiveActivity.OperationValidationEvent
  fullName: System.Workflow.Activities.ReceiveActivity.OperationValidationEvent
- uid: System.Workflow.Activities.ReceiveActivity.ParameterBindings
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: ReceiveActivity.ParameterBindings
  fullName: System.Workflow.Activities.ReceiveActivity.ParameterBindings
- uid: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: WorkflowParameterBindingCollection
  nameWithType: WorkflowParameterBindingCollection
  fullName: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
- uid: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ServiceOperationInfo
  nameWithType: ReceiveActivity.ServiceOperationInfo
  fullName: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo
- uid: System.Workflow.Activities.OperationInfoBase
  parent: System.Workflow.Activities
  isExternal: false
  name: OperationInfoBase
  nameWithType: OperationInfoBase
  fullName: System.Workflow.Activities.OperationInfoBase
- uid: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: SetWorkflowServiceAttributes(Object,Object)
  nameWithType: ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)
  fullName: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(Object,Object)
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
- uid: System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: IActivityEventListener<QueueEventArgs>
  nameWithType: IActivityEventListener<QueueEventArgs>
  fullName: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  spec.csharp:
  - uid: System.Workflow.ComponentModel.IActivityEventListener`1
    name: IActivityEventListener
    nameWithType: IActivityEventListener
    fullName: IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.QueueEventArgs
    name: QueueEventArgs
    nameWithType: QueueEventArgs
    fullName: QueueEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe(ActivityExecutionContext,IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  nameWithType: ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
  fullName: System.Workflow.Activities.ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,QueueEventArgs)
- uid: System.Workflow.ComponentModel.QueueEventArgs
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: QueueEventArgs
  nameWithType: QueueEventArgs
  fullName: System.Workflow.ComponentModel.QueueEventArgs
- uid: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: WorkflowServiceAttributesProperty
  nameWithType: ReceiveActivity.WorkflowServiceAttributesProperty
  fullName: System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty
- uid: System.Workflow.Activities.ReceiveActivity.#ctor*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ReceiveActivity
  nameWithType: ReceiveActivity.ReceiveActivity
- uid: System.Workflow.Activities.ReceiveActivity.Cancel*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Cancel
  nameWithType: ReceiveActivity.Cancel
- uid: System.Workflow.Activities.ReceiveActivity.CanCreateInstance*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: CanCreateInstance
  nameWithType: ReceiveActivity.CanCreateInstance
- uid: System.Workflow.Activities.ReceiveActivity.Context*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Context
  nameWithType: ReceiveActivity.Context
- uid: System.Workflow.Activities.ReceiveActivity.ContextToken*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ContextToken
  nameWithType: ReceiveActivity.ContextToken
- uid: System.Workflow.Activities.ReceiveActivity.Dispose*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Dispose
  nameWithType: ReceiveActivity.Dispose
- uid: System.Workflow.Activities.ReceiveActivity.Execute*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Execute
  nameWithType: ReceiveActivity.Execute
- uid: System.Workflow.Activities.ReceiveActivity.FaultMessage*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: FaultMessage
  nameWithType: ReceiveActivity.FaultMessage
- uid: System.Workflow.Activities.ReceiveActivity.GetContext*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetContext
  nameWithType: ReceiveActivity.GetContext
- uid: System.Workflow.Activities.ReceiveActivity.GetRootContext*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetRootContext
  nameWithType: ReceiveActivity.GetRootContext
- uid: System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: GetWorkflowServiceAttributes
  nameWithType: ReceiveActivity.GetWorkflowServiceAttributes
- uid: System.Workflow.Activities.ReceiveActivity.HandleFault*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: HandleFault
  nameWithType: ReceiveActivity.HandleFault
- uid: System.Workflow.Activities.ReceiveActivity.Initialize*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: Initialize
  nameWithType: ReceiveActivity.Initialize
- uid: System.Workflow.Activities.ReceiveActivity.InitializeProperties*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: InitializeProperties
  nameWithType: ReceiveActivity.InitializeProperties
- uid: System.Workflow.Activities.ReceiveActivity.OnSequenceComplete*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: OnSequenceComplete
  nameWithType: ReceiveActivity.OnSequenceComplete
- uid: System.Workflow.Activities.ReceiveActivity.ParameterBindings*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: ReceiveActivity.ParameterBindings
- uid: System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: ServiceOperationInfo
  nameWithType: ReceiveActivity.ServiceOperationInfo
- uid: System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: SetWorkflowServiceAttributes
  nameWithType: ReceiveActivity.SetWorkflowServiceAttributes
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.QueueName
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.QueueName
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Subscribe
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Subscribe
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.Activities.IEventActivity.Unsubscribe
  nameWithType: ReceiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe
- uid: System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#QueueEventArgs>#OnEvent*
  parent: System.Workflow.Activities.ReceiveActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent
  nameWithType: ReceiveActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>.OnEvent
