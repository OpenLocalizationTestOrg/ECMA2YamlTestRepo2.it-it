### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.MethodRental
  id: MethodRental
  children:
  - System.Reflection.Emit.MethodRental.JitImmediate
  - System.Reflection.Emit.MethodRental.JitOnDemand
  - System.Reflection.Emit.MethodRental.SwapMethodBody(System.Type,System.Int32,System.IntPtr,System.Int32,System.Int32)
  - System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  langs:
  - csharp
  name: MethodRental
  nameWithType: MethodRental
  fullName: System.Reflection.Emit.MethodRental
  type: Class
  summary: "Fornisce un modo rapido per sostituire l&quot;implementazione del corpo del metodo in presenza di un metodo di una classe."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._MethodRental))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class MethodRental : System.Runtime.InteropServices._MethodRental
  inheritance:
  - System.Object
  implements:
  - System.Runtime.InteropServices._MethodRental
  inheritedMembers: []
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.JitImmediate
  id: JitImmediate
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: JitImmediate
  nameWithType: MethodRental.JitImmediate
  fullName: System.Reflection.Emit.MethodRental.JitImmediate
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Specifica che il metodo deve essere just-in-time (JIT) compilati immediatamente."
  syntax:
    content: public const int JitImmediate = 1;
    return:
      type: System.Int32
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.JitOnDemand
  id: JitOnDemand
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: JitOnDemand
  nameWithType: MethodRental.JitOnDemand
  fullName: System.Reflection.Emit.MethodRental.JitOnDemand
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Specifica che il metodo deve essere just-in-time (JIT) compilati quando necessario."
  syntax:
    content: public const int JitOnDemand = 0;
    return:
      type: System.Int32
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.SwapMethodBody(System.Type,System.Int32,System.IntPtr,System.Int32,System.Int32)
  id: SwapMethodBody(System.Type,System.Int32,System.IntPtr,System.Int32,System.Int32)
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  nameWithType: MethodRental.SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  fullName: System.Reflection.Emit.MethodRental.SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Scambia il corpo di un metodo."
  remarks: "È possibile utilizzare questo metodo per scambiare il corpo di un metodo globale.       Il metodo può essere chiamato solo da client che ha creato il modulo dinamico che contiene il tipo di corpo del metodo con cui viene eseguita l&quot;inversione."
  example:
  - "The following example illustrates how to swap a method body for a new body. It also illustrates how to obtain a method token for an existing method and how to construct a blob of bytes representing the Microsoft Intermediate Language (MSIL) code to be passed to `SwapMethodBody`.  \n  \n [!code-cpp[Classic MethodRental.SwapMethodBody Example#1](~/add/codesnippet/cpp/cc436dde-ab12-4c7e-9169-_1.cpp)]\n [!code-cs[Classic MethodRental.SwapMethodBody Example#1](~/add/codesnippet/csharp/cc436dde-ab12-4c7e-9169-_1.cs)]\n [!code-vb[Classic MethodRental.SwapMethodBody Example#1](~/add/codesnippet/visualbasic/cc436dde-ab12-4c7e-9169-_1.vb)]"
  syntax:
    content: public static void SwapMethodBody (Type cls, int methodtoken, IntPtr rgIL, int methodSize, int flags);
    parameters:
    - id: cls
      type: System.Type
      description: "La classe che contiene il metodo."
    - id: methodtoken
      type: System.Int32
      description: "Il token per il metodo."
    - id: rgIL
      type: System.IntPtr
      description: "Puntatore al metodo. Deve includere l&quot;intestazione del metodo."
    - id: methodSize
      type: System.Int32
      description: "Le dimensioni del corpo del metodo nuovo in byte."
    - id: flags
      type: System.Int32
      description: "Flag che controllano lo scambio. Visualizzare le definizioni delle costanti."
  overload: System.Reflection.Emit.MethodRental.SwapMethodBody*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cls</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il tipo <code> cls </code> non è stata completata."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>methodSize</code>è minore di 1 o maggiore di 4128767 (3effff in formato esadecimale)."
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_MethodRental#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Esegue il mapping di un set di nomi a un set corrispondente di ID dispatch."
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito. Per ulteriori informazioni su `IDispatch::GetIDsOfNames`, vedere MSDN Library."
  syntax:
    content: void _MethodRental.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "Riservato per utilizzo futuro. Deve essere IID_NULL."
    - id: rgszNames
      type: System.IntPtr
      description: "Passata matrice di nomi di cui eseguire il mapping."
    - id: cNames
      type: System.UInt32
      description: "Conteggio dei nomi di cui eseguire il mapping."
    - id: lcid
      type: System.UInt32
      description: "Contesto in cui interpretare i nomi delle impostazioni locali."
    - id: rgDispId
      type: System.IntPtr
      description: "Matrice allocata dal chiamante che riceve gli ID corrispondenti ai nomi."
  overload: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Il metodo viene chiamato ad associazione tardiva usando il modello COM `IDispatch` interfaccia."
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_MethodRental#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Recupera le informazioni sul tipo per un oggetto che può quindi essere usato per ottenere le informazioni sul tipo per un&quot;interfaccia."
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito. Per ulteriori informazioni su `IDispatch::GetTypeInfo`, vedere MSDN Library."
  syntax:
    content: void _MethodRental.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "Le informazioni sul tipo da restituire."
    - id: lcid
      type: System.UInt32
      description: "Identificatore delle impostazioni locali per le informazioni sul tipo."
    - id: ppTInfo
      type: System.IntPtr
      description: "Riceve un puntatore all&quot;oggetto informazioni sul tipo richiesto."
  overload: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Il metodo viene chiamato ad associazione tardiva usando il modello COM `IDispatch` interfaccia."
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Recupera il numero di interfacce di informazioni sul tipo fornite da un oggetto (0 o 1)."
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito. Per ulteriori informazioni su `IDispatch::GetTypeInfoCount`, vedere MSDN Library."
  syntax:
    content: void _MethodRental.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "Punta a una posizione che riceve il numero di interfacce di informazioni sul tipo fornite dall&quot;oggetto."
  overload: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Il metodo viene chiamato ad associazione tardiva usando il modello COM `IDispatch` interfaccia."
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_MethodRental#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Fornisce l&quot;accesso a proprietà e metodi esposti da un oggetto."
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito. Per ulteriori informazioni su `IDispatch::Invoke`, vedere MSDN Library."
  syntax:
    content: void _MethodRental.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "Identifica il membro."
    - id: riid
      type: System.Guid
      description: "Riservato per utilizzo futuro. Deve essere IID_NULL."
    - id: lcid
      type: System.UInt32
      description: "Contesto delle impostazioni locali in cui interpretare gli argomenti."
    - id: wFlags
      type: System.Int16
      description: "Flag che descrivono il contesto della chiamata."
    - id: pDispParams
      type: System.IntPtr
      description: "Puntatore a una struttura contenente una matrice di argomenti, una matrice di DISPID per argomenti denominati e i conteggi del numero di elementi nelle matrici."
    - id: pVarResult
      type: System.IntPtr
      description: "Puntatore alla posizione in cui il risultato viene archiviato."
    - id: pExcepInfo
      type: System.IntPtr
      description: "Puntatore a una struttura contenente informazioni sull&quot;eccezione."
    - id: puArgErr
      type: System.IntPtr
      description: "L&quot;indice del primo argomento che contiene un errore."
  overload: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "Il metodo viene chiamato ad associazione tardiva usando il modello COM `IDispatch` interfaccia."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.Reflection.Emit.MethodRental.JitImmediate
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: JitImmediate
  nameWithType: MethodRental.JitImmediate
  fullName: System.Reflection.Emit.MethodRental.JitImmediate
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.MethodRental.JitOnDemand
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: JitOnDemand
  nameWithType: MethodRental.JitOnDemand
  fullName: System.Reflection.Emit.MethodRental.JitOnDemand
- uid: System.Reflection.Emit.MethodRental.SwapMethodBody(System.Type,System.Int32,System.IntPtr,System.Int32,System.Int32)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  nameWithType: MethodRental.SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  fullName: System.Reflection.Emit.MethodRental.SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Reflection.Emit.MethodRental.SwapMethodBody*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: SwapMethodBody
  nameWithType: MethodRental.SwapMethodBody
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetIDsOfNames
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfo
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfoCount
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.Invoke
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.Invoke
