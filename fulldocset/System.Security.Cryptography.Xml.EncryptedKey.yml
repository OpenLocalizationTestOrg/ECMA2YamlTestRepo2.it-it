### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.EncryptedKey
  id: EncryptedKey
  children:
  - System.Security.Cryptography.Xml.EncryptedKey.#ctor
  - System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)
  - System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)
  - System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
  - System.Security.Cryptography.Xml.EncryptedKey.GetXml
  - System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.EncryptedKey.Recipient
  - System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
  langs:
  - csharp
  name: EncryptedKey
  nameWithType: EncryptedKey
  fullName: System.Security.Cryptography.Xml.EncryptedKey
  type: Class
  summary: "Rappresenta il <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> elemento nella crittografia XML. Questa classe non può essere ereditata."
  remarks: "Questa classe rappresenta il `<EncryptedKey>` elemento nella crittografia XML. Il `<EncryptedKey>` elemento viene usato per inviare le chiavi di crittografia. Possono essere creato in un documento XML autonomo, si trovino all&quot;interno del documento dell&quot;applicazione o essere all&quot;interno di un `<EncryptedData>` come elemento figlio di un `<KeyInfo>` elemento. Il valore della chiave è sempre crittografato al destinatario. Quando `<EncryptedKey>` viene decrittografato, la chiave risultante viene resa disponibile per il `<EncryptionMethod>` algoritmo senza altre elaborazioni.       Il `<EncryptedKey>` è simile all&quot;elemento di `<EncryptedData>` elemento della <xref:System.Security.Cryptography.Xml.EncryptedData>classe ad eccezione del fatto che i dati crittografati sono sempre un valore di chiave.</xref:System.Security.Cryptography.Xml.EncryptedData>"
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the EncryptedKey class. This example then displays the values of various properties of the EncryptedKey class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/t-system.security.crypto_46_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_46_1.vb)]"
  syntax:
    content: 'public sealed class EncryptedKey : System.Security.Cryptography.Xml.EncryptedType'
  inheritance:
  - System.Object
  - System.Security.Cryptography.Xml.EncryptedType
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  - System.Security.Cryptography.Xml.EncryptedType.CipherData
  - System.Security.Cryptography.Xml.EncryptedType.Encoding
  - System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  - System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  - System.Security.Cryptography.Xml.EncryptedType.Id
  - System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  - System.Security.Cryptography.Xml.EncryptedType.MimeType
  - System.Security.Cryptography.Xml.EncryptedType.Type
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: EncryptedKey()
  nameWithType: EncryptedKey.EncryptedKey()
  fullName: System.Security.Cryptography.Xml.EncryptedKey.EncryptedKey()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.Xml.EncryptedKey&quot;> </xref> classe."
  remarks: "Questo costruttore crea una nuova istanza della <xref:System.Security.Cryptography.Xml.EncryptedKey>classe.</xref:System.Security.Cryptography.Xml.EncryptedKey> Per ulteriori informazioni sugli standard di crittografia XML, vedere il documento XML Encryption Syntax and Processing http://www.w3.org/TR/xmlenc-core/."
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/m-system.security.crypto_82_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_82_1.vb)]"
  syntax:
    content: public EncryptedKey ();
    parameters: []
  overload: System.Security.Cryptography.Xml.EncryptedKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)
  id: AddReference(System.Security.Cryptography.Xml.DataReference)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: AddReference(DataReference)
  nameWithType: EncryptedKey.AddReference(DataReference)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(DataReference)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Aggiunge un <xref uid=&quot;langword_csharp_&lt;DataReference&gt; &quot; name=&quot;&lt;DataReference&gt; &quot; href=&quot;&quot;> </xref>elemento per il <xref uid=&quot;langword_csharp_&lt;ReferenceList&gt;&quot; name=&quot;&lt;ReferenceList&gt;&quot; href=&quot;&quot;> </xref> elemento."
  remarks: "Questo metodo aggiunge un <xref:System.Security.Cryptography.Xml.DataReference>dell&quot;oggetto per il <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A>proprietà del <xref:System.Security.Cryptography.Xml.EncryptedKey>oggetto.</xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> </xref:System.Security.Cryptography.Xml.DataReference> Il `<DataReference>` elemento punta ai dati crittografati che è stati crittografati utilizzando la chiave specificata nel `<EncryptedKey>` elemento."
  syntax:
    content: public void AddReference (System.Security.Cryptography.Xml.DataReference dataReference);
    parameters:
    - id: dataReference
      type: System.Security.Cryptography.Xml.DataReference
      description: "Oggetto <xref href=&quot;System.Security.Cryptography.Xml.DataReference&quot;> </xref> oggetto da aggiungere al <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*>proprietà.</xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*>"
  overload: System.Security.Cryptography.Xml.EncryptedKey.AddReference*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)
  id: AddReference(System.Security.Cryptography.Xml.KeyReference)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: AddReference(KeyReference)
  nameWithType: EncryptedKey.AddReference(KeyReference)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(KeyReference)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Aggiunge un <xref uid=&quot;langword_csharp_&lt;KeyReference&gt; &quot; name=&quot;&lt;KeyReference&gt; &quot; href=&quot;&quot;> </xref>elemento per il <xref uid=&quot;langword_csharp_&lt;ReferenceList&gt;&quot; name=&quot;&lt;ReferenceList&gt;&quot; href=&quot;&quot;> </xref> elemento."
  remarks: "Questo metodo aggiunge un <xref:System.Security.Cryptography.Xml.KeyReference>dell&quot;oggetto per il <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A>proprietà del <xref:System.Security.Cryptography.Xml.EncryptedKey>oggetto.</xref:System.Security.Cryptography.Xml.EncryptedKey> </xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList%2A> </xref:System.Security.Cryptography.Xml.KeyReference> Il `<KeyReference>` elemento punta a una chiave crittografata che era stata crittografata utilizzando la chiave specificata nel `<EncryptedKey>` elemento."
  syntax:
    content: public void AddReference (System.Security.Cryptography.Xml.KeyReference keyReference);
    parameters:
    - id: keyReference
      type: System.Security.Cryptography.Xml.KeyReference
      description: "Oggetto <xref href=&quot;System.Security.Cryptography.Xml.KeyReference&quot;> </xref> oggetto da aggiungere al <xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*>proprietà.</xref:System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*>"
  overload: System.Security.Cryptography.Xml.EncryptedKey.AddReference*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
  id: CarriedKeyName
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: CarriedKeyName
  nameWithType: EncryptedKey.CarriedKeyName
  fullName: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ottiene o imposta l&quot;opzione facoltativa <xref uid=&quot;langword_csharp_&lt;CarriedKeyName&gt;&quot; name=&quot;&lt;CarriedKeyName&gt;&quot; href=&quot;&quot;> </xref> elemento nella crittografia XML."
  remarks: "Il `<CarriedKeyName>` è un elemento facoltativo che associa un nome leggibile dall&quot;utente a un valore di chiave. Questo nome può quindi essere utilizzato per fare riferimento la chiave usando il `<KeyName>` elemento all&quot;interno di `<KeyInfo>` elemento. Lo stesso `<CarriedKeyName>` valore dell&quot;elemento, a differenza di un valore di ID, può ricorrere più volte all&quot;interno di un singolo documento. Il valore della chiave deve essere uguale per tutti `<EncryptedKey>` elementi identificati con lo stesso `<CarriedKeyName>` nome all&quot;interno di un documento XML. Si noti che, poiché lo spazio vuoto è significativo nel valore della `<KeyName>` elemento, gli spazi vuoti è significativo nel valore della `<CarriedKeyName>` elemento."
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/p-system.security.crypto_109_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_109_1.vb)]"
  syntax:
    content: public string CarriedKeyName { get; set; }
    return:
      type: System.String
      description: "Stringa che rappresenta un nome per il valore della chiave."
  overload: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: GetXml()
  nameWithType: EncryptedKey.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptedKey.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Restituisce la rappresentazione XML del <xref href=&quot;System.Security.Cryptography.Xml.EncryptedKey&quot;> </xref> oggetto."
  remarks: "Utilizzare questo metodo per restituire il `<EncryptedKey>` elemento nello schema XML."
  syntax:
    content: public override System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "Un <xref href=&quot;System.Xml.XmlElement&quot;> </xref> che rappresenta il <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> elemento nella crittografia XML."
  overload: System.Security.Cryptography.Xml.EncryptedKey.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <xref href=&quot;System.Security.Cryptography.Xml.EncryptedKey&quot;></xref> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: EncryptedKey.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Carica le informazioni XML nel <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> elemento nella crittografia XML."
  remarks: "Utilizzare questo metodo per caricare un elemento XML esistente nel `<EncryptedKey>` elemento rappresentato dal <xref:System.Security.Cryptography.Xml.EncryptedData>oggetto.</xref:System.Security.Cryptography.Xml.EncryptedData>"
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/m-system.security.crypto_79_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_79_1.vb)]"
  syntax:
    content: public override void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "Un <xref href=&quot;System.Xml.XmlElement&quot;> </xref> che rappresenta un elemento XML da utilizzare per il <xref uid=&quot;langword_csharp_&lt;EncryptedKey&gt;&quot; name=&quot;&lt;EncryptedKey&gt;&quot; href=&quot;&quot;> </xref> elemento."
  overload: System.Security.Cryptography.Xml.EncryptedKey.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il <code> value </code> parametro non contiene un <xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;> </xref> elemento."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.Recipient
  id: Recipient
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: Recipient
  nameWithType: EncryptedKey.Recipient
  fullName: System.Security.Cryptography.Xml.EncryptedKey.Recipient
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ottiene o imposta l&quot;opzione facoltativa <xref uid=&quot;langword_csharp_Recipient&quot; name=&quot;Recipient&quot; href=&quot;&quot;> </xref> attributo nella crittografia XML."
  remarks: "Il `<Recipient>` attributo è un attributo facoltativo che contiene informazioni su quale destinatario a cui è destinato questo valore della chiave crittografato. Il relativo contenuto è dipende dall&quot;applicazione."
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/p-system.security.crypto_92_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_92_1.vb)]"
  syntax:
    content: public string Recipient { get; set; }
    return:
      type: System.String
      description: "Stringa che rappresenta il valore di <xref uid=&quot;langword_csharp_Recipient&quot; name=&quot;Recipient&quot; href=&quot;&quot;> </xref> attributo."
  overload: System.Security.Cryptography.Xml.EncryptedKey.Recipient*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
  id: ReferenceList
  parent: System.Security.Cryptography.Xml.EncryptedKey
  langs:
  - csharp
  name: ReferenceList
  nameWithType: EncryptedKey.ReferenceList
  fullName: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ottiene o imposta il <xref uid=&quot;langword_csharp_&lt;ReferenceList&gt;&quot; name=&quot;&lt;ReferenceList&gt;&quot; href=&quot;&quot;> </xref> elemento nella crittografia XML."
  remarks: "Il `<ReferenceList>` elemento è un elemento facoltativo che contiene puntatori ai dati e le chiavi crittografate utilizzando questa chiave. L&quot;elenco di riferimento può contenere più riferimenti per il `<EncryptedKey>`e `<EncryptedData>` elementi utilizzando il `<KeyReference>` e `<DataReference>` elementi rispettivamente."
  example:
  - "The following example illustrates how to encrypt and decrypt an XML element by using the <xref:System.Security.Cryptography.Xml.EncryptedKey> class. This example then displays the values of various properties of the <xref:System.Security.Cryptography.Xml.EncryptedKey> class to the console.  \n  \n [!code-cs[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/csharp/p-system.security.crypto_50_1.cs)]\n [!code-vb[Cryptography.XML.EncryptedKey#1](~/add/codesnippet/visualbasic/p-system.security.crypto_50_1.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.ReferenceList ReferenceList { get; }
    return:
      type: System.Security.Cryptography.Xml.ReferenceList
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.ReferenceList&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: System.Security.Cryptography.Xml.EncryptedType
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.EncryptedKey.#ctor
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: EncryptedKey()
  nameWithType: EncryptedKey.EncryptedKey()
  fullName: System.Security.Cryptography.Xml.EncryptedKey.EncryptedKey()
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.DataReference)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: AddReference(DataReference)
  nameWithType: EncryptedKey.AddReference(DataReference)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(DataReference)
- uid: System.Security.Cryptography.Xml.DataReference
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: DataReference
  nameWithType: DataReference
  fullName: System.Security.Cryptography.Xml.DataReference
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference(System.Security.Cryptography.Xml.KeyReference)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: AddReference(KeyReference)
  nameWithType: EncryptedKey.AddReference(KeyReference)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.AddReference(KeyReference)
- uid: System.Security.Cryptography.Xml.KeyReference
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: KeyReference
  nameWithType: KeyReference
  fullName: System.Security.Cryptography.Xml.KeyReference
- uid: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: CarriedKeyName
  nameWithType: EncryptedKey.CarriedKeyName
  fullName: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.EncryptedKey.GetXml
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: GetXml()
  nameWithType: EncryptedKey.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptedKey.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: EncryptedKey.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptedKey.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.EncryptedKey.Recipient
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: Recipient
  nameWithType: EncryptedKey.Recipient
  fullName: System.Security.Cryptography.Xml.EncryptedKey.Recipient
- uid: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: ReferenceList
  nameWithType: EncryptedKey.ReferenceList
  fullName: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList
- uid: System.Security.Cryptography.Xml.ReferenceList
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: ReferenceList
  nameWithType: ReferenceList
  fullName: System.Security.Cryptography.Xml.ReferenceList
- uid: System.Security.Cryptography.Xml.EncryptedKey.#ctor*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: EncryptedKey
  nameWithType: EncryptedKey.EncryptedKey
- uid: System.Security.Cryptography.Xml.EncryptedKey.AddReference*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: AddReference
  nameWithType: EncryptedKey.AddReference
- uid: System.Security.Cryptography.Xml.EncryptedKey.CarriedKeyName*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: CarriedKeyName
  nameWithType: EncryptedKey.CarriedKeyName
- uid: System.Security.Cryptography.Xml.EncryptedKey.GetXml*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: GetXml
  nameWithType: EncryptedKey.GetXml
- uid: System.Security.Cryptography.Xml.EncryptedKey.LoadXml*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: LoadXml
  nameWithType: EncryptedKey.LoadXml
- uid: System.Security.Cryptography.Xml.EncryptedKey.Recipient*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: Recipient
  nameWithType: EncryptedKey.Recipient
- uid: System.Security.Cryptography.Xml.EncryptedKey.ReferenceList*
  parent: System.Security.Cryptography.Xml.EncryptedKey
  isExternal: false
  name: ReferenceList
  nameWithType: EncryptedKey.ReferenceList
