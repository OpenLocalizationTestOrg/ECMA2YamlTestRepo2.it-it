### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.ProfileBase
  id: ProfileBase
  children:
  - System.Web.Profile.ProfileBase.#ctor
  - System.Web.Profile.ProfileBase.Create(System.String)
  - System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)
  - System.Web.Profile.ProfileBase.GetProfileGroup(System.String)
  - System.Web.Profile.ProfileBase.GetPropertyValue(System.String)
  - System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)
  - System.Web.Profile.ProfileBase.IsAnonymous
  - System.Web.Profile.ProfileBase.IsDirty
  - System.Web.Profile.ProfileBase.Item(System.String)
  - System.Web.Profile.ProfileBase.LastActivityDate
  - System.Web.Profile.ProfileBase.LastUpdatedDate
  - System.Web.Profile.ProfileBase.Properties
  - System.Web.Profile.ProfileBase.Save
  - System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)
  - System.Web.Profile.ProfileBase.UserName
  langs:
  - csharp
  name: ProfileBase
  nameWithType: ProfileBase
  fullName: System.Web.Profile.ProfileBase
  type: Class
  summary: "Fornisce l&quot;accesso non tipizzato ai valori delle proprietà del profilo e le informazioni."
  remarks: "ASP.NET usa la classe ProfileBase per creare la classe utilizzata per il profilo utente. Quando viene avviata un&quot;applicazione che ha attivato il profilo utente, ASP.NET crea una nuova classe di tipo `ProfileCommon`, che eredita dalla classe ProfileBase. Funzioni di accesso fortemente tipizzate vengono aggiunti per la `ProfileCommon` classe per ogni proprietà definita nella sezione di configurazione. Funzioni di accesso fortemente tipizzate del `ProfileCommon` classe chiamata il <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A>e <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A>metodi di ProfileBase classe di base per recuperare e impostare rispettivamente i valori delle proprietà profilo.</xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> </xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> Un&quot;istanza di `ProfileCommon` classe è impostata come valore del <xref:System.Web.HttpContext.Profile%2A>proprietà per l&quot;applicazione ASP.NET.</xref:System.Web.HttpContext.Profile%2A>       Per creare un&quot;istanza di un profilo utente in un&quot;applicazione ASP.NET, è consigliabile utilizzare il <xref:System.Web.Profile.ProfileBase.Create%2A>metodo.</xref:System.Web.Profile.ProfileBase.Create%2A>"
  example:
  - "The following code example shows a Web.config file that specifies a user profile that contains a `ZipCode` property of type `string` and a `RecentSearchList` property of type <xref:System.Collections.Specialized.StringCollection>. The generated <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> will have strongly typed accessors for each of the specified properties.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <anonymousIdentification enabled=\"true\" />  \n  \n    <profile enabled=\"true\" defaultProvider=\"SqlProvider\" >  \n      <properties>  \n        <add name=\"ZipCode\" allowAnonymous=\"true\" />  \n        <add name=\"RecentSearchList\"  \n          type=\"System.Collections.Specialized.StringCollection\"  \n          serializeAs=\"Xml\"  \n          allowAnonymous=\"true\" />  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows an ASP.NET page that reads and sets the `ZipCode` property specified for the user profile. Before attempting to run this code, set the provider to the default `AspNetSqlProvider` in the ASP.NET configuration settings for the Web site.  \n  \n [!code-vb[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/visualbasic/t-system.web.profile.pro_9_1.aspx)]\n [!code-cs[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/csharp/t-system.web.profile.pro_9_1.aspx)]  \n  \n The following code example defines a class that inherits from the ProfileBase class to create a custom profile. The type of the custom profile is specified in the `inherits` attribute of the  configuration element in the Web.config file for an application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileBase#1](~/add/codesnippet/csharp/t-system.web.profile.pro_9_2.cs)]\n [!code-vb[System.Web.Profile.ProfileBase#1](~/add/codesnippet/visualbasic/t-system.web.profile.pro_9_2.vb)]"
  syntax:
    content: 'public class ProfileBase : System.Configuration.SettingsBase'
  inheritance:
  - System.Object
  - System.Configuration.SettingsBase
  implements: []
  inheritedMembers:
  - System.Configuration.SettingsBase.Context
  - System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  - System.Configuration.SettingsBase.IsSynchronized
  - System.Configuration.SettingsBase.PropertyValues
  - System.Configuration.SettingsBase.Providers
  - System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.#ctor
  id: '#ctor'
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: ProfileBase()
  nameWithType: ProfileBase.ProfileBase()
  fullName: System.Web.Profile.ProfileBase.ProfileBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Crea un&quot;istanza di <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref> classe."
  remarks: "ASP.NET usa il <xref:System.Web.Profile.ProfileBase>classe per creare la classe utilizzata per il profilo utente.</xref:System.Web.Profile.ProfileBase> Quando viene avviata un&quot;applicazione che ha attivato il profilo utente, ASP.NET crea una nuova classe di tipo `ProfileCommon`, che eredita dalla <xref:System.Web.Profile.ProfileBase>classe.</xref:System.Web.Profile.ProfileBase> Funzioni di accesso fortemente tipizzate vengono aggiunti per la `ProfileCommon` classe per ogni proprietà definita nella sezione di configurazione. Funzioni di accesso fortemente tipizzate del `ProfileCommon` classe chiamata il <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A>e <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A>metodi la <xref:System.Web.Profile.ProfileBase>classe di base per recuperare e impostare rispettivamente i valori delle proprietà profilo.</xref:System.Web.Profile.ProfileBase> </xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> </xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> Un&quot;istanza di `ProfileCommon` classe è impostata come valore del <xref:System.Web.HttpContext.Profile%2A>proprietà per l&quot;applicazione ASP.NET.</xref:System.Web.HttpContext.Profile%2A>      > [!NOTE] > La classe base utilizzata per generare la classe archiviata nella <xref:System.Web.HttpContext.Profile%2A>proprietà può essere sottoposto a override utilizzando il `inherits` attributo della sezione del file di configurazione.</xref:System.Web.HttpContext.Profile%2A> In questo caso si specificherà una classe personalizzata che eredita dalla <xref:System.Web.Profile.ProfileBase>classe base.</xref:System.Web.Profile.ProfileBase>       Questo costruttore non è destinato a essere utilizzato dal codice dell&quot;applicazione. Per creare un&quot;istanza di un profilo utente, utilizzare il <xref:System.Web.Profile.ProfileBase.Create%2A>metodo.</xref:System.Web.Profile.ProfileBase.Create%2A>"
  example:
  - "The following Web.config file specifies a user profile that contains a `ZipCode` property of type `string` and a `RecentSearchList` property of type <xref:System.Collections.Specialized.StringCollection>. The generated <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> will have strongly typed accessors for each of the specified properties.  \n  \n```  \n<configuration>  \n   <connectionStrings>  \n       <add name=\"SqlServices\" connectionString=\"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n   </connectionStrings>  \n  \n  <system.web>  \n   <anonymousIdentification enabled=\"true\" />  \n  \n   <profile defaultProvider=\"SqlProvider\" >  \n     <providers>  \n       <add  \n         name=\"SqlProvider\"  \n         connectionStringName=\"SqlServices\"  \n         applicationName=\"ProfileBaseApplication\"  \n         type=\"System.Web.Profile.SqlProfileProvider\" />  \n     </providers>  \n  \n     <properties>  \n       <add name=\"ZipCode\" allowAnonymous=\"true\" />  \n       <add name=\"RecentSearchList\"  \n            type=\"System.Collections.Specialized.StringCollection\"  \n            serializeAs=\"Xml\"  \n            allowAnonymous=\"true\" />  \n      </properties>  \n    </profile>  \n   </system.web>  \n</configuration>  \n```  \n  \n The following ASP.NET page reads and sets the `ZipCode` property specified for the user profile.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_1_1.aspx)]\n [!code-cs[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/csharp/m-system.web.profile.pro_1_1.aspx)]"
  syntax:
    content: public ProfileBase ();
    parameters: []
  overload: System.Web.Profile.ProfileBase.#ctor*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Il <xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref> attributo della sezione del file Web. config è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Non è stato possibile creare un tipo di proprietà specificato nella sezione del file Web. config.       - o - <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref> attributo per una proprietà nella sezione del file Web. config è impostata su <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref> attributo dell&quot;elemento è impostato su <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - o - <xref uid=&quot;langword_csharp_serializeAs&quot; name=&quot;serializeAs&quot; href=&quot;&quot;> </xref> attributo per una proprietà nella sezione del file Web. config è impostata su <xref href=&quot;System.Configuration.SettingsSerializeAs&quot;> </xref> e <> </> *> proprietà dell&quot;oggetto specificato <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref> restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - oppure - il nome di un provider specificato mediante il <xref uid=&quot;langword_csharp_provider&quot; name=&quot;provider&quot; href=&quot;&quot;> </xref> attributo di una proprietà di profilo non è stata trovata nel <> </> *> insieme.       - o - <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref> specificato per una proprietà di profilo non è stata trovata.       - oppure - una proprietà del profilo è stata specificata con un nome che corrisponde a un nome di proprietà sulla classe di base specificato nella <xref uid=&quot;langword_csharp_inherits&quot; name=&quot;inherits&quot; href=&quot;&quot;> </xref> attributo della sezione."
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Create(System.String)
  id: Create(System.String)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Create(String)
  nameWithType: ProfileBase.Create(String)
  fullName: System.Web.Profile.ProfileBase.Create(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Utilizzato da ASP.NET per creare un&quot;istanza di un profilo per il nome utente specificato."
  remarks: "Il metodo Create Crea e Inizializza una nuova istanza di profilo e risulta utile per le applicazioni che utilizzano un profilo personalizzato o gestiscono i profili utente in un ambiente non ASP.NET.       Questo overload del metodo Create presuppone che il nome utente specificato sia un utente autenticato."
  example:
  - "The following code example creates an instance of a custom profile object, sets a property, and saves the profile to the data source.  \n  \n [!code-vb[System.Web.Profile.ProfileBase.Create#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_2_1.vb)]\n [!code-cs[System.Web.Profile.ProfileBase.Create#1](~/add/codesnippet/csharp/m-system.web.profile.pro_2_1.cs)]"
  syntax:
    content: public static System.Web.Profile.ProfileBase Create (string username);
    parameters:
    - id: username
      type: System.String
      description: "Il nome dell&quot;utente per creare un profilo per."
    return:
      type: System.Web.Profile.ProfileBase
      description: "Un <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref> che rappresenta il profilo per l&quot;utente specificato."
  overload: System.Web.Profile.ProfileBase.Create*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Il <xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref> attributo della sezione del file Web. config è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Il livello di autorizzazione host corrente è minore di <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref>."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Non è stato possibile creare un tipo di proprietà specificato nella sezione del file Web. config.       - o - <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref> attributo per una proprietà nella sezione del file Web. config è impostata su <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref> attributo dell&quot;elemento è impostato su <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - o - <xref uid=&quot;langword_csharp_serializeAs&quot; name=&quot;serializeAs&quot; href=&quot;&quot;> </xref> attributo per una proprietà nella sezione del file Web. config è impostata su <xref href=&quot;System.Configuration.SettingsSerializeAs&quot;> </xref> e <> </> *> proprietà dell&quot;oggetto specificato <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref> restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - oppure - il nome di un provider specificato mediante il <xref uid=&quot;langword_csharp_provider&quot; name=&quot;provider&quot; href=&quot;&quot;> </xref> attributo di una proprietà di profilo non è stata trovata nel <> </> *> insieme.       - o - <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref> specificato per una proprietà di profilo non è stata trovata.       - oppure - una proprietà del profilo è stata specificata con un nome che corrisponde a un nome di proprietà sulla classe di base specificato nella <xref uid=&quot;langword_csharp_inherits&quot; name=&quot;inherits&quot; href=&quot;&quot;> </xref> attributo della sezione."
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)
  id: Create(System.String,System.Boolean)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Create(String,Boolean)
  nameWithType: ProfileBase.Create(String,Boolean)
  fullName: System.Web.Profile.ProfileBase.Create(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Utilizzato da ASP.NET per creare un&quot;istanza di un profilo per il nome utente specificato. Accetta un parametro che indica se l&quot;utente è autenticato o anonimo."
  remarks: "Il metodo Create Crea e Inizializza una nuova istanza di profilo e risulta utile per le applicazioni che utilizzano un profilo personalizzato o gestiscono i profili utente in un ambiente non ASP.NET.       Questo overload del metodo Create utilizzabile per creare un profilo per un utente autenticato o anonimo."
  example:
  - "The following code example creates an instance of a custom profile object, sets a property, and saves the profile to the data source.  \n  \n [!code-vb[System.Web.Profile.ProfileBase.Create#2](~/add/codesnippet/visualbasic/m-system.web.profile.pro_9_1.vb)]\n [!code-cs[System.Web.Profile.ProfileBase.Create#2](~/add/codesnippet/csharp/m-system.web.profile.pro_9_1.cs)]"
  syntax:
    content: public static System.Web.Profile.ProfileBase Create (string username, bool isAuthenticated);
    parameters:
    - id: username
      type: System.String
      description: "Il nome dell&quot;utente per creare un profilo per."
    - id: isAuthenticated
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per indicare che l&quot;utente è autenticato; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per indicare che l&quot;utente è anonimo."
    return:
      type: System.Web.Profile.ProfileBase
      description: "Oggetto <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref> oggetto che rappresenta il profilo per l&quot;utente specificato."
  overload: System.Web.Profile.ProfileBase.Create*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Il <xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref> attributo della sezione del file Web. config è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Il livello di autorizzazione host corrente è minore di <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref>."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Non è stato possibile creare un tipo di proprietà specificato nella sezione del file Web. config.       - o - <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref> attributo per una proprietà nella sezione del file Web. config è impostata su <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref> attributo dell&quot;elemento è impostato su <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - o - <xref uid=&quot;langword_csharp_serializeAs&quot; name=&quot;serializeAs&quot; href=&quot;&quot;> </xref> attributo per una proprietà nella sezione del file Web. config è impostata su <xref href=&quot;System.Configuration.SettingsSerializeAs&quot;> </xref> e <> </> *> proprietà dell&quot;oggetto specificato <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref> restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - oppure - il nome di un provider specificato mediante il <xref uid=&quot;langword_csharp_provider&quot; name=&quot;provider&quot; href=&quot;&quot;> </xref> attributo di una proprietà di profilo non è stata trovata nel <> </> *> insieme.       - o - <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref> specificato per una proprietà di profilo non è stata trovata.       - oppure - una proprietà del profilo è stata specificata con un nome che corrisponde a un nome di proprietà sulla classe di base specificato nella <xref uid=&quot;langword_csharp_inherits&quot; name=&quot;inherits&quot; href=&quot;&quot;> </xref> attributo della sezione."
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.GetProfileGroup(System.String)
  id: GetProfileGroup(System.String)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: GetProfileGroup(String)
  nameWithType: ProfileBase.GetProfileGroup(String)
  fullName: System.Web.Profile.ProfileBase.GetProfileGroup(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Ottiene un gruppo di proprietà identificata da un nome di gruppo."
  remarks: "Proprietà di profilo possono essere suddivise in gruppi per semplificare l&quot;organizzazione. La proprietà GetProfileGroup può essere utilizzata per recuperare un gruppo di proprietà per il nome del gruppo. È possibile accedere anche una proprietà del profilo in un gruppo specificando il nome del gruppo come membro di `Profile` proprietà disponibile in ogni pagina. Ad esempio, il `ZipCode` proprietà del membro del profilo di `Address` gruppo di profili è possibile accedere all&quot;utilizzo `Profile.Address.ZipCode`."
  example:
  - "The following Web.config file specifies a user profile that contains group of properties with a group name of `Address`. The grouped properties generated for the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext> will be preceded by the group name. For example, `Profile.Address.Street`.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=  \n      \"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\"  \n        name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n  \n    <authorization>  \n      <deny users=\"?\" />  \n    </authorization>  \n  \n    <membership defaultProvider=\"SqlProvider\"   \n      userIsOnlineTimeWindow=\"15\">  \n      <providers>  \n        <clear />  \n        <add   \n          name=\"SqlProvider\"   \n          type=\"System.Web.Security.SqlMembershipProvider\"   \n          connectionStringName=\"SqlServices\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"   \n          requiresUniqueEmail=\"false\"  \n          passwordFormat=\"Hashed\"  \n          applicationName=\"MyApplication\" />  \n      </providers>  \n    </membership>  \n  \n    <profile defaultProvider=\"SqlProvider\">  \n      <providers>  \n        <add  \n          name=\"SqlProvider\"  \n          connectionStringName=\"SqlServices\"  \n          applicationName=\"MyApplication\"  \n          type=\"System.Web.Profile.SqlProfileProvider\" />  \n  \n      </providers>  \n  \n      <properties>  \n        <add name=\"ZipCode\" />  \n        <group name=\"Address\">  \n          <add name=\"Street\" />  \n          <add name=\"City\" />  \n          <add name=\"State\" />  \n          <add name=\"CountryOrRegion\" />  \n        </group>  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following ASP.NET page reads and sets the grouped properties specified for the user profile.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.HttpProfileGroupBase#1](~/add/codesnippet/csharp/m-system.web.profile.pro_5_1.aspx)]\n [!code-vb[System.Web.Profile.HttpProfileGroupBase#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_5_1.aspx)]"
  syntax:
    content: public System.Web.Profile.ProfileGroupBase GetProfileGroup (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "Il nome del gruppo di proprietà."
    return:
      type: System.Web.Profile.ProfileGroupBase
      description: "Oggetto <xref href=&quot;System.Web.Profile.ProfileGroupBase&quot;> </xref> oggetto per un gruppo di proprietà configurato con il nome del gruppo specificato."
  overload: System.Web.Profile.ProfileBase.GetProfileGroup*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Il nome del gruppo di proprietà di profilo specificato non è stato trovato nella sezione di configurazione."
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.GetPropertyValue(System.String)
  id: GetPropertyValue(System.String)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: GetPropertyValue(String)
  nameWithType: ProfileBase.GetPropertyValue(String)
  fullName: System.Web.Profile.ProfileBase.GetPropertyValue(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Ottiene il valore di una proprietà di profilo."
  remarks: "ASP.NET usa il <xref:System.Web.Profile.ProfileBase>classe per creare la classe utilizzata per il profilo utente.</xref:System.Web.Profile.ProfileBase> Quando viene avviata un&quot;applicazione che ha attivato il profilo utente, ASP.NET crea una nuova classe di tipo `ProfileCommon`, che eredita dalla <xref:System.Web.Profile.ProfileBase>classe.</xref:System.Web.Profile.ProfileBase> Funzioni di accesso fortemente tipizzate vengono aggiunti per la `ProfileCommon` classe per ogni proprietà definita nella sezione di configurazione. Le funzioni di accesso fortemente tipizzate di `ProfileCommon` classe chiamare il metodo GetPropertyValue per recuperare i valori non tipizzati dal <xref:System.Web.Profile.ProfileProvider>che la funzione di accesso generati quindi esegue il cast del tipo specificato e restituisce il valore della proprietà.</xref:System.Web.Profile.ProfileProvider>       È possibile utilizzare il metodo GetPropertyValue per recuperare i valori delle proprietà del profilo utente dell&quot;applicazione in base al nome. Valori restituiti sono non tipizzati ed è necessario eseguire il cast di tipo di oggetto specifico quando vengono recuperati. Per accesso fortemente tipizzato ai valori delle proprietà del profilo, è possibile accedere alla proprietà in base al nome come membro della proprietà del profilo è disponibile in ogni pagina, ad esempio, `Profile.CustomerAddress`."
  example:
  - "The following code example shows an ASP.NET page that reads and sets the `ZipCode` property specified for the user profile. For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_10_1.aspx)]\n [!code-cs[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/csharp/m-system.web.profile.pro_10_1.aspx)]"
  syntax:
    content: public object GetPropertyValue (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "Il nome della proprietà del profilo."
    return:
      type: System.Object
      description: "Il valore della proprietà del profilo specificato, tipizzata come <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Profile.ProfileBase.GetPropertyValue*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Si è verificato un tentativo di impostare un valore della proprietà di un profilo anonimo in cui la proprietà <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref> attributo <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "Non sono disponibili proprietà definiti per il profilo corrente.       - oppure - il nome di proprietà di profilo specificato non esiste nel profilo corrente.       - oppure - il provider per la proprietà di profilo specificato non ha riconosciuto la proprietà specificata."
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)
  id: Initialize(System.String,System.Boolean)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Initialize(String,Boolean)
  nameWithType: ProfileBase.Initialize(String,Boolean)
  fullName: System.Web.Profile.ProfileBase.Initialize(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Inizializza i valori delle proprietà del profilo e le informazioni per l&quot;utente corrente."
  remarks: "Questo metodo non deve essere utilizzato dal codice. Utilizzare uno del <xref:System.Web.Profile.ProfileBase.Create%2A>overload per creare un&quot;istanza del profilo utente.</xref:System.Web.Profile.ProfileBase.Create%2A>"
  syntax:
    content: public void Initialize (string username, bool isAuthenticated);
    parameters:
    - id: username
      type: System.String
      description: "Il nome dell&quot;utente per inizializzare il profilo."
    - id: isAuthenticated
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per indicare che l&quot;utente è autenticato; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per indicare che l&quot;utente è anonimo."
  overload: System.Web.Profile.ProfileBase.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.IsAnonymous
  id: IsAnonymous
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: IsAnonymous
  nameWithType: ProfileBase.IsAnonymous
  fullName: System.Web.Profile.ProfileBase.IsAnonymous
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Ottiene un valore che indica se il profilo utente per un utente anonimo."
  remarks: "Accesso anonimo al profilo utente è abilitato utilizzando la sezione di configurazione e `allowAnonymous` attributo dell&quot;elemento di configurazione utilizzato per specificare le proprietà del profilo."
  syntax:
    content: public bool IsAnonymous { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il profilo utente è per un utente anonimo. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Profile.ProfileBase.IsAnonymous*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.IsDirty
  id: IsDirty
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: IsDirty
  nameWithType: ProfileBase.IsDirty
  fullName: System.Web.Profile.ProfileBase.IsDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Ottiene un valore che indica se sono state modificate le proprietà del profilo."
  remarks: "La proprietà IsDirty può essere utilizzata da un provider di profili durante il <xref:System.Configuration.SettingsBase.Save%2A>metodo per determinare se le proprietà costituita da tipi primitivi, stringhe o <xref:System.DateTime>gli oggetti sono stati modificati.</xref:System.DateTime> </xref:System.Configuration.SettingsBase.Save%2A> Le proprietà modificate vengono quindi aggiornate da provider di profili di <xref:System.Configuration.SettingsBase.Save%2A>metodo.</xref:System.Configuration.SettingsBase.Save%2A> Il <xref:System.Configuration.SettingsBase.Save%2A>metodo viene chiamato automaticamente alla fine dell&quot;esecuzione della pagina, se il <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A>proprietà `true` chiamato un provider di profili di <xref:System.Configuration.SettingsBase.Save%2A>metodo non è possibile determinare in modo esplicito se una proprietà del profilo con un tipo di classe personalizzata o un tipo complesso, ad esempio una raccolta, è stato modificato.</xref:System.Configuration.SettingsBase.Save%2A> </xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> </xref:System.Configuration.SettingsBase.Save%2A> È possibile utilizzare il <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>dell&quot;evento per determinare se un oggetto personalizzato è stato modificato e continuare con il salvataggio automatico per gli oggetti modificati o annullare il salvataggio automatico, se non sono stati modificati.</xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> Il comportamento predefinito del <xref:System.Web.Profile.ProfileBase>classe consiste nell&quot;impostare la proprietà IsDirty `true` per le proprietà di un tipo personalizzato o complesso la prima volta che la proprietà è accessibile.</xref:System.Web.Profile.ProfileBase>"
  syntax:
    content: public bool IsDirty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se sono state modificate le proprietà del profilo. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Profile.ProfileBase.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Item(System.String)
  id: Item(System.String)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: ProfileBase.Item(String)
  fullName: System.Web.Profile.ProfileBase.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Ottiene o imposta un valore di proprietà del profilo indicizzato con il nome di proprietà."
  remarks: "È possibile utilizzare questa proprietà per recuperare o impostare i valori delle proprietà del profilo utente per l&quot;applicazione in base al nome. I valori restituiti sono tipizzati come `object` e deve essere impostato il tipo di oggetto specifico quando vengono recuperati. Per accesso fortemente tipizzato ai valori delle proprietà del profilo, è possibile accedere alla proprietà in base al nome come membro del `Profile` proprietà disponibile in ogni pagina, ad esempio, `Profile.CustomerAddress`."
  example:
  - "The following code example lists the names of the properties in the user profile by binding the <xref:System.Configuration.SettingsProperty.Name%2A> property from the static <xref:System.Web.Profile.ProfileBase.Properties%2A> collection of <xref:System.Configuration.SettingsProperty> objects to a <xref:System.Web.UI.WebControls.GridView> control. The selected property value is retrieved by name using the Item collection. For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.  \n  \n [!code-cs[System.Web.Profile.HttpProfileBase#2](~/add/codesnippet/csharp/p-system.web.profile.pro_3_1.aspx)]\n [!code-vb[System.Web.Profile.HttpProfileBase#2](~/add/codesnippet/visualbasic/p-system.web.profile.pro_3_1.aspx)]"
  syntax:
    content: public override object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "Il nome della proprietà del profilo."
    return:
      type: System.Object
      description: "Il valore della proprietà del profilo specificato, tipizzata come <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Profile.ProfileBase.Item*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Si è verificato un tentativo di impostare un valore della proprietà di un profilo anonimo in cui la proprietà <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref> attributo <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "Non sono disponibili proprietà definiti per il profilo corrente.       - oppure - il nome di proprietà di profilo specificato non esiste nel profilo corrente.       - oppure - il provider per la proprietà di profilo specificato non ha riconosciuto la proprietà specificata."
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "È stato effettuato un tentativo di impostare un valore della proprietà che è stato contrassegnato come di sola lettura."
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "È stato effettuato un tentativo di assegnare un valore a una proprietà utilizzando un tipo incompatibile."
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.LastActivityDate
  id: LastActivityDate
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: LastActivityDate
  nameWithType: ProfileBase.LastActivityDate
  fullName: System.Web.Profile.ProfileBase.LastActivityDate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Ottiene la data e l&quot;ora di modifica o leggere il profilo più recente."
  remarks: "Valore di questa proprietà viene modificato solo mediante il provider predefinito dei profili. Le modifiche apportate alle proprietà del profilo da un provider diverso dal provider di profili predefiniti non influiscono sul valore della proprietà LastActivityDate."
  syntax:
    content: public DateTime LastActivityDate { get; }
    return:
      type: System.DateTime
      description: "Più recente di data e ora in cui il profilo è stato lette o modificato dal provider predefinito."
  overload: System.Web.Profile.ProfileBase.LastActivityDate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.LastUpdatedDate
  id: LastUpdatedDate
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: LastUpdatedDate
  nameWithType: ProfileBase.LastUpdatedDate
  fullName: System.Web.Profile.ProfileBase.LastUpdatedDate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Ottiene la data e ora in cui è stato modificato il profilo più recenti."
  remarks: "Valore di questa proprietà viene modificato solo mediante il provider predefinito dei profili. Le modifiche apportate alle proprietà del profilo da un provider diverso dal provider di profili predefiniti non influiscono sul valore della proprietà LastUpdatedDate."
  syntax:
    content: public DateTime LastUpdatedDate { get; }
    return:
      type: System.DateTime
      description: "Più recente di data e ora in cui il profilo è stato modificato dal provider predefinito."
  overload: System.Web.Profile.ProfileBase.LastUpdatedDate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Properties
  id: Properties
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Properties
  nameWithType: ProfileBase.Properties
  fullName: System.Web.Profile.ProfileBase.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Ottiene una raccolta di <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> oggetti per ogni proprietà nel profilo."
  remarks: "È possibile utilizzare questa proprietà per ottenere informazioni sulle proprietà del profilo configurato per un&quot;applicazione, inclusi i tipi e i nomi delle proprietà. È anche possibile fare riferimento il <xref:System.Web.Profile.ProfileProvider>di ogni proprietà.</xref:System.Web.Profile.ProfileProvider> Oggetto <xref:System.Web.Profile.ProfileProvider>gestisce l&quot;archiviazione e recupero dei valori delle proprietà da e verso l&quot;origine dati.</xref:System.Web.Profile.ProfileProvider>"
  example:
  - "The following code example lists the names of the properties in the user profile by binding the <xref:System.Configuration.SettingsProperty.Name%2A> property from the static Properties collection of <xref:System.Configuration.SettingsProperty> objects to a <xref:System.Web.UI.WebControls.GridView> control. The selected property value is retrieved by name using the <xref:System.Web.Profile.ProfileBase.Item%2A> collection. For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.  \n  \n [!code-cs[System.Web.Profile.HttpProfileBase#2](~/add/codesnippet/csharp/p-system.web.profile.pro_2_1.aspx)]\n [!code-vb[System.Web.Profile.HttpProfileBase#2](~/add/codesnippet/visualbasic/p-system.web.profile.pro_2_1.aspx)]"
  syntax:
    content: public static System.Configuration.SettingsPropertyCollection Properties { get; }
    return:
      type: System.Configuration.SettingsPropertyCollection
      description: "Oggetto <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> di <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> oggetti per ogni proprietà nel profilo per l&quot;applicazione."
  overload: System.Web.Profile.ProfileBase.Properties*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Non è stato possibile creare un tipo di proprietà specificato nella sezione del file Web. config.       - o - <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref> attributo per una proprietà nella sezione del file Web. config è impostata su <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_enabled&quot; name=&quot;enabled&quot; href=&quot;&quot;> </xref> attributo dell&quot;elemento è impostato su <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - o - <xref uid=&quot;langword_csharp_serializeAs&quot; name=&quot;serializeAs&quot; href=&quot;&quot;> </xref> attributo per una proprietà nella sezione del file Web. config è impostata su <xref href=&quot;System.Configuration.SettingsSerializeAs&quot;> </xref> e <> </> *> proprietà dell&quot;oggetto specificato <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref> restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - oppure - il nome di un provider specificato mediante il <xref uid=&quot;langword_csharp_provider&quot; name=&quot;provider&quot; href=&quot;&quot;> </xref> attributo di una proprietà di profilo non è stata trovata nel <> </> *> insieme.       - o - <xref uid=&quot;langword_csharp_type&quot; name=&quot;type&quot; href=&quot;&quot;> </xref> specificato per una proprietà di profilo non è stata trovata.       - oppure - una proprietà del profilo è stata specificata con un nome che corrisponde a un nome di proprietà sulla classe di base specificato nella <xref uid=&quot;langword_csharp_inherits&quot; name=&quot;inherits&quot; href=&quot;&quot;> </xref> attributo della sezione."
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.Save
  id: Save
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: Save()
  nameWithType: ProfileBase.Save()
  fullName: System.Web.Profile.ProfileBase.Save()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Aggiorna l&quot;origine dati di profilo con i valori delle proprietà del profilo modificati."
  remarks: "Il metodo Save scrive i valori delle proprietà del profilo modificati all&quot;origine dati. Il provider di profili è possibile ridurre la quantità di attività nell&quot;origine dati eseguendo gli aggiornamenti solo quando il <xref:System.Web.Profile.ProfileBase.IsDirty%2A>è impostata su `true`.</xref:System.Web.Profile.ProfileBase.IsDirty%2A> Questo vale per il valore predefinito <xref:System.Web.Profile.SqlProfileProvider>.</xref:System.Web.Profile.SqlProfileProvider> Dopo che il metodo Save ha salvato i valori delle proprietà dell&quot;origine dati, <xref:System.Web.Profile.ProfileBase.IsDirty%2A>è impostato su `false`.</xref:System.Web.Profile.ProfileBase.IsDirty%2A>       È possibile utilizzare il <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>evento per implementare una logica personalizzata che determina se è stata modificata una proprietà del profilo con un tipo personalizzato o un tipo complesso e continuare con il salvataggio automatico per gli oggetti modificati o annullare il salvataggio automatico, se non sono stati modificati.</xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>"
  syntax:
    content: public override void Save ();
    parameters: []
  overload: System.Web.Profile.ProfileBase.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)
  id: SetPropertyValue(System.String,System.Object)
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: SetPropertyValue(String,Object)
  nameWithType: ProfileBase.SetPropertyValue(String,Object)
  fullName: System.Web.Profile.ProfileBase.SetPropertyValue(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Imposta il valore di una proprietà di profilo."
  remarks: "ASP.NET usa il <xref:System.Web.Profile.ProfileBase>classe per creare la classe utilizzata per il profilo utente.</xref:System.Web.Profile.ProfileBase> Quando viene avviata un&quot;applicazione che ha attivato il profilo utente, ASP.NET crea una nuova classe di tipo `ProfileCommon`, che eredita dalla <xref:System.Web.Profile.ProfileBase>classe.</xref:System.Web.Profile.ProfileBase> Funzioni di accesso fortemente tipizzate vengono aggiunti per la `ProfileCommon` classe per ogni proprietà definita nella sezione di configurazione. Funzioni di accesso fortemente tipizzate del `ProfileCommon` classe chiamare il metodo SetPropertyValue per passare i valori delle proprietà di <xref:System.Web.Profile.ProfileProvider>da archiviare nell&quot;origine dati.</xref:System.Web.Profile.ProfileProvider>       È possibile utilizzare il metodo SetPropertyValue per assegnare i valori delle proprietà nel profilo utente per l&quot;applicazione in base al nome. I valori sono non tipizzati e controllo del tipo verrà effettuato in fase di esecuzione, non in fase di compilazione. Per accesso fortemente tipizzato ai valori delle proprietà del profilo, è possibile accedere alla proprietà in base al nome come membro del `Profile` proprietà disponibile in ogni pagina, ad esempio, `Profile.CustomerAddress`."
  example:
  - "The following code example shows an ASP.NET page that reads and sets the `ZipCode` property specified for the user profile. For an example of a Web.config file that specifies properties for the user profile, see the example provided for the <xref:System.Web.Profile.ProfileBase> class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/visualbasic/m-system.web.profile.pro_3_1.aspx)]\n [!code-cs[System.Web.Profile.HttpProfileBase#1](~/add/codesnippet/csharp/m-system.web.profile.pro_3_1.aspx)]"
  syntax:
    content: public void SetPropertyValue (string propertyName, object propertyValue);
    parameters:
    - id: propertyName
      type: System.String
      description: "Il nome della proprietà da impostare."
    - id: propertyValue
      type: System.Object
      description: "Valore da assegnare alla proprietà."
  overload: System.Web.Profile.ProfileBase.SetPropertyValue*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Si è verificato un tentativo di impostare un valore della proprietà di un profilo anonimo in cui la proprietà <xref uid=&quot;langword_csharp_allowAnonymous&quot; name=&quot;allowAnonymous&quot; href=&quot;&quot;> </xref> attributo <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "Non sono disponibili proprietà definiti per il profilo corrente.       - oppure - il nome di proprietà di profilo specificato non esiste nel profilo corrente.       - oppure - il provider per la proprietà di profilo specificato non ha riconosciuto la proprietà specificata."
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "È stato effettuato un tentativo di impostare un valore in una proprietà che è stata contrassegnata come di sola lettura."
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "È stato effettuato un tentativo di assegnare un valore a una proprietà utilizzando un tipo incompatibile."
  platform:
  - net462
- uid: System.Web.Profile.ProfileBase.UserName
  id: UserName
  parent: System.Web.Profile.ProfileBase
  langs:
  - csharp
  name: UserName
  nameWithType: ProfileBase.UserName
  fullName: System.Web.Profile.ProfileBase.UserName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Ottiene il nome utente per il profilo."
  remarks: "La proprietà UserName restituisce il nome dell&quot;utente autenticato che è associato il profilo o l&quot;identificatore utente anonimo assegnati al profilo, se il <xref:System.Web.Profile.ProfileBase.IsAnonymous%2A>proprietà `true`.</xref:System.Web.Profile.ProfileBase.IsAnonymous%2A>       Accesso anonimo al profilo utente è abilitato utilizzando la sezione di configurazione e `allowAnonymous` attributo dell&quot;elemento di configurazione utilizzato per specificare le proprietà del profilo."
  syntax:
    content: public string UserName { get; }
    return:
      type: System.String
      description: "Il nome utente per il profilo o l&quot;identificatore utente anonimo assegnati al profilo."
  overload: System.Web.Profile.ProfileBase.UserName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.SettingsBase
  isExternal: false
  name: System.Configuration.SettingsBase
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Configuration.SettingsPropertyNotFoundException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyNotFoundException
  nameWithType: SettingsPropertyNotFoundException
  fullName: System.Configuration.SettingsPropertyNotFoundException
- uid: System.Configuration.SettingsPropertyIsReadOnlyException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyIsReadOnlyException
  nameWithType: SettingsPropertyIsReadOnlyException
  fullName: System.Configuration.SettingsPropertyIsReadOnlyException
- uid: System.Configuration.SettingsPropertyWrongTypeException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyWrongTypeException
  nameWithType: SettingsPropertyWrongTypeException
  fullName: System.Configuration.SettingsPropertyWrongTypeException
- uid: System.Web.Profile.ProfileBase.#ctor
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: ProfileBase()
  nameWithType: ProfileBase.ProfileBase()
  fullName: System.Web.Profile.ProfileBase.ProfileBase()
- uid: System.Web.Profile.ProfileBase.Create(System.String)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Create(String)
  nameWithType: ProfileBase.Create(String)
  fullName: System.Web.Profile.ProfileBase.Create(String)
- uid: System.Web.Profile.ProfileBase
  parent: System.Web.Profile
  isExternal: false
  name: ProfileBase
  nameWithType: ProfileBase
  fullName: System.Web.Profile.ProfileBase
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Create(String,Boolean)
  nameWithType: ProfileBase.Create(String,Boolean)
  fullName: System.Web.Profile.ProfileBase.Create(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Profile.ProfileBase.GetProfileGroup(System.String)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: GetProfileGroup(String)
  nameWithType: ProfileBase.GetProfileGroup(String)
  fullName: System.Web.Profile.ProfileBase.GetProfileGroup(String)
- uid: System.Web.Profile.ProfileGroupBase
  parent: System.Web.Profile
  isExternal: false
  name: ProfileGroupBase
  nameWithType: ProfileGroupBase
  fullName: System.Web.Profile.ProfileGroupBase
- uid: System.Web.Profile.ProfileBase.GetPropertyValue(System.String)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: GetPropertyValue(String)
  nameWithType: ProfileBase.GetPropertyValue(String)
  fullName: System.Web.Profile.ProfileBase.GetPropertyValue(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Initialize(String,Boolean)
  nameWithType: ProfileBase.Initialize(String,Boolean)
  fullName: System.Web.Profile.ProfileBase.Initialize(String,Boolean)
- uid: System.Web.Profile.ProfileBase.IsAnonymous
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: IsAnonymous
  nameWithType: ProfileBase.IsAnonymous
  fullName: System.Web.Profile.ProfileBase.IsAnonymous
- uid: System.Web.Profile.ProfileBase.IsDirty
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: IsDirty
  nameWithType: ProfileBase.IsDirty
  fullName: System.Web.Profile.ProfileBase.IsDirty
- uid: System.Web.Profile.ProfileBase.Item(System.String)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Item(String)
  nameWithType: ProfileBase.Item(String)
  fullName: System.Web.Profile.ProfileBase.Item(String)
- uid: System.Web.Profile.ProfileBase.LastActivityDate
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: LastActivityDate
  nameWithType: ProfileBase.LastActivityDate
  fullName: System.Web.Profile.ProfileBase.LastActivityDate
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.Profile.ProfileBase.LastUpdatedDate
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: LastUpdatedDate
  nameWithType: ProfileBase.LastUpdatedDate
  fullName: System.Web.Profile.ProfileBase.LastUpdatedDate
- uid: System.Web.Profile.ProfileBase.Properties
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Properties
  nameWithType: ProfileBase.Properties
  fullName: System.Web.Profile.ProfileBase.Properties
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Web.Profile.ProfileBase.Save
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Save()
  nameWithType: ProfileBase.Save()
  fullName: System.Web.Profile.ProfileBase.Save()
- uid: System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: SetPropertyValue(String,Object)
  nameWithType: ProfileBase.SetPropertyValue(String,Object)
  fullName: System.Web.Profile.ProfileBase.SetPropertyValue(String,Object)
- uid: System.Web.Profile.ProfileBase.UserName
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: UserName
  nameWithType: ProfileBase.UserName
  fullName: System.Web.Profile.ProfileBase.UserName
- uid: System.Web.Profile.ProfileBase.#ctor*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: ProfileBase
  nameWithType: ProfileBase.ProfileBase
- uid: System.Web.Profile.ProfileBase.Create*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Create
  nameWithType: ProfileBase.Create
- uid: System.Web.Profile.ProfileBase.GetProfileGroup*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: GetProfileGroup
  nameWithType: ProfileBase.GetProfileGroup
- uid: System.Web.Profile.ProfileBase.GetPropertyValue*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: GetPropertyValue
  nameWithType: ProfileBase.GetPropertyValue
- uid: System.Web.Profile.ProfileBase.Initialize*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Initialize
  nameWithType: ProfileBase.Initialize
- uid: System.Web.Profile.ProfileBase.IsAnonymous*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: IsAnonymous
  nameWithType: ProfileBase.IsAnonymous
- uid: System.Web.Profile.ProfileBase.IsDirty*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: IsDirty
  nameWithType: ProfileBase.IsDirty
- uid: System.Web.Profile.ProfileBase.Item*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Item
  nameWithType: ProfileBase.Item
- uid: System.Web.Profile.ProfileBase.LastActivityDate*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: LastActivityDate
  nameWithType: ProfileBase.LastActivityDate
- uid: System.Web.Profile.ProfileBase.LastUpdatedDate*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: LastUpdatedDate
  nameWithType: ProfileBase.LastUpdatedDate
- uid: System.Web.Profile.ProfileBase.Properties*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Properties
  nameWithType: ProfileBase.Properties
- uid: System.Web.Profile.ProfileBase.Save*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: Save
  nameWithType: ProfileBase.Save
- uid: System.Web.Profile.ProfileBase.SetPropertyValue*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: SetPropertyValue
  nameWithType: ProfileBase.SetPropertyValue
- uid: System.Web.Profile.ProfileBase.UserName*
  parent: System.Web.Profile.ProfileBase
  isExternal: false
  name: UserName
  nameWithType: ProfileBase.UserName
