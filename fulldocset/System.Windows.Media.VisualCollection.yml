### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.VisualCollection
  id: VisualCollection
  children:
  - System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Capacity
  - System.Windows.Media.VisualCollection.Clear
  - System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  - System.Windows.Media.VisualCollection.Count
  - System.Windows.Media.VisualCollection.GetEnumerator
  - System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.IsReadOnly
  - System.Windows.Media.VisualCollection.IsSynchronized
  - System.Windows.Media.VisualCollection.Item(System.Int32)
  - System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  - System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  - System.Windows.Media.VisualCollection.SyncRoot
  - System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: VisualCollection
  nameWithType: VisualCollection
  fullName: System.Windows.Media.VisualCollection
  type: Class
  summary: "Rappresenta una raccolta ordinata di <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> oggetti."
  remarks: "Un VisualCollection è implicita affinità di contesto. Se una stored procedure tenta di accedere il VisualCollection da un contesto diverso rispetto al contesto dell&quot;oggetto proprietario <xref:System.Windows.Media.ContainerVisual>, viene generata un&quot;eccezione.</xref:System.Windows.Media.ContainerVisual>"
  example:
  - "The following example shows how to create a VisualCollection and add members to it.  \n  \n [!code-cs[DrawingVisualSample#100](~/add/codesnippet/csharp/DrawingVisual/Window1.xaml.cs#100)]\n [!code-vb[DrawingVisualSample#100](~/add/codesnippet/visualbasic/drawingvisual/window1.xaml.vb#100)]  \n  \n> [!NOTE]\n>  For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994)."
  syntax:
    content: 'public sealed class VisualCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  id: '#ctor(System.Windows.Media.Visual)'
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: VisualCollection(Visual)
  nameWithType: VisualCollection.VisualCollection(Visual)
  fullName: System.Windows.Media.VisualCollection.VisualCollection(Visual)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> classe."
  syntax:
    content: public VisualCollection (System.Windows.Media.Visual parent);
    parameters:
    - id: parent
      type: System.Windows.Media.Visual
      description: "L&quot;oggetto visivo padre dell&quot;oggetto la cui proprietà <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> viene restituito."
  overload: System.Windows.Media.VisualCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  id: Add(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Add(Visual)
  nameWithType: VisualCollection.Add(Visual)
  fullName: System.Windows.Media.VisualCollection.Add(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Aggiunge un <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> alla fine del <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  remarks: "Aggiunta di un <xref:System.Windows.Media.Visual>il cui valore è `null` è consentita e non genera un&quot;eccezione.</xref:System.Windows.Media.Visual>       Il metodo Add imposta inoltre una relazione padre-figlio tra l&quot;elemento padre visuale, che è il proprietario del <xref:System.Windows.Media.VisualCollection>e il figlio `visual`.</xref:System.Windows.Media.VisualCollection>       Se è necessario un maggiore controllo di basso livello sull&quot;implementazione di archiviazione sottostante degli oggetti visivi figlio di una classe personalizzata, è consigliabile utilizzare il <xref:System.Windows.Media.Visual.AddVisualChild%2A>e <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>metodi.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> Quando si utilizzano questi metodi, è necessario definire la propria implementazione di archiviazione e non utilizzano <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  example:
  - "The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.  \n  \n [!code-cs[DrawingVisualSample#100](~/add/codesnippet/csharp/DrawingVisual/Window1.xaml.cs#100)]\n [!code-vb[DrawingVisualSample#100](~/add/codesnippet/visualbasic/drawingvisual/window1.xaml.vb#100)]  \n  \n> [!NOTE]\n>  For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994)."
  syntax:
    content: public int Add (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "Il <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> per aggiungere il <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
    return:
      type: System.Int32
      description: "L&quot;indice nella raccolta in corrispondenza del quale <code> visual </code> è stato aggiunto."
  overload: System.Windows.Media.VisualCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Un <xref:System.ArgumentException>viene generata se il <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> è un elemento radice.</xref:System.ArgumentException>"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Capacity
  id: Capacity
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Capacity
  nameWithType: VisualCollection.Capacity
  fullName: System.Windows.Media.VisualCollection.Capacity
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Ottiene o imposta il numero di elementi che la <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> può contenere."
  remarks: "Il valore di capacità è il numero di elementi che la <xref:System.Windows.Media.VisualCollection>è in grado di archiviare.</xref:System.Windows.Media.VisualCollection> <xref:System.Windows.Media.VisualCollection.Count%2A>è il numero di oggetti visivi che siano effettivamente <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection></xref:System.Windows.Media.VisualCollection.Count%2A> Capacità è sempre maggiore di o uguale a <xref:System.Windows.Media.VisualCollection.Count%2A>.</xref:System.Windows.Media.VisualCollection.Count%2A> Se <xref:System.Windows.Media.VisualCollection.Count%2A>supera la capacità durante l&quot;aggiunta di elementi, la capacità del <xref:System.Windows.Media.VisualCollection>è aumentato.</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.VisualCollection.Count%2A> Per impostazione predefinita la capacità è zero."
  syntax:
    content: public int Capacity { get; set; }
    return:
      type: System.Int32
      description: "Il numero di elementi che la <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> può contenere."
  overload: System.Windows.Media.VisualCollection.Capacity*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Capacità è impostata su un valore che è minore di <xref:System.Windows.Media.VisualCollection.Count*>.</xref:System.Windows.Media.VisualCollection.Count*>"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Clear
  id: Clear
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: VisualCollection.Clear()
  fullName: System.Windows.Media.VisualCollection.Clear()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Rimuove tutti gli elementi dal <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  remarks: "Il <xref:System.Windows.Media.VisualCollection.Count%2A>viene reimpostato su zero.</xref:System.Windows.Media.VisualCollection.Count%2A> Il valore di <xref:System.Windows.Media.VisualCollection.Capacity%2A>non subisce modifiche.</xref:System.Windows.Media.VisualCollection.Capacity%2A> Per reimpostare la capacità del <xref:System.Windows.Media.VisualCollection>, impostare il <xref:System.Windows.Media.VisualCollection.Capacity%2A>proprietà per le dimensioni desiderate.</xref:System.Windows.Media.VisualCollection.Capacity%2A> </xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.Media.VisualCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  id: Contains(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Contains(Visual)
  nameWithType: VisualCollection.Contains(Visual)
  fullName: System.Windows.Media.VisualCollection.Contains(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Restituisce un <xref:System.Boolean>valore che indica se l&quot;oggetto specificato <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> è contenuto nella raccolta.</xref:System.Boolean>"
  remarks: "Lo scenario peggiore fase di esecuzione di questa funzione è `O(n)`, dove `n` è il numero di elementi in <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public bool Contains (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "Il <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> da cercare nella raccolta."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> visual </code> è contenuto nella raccolta; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.VisualCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: VisualCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Copia gli elementi nella raccolta in una matrice, iniziando in corrispondenza dell&quot;indice matrice specifico."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Oggetto unidimensionale <xref:System.Array>che rappresenta la destinazione degli elementi copiati dal <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Indice in base zero `array` da cui avviare la copia."
  overload: System.Windows.Media.VisualCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  id: CopyTo(System.Windows.Media.Visual[],System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: CopyTo(Visual[],Int32)
  nameWithType: VisualCollection.CopyTo(Visual[],Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Visual[],Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Copia la raccolta corrente nell&quot;oggetto passato <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> matrice."
  syntax:
    content: public void CopyTo (System.Windows.Media.Visual[] array, int index);
    parameters:
    - id: array
      type: System.Windows.Media.Visual[]
      description: "Matrice di <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> oggetti (che devono avere un&quot;indicizzazione in base zero)."
    - id: index
      type: System.Int32
      description: "Indice da cui iniziare la copia dall&quot;interno `array`."
  overload: System.Windows.Media.VisualCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Count
  id: Count
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Count
  nameWithType: VisualCollection.Count
  fullName: System.Windows.Media.VisualCollection.Count
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Ottiene il numero di elementi nella raccolta."
  remarks: "Conteggio indica il numero di elementi effettivamente contenuti nella <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection> <xref:System.Windows.Media.VisualCollection.Capacity%2A>è il numero di elementi che la <xref:System.Windows.Media.VisualCollection>è in grado di archiviare.</xref:System.Windows.Media.VisualCollection></xref:System.Windows.Media.VisualCollection.Capacity%2A>       Il numero è sempre minore o uguale a <xref:System.Windows.Media.VisualCollection.Capacity%2A>.</xref:System.Windows.Media.VisualCollection.Capacity%2A> Se il conteggio supera <xref:System.Windows.Media.VisualCollection.Capacity%2A>durante l&quot;aggiunta di elementi, la capacità dell&quot;elenco viene raddoppiata automaticamente mediante la riallocazione della matrice interna prima di copiare gli elementi e aggiunta di nuovi elementi.</xref:System.Windows.Media.VisualCollection.Capacity%2A>"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Il numero di elementi che la <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> contiene."
  overload: System.Windows.Media.VisualCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: VisualCollection.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.GetEnumerator()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Recupera un enumeratore che può scorrere il <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  syntax:
    content: public System.Windows.Media.VisualCollection.Enumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Windows.Media.VisualCollection.Enumerator
      description: "Un enumeratore che può essere utilizzato per scorrere la raccolta."
  overload: System.Windows.Media.VisualCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  id: IndexOf(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IndexOf(Visual)
  nameWithType: VisualCollection.IndexOf(Visual)
  fullName: System.Windows.Media.VisualCollection.IndexOf(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Restituisce l&quot;indice in base zero del <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>."
  remarks: "Se il <xref:System.Windows.Media.Visual>non si trova nel <xref:System.Windows.Media.VisualCollection>, viene restituito -1.</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.Visual> Se `null` viene passato al metodo, l&quot;indice della prima voce con `null` viene restituito. Se è presente alcuna voce null, viene restituito -1."
  syntax:
    content: public int IndexOf (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "Il <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> per individuare il <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
    return:
      type: System.Int32
      description: "L&quot;indice del <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>."
  overload: System.Windows.Media.VisualCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  id: Insert(System.Int32,System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Insert(Int32,Visual)
  nameWithType: VisualCollection.Insert(Int32,Visual)
  fullName: System.Windows.Media.VisualCollection.Insert(Int32,Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Inserisce un elemento nel <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> in corrispondenza dell&quot;indice specificato."
  remarks: "Se <xref:System.Windows.Media.VisualCollection.Count%2A>è già uguale <xref:System.Windows.Media.VisualCollection.Capacity%2A>, la capacità del <xref:System.Windows.Media.VisualCollection>viene aumentato prima che il nuovo <xref:System.Windows.Media.Visual>viene inserito.</xref:System.Windows.Media.Visual> </xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.VisualCollection.Capacity%2A> </xref:System.Windows.Media.VisualCollection.Count%2A> Se `index` è uguale a <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` viene aggiunto alla fine di <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.VisualCollection.Count%2A> Qualsiasi esistenti gli oggetti visivi maggiore o uguale a `index` vengono spostate per adattare il nuovo <xref:System.Windows.Media.Visual>, e i relativi valori di indice vengono aggiornati.</xref:System.Windows.Media.Visual>       Il metodo di inserimento imposta inoltre una relazione padre-figlio tra l&quot;elemento padre visuale, che è il proprietario del <xref:System.Windows.Media.VisualCollection>e il figlio `visual`.</xref:System.Windows.Media.VisualCollection>       Se è necessario maggiore controllo di basso livello sull&quot;implementazione di archiviazione sottostante degli oggetti visivi figlio, è consigliabile utilizzare il <xref:System.Windows.Media.Visual.AddVisualChild%2A>e <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>metodi.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> Quando si utilizzano questi metodi, si definisce la propria implementazione di archiviazione e non utilizzano <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void Insert (int index, System.Windows.Media.Visual visual);
    parameters:
    - id: index
      type: System.Int32
      description: "Indice in base zero in corrispondenza del quale deve essere inserito il valore."
    - id: visual
      type: System.Windows.Media.Visual
      description: "Il <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> per inserire il <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  overload: System.Windows.Media.VisualCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>è minore di zero o maggiore di <xref:System.Windows.Media.VisualCollection.Count*>."
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
  fullName: System.Windows.Media.VisualCollection.IsReadOnly
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> è di sola lettura."
  remarks: "Questa proprietà è sempre `false` per tutti i <xref:System.Windows.Media.VisualCollection>oggetti.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Il valore che indica se il <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> è di sola lettura."
  overload: System.Windows.Media.VisualCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
  fullName: System.Windows.Media.VisualCollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Ottiene un valore che indica se l&quot;accesso al <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> è sincronizzato (thread-safe)."
  remarks: "Questa proprietà è sempre `false` per tutti i <xref:System.Windows.Media.VisualCollection>oggetti.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Il valore che indica se il <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> è sincronizzato (thread-safe)."
  overload: System.Windows.Media.VisualCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: VisualCollection.Item(Int32)
  fullName: System.Windows.Media.VisualCollection.Item(Int32)
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Ottiene o imposta il <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> che viene archiviato in corrispondenza dell&quot;indice in base zero del <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  remarks: "Questa proprietà consente di accedere a un oggetto <xref:System.Windows.Media.Visual>nel <xref:System.Windows.Media.VisualCollection>utilizzando un indice.</xref:System.Windows.Media.VisualCollection> </xref:System.Windows.Media.Visual>"
  syntax:
    content: public System.Windows.Media.Visual this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "L&quot;indice in base zero di <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> da cui ottenere o impostare il <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>."
    return:
      type: System.Windows.Media.Visual
      description: "The <xref href=&quot;System.Windows.Media.Visual&quot;></xref> that is stored at <code>index</code>."
  overload: System.Windows.Media.VisualCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>è minore di zero, o <code>index</code> è maggiore o uguale a <xref:System.Windows.Media.VisualCollection.Count*>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nuovo elemento figlio ha già un padre o il valore in corrispondenza dell&quot;indice specificato non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  id: Remove(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Remove(Visual)
  nameWithType: VisualCollection.Remove(Visual)
  fullName: System.Windows.Media.VisualCollection.Remove(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Rimuove l&quot;oggetto specificato <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> dall&quot;oggetto di <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  remarks: "Gli oggetti visivi che seguono l&quot;oggetto rimosso vengono spostati per occupare la posizione rimasta vuota e i relativi valori di indice vengono aggiornati. Se `visual` è `null`, il primo `null` voce viene rimossa. La rimozione di un `null` voce è lineare delle dimensioni della raccolta.       Il metodo Remove rimuove anche la relazione padre-figlio tra l&quot;elemento padre visuale, ovvero il proprietario del <xref:System.Windows.Media.VisualCollection>e il figlio `visual`.</xref:System.Windows.Media.VisualCollection>       Se è necessario maggiore controllo di basso livello sull&quot;implementazione di archiviazione sottostante degli oggetti visivi figlio, è consigliabile utilizzare il <xref:System.Windows.Media.Visual.AddVisualChild%2A>e <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>metodi.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> Quando si utilizzano questi metodi, si definisce la propria implementazione di archiviazione e non utilizzano <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void Remove (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "Il <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> per rimuovere il <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  overload: System.Windows.Media.VisualCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: VisualCollection.RemoveAt(Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Rimuove l&quot;oggetto visivo in corrispondenza dell&quot;indice specificato nella <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  remarks: "Gli oggetti visivi che seguono l&quot;oggetto rimosso vengono spostati per occupare la posizione rimasta vuota e i relativi valori di indice vengono aggiornati.       RemoveAt, metodo rimuove anche la relazione padre-figlio tra l&quot;elemento padre visuale, ovvero il proprietario del <xref:System.Windows.Media.VisualCollection>e il figlio `visual`.</xref:System.Windows.Media.VisualCollection>       Se è necessario maggiore controllo di basso livello sull&quot;implementazione di archiviazione sottostante degli oggetti visivi figlio, è consigliabile utilizzare il <xref:System.Windows.Media.Visual.AddVisualChild%2A>e <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>metodi.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> Quando si utilizzano questi metodi, si definisce la propria implementazione di archiviazione e non utilizzano <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Indice in base zero dell&quot;oggetto visivo da rimuovere."
  overload: System.Windows.Media.VisualCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>è minore di zero, o <code>index</code> è maggiore o uguale a <xref:System.Windows.Media.VisualCollection.Count*>."
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  id: RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: RemoveRange(Int32,Int32)
  nameWithType: VisualCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveRange(Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Rimuove un intervallo di oggetti visivi dal <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  remarks: "Gli oggetti visivi che seguono l&quot;oggetto rimosso vengono spostati in modo da occupare le posizioni liberate e relativi valori di indice vengono aggiornati.       Il metodo RemoveRange rimuove anche le relazioni padre-figlio tra l&quot;elemento padre visuale, che è il proprietario del <xref:System.Windows.Media.VisualCollection>e l&quot;intervallo di elementi visivi figlio.</xref:System.Windows.Media.VisualCollection>       Se è necessario maggiore controllo di basso livello sull&quot;implementazione di archiviazione sottostante degli oggetti visivi figlio, è consigliabile utilizzare il <xref:System.Windows.Media.Visual.AddVisualChild%2A>e <xref:System.Windows.Media.Visual.RemoveVisualChild%2A>metodi.</xref:System.Windows.Media.Visual.RemoveVisualChild%2A> </xref:System.Windows.Media.Visual.AddVisualChild%2A> Quando si utilizzano questi metodi, si definisce la propria implementazione di archiviazione e non utilizzano <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>"
  syntax:
    content: public void RemoveRange (int index, int count);
    parameters:
    - id: index
      type: System.Int32
      description: "Indice in base zero dell&quot;intervallo di elementi da rimuovere."
    - id: count
      type: System.Int32
      description: "Il numero di elementi da rimuovere."
  overload: System.Windows.Media.VisualCollection.RemoveRange*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>è minore di zero o <code>count</code> è minore di zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>index</code>e <code>count</code> non fanno riferimento a un intervallo valido di elementi di <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
  fullName: System.Windows.Media.VisualCollection.SyncRoot
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Ottiene un oggetto che può essere utilizzato per sincronizzare l&quot;accesso al <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Un valore di tipo <xref:System.Object>.</xref:System.Object>"
  overload: System.Windows.Media.VisualCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Questo membro supporta il [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] dell&quot;infrastruttura e non deve essere utilizzato direttamente dal codice. Per una descrizione di questo membro, vedere <xref:System.Collections.IEnumerable.GetEnumerator*>.</xref:System.Collections.IEnumerable.GetEnumerator*>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Oggetto che può essere utilizzato per scorrere la raccolta."
  overload: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: VisualCollection(Visual)
  nameWithType: VisualCollection.VisualCollection(Visual)
  fullName: System.Windows.Media.VisualCollection.VisualCollection(Visual)
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Add(Visual)
  nameWithType: VisualCollection.Add(Visual)
  fullName: System.Windows.Media.VisualCollection.Add(Visual)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.VisualCollection.Capacity
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Capacity
  nameWithType: VisualCollection.Capacity
  fullName: System.Windows.Media.VisualCollection.Capacity
- uid: System.Windows.Media.VisualCollection.Clear
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Clear()
  nameWithType: VisualCollection.Clear()
  fullName: System.Windows.Media.VisualCollection.Clear()
- uid: System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Contains(Visual)
  nameWithType: VisualCollection.Contains(Visual)
  fullName: System.Windows.Media.VisualCollection.Contains(Visual)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: VisualCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo(Visual[],Int32)
  nameWithType: VisualCollection.CopyTo(Visual[],Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Visual[],Int32)
- uid: System.Windows.Media.Visual[]
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual[]
  spec.csharp:
  - uid: System.Windows.Media.Visual
    name: Visual
    nameWithType: Visual
    fullName: Visual[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Media.VisualCollection.Count
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Count
  nameWithType: VisualCollection.Count
  fullName: System.Windows.Media.VisualCollection.Count
- uid: System.Windows.Media.VisualCollection.GetEnumerator
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: VisualCollection.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.GetEnumerator()
- uid: System.Windows.Media.VisualCollection.Enumerator
  parent: System.Windows.Media
  isExternal: false
  name: VisualCollection+Enumerator
  nameWithType: VisualCollection+Enumerator
  fullName: System.Windows.Media.VisualCollection+Enumerator
- uid: System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IndexOf(Visual)
  nameWithType: VisualCollection.IndexOf(Visual)
  fullName: System.Windows.Media.VisualCollection.IndexOf(Visual)
- uid: System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Insert(Int32,Visual)
  nameWithType: VisualCollection.Insert(Int32,Visual)
  fullName: System.Windows.Media.VisualCollection.Insert(Int32,Visual)
- uid: System.Windows.Media.VisualCollection.IsReadOnly
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
  fullName: System.Windows.Media.VisualCollection.IsReadOnly
- uid: System.Windows.Media.VisualCollection.IsSynchronized
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
  fullName: System.Windows.Media.VisualCollection.IsSynchronized
- uid: System.Windows.Media.VisualCollection.Item(System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: VisualCollection.Item(Int32)
  fullName: System.Windows.Media.VisualCollection.Item(Int32)
- uid: System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Remove(Visual)
  nameWithType: VisualCollection.Remove(Visual)
  fullName: System.Windows.Media.VisualCollection.Remove(Visual)
- uid: System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: VisualCollection.RemoveAt(Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveAt(Int32)
- uid: System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveRange(Int32,Int32)
  nameWithType: VisualCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveRange(Int32,Int32)
- uid: System.Windows.Media.VisualCollection.SyncRoot
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
  fullName: System.Windows.Media.VisualCollection.SyncRoot
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Media.VisualCollection.#ctor*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: VisualCollection
  nameWithType: VisualCollection.VisualCollection
- uid: System.Windows.Media.VisualCollection.Add*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Add
  nameWithType: VisualCollection.Add
- uid: System.Windows.Media.VisualCollection.Capacity*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Capacity
  nameWithType: VisualCollection.Capacity
- uid: System.Windows.Media.VisualCollection.Clear*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Clear
  nameWithType: VisualCollection.Clear
- uid: System.Windows.Media.VisualCollection.Contains*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Contains
  nameWithType: VisualCollection.Contains
- uid: System.Windows.Media.VisualCollection.CopyTo*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo
  nameWithType: VisualCollection.CopyTo
- uid: System.Windows.Media.VisualCollection.Count*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Count
  nameWithType: VisualCollection.Count
- uid: System.Windows.Media.VisualCollection.GetEnumerator*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: VisualCollection.GetEnumerator
- uid: System.Windows.Media.VisualCollection.IndexOf*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IndexOf
  nameWithType: VisualCollection.IndexOf
- uid: System.Windows.Media.VisualCollection.Insert*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Insert
  nameWithType: VisualCollection.Insert
- uid: System.Windows.Media.VisualCollection.IsReadOnly*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
- uid: System.Windows.Media.VisualCollection.IsSynchronized*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
- uid: System.Windows.Media.VisualCollection.Item*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Item
  nameWithType: VisualCollection.Item
- uid: System.Windows.Media.VisualCollection.Remove*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Remove
  nameWithType: VisualCollection.Remove
- uid: System.Windows.Media.VisualCollection.RemoveAt*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveAt
  nameWithType: VisualCollection.RemoveAt
- uid: System.Windows.Media.VisualCollection.RemoveRange*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveRange
  nameWithType: VisualCollection.RemoveRange
- uid: System.Windows.Media.VisualCollection.SyncRoot*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator
