### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationSecurityManager
  id: ApplicationSecurityManager
  children:
  - System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  - System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  - System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  langs:
  - csharp
  name: ApplicationSecurityManager
  nameWithType: ApplicationSecurityManager
  fullName: System.Security.Policy.ApplicationSecurityManager
  type: Class
  summary: "Gestisce le decisioni di attendibilità per le applicazioni attivate mediante manifesto."
  remarks: "La classe ApplicationSecurityManager fornisce informazioni essenziali per l&quot;esecuzione di un&quot;applicazione basata su manifesto. Il <xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A>proprietà identifica il gestore di attendibilità per determinare se un&quot;applicazione sia attendibile.</xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A> Il <xref:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust%2A>metodo chiama l&quot;attendibilità dell&quot;applicazione di gestione per determinare se un&quot;applicazione è attendibile.</xref:System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust%2A> Il <xref:System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts%2A>proprietà contiene le decisioni di attendibilità memorizzato nella cache per l&quot;utente.</xref:System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class ApplicationSecurityManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  id: ApplicationTrustManager
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
  fullName: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Ottiene il gestore di attendibilità dell&quot;applicazione corrente."
  remarks: "Nella versione corrente è disponibile un solo gestore di attendibilità, che può essere un&quot;implementazione personalizzata del <xref:System.Security.Policy.IApplicationTrustManager>interfaccia.</xref:System.Security.Policy.IApplicationTrustManager> L&quot;implementazione predefinita trust manager richiede all&quot;utente le autorizzazioni per installare l&quot;applicazione e aumentare le autorizzazioni concesse all&quot;applicazione. Altre implementazioni potrebbero essere esperienze utente diverso. Ad esempio, un&quot;implementazione potrebbe verificare un elenco di enterprise per le applicazioni attendibili, anziché chiedere conferma all&quot;utente di quell&quot;informazione."
  syntax:
    content: public static System.Security.Policy.IApplicationTrustManager ApplicationTrustManager { get; }
    return:
      type: System.Security.Policy.IApplicationTrustManager
      description: "Un <xref href=&quot;System.Security.Policy.IApplicationTrustManager&quot;> </xref> che rappresenta il gestore di attendibilità corrente."
  overload: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager*
  exceptions:
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "I criteri in questa applicazione non dispone di un gestore di attendibilità."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  id: DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Determina se l&quot;utente approva l&quot;applicazione specificata per l&quot;esecuzione con il set di autorizzazioni richiesto."
  remarks: "DetermineApplicationTrust utilizza configurato <xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A>proprietà per determinare se consentire l&quot;esecuzione dell&quot;applicazione specificata con il set di autorizzazioni richiesto nel manifesto dell&quot;applicazione.</xref:System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager%2A> Comportamento del gestore di attendibilità è dipendente dall&quot;implementazione di gestione di trust e le informazioni passate nel `context` parametro. Il comportamento predefinito del gestore di attendibilità consiste nello stabilire una finestra di dialogo dell&quot;interfaccia utente per determinare l&quot;approvazione dell&quot;utente. Tuttavia, un gestore di attendibilità può inoltre determinare lo stato di attendibilità di un&quot;applicazione in base ad altri criteri, ad esempio le decisioni fornite da un database aziendale. La decisione di attendibilità può essere reso persistente, a seconda di `context` proprietà dei parametri e dell&quot;implementazione del gestore di attendibilità. Se la relazione di trust per l&quot;applicazione viene resa persistente per una decisione basata su una finestra di dialogo utente, le chiamate successive al <xref:System.Security.Policy.ApplicationSecurityManager>non mostrerà la finestra di dialogo dell&quot;interfaccia utente per ogni richiesta per l&quot;applicazione.</xref:System.Security.Policy.ApplicationSecurityManager> DetermineApplicationTrust viene chiamato dopo il manifesto, ma prima è stata scaricata l&quot;applicazione al sistema locale."
  syntax:
    content: public static bool DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "Un <xref href=&quot;System.ActivationContext&quot;> </xref> che identifica il contesto di attivazione per l&quot;applicazione."
    - id: context
      type: System.Security.Policy.TrustManagerContext
      description: "Oggetto <xref href=&quot;System.Security.Policy.TrustManagerContext&quot;> </xref> che identifica il contesto del gestore di attendibilità per l&quot;applicazione."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per eseguire l&quot;applicazione specificata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>activationContext</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  id: UserApplicationTrusts
  parent: System.Security.Policy.ApplicationSecurityManager
  langs:
  - csharp
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
  fullName: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Ottiene una raccolta di attendibilità dell&quot;applicazione che contiene le decisioni di attendibilità memorizzato nella cache per l&quot;utente."
  remarks: "Le decisioni di attendibilità nella raccolta vengono gestite utilizzando i metodi di raccolta, ad esempio il <xref:System.Security.Policy.ApplicationTrustCollection.Add%2A>metodo o <xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A>metodo.</xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A> </xref:System.Security.Policy.ApplicationTrustCollection.Add%2A>"
  syntax:
    content: public static System.Security.Policy.ApplicationTrustCollection UserApplicationTrusts { get; }
    return:
      type: System.Security.Policy.ApplicationTrustCollection
      description: "Un <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> che contiene le decisioni di attendibilità memorizzato nella cache per l&quot;utente."
  overload: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
  fullName: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager
- uid: System.Security.Policy.IApplicationTrustManager
  parent: System.Security.Policy
  isExternal: false
  name: IApplicationTrustManager
  nameWithType: IApplicationTrustManager
  fullName: System.Security.Policy.IApplicationTrustManager
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Security.Policy.TrustManagerContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
  fullName: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts
- uid: System.Security.Policy.ApplicationTrustCollection
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrustCollection
  nameWithType: ApplicationTrustCollection
  fullName: System.Security.Policy.ApplicationTrustCollection
- uid: System.Security.Policy.ApplicationSecurityManager.ApplicationTrustManager*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: ApplicationTrustManager
  nameWithType: ApplicationSecurityManager.ApplicationTrustManager
- uid: System.Security.Policy.ApplicationSecurityManager.DetermineApplicationTrust*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: DetermineApplicationTrust
  nameWithType: ApplicationSecurityManager.DetermineApplicationTrust
- uid: System.Security.Policy.ApplicationSecurityManager.UserApplicationTrusts*
  parent: System.Security.Policy.ApplicationSecurityManager
  isExternal: false
  name: UserApplicationTrusts
  nameWithType: ApplicationSecurityManager.UserApplicationTrusts
