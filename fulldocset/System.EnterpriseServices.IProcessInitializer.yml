### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.IProcessInitializer
  id: IProcessInitializer
  children:
  - System.EnterpriseServices.IProcessInitializer.Shutdown
  - System.EnterpriseServices.IProcessInitializer.Startup(System.Object)
  langs:
  - csharp
  name: IProcessInitializer
  nameWithType: IProcessInitializer
  fullName: System.EnterpriseServices.IProcessInitializer
  type: Interface
  summary: "Supporta i metodi che possono essere chiamati quando un componente COM viene avviato o arrestato."
  remarks: "Implementare i metodi di interfaccia IProcessInitializer sui componenti serviti, se si desidera eseguire l&quot;inizializzazione o arrestare il codice quando un processo server (Dllhost.exe) viene avviato o arrestato, rispettivamente.       Fornita da COM+ `Startup` e `Shutdown` eventi quando Dllhost.exe inizia e termina. Questa funzionalità consente a tutti i componenti COM+ che vengono installati in un&quot;applicazione server COM+ (definita per i componenti server successivamente) per eseguire l&quot;inizializzazione personalizzata e codice di pulitura. Un&quot;istanza di ogni componente che implementa l&quot;interfaccia IProcessInitializer verrà creata e archiviata per la durata del processo e chiamata ai metodi di interfaccia durante l&quot;avvio e arresto. Quando viene implementato in una <xref:System.EnterpriseServices.ServicedComponent>, durante la registrazione del componente, il `InitializesServerApplication` parametro il `COMAdminCatalogObject` all&quot;interno di componenti di raccolta è impostata su `true`.</xref:System.EnterpriseServices.ServicedComponent>       Utilizzo di `Startup` e `Shutdown` eventi, è possibile inizializzare le risorse, creare connessioni, inizializzare i dati condivisi ed esegue il codice di pulizia. Tuttavia, non è necessario accedere stati che sono specifici di COM+ in quanto le istanze dei componenti server non sono ancora state create. Inoltre, il codice di `Startup` e `Shutdown` eventi devono restituire il più rapidamente possibile, poiché il sistema attende solo 90 secondi per Dllhost.exe preparare accettare le attivazioni dopo che il processo di avvio del sistema. Se Dllhost.exe non segnala che è pronto entro 90 secondi, il sistema termina il processo. di conseguenza, tutti l&quot;inizializzazione deve essere completato entro questo periodo di tempo di elaborazione. Ogni componente che fa parte di inizializzazione deve supportare l&quot;interfaccia IProcessInitializer. All&quot;avvio di DllHost.exe, COM+ crea tutti i componenti server che ha richiesto il servizio, le chiamate `QueryInterface` per l&quot;interfaccia IProcessInitializer, quindi chiama il <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A>(funzione).</xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> Analogamente, quando viene arrestato il processo DllHost.exe, chiama il <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A>funzione su quelli archiviati in precedenza i puntatori di interfaccia.</xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("1113f52d-dc7f-4943-aed6-88d04027e32a")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IProcessInitializer
  implements: []
  platform:
  - net462
- uid: System.EnterpriseServices.IProcessInitializer.Shutdown
  id: Shutdown
  parent: System.EnterpriseServices.IProcessInitializer
  langs:
  - csharp
  name: Shutdown()
  nameWithType: IProcessInitializer.Shutdown()
  fullName: System.EnterpriseServices.IProcessInitializer.Shutdown()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Esegue operazioni di arresto. Chiamato quando viene arrestato Dllhost.exe."
  remarks: "Arresto del sistema non viene chiamato durante un failfast o altri eventi di arresto irreversibile."
  syntax:
    content: public void Shutdown ();
    parameters: []
  overload: System.EnterpriseServices.IProcessInitializer.Shutdown*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.IProcessInitializer.Startup(System.Object)
  id: Startup(System.Object)
  parent: System.EnterpriseServices.IProcessInitializer
  langs:
  - csharp
  name: Startup(Object)
  nameWithType: IProcessInitializer.Startup(Object)
  fullName: System.EnterpriseServices.IProcessInitializer.Startup(Object)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Esegue un&quot;inizializzazione all&quot;avvio. Chiamato quando viene avviato Dllhost.exe."
  remarks: "L&quot;oggetto a cui fa riferimento `punkProcessControl` implementa un <xref:System.EnterpriseServices.IProcessInitControl>interfaccia.</xref:System.EnterpriseServices.IProcessInitControl> <xref:System.EnterpriseServices.IProcessInitControl>supporta il metodo singolo <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.</xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A></xref:System.EnterpriseServices.IProcessInitControl>       Il codice di inizializzazione di avvio è possibile chiamare il <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>, con il valore di timeout uguale al numero di secondi rimanenti prima dell&quot;avvio del componente timeout.</xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>"
  syntax:
    content: public void Startup (object punkProcessControl);
    parameters:
    - id: punkProcessControl
      type: System.Object
      description: "In Microsoft Windows XP, un puntatore al <xref uid=&quot;langword_csharp_IUnknown&quot; name=&quot;IUnknown&quot; href=&quot;&quot;> </xref> interfaccia del componente COM di avvio. In Microsoft Windows 2000, questo argomento è sempre <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.EnterpriseServices.IProcessInitializer.Startup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EnterpriseServices.IProcessInitializer.Shutdown
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Shutdown()
  nameWithType: IProcessInitializer.Shutdown()
  fullName: System.EnterpriseServices.IProcessInitializer.Shutdown()
- uid: System.EnterpriseServices.IProcessInitializer.Startup(System.Object)
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Startup(Object)
  nameWithType: IProcessInitializer.Startup(Object)
  fullName: System.EnterpriseServices.IProcessInitializer.Startup(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EnterpriseServices.IProcessInitializer.Shutdown*
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Shutdown
  nameWithType: IProcessInitializer.Shutdown
- uid: System.EnterpriseServices.IProcessInitializer.Startup*
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Startup
  nameWithType: IProcessInitializer.Startup
