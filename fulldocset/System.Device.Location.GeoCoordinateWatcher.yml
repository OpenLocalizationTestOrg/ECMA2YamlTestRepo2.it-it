### YamlMime:ManagedReference
items:
- uid: System.Device.Location.GeoCoordinateWatcher
  id: GeoCoordinateWatcher
  children:
  - System.Device.Location.GeoCoordinateWatcher.#ctor
  - System.Device.Location.GeoCoordinateWatcher.#ctor(System.Device.Location.GeoPositionAccuracy)
  - System.Device.Location.GeoCoordinateWatcher.DesiredAccuracy
  - System.Device.Location.GeoCoordinateWatcher.Dispose
  - System.Device.Location.GeoCoordinateWatcher.Dispose(System.Boolean)
  - System.Device.Location.GeoCoordinateWatcher.Finalize
  - System.Device.Location.GeoCoordinateWatcher.MovementThreshold
  - System.Device.Location.GeoCoordinateWatcher.OnPositionChanged(System.Device.Location.GeoPositionChangedEventArgs{System.Device.Location.GeoCoordinate})
  - System.Device.Location.GeoCoordinateWatcher.OnPositionStatusChanged(System.Device.Location.GeoPositionStatusChangedEventArgs)
  - System.Device.Location.GeoCoordinateWatcher.OnPropertyChanged(System.String)
  - System.Device.Location.GeoCoordinateWatcher.Permission
  - System.Device.Location.GeoCoordinateWatcher.Position
  - System.Device.Location.GeoCoordinateWatcher.PositionChanged
  - System.Device.Location.GeoCoordinateWatcher.Start
  - System.Device.Location.GeoCoordinateWatcher.Start(System.Boolean)
  - System.Device.Location.GeoCoordinateWatcher.Status
  - System.Device.Location.GeoCoordinateWatcher.StatusChanged
  - System.Device.Location.GeoCoordinateWatcher.Stop
  - System.Device.Location.GeoCoordinateWatcher.TryStart(System.Boolean,System.TimeSpan)
  langs:
  - csharp
  name: GeoCoordinateWatcher
  nameWithType: GeoCoordinateWatcher
  fullName: System.Device.Location.GeoCoordinateWatcher
  type: Class
  summary: "Fornisce i dati di percorso che si basa su latitudine e longitudine coordinate."
  remarks: "La classe GeoCoordinateWatcher fornisce i dati basati su coordinate percorso dal provider di posizione corrente. Il provider del percorso corrente è in ordine di priorità più elevata nel computer, in base a diversi fattori, ad esempio l&quot;età e l&quot;accuratezza dei dati da tutti i provider, l&quot;accuratezza richiesta dalle applicazioni di percorso e l&quot;impatto di utilizzo e prestazioni power associata al provider di percorso. Il provider del percorso corrente potrebbe cambiare nel tempo, ad esempio, quando un dispositivo GPS perde il segnale satellite interni e un provider di eseguire la triangolazione Wi-Fi diventa il provider più preciso del computer.       Per iniziare l&quot;accesso ai dati di posizione, creare una classe GeoCoordinateWatcher e chiamare <xref:System.Device.Location.GeoCoordinateWatcher.Start%2A>o <xref:System.Device.Location.GeoCoordinateWatcher.TryStart%2A>per avviare l&quot;acquisizione dei dati dal provider di posizione corrente.</xref:System.Device.Location.GeoCoordinateWatcher.TryStart%2A> </xref:System.Device.Location.GeoCoordinateWatcher.Start%2A>       Il <xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>proprietà può essere controllata per determinare se sono disponibili dati.</xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> Se sono disponibili dati, è possibile ottenere il percorso di una sola volta dal <xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>, proprietà o ricevono gli aggiornamenti di posizione continui gestendo il <xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>evento.</xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged> </xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>       Il <xref:System.Device.Location.GeoCoordinateWatcher.Permission%2A>, <xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>, e <xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>il supporto delle proprietà <xref:System.ComponentModel.INotifyPropertyChanged>, in modo che un&quot;applicazione può associare dati a queste proprietà.</xref:System.ComponentModel.INotifyPropertyChanged> </xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> </xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> </xref:System.Device.Location.GeoCoordinateWatcher.Permission%2A>       In Windows 7, tutte le <xref:System.Device.Location>classi sono completamente funzionali se è installato un provider di posizione e in grado di risolvere la posizione del computer.</xref:System.Device.Location>      > [!NOTE] > In Windows 7 Starter Edition, il provider solo percorso supportato è il provider del percorso predefinito nel Pannello di controllo e un componente aggiuntivo deve essere installato per specificare la latitudine e longitudine.       **Nota** nelle versioni di Windows precedente a Windows 7, vengono applicate le seguenti condizioni:-tutti <xref:System.Device.Location>gli oggetti che dispongono di costruttori possono essere creati, ma <xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>avrà sempre il valore <xref:System.Device.Location.GeoPositionStatus>.</xref:System.Device.Location.GeoPositionStatus> delle proprietà</xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> </xref:System.Device.Location>      -Il percorso indicato dalla <xref:System.Device.Location.GeoPosition%601.Location%2A>proprietà <xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>sarà sempre <xref:System.Device.Location.GeoCoordinate.Unknown>.</xref:System.Device.Location.GeoCoordinate.Unknown> </xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> </xref:System.Device.Location.GeoPosition%601.Location%2A>      -Non vengono generati eventi nessuna posizione."
  example:
  - "The following program shows how to create a GeoCoordinateWatcher and start acquiring data by using an initialization timeout. The code then prints the coordinates of the location, if known.  \n  \n [!code-vb[System.Device.Location.GetLocationDataSync1#1](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataSync1/GetLocationDataSync.vb#1)]\n [!code-cs[System.Device.Location.GetLocationDataSync1#1](~/add/codesnippet/csharp/getlocationdatasync/getlocationdatasync.cs#1)]  \n  \n The following program shows how to receive continuous location updates by subscribing to <xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged> events.  \n  \n [!code-vb[System.Device.Location.GetLocationDataAsync#1](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataAsync/GetLocationDataAsync.vb#1)]\n [!code-cs[System.Device.Location.GetLocationDataAsync#1](~/add/codesnippet/csharp/getlocationdataasync/getlocationdataasync.cs#1)]"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public class GeoCoordinateWatcher : IDisposable, System.ComponentModel.INotifyPropertyChanged, System.Device.Location.IGeoPositionWatcher<System.Device.Location.GeoCoordinate>
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  - System.Device.Location.IGeoPositionWatcher<System.Device.Location.GeoCoordinate>
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.#ctor
  id: '#ctor'
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: GeoCoordinateWatcher()
  nameWithType: GeoCoordinateWatcher.GeoCoordinateWatcher()
  fullName: System.Device.Location.GeoCoordinateWatcher.GeoCoordinateWatcher()
  type: Constructor
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Inizializza una nuova istanza della <xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;> </xref> con impostazioni predefinite di accuratezza."
  remarks: "L&quot;impostazione di precisione predefinita è <xref:System.Device.Location.GeoPositionAccuracy>.</xref:System.Device.Location.GeoPositionAccuracy>       **Nota** nelle versioni di Windows precedente a Windows 7, vengono applicate le seguenti condizioni:-tutti <xref:System.Device.Location>gli oggetti che dispongono di costruttori possono essere creati, ma <xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>avrà sempre il valore <xref:System.Device.Location.GeoPositionStatus>.</xref:System.Device.Location.GeoPositionStatus> delle proprietà</xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> </xref:System.Device.Location>      -Il percorso indicato dalla <xref:System.Device.Location.GeoPosition%601.Location%2A>proprietà <xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>sarà sempre <xref:System.Device.Location.GeoCoordinate.Unknown>.</xref:System.Device.Location.GeoCoordinate.Unknown> </xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> </xref:System.Device.Location.GeoPosition%601.Location%2A>      -Non vengono generati eventi nessuna posizione."
  syntax:
    content: public GeoCoordinateWatcher ();
    parameters: []
  overload: System.Device.Location.GeoCoordinateWatcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.#ctor(System.Device.Location.GeoPositionAccuracy)
  id: '#ctor(System.Device.Location.GeoPositionAccuracy)'
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: GeoCoordinateWatcher(GeoPositionAccuracy)
  nameWithType: GeoCoordinateWatcher.GeoCoordinateWatcher(GeoPositionAccuracy)
  fullName: System.Device.Location.GeoCoordinateWatcher.GeoCoordinateWatcher(GeoPositionAccuracy)
  type: Constructor
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Inizializza una nuova istanza della <xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;> </xref>, specificato un livello di accuratezza."
  remarks: "**Nota** nelle versioni di Windows precedente a Windows 7, vengono applicate le seguenti condizioni:-tutti <xref:System.Device.Location>gli oggetti che dispongono di costruttori possono essere creati, ma <xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>avrà sempre il valore <xref:System.Device.Location.GeoPositionStatus>.</xref:System.Device.Location.GeoPositionStatus> delle proprietà</xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> </xref:System.Device.Location>      -Il percorso indicato dalla <xref:System.Device.Location.GeoPosition%601.Location%2A>proprietà <xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>sarà sempre <xref:System.Device.Location.GeoCoordinate.Unknown>.</xref:System.Device.Location.GeoCoordinate.Unknown> </xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> </xref:System.Device.Location.GeoPosition%601.Location%2A>      -Non vengono generati eventi nessuna posizione."
  syntax:
    content: public GeoCoordinateWatcher (System.Device.Location.GeoPositionAccuracy desiredAccuracy);
    parameters:
    - id: desiredAccuracy
      type: System.Device.Location.GeoPositionAccuracy
      description: "<xref:System.Device.Location.GeoLocationAccuracy>che indica il livello di accuratezza richiesto del provider di posizione.</xref:System.Device.Location.GeoLocationAccuracy>       Un&quot;accuratezza di <xref href=&quot;System.Device.Location.GeoPositionAccuracy&quot;> </xref> può peggiorare le prestazioni e deve essere specificato solo quando è necessario elevata precisione."
  overload: System.Device.Location.GeoCoordinateWatcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.DesiredAccuracy
  id: DesiredAccuracy
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: DesiredAccuracy
  nameWithType: GeoCoordinateWatcher.DesiredAccuracy
  fullName: System.Device.Location.GeoCoordinateWatcher.DesiredAccuracy
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Il livello di accuratezza richiesto per i dati sulla località fornita dal <xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;> </xref>."
  remarks: "Un&quot;accuratezza di <xref:System.Device.Location.GeoPositionAccuracy>può peggiorare le prestazioni e deve essere specificato solo quando è necessario elevata precisione.</xref:System.Device.Location.GeoPositionAccuracy>       **Nota** nelle versioni di Windows precedente a Windows 7, vengono applicate le seguenti condizioni:-tutti <xref:System.Device.Location>gli oggetti che dispongono di costruttori possono essere creati, ma <xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>avrà sempre il valore <xref:System.Device.Location.GeoPositionStatus>.</xref:System.Device.Location.GeoPositionStatus> delle proprietà</xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> </xref:System.Device.Location>      -Il percorso indicato dalla <xref:System.Device.Location.GeoPosition%601.Location%2A>proprietà <xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>sarà sempre <xref:System.Device.Location.GeoCoordinate.Unknown>.</xref:System.Device.Location.GeoCoordinate.Unknown> </xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> </xref:System.Device.Location.GeoPosition%601.Location%2A>      -Non vengono generati eventi nessuna posizione."
  syntax:
    content: public System.Device.Location.GeoPositionAccuracy DesiredAccuracy { get; }
    return:
      type: System.Device.Location.GeoPositionAccuracy
      description: "<xref href=&quot;System.Device.Location.GeoPositionAccuracy&quot;></xref>, che indica il livello di accuratezza richiesto del provider di posizione."
  overload: System.Device.Location.GeoCoordinateWatcher.DesiredAccuracy*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.Dispose
  id: Dispose
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: Dispose()
  nameWithType: GeoCoordinateWatcher.Dispose()
  fullName: System.Device.Location.GeoCoordinateWatcher.Dispose()
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Rilascia tutte le risorse utilizzate dall&quot;istanza corrente del <xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;> </xref> classe."
  remarks: "Chiamare <xref:System.Device.Location.GeoCoordinateWatcher.Dispose%2A>quando si è finito utilizzando il <xref:System.Device.Location.GeoCoordinateWatcher>classe? qualifyHint = False / autoUpgrade = True.</xref:System.Device.Location.GeoCoordinateWatcher> </xref:System.Device.Location.GeoCoordinateWatcher.Dispose%2A>       Questo metodo deve essere chiamato in modo che sia possibile liberare le risorse non gestite.       Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md) e [implementazione di un metodo Dispose](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Device.Location.GeoCoordinateWatcher.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: GeoCoordinateWatcher.Dispose(Boolean)
  fullName: System.Device.Location.GeoCoordinateWatcher.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Rilascia tutte le risorse usate dall&quot;istanza corrente del <xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;> </xref> classe."
  remarks: "Chiamare <xref:System.Device.Location.GeoCoordinateWatcher.Dispose%2A>quando si è finito utilizzando il <xref:System.Device.Location.GeoCoordinateWatcher>classe? qualifyHint = False / autoUpgrade = True.</xref:System.Device.Location.GeoCoordinateWatcher> </xref:System.Device.Location.GeoCoordinateWatcher.Dispose%2A>       Questo metodo deve essere chiamato in modo che sia possibile liberare le risorse non gestite.       Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md) e [implementazione di un metodo Dispose](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.Device.Location.GeoCoordinateWatcher.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.Finalize
  id: Finalize
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: Finalize()
  nameWithType: GeoCoordinateWatcher.Finalize()
  fullName: System.Device.Location.GeoCoordinateWatcher.Finalize()
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Consente di liberare risorse ed esegue altre operazioni di pulizia prima che il <xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;> </xref> venga recuperata tramite garbage collection."
  syntax:
    content: ~GeoCoordinateWatcher ();
    parameters: []
  overload: System.Device.Location.GeoCoordinateWatcher.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.MovementThreshold
  id: MovementThreshold
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: MovementThreshold
  nameWithType: GeoCoordinateWatcher.MovementThreshold
  fullName: System.Device.Location.GeoCoordinateWatcher.MovementThreshold
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "La distanza che deve essere spostata in metri, relativa alla coordinata dall&quot;ultimo <xref href=&quot;System.Device.Location.GeoCoordinateWatcher.PositionChanged&quot;> </xref> evento, prima che il provider di posizione generi un altro <xref href=&quot;System.Device.Location.GeoCoordinateWatcher.PositionChanged&quot;> </xref> evento."
  remarks: "La soglia di movimento predefinita è zero, il che significa che qualsiasi modifica nel percorso rilevato dal provider cause percorso corrente un <xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>evento e un aggiornamento di <xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>proprietà.</xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> </xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>      > [!NOTE] > La soglia di movimento non garantisce che gli eventi verranno ricevuti alla soglia richiesta. La piattaforma tenta di accettare richieste per una particolare soglia di movimento, ma in alcuni casi, gli eventi non essere generati alla soglia richiesta.       **Nota** nelle versioni di Windows precedente a Windows 7, vengono applicate le seguenti condizioni:-tutti <xref:System.Device.Location>gli oggetti che dispongono di costruttori possono essere creati, ma <xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>avrà sempre il valore <xref:System.Device.Location.GeoPositionStatus>.</xref:System.Device.Location.GeoPositionStatus> delle proprietà</xref:System.Device.Location.GeoCoordinateWatcher.Status%2A> </xref:System.Device.Location>      -Il percorso indicato dalla <xref:System.Device.Location.GeoPosition%601.Location%2A>proprietà <xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>sarà sempre <xref:System.Device.Location.GeoCoordinate.Unknown>.</xref:System.Device.Location.GeoCoordinate.Unknown> </xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> </xref:System.Device.Location.GeoPosition%601.Location%2A>      -Non vengono generati eventi nessuna posizione.       Nel diagramma seguente rappresenta le coordinate di percorso che il provider di percorso (ad esempio, un dispositivo GPS) fornisce al computer. P1, nel diagramma, rappresenta i dati sulla località incluso in un <xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>evento e P2, P3 e P4 rappresentano i punti all&quot;interno della soglia di movimento.</xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged> Pertanto, quando il provider di posizione fornisce dati che indicano un percorso di tali punti (P1, P2, P3 e P4), non <xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>vengono generati eventi, e <xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>restituisce P1.</xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> </xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged> Il punto P5 è di fuori della distanza illustra MovementThreshold, pertanto a questo punto, <xref:System.Device.Location.GeoLocationProvider.Location%2A>viene aggiornato e un <xref:System.Device.Location.GeoLocationProvider.LocationChanged>viene generato l&quot;evento.</xref:System.Device.Location.GeoLocationProvider.LocationChanged> </xref:System.Device.Location.GeoLocationProvider.Location%2A>       ![Diagramma che illustra illustra MovementThreshold](~/add/media/ndp-movementthreshold.png &quot;diagramma che illustra illustra MovementThreshold&quot;)"
  syntax:
    content: public double MovementThreshold { get; set; }
    return:
      type: System.Double
      description: "Distanza in metri."
  overload: System.Device.Location.GeoCoordinateWatcher.MovementThreshold*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.OnPositionChanged(System.Device.Location.GeoPositionChangedEventArgs{System.Device.Location.GeoCoordinate})
  id: OnPositionChanged(System.Device.Location.GeoPositionChangedEventArgs{System.Device.Location.GeoCoordinate})
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: OnPositionChanged(GeoPositionChangedEventArgs<GeoCoordinate>)
  nameWithType: GeoCoordinateWatcher.OnPositionChanged(GeoPositionChangedEventArgs<GeoCoordinate>)
  fullName: System.Device.Location.GeoCoordinateWatcher.OnPositionChanged(GeoPositionChangedEventArgs<GeoCoordinate>)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Chiamato quando un <xref href=&quot;System.Device.Location.GeoCoordinateWatcher.PositionChanged&quot;> </xref> si verifica l&quot;evento."
  remarks: ''
  example:
  - "The following program shows how to subscribe to continuous updates from <xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged> events.  \n  \n [!code-vb[System.Device.Location.GetLocationDataAsync#1](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataAsync/GetLocationDataAsync.vb#1)]\n [!code-cs[System.Device.Location.GetLocationDataAsync#1](~/add/codesnippet/csharp/getlocationdataasync/getlocationdataasync.cs#1)]"
  syntax:
    content: protected void OnPositionChanged (System.Device.Location.GeoPositionChangedEventArgs<System.Device.Location.GeoCoordinate> e);
    parameters:
    - id: e
      type: System.Device.Location.GeoPositionChangedEventArgs{System.Device.Location.GeoCoordinate}
      description: "Oggetto &lt;xref:System.Device.Location.GeoPositionChangedEventArgs%601&gt; oggetto che contiene il nuovo percorso."
  overload: System.Device.Location.GeoCoordinateWatcher.OnPositionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.OnPositionStatusChanged(System.Device.Location.GeoPositionStatusChangedEventArgs)
  id: OnPositionStatusChanged(System.Device.Location.GeoPositionStatusChangedEventArgs)
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: OnPositionStatusChanged(GeoPositionStatusChangedEventArgs)
  nameWithType: GeoCoordinateWatcher.OnPositionStatusChanged(GeoPositionStatusChangedEventArgs)
  fullName: System.Device.Location.GeoCoordinateWatcher.OnPositionStatusChanged(GeoPositionStatusChangedEventArgs)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Chiamato quando un <xref href=&quot;System.Device.Location.GeoCoordinateWatcher.StatusChanged&quot;> </xref> si verifica l&quot;evento."
  syntax:
    content: protected void OnPositionStatusChanged (System.Device.Location.GeoPositionStatusChangedEventArgs e);
    parameters:
    - id: e
      type: System.Device.Location.GeoPositionStatusChangedEventArgs
      description: "Oggetto <xref href=&quot;System.Device.Location.GeoPositionStatusChangedEventArgs&quot;> </xref> oggetto che contiene il nuovo stato."
  overload: System.Device.Location.GeoCoordinateWatcher.OnPositionStatusChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.OnPropertyChanged(System.String)
  id: OnPropertyChanged(System.String)
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: OnPropertyChanged(String)
  nameWithType: GeoCoordinateWatcher.OnPropertyChanged(String)
  fullName: System.Device.Location.GeoCoordinateWatcher.OnPropertyChanged(String)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Chiamata eseguita quando una proprietà del <xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;> </xref> le modifiche."
  remarks: "Gestire il <xref:System.Device.Location.GeoCoordinateWatcher.System.ComponentModel.INotifyPropertyChanged.PropertyChanged>evento per implementare il data binding nelle applicazioni Windows Forms.</xref:System.Device.Location.GeoCoordinateWatcher.System.ComponentModel.INotifyPropertyChanged.PropertyChanged>       Questo metodo indica che il <xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>proprietà, il <xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>, proprietà o <xref:System.Device.Location.GeoCoordinateWatcher.Permission%2A>proprietà è stata modificata.</xref:System.Device.Location.GeoCoordinateWatcher.Permission%2A> </xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> </xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>"
  syntax:
    content: protected void OnPropertyChanged (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "Il nome della proprietà che è stato modificato."
  overload: System.Device.Location.GeoCoordinateWatcher.OnPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.Permission
  id: Permission
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: Permission
  nameWithType: GeoCoordinateWatcher.Permission
  fullName: System.Device.Location.GeoCoordinateWatcher.Permission
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Indica se l&quot;autorizzazione per accedere ai dati di posizione dal provider di posizione è stato concesso o negato."
  syntax:
    content: public System.Device.Location.GeoPositionPermission Permission { get; }
    return:
      type: System.Device.Location.GeoPositionPermission
      description: "Un valore che indica se l&quot;autorizzazione è stato concessa o negata."
  overload: System.Device.Location.GeoCoordinateWatcher.Permission*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.Position
  id: Position
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: Position
  nameWithType: GeoCoordinateWatcher.Position
  fullName: System.Device.Location.GeoCoordinateWatcher.Position
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Ottiene il <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> che indica la posizione corrente."
  remarks: ''
  example:
  - "In the following example, the <xref:System.Device.Location.GeoPosition%601.Location%2A> property of the Position property is saved in a <xref:System.Device.Location.GeoCoordinate> object. The latitude and longitude fields of the <xref:System.Device.Location.GeoCoordinate> are printed if they are known.  \n  \n [!code-vb[System.Device.Location.GetLocationDataSync1#2](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataSync1/GetLocationDataSync.vb#2)]\n [!code-cs[System.Device.Location.GetLocationDataSync1#2](~/add/codesnippet/csharp/getlocationdatasync/getlocationdatasync.cs#2)]"
  syntax:
    content: public System.Device.Location.GeoPosition<System.Device.Location.GeoCoordinate> Position { get; }
    return:
      type: System.Device.Location.GeoPosition{System.Device.Location.GeoCoordinate}
      description: "Il <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref> che indica la posizione corrente."
  overload: System.Device.Location.GeoCoordinateWatcher.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.PositionChanged
  id: PositionChanged
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: PositionChanged
  nameWithType: GeoCoordinateWatcher.PositionChanged
  fullName: System.Device.Location.GeoCoordinateWatcher.PositionChanged
  type: Event
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Indica che la latitudine o longitudine dei dati del percorso è stato modificato."
  remarks: "Questo evento viene generato solo quando la distanza spostati dopo l&quot;ultimo evento supera la soglia specificata dal <xref:System.Device.Location.GeoCoordinateWatcher.MovementThreshold%2A>.</xref:System.Device.Location.GeoCoordinateWatcher.MovementThreshold%2A>       Il <xref:System.Device.Location.GeoPositionChangedEventArgs%601>oggetto passato al gestore dell&quot;evento include il <xref:System.Device.Location.GeoPosition%601>oggetto che contiene i dati di posizione aggiornata.</xref:System.Device.Location.GeoPosition%601> </xref:System.Device.Location.GeoPositionChangedEventArgs%601>"
  example:
  - "The following example shows how to handle the first PositionChanged event.  \n  \n [!code-vb[System.Device.Location.LocationEvent1#1](~/add/codesnippet/visualbasic/locationevent/locationevent.vb#1)]\n [!code-cs[System.Device.Location.LocationEvent1#1](~/add/codesnippet/csharp/locationevent/locationevent.cs#1)]"
  syntax:
    content: public event EventHandler<System.Device.Location.GeoPositionChangedEventArgs<System.Device.Location.GeoCoordinate>> PositionChanged;
    return:
      type: System.EventHandler{System.Device.Location.GeoPositionChangedEventArgs{System.Device.Location.GeoCoordinate}}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.Start
  id: Start
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: Start()
  nameWithType: GeoCoordinateWatcher.Start()
  fullName: System.Device.Location.GeoCoordinateWatcher.Start()
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Avviare l&quot;acquisizione dei dati dal provider di posizione corrente. Questo metodo consente <xref href=&quot;System.Device.Location.GeoCoordinateWatcher.PositionChanged&quot;> </xref> gli eventi e consente l&quot;accesso per il <xref:System.Device.Location.GeoCoordinateWatcher.Position*>proprietà.</xref:System.Device.Location.GeoCoordinateWatcher.Position*>"
  remarks: "Chiamare questo metodo verrà avviata l&quot;acquisizione dei dati dal provider di posizione corrente. Provider di posizione corrente viene selezionato in base a fattori quali l&quot;età e l&quot;accuratezza dei dati da tutti i provider, l&quot;accuratezza richiesta dall&quot;applicazione o le applicazioni e il consumo di energia e impatto sulle prestazioni associati al provider di percorso. Il provider del percorso corrente potrebbe cambiare nel tempo, ad esempio, quando un dispositivo GPS perde il segnale satellite interni e un provider di eseguire la triangolazione Wi-Fi diventa il provider più preciso del computer.       Se la priorità corrente provider di posizione non dispone di dati quando il <xref:System.Device.Location.GeoCoordinateWatcher.Start%2A>metodo viene chiamato, inizierà ad acquisire i dati.</xref:System.Device.Location.GeoCoordinateWatcher.Start%2A> Se le autorizzazioni sono state concesse al client quando i dati diventano disponibili, è possibile accedere in modo sincrono, dati e verranno recapitati in modo asincrono se vengono gestiti gli eventi.       Se la piattaforma Windows 7 sensore e il percorso è disabilitata quando <xref:System.Device.Location.GeoCoordinateWatcher.Start%2A>viene chiamato, <xref:System.Device.Location.GeoCoordinateWatcher.Start%2A>restituirà immediatamente, <xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>non vengono generati gli eventi, e il percorso restituito dalla <xref:System.Device.Location.GeoPosition%601.Location%2A>proprietà di <xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>conterrà <xref:System.Device.Location.GeoCoordinate.Unknown>.</xref:System.Device.Location.GeoCoordinate.Unknown> </xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> </xref:System.Device.Location.GeoPosition%601.Location%2A> </xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged> </xref:System.Device.Location.GeoCoordinateWatcher.Start%2A> </xref:System.Device.Location.GeoCoordinateWatcher.Start%2A>       Se il provider di percorso con priorità corrente dispone di dati, sarà disponibile immediatamente in modo sincrono e verranno recapitato in modo asincrono se vengono gestiti gli eventi.       Se l&quot;applicazione chiamante non dispone delle autorizzazioni per accedere ai dati da un provider di posizione, l&quot;utente verrà richiesto la finestra di dialogo per concedere o negare l&quot;autorizzazione. Nella finestra di dialogo sarà non modale."
  example:
  - "The following program handles the first location update that occurs after Start is called.  \n  \n [!code-vb[System.Device.Location.GetLocationDataUpdateOnce#1](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataUpdateOnce/GetLocationDataUpdateOnce.vb#1)]\n [!code-cs[System.Device.Location.GetLocationDataUpdateOnce#1](~/add/codesnippet/csharp/getlocationdataupdateonce/getlocationdataupdateonce.cs#1)]"
  syntax:
    content: public void Start ();
    parameters: []
  overload: System.Device.Location.GeoCoordinateWatcher.Start*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.Start(System.Boolean)
  id: Start(System.Boolean)
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: Start(Boolean)
  nameWithType: GeoCoordinateWatcher.Start(Boolean)
  fullName: System.Device.Location.GeoCoordinateWatcher.Start(Boolean)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Avviare l&quot;acquisizione dei dati dal provider di posizione corrente. Questo metodo consente <xref href=&quot;System.Device.Location.GeoCoordinateWatcher.PositionChanged&quot;> </xref> gli eventi e consente l&quot;accesso per il <xref:System.Device.Location.GeoCoordinateWatcher.Position*>proprietà.</xref:System.Device.Location.GeoCoordinateWatcher.Position*>"
  syntax:
    content: public void Start (bool suppressPermissionPrompt);
    parameters:
    - id: suppressPermissionPrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per eliminare la finestra di dialogo di autorizzazione; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per essere visualizzato facoltativamente nella finestra di dialogo autorizzazioni se le autorizzazioni non sono già state concesse."
  overload: System.Device.Location.GeoCoordinateWatcher.Start*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.Status
  id: Status
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: Status
  nameWithType: GeoCoordinateWatcher.Status
  fullName: System.Device.Location.GeoCoordinateWatcher.Status
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Ottiene lo stato corrente di <xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;> </xref>."
  remarks: ''
  example:
  - "The following example handles <xref:System.Device.Location.GeoCoordinateWatcher.StatusChanged> events and prints a message based on the Status.  \n  \n [!code-cs[System.Device.Location.ShowStatusUpdates#1](~/add/codesnippet/csharp/showstatusupdates/showstatusupdates.cs#1)]\n [!code-vb[System.Device.Location.ShowStatusUpdates#1](~/add/codesnippet/visualbasic/System.Device.Location.ShowStatusUpdates/ShowStatusUpdates.vb#1)]"
  syntax:
    content: public System.Device.Location.GeoPositionStatus Status { get; }
    return:
      type: System.Device.Location.GeoPositionStatus
      description: "Oggetto <xref href=&quot;System.Device.Location.GeoPositionStatus&quot;> </xref> che indica la disponibilità dei dati dal <xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;> </xref>."
  overload: System.Device.Location.GeoCoordinateWatcher.Status*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.StatusChanged
  id: StatusChanged
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: StatusChanged
  nameWithType: GeoCoordinateWatcher.StatusChanged
  fullName: System.Device.Location.GeoCoordinateWatcher.StatusChanged
  type: Event
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Indica che lo stato di <xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;> </xref> oggetto è stato modificato."
  remarks: "Il StatusChanged evento sullo stesso thread che il <xref:System.Device.Location.GeoCoordinateWatcher>oggetto è stato creato.</xref:System.Device.Location.GeoCoordinateWatcher>"
  example:
  - "The following example demonstrates how to handle StatusChanged events.  \n  \n [!code-cs[System.Device.Location.ShowStatusUpdates#1](~/add/codesnippet/csharp/showstatusupdates/showstatusupdates.cs#1)]\n [!code-vb[System.Device.Location.ShowStatusUpdates#1](~/add/codesnippet/visualbasic/System.Device.Location.ShowStatusUpdates/ShowStatusUpdates.vb#1)]"
  syntax:
    content: public event EventHandler<System.Device.Location.GeoPositionStatusChangedEventArgs> StatusChanged;
    return:
      type: System.EventHandler{System.Device.Location.GeoPositionStatusChangedEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.Stop
  id: Stop
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: Stop()
  nameWithType: GeoCoordinateWatcher.Stop()
  fullName: System.Device.Location.GeoCoordinateWatcher.Stop()
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Arresta il <xref href=&quot;System.Device.Location.GeoCoordinateWatcher&quot;> </xref> di fornire dati sulla località e gli eventi."
  remarks: "Dopo che viene chiamato, non ulteriormente <xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>eventi si verificano e la <xref:System.Device.Location.GeoCoordinateWatcher.Position%2A>proprietà restituirà <xref:System.Device.Location.GeoCoordinate.Unknown>.</xref:System.Device.Location.GeoCoordinate.Unknown> </xref:System.Device.Location.GeoCoordinateWatcher.Position%2A> </xref:System.Device.Location.GeoCoordinateWatcher.PositionChanged>       Quando viene chiamato, la <xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>proprietà è impostata su <xref:System.Device.Location.GeoLocationStatus.Disabled>.</xref:System.Device.Location.GeoLocationStatus.Disabled> </xref:System.Device.Location.GeoCoordinateWatcher.Status%2A>"
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Device.Location.GeoCoordinateWatcher.Stop*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinateWatcher.TryStart(System.Boolean,System.TimeSpan)
  id: TryStart(System.Boolean,System.TimeSpan)
  parent: System.Device.Location.GeoCoordinateWatcher
  langs:
  - csharp
  name: TryStart(Boolean,TimeSpan)
  nameWithType: GeoCoordinateWatcher.TryStart(Boolean,TimeSpan)
  fullName: System.Device.Location.GeoCoordinateWatcher.TryStart(Boolean,TimeSpan)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "Avvia l&quot;acquisizione dei dati dal provider di posizione corrente. Questo metodo restituisce in modo sincrono."
  remarks: "Questo metodo blocca l&quot;esecuzione del thread chiamante durante il periodo di tempo specificato da `timeout`. Prestare attenzione quando si chiama TryStart dal thread dell&quot;interfaccia utente dell&quot;applicazione."
  example:
  - "The following example demonstrates how to call TryStart.  \n  \n [!code-vb[System.Device.Location.GetLocationDataSync1#1](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataSync1/GetLocationDataSync.vb#1)]\n [!code-cs[System.Device.Location.GetLocationDataSync1#1](~/add/codesnippet/csharp/getlocationdatasync/getlocationdatasync.cs#1)]"
  syntax:
    content: public bool TryStart (bool suppressPermissionPrompt, TimeSpan timeout);
    parameters:
    - id: suppressPermissionPrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per eliminare la finestra di dialogo di autorizzazione; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per visualizzare la finestra di dialogo autorizzazioni."
    - id: timeout
      type: System.TimeSpan
      description: "Tempo in millisecondi da attendere per il provider di posizione avviare prima del timeout."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;acquisizione dei dati viene avviato entro il periodo di tempo specificato da <code> timeout </code>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Device.Location.GeoCoordinateWatcher.TryStart*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Device.Location.GeoCoordinateWatcher.#ctor
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: GeoCoordinateWatcher()
  nameWithType: GeoCoordinateWatcher.GeoCoordinateWatcher()
  fullName: System.Device.Location.GeoCoordinateWatcher.GeoCoordinateWatcher()
- uid: System.Device.Location.GeoCoordinateWatcher.#ctor(System.Device.Location.GeoPositionAccuracy)
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: GeoCoordinateWatcher(GeoPositionAccuracy)
  nameWithType: GeoCoordinateWatcher.GeoCoordinateWatcher(GeoPositionAccuracy)
  fullName: System.Device.Location.GeoCoordinateWatcher.GeoCoordinateWatcher(GeoPositionAccuracy)
- uid: System.Device.Location.GeoPositionAccuracy
  parent: System.Device.Location
  isExternal: false
  name: GeoPositionAccuracy
  nameWithType: GeoPositionAccuracy
  fullName: System.Device.Location.GeoPositionAccuracy
- uid: System.Device.Location.GeoCoordinateWatcher.DesiredAccuracy
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: DesiredAccuracy
  nameWithType: GeoCoordinateWatcher.DesiredAccuracy
  fullName: System.Device.Location.GeoCoordinateWatcher.DesiredAccuracy
- uid: System.Device.Location.GeoCoordinateWatcher.Dispose
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Dispose()
  nameWithType: GeoCoordinateWatcher.Dispose()
  fullName: System.Device.Location.GeoCoordinateWatcher.Dispose()
- uid: System.Device.Location.GeoCoordinateWatcher.Dispose(System.Boolean)
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: GeoCoordinateWatcher.Dispose(Boolean)
  fullName: System.Device.Location.GeoCoordinateWatcher.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Device.Location.GeoCoordinateWatcher.Finalize
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Finalize()
  nameWithType: GeoCoordinateWatcher.Finalize()
  fullName: System.Device.Location.GeoCoordinateWatcher.Finalize()
- uid: System.Device.Location.GeoCoordinateWatcher.MovementThreshold
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: MovementThreshold
  nameWithType: GeoCoordinateWatcher.MovementThreshold
  fullName: System.Device.Location.GeoCoordinateWatcher.MovementThreshold
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Device.Location.GeoCoordinateWatcher.OnPositionChanged(System.Device.Location.GeoPositionChangedEventArgs{System.Device.Location.GeoCoordinate})
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: OnPositionChanged(GeoPositionChangedEventArgs<GeoCoordinate>)
  nameWithType: GeoCoordinateWatcher.OnPositionChanged(GeoPositionChangedEventArgs<GeoCoordinate>)
  fullName: System.Device.Location.GeoCoordinateWatcher.OnPositionChanged(GeoPositionChangedEventArgs<GeoCoordinate>)
- uid: System.Device.Location.GeoPositionChangedEventArgs{System.Device.Location.GeoCoordinate}
  parent: System.Device.Location
  isExternal: false
  name: GeoPositionChangedEventArgs<GeoCoordinate>
  nameWithType: GeoPositionChangedEventArgs<GeoCoordinate>
  fullName: System.Device.Location.GeoPositionChangedEventArgs<System.Device.Location.GeoCoordinate>
  spec.csharp:
  - uid: System.Device.Location.GeoPositionChangedEventArgs`1
    name: GeoPositionChangedEventArgs
    nameWithType: GeoPositionChangedEventArgs
    fullName: GeoPositionChangedEventArgs<System.Device.Location.GeoCoordinate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Device.Location.GeoCoordinate
    name: GeoCoordinate
    nameWithType: GeoCoordinate
    fullName: GeoCoordinate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Device.Location.GeoCoordinateWatcher.OnPositionStatusChanged(System.Device.Location.GeoPositionStatusChangedEventArgs)
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: OnPositionStatusChanged(GeoPositionStatusChangedEventArgs)
  nameWithType: GeoCoordinateWatcher.OnPositionStatusChanged(GeoPositionStatusChangedEventArgs)
  fullName: System.Device.Location.GeoCoordinateWatcher.OnPositionStatusChanged(GeoPositionStatusChangedEventArgs)
- uid: System.Device.Location.GeoPositionStatusChangedEventArgs
  parent: System.Device.Location
  isExternal: false
  name: GeoPositionStatusChangedEventArgs
  nameWithType: GeoPositionStatusChangedEventArgs
  fullName: System.Device.Location.GeoPositionStatusChangedEventArgs
- uid: System.Device.Location.GeoCoordinateWatcher.OnPropertyChanged(System.String)
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: OnPropertyChanged(String)
  nameWithType: GeoCoordinateWatcher.OnPropertyChanged(String)
  fullName: System.Device.Location.GeoCoordinateWatcher.OnPropertyChanged(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Device.Location.GeoCoordinateWatcher.Permission
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Permission
  nameWithType: GeoCoordinateWatcher.Permission
  fullName: System.Device.Location.GeoCoordinateWatcher.Permission
- uid: System.Device.Location.GeoPositionPermission
  parent: System.Device.Location
  isExternal: false
  name: GeoPositionPermission
  nameWithType: GeoPositionPermission
  fullName: System.Device.Location.GeoPositionPermission
- uid: System.Device.Location.GeoCoordinateWatcher.Position
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Position
  nameWithType: GeoCoordinateWatcher.Position
  fullName: System.Device.Location.GeoCoordinateWatcher.Position
- uid: System.Device.Location.GeoPosition{System.Device.Location.GeoCoordinate}
  parent: System.Device.Location
  isExternal: false
  name: GeoPosition<GeoCoordinate>
  nameWithType: GeoPosition<GeoCoordinate>
  fullName: System.Device.Location.GeoPosition<System.Device.Location.GeoCoordinate>
  spec.csharp:
  - uid: System.Device.Location.GeoPosition`1
    name: GeoPosition
    nameWithType: GeoPosition
    fullName: GeoPosition<System.Device.Location.GeoCoordinate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Device.Location.GeoCoordinate
    name: GeoCoordinate
    nameWithType: GeoCoordinate
    fullName: GeoCoordinate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Device.Location.GeoCoordinateWatcher.PositionChanged
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: PositionChanged
  nameWithType: GeoCoordinateWatcher.PositionChanged
  fullName: System.Device.Location.GeoCoordinateWatcher.PositionChanged
- uid: System.EventHandler{System.Device.Location.GeoPositionChangedEventArgs{System.Device.Location.GeoCoordinate}}
  parent: System
  isExternal: true
  name: EventHandler<GeoPositionChangedEventArgs<GeoCoordinate>>
  nameWithType: EventHandler<GeoPositionChangedEventArgs<GeoCoordinate>>
  fullName: System.EventHandler<System.Device.Location.GeoPositionChangedEventArgs<System.Device.Location.GeoCoordinate>>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Device.Location.GeoPositionChangedEventArgs<System.Device.Location.GeoCoordinate>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Device.Location.GeoPositionChangedEventArgs`1
    name: GeoPositionChangedEventArgs
    nameWithType: GeoPositionChangedEventArgs
    fullName: GeoPositionChangedEventArgs<System.Device.Location.GeoCoordinate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Device.Location.GeoCoordinate
    name: GeoCoordinate
    nameWithType: GeoCoordinate
    fullName: GeoCoordinate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Device.Location.GeoCoordinateWatcher.Start
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Start()
  nameWithType: GeoCoordinateWatcher.Start()
  fullName: System.Device.Location.GeoCoordinateWatcher.Start()
- uid: System.Device.Location.GeoCoordinateWatcher.Start(System.Boolean)
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Start(Boolean)
  nameWithType: GeoCoordinateWatcher.Start(Boolean)
  fullName: System.Device.Location.GeoCoordinateWatcher.Start(Boolean)
- uid: System.Device.Location.GeoCoordinateWatcher.Status
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Status
  nameWithType: GeoCoordinateWatcher.Status
  fullName: System.Device.Location.GeoCoordinateWatcher.Status
- uid: System.Device.Location.GeoPositionStatus
  parent: System.Device.Location
  isExternal: false
  name: GeoPositionStatus
  nameWithType: GeoPositionStatus
  fullName: System.Device.Location.GeoPositionStatus
- uid: System.Device.Location.GeoCoordinateWatcher.StatusChanged
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: StatusChanged
  nameWithType: GeoCoordinateWatcher.StatusChanged
  fullName: System.Device.Location.GeoCoordinateWatcher.StatusChanged
- uid: System.EventHandler{System.Device.Location.GeoPositionStatusChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<GeoPositionStatusChangedEventArgs>
  nameWithType: EventHandler<GeoPositionStatusChangedEventArgs>
  fullName: System.EventHandler<System.Device.Location.GeoPositionStatusChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Device.Location.GeoPositionStatusChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Device.Location.GeoPositionStatusChangedEventArgs
    name: GeoPositionStatusChangedEventArgs
    nameWithType: GeoPositionStatusChangedEventArgs
    fullName: GeoPositionStatusChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Device.Location.GeoCoordinateWatcher.Stop
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Stop()
  nameWithType: GeoCoordinateWatcher.Stop()
  fullName: System.Device.Location.GeoCoordinateWatcher.Stop()
- uid: System.Device.Location.GeoCoordinateWatcher.TryStart(System.Boolean,System.TimeSpan)
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: TryStart(Boolean,TimeSpan)
  nameWithType: GeoCoordinateWatcher.TryStart(Boolean,TimeSpan)
  fullName: System.Device.Location.GeoCoordinateWatcher.TryStart(Boolean,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Device.Location.GeoCoordinateWatcher.#ctor*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: GeoCoordinateWatcher
  nameWithType: GeoCoordinateWatcher.GeoCoordinateWatcher
- uid: System.Device.Location.GeoCoordinateWatcher.DesiredAccuracy*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: DesiredAccuracy
  nameWithType: GeoCoordinateWatcher.DesiredAccuracy
- uid: System.Device.Location.GeoCoordinateWatcher.Dispose*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Dispose
  nameWithType: GeoCoordinateWatcher.Dispose
- uid: System.Device.Location.GeoCoordinateWatcher.Finalize*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Finalize
  nameWithType: GeoCoordinateWatcher.Finalize
- uid: System.Device.Location.GeoCoordinateWatcher.MovementThreshold*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: MovementThreshold
  nameWithType: GeoCoordinateWatcher.MovementThreshold
- uid: System.Device.Location.GeoCoordinateWatcher.OnPositionChanged*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: OnPositionChanged
  nameWithType: GeoCoordinateWatcher.OnPositionChanged
- uid: System.Device.Location.GeoCoordinateWatcher.OnPositionStatusChanged*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: OnPositionStatusChanged
  nameWithType: GeoCoordinateWatcher.OnPositionStatusChanged
- uid: System.Device.Location.GeoCoordinateWatcher.OnPropertyChanged*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: OnPropertyChanged
  nameWithType: GeoCoordinateWatcher.OnPropertyChanged
- uid: System.Device.Location.GeoCoordinateWatcher.Permission*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Permission
  nameWithType: GeoCoordinateWatcher.Permission
- uid: System.Device.Location.GeoCoordinateWatcher.Position*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Position
  nameWithType: GeoCoordinateWatcher.Position
- uid: System.Device.Location.GeoCoordinateWatcher.Start*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Start
  nameWithType: GeoCoordinateWatcher.Start
- uid: System.Device.Location.GeoCoordinateWatcher.Status*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Status
  nameWithType: GeoCoordinateWatcher.Status
- uid: System.Device.Location.GeoCoordinateWatcher.Stop*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: Stop
  nameWithType: GeoCoordinateWatcher.Stop
- uid: System.Device.Location.GeoCoordinateWatcher.TryStart*
  parent: System.Device.Location.GeoCoordinateWatcher
  isExternal: false
  name: TryStart
  nameWithType: GeoCoordinateWatcher.TryStart
