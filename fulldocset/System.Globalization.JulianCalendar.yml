### YamlMime:ManagedReference
items:
- uid: System.Globalization.JulianCalendar
  id: JulianCalendar
  children:
  - System.Globalization.JulianCalendar.#ctor
  - System.Globalization.JulianCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.JulianCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.JulianCalendar.AlgorithmType
  - System.Globalization.JulianCalendar.Eras
  - System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.JulianCalendar.GetEra(System.DateTime)
  - System.Globalization.JulianCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.JulianCalendar.GetMonth(System.DateTime)
  - System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.JulianCalendar.GetYear(System.DateTime)
  - System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.JulianCalendar.JulianEra
  - System.Globalization.JulianCalendar.MaxSupportedDateTime
  - System.Globalization.JulianCalendar.MinSupportedDateTime
  - System.Globalization.JulianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.JulianCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.JulianCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: JulianCalendar
  nameWithType: JulianCalendar
  fullName: System.Globalization.JulianCalendar
  type: Class
  summary: "Rappresenta il calendario giuliano."
  remarks: "Julius Caesar A.C. 45, ordinate una riforma del calendario e ciò ha provocato il calendario chiamato il calendario giuliano. Il calendario giuliano è il predecessore del calendario gregoriano.      > [!NOTE] > Per informazioni sull&quot;utilizzo di <xref:System.Globalization.HebrewCalendar>classe e l&quot;altro calendario classi in .NET Framework, vedere [utilizzo di calendari](~/add/includes/ajax-current-ext-md.md).</xref:System.Globalization.HebrewCalendar>       La classe JulianCalendar riconosce solo l&quot;era corrente.       A differenza del calendario gregoriano, il calendario giuliano definisce un anno bisestile l&quot;anno divisibile per quattro senza eccezioni. Pertanto, il calendario è accurato di un giorno ogni 128 anni. Un anno normale è 365 giorni e un anno bisestile ha 366 giorni.       Come calendario gregoriano, il calendario giuliano dispone di dodici mesi con 28-31 giorni ogni: (31 giorni) di gennaio, febbraio (28 o 29 giorni), marzo (31 giorni), aprile (30 giorni), maggio (31 giorni), (30 giorni) di giugno, luglio (31 giorni), agosto (31 giorni), settembre (30 giorni), ottobre (31 giorni), novembre (30 giorni) e dicembre (31 giorni). Febbraio ha 29 giorni negli anni bisestili e 28 durante gli anni normali.       La data 1 gennaio 2001 D.C. nel calendario gregoriano equivale al 19 giorno del mese di dicembre dell&quot;anno 2000 D.C. nel calendario giuliano.       Attualmente, il JulianCalendar non è utilizzata da qualsiasi lingua supportata dalla <xref:System.Globalization.CultureInfo>classe.</xref:System.Globalization.CultureInfo> Pertanto, la classe JulianCalendar può essere utilizzata solo per calcolare le date nel calendario giuliano.       Ogni <xref:System.Globalization.CultureInfo>oggetto supporta un set di calendari.</xref:System.Globalization.CultureInfo> Il <xref:System.Globalization.CultureInfo.Calendar%2A>proprietà restituisce il calendario predefinito per le impostazioni cultura e <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>proprietà restituisce una matrice contenente tutti i calendari supportati dalle impostazioni cultura.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Per modificare il calendario utilizzato da un oggetto <xref:System.Globalization.CultureInfo>l&quot;applicazione deve impostare la <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>proprietà <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>di un nuovo <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CultureInfo>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class JulianCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: JulianCalendar()
  nameWithType: JulianCalendar.JulianCalendar()
  fullName: System.Globalization.JulianCalendar.JulianCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Globalization.JulianCalendar&quot;> </xref> classe."
  syntax:
    content: public JulianCalendar ();
    parameters: []
  overload: System.Globalization.JulianCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: JulianCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.JulianCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce un <xref:System.DateTime>che rappresenta il numero specificato di mesi lontano specificata <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "La parte del giorno dell&quot;oggetto risultante <xref:System.DateTime>verrà modificata se il giorno risultante non è un giorno del mese dell&quot;anno risultante risultante valido.</xref:System.DateTime> Verrà utilizzato l&quot;ultimo giorno del mese dell&quot;anno risultante risultante valido. La parte dell&quot;anno risultante <xref:System.DateTime>verrà modificata se il mese risulta è all&quot;esterno dell&quot;anno specificato <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Questa implementazione supporta solo l&quot;era corrente. Di conseguenza, <xref:System.ArgumentException>viene generata se l&quot;anno risultante è all&quot;esterno dell&quot;era specificata <xref:System.DateTime>.</xref:System.DateTime> </xref:System.ArgumentException> La parte dell&quot;ora del giorno di risultante <xref:System.DateTime>rimane invariata specificata <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Ad esempio, il mese specificato è ottobre, che ha 31 giorni, il giorno specificato è il giorno 31 del mese e il valore di `months` parametro è 6, l&quot;anno risultante è maggiore di uno rispetto a quello specificato, il mese risultante è aprile e il giorno risultante è il giorno 30, ovvero l&quot;ultimo giorno nel mese di aprile.       Se il valore di `months` parametro è negativo, risultante <xref:System.DateTime>è precedente a specificata <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       La<xref:System.DateTime.Kind%2A> proprietà di restituito <xref:System.DateTime>sempre valore è uguale a <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> È possibile mantenere il <xref:System.DateTime.Kind%2A>proprietà del `time` parametro chiamando il <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>metodo, come illustrato nell&quot;esempio seguente.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.j_20_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.j_20_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.  \n  \n [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_20_2.vb)]\n [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_20_2.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_20_2.cs)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "Il <xref:System.DateTime>a cui aggiungere i mesi.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "Il numero di mesi da aggiungere."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>Ottenuto dall&quot;aggiunta del numero specificato di mesi specificato <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.JulianCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il valore risultante <xref:System.DateTime>non è compreso nell&quot;intervallo supportato.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>è minore di -120000.       - oppure - <code>months</code> è maggiore di 120000."
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: JulianCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.JulianCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce un <xref:System.DateTime>che rappresenta il numero specificato di anni lontano specificata <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "La parte del giorno dell&quot;oggetto risultante <xref:System.DateTime>verrà modificata se il giorno risultante non è un giorno del mese dell&quot;anno risultante risultante valido.</xref:System.DateTime> Verrà utilizzato l&quot;ultimo giorno del mese dell&quot;anno risultante risultante valido. La parte del mese di risultante <xref:System.DateTime>rimane invariata specificata <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Questa implementazione supporta solo l&quot;era corrente. Di conseguenza, <xref:System.ArgumentException>viene generata se l&quot;anno risultante è all&quot;esterno dell&quot;era specificata <xref:System.DateTime>.</xref:System.DateTime> </xref:System.ArgumentException> La parte dell&quot;ora del giorno di risultante <xref:System.DateTime>rimane invariata specificata <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Ad esempio, febbraio ha 28 giorni, eccetto durante gli anni bisestili quando ne ha 29 giorni. Se la data specificata è il giorno del mese di febbraio di un anno bisestile 29 e il valore di `years` è 1, la data risultante è il giorno 28 febbraio nell&quot;anno successivo.       Se `years` è negativo, risultante <xref:System.DateTime>è precedente a specificata <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       La<xref:System.DateTime.Kind%2A> proprietà di restituito <xref:System.DateTime>sempre valore è uguale a <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> È possibile mantenere il <xref:System.DateTime.Kind%2A>proprietà del `time` parametro chiamando il <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>metodo, come illustrato nell&quot;esempio seguente.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.j_19_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.j_19_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.  \n  \n [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_19_2.vb)]\n [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_19_2.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_19_2.cs)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "Il <xref:System.DateTime>a cui aggiungere anni.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "Il numero di anni da aggiungere."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>Ottenuto dall&quot;aggiunta del numero specificato di anni specificato <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.JulianCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il valore risultante <xref:System.DateTime>non è compreso nell&quot;intervallo supportato.</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: JulianCalendar.AlgorithmType
  fullName: System.Globalization.JulianCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Ottiene un valore che indica se il calendario corrente è solare, lunare o una combinazione di entrambi."
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.j_6_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.j_6_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Restituisce sempre <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.JulianCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.Eras
  id: Eras
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: JulianCalendar.Eras
  fullName: System.Globalization.JulianCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Ottiene l&quot;elenco delle ere nel <xref href=&quot;System.Globalization.JulianCalendar&quot;> </xref>."
  remarks: "La <xref:System.Globalization.JulianCalendar>classe riconosce solo l&quot;era corrente.</xref:System.Globalization.JulianCalendar> Questa proprietà restituisce sempre una matrice con un solo elemento."
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "Una matrice di interi che rappresenta le ere nel <xref href=&quot;System.Globalization.JulianCalendar&quot;> </xref>."
  overload: System.Globalization.JulianCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: JulianCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.JulianCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce il giorno del mese specificato <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.  \n  \n [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_8_1.vb)]\n [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_8_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_8_1.cs)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Il <xref:System.DateTime>da leggere.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Intero compreso tra 1 e 31 che rappresenta il giorno del mese nel <code> time </code>."
  overload: System.Globalization.JulianCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: JulianCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.JulianCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce il giorno della settimana specificato <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Il <xref:System.DayOfWeek>i valori sono domenica, lunedì, martedì, mercoledì, giovedì, venerdì e sabato.</xref:System.DayOfWeek>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.  \n  \n [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_6_1.vb)]\n [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_6_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_6_1.cs)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Il <xref:System.DateTime>da leggere.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "Oggetto <xref:System.DayOfWeek>valore che rappresenta il giorno della settimana in <code> time </code>.</xref:System.DayOfWeek>"
  overload: System.Globalization.JulianCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: JulianCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.JulianCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce il giorno dell&quot;anno specificato <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Il giorno dell&quot;anno è definito come il numero di giorni dal primo giorno dell&quot;anno. Ad esempio, GetDayOfYear per il primo giorno del mese prima restituisce 1 e GetDayOfYear per l&quot;ultimo giorno del mese scorso restituisce il numero totale di giorni nell&quot;anno. Il totale è lo stesso valore restituito da <xref:System.Globalization.JulianCalendar.GetDaysInYear%2A>.</xref:System.Globalization.JulianCalendar.GetDaysInYear%2A>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.  \n  \n [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_0_1.vb)]\n [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_0_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_0_1.cs)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Il <xref:System.DateTime>da leggere.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Intero compreso tra 1 e 366 che rappresenta il giorno dell&quot;anno nel <code> time </code>."
  overload: System.Globalization.JulianCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: JulianCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JulianCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce il numero di giorni nel mese specificato nell&quot;anno specificato dell&quot;era specificata."
  remarks: "Questo metodo restituisce 28 o 29 per febbraio (`month` = 2), a seconda se `year` è bisestile."
  example:
  - "The following example calls GetDaysInMonth for the second month in each of five years in each era.  \n  \n [!code-cpp[System.Globalization.JulianCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/44fd8236-349c-466d-b6f3-_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/44fd8236-349c-466d-b6f3-_1.cs)]\n [!code-vb[System.Globalization.JulianCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/44fd8236-349c-466d-b6f3-_1.vb)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;anno."
    - id: month
      type: System.Int32
      description: "Intero compreso tra 1 e 12 che rappresenta il mese."
    - id: era
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;era."
    return:
      type: System.Int32
      description: "Il numero di giorni nel mese specificato nell&quot;anno specificato dell&quot;era specificata."
  overload: System.Globalization.JulianCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>non è compreso nell&quot;intervallo supportato dal calendario.       - oppure - <code>year</code> è compreso nell&quot;intervallo supportato dal calendario.       - oppure - <code>month</code> è compreso nell&quot;intervallo supportato dal calendario."
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: JulianCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.JulianCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce il numero di giorni nell&quot;anno specificato dell&quot;era specificata."
  remarks: "Questo metodo restituisce 365 o 366, a seconda che `year` è bisestile."
  example:
  - "The following example calls GetDaysInYear for five years in each era.  \n  \n [!code-cs[System.Globalization.JulianCalendar.GetDaysInYear#1](~/add/codesnippet/csharp/m-system.globalization.j_11_1.cs)]\n [!code-cpp[System.Globalization.JulianCalendar.GetDaysInYear#1](~/add/codesnippet/cpp/m-system.globalization.j_11_1.cpp)]\n [!code-vb[System.Globalization.JulianCalendar.GetDaysInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.j_11_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;anno."
    - id: era
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;era."
    return:
      type: System.Int32
      description: "Il numero di giorni nell&quot;anno specificato dell&quot;era specificata."
  overload: System.Globalization.JulianCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>non è compreso nell&quot;intervallo supportato dal calendario.       - oppure - <code>year</code> è compreso nell&quot;intervallo supportato dal calendario."
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: JulianCalendar.GetEra(DateTime)
  fullName: System.Globalization.JulianCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce l&quot;era specificata <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "La <xref:System.Globalization.JulianCalendar>classe riconosce solo l&quot;era corrente.</xref:System.Globalization.JulianCalendar>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.  \n  \n [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_1_1.vb)]\n [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_1_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_1_1.cs)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Il <xref:System.DateTime>da leggere.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;era nella <code> time </code>."
  overload: System.Globalization.JulianCalendar.GetEra*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: JulianCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.JulianCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcola il mese intercalare per un anno ed era specificati."
  remarks: "In un calendario che supporta la nozione di mese intercalare, il mese intercalare può verificarsi dopo un determinato mese o dopo un mese di un anno. Ad esempio, il <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>metodo restituisce un numero compreso tra 1 e 13 che indica il mese associato a una data specificata.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Se non c&quot;è un mese intercalare tra l&quot;ottavo e nono mesi dell&quot;anno, il <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>restituisce 8 per il mese ottavo, 9 per l&quot;ottavo mese intercalare e 10 per il mese nono.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;anno."
    - id: era
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;era."
    return:
      type: System.Int32
      description: "Un numero intero positivo che indica il mese intercalare nell&quot;anno specificato e nell&quot;era. In alternativa, questo metodo restituisce zero se il calendario non supporta un mese intercalare o se <code> year </code> e <code> era </code> non si specifica un anno bisestile."
  overload: System.Globalization.JulianCalendar.GetLeapMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: JulianCalendar.GetMonth(DateTime)
  fullName: System.Globalization.JulianCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce il mese specificato <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.  \n  \n [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_15_1.vb)]\n [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_15_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_15_1.cs)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Il <xref:System.DateTime>da leggere.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Intero compreso tra 1 e 12 che rappresenta il mese in <code> time </code>."
  overload: System.Globalization.JulianCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: JulianCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.JulianCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce il numero di mesi nell&quot;anno specificato dell&quot;era specificata."
  remarks: ''
  example:
  - "The following example calls GetMonthsInYear for five years in each era.  \n  \n [!code-vb[System.Globalization.JulianCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.j_7_1.vb)]\n [!code-cpp[System.Globalization.JulianCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/m-system.globalization.j_7_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/m-system.globalization.j_7_1.cs)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;anno."
    - id: era
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;era."
    return:
      type: System.Int32
      description: "Il numero di mesi nell&quot;anno specificato dell&quot;era specificata."
  overload: System.Globalization.JulianCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>non è compreso nell&quot;intervallo supportato dal calendario.       - oppure - <code>year</code> è compreso nell&quot;intervallo supportato dal calendario."
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: JulianCalendar.GetYear(DateTime)
  fullName: System.Globalization.JulianCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce l&quot;anno specificato <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Julian calendar.  \n  \n [!code-vb[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_12_1.vb)]\n [!code-cpp[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_12_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_12_1.cs)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Il <xref:System.DateTime>da leggere.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;anno in <code> time </code>."
  overload: System.Globalization.JulianCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: JulianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JulianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se la data specificata nell&quot;era specificata è un giorno intercalare."
  remarks: "A differenza del calendario gregoriano, il calendario giuliano definisce un anno bisestile l&quot;anno divisibile per quattro senza eccezioni. Pertanto, il calendario è accurato di un giorno ogni 128 anni. Ad esempio, anno 1999 non è un anno bisestile, ma è stato l&quot;anno 2000. Un anno normale è 365 giorni e un anno bisestile ha 366 giorni.       Un giorno intercalare è un giorno in cui si verifica solo in un anno bisestile. Nel calendario giuliano, 29 giorno del mese di febbraio è l&quot;unico giorno intercalare."
  example:
  - "The following example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.JulianCalendar.IsLeapDay#1](~/add/codesnippet/csharp/dc155d8f-dfc5-4b2c-b5d1-_1.cs)]\n [!code-cpp[System.Globalization.JulianCalendar.IsLeapDay#1](~/add/codesnippet/cpp/dc155d8f-dfc5-4b2c-b5d1-_1.cpp)]\n [!code-vb[System.Globalization.JulianCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/dc155d8f-dfc5-4b2c-b5d1-_1.vb)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;anno."
    - id: month
      type: System.Int32
      description: "Intero compreso tra 1 e 12 che rappresenta il mese."
    - id: day
      type: System.Int32
      description: "Intero compreso tra 1 e 31 che rappresenta il giorno."
    - id: era
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il giorno specificato è intercalare; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.JulianCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>non è compreso nell&quot;intervallo supportato dal calendario.       - oppure - <code>month</code> è compreso nell&quot;intervallo supportato dal calendario.       - oppure - <code>day</code> è compreso nell&quot;intervallo supportato dal calendario.       - oppure - <code>era</code> è compreso nell&quot;intervallo supportato dal calendario."
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: JulianCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JulianCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se il mese specificato nell&quot;anno specificato dell&quot;era specificati è intercalare."
  remarks: "A differenza del calendario gregoriano, il calendario giuliano definisce un anno bisestile l&quot;anno divisibile per quattro senza eccezioni. Pertanto, il calendario è accurato di un giorno ogni 128 anni. Ad esempio, anno 1999 non è un anno bisestile, ma è stato l&quot;anno 2000. Un anno normale è 365 giorni e un anno bisestile ha 366 giorni.       Un mese intercalare è un intero mese che si verifica solo in un anno bisestile. Il calendario giuliano non dispone dei mesi bisestile."
  example:
  - "The following example calls IsLeapMonth for all the months in five years in the current era.  \n  \n [!code-vb[System.Globalization.JulianCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/ba7f2b6b-4831-427c-a7c2-_1.vb)]\n [!code-cs[System.Globalization.JulianCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/ba7f2b6b-4831-427c-a7c2-_1.cs)]\n [!code-cpp[System.Globalization.JulianCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/ba7f2b6b-4831-427c-a7c2-_1.cpp)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;anno."
    - id: month
      type: System.Int32
      description: "Intero compreso tra 1 e 12 che rappresenta il mese."
    - id: era
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;era."
    return:
      type: System.Boolean
      description: "Questo metodo restituisce sempre <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, a meno che non viene sottoposto a override da una classe derivata."
  overload: System.Globalization.JulianCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>non è compreso nell&quot;intervallo supportato dal calendario.       - oppure - <code>month</code> è compreso nell&quot;intervallo supportato dal calendario.       - oppure - <code>era</code> è compreso nell&quot;intervallo supportato dal calendario."
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: JulianCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.JulianCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se l&quot;anno specificato dell&quot;era specificata è bisestile."
  remarks: "A differenza del calendario gregoriano, il calendario giuliano definisce un anno bisestile l&quot;anno divisibile per quattro senza eccezioni. Pertanto, il calendario è accurato di un giorno ogni 128 anni. Ad esempio, anno 1999 non è un anno bisestile, ma è stato l&quot;anno 2000. Un anno normale è 365 giorni e un anno bisestile ha 366 giorni."
  example:
  - "The following example calls IsLeapYear for five years in each of the eras.  \n  \n [!code-cpp[System.Globalization.JulianCalendar.IsLeapYear#1](~/add/codesnippet/cpp/m-system.globalization.j_3_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.j_3_1.cs)]\n [!code-vb[System.Globalization.JulianCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.j_3_1.vb)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;anno."
    - id: era
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;anno specificato è bisestile; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.JulianCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>non è compreso nell&quot;intervallo supportato dal calendario.       - oppure - <code>era</code> è compreso nell&quot;intervallo supportato dal calendario."
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.JulianEra
  id: JulianEra
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: JulianEra
  nameWithType: JulianCalendar.JulianEra
  fullName: System.Globalization.JulianCalendar.JulianEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Rappresenta l&quot;era corrente. Questo campo è costante."
  remarks: "La <xref:System.Globalization.JulianCalendar>classe riconosce solo l&quot;era corrente.</xref:System.Globalization.JulianCalendar> Questo campo restituisce sempre 1."
  syntax:
    content: public static readonly int JulianEra;
    return:
      type: System.Int32
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: JulianCalendar.MaxSupportedDateTime
  fullName: System.Globalization.JulianCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Ottiene la data e un tempo supportato dal più recente di <xref href=&quot;System.Globalization.JulianCalendar&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cpp[System.Globalization.JulianCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.j_2_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.j_2_1.cs)]\n [!code-vb[System.Globalization.JulianCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.j_2_1.vb)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Data e ora supportate da più recente di <xref href=&quot;System.Globalization.JulianCalendar&quot;> </xref> (classe), che equivale all&quot;ultimo istante del 31 dicembre 9999 D.C. nel calendario gregoriano."
  overload: System.Globalization.JulianCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: JulianCalendar.MinSupportedDateTime
  fullName: System.Globalization.JulianCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Ottiene la prima data e ora supportate dal <xref href=&quot;System.Globalization.JulianCalendar&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cpp[System.Globalization.JulianCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.j_3_1.cpp)]\n [!code-cs[System.Globalization.JulianCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.j_3_1.cs)]\n [!code-vb[System.Globalization.JulianCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.j_3_1.vb)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "La prima data e ora supportate dal <xref href=&quot;System.Globalization.JulianCalendar&quot;> </xref> (classe), che equivale al primo istante del 1 ° gennaio 0001 D.C. nel calendario gregoriano."
  overload: System.Globalization.JulianCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: JulianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JulianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce un <xref:System.DateTime>impostato per la data e ora specificate nell&quot;era specificata.</xref:System.DateTime>"
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;anno."
    - id: month
      type: System.Int32
      description: "Intero compreso tra 1 e 12 che rappresenta il mese."
    - id: day
      type: System.Int32
      description: "Intero compreso tra 1 e 31 che rappresenta il giorno."
    - id: hour
      type: System.Int32
      description: "Intero compreso tra 0 e 23 che rappresenta l&quot;ora."
    - id: minute
      type: System.Int32
      description: "Intero compreso tra 0 e 59 che rappresenta il minuto."
    - id: second
      type: System.Int32
      description: "Intero compreso tra 0 e 59 che rappresenta il secondo."
    - id: millisecond
      type: System.Int32
      description: "Intero compreso tra 0 e 999 che rappresenta il millisecondo."
    - id: era
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;era."
    return:
      type: System.DateTime
      description: "Il <xref:System.DateTime>impostato per la data e ora specificate nell&quot;era corrente.</xref:System.DateTime>"
  overload: System.Globalization.JulianCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>non è compreso nell&quot;intervallo supportato dal calendario.       - oppure - <code>month</code> è compreso nell&quot;intervallo supportato dal calendario.       - oppure - <code>day</code> è compreso nell&quot;intervallo supportato dal calendario.       - oppure - <code>hour</code> è minore di zero o maggiore di 23.       - oppure - <code>minute</code> è minore di zero o maggiore di 59.       - oppure - <code>second</code> è minore di zero o maggiore di 59.       - oppure - <code>millisecond</code> è minore di zero o maggiore di 999.       - oppure - <code>era</code> è compreso nell&quot;intervallo supportato dal calendario."
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: JulianCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.JulianCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Converte l&quot;anno specificato a un anno a quattro cifre usando il <xref:System.Globalization.JulianCalendar.TwoDigitYearMax*>proprietà per determinare il secolo.</xref:System.Globalization.JulianCalendar.TwoDigitYearMax*>"
  remarks: "<xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A>è l&quot;ultimo anno nell&quot;intervallo di 100 anni che può essere rappresentato da un anno a due cifre.</xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> Il secolo viene determinato individuando l&quot;unica occorrenza dell&quot;oggetto specificato `year` all&quot;interno dell&quot;intervallo di 100 anni. Ad esempio, se <xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A>è impostata su 2029, l&quot;intervallo di 100 anni è compreso 1930 al 2029.</xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> Pertanto, un valore di 2 cifre pari a 30 viene interpretato come 1930, mentre un valore di 2 cifre 29 viene interpretato come 2029.       ToFourDigitYear supporta un anno a due cifre o un anno a quattro cifre. Passaggio di un valore di anno a due cifre (minore di 100), il metodo convertire il valore in un valore a quattro cifre in base al <xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A>valore che rappresenta il secolo.</xref:System.Globalization.JulianCalendar.TwoDigitYearMax%2A> Se viene fornito un valore di anno a quattro cifre che rientra nell&quot;intervallo supportato dal calendario a ToFourDigitYear, il metodo restituisce il valore di input effettivo. Se viene fornito un valore a quattro cifre che rientra nell&quot;intervallo supportato dal calendario oppure se viene fornito un valore negativo, il metodo genera un&quot;eccezione."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Intero a due o quattro cifre che rappresenta l&quot;anno da convertire."
    return:
      type: System.Int32
      description: "Valore intero che contiene la rappresentazione a quattro cifre di <code> year </code>."
  overload: System.Globalization.JulianCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>non è compreso nell&quot;intervallo supportato dal calendario."
  platform:
  - net462
- uid: System.Globalization.JulianCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.JulianCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: JulianCalendar.TwoDigitYearMax
  fullName: System.Globalization.JulianCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Ottiene o imposta l&quot;ultimo anno di un intervallo di 100 anni che può essere rappresentato da un anno a 2 cifre."
  remarks: "Questa proprietà consente a un anno a 2 cifre da convertire in modo corretto a un anno a 4 cifre. Ad esempio, se questa proprietà è impostata su 2029, l&quot;intervallo di 100 anni è da 1930 2029. Pertanto, un valore di 2 cifre pari a 30 viene interpretato come 1930, mentre un valore di 2 cifre 29 viene interpretato come 2029.       La <xref:System.Globalization.JulianCalendar>classe non rileva le modifiche nelle impostazioni di sistema.</xref:System.Globalization.JulianCalendar>       L&quot;applicazione può impostare questo valore su 99 per indicare che devono essere considerato letteralmente 2 cifre. Ad esempio, se questa proprietà è impostata su 99, l&quot;intervallo di 100 anni è compreso tra 0 (valore non valido per la maggior parte dei calendari) e 99. Pertanto, un valore di 2 cifre pari a 30 viene interpretato come 30."
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "L&quot;ultimo anno di un intervallo di 100 anni che può essere rappresentato da un anno a 2 cifre."
  overload: System.Globalization.JulianCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore specificato in un&quot;operazione set è inferiore a 99.       Il valore specificato in un&quot;operazione set è maggiore di - oppure - <xref uid=&quot;langword_csharp_MaxSupportedDateTime.Year&quot; name=&quot;MaxSupportedDateTime.Year&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "In un&quot;operazione di impostazione, l&quot;istanza corrente è di sola lettura."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.JulianCalendar.#ctor
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: JulianCalendar()
  nameWithType: JulianCalendar.JulianCalendar()
  fullName: System.Globalization.JulianCalendar.JulianCalendar()
- uid: System.Globalization.JulianCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: JulianCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.JulianCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.JulianCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: JulianCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.JulianCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.JulianCalendar.AlgorithmType
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: JulianCalendar.AlgorithmType
  fullName: System.Globalization.JulianCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.JulianCalendar.Eras
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: Eras
  nameWithType: JulianCalendar.Eras
  fullName: System.Globalization.JulianCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.JulianCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: JulianCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.JulianCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.JulianCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: JulianCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.JulianCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.JulianCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: JulianCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.JulianCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.JulianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: JulianCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JulianCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.JulianCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: JulianCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.JulianCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.JulianCalendar.GetEra(System.DateTime)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: JulianCalendar.GetEra(DateTime)
  fullName: System.Globalization.JulianCalendar.GetEra(DateTime)
- uid: System.Globalization.JulianCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: JulianCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.JulianCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.JulianCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: JulianCalendar.GetMonth(DateTime)
  fullName: System.Globalization.JulianCalendar.GetMonth(DateTime)
- uid: System.Globalization.JulianCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: JulianCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.JulianCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.JulianCalendar.GetYear(System.DateTime)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: JulianCalendar.GetYear(DateTime)
  fullName: System.Globalization.JulianCalendar.GetYear(DateTime)
- uid: System.Globalization.JulianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: JulianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JulianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.JulianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: JulianCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JulianCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.JulianCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: JulianCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.JulianCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.JulianCalendar.JulianEra
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: JulianEra
  nameWithType: JulianCalendar.JulianEra
  fullName: System.Globalization.JulianCalendar.JulianEra
- uid: System.Globalization.JulianCalendar.MaxSupportedDateTime
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: JulianCalendar.MaxSupportedDateTime
  fullName: System.Globalization.JulianCalendar.MaxSupportedDateTime
- uid: System.Globalization.JulianCalendar.MinSupportedDateTime
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: JulianCalendar.MinSupportedDateTime
  fullName: System.Globalization.JulianCalendar.MinSupportedDateTime
- uid: System.Globalization.JulianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: JulianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JulianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.JulianCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: JulianCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.JulianCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.JulianCalendar.TwoDigitYearMax
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: JulianCalendar.TwoDigitYearMax
  fullName: System.Globalization.JulianCalendar.TwoDigitYearMax
- uid: System.Globalization.JulianCalendar.#ctor*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: JulianCalendar
  nameWithType: JulianCalendar.JulianCalendar
- uid: System.Globalization.JulianCalendar.AddMonths*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: AddMonths
  nameWithType: JulianCalendar.AddMonths
- uid: System.Globalization.JulianCalendar.AddYears*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: AddYears
  nameWithType: JulianCalendar.AddYears
- uid: System.Globalization.JulianCalendar.AlgorithmType*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: JulianCalendar.AlgorithmType
- uid: System.Globalization.JulianCalendar.Eras*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: Eras
  nameWithType: JulianCalendar.Eras
- uid: System.Globalization.JulianCalendar.GetDayOfMonth*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: JulianCalendar.GetDayOfMonth
- uid: System.Globalization.JulianCalendar.GetDayOfWeek*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: JulianCalendar.GetDayOfWeek
- uid: System.Globalization.JulianCalendar.GetDayOfYear*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: JulianCalendar.GetDayOfYear
- uid: System.Globalization.JulianCalendar.GetDaysInMonth*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: JulianCalendar.GetDaysInMonth
- uid: System.Globalization.JulianCalendar.GetDaysInYear*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: JulianCalendar.GetDaysInYear
- uid: System.Globalization.JulianCalendar.GetEra*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetEra
  nameWithType: JulianCalendar.GetEra
- uid: System.Globalization.JulianCalendar.GetLeapMonth*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: JulianCalendar.GetLeapMonth
- uid: System.Globalization.JulianCalendar.GetMonth*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetMonth
  nameWithType: JulianCalendar.GetMonth
- uid: System.Globalization.JulianCalendar.GetMonthsInYear*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: JulianCalendar.GetMonthsInYear
- uid: System.Globalization.JulianCalendar.GetYear*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: GetYear
  nameWithType: JulianCalendar.GetYear
- uid: System.Globalization.JulianCalendar.IsLeapDay*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: JulianCalendar.IsLeapDay
- uid: System.Globalization.JulianCalendar.IsLeapMonth*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: JulianCalendar.IsLeapMonth
- uid: System.Globalization.JulianCalendar.IsLeapYear*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: JulianCalendar.IsLeapYear
- uid: System.Globalization.JulianCalendar.MaxSupportedDateTime*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: JulianCalendar.MaxSupportedDateTime
- uid: System.Globalization.JulianCalendar.MinSupportedDateTime*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: JulianCalendar.MinSupportedDateTime
- uid: System.Globalization.JulianCalendar.ToDateTime*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: JulianCalendar.ToDateTime
- uid: System.Globalization.JulianCalendar.ToFourDigitYear*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: JulianCalendar.ToFourDigitYear
- uid: System.Globalization.JulianCalendar.TwoDigitYearMax*
  parent: System.Globalization.JulianCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: JulianCalendar.TwoDigitYearMax
