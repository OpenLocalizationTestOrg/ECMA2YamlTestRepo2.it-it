### YamlMime:ManagedReference
items:
- uid: System.Deployment.Application.InPlaceHostingManager
  id: InPlaceHostingManager
  children:
  - System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)
  - System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)
  - System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements
  - System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)
  - System.Deployment.Application.InPlaceHostingManager.CancelAsync
  - System.Deployment.Application.InPlaceHostingManager.Dispose
  - System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync
  - System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
  - System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
  - System.Deployment.Application.InPlaceHostingManager.Execute
  - System.Deployment.Application.InPlaceHostingManager.GetManifestAsync
  - System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
  - System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)
  - System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)
  langs:
  - csharp
  name: InPlaceHostingManager
  nameWithType: InPlaceHostingManager
  fullName: System.Deployment.Application.InPlaceHostingManager
  type: Class
  summary: "Installare o aggiornare un [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] distribuzione in un computer."
  remarks: "È possibile utilizzare InPlaceHostingManager la scrittura di applicazioni che installano [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] applicazioni a livello di codice. Ad esempio, è possibile utilizzare questa classe in un ambiente di sistema controllata gestione software (SMS) o in situazioni in cui necessaria un&quot;installazione complessa che esegue un numero di operazioni di pre-installazione o post-installazione nel computer locale. In genere, è consigliabile usare i membri di questa classe in un ordine specifico: 1.  Creare una nuova istanza della InPlaceHostingManager.      2.  Scaricare il manifesto di distribuzione utilizzando <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>      3.  Verificare che l&quot;applicazione può essere eseguita con le autorizzazioni appropriate utilizzando <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>      4.  Scaricare e installare l&quot;applicazione utilizzando <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>      -Se si chiama uno di questi parametri nell&quot;ordine errato, verrà generata un&quot;eccezione.       InPlaceHostingManager è possibile installare un [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] applicazione, ma non è possibile eseguirla. Alcuni metodi in questa classe, ad esempio <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>, sono riservati per l&quot;utilizzo durante il download di un&quot;applicazione basata su Windows Presentation Foundation eseguita all&quot;interno di un Web browser.</xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>       Per utilizzare InPlaceHostingManager per scaricare e installare applicazioni, è necessario assicurarsi che il certificato per la firma di [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] applicazioni si intende installare è già installato nei computer client come server di pubblicazione trusted. Per ulteriori informazioni sugli autori attendibili, vedere [Cenni preliminari sulla distribuzione di applicazioni attendibili](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > È attualmente una limitazione di prodotto che impedisce che funziona correttamente quando si esegue il debug del codice utilizzando InPlaceHostingManager [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]. Se si esegue il debug dell&quot;applicazione in [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] utilizzando il tasto F5, l&quot;esempio genererà eccezioni insolite quando si chiama <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A> Eseguire il debug utilizzando [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)], avviare l&quot;applicazione senza eseguire il debug e quindi collegare il debugger. In alternativa, è possibile utilizzare un altro debugger, ad esempio WinDbg."
  example:
  - "The following code example shows how to use InPlaceHostingManager to install a [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application programmatically on a client computer.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#1](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#1)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#1](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#1)]"
  syntax:
    content: 'public class InPlaceHostingManager : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: InPlaceHostingManager(Uri)
  nameWithType: InPlaceHostingManager.InPlaceHostingManager(Uri)
  fullName: System.Deployment.Application.InPlaceHostingManager.InPlaceHostingManager(Uri)
  type: Constructor
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Crea una nuova istanza della <xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;> </xref> per scaricare e installare l&quot;applicazione ospitata da browser specificato."
  remarks: "Questo costruttore viene utilizzato quando si desidera scaricare un&quot;applicazione basata su Windows Presentation Foundation che è ospitata in un Web browser. Per scaricare le applicazioni basate su Windows Form che vengono distribuite mediante [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)], utilizzare il <xref:System.Deployment.Application.InPlaceHostingManager.%23ctor%2A>costruttore con la `launchInHostProcess` parametro impostato su `false`.</xref:System.Deployment.Application.InPlaceHostingManager.%23ctor%2A>"
  syntax:
    content: public InPlaceHostingManager (Uri deploymentManifest);
    parameters:
    - id: deploymentManifest
      type: System.Uri
      description: "Un Uniform Resource Identifier (<xref:System.Uri>) a un [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] manifesto di distribuzione dell&quot;applicazione.</xref:System.Uri>"
  overload: System.Deployment.Application.InPlaceHostingManager.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;></xref>può essere utilizzato solo in Windows XP o versioni successive del sistema operativo Windows."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Non è possibile passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per il <code> deploymentManifest </code> argomento."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>deploymentManifest</code>utilizza uno schema URI non è supportato da [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]."
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)
  id: '#ctor(System.Uri,System.Boolean)'
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: InPlaceHostingManager(Uri,Boolean)
  nameWithType: InPlaceHostingManager.InPlaceHostingManager(Uri,Boolean)
  fullName: System.Deployment.Application.InPlaceHostingManager.InPlaceHostingManager(Uri,Boolean)
  type: Constructor
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Crea una nuova istanza della <xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;> </xref> per scaricare e installare l&quot;applicazione specificata, che può essere un&quot;applicazione basata su form di Windows autonoma o un&quot;applicazione ospitata in un Web browser."
  remarks: ''
  example:
  - "The following code example demonstrates how to create an instance of <xref:System.Deployment.Application.InPlaceHostingManager> that allows you to download Windows Forms-based applications deployed using [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)].  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#2)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#2](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#2)]"
  syntax:
    content: public InPlaceHostingManager (Uri deploymentManifest, bool launchInHostProcess);
    parameters:
    - id: deploymentManifest
      type: System.Uri
      description: "La risorsa identificatore URI (Uniform) al manifesto della distribuzione dell&quot;applicazione in cui verrà installato."
    - id: launchInHostProcess
      type: System.Boolean
      description: "Se l&quot;applicazione verrà eseguita in un host, ad esempio un Web browser. Per un&quot;applicazione autonoma, impostare questo valore su <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Deployment.Application.InPlaceHostingManager.#ctor*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;></xref>può essere utilizzato solo in Windows XP o versioni successive del sistema operativo Windows."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Non è possibile passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> per il <code> deploymentManifest </code> argomento."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>deploymentManifest</code>utilizza uno schema URI non è supportato da [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]."
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements
  id: AssertApplicationRequirements
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: AssertApplicationRequirements()
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements()
  fullName: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Determina se il [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] applicazione dispone delle autorizzazioni appropriate e le dipendenze della piattaforma per l&quot;esecuzione nel computer locale."
  remarks: "È necessario chiamare AssertApplicationRequirements dopo <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>ha esito positivo.</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> Non è necessario chiamare <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>a meno che non si chiama AssertApplicationRequirements e viene restituito senza errori.</xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>"
  example:
  - "The following code example demonstrates the use of AssertApplicationRequirements, which it calls in the body of a successful <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> event handler.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#3)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#3)]"
  syntax:
    content: public void AssertApplicationRequirements ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Generato se questo metodo viene chiamato prima di <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync*>metodo.</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync*>"
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)
  id: AssertApplicationRequirements(System.Boolean)
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: AssertApplicationRequirements(Boolean)
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements(Boolean)
  fullName: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(Boolean)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Determina se il [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] applicazione dispone delle autorizzazioni appropriate e le dipendenze della piattaforma per l&quot;esecuzione nel computer locale."
  remarks: "Se `grantApplicationTrust` è `true`, <xref:System.Deployment.Application.InPlaceHostingManager>concederà l&quot;applicazione di autorizzazioni elevate se richieste.</xref:System.Deployment.Application.InPlaceHostingManager> Ciò è possibile solo se <xref:System.Deployment.Application.InPlaceHostingManager>è in grado di concedere tali autorizzazioni.</xref:System.Deployment.Application.InPlaceHostingManager> Ad esempio, se un [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] applicazione viene installata come parte di un pacchetto di dimensioni maggiore e il programma di installazione è stata concessa l&quot;attendibilità, <xref:System.Deployment.Application.InPlaceHostingManager>sarà in grado di concedere il [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] applicazione completamente attendibile.</xref:System.Deployment.Application.InPlaceHostingManager> Se `grantApplicationTrust` è `false`, l&quot;applicazione non verrà concessa alcuna autorizzazione."
  syntax:
    content: public void AssertApplicationRequirements (bool grantApplicationTrust);
    parameters:
    - id: grantApplicationTrust
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, l&quot;applicazione tenterà di elevare le autorizzazioni al livello richiesto."
  overload: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.CancelAsync
  id: CancelAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: CancelAsync()
  nameWithType: InPlaceHostingManager.CancelAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.CancelAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Annulla un&quot;operazione di download asincrone."
  syntax:
    content: public void CancelAsync ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.CancelAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.Dispose
  id: Dispose
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: Dispose()
  nameWithType: InPlaceHostingManager.Dispose()
  fullName: System.Deployment.Application.InPlaceHostingManager.Dispose()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Rilascia tutte le risorse utilizzate da di <xref href=&quot;System.Deployment.Application.InPlaceHostingManager&quot;> </xref>."
  remarks: "Chiamare Dispose dopo aver terminato di utilizzare <xref:System.Deployment.Application.InPlaceHostingManager>.</xref:System.Deployment.Application.InPlaceHostingManager> Il metodo Dispose lascia il <xref:System.Deployment.Application.InPlaceHostingManager>in uno stato inutilizzabile.</xref:System.Deployment.Application.InPlaceHostingManager> Dopo aver chiamato Dispose, è necessario rilasciare tutti i riferimenti al <xref:System.Deployment.Application.InPlaceHostingManager>in modo che il garbage collector può recuperare la memoria che di <xref:System.Deployment.Application.InPlaceHostingManager>occupata.</xref:System.Deployment.Application.InPlaceHostingManager> </xref:System.Deployment.Application.InPlaceHostingManager> Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md) e [implementazione di un metodo Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Chiamare sempre Dispose prima di rilasciare l&quot;ultimo riferimento a <xref:System.Deployment.Application.InPlaceHostingManager>.</xref:System.Deployment.Application.InPlaceHostingManager> In caso contrario, le risorse non vengono liberate finché il garbage collector chiama la <xref:System.Deployment.Application.InPlaceHostingManager>dell&quot;oggetto `Finalize` metodo.</xref:System.Deployment.Application.InPlaceHostingManager>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync
  id: DownloadApplicationAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: DownloadApplicationAsync()
  nameWithType: InPlaceHostingManager.DownloadApplicationAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Scarica l&quot;aggiornamento di un&quot;applicazione in background."
  remarks: "È necessario chiamare questo metodo dopo la chiamata <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>"
  example:
  - "The following code example demonstrates the use of DownloadApplicationAsync, which it calls at the end of a successful <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> event handler.  \n  \n The following code examples assume that you have already defined and created an instance of <xref:System.Deployment.Application.InPlaceHostingManager> named `iphm`.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#3)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#3)]"
  syntax:
    content: public void DownloadApplicationAsync ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Generato se questo metodo viene chiamato prima di <> </> *> e <> </> *> metodi."
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
  id: DownloadApplicationCompleted
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: DownloadApplicationCompleted
  nameWithType: InPlaceHostingManager.DownloadApplicationCompleted
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Si verifica quando l&quot;applicazione ha completato il download nel computer locale."
  remarks: "Se si sta installando un&quot;applicazione basata su Windows Form, è necessario indicare agli utenti di avviare l&quot;applicazione. non è possibile avviare applicazioni basate su Windows Form a livello di codice utilizzando il <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>metodo.</xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>"
  example:
  - "The following code example demonstrates a handler for the DownloadApplicationCompleted event.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#7](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#7)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#7](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#7)]"
  syntax:
    content: public event EventHandler<System.Deployment.Application.DownloadApplicationCompletedEventArgs> DownloadApplicationCompleted;
    return:
      type: System.EventHandler{System.Deployment.Application.DownloadApplicationCompletedEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
  id: DownloadProgressChanged
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: DownloadProgressChanged
  nameWithType: InPlaceHostingManager.DownloadProgressChanged
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Si verifica quando viene apportata una modifica dello stato di un&quot;applicazione o il manifesto di download."
  remarks: "In un&quot;applicazione console, gli eventi vengono assegnati ai thread da un pool di thread. Pertanto, è possibile ricevere lo stato di avanzamento gli eventi di aggiornamento nell&quot;ordine errato, con un evento successivo che mostra una diminuzione rispetto a un evento precedente. È non verrà visualizzato tale comportamento in un&quot;applicazione basata su Windows Form, perché vengono elaborati in sequenza gli eventi in Windows Form dalla coda di messaggi del thread dell&quot;interfaccia utente."
  example:
  - "The following code example demonstrates how to update a <xref:System.Windows.Forms.ToolStripProgressBar> that is contained within a <xref:System.Windows.Forms.StatusStrip>.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#6](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#6)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#6](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#6)]"
  syntax:
    content: public event EventHandler<System.Deployment.Application.DownloadProgressChangedEventArgs> DownloadProgressChanged;
    return:
      type: System.EventHandler{System.Deployment.Application.DownloadProgressChangedEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.Execute
  id: Execute
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: Execute()
  nameWithType: InPlaceHostingManager.Execute()
  fullName: System.Deployment.Application.InPlaceHostingManager.Execute()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Avvia il [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] applicazione solo se si tratta di un&quot;applicazione basata su Windows Presentation Foundation in esecuzione in un Web browser."
  remarks: "Questo metodo è valido solo per le applicazioni basate su Windows Presentation Foundation che possono essere ospitate in un Web browser (ovvero, di definire i relativi manifesti di distribuzione di `hostInBrowser` elemento XML)."
  syntax:
    content: public System.Runtime.Remoting.ObjectHandle Execute ();
    parameters: []
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "Un <xref href=&quot;System.Runtime.Remoting.ObjectHandle&quot;> </xref> corrispondente all&quot;applicazione avviata."
  overload: System.Deployment.Application.InPlaceHostingManager.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync
  id: GetManifestAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: GetManifestAsync()
  nameWithType: InPlaceHostingManager.GetManifestAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Scarica il manifesto di distribuzione del [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] dell&quot;applicazione in background e genera un evento quando l&quot;operazione è completata o è stato rilevato un errore."
  remarks: "Per ricevere una notifica relativa al completamento di questo evento, creare un gestore eventi per il <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted>evento.</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> Se questo evento viene richiamato e nessun errore è indicato da <xref:System.Deployment.Application.GetManifestCompletedEventArgs>, sarà necessario chiamare <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>per verificare che l&quot;applicazione disporrà dell&quot;autorizzazione per l&quot;esecuzione nel computer locale.</xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> </xref:System.Deployment.Application.GetManifestCompletedEventArgs>"
  example:
  - "The following code examples demonstrate how to call the GetManifestAsync method. The handler for the <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> event callback checks to see if the manifest download completed successfully, and if so, prompts the user with additional information about the application. If the user agrees to continue the installation, the handler calls <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  \n  \n The following code examples assume that you have already defined and created an instance of <xref:System.Deployment.Application.InPlaceHostingManager> named `iphm`.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#3)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#3)]  \n  \n [!code-cs[System.Deployment.Application.InPlaceHostingManager#4](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#4)]"
  syntax:
    content: public void GetManifestAsync ();
    parameters: []
  overload: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
  id: GetManifestCompleted
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: GetManifestCompleted
  nameWithType: InPlaceHostingManager.GetManifestCompleted
  fullName: System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Si verifica quando il manifesto di distribuzione è stato scaricato nel computer locale."
  remarks: "Utilizzare il <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>proprietà <xref:System.Deployment.Application.GetManifestCompletedEventArgs>per verificare se <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>completata o ha restituito un errore.</xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> </xref:System.Deployment.Application.GetManifestCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Se <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>è null, <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>completato, ed è possibile chiamare <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>.</xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> </xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>"
  example:
  - "The following code examples demonstrate how to call the <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> method. The handler for the GetManifestCompleted event callback checks to see if the manifest download completed successfully, and if so, prompts the user with additional information about the application. If the user agrees to continue the installation, the handler calls <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>.  \n  \n The following code examples assume that you have already defined and created an instance of <xref:System.Deployment.Application.InPlaceHostingManager> named `iphm`.  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#2)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#2](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#2)]  \n  \n [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/visualbasic/InPlaceHostingManagerProjectVB/Form1.vb#3)]\n [!code-cs[System.Deployment.Application.InPlaceHostingManager#3](~/add/codesnippet/csharp/InPlaceHostingManagerProject/Form1.cs#3)]"
  syntax:
    content: public event EventHandler<System.Deployment.Application.GetManifestCompletedEventArgs> GetManifestCompleted;
    return:
      type: System.EventHandler{System.Deployment.Application.GetManifestCompletedEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)
  id: UninstallCustomAddIn(System.String)
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: UninstallCustomAddIn(String)
  nameWithType: InPlaceHostingManager.UninstallCustomAddIn(String)
  fullName: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Rimuove un componente installato in precedenza definito dall&quot;utente di un&quot;applicazione."
  syntax:
    content: public static void UninstallCustomAddIn (string subscriptionId);
    parameters:
    - id: subscriptionId
      type: System.String
      description: "Stringa che contiene un identificatore di sottoscrizione, che indica il componente aggiuntivo da rimuovere."
  overload: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>subscriptionId</code>non è un&quot;identità di una sottoscrizione valida o non include un nome, token di chiave pubblica, l&quot;architettura del processore e numero di versione."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subscriptionId</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)
  id: UninstallCustomUXApplication(System.String)
  parent: System.Deployment.Application.InPlaceHostingManager
  langs:
  - csharp
  name: UninstallCustomUXApplication(String)
  nameWithType: InPlaceHostingManager.UninstallCustomUXApplication(String)
  fullName: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Rimuove un [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] applicazione che include il &lt;customUX&gt; elemento."
  remarks: "This method uninstalls a previously installed [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application that uses the `<customUX>` element in the [\\&lt;entryPoint\\&gt; Element](../Topic/%3CentryPoint%3E%20Element%20\\(ClickOnce%20Application\\).md).  \n  \n Custom installers that do not create an Add or Remove Programs entry for the [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application must store the subscription identifier found in the <xref:System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity%2A> property during installation."
  syntax:
    content: public static void UninstallCustomUXApplication (string subscriptionId);
    parameters:
    - id: subscriptionId
      type: System.String
      description: "Stringa che contiene un identificatore di sottoscrizione, che indica il [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] applicazione da rimuovere."
  overload: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: InPlaceHostingManager(Uri)
  nameWithType: InPlaceHostingManager.InPlaceHostingManager(Uri)
  fullName: System.Deployment.Application.InPlaceHostingManager.InPlaceHostingManager(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: InPlaceHostingManager(Uri,Boolean)
  nameWithType: InPlaceHostingManager.InPlaceHostingManager(Uri,Boolean)
  fullName: System.Deployment.Application.InPlaceHostingManager.InPlaceHostingManager(Uri,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: AssertApplicationRequirements()
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements()
  fullName: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements()
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: AssertApplicationRequirements(Boolean)
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements(Boolean)
  fullName: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(Boolean)
- uid: System.Deployment.Application.InPlaceHostingManager.CancelAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: CancelAsync()
  nameWithType: InPlaceHostingManager.CancelAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.CancelAsync()
- uid: System.Deployment.Application.InPlaceHostingManager.Dispose
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: Dispose()
  nameWithType: InPlaceHostingManager.Dispose()
  fullName: System.Deployment.Application.InPlaceHostingManager.Dispose()
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: DownloadApplicationAsync()
  nameWithType: InPlaceHostingManager.DownloadApplicationAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync()
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: DownloadApplicationCompleted
  nameWithType: InPlaceHostingManager.DownloadApplicationCompleted
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted
- uid: System.EventHandler{System.Deployment.Application.DownloadApplicationCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<DownloadApplicationCompletedEventArgs>
  nameWithType: EventHandler<DownloadApplicationCompletedEventArgs>
  fullName: System.EventHandler<System.Deployment.Application.DownloadApplicationCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Deployment.Application.DownloadApplicationCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Deployment.Application.DownloadApplicationCompletedEventArgs
    name: DownloadApplicationCompletedEventArgs
    nameWithType: DownloadApplicationCompletedEventArgs
    fullName: DownloadApplicationCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: DownloadProgressChanged
  nameWithType: InPlaceHostingManager.DownloadProgressChanged
  fullName: System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged
- uid: System.EventHandler{System.Deployment.Application.DownloadProgressChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<DownloadProgressChangedEventArgs>
  nameWithType: EventHandler<DownloadProgressChangedEventArgs>
  fullName: System.EventHandler<System.Deployment.Application.DownloadProgressChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Deployment.Application.DownloadProgressChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Deployment.Application.DownloadProgressChangedEventArgs
    name: DownloadProgressChangedEventArgs
    nameWithType: DownloadProgressChangedEventArgs
    fullName: DownloadProgressChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Deployment.Application.InPlaceHostingManager.Execute
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: Execute()
  nameWithType: InPlaceHostingManager.Execute()
  fullName: System.Deployment.Application.InPlaceHostingManager.Execute()
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: GetManifestAsync()
  nameWithType: InPlaceHostingManager.GetManifestAsync()
  fullName: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync()
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: GetManifestCompleted
  nameWithType: InPlaceHostingManager.GetManifestCompleted
  fullName: System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted
- uid: System.EventHandler{System.Deployment.Application.GetManifestCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<GetManifestCompletedEventArgs>
  nameWithType: EventHandler<GetManifestCompletedEventArgs>
  fullName: System.EventHandler<System.Deployment.Application.GetManifestCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Deployment.Application.GetManifestCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Deployment.Application.GetManifestCompletedEventArgs
    name: GetManifestCompletedEventArgs
    nameWithType: GetManifestCompletedEventArgs
    fullName: GetManifestCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: UninstallCustomAddIn(String)
  nameWithType: InPlaceHostingManager.UninstallCustomAddIn(String)
  fullName: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: UninstallCustomUXApplication(String)
  nameWithType: InPlaceHostingManager.UninstallCustomUXApplication(String)
  fullName: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(String)
- uid: System.Deployment.Application.InPlaceHostingManager.#ctor*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: InPlaceHostingManager
  nameWithType: InPlaceHostingManager.InPlaceHostingManager
- uid: System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: AssertApplicationRequirements
  nameWithType: InPlaceHostingManager.AssertApplicationRequirements
- uid: System.Deployment.Application.InPlaceHostingManager.CancelAsync*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: CancelAsync
  nameWithType: InPlaceHostingManager.CancelAsync
- uid: System.Deployment.Application.InPlaceHostingManager.Dispose*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: Dispose
  nameWithType: InPlaceHostingManager.Dispose
- uid: System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: DownloadApplicationAsync
  nameWithType: InPlaceHostingManager.DownloadApplicationAsync
- uid: System.Deployment.Application.InPlaceHostingManager.Execute*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: Execute
  nameWithType: InPlaceHostingManager.Execute
- uid: System.Deployment.Application.InPlaceHostingManager.GetManifestAsync*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: GetManifestAsync
  nameWithType: InPlaceHostingManager.GetManifestAsync
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: UninstallCustomAddIn
  nameWithType: InPlaceHostingManager.UninstallCustomAddIn
- uid: System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication*
  parent: System.Deployment.Application.InPlaceHostingManager
  isExternal: false
  name: UninstallCustomUXApplication
  nameWithType: InPlaceHostingManager.UninstallCustomUXApplication
