### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.PipeStream
  id: PipeStream
  children:
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.ReadMode
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.TransmissionMode
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  langs:
  - csharp
  name: PipeStream
  nameWithType: PipeStream
  fullName: System.IO.Pipes.PipeStream
  type: Class
  summary: "Espone un <xref:System.IO.Stream>oggetto una pipe, che supporta pipe sia unnamed che named pipe.</xref:System.IO.Stream>"
  remarks: "La classe PipeStream fornisce la classe di base per le operazioni di unnamed e named pipe in .NET Framework. Utilizzare il <xref:System.IO.Pipes.NamedPipeServerStream>e <xref:System.IO.Pipes.NamedPipeClientStream>classi per operazioni di named pipe.</xref:System.IO.Pipes.NamedPipeClientStream> </xref:System.IO.Pipes.NamedPipeServerStream> Utilizzare il <xref:System.IO.Pipes.AnonymousPipeServerStream>e <xref:System.IO.Pipes.AnonymousPipeClientStream>classi per le operazioni di pipe anonime.</xref:System.IO.Pipes.AnonymousPipeClientStream> </xref:System.IO.Pipes.AnonymousPipeServerStream>       Per ulteriori informazioni su pipe, vedere [pipe](~/add/includes/ajax-current-ext-md.md). Per un esempio di pipe anonime, vedere [procedura: utilizzare le unnamed pipe per la comunicazione locale Interprocess](~/add/includes/ajax-current-ext-md.md). Per un esempio di named pipe, vedere [How to: Use Named Pipes per la comunicazione di rete Interprocess](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public abstract class PipeStream : System.IO.Stream'
  inheritance:
  - System.IO.Stream
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.Int32)'
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: PipeStream(PipeDirection,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> classe utilizzando l&quot;oggetto specificato <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> dimensioni di buffer e valore."
  remarks: "Questo costruttore utilizza una modalità di trasmissione della pipe <xref:System.IO.Pipes.PipeTransmissionMode>.</xref:System.IO.Pipes.PipeTransmissionMode>"
  syntax:
    content: protected PipeStream (System.IO.Pipes.PipeDirection direction, int bufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Uno del <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> valori che indica la direzione dell&quot;oggetto pipe."
    - id: bufferSize
      type: System.Int32
      description: "Un valore positivo <xref:System.Int32>valore maggiore o uguale a 0, che indica le dimensioni del buffer.</xref:System.Int32>"
  overload: System.IO.Pipes.PipeStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code>non è un valido <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> valore.       - oppure - <code>bufferSize</code> è minore di 0."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)'
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> classe utilizzando l&quot;oggetto specificato <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>, <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>e la dimensione del buffer."
  syntax:
    content: protected PipeStream (System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeTransmissionMode transmissionMode, int outBufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Uno del <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> valori che indica la direzione dell&quot;oggetto pipe."
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Uno del <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> valori che indica la modalità di trasmissione dell&quot;oggetto pipe."
    - id: outBufferSize
      type: System.Int32
      description: "Un valore positivo <xref:System.Int32>valore maggiore o uguale a 0, che indica le dimensioni del buffer.</xref:System.Int32>"
  overload: System.IO.Pipes.PipeStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code>non è un valido <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> valore.       - oppure - <code>transmissionMode</code> non è un valido <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> valore.       - oppure - <code>bufferSize</code> è minore di 0."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Avvia un&quot;operazione di lettura asincrona."
  remarks: "Passare l&quot;oggetto restituito <xref:System.IAsyncResult>dell&quot;oggetto per il <xref:System.IO.Pipes.PipeStream.EndRead%2A>metodo per determinare il numero di byte letti e rilasciare le risorse di sistema operativo utilizzate per la lettura.</xref:System.IO.Pipes.PipeStream.EndRead%2A> </xref:System.IAsyncResult> <xref:System.IO.Pipes.PipeStream.EndRead%2A>deve essere chiamato una volta per ogni chiamata a BeginRead.</xref:System.IO.Pipes.PipeStream.EndRead%2A> Questa operazione può essere eseguita nello stesso codice che ha chiamato BeginRead o in un callback che viene passato a BeginRead.       Utilizzare il <xref:System.IO.Pipes.PipeStream.CanRead%2A>proprietà per determinare se l&quot;oggetto corrente <xref:System.IO.Pipes.PipeStream>oggetto supporta le operazioni di lettura.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>       Se la pipe è chiusa o un argomento non valido viene passato a BeginRead, vengono generate immediatamente le eccezioni appropriate. Si verificano errori che si verificano durante una richiesta di lettura asincrona sul thread del pool che sta eseguendo la richiesta. Le eccezioni vengono generate quando il codice chiama il <xref:System.IO.Pipes.PipeStream.EndRead%2A>metodo.</xref:System.IO.Pipes.PipeStream.EndRead%2A>"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Il buffer per leggere i dati."
    - id: offset
      type: System.Int32
      description: "Offset dei byte in `buffer` in corrispondenza del quale iniziare la lettura."
    - id: count
      type: System.Int32
      description: "Numero massimo di byte da leggere."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di lettura asincrona viene completata."
    - id: state
      type: System.Object
      description: "Oggetto fornito dall&quot;utente che distingue questa specifica richiesta di lettura asincrona da altre richieste."
    return:
      type: System.IAsyncResult
      description: "Un <xref:System.IAsyncResult>leggere l&quot;oggetto che fa riferimento a asincrona.</xref:System.IAsyncResult>"
  overload: System.IO.Pipes.PipeStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>è minore di 0.       - oppure - <code>count</code> è minore di 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>è maggiore del numero di byte disponibili in <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "La pipe è chiusa."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La pipe non supporta le operazioni di lettura."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La pipe è disconnessa, in attesa della connessione o l&quot;handle non è stato impostato."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La pipe è interrotta oppure si è verificato un altro errore dei / o."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Avvia un&quot;operazione di scrittura asincrona."
  remarks: "<xref:System.IO.Pipes.PipeStream.EndWrite%2A>deve essere chiamato una volta per ogni chiamata a BeginWrite.</xref:System.IO.Pipes.PipeStream.EndWrite%2A> Questa operazione può essere eseguita nello stesso codice che ha chiamato BeginWrite o in un callback che viene passato a BeginWrite.       Utilizzare il <xref:System.IO.Pipes.PipeStream.CanWrite%2A>proprietà per determinare se l&quot;oggetto corrente <xref:System.IO.Pipes.PipeStream>oggetto supporta le operazioni di scrittura.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>       Se la pipe è chiusa o un argomento non valido viene passato a BeginWrite, vengono generate immediatamente le eccezioni appropriate. Nel pool di thread che sta eseguendo la richiesta si verificano errori che si verificano durante una richiesta di scrittura asincrona. Le eccezioni vengono generate quando il codice chiama il <xref:System.IO.Pipes.PipeStream.EndWrite%2A>metodo.</xref:System.IO.Pipes.PipeStream.EndWrite%2A>"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Buffer che contiene i dati da scrivere nel flusso corrente."
    - id: offset
      type: System.Int32
      description: "Offset dei byte in base zero in `buffer` in corrispondenza del quale iniziare la copia dei byte nel flusso corrente."
    - id: count
      type: System.Int32
      description: "Numero massimo di byte da scrivere."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di scrittura asincrona viene completata."
    - id: state
      type: System.Object
      description: "Oggetto fornito dall&quot;utente che distingue questa richiesta particolare di scrittura asincrona da altre richieste."
    return:
      type: System.IAsyncResult
      description: "Un <xref:System.IAsyncResult>oggetto che fa riferimento all&quot;operazione di scrittura asincrona.</xref:System.IAsyncResult>"
  overload: System.IO.Pipes.PipeStream.BeginWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>è minore di 0.       - oppure - <code>count</code> è minore di 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>è maggiore del numero di byte disponibili in <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "La pipe è chiusa."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La pipe non supporta operazioni di scrittura."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La pipe è disconnessa, in attesa della connessione o l&quot;handle non è stato impostato."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La pipe è interrotta oppure si è verificato un altro errore dei / o."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanRead
  id: CanRead
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: System.IO.Pipes.PipeStream.CanRead
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene un valore che indica se il flusso corrente supporta le operazioni di lettura."
  remarks: "Se il <xref:System.IO.Pipes.PipeStream>oggetto è chiuso, questa proprietà restituisce `false`.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il flusso supporta la lettura di operazioni; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanSeek
  id: CanSeek
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: System.IO.Pipes.PipeStream.CanSeek
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene un valore che indica se il flusso corrente supporta le operazioni di ricerca."
  remarks: "Se il <xref:System.IO.Pipes.PipeStream>oggetto è chiuso, questa proprietà restituisce `false`.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>in tutti i casi."
  overload: System.IO.Pipes.PipeStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanWrite
  id: CanWrite
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: System.IO.Pipes.PipeStream.CanWrite
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene un valore che indica se il flusso corrente supporta le operazioni di scrittura."
  remarks: "Se il <xref:System.IO.Pipes.PipeStream>oggetto è chiuso, questa proprietà restituisce `false`.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il flusso supporta le operazioni di scrittura; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  id: CheckPipePropertyOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckPipePropertyOperations()
  nameWithType: PipeStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.PipeStream.CheckPipePropertyOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Verifica che la pipe è in uno stato appropriato per ottenere o impostare le proprietà."
  syntax:
    content: protected virtual void CheckPipePropertyOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckPipePropertyOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckReadOperations
  id: CheckReadOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckReadOperations()
  nameWithType: PipeStream.CheckReadOperations()
  fullName: System.IO.Pipes.PipeStream.CheckReadOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Verifica che la pipe è in stato connesso per operazioni di lettura."
  syntax:
    content: protected void CheckReadOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckReadOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations
  id: CheckWriteOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckWriteOperations()
  nameWithType: PipeStream.CheckWriteOperations()
  fullName: System.IO.Pipes.PipeStream.CheckWriteOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Verifica che la pipe è in uno stato connesso per operazioni di scrittura."
  syntax:
    content: protected void CheckWriteOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckWriteOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PipeStream.Dispose(Boolean)
  fullName: System.IO.Pipes.PipeStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Rilascia le risorse non gestite usate dal <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> classe e facoltativamente rilascia le risorse gestite."
  remarks: "Questo metodo viene chiamato dal metodo pubblico <xref:System.ComponentModel.Component.Dispose%2A>metodo e <xref:System.Object.Finalize%2A>metodo.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> <xref:System.ComponentModel.Component.Dispose%2A>richiama il metodo Dispose protetto con il `disposing` parametro impostato su `true`.</xref:System.ComponentModel.Component.Dispose%2A> <xref:System.Object.Finalize%2A>richiama Dispose con `disposing` impostato su `false`.</xref:System.Object.Finalize%2A> Quando il parametro di eliminazione è `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.IO.Pipes.PipeStream>i riferimenti all&quot;oggetto.</xref:System.IO.Pipes.PipeStream> Questo metodo richiama il metodo Dispose di ciascun oggetto cui viene fatto riferimento."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.IO.Pipes.PipeStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: PipeStream.EndRead(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Termina una richiesta di lettura asincrona in sospeso."
  remarks: "Questo metodo restituisce il numero di byte letti nella matrice di byte specificata da una chiamata precedente a <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</xref:System.IO.Pipes.PipeStream.BeginRead%2A>       Passare l&quot;oggetto restituito <xref:System.IAsyncResult>oggetto al metodo EndRead per determinare il numero di byte letti e rilasciare le risorse di sistema operativo utilizzate per la lettura.</xref:System.IAsyncResult> EndRead deve essere chiamato una volta per ogni chiamata a <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> Questa operazione può essere eseguita nello stesso codice che ha chiamato <xref:System.IO.Pipes.PipeStream.BeginRead%2A>o in un callback che viene passato a <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> </xref:System.IO.Pipes.PipeStream.BeginRead%2A>       Utilizzare il <xref:System.IO.Pipes.PipeStream.CanRead%2A>proprietà per determinare se l&quot;oggetto corrente <xref:System.IO.Pipes.PipeStream>oggetto supporta le operazioni di lettura.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>       Se la pipe è chiusa, oppure un argomento non valido viene passato a <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, le eccezioni appropriate vengono generate immediatamente.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> Si verificano errori che si verificano durante una richiesta di lettura asincrona sul thread del pool che sta eseguendo la richiesta. Le eccezioni vengono generate quando il codice chiama il metodo EndRead."
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Il riferimento alla richiesta asincrona in sospeso."
    return:
      type: System.Int32
      description: "Il numero di byte letti. Valore restituito pari a 0 indica la fine del flusso (la pipe è stata chiusa)."
  overload: System.IO.Pipes.PipeStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>non è originata da un <xref:System.IO.Pipes.PipeStream.BeginRead*> metodo nel flusso corrente."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il flusso è chiuso o si è verificato un errore interno."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: PipeStream.EndWrite(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Termina una richiesta di scrittura asincrona in sospeso."
  remarks: "EndWrite deve essere chiamato una volta per ogni chiamata a <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> Questa operazione può essere eseguita nello stesso codice che ha chiamato <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>o in un callback che viene passato a <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> </xref:System.IO.Pipes.PipeStream.BeginWrite%2A>       Utilizzare il <xref:System.IO.Pipes.PipeStream.CanWrite%2A>proprietà per determinare se l&quot;oggetto corrente <xref:System.IO.Pipes.PipeStream>oggetto supporta le operazioni di scrittura.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>       Se la pipe è chiusa, oppure un argomento non valido viene passato a <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, le eccezioni appropriate vengono generate immediatamente.</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> Nel pool di thread che sta eseguendo la richiesta si verificano errori che si verificano durante una richiesta di scrittura asincrona. Le eccezioni vengono generate quando il codice chiama EndWrite metodo."
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Il riferimento alla richiesta asincrona in sospeso."
  overload: System.IO.Pipes.PipeStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>non è originata da un <xref:System.IO.Pipes.PipeStream.BeginWrite*> metodo nel flusso corrente."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il flusso è chiuso o si è verificato un errore interno."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Flush
  id: Flush
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Flush()
  nameWithType: PipeStream.Flush()
  fullName: System.IO.Pipes.PipeStream.Flush()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Cancella il buffer del flusso corrente e fa sì che tutti i dati memorizzati nel buffer da scrivere nel dispositivo sottostante."
  remarks: "Il metodo non è supportato nel <xref:System.IO.Pipes.PipeStream>classe e non nothing quando viene chiamato.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "La pipe è chiusa."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La pipe non supporta operazioni di scrittura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La pipe è interrotta oppure si è verificato un altro errore dei / o."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.GetAccessControl
  id: GetAccessControl
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: PipeStream.GetAccessControl()
  fullName: System.IO.Pipes.PipeStream.GetAccessControl()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene un <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto che incapsula le voci di elenco (ACL) di controllo di accesso per la pipe descritta dall&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> oggetto."
  remarks: 'Un elenco di controllo di accesso (ACL) descrive i singoli utenti o gruppi che hanno o non si dispone dei diritti per eseguire azioni specifiche in un file specificato. Per ulteriori informazioni, vedere [procedura: aggiungere o rimuovere voci dell&quot;elenco di controllo di accesso](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public System.IO.Pipes.PipeSecurity GetAccessControl ();
    parameters: []
    return:
      type: System.IO.Pipes.PipeSecurity
      description: "Oggetto <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto che incapsula le voci di elenco (ACL) di controllo di accesso per la pipe descritta dall&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> oggetto."
  overload: System.IO.Pipes.PipeStream.GetAccessControl*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "La pipe è chiusa."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "La chiamata sottostante per impostare le informazioni di sicurezza non riuscita."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La chiamata sottostante per impostare le informazioni di sicurezza non riuscita."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La chiamata sottostante per impostare le informazioni di sicurezza non riuscita."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.InBufferSize
  id: InBufferSize
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: System.IO.Pipes.PipeStream.InBufferSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene le dimensioni, in byte, del buffer in ingresso per una pipe."
  remarks: "Se InBufferSize è 0, la dimensione del buffer viene allocata in base alle esigenze."
  syntax:
    content: public virtual int InBufferSize { get; }
    return:
      type: System.Int32
      description: "Valore intero che rappresenta le dimensioni del buffer in ingresso, in byte."
  overload: System.IO.Pipes.PipeStream.InBufferSize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il flusso è illeggibile."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La pipe è in attesa della connessione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La pipe è interrotta oppure si è verificato un altro errore dei / o."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  id: InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: InitializeHandle(SafePipeHandle,Boolean,Boolean)
  nameWithType: PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  fullName: System.IO.Pipes.PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inizializza un <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> oggetto dall&quot;oggetto specificato <xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> oggetto."
  remarks: "Se la pipe è in uno stato di connessione, questo metodo imposta inoltre il <xref:System.IO.Pipes.PipeStream.IsConnected%2A>proprietà `true`.</xref:System.IO.Pipes.PipeStream.IsConnected%2A>"
  syntax:
    content: protected void InitializeHandle (Microsoft.Win32.SafeHandles.SafePipeHandle handle, bool isExposed, bool isAsync);
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "Il <xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> oggetto della pipe da inizializzare."
    - id: isExposed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per esporre l&quot;handle; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: isAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per indicare che l&quot;handle è stato aperto in modo asincrono; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.InitializeHandle*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Non è possibile associare un handle alla pipe."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsAsync
  id: IsAsync
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: System.IO.Pipes.PipeStream.IsAsync
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene un valore che indica se un <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> oggetto è stato aperto in modalità sincrona o asincrona."
  remarks: "Questa proprietà consente l&quot;utilizzo nel codice il <xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A>proprietà correttamente.</xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A>"
  syntax:
    content: public bool IsAsync { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> oggetto è stato aperto in modalità asincrona; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsConnected
  id: IsConnected
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: System.IO.Pipes.PipeStream.IsConnected
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene o imposta un valore che indica se un <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> è connesso l&quot;oggetto."
  remarks: "La proprietà restituisce IsConnected `true` solo se il <xref:System.IO.Pipes.PipeStream>è connesso l&quot;oggetto.</xref:System.IO.Pipes.PipeStream> Se questa proprietà restituisce `false`, la pipe può essere in attesa della connessione, può essere disconnesso, chiuso o interrotta."
  syntax:
    content: public bool IsConnected { get; protected set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> oggetto è connesso; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsConnected*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsHandleExposed
  id: IsHandleExposed
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: System.IO.Pipes.PipeStream.IsHandleExposed
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene un valore che indica se un handle a un <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> oggetto esposto."
  remarks: "Il valore di questa proprietà è impostato quando si ottiene un handle alla pipe incapsulata dall&quot;oggetto corrente <xref:System.IO.Pipes.PipeStream>oggetto.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: protected bool IsHandleExposed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se un handle per il <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> oggetto viene esposto; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsHandleExposed*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  id: IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: System.IO.Pipes.PipeStream.IsMessageComplete
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene un valore che indica se è maggiore di dati nel messaggio restituito dalla più recente operazione di lettura."
  remarks: "Questa proprietà è rilevante se <xref:System.IO.Pipes.PipeStream.ReadMode%2A>è stata impostata su <xref:System.IO.Pipes.PipeTransmissionMode>dalla chiamata più recente o <xref:System.IO.Pipes.PipeStream.Read%2A> <xref:System.IO.Pipes.PipeStream.EndRead%2A>.</xref:System.IO.Pipes.PipeStream.EndRead%2A> della pipe</xref:System.IO.Pipes.PipeStream.Read%2A> </xref:System.IO.Pipes.PipeTransmissionMode> </xref:System.IO.Pipes.PipeStream.ReadMode%2A>"
  syntax:
    content: public bool IsMessageComplete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se non sono più caratteri da leggere nel messaggio. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsMessageComplete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La pipe non è connesso.       - oppure - l&quot;handle di pipe non è stato impostato.       La pipe - oppure - <xref:System.IO.Pipes.PipeStream.ReadMode*>valore della proprietà non è <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>.</xref:System.IO.Pipes.PipeStream.ReadMode*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "La pipe è chiusa."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Length
  id: Length
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Length
  nameWithType: PipeStream.Length
  fullName: System.IO.Pipes.PipeStream.Length
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene la lunghezza di un flusso, in byte."
  remarks: "La <xref:System.IO.Pipes.PipeStream>classe non supporta la proprietà Length.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "0 in tutti i casi."
  overload: System.IO.Pipes.PipeStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Generata sempre."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  id: OutBufferSize
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: System.IO.Pipes.PipeStream.OutBufferSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene le dimensioni, in byte, del buffer in uscita per una pipe."
  remarks: "Se OutBufferSize è 0, la dimensione del buffer viene allocata in base alle esigenze."
  syntax:
    content: public virtual int OutBufferSize { get; }
    return:
      type: System.Int32
      description: "Dimensioni del buffer in uscita, in byte."
  overload: System.IO.Pipes.PipeStream.OutBufferSize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il flusso è scrivibile."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La pipe è in attesa della connessione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La pipe è interrotta oppure si è verificato un altro errore dei / o."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Position
  id: Position
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Position
  nameWithType: PipeStream.Position
  fullName: System.IO.Pipes.PipeStream.Position
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene o imposta la posizione corrente del flusso corrente."
  remarks: "La <xref:System.IO.Pipes.PipeStream>classe non supporta la proprietà Position.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "0 in tutti i casi."
  overload: System.IO.Pipes.PipeStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Generata sempre."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: PipeStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Legge un blocco di byte da un flusso e scrive i dati in un buffer specificato."
  remarks: "Utilizzare il <xref:System.IO.Pipes.PipeStream.CanRead%2A>proprietà per determinare se l&quot;oggetto corrente <xref:System.IO.Pipes.PipeStream>oggetto supporta le operazioni di lettura.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>       Chiamare il metodo Read blocca fino a `count` vengono letti i byte o viene raggiunta la fine del flusso. Per le operazioni di lettura asincrona, vedere <xref:System.IO.Pipes.PipeStream.BeginRead%2A>e <xref:System.IO.Pipes.PipeStream.EndRead%2A>.</xref:System.IO.Pipes.PipeStream.EndRead%2A> </xref:System.IO.Pipes.PipeStream.BeginRead%2A>"
  example:
  - "The following example creates an anonymous pipe client and pipe server. The pipe server uses the Read method to read a series of bytes from the pipe client as a validation code. Both the pipe client and the pipe server are part of the same example. The server portion of the example creates a client process and passes it an anonymous pipe handle as an argument.  \n  \n [!code-cs[System.IO.Pipes.PipeStream#1](~/add/codesnippet/csharp/m-system.io.pipes.pipest_1.cs)]\n [!code-vb[System.IO.Pipes.PipeStream#1](~/add/codesnippet/visualbasic/m-system.io.pipes.pipest_1.vb)]\n [!code-cpp[System.IO.Pipes.PipeStream#1](~/add/codesnippet/cpp/m-system.io.pipes.pipest_1.cpp)]"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Quando questo metodo viene restituito, contiene la matrice di byte specificata con i valori compresi tra `offset` e (`offset`  +  `count` - 1) sostituiti dai byte letti dall&quot;origine corrente."
    - id: offset
      type: System.Int32
      description: "Offset dei byte nel `buffer` matrice nella quale verranno inseriti i byte letti."
    - id: count
      type: System.Int32
      description: "Numero massimo di byte da leggere."
    return:
      type: System.Int32
      description: "Il numero totale di byte letti in <code> buffer </code>. Questo potrebbe essere minore del numero di byte richiesti se tale numero di byte non è attualmente disponibile, oppure 0 se viene raggiunta la fine del flusso."
  overload: System.IO.Pipes.PipeStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>è minore di 0.       - oppure - <code>count</code> è minore di 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>è maggiore del numero di byte disponibili in <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "La pipe è chiusa."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La pipe non supporta le operazioni di lettura."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La pipe è disconnessa, in attesa della connessione o l&quot;handle non è stato impostato."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si è verificato un errore dei / o."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.ReadByte
  id: ReadByte
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: ReadByte()
  nameWithType: PipeStream.ReadByte()
  fullName: System.IO.Pipes.PipeStream.ReadByte()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Legge un byte da una pipe."
  remarks: "Utilizzare il <xref:System.IO.Pipes.PipeStream.CanRead%2A>proprietà per determinare se l&quot;oggetto corrente <xref:System.IO.Pipes.PipeStream>oggetto supporta le operazioni di lettura.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>"
  syntax:
    content: public override int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: "Byte, cast su <xref:System.Int32>, oppure -1 indica la fine del flusso (la pipe è stata chiusa).</xref:System.Int32>"
  overload: System.IO.Pipes.PipeStream.ReadByte*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "La pipe è chiusa."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La pipe non supporta le operazioni di lettura."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La pipe è disconnessa, in attesa della connessione o l&quot;handle non è stato impostato."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si è verificato un errore dei / o."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.ReadMode
  id: ReadMode
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: System.IO.Pipes.PipeStream.ReadMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene o imposta la modalità di lettura per un <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> oggetto."
  remarks: "Le unnamed pipe non supportano <xref:System.IO.Pipes.PipeTransmissionMode>la trasmissione di messaggi in modalità.</xref:System.IO.Pipes.PipeTransmissionMode>"
  syntax:
    content: public virtual System.IO.Pipes.PipeTransmissionMode ReadMode { get; set; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Uno del <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> valori che indica come il <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> oggetto legge dalla pipe."
  overload: System.IO.Pipes.PipeStream.ReadMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore fornito non è un valido <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> valore."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il valore fornito non è supportato <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> valore per questo flusso di pipe."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;handle non è stato impostato.       - oppure - la pipe è in attesa della connessione con un client denominato."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La pipe è interrotta oppure si è verificato un errore dei / o con un client denominato."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  id: SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: System.IO.Pipes.PipeStream.SafePipeHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene l&quot;handle sicuro per l&quot;estremità locale della pipe corrente <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> incapsulata dall&quot;oggetto."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafePipeHandle SafePipeHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "Oggetto <xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> oggetto per la pipe che viene incapsulata dall&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> oggetto."
  overload: System.IO.Pipes.PipeStream.SafePipeHandle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;handle di pipe non è stato impostato."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "La pipe è chiusa."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: PipeStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.Pipes.PipeStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Imposta la posizione corrente del flusso corrente sul valore specificato."
  remarks: "Il metodo di ricerca non è supportato nelle pipe e genera un <xref:System.NotSupportedException>quando viene chiamato.</xref:System.NotSupportedException>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Punto relativo a `origin`, per avviare la ricerca."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Specifica l&quot;inizio, fine o la posizione corrente come punto di riferimento per `offset`, usando un valore di tipo <xref:System.IO.SeekOrigin>.</xref:System.IO.SeekOrigin>"
    return:
      type: System.Int64
      description: "La nuova posizione nel flusso."
  overload: System.IO.Pipes.PipeStream.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  id: SetAccessControl(System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SetAccessControl(PipeSecurity)
  nameWithType: PipeStream.SetAccessControl(PipeSecurity)
  fullName: System.IO.Pipes.PipeStream.SetAccessControl(PipeSecurity)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Applica le voci di elenco (ACL) di controllo di accesso specificate da un <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto nella pipe specificata dall&quot;oggetto corrente <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> oggetto."
  remarks: 'Un elenco di controllo di accesso (ACL) descrive i singoli utenti o gruppi che hanno o non si dispone dei diritti per eseguire azioni specifiche in un file specificato. Per ulteriori informazioni, vedere [procedura: aggiungere o rimuovere voci dell&quot;elenco di controllo di accesso](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public void SetAccessControl (System.IO.Pipes.PipeSecurity pipeSecurity);
    parameters:
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: "Oggetto <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> oggetto che specifica una voce di elenco (ACL) di controllo di accesso da applicare alla pipe corrente."
  overload: System.IO.Pipes.PipeStream.SetAccessControl*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "La pipe è chiusa."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeSecurity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "La chiamata sottostante per impostare le informazioni di sicurezza non riuscita."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La chiamata sottostante per impostare le informazioni di sicurezza non riuscita."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La chiamata sottostante per impostare le informazioni di sicurezza non riuscita."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: PipeStream.SetLength(Int64)
  fullName: System.IO.Pipes.PipeStream.SetLength(Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Imposta la lunghezza del flusso corrente sul valore specificato."
  remarks: "La <xref:System.IO.Pipes.PipeStream>classe non supporta il metodo SetLength.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Nuova lunghezza del flusso."
  overload: System.IO.Pipes.PipeStream.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  id: TransmissionMode
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: System.IO.Pipes.PipeStream.TransmissionMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Ottiene la modalità di trasmissione della pipe supportata dalla pipe corrente."
  remarks: "Le unnamed pipe non supportano <xref:System.IO.Pipes.PipeTransmissionMode>la trasmissione di messaggi in modalità.</xref:System.IO.Pipes.PipeTransmissionMode>"
  syntax:
    content: public virtual System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Uno del <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> valori che indica la modalità di trasmissione supportata dalla pipe corrente."
  overload: System.IO.Pipes.PipeStream.TransmissionMode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "La pipe è chiusa."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;handle non è stato impostato.       - oppure - la pipe è in attesa della connessione in un&quot;operazione client/server anonima o con un client denominato."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La pipe è interrotta oppure si è verificato un altro errore dei / o."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  id: WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: WaitForPipeDrain()
  nameWithType: PipeStream.WaitForPipeDrain()
  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Aspetta l&quot;altra estremità della pipe per leggere che tutti i byte inviati."
  remarks: "Il metodo WaitForPipeDrain si blocca fino a altra estremità della pipe ha letto che tutti i byte inviati."
  syntax:
    content: public void WaitForPipeDrain ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.WaitForPipeDrain*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "La pipe è chiusa."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La pipe non supporta operazioni di scrittura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La pipe è interrotta oppure si è verificato un altro errore dei / o."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: PipeStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Scrive un blocco di byte nel flusso corrente usando dati da un buffer."
  remarks: "Utilizzare il <xref:System.IO.Pipes.PipeStream.CanWrite%2A>proprietà per determinare se l&quot;oggetto corrente <xref:System.IO.Pipes.PipeStream>oggetto supporta le operazioni di scrittura.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>       La chiamata al metodo di scrittura blocca fino a `count` vengono letti i byte o viene raggiunta la fine del flusso. Per le operazioni di lettura asincrona, vedere <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>e <xref:System.IO.Pipes.PipeStream.EndWrite%2A>.</xref:System.IO.Pipes.PipeStream.EndWrite%2A> </xref:System.IO.Pipes.PipeStream.BeginWrite%2A>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Buffer che contiene i dati da scrivere nella pipe."
    - id: offset
      type: System.Int32
      description: "Offset dei byte in base zero in `buffer` in corrispondenza del quale iniziare la copia dei byte nel flusso corrente."
    - id: count
      type: System.Int32
      description: "Numero massimo di byte da scrivere nel flusso corrente."
  overload: System.IO.Pipes.PipeStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>è minore di 0.       - oppure - <code>count</code> è minore di 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>è maggiore del numero di byte disponibili in <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "La pipe è chiusa."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La pipe non supporta operazioni di scrittura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La pipe è interrotta oppure si è verificato un altro errore dei / o."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: PipeStream.WriteByte(Byte)
  fullName: System.IO.Pipes.PipeStream.WriteByte(Byte)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Scrive un byte nel flusso corrente."
  remarks: "Utilizzare il <xref:System.IO.Pipes.PipeStream.CanWrite%2A>proprietà per determinare se l&quot;oggetto corrente <xref:System.IO.Pipes.PipeStream>oggetto supporta le operazioni di scrittura.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>"
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "Byte da scrivere nel flusso."
  overload: System.IO.Pipes.PipeStream.WriteByte*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "La pipe è chiusa."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La pipe non supporta operazioni di scrittura."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La pipe è disconnessa, in attesa della connessione o l&quot;handle non è stato impostato."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La pipe è interrotta oppure si è verificato un altro errore dei / o."
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream(PipeDirection,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,Int32)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  nameWithType: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IO.Pipes.PipeStream.CanRead
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: System.IO.Pipes.PipeStream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Pipes.PipeStream.CanSeek
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: System.IO.Pipes.PipeStream.CanSeek
- uid: System.IO.Pipes.PipeStream.CanWrite
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: System.IO.Pipes.PipeStream.CanWrite
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckPipePropertyOperations()
  nameWithType: PipeStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.PipeStream.CheckPipePropertyOperations()
- uid: System.IO.Pipes.PipeStream.CheckReadOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckReadOperations()
  nameWithType: PipeStream.CheckReadOperations()
  fullName: System.IO.Pipes.PipeStream.CheckReadOperations()
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckWriteOperations()
  nameWithType: PipeStream.CheckWriteOperations()
  fullName: System.IO.Pipes.PipeStream.CheckWriteOperations()
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PipeStream.Dispose(Boolean)
  fullName: System.IO.Pipes.PipeStream.Dispose(Boolean)
- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: PipeStream.EndRead(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndRead(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: PipeStream.EndWrite(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndWrite(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.Flush
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush()
  nameWithType: PipeStream.Flush()
  fullName: System.IO.Pipes.PipeStream.Flush()
- uid: System.IO.Pipes.PipeStream.GetAccessControl
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: GetAccessControl()
  nameWithType: PipeStream.GetAccessControl()
  fullName: System.IO.Pipes.PipeStream.GetAccessControl()
- uid: System.IO.Pipes.PipeSecurity
  parent: System.IO.Pipes
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
- uid: System.IO.Pipes.PipeStream.InBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: System.IO.Pipes.PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InitializeHandle(SafePipeHandle,Boolean,Boolean)
  nameWithType: PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  fullName: System.IO.Pipes.PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.IsAsync
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: System.IO.Pipes.PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: System.IO.Pipes.PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsHandleExposed
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: System.IO.Pipes.PipeStream.IsHandleExposed
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: System.IO.Pipes.PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.Length
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  nameWithType: PipeStream.Length
  fullName: System.IO.Pipes.PipeStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: System.IO.Pipes.PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.Position
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  nameWithType: PipeStream.Position
  fullName: System.IO.Pipes.PipeStream.Position
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: PipeStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Read(Byte[],Int32,Int32)
- uid: System.IO.Pipes.PipeStream.ReadByte
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte()
  nameWithType: PipeStream.ReadByte()
  fullName: System.IO.Pipes.PipeStream.ReadByte()
- uid: System.IO.Pipes.PipeStream.ReadMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: System.IO.Pipes.PipeStream.ReadMode
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: System.IO.Pipes.PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: PipeStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.Pipes.PipeStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetAccessControl(PipeSecurity)
  nameWithType: PipeStream.SetAccessControl(PipeSecurity)
  fullName: System.IO.Pipes.PipeStream.SetAccessControl(PipeSecurity)
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: PipeStream.SetLength(Int64)
  fullName: System.IO.Pipes.PipeStream.SetLength(Int64)
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: System.IO.Pipes.PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain()
  nameWithType: PipeStream.WaitForPipeDrain()
  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: PipeStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Write(Byte[],Int32,Int32)
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: PipeStream.WriteByte(Byte)
  fullName: System.IO.Pipes.PipeStream.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.IO.Pipes.PipeStream.#ctor*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream
  nameWithType: PipeStream.PipeStream
- uid: System.IO.Pipes.PipeStream.BeginRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginRead
  nameWithType: PipeStream.BeginRead
- uid: System.IO.Pipes.PipeStream.BeginWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginWrite
  nameWithType: PipeStream.BeginWrite
- uid: System.IO.Pipes.PipeStream.CanRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  nameWithType: PipeStream.CanRead
- uid: System.IO.Pipes.PipeStream.CanSeek*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  nameWithType: PipeStream.CanSeek
- uid: System.IO.Pipes.PipeStream.CanWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  nameWithType: PipeStream.CanWrite
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckPipePropertyOperations
  nameWithType: PipeStream.CheckPipePropertyOperations
- uid: System.IO.Pipes.PipeStream.CheckReadOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckReadOperations
  nameWithType: PipeStream.CheckReadOperations
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckWriteOperations
  nameWithType: PipeStream.CheckWriteOperations
- uid: System.IO.Pipes.PipeStream.Dispose*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Dispose
  nameWithType: PipeStream.Dispose
- uid: System.IO.Pipes.PipeStream.EndRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndRead
  nameWithType: PipeStream.EndRead
- uid: System.IO.Pipes.PipeStream.EndWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndWrite
  nameWithType: PipeStream.EndWrite
- uid: System.IO.Pipes.PipeStream.Flush*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush
  nameWithType: PipeStream.Flush
- uid: System.IO.Pipes.PipeStream.GetAccessControl*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: GetAccessControl
  nameWithType: PipeStream.GetAccessControl
- uid: System.IO.Pipes.PipeStream.InBufferSize*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.InitializeHandle*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InitializeHandle
  nameWithType: PipeStream.InitializeHandle
- uid: System.IO.Pipes.PipeStream.IsAsync*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  nameWithType: PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  nameWithType: PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsHandleExposed*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
- uid: System.IO.Pipes.PipeStream.IsMessageComplete*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.Length*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  nameWithType: PipeStream.Length
- uid: System.IO.Pipes.PipeStream.OutBufferSize*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.Position*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  nameWithType: PipeStream.Position
- uid: System.IO.Pipes.PipeStream.Read*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Read
  nameWithType: PipeStream.Read
- uid: System.IO.Pipes.PipeStream.ReadByte*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte
  nameWithType: PipeStream.ReadByte
- uid: System.IO.Pipes.PipeStream.ReadMode*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  nameWithType: PipeStream.ReadMode
- uid: System.IO.Pipes.PipeStream.SafePipeHandle*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.Seek*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Seek
  nameWithType: PipeStream.Seek
- uid: System.IO.Pipes.PipeStream.SetAccessControl*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetAccessControl
  nameWithType: PipeStream.SetAccessControl
- uid: System.IO.Pipes.PipeStream.SetLength*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetLength
  nameWithType: PipeStream.SetLength
- uid: System.IO.Pipes.PipeStream.TransmissionMode*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain
  nameWithType: PipeStream.WaitForPipeDrain
- uid: System.IO.Pipes.PipeStream.Write*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Write
  nameWithType: PipeStream.Write
- uid: System.IO.Pipes.PipeStream.WriteByte*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteByte
  nameWithType: PipeStream.WriteByte
