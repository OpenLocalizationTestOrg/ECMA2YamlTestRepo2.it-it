### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.Mouse
  id: Mouse
  children:
  - Microsoft.VisualBasic.Devices.Mouse.#ctor
  - Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  - Microsoft.VisualBasic.Devices.Mouse.WheelExists
  - Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  langs:
  - csharp
  name: Mouse
  nameWithType: Mouse
  fullName: Microsoft.VisualBasic.Devices.Mouse
  type: Class
  summary: "Fornisce le proprietà per ottenere informazioni sul formato e configurazione del mouse installato sul computer locale."
  remarks: "Il `My.Computer.Mouse` oggetto fornisce un modo per trovare le informazioni relative al mouse del computer: se i pulsanti del mouse sono invertiti e dettagli relativi alla rotellina del mouse.      ## Disponibilità in base al tipo di progetto |||   |-|-|   | Tipo di progetto | Disponibile |   | Applicazione Windows | **Yes**|   | Libreria di classi | **Yes**|   | Applicazione console | **Yes**|   | Libreria di controlli Windows | **Yes**|   | Libreria di controlli Web | No |   | Servizio di Windows | **Yes**|   | Sito Web | No |"
  example:
  - "This example uses the `My.Computer.Mouse.WheelExists` and `My.Computer.Mouse.WheelScrollLines` properties to determine if the mouse has a scroll wheel and how much to scroll when it rotates.  \n  \n [!code-vb[VbVbalrMyComputer#26](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#26)]"
  syntax:
    content: public class Mouse
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: Mouse()
  nameWithType: Mouse.Mouse()
  fullName: Microsoft.VisualBasic.Devices.Mouse.Mouse()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Inizializza una nuova istanza di <xref href=&quot;Microsoft.VisualBasic.Devices.Mouse&quot;> </xref> classe."
  remarks: 'The `My.Computer.Mouse` object provides a way to find information about the computer''s mouse: whether the mouse buttons are swapped and details about the mouse wheel.'
  syntax:
    content: public Mouse ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.Mouse.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  id: ButtonsSwapped
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: ButtonsSwapped
  nameWithType: Mouse.ButtonsSwapped
  fullName: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Ottiene un <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> che indica se la funzionalità dei pulsanti sinistro e destro del mouse è stata invertita."
  remarks: "Il `My.Computer.Mouse.ButtonsSwapped` proprietà:-fornisce una funzionalità simile per la <xref:System.Windows.Forms.SystemInformation.MouseButtonsSwapped%2A>proprietà.</xref:System.Windows.Forms.SystemInformation.MouseButtonsSwapped%2A>      -Fornisce informazioni sul computer che esegue il codice.      ## Disponibilità in base al tipo di progetto |||   |-|-|   | Tipo di progetto | Disponibile |   | Applicazione Windows | **Yes**|   | Libreria di classi | **Yes**|   | Applicazione console | **Yes**|   | Libreria di controlli Windows | **Yes**|   | Libreria di controlli Web | No |   | Servizio di Windows | **Yes**|   | Sito Web | No |"
  example:
  - "This example uses the `My.Computer.Mouse.ButtonsSwapped` property to determine if functionality of the left and right mouse buttons has been swapped.  \n  \n [!code-vb[VbVbalrMyComputer#35](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#35)]"
  syntax:
    content: public bool ButtonsSwapped { get; }
    return:
      type: System.Boolean
      description: "Un <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> con un valore <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se la funzionalità dei pulsanti sinistro e destro del mouse è stato sostituito; in caso contrario, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il computer è installato alcun mouse."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelExists
  id: WheelExists
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: WheelExists
  nameWithType: Mouse.WheelExists
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelExists
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Ottiene un <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> che indica se il mouse è dotato di rotellina di scorrimento."
  remarks: "Il `My.Computer.Mouse.WheelExists` proprietà fornisce funzionalità simili a quelle di <xref:System.Windows.Forms.SystemInformation.MouseWheelPresent%2A>proprietà.</xref:System.Windows.Forms.SystemInformation.MouseWheelPresent%2A>       Controllare il valore di `My.Computer.Mouse.WheelExists` proprietà prima di tentare di accedere la <xref:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines%2A>proprietà, che genera un&quot;eccezione se il mouse non è presente una rotella di scorrimento.</xref:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines%2A>       La `My.Computer.Mouse.WheelExists` proprietà fornisce informazioni sul computer che esegue il codice.      ## Disponibilità in base al tipo di progetto |||   |-|-|   | Tipo di progetto | Disponibile |   | Applicazione Windows | **Yes**|   | Libreria di classi | **Yes**|   | Applicazione console | **Yes**|   | Libreria di controlli Windows | **Yes**|   | Libreria di controlli Web | No |   | Servizio di Windows | **Yes**|   | Sito Web | No |"
  example:
  - "This example uses the `My.Computer.Mouse.WheelExists` property to determine if the mouse has a scroll wheel and how much to scroll when the mouse wheel is rotated.  \n  \n [!code-vb[VbVbalrMyComputer#26](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#26)]"
  syntax:
    content: public bool WheelExists { get; }
    return:
      type: System.Boolean
      description: "Un valore booleano con valore <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se il mouse ha una rotella di scorrimento; in caso contrario <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Mouse.WheelExists*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il computer è installato alcun mouse."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  id: WheelScrollLines
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: WheelScrollLines
  nameWithType: Mouse.WheelScrollLines
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Ottiene un numero che indica l&quot;ampiezza di scorrimento quando la rotellina del mouse viene ruotata di una tacca."
  remarks: "È possibile utilizzare questa proprietà per determinare il numero di righe da scorrere verso l&quot;alto o verso il basso in un controllo multilinea dotato di una barra di scorrimento.       Il `My.Computer.Mouse.WheelScrollLines` proprietà fornisce funzionalità simili a quelle di <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A>proprietà.</xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A>       Poiché questa proprietà genera un&quot;eccezione se il mouse non è presente una rotella di scorrimento, assicurarsi che il mouse ha una rotella di scorrimento controllando la `My.Computer.Mouse.WheelExists` proprietà.       Questa proprietà fornisce informazioni sul computer che esegue il codice.      ## Disponibilità in base al tipo di progetto |||   |-|-|   | Tipo di progetto | Disponibile |   | Applicazione Windows | **Yes**|   | Libreria di classi | **Yes**|   | Applicazione console | **Yes**|   | Libreria di controlli Windows | **Yes**|   | Libreria di controlli Web | No |   | Servizio di Windows | **Yes**|   | Sito Web | No |"
  example:
  - "This example determines if the mouse has a scroll wheel and uses the `My.Computer.Mouse.WheelExists` property to determine how much to scroll when the mouse wheel is rotated.  \n  \n [!code-vb[VbVbalrMyComputer#26](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#26)]"
  syntax:
    content: public int WheelScrollLines { get; }
    return:
      type: System.Int32
      description: "Un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> che indica l&quot;ampiezza di scorrimento quando la rotellina del mouse viene ruotata una tacca. Un valore positivo indica lo scorrimento per il numero di righe, mentre un valore negativo indica lo scorrimento di una schermata alla volta."
  overload: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il mouse è presente alcuna rotella di scorrimento."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: Microsoft.VisualBasic.Devices.Mouse.#ctor
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: Mouse()
  nameWithType: Mouse.Mouse()
  fullName: Microsoft.VisualBasic.Devices.Mouse.Mouse()
- uid: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: ButtonsSwapped
  nameWithType: Mouse.ButtonsSwapped
  fullName: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelExists
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelExists
  nameWithType: Mouse.WheelExists
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelExists
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelScrollLines
  nameWithType: Mouse.WheelScrollLines
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Devices.Mouse.#ctor*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: Mouse
  nameWithType: Mouse.Mouse
- uid: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: ButtonsSwapped
  nameWithType: Mouse.ButtonsSwapped
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelExists*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelExists
  nameWithType: Mouse.WheelExists
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelScrollLines
  nameWithType: Mouse.WheelScrollLines
