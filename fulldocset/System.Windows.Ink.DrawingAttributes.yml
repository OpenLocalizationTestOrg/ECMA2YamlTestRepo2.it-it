### YamlMime:ManagedReference
items:
- uid: System.Windows.Ink.DrawingAttributes
  id: DrawingAttributes
  children:
  - System.Windows.Ink.DrawingAttributes.#ctor
  - System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)
  - System.Windows.Ink.DrawingAttributes.AttributeChanged
  - System.Windows.Ink.DrawingAttributes.Clone
  - System.Windows.Ink.DrawingAttributes.Color
  - System.Windows.Ink.DrawingAttributes.ContainsPropertyData(System.Guid)
  - System.Windows.Ink.DrawingAttributes.Equals(System.Object)
  - System.Windows.Ink.DrawingAttributes.FitToCurve
  - System.Windows.Ink.DrawingAttributes.GetHashCode
  - System.Windows.Ink.DrawingAttributes.GetPropertyData(System.Guid)
  - System.Windows.Ink.DrawingAttributes.GetPropertyDataIds
  - System.Windows.Ink.DrawingAttributes.Height
  - System.Windows.Ink.DrawingAttributes.IgnorePressure
  - System.Windows.Ink.DrawingAttributes.IsHighlighter
  - System.Windows.Ink.DrawingAttributes.MaxHeight
  - System.Windows.Ink.DrawingAttributes.MaxWidth
  - System.Windows.Ink.DrawingAttributes.MinHeight
  - System.Windows.Ink.DrawingAttributes.MinWidth
  - System.Windows.Ink.DrawingAttributes.OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)
  - System.Windows.Ink.DrawingAttributes.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  - System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)
  - System.Windows.Ink.DrawingAttributes.op_Equality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)
  - System.Windows.Ink.DrawingAttributes.op_Inequality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)
  - System.Windows.Ink.DrawingAttributes.PropertyDataChanged
  - System.Windows.Ink.DrawingAttributes.RemovePropertyData(System.Guid)
  - System.Windows.Ink.DrawingAttributes.StylusTip
  - System.Windows.Ink.DrawingAttributes.StylusTipTransform
  - System.Windows.Ink.DrawingAttributes.Width
  langs:
  - csharp
  name: DrawingAttributes
  nameWithType: DrawingAttributes
  fullName: System.Windows.Ink.DrawingAttributes
  type: Class
  summary: "Specifica l&quot;aspetto di un<xref href=&quot;System.Windows.Ink.Stroke&quot;></xref>"
  remarks: "Utilizzare la <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A>proprietà per specificare le impostazioni, ad esempio colore, larghezza, trasparenza e la forma della punta dello stilo per un <xref:System.Windows.Ink.Stroke>.</xref:System.Windows.Ink.Stroke> </xref:System.Windows.Ink.Stroke.DrawingAttributes%2A>       Utilizzare la <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>proprietà per specificare gli attributi di disegno per i tratti aggiunti a un <xref:System.Windows.Controls.InkCanvas>.</xref:System.Windows.Controls.InkCanvas> </xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> Solo i tratti che vengono aggiunti dopo la <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>subiscono modifiche Mostra gli attributi aggiornati.</xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> L&quot;aspetto dei tratti che già la <xref:System.Windows.Controls.InkCanvas>non cambia.</xref:System.Windows.Controls.InkCanvas>       Per un elenco di valori di proprietà iniziali per un&quot;istanza della classe DrawingAttributes, vedere il costruttore DrawingAttributes.      <a name=&quot;xamlTextUsage_DrawingAttributes&quot;></a># # Utilizzo di testo XAML che questa classe non è in genere utilizzata in XAML."
  example:
  - "The following example demonstrates how to use two DrawingAttributes objects to simulate using a pen and a highlighter on the same <xref:System.Windows.Controls.InkCanvas>. The example assumes the root element in the XAML file is a <xref:System.Windows.Controls.DockPanel> called `root`. It also assumes that there is a <xref:System.Windows.Controls.Button> called `switchHighlighter` and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event is connected to the event handler defined in this example.  \n  \n [!code-cs[DrawingAttributes#3](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#3)]\n [!code-vb[DrawingAttributes#3](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#3)]"
  syntax:
    content: 'public class DrawingAttributes : System.ComponentModel.INotifyPropertyChanged'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.#ctor
  id: '#ctor'
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: DrawingAttributes()
  nameWithType: DrawingAttributes.DrawingAttributes()
  fullName: System.Windows.Ink.DrawingAttributes.DrawingAttributes()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> classe."
  remarks: "La tabella seguente illustra i valori di proprietà iniziali per un&quot;istanza di <xref:System.Windows.Ink.DrawingAttributes>classe.</xref:System.Windows.Ink.DrawingAttributes>      | Proprietà | Il valore iniziale |   |--------------|-------------------|   | <xref:System.Windows.Ink.DrawingAttributes.Color%2A>| Nero |   | <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>| `false`|   | <xref:System.Windows.Ink.DrawingAttributes.Height%2A>|&2; device independent pixel (DIP) |   | <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>| `false`|   | <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>| `false`|   | <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>| <xref:System.Windows.Ink.StylusTip?displayProperty=fullName>|   | <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>| <xref:System.Windows.Media.Matrix.Identity%2A?displayProperty=fullName>|   | <xref:System.Windows.Ink.DrawingAttributes.Width%2A>|2 DIP|</xref:System.Windows.Ink.DrawingAttributes.Width%2A></xref:System.Windows.Media.Matrix.Identity%2A?displayProperty=fullName></xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A></xref:System.Windows.Ink.StylusTip?displayProperty=fullName></xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A></xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A></xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A></xref:System.Windows.Ink.DrawingAttributes.Height%2A></xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A></xref:System.Windows.Ink.DrawingAttributes.Color%2A>"
  syntax:
    content: public DrawingAttributes ();
    parameters: []
  overload: System.Windows.Ink.DrawingAttributes.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)
  id: AddPropertyData(System.Guid,System.Object)
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: AddPropertyData(Guid,Object)
  nameWithType: DrawingAttributes.AddPropertyData(Guid,Object)
  fullName: System.Windows.Ink.DrawingAttributes.AddPropertyData(Guid,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Aggiunge una proprietà personalizzata per il <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> oggetto."
  remarks: "Il metodo AddPropertyData consente di aggiungere proprietà personalizzate a un <xref:System.Windows.Ink.DrawingAttributes>oggetto.</xref:System.Windows.Ink.DrawingAttributes> Ciò è utile quando si proprio tratti di eseguire il rendering e si desidera fornire informazioni aggiuntive."
  example:
  - "The following example demonstrates how to add and retrieve a custom property from the <xref:System.Windows.Ink.DrawingAttributes> object. The example adds a property that indicates whether the <xref:System.Windows.Ink.DrawingAttributes> object is a pen or a highlighter. The code in the `ChangeColors_Click` event handler renders a new color for strokes on the <xref:System.Windows.Controls.InkCanvas> that use the <xref:System.Windows.Ink.DrawingAttributes> object, `inkDA`. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> named `inkCanvas1`, and that there are two <xref:System.Windows.Ink.DrawingAttributes> objects named `inkDA`, and `highlighterDA.`  \n  \n [!code-cs[DrawingAttributes#5](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#5)]\n [!code-vb[DrawingAttributes#5](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#5)]"
  syntax:
    content: public void AddPropertyData (Guid propertyDataId, object propertyData);
    parameters:
    - id: propertyDataId
      type: System.Guid
      description: "Il <xref:System.Guid>per associare la proprietà personalizzata.</xref:System.Guid>"
    - id: propertyData
      type: System.Object
      description: "Il valore della proprietà personalizzata. `propertyData`deve essere di tipo <xref:System.Char>, <xref:System.Byte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, <xref:System.Single>, <xref:System.Double>, <xref:System.DateTime>, <xref:System.Boolean>, <xref:System.String>, <xref:System.Decimal>o una matrice di questi dati tipi; tuttavia non può essere una matrice di tipo <xref:System.String>.</xref:System.String> </xref:System.Decimal> </xref:System.String> </xref:System.Boolean> </xref:System.DateTime> </xref:System.Double> </xref:System.Single> </xref:System.UInt64> </xref:System.Int64> </xref:System.UInt32> </xref:System.Int32> </xref:System.UInt16> </xref:System.Int16> </xref:System.Byte> </xref:System.Char>"
  overload: System.Windows.Ink.DrawingAttributes.AddPropertyData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>propertyData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>propertyDataId</code>è un oggetto vuoto <xref:System.Guid>.       - oppure - <code>propertyData</code> non è uno dei tipi di dati consentiti nel <xref uid=&quot;langword_csharp_Parameters&quot; name=&quot;Parameters&quot; href=&quot;&quot;> </xref> sezione."
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.AttributeChanged
  id: AttributeChanged
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: AttributeChanged
  nameWithType: DrawingAttributes.AttributeChanged
  fullName: System.Windows.Ink.DrawingAttributes.AttributeChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Si verifica quando una proprietà di <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> modifiche dell&quot;oggetto."
  remarks: ''
  example:
  - "The following example handles the AttributeChanged event. This example assumes that there is a <xref:System.Windows.Ink.DrawingAttributes> object called `inkDA` and that the AttributeChanged event is connected to the event handler defined in this example.  \n  \n [!code-cs[DrawingAttributes#6](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#6)]\n [!code-vb[DrawingAttributes#6](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#6)]"
  syntax:
    content: public event System.Windows.Ink.PropertyDataChangedEventHandler AttributeChanged;
    return:
      type: System.Windows.Ink.PropertyDataChangedEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.Clone
  id: Clone
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: Clone()
  nameWithType: DrawingAttributes.Clone()
  fullName: System.Windows.Ink.DrawingAttributes.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Copie di <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> oggetto."
  remarks: "Il metodo Clone crea un nuovo <xref:System.Windows.Ink.DrawingAttributes>dell&quot;oggetto e la popola con gli stessi valori dell&quot;oggetto corrente.</xref:System.Windows.Ink.DrawingAttributes> Tutte le proprietà personalizzate vengono inoltre copiate."
  example:
  - "The following example demonstrates how to copy a <xref:System.Windows.Ink.DrawingAttributes> object.  \n  \n [!code-cs[DrawingAttributes#8](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#8)]\n [!code-vb[DrawingAttributes#8](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#8)]"
  syntax:
    content: public virtual System.Windows.Ink.DrawingAttributes Clone ();
    parameters: []
    return:
      type: System.Windows.Ink.DrawingAttributes
      description: "Una copia del <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> oggetto."
  overload: System.Windows.Ink.DrawingAttributes.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.Color
  id: Color
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: Color
  nameWithType: DrawingAttributes.Color
  fullName: System.Windows.Ink.DrawingAttributes.Color
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Ottiene o imposta il colore di un <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref>."
  remarks: "<a name=&quot;xamlTextUsage_Color&quot;></a># # Utilizzo di testo XAML che questa proprietà non è in genere utilizzata in XAML."
  example:
  - "The following example demonstrates how to set the Color property. The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`. For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.  \n  \n [!code-cs[DrawingAttributes#1](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#1)]\n [!code-vb[DrawingAttributes#1](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#1)]"
  syntax:
    content: public System.Windows.Media.Color Color { get; set; }
    return:
      type: System.Windows.Media.Color
      description: "Il colore di un <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref>."
  overload: System.Windows.Ink.DrawingAttributes.Color*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.ContainsPropertyData(System.Guid)
  id: ContainsPropertyData(System.Guid)
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: ContainsPropertyData(Guid)
  nameWithType: DrawingAttributes.ContainsPropertyData(Guid)
  fullName: System.Windows.Ink.DrawingAttributes.ContainsPropertyData(Guid)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Restituisce un valore che indica se l&quot;identificatore di dati della proprietà specificata è nel <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> oggetto."
  remarks: ''
  example:
  - "The following example demonstrates how to add and retrieve a custom property from the <xref:System.Windows.Ink.DrawingAttributes> object. The example adds a property that indicates whether the <xref:System.Windows.Ink.DrawingAttributes> object is a pen or a highlighter. The `ChangeColors_Click` event handler changes all the strokes that were put on the <xref:System.Windows.Controls.InkCanvas> with a <xref:System.Windows.Ink.DrawingAttributes> called `inkDA` to a new color. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> named `inkCanvas1`, and that there are two <xref:System.Windows.Ink.DrawingAttributes> objects named `inkDA`, and `highlighterDA.`  \n  \n [!code-cs[DrawingAttributes#5](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#5)]\n [!code-vb[DrawingAttributes#5](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#5)]"
  syntax:
    content: public bool ContainsPropertyData (Guid propertyDataId);
    parameters:
    - id: propertyDataId
      type: System.Guid
      description: "Il <xref:System.Guid>per individuare il <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> oggetto.</xref:System.Guid>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;identificatore di dati della proprietà specificata si trova il <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> oggetto; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Ink.DrawingAttributes.ContainsPropertyData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DrawingAttributes.Equals(Object)
  fullName: System.Windows.Ink.DrawingAttributes.Equals(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Determina se l&quot;oggetto specificato <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> oggetto è uguale all&quot;oggetto corrente <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> oggetto."
  remarks: "Due <xref:System.Windows.Ink.DrawingAttributes>gli oggetti sono uguali se le proprietà seguenti:- <xref:System.Windows.Ink.DrawingAttributes.Color%2A>- <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>- <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>- <xref:System.Windows.Ink.DrawingAttributes.Width%2A>- <xref:System.Windows.Ink.DrawingAttributes.Height%2A>- <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>- <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>- <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>> [!NOTE] > uguale il metodo non verifica le proprietà personalizzate per verificarne l&quot;uguaglianza.</xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> </xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> </xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A> </xref:System.Windows.Ink.DrawingAttributes.Height%2A> </xref:System.Windows.Ink.DrawingAttributes.Width%2A> </xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> </xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A> </xref:System.Windows.Ink.DrawingAttributes.Color%2A> </xref:System.Windows.Ink.DrawingAttributes>"
  example:
  - "The following example compares two <xref:System.Windows.Ink.DrawingAttributes> objects for equality. Because the <xref:System.Windows.Ink.DrawingAttributes.Color%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, and <xref:System.Windows.Ink.DrawingAttributes.Width%2A> properties on `attributes1` and `attributes2` are set to the same values, the \"The DrawingAttributes are equal\" message appears.  \n  \n [!code-cs[DrawingAttributes#10](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#10)]\n [!code-vb[DrawingAttributes#10](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#10)]  \n[!code-cs[DrawingAttributes#12](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#12)]\n[!code-vb[DrawingAttributes#12](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#12)]"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Il <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> oggetto da confrontare all&quot;oggetto corrente <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> oggetto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se gli oggetti sono uguali. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Ink.DrawingAttributes.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.FitToCurve
  id: FitToCurve
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: FitToCurve
  nameWithType: DrawingAttributes.FitToCurve
  fullName: System.Windows.Ink.DrawingAttributes.FitToCurve
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Ottiene o imposta un valore che indica se la smussatura di Bezier viene utilizzata per eseguire il rendering di <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref>."
  remarks: "<a name=&quot;xamlTextUsage_FitToCurve&quot;></a># # Utilizzo di testo XAML che questa proprietà non è in genere utilizzata in XAML."
  example:
  - "The following example demonstrates how to set the FitToCurve property. The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`. For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.  \n  \n [!code-cs[DrawingAttributes#1](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#1)]\n [!code-vb[DrawingAttributes#1](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#1)]"
  syntax:
    content: public bool FitToCurve { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per utilizzare Bezier anti-aliasing per il rendering di <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref>; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Ink.DrawingAttributes.FitToCurve*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.GetHashCode
  id: GetHashCode
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DrawingAttributes.GetHashCode()
  fullName: System.Windows.Ink.DrawingAttributes.GetHashCode()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Funge da funzione hash per un particolare tipo."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash per l&quot;oggetto corrente <xref:System.Object>.</xref:System.Object>"
  overload: System.Windows.Ink.DrawingAttributes.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.GetPropertyData(System.Guid)
  id: GetPropertyData(System.Guid)
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: GetPropertyData(Guid)
  nameWithType: DrawingAttributes.GetPropertyData(Guid)
  fullName: System.Windows.Ink.DrawingAttributes.GetPropertyData(Guid)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Ottiene il valore della proprietà personalizzata associata a specificata <xref:System.Guid>.</xref:System.Guid>"
  remarks: "Utilizzare il metodo GetPropertyData per accedere alle proprietà personalizzate aggiunte a un <xref:System.Windows.Ink.DrawingAttributes>oggetto.</xref:System.Windows.Ink.DrawingAttributes> Se non è stato impostato un valore, GetPropertyData restituisce il valore predefinito per la proprietà incorporata."
  example:
  - "The following example demonstrates how to add and retrieve a custom property from the <xref:System.Windows.Ink.DrawingAttributes> object. The example adds a property that indicates whether the <xref:System.Windows.Ink.DrawingAttributes> object is a pen or a highlighter. The code in the `ChangeColors_Click` event handler renders a new color for strokes on the <xref:System.Windows.Controls.InkCanvas> that use the <xref:System.Windows.Ink.DrawingAttributes> object, `inkDA`. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> named `inkCanvas1`, and that there are two <xref:System.Windows.Ink.DrawingAttributes> objects named `inkDA`, and `highlighterDA.`  \n  \n [!code-cs[DrawingAttributes#5](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#5)]\n [!code-vb[DrawingAttributes#5](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#5)]"
  syntax:
    content: public object GetPropertyData (Guid propertyDataId);
    parameters:
    - id: propertyDataId
      type: System.Guid
      description: "Il <xref:System.Guid>associato alla proprietà personalizzata da ottenere.</xref:System.Guid>"
    return:
      type: System.Object
      description: "Il valore della proprietà personalizzata associata a specificata <xref:System.Guid>.</xref:System.Guid>"
  overload: System.Windows.Ink.DrawingAttributes.GetPropertyData*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>propertyDataId</code>non è associata a una proprietà personalizzata del <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> oggetto."
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.GetPropertyDataIds
  id: GetPropertyDataIds
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: GetPropertyDataIds()
  nameWithType: DrawingAttributes.GetPropertyDataIds()
  fullName: System.Windows.Ink.DrawingAttributes.GetPropertyDataIds()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Restituisce il GUID di qualsiasi proprietà personalizzate associate di <xref href=&quot;System.Windows.Ink.StrokeCollection&quot;> </xref>."
  remarks: "I GUID per le proprietà predefinite di <xref:System.Windows.Ink.DrawingAttributes>classe sono nella <xref:System.Windows.Ink.DrawingAttributeIds>classe.</xref:System.Windows.Ink.DrawingAttributeIds> </xref:System.Windows.Ink.DrawingAttributes>"
  example:
  - "The following example demonstrates how to get the property data identifiers from the <xref:System.Windows.Ink.DrawingAttributes> object. This example assumes that a <xref:System.Windows.Ink.DrawingAttributes> called `inkDA` has been declared.  \n  \n [!code-cs[DrawingAttributes#7](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#7)]\n [!code-vb[DrawingAttributes#7](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#7)]"
  syntax:
    content: public Guid[] GetPropertyDataIds ();
    parameters: []
    return:
      type: System.Guid[]
      description: "Matrice di tipo <xref:System.Guid>che rappresenta gli identificatori di dati della proprietà.</xref:System.Guid>"
  overload: System.Windows.Ink.DrawingAttributes.GetPropertyDataIds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.Height
  id: Height
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: Height
  nameWithType: DrawingAttributes.Height
  fullName: System.Windows.Ink.DrawingAttributes.Height
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Ottiene o imposta l&quot;altezza dello stilo utilizzato per disegnare il <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref>."
  remarks: "I seguenti fattori influenzano l&quot;altezza e larghezza di un <xref:System.Windows.Ink.Stroke>quando ne viene eseguito il rendering, ma non il valore della proprietà Height.</xref:System.Windows.Ink.Stroke>      -La quantità di pressione applicata per lo stilo quando il <xref:System.Windows.Ink.Stroke>viene disegnato.</xref:System.Windows.Ink.Stroke>      -Il valore di <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>proprietà.</xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>       Se si imposta la proprietà di altezza per 0 device independent pixel (DIP), modificarlo a 2 DIP.      <a name=&quot;xamlTextUsage_Height&quot;></a># # Utilizzo di testo XAML che questa proprietà non è in genere utilizzata in XAML."
  example:
  - "The following example demonstrates how to set the Height property. The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`. For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.  \n  \n [!code-cs[DrawingAttributes#1](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#1)]\n [!code-vb[DrawingAttributes#1](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#1)]"
  syntax:
    content: public double Height { get; set; }
    return:
      type: System.Double
      description: "Il valore che indica l&quot;altezza dello stilo utilizzato per disegnare il <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref>."
  overload: System.Windows.Ink.DrawingAttributes.Height*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "La proprietà di altezza è minore di &lt;xref:System.Double.Epsilon?displayProperty=fullName&gt; o &lt;xref:System.Double.NaN?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.IgnorePressure
  id: IgnorePressure
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: IgnorePressure
  nameWithType: DrawingAttributes.IgnorePressure
  fullName: System.Windows.Ink.DrawingAttributes.IgnorePressure
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Ottiene o imposta un valore che indica se lo spessore del tipo sottoposto a rendering <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref> modifiche in base alla quantità di pressione applicata."
  remarks: "<a name=&quot;xamlTextUsage_IgnorePressure&quot;></a># # Utilizzo di testo XAML che questa proprietà non è in genere utilizzata in XAML."
  example:
  - "The following example demonstrates how to set the IgnorePressure property. The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`. For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.  \n  \n [!code-cs[DrawingAttributes#1](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#1)]\n [!code-vb[DrawingAttributes#1](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#1)]"
  syntax:
    content: public bool IgnorePressure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per indicare che lo spessore del tratto è uniforme; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per indicare che lo spessore del tipo sottoposto a rendering <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref> aumenta quando la pressione viene aumentata. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Ink.DrawingAttributes.IgnorePressure*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.IsHighlighter
  id: IsHighlighter
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: IsHighlighter
  nameWithType: DrawingAttributes.IsHighlighter
  fullName: System.Windows.Ink.DrawingAttributes.IsHighlighter
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Ottiene o imposta un valore che indica se il <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref> evidenziatore simile."
  remarks: "Quando la proprietà di IsHighlighter è impostata su `true`, <xref:System.Windows.Ink.Stroke>è leggermente trasparente, che consente il tratto sottostante da visualizzare.</xref:System.Windows.Ink.Stroke>      <a name=&quot;xamlTextUsage_IsHighlighter&quot;></a># # Utilizzo di testo XAML che questa proprietà non è in genere utilizzata in XAML."
  example:
  - "The following example demonstrates how to set the IsHighlighter property. The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`. For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.  \n  \n [!code-cs[DrawingAttributes#1](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#1)]\n [!code-vb[DrawingAttributes#1](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#1)]"
  syntax:
    content: public bool IsHighlighter { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per eseguire il rendering di <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref> a evidenziatore; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Ink.DrawingAttributes.IsHighlighter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.MaxHeight
  id: MaxHeight
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: MaxHeight
  nameWithType: DrawingAttributes.MaxHeight
  fullName: System.Windows.Ink.DrawingAttributes.MaxHeight
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Specifica il valore massimo consentito per il <xref:System.Windows.Ink.DrawingAttributes.Height*>proprietà.</xref:System.Windows.Ink.DrawingAttributes.Height*>"
  remarks: "Utilizzare il campo MaxHeight per verificare se un valore sia entro i limiti consentiti per il <xref:System.Windows.Ink.DrawingAttributes.Height%2A>proprietà.</xref:System.Windows.Ink.DrawingAttributes.Height%2A> Eseguire questa operazione quando il valore proviene da un&quot;origine sconosciuta, ad esempio l&quot;input dell&quot;utente non vincolato."
  example:
  - "The following example ensures the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property of the <xref:System.Windows.Ink.DrawingAttributes> is set to a legal value. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \n  \n [!code-cs[DrawingAttributes#14](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#14)]\n [!code-vb[DrawingAttributes#14](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#14)]"
  syntax:
    content: public static readonly double MaxHeight;
    return:
      type: System.Double
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.MaxWidth
  id: MaxWidth
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: MaxWidth
  nameWithType: DrawingAttributes.MaxWidth
  fullName: System.Windows.Ink.DrawingAttributes.MaxWidth
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Specifica il valore massimo consentito per il <xref:System.Windows.Ink.DrawingAttributes.Width*>proprietà.</xref:System.Windows.Ink.DrawingAttributes.Width*>"
  remarks: "Utilizzare il campo MaxWidth per verificare se un valore sia entro i limiti consentiti per il <xref:System.Windows.Ink.DrawingAttributes.Width%2A>proprietà.</xref:System.Windows.Ink.DrawingAttributes.Width%2A> Eseguire questa operazione quando il valore proviene da un&quot;origine sconosciuta, ad esempio l&quot;input dell&quot;utente non vincolato."
  example:
  - "The following example ensures the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property of the <xref:System.Windows.Ink.DrawingAttributes> is set to a legal value. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \n  \n [!code-cs[DrawingAttributes#15](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#15)]\n [!code-vb[DrawingAttributes#15](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#15)]"
  syntax:
    content: public static readonly double MaxWidth;
    return:
      type: System.Double
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.MinHeight
  id: MinHeight
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: MinHeight
  nameWithType: DrawingAttributes.MinHeight
  fullName: System.Windows.Ink.DrawingAttributes.MinHeight
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Specifica il valore minimo consentito per il <xref:System.Windows.Ink.DrawingAttributes.Height*>proprietà.</xref:System.Windows.Ink.DrawingAttributes.Height*>"
  remarks: "Utilizzare il campo MinHeight per verificare se un valore sia entro i limiti consentiti per il <xref:System.Windows.Ink.DrawingAttributes.Height%2A>proprietà.</xref:System.Windows.Ink.DrawingAttributes.Height%2A> Eseguire questa operazione quando il valore proviene da un&quot;origine sconosciuta, ad esempio l&quot;input dell&quot;utente non vincolato."
  example:
  - "The following example ensures the <xref:System.Windows.Ink.DrawingAttributes.Height%2A> property of the <xref:System.Windows.Ink.DrawingAttributes> is set to a legal value. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \n  \n [!code-cs[DrawingAttributes#14](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#14)]\n [!code-vb[DrawingAttributes#14](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#14)]"
  syntax:
    content: public static readonly double MinHeight;
    return:
      type: System.Double
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.MinWidth
  id: MinWidth
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: MinWidth
  nameWithType: DrawingAttributes.MinWidth
  fullName: System.Windows.Ink.DrawingAttributes.MinWidth
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Specifica il valore minimo consentito per il <xref:System.Windows.Ink.DrawingAttributes.Width*>proprietà.</xref:System.Windows.Ink.DrawingAttributes.Width*>"
  remarks: "Utilizzare il campo MinWidth per verificare se un valore sia entro i limiti consentiti per il <xref:System.Windows.Ink.DrawingAttributes.Width%2A>proprietà.</xref:System.Windows.Ink.DrawingAttributes.Width%2A> Eseguire questa operazione quando il valore proviene da un&quot;origine sconosciuta, ad esempio l&quot;input dell&quot;utente non vincolato."
  example:
  - "The following example ensures the <xref:System.Windows.Ink.DrawingAttributes.Width%2A> property of the <xref:System.Windows.Ink.DrawingAttributes> is set to a legal value. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \n  \n [!code-cs[DrawingAttributes#15](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#15)]\n [!code-vb[DrawingAttributes#15](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#15)]"
  syntax:
    content: public static readonly double MinWidth;
    return:
      type: System.Double
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)
  id: OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: OnAttributeChanged(PropertyDataChangedEventArgs)
  nameWithType: DrawingAttributes.OnAttributeChanged(PropertyDataChangedEventArgs)
  fullName: System.Windows.Ink.DrawingAttributes.OnAttributeChanged(PropertyDataChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Genera il <xref href=&quot;System.Windows.Ink.DrawingAttributes.AttributeChanged&quot;> </xref> evento."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato.       Il metodo OnAttributeChanged consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnAttributeChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Ink.PropertyDataChangedEventArgs
      description: "Oggetto <xref href=&quot;System.Windows.Ink.PropertyDataChangedEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Windows.Ink.DrawingAttributes.OnAttributeChanged*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>e</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: OnPropertyChanged(PropertyChangedEventArgs)
  nameWithType: DrawingAttributes.OnPropertyChanged(PropertyChangedEventArgs)
  fullName: System.Windows.Ink.DrawingAttributes.OnPropertyChanged(PropertyChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Si verifica quando una qualsiasi <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> le modifiche alle proprietà."
  syntax:
    content: protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.PropertyChangedEventArgs
      description: "EventArgs"
  overload: System.Windows.Ink.DrawingAttributes.OnPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)
  id: OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: OnPropertyDataChanged(PropertyDataChangedEventArgs)
  nameWithType: DrawingAttributes.OnPropertyDataChanged(PropertyDataChangedEventArgs)
  fullName: System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(PropertyDataChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Genera il <xref href=&quot;System.Windows.Ink.DrawingAttributes.PropertyDataChanged&quot;> </xref> evento."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato.       Il metodo OnPropertyDataChanged consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento."
  syntax:
    content: protected virtual void OnPropertyDataChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Ink.PropertyDataChangedEventArgs
      description: "Oggetto <xref href=&quot;System.Windows.Ink.PropertyDataChangedEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>e</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.op_Equality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)
  id: op_Equality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: op_Equality(DrawingAttributes,DrawingAttributes)
  nameWithType: DrawingAttributes.op_Equality(DrawingAttributes,DrawingAttributes)
  fullName: System.Windows.Ink.DrawingAttributes.op_Equality(DrawingAttributes,DrawingAttributes)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Determina se l&quot;oggetto specificato <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> oggetti sono uguali."
  remarks: "Due <xref:System.Windows.Ink.DrawingAttributes>gli oggetti sono uguali se le proprietà seguenti:- <xref:System.Windows.Ink.DrawingAttributes.Color%2A>- <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>- <xref:System.Windows.Ink.DrawingAttributes.Height%2A>- <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>- <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>- <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>- <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>- <xref:System.Windows.Ink.DrawingAttributes.Width%2A>> [!NOTE] > uguaglianza il metodo non verifica le proprietà personalizzate per verificarne l&quot;uguaglianza.</xref:System.Windows.Ink.DrawingAttributes.Width%2A> </xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> </xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A> </xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> </xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A> </xref:System.Windows.Ink.DrawingAttributes.Height%2A> </xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> </xref:System.Windows.Ink.DrawingAttributes.Color%2A> </xref:System.Windows.Ink.DrawingAttributes>"
  example:
  - "The following example compares two <xref:System.Windows.Ink.DrawingAttributes> objects for equality. Because the <xref:System.Windows.Ink.DrawingAttributes.Color%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, and <xref:System.Windows.Ink.DrawingAttributes.Width%2A> properties on `attributes1` and `attributes2` are set to the same values, the \"The DrawingAttributes are equal\" message appears.  \n  \n [!code-cs[DrawingAttributes#10](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#10)]\n [!code-vb[DrawingAttributes#10](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#10)]  \n[!code-cs[DrawingAttributes#11](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#11)]\n[!code-vb[DrawingAttributes#11](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#11)]"
  syntax:
    content: public static bool op_Equality (System.Windows.Ink.DrawingAttributes first, System.Windows.Ink.DrawingAttributes second);
    parameters:
    - id: first
      type: System.Windows.Ink.DrawingAttributes
      description: "Il primo <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> oggetto da confrontare."
    - id: second
      type: System.Windows.Ink.DrawingAttributes
      description: "Il secondo <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> oggetto da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se gli oggetti sono uguali. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Ink.DrawingAttributes.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.op_Inequality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)
  id: op_Inequality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: op_Inequality(DrawingAttributes,DrawingAttributes)
  nameWithType: DrawingAttributes.op_Inequality(DrawingAttributes,DrawingAttributes)
  fullName: System.Windows.Ink.DrawingAttributes.op_Inequality(DrawingAttributes,DrawingAttributes)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Determina se l&quot;oggetto specificato <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> oggetti non sono uguali."
  remarks: "Due <xref:System.Windows.Ink.DrawingAttributes>oggetti non sono uguali se le proprietà seguenti non sono uguali:- <xref:System.Windows.Ink.DrawingAttributes.Color%2A>- <xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A>- <xref:System.Windows.Ink.DrawingAttributes.Height%2A>- <xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A>- <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A>- <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>- <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>- <xref:System.Windows.Ink.DrawingAttributes.Width%2A>> [!NOTE] > disuguaglianza il metodo non verifica le proprietà personalizzate per verificarne l&quot;uguaglianza.</xref:System.Windows.Ink.DrawingAttributes.Width%2A> </xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A> </xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A> </xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> </xref:System.Windows.Ink.DrawingAttributes.IgnorePressure%2A> </xref:System.Windows.Ink.DrawingAttributes.Height%2A> </xref:System.Windows.Ink.DrawingAttributes.FitToCurve%2A> </xref:System.Windows.Ink.DrawingAttributes.Color%2A> </xref:System.Windows.Ink.DrawingAttributes>"
  example:
  - "The following example compares two <xref:System.Windows.Ink.DrawingAttributes> objects for inequality. Because the <xref:System.Windows.Ink.DrawingAttributes.Color%2A>, <xref:System.Windows.Ink.DrawingAttributes.StylusTip%2A>, <xref:System.Windows.Ink.DrawingAttributes.Height%2A>, and <xref:System.Windows.Ink.DrawingAttributes.Width%2A> properties on `attributes1` and `attributes2` are set to the same values, the \"The DrawingAttributes are equal\" message appears.  \n  \n [!code-cs[DrawingAttributes#10](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#10)]\n [!code-vb[DrawingAttributes#10](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#10)]  \n[!code-cs[DrawingAttributes#13](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#13)]\n[!code-vb[DrawingAttributes#13](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#13)]"
  syntax:
    content: public static bool op_Inequality (System.Windows.Ink.DrawingAttributes first, System.Windows.Ink.DrawingAttributes second);
    parameters:
    - id: first
      type: System.Windows.Ink.DrawingAttributes
      description: "Il primo <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> oggetto da confrontare."
    - id: second
      type: System.Windows.Ink.DrawingAttributes
      description: "Il secondo <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> oggetto da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se gli oggetti non sono uguali. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Ink.DrawingAttributes.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.PropertyDataChanged
  id: PropertyDataChanged
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: PropertyDataChanged
  nameWithType: DrawingAttributes.PropertyDataChanged
  fullName: System.Windows.Ink.DrawingAttributes.PropertyDataChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Si verifica quando i dati della proprietà viene aggiunto o rimosso dal <xref href=&quot;System.Windows.Ink.StrokeCollection&quot;> </xref>."
  remarks: ''
  example:
  - "The following example is part of a custom stroke that can draw a three-dimensional effect. The stroke defines and stores a custom property called `Shadowed`, which belongs to <xref:System.Windows.Ink.Stroke.DrawingAttributes%2A>. When the `Shadowed` property changes, the PropertyDataChanged event handler calls the <xref:System.Windows.Ink.Stroke.OnInvalidated%2A> method, which causes the stroke to be redrawn.  \n  \n [!code-vb[StrokeCollectionShadow#1](~/add/codesnippet/visualbasic/StrokeCollectionShadow/CustomRenderedStroke.vb#1)]\n [!code-cs[StrokeCollectionShadow#1](~/add/codesnippet/csharp/StrokeCollectionShadow/CustomRenderedStroke.cs#1)]"
  syntax:
    content: public event System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged;
    return:
      type: System.Windows.Ink.PropertyDataChangedEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.RemovePropertyData(System.Guid)
  id: RemovePropertyData(System.Guid)
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: RemovePropertyData(Guid)
  nameWithType: DrawingAttributes.RemovePropertyData(Guid)
  fullName: System.Windows.Ink.DrawingAttributes.RemovePropertyData(Guid)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Rimuove la proprietà personalizzata associata a specificata <xref:System.Guid>.</xref:System.Guid>"
  remarks: ''
  example:
  - "The following example demonstrates how to remove a custom property from a <xref:System.Windows.Ink.DrawingAttributes> object.  \n  \n [!code-cs[DrawingAttributes#9](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#9)]\n [!code-vb[DrawingAttributes#9](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#9)]"
  syntax:
    content: public void RemovePropertyData (Guid propertyDataId);
    parameters:
    - id: propertyDataId
      type: System.Guid
      description: "Il <xref:System.Guid>associato alla proprietà personalizzata da rimuovere.</xref:System.Guid>"
  overload: System.Windows.Ink.DrawingAttributes.RemovePropertyData*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>propertyDataId</code>non è associata a una proprietà personalizzata del <xref href=&quot;System.Windows.Ink.DrawingAttributes&quot;> </xref> oggetto."
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.StylusTip
  id: StylusTip
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: StylusTip
  nameWithType: DrawingAttributes.StylusTip
  fullName: System.Windows.Ink.DrawingAttributes.StylusTip
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Ottiene o imposta la forma dello stilo utilizzato per disegnare il <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref>."
  remarks: "<a name=&quot;xamlTextUsage_StylusTip&quot;></a># # Utilizzo di testo XAML che questa proprietà non è in genere utilizzata in XAML."
  example:
  - "The following example demonstrates how to set the StylusTip property. The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`. For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.  \n  \n [!code-cs[DrawingAttributes#1](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#1)]\n [!code-vb[DrawingAttributes#1](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#1)]"
  syntax:
    content: public System.Windows.Ink.StylusTip StylusTip { get; set; }
    return:
      type: System.Windows.Ink.StylusTip
      description: "Uno del <xref href=&quot;System.Windows.Ink.StylusShape&quot;> </xref> valori."
  overload: System.Windows.Ink.DrawingAttributes.StylusTip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.StylusTipTransform
  id: StylusTipTransform
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: StylusTipTransform
  nameWithType: DrawingAttributes.StylusTipTransform
  fullName: System.Windows.Ink.DrawingAttributes.StylusTipTransform
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Ottiene o imposta il <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> che specifica la trasformazione da eseguire sulla punta dello stilo."
  remarks: "Utilizzare la proprietà StylusTipTransform per ruotare, inclinare o ridimensionare la punta dello stilo.      <a name=&quot;xamlTextUsage_StylusTipTransform&quot;></a># # Utilizzo di testo XAML che questa proprietà non è in genere utilizzata in XAML."
  example:
  - "The following example demonstrates how to set the StylusTipTransform property. The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`. For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.  \n  \n [!code-cs[DrawingAttributes#1](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#1)]\n [!code-vb[DrawingAttributes#1](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#1)]"
  syntax:
    content: public System.Windows.Media.Matrix StylusTipTransform { get; set; }
    return:
      type: System.Windows.Media.Matrix
      description: "Oggetto <xref href=&quot;System.Windows.Media.Matrix&quot;> </xref> che specifica la trasformazione da eseguire sulla punta dello stilo."
  overload: System.Windows.Ink.DrawingAttributes.StylusTipTransform*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La matrice impostata su StylusTipTransform non è una matrice invertibile.       - o - <> </> *> o <> </> *> proprietà della matrice è diverso da zero."
  platform:
  - net462
- uid: System.Windows.Ink.DrawingAttributes.Width
  id: Width
  parent: System.Windows.Ink.DrawingAttributes
  langs:
  - csharp
  name: Width
  nameWithType: DrawingAttributes.Width
  fullName: System.Windows.Ink.DrawingAttributes.Width
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Ink
  summary: "Ottiene o imposta la larghezza dello stilo utilizzato per disegnare il <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref>."
  remarks: "I seguenti fattori influenzano l&quot;altezza e larghezza di un <xref:System.Windows.Ink.Stroke>quando ne viene eseguito il rendering, ma non il valore della proprietà Width.</xref:System.Windows.Ink.Stroke>      -La quantità di pressione applicata per lo stilo quando il <xref:System.Windows.Ink.Stroke>viene disegnato.</xref:System.Windows.Ink.Stroke>      -Il valore di <xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>proprietà.</xref:System.Windows.Ink.DrawingAttributes.StylusTipTransform%2A>       Se si imposta la proprietà Width per 0 device independent pixel (DIP), modificarlo a 2 DIP.      <a name=&quot;xamlTextUsage_Width&quot;></a># # Utilizzo di testo XAML che questa proprietà non è in genere utilizzata in XAML."
  example:
  - "The following example demonstrates how to set the Width property. The example assumes that your application has an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`, and two <xref:System.Windows.Ink.DrawingAttributes> objects called `inkDA` and `highlighterDA`. For the complete example, see the <xref:System.Windows.Ink.DrawingAttributes> class overview.  \n  \n [!code-cs[DrawingAttributes#1](~/add/codesnippet/csharp/DrawingAttributesSample/Window1.xaml.cs#1)]\n [!code-vb[DrawingAttributes#1](~/add/codesnippet/visualbasic/DrawingAttributesSample/Window1.xaml.vb#1)]"
  syntax:
    content: public double Width { get; set; }
    return:
      type: System.Double
      description: "La larghezza dello stilo utilizzato per disegnare il <xref href=&quot;System.Windows.Ink.Stroke&quot;> </xref>."
  overload: System.Windows.Ink.DrawingAttributes.Width*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "La proprietà Width è minore di &lt;xref:System.Double.Epsilon?displayProperty=fullName&gt; o &lt;xref:System.Double.NaN?displayProperty=fullName&gt;."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Ink.DrawingAttributes.#ctor
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: DrawingAttributes()
  nameWithType: DrawingAttributes.DrawingAttributes()
  fullName: System.Windows.Ink.DrawingAttributes.DrawingAttributes()
- uid: System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: AddPropertyData(Guid,Object)
  nameWithType: DrawingAttributes.AddPropertyData(Guid,Object)
  fullName: System.Windows.Ink.DrawingAttributes.AddPropertyData(Guid,Object)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Windows.Ink.DrawingAttributes.AttributeChanged
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: AttributeChanged
  nameWithType: DrawingAttributes.AttributeChanged
  fullName: System.Windows.Ink.DrawingAttributes.AttributeChanged
- uid: System.Windows.Ink.PropertyDataChangedEventHandler
  parent: System.Windows.Ink
  isExternal: false
  name: PropertyDataChangedEventHandler
  nameWithType: PropertyDataChangedEventHandler
  fullName: System.Windows.Ink.PropertyDataChangedEventHandler
- uid: System.Windows.Ink.DrawingAttributes.Clone
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: Clone()
  nameWithType: DrawingAttributes.Clone()
  fullName: System.Windows.Ink.DrawingAttributes.Clone()
- uid: System.Windows.Ink.DrawingAttributes
  parent: System.Windows.Ink
  isExternal: false
  name: DrawingAttributes
  nameWithType: DrawingAttributes
  fullName: System.Windows.Ink.DrawingAttributes
- uid: System.Windows.Ink.DrawingAttributes.Color
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: Color
  nameWithType: DrawingAttributes.Color
  fullName: System.Windows.Ink.DrawingAttributes.Color
- uid: System.Windows.Media.Color
  parent: System.Windows.Media
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Windows.Media.Color
- uid: System.Windows.Ink.DrawingAttributes.ContainsPropertyData(System.Guid)
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: ContainsPropertyData(Guid)
  nameWithType: DrawingAttributes.ContainsPropertyData(Guid)
  fullName: System.Windows.Ink.DrawingAttributes.ContainsPropertyData(Guid)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Ink.DrawingAttributes.Equals(System.Object)
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: Equals(Object)
  nameWithType: DrawingAttributes.Equals(Object)
  fullName: System.Windows.Ink.DrawingAttributes.Equals(Object)
- uid: System.Windows.Ink.DrawingAttributes.FitToCurve
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: FitToCurve
  nameWithType: DrawingAttributes.FitToCurve
  fullName: System.Windows.Ink.DrawingAttributes.FitToCurve
- uid: System.Windows.Ink.DrawingAttributes.GetHashCode
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: GetHashCode()
  nameWithType: DrawingAttributes.GetHashCode()
  fullName: System.Windows.Ink.DrawingAttributes.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Ink.DrawingAttributes.GetPropertyData(System.Guid)
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: GetPropertyData(Guid)
  nameWithType: DrawingAttributes.GetPropertyData(Guid)
  fullName: System.Windows.Ink.DrawingAttributes.GetPropertyData(Guid)
- uid: System.Windows.Ink.DrawingAttributes.GetPropertyDataIds
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: GetPropertyDataIds()
  nameWithType: DrawingAttributes.GetPropertyDataIds()
  fullName: System.Windows.Ink.DrawingAttributes.GetPropertyDataIds()
- uid: System.Guid[]
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid[]
  spec.csharp:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Ink.DrawingAttributes.Height
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: Height
  nameWithType: DrawingAttributes.Height
  fullName: System.Windows.Ink.DrawingAttributes.Height
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Ink.DrawingAttributes.IgnorePressure
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: IgnorePressure
  nameWithType: DrawingAttributes.IgnorePressure
  fullName: System.Windows.Ink.DrawingAttributes.IgnorePressure
- uid: System.Windows.Ink.DrawingAttributes.IsHighlighter
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: IsHighlighter
  nameWithType: DrawingAttributes.IsHighlighter
  fullName: System.Windows.Ink.DrawingAttributes.IsHighlighter
- uid: System.Windows.Ink.DrawingAttributes.MaxHeight
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: MaxHeight
  nameWithType: DrawingAttributes.MaxHeight
  fullName: System.Windows.Ink.DrawingAttributes.MaxHeight
- uid: System.Windows.Ink.DrawingAttributes.MaxWidth
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: MaxWidth
  nameWithType: DrawingAttributes.MaxWidth
  fullName: System.Windows.Ink.DrawingAttributes.MaxWidth
- uid: System.Windows.Ink.DrawingAttributes.MinHeight
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: MinHeight
  nameWithType: DrawingAttributes.MinHeight
  fullName: System.Windows.Ink.DrawingAttributes.MinHeight
- uid: System.Windows.Ink.DrawingAttributes.MinWidth
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: MinWidth
  nameWithType: DrawingAttributes.MinWidth
  fullName: System.Windows.Ink.DrawingAttributes.MinWidth
- uid: System.Windows.Ink.DrawingAttributes.OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: OnAttributeChanged(PropertyDataChangedEventArgs)
  nameWithType: DrawingAttributes.OnAttributeChanged(PropertyDataChangedEventArgs)
  fullName: System.Windows.Ink.DrawingAttributes.OnAttributeChanged(PropertyDataChangedEventArgs)
- uid: System.Windows.Ink.PropertyDataChangedEventArgs
  parent: System.Windows.Ink
  isExternal: false
  name: PropertyDataChangedEventArgs
  nameWithType: PropertyDataChangedEventArgs
  fullName: System.Windows.Ink.PropertyDataChangedEventArgs
- uid: System.Windows.Ink.DrawingAttributes.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: OnPropertyChanged(PropertyChangedEventArgs)
  nameWithType: DrawingAttributes.OnPropertyChanged(PropertyChangedEventArgs)
  fullName: System.Windows.Ink.DrawingAttributes.OnPropertyChanged(PropertyChangedEventArgs)
- uid: System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: OnPropertyDataChanged(PropertyDataChangedEventArgs)
  nameWithType: DrawingAttributes.OnPropertyDataChanged(PropertyDataChangedEventArgs)
  fullName: System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(PropertyDataChangedEventArgs)
- uid: System.Windows.Ink.DrawingAttributes.op_Equality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: op_Equality(DrawingAttributes,DrawingAttributes)
  nameWithType: DrawingAttributes.op_Equality(DrawingAttributes,DrawingAttributes)
  fullName: System.Windows.Ink.DrawingAttributes.op_Equality(DrawingAttributes,DrawingAttributes)
- uid: System.Windows.Ink.DrawingAttributes.op_Inequality(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: op_Inequality(DrawingAttributes,DrawingAttributes)
  nameWithType: DrawingAttributes.op_Inequality(DrawingAttributes,DrawingAttributes)
  fullName: System.Windows.Ink.DrawingAttributes.op_Inequality(DrawingAttributes,DrawingAttributes)
- uid: System.Windows.Ink.DrawingAttributes.PropertyDataChanged
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: PropertyDataChanged
  nameWithType: DrawingAttributes.PropertyDataChanged
  fullName: System.Windows.Ink.DrawingAttributes.PropertyDataChanged
- uid: System.Windows.Ink.DrawingAttributes.RemovePropertyData(System.Guid)
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: RemovePropertyData(Guid)
  nameWithType: DrawingAttributes.RemovePropertyData(Guid)
  fullName: System.Windows.Ink.DrawingAttributes.RemovePropertyData(Guid)
- uid: System.Windows.Ink.DrawingAttributes.StylusTip
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: StylusTip
  nameWithType: DrawingAttributes.StylusTip
  fullName: System.Windows.Ink.DrawingAttributes.StylusTip
- uid: System.Windows.Ink.StylusTip
  parent: System.Windows.Ink
  isExternal: false
  name: StylusTip
  nameWithType: StylusTip
  fullName: System.Windows.Ink.StylusTip
- uid: System.Windows.Ink.DrawingAttributes.StylusTipTransform
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: StylusTipTransform
  nameWithType: DrawingAttributes.StylusTipTransform
  fullName: System.Windows.Ink.DrawingAttributes.StylusTipTransform
- uid: System.Windows.Media.Matrix
  parent: System.Windows.Media
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Windows.Media.Matrix
- uid: System.Windows.Ink.DrawingAttributes.Width
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: Width
  nameWithType: DrawingAttributes.Width
  fullName: System.Windows.Ink.DrawingAttributes.Width
- uid: System.Windows.Ink.DrawingAttributes.#ctor*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: DrawingAttributes
  nameWithType: DrawingAttributes.DrawingAttributes
- uid: System.Windows.Ink.DrawingAttributes.AddPropertyData*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: AddPropertyData
  nameWithType: DrawingAttributes.AddPropertyData
- uid: System.Windows.Ink.DrawingAttributes.Clone*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: Clone
  nameWithType: DrawingAttributes.Clone
- uid: System.Windows.Ink.DrawingAttributes.Color*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: Color
  nameWithType: DrawingAttributes.Color
- uid: System.Windows.Ink.DrawingAttributes.ContainsPropertyData*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: ContainsPropertyData
  nameWithType: DrawingAttributes.ContainsPropertyData
- uid: System.Windows.Ink.DrawingAttributes.Equals*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: Equals
  nameWithType: DrawingAttributes.Equals
- uid: System.Windows.Ink.DrawingAttributes.FitToCurve*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: FitToCurve
  nameWithType: DrawingAttributes.FitToCurve
- uid: System.Windows.Ink.DrawingAttributes.GetHashCode*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: GetHashCode
  nameWithType: DrawingAttributes.GetHashCode
- uid: System.Windows.Ink.DrawingAttributes.GetPropertyData*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: GetPropertyData
  nameWithType: DrawingAttributes.GetPropertyData
- uid: System.Windows.Ink.DrawingAttributes.GetPropertyDataIds*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: GetPropertyDataIds
  nameWithType: DrawingAttributes.GetPropertyDataIds
- uid: System.Windows.Ink.DrawingAttributes.Height*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: Height
  nameWithType: DrawingAttributes.Height
- uid: System.Windows.Ink.DrawingAttributes.IgnorePressure*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: IgnorePressure
  nameWithType: DrawingAttributes.IgnorePressure
- uid: System.Windows.Ink.DrawingAttributes.IsHighlighter*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: IsHighlighter
  nameWithType: DrawingAttributes.IsHighlighter
- uid: System.Windows.Ink.DrawingAttributes.OnAttributeChanged*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: OnAttributeChanged
  nameWithType: DrawingAttributes.OnAttributeChanged
- uid: System.Windows.Ink.DrawingAttributes.OnPropertyChanged*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: OnPropertyChanged
  nameWithType: DrawingAttributes.OnPropertyChanged
- uid: System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: OnPropertyDataChanged
  nameWithType: DrawingAttributes.OnPropertyDataChanged
- uid: System.Windows.Ink.DrawingAttributes.op_Equality*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: op_Equality
  nameWithType: DrawingAttributes.op_Equality
- uid: System.Windows.Ink.DrawingAttributes.op_Inequality*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: op_Inequality
  nameWithType: DrawingAttributes.op_Inequality
- uid: System.Windows.Ink.DrawingAttributes.RemovePropertyData*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: RemovePropertyData
  nameWithType: DrawingAttributes.RemovePropertyData
- uid: System.Windows.Ink.DrawingAttributes.StylusTip*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: StylusTip
  nameWithType: DrawingAttributes.StylusTip
- uid: System.Windows.Ink.DrawingAttributes.StylusTipTransform*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: StylusTipTransform
  nameWithType: DrawingAttributes.StylusTipTransform
- uid: System.Windows.Ink.DrawingAttributes.Width*
  parent: System.Windows.Ink.DrawingAttributes
  isExternal: false
  name: Width
  nameWithType: DrawingAttributes.Width
