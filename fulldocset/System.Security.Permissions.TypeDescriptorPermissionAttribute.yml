### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.TypeDescriptorPermissionAttribute
  id: TypeDescriptorPermissionAttribute
  children:
  - System.Security.Permissions.TypeDescriptorPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission
  - System.Security.Permissions.TypeDescriptorPermissionAttribute.Flags
  - System.Security.Permissions.TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess
  langs:
  - csharp
  name: TypeDescriptorPermissionAttribute
  nameWithType: TypeDescriptorPermissionAttribute
  fullName: System.Security.Permissions.TypeDescriptorPermissionAttribute
  type: Class
  summary: "Determina i flag di autorizzazione che si applicano a un <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      public sealed class TypeDescriptorPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.TypeDescriptorPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.TypeDescriptorPermissionAttribute
  langs:
  - csharp
  name: TypeDescriptorPermissionAttribute(SecurityAction)
  nameWithType: TypeDescriptorPermissionAttribute.TypeDescriptorPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.TypeDescriptorPermissionAttribute.TypeDescriptorPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Permissions.TypeDescriptorPermissionAttribute&quot;> </xref> classe con l&quot;oggetto specificato <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref>."
  syntax:
    content: public TypeDescriptorPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "Uno del <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> valori."
  overload: System.Security.Permissions.TypeDescriptorPermissionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.TypeDescriptorPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: TypeDescriptorPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Quando sottoposto a override in una classe derivata, crea un oggetto di autorizzazione che può essere serializzato in formato binario e archiviato definitivamente con il <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> nei metadati dell&quot;assembly."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Un oggetto autorizzazioni serializzabile."
  overload: System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.TypeDescriptorPermissionAttribute.Flags
  id: Flags
  parent: System.Security.Permissions.TypeDescriptorPermissionAttribute
  langs:
  - csharp
  name: Flags
  nameWithType: TypeDescriptorPermissionAttribute.Flags
  fullName: System.Security.Permissions.TypeDescriptorPermissionAttribute.Flags
  type: Property
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Ottiene o imposta il <xref href=&quot;System.Security.Permissions.TypeDescriptorPermissionFlags&quot;> </xref> per il <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>."
  syntax:
    content: public System.Security.Permissions.TypeDescriptorPermissionFlags Flags { get; set; }
    return:
      type: System.Security.Permissions.TypeDescriptorPermissionFlags
      description: "The <xref href=&quot;System.Security.Permissions.TypeDescriptorPermissionFlags&quot;></xref> for the <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref>."
  overload: System.Security.Permissions.TypeDescriptorPermissionAttribute.Flags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess
  id: RestrictedRegistrationAccess
  parent: System.Security.Permissions.TypeDescriptorPermissionAttribute
  langs:
  - csharp
  name: RestrictedRegistrationAccess
  nameWithType: TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess
  fullName: System.Security.Permissions.TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess
  type: Property
  assemblies:
  - System
  namespace: System.Security.Permissions
  summary: "Ottiene o imposta un valore che indica se il descrittore di tipo è accessibile con attendibilità parziale."
  syntax:
    content: public bool RestrictedRegistrationAccess { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il descrittore di tipo sono accessibili da di attendibilità parziale. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Security.Permissions.TypeDescriptorPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.TypeDescriptorPermissionAttribute
  isExternal: false
  name: TypeDescriptorPermissionAttribute(SecurityAction)
  nameWithType: TypeDescriptorPermissionAttribute.TypeDescriptorPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.TypeDescriptorPermissionAttribute.TypeDescriptorPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.TypeDescriptorPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: TypeDescriptorPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.TypeDescriptorPermissionAttribute.Flags
  parent: System.Security.Permissions.TypeDescriptorPermissionAttribute
  isExternal: false
  name: Flags
  nameWithType: TypeDescriptorPermissionAttribute.Flags
  fullName: System.Security.Permissions.TypeDescriptorPermissionAttribute.Flags
- uid: System.Security.Permissions.TypeDescriptorPermissionFlags
  parent: System.Security.Permissions
  isExternal: false
  name: TypeDescriptorPermissionFlags
  nameWithType: TypeDescriptorPermissionFlags
  fullName: System.Security.Permissions.TypeDescriptorPermissionFlags
- uid: System.Security.Permissions.TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess
  parent: System.Security.Permissions.TypeDescriptorPermissionAttribute
  isExternal: false
  name: RestrictedRegistrationAccess
  nameWithType: TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess
  fullName: System.Security.Permissions.TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.TypeDescriptorPermissionAttribute.#ctor*
  parent: System.Security.Permissions.TypeDescriptorPermissionAttribute
  isExternal: false
  name: TypeDescriptorPermissionAttribute
  nameWithType: TypeDescriptorPermissionAttribute.TypeDescriptorPermissionAttribute
- uid: System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.TypeDescriptorPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: TypeDescriptorPermissionAttribute.CreatePermission
- uid: System.Security.Permissions.TypeDescriptorPermissionAttribute.Flags*
  parent: System.Security.Permissions.TypeDescriptorPermissionAttribute
  isExternal: false
  name: Flags
  nameWithType: TypeDescriptorPermissionAttribute.Flags
- uid: System.Security.Permissions.TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess*
  parent: System.Security.Permissions.TypeDescriptorPermissionAttribute
  isExternal: false
  name: RestrictedRegistrationAccess
  nameWithType: TypeDescriptorPermissionAttribute.RestrictedRegistrationAccess
