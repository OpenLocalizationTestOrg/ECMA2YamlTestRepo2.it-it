### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  id: SqlUserDefinedTypeAttribute
  children:
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
  - Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
  langs:
  - csharp
  name: SqlUserDefinedTypeAttribute
  nameWithType: SqlUserDefinedTypeAttribute
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  type: Class
  summary: "Consente di contrassegnare una definizione di tipo in un assembly come un tipo definito dall&quot;utente (UDT) in SQL Server. Le proprietà dell&quot;attributo riflettono le caratteristiche fisiche utilizzate quando il tipo viene registrato con SQL Server. Questa classe non può essere ereditata."
  remarks: "SQL Server crea un tipo definito dall&quot;utente associato alla definizione del tipo che dispone dell&quot;attributo personalizzato SqlUserDefinedTypeAttribute. Ogni tipo definito dall&quot;utente deve essere annotato con l&quot;attributo. Vedere [tipi CLR definiti dall&quot;utente](http://go.microsoft.com/fwlink/?LinkId=128028) per ulteriori informazioni sui tipi definiti dall&quot;utente, incluso un esempio di un tipo definito dall&quot;utente."
  example:
  - "The following example shows the `UserDefinedType` attribute of the Point UDT.  The UDT is byte-ordered, is named \"Point\", has a validation method named \"ValidatePoint\", and uses the native serialization format.  \n  \n [!code-cs[DataWorks SqlUserDefinedTypeAttribute Example#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_4_1.cs)]\n [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_4_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=true)]

      public sealed class SqlUserDefinedTypeAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)
  id: '#ctor(Microsoft.SqlServer.Server.Format)'
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: SqlUserDefinedTypeAttribute(Format)
  nameWithType: SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)
  type: Constructor
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Attributo obbligatorio per un tipo definito dall&quot;utente (UDT), utilizzato per confermare che il tipo specificato è un tipo definito dall&quot;utente e per indicare il formato di archiviazione dell&quot;UDT."
  remarks: "Nell&quot;esempio seguente specifica che il `Format` del tipo definito dall&quot;utente è `SerializedDataWithMetadata`e`MaxByteSize` 8000 byte."
  example:
  - >-
    [!code-cs[VbRaddataSQLObjects#12](~/add/codesnippet/csharp/CS/Type1.cs#12)]
     [!code-vb[VbRaddataSQLObjects#12](~/add/codesnippet/visualbasic/VB/Type1.vb#12)]
  syntax:
    content: public SqlUserDefinedTypeAttribute (Microsoft.SqlServer.Server.Format format);
    parameters:
    - id: format
      type: Microsoft.SqlServer.Server.Format
      description: "Uno del <xref href=&quot;Microsoft.SqlServer.Server.Format&quot;> </xref> valori che rappresentano il formato di serializzazione del tipo."
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
  id: Format
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: Format
  nameWithType: SqlUserDefinedTypeAttribute.Format
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Il formato di serializzazione come un <xref href=&quot;Microsoft.SqlServer.Server.Format&quot;> </xref>."
  syntax:
    content: public Microsoft.SqlServer.Server.Format Format { get; }
    return:
      type: Microsoft.SqlServer.Server.Format
      description: "Oggetto <xref href=&quot;Microsoft.SqlServer.Server.Format&quot;> </xref> valore che rappresenta il formato di serializzazione."
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
  id: IsByteOrdered
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: IsByteOrdered
  nameWithType: SqlUserDefinedTypeAttribute.IsByteOrdered
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Indica se il tipo definito dall&quot;utente è byte ordinati."
  remarks: "When set to `true`, the IsByteOrdered property in effect guarantees that the serialized binary data can be used for semantic ordering of the information. Thus, each instance of a byte-ordered UDT object can only have one serialized representation. When a comparison operation is performed in SQL Server on the serialized bytes, its results should be the same as if the same comparison operation had taken place in managed code..  \n  \n The following features are supported when IsByteOrdered is set to `true`:  \n  \n-   The ability to create indexes on columns of this type.  \n  \n-   The ability to create primary and foreign keys as well as CHECK and UNIQUE constraints on columns of this type.  \n  \n-   The ability to use Transact-SQL ORDER BY, GROUP BY, and PARTITION BY clauses. In these cases, the binary representation of the type is used to determine the order.  \n  \n-   The ability to use comparison operators in Transact-SQL statements.  \n  \n-   The ability to persist computed columns of this type.  \n  \n Note that both the `Native` and `UserDefined` serialization formats support the following comparison operators when IsByteOrdered is set to `true`:  \n  \n-   Equal to (=)  \n  \n-   Not equal to (!=)  \n  \n-   Greater than (>)  \n  \n-   Less than (\\<)  \n  \n-   Greater than or equal to (>=)  \n  \n-   Less than or equal to (<=)"
  syntax:
    content: public bool IsByteOrdered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il tipo definito dall&quot;utente è ordinato; byte in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
  id: IsFixedLength
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: IsFixedLength
  nameWithType: SqlUserDefinedTypeAttribute.IsFixedLength
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Indica se tutte le istanze di questo tipo definito dall&quot;utente sono della stessa lunghezza."
  remarks: "Se impostato su `true`, tutte le istanze di tipi definiti dall&quot;utente corrispondente al tipo common language runtime (CLR) devono avere una lunghezza in byte esattamente uguale a <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>.</xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> Questo attributo è rilevante solo per tipi definiti dall&quot;utente con `UserDefined` serializzazione <xref:Microsoft.SqlServer.Server.Format>.</xref:Microsoft.SqlServer.Server.Format>"
  syntax:
    content: public bool IsFixedLength { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se tutte le istanze di questo tipo sono la stessa lunghezza. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
  id: MaxByteSize
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: MaxByteSize
  nameWithType: SqlUserDefinedTypeAttribute.MaxByteSize
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Le dimensioni massime dell&quot;istanza, in byte."
  remarks: "È necessario specificare la proprietà MaxByteSize con il `UserDefined` serializzazione <xref:Microsoft.SqlServer.Server.Format>.</xref:Microsoft.SqlServer.Server.Format>       Quando ci si connette a SQL Server 2005 o versioni precedenti, MaxByteSize deve essere compreso tra 1 e 8000.       Quando ci si connette a SQL Server 2008 o versione successiva, impostare proprietà MaxByteSize compreso tra 1 e 8000, per un tipo le cui istanze sono sempre pari a 8.000 byte o meno. Per i tipi che possono avere istanze superiori a 8000, specificare -1.       Per un tipo definito dall&quot;utente con serializzazione definita dall&quot;utente specificata, MaxByteSize indica le dimensioni totali dell&quot;UDT in formato serializzato come definito dall&quot;utente. Si consideri un tipo definito dall&quot;utente con una proprietà di una stringa di 10 caratteri (<xref:System.Char>).</xref:System.Char> Quando il tipo definito dall&quot;utente viene serializzato utilizzando un <xref:System.IO.BinaryWriter>, la dimensione totale della stringa serializzata è 22 byte: 2 byte per carattere Unicode UTF-16, moltiplicato per il numero massimo di caratteri, più 2 byte di controllo di overhead generato dalla serializzazione di un flusso binario.</xref:System.IO.BinaryWriter> Quando si determina il valore della proprietà MaxByteSize, deve essere considerata la dimensione totale dell&quot;UDT serializzato: la dimensione dei dati serializzati in formato binario più l&quot;overhead generato dalla serializzazione.       Questa proprietà non deve essere utilizzata con `Native` serializzazione <xref:Microsoft.SqlServer.Server.Format>.</xref:Microsoft.SqlServer.Server.Format>"
  syntax:
    content: public int MaxByteSize { get; set; }
    return:
      type: System.Int32
      description: "Un <xref:System.Int32>valore che rappresenta le dimensioni massime dell&quot;istanza.</xref:System.Int32>"
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
  id: Name
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: Name
  nameWithType: SqlUserDefinedTypeAttribute.Name
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Il nome del Server SQL del tipo definito dall&quot;utente."
  remarks: "La proprietà nome non viene utilizzata all&quot;interno di SQL Server, ma viene utilizzata dall&quot;ambiente di sviluppo integrato (IDE) di Microsoft Visual Studio .NET."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>valore che rappresenta il nome del Server SQL del tipo definito dall&quot;utente.</xref:System.String>"
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
  id: ValidationMethodName
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  langs:
  - csharp
  name: ValidationMethodName
  nameWithType: SqlUserDefinedTypeAttribute.ValidationMethodName
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Il nome del metodo utilizzato per convalidare le istanze del tipo definito dall&quot;utente."
  remarks: "Il metodo specificato da questo attributo consente di convalidare istanze del tipo in questione quando il tipo definito dall&quot;utente è stato deserializzato da un valore binario che non è attendibile."
  syntax:
    content: public string ValidationMethodName { get; set; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>che rappresenta il nome del metodo utilizzato per convalidare le istanze del tipo definito dall&quot;utente.</xref:System.String>"
  overload: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: SqlUserDefinedTypeAttribute(Format)
  nameWithType: SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute(Format)
- uid: Microsoft.SqlServer.Server.Format
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: Format
  nameWithType: Format
  fullName: Microsoft.SqlServer.Server.Format
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: Format
  nameWithType: SqlUserDefinedTypeAttribute.Format
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: IsByteOrdered
  nameWithType: SqlUserDefinedTypeAttribute.IsByteOrdered
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: IsFixedLength
  nameWithType: SqlUserDefinedTypeAttribute.IsFixedLength
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: MaxByteSize
  nameWithType: SqlUserDefinedTypeAttribute.MaxByteSize
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: Name
  nameWithType: SqlUserDefinedTypeAttribute.Name
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: ValidationMethodName
  nameWithType: SqlUserDefinedTypeAttribute.ValidationMethodName
  fullName: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: SqlUserDefinedTypeAttribute
  nameWithType: SqlUserDefinedTypeAttribute.SqlUserDefinedTypeAttribute
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: Format
  nameWithType: SqlUserDefinedTypeAttribute.Format
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: IsByteOrdered
  nameWithType: SqlUserDefinedTypeAttribute.IsByteOrdered
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: IsFixedLength
  nameWithType: SqlUserDefinedTypeAttribute.IsFixedLength
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: MaxByteSize
  nameWithType: SqlUserDefinedTypeAttribute.MaxByteSize
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: Name
  nameWithType: SqlUserDefinedTypeAttribute.Name
- uid: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName*
  parent: Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute
  isExternal: false
  name: ValidationMethodName
  nameWithType: SqlUserDefinedTypeAttribute.ValidationMethodName
