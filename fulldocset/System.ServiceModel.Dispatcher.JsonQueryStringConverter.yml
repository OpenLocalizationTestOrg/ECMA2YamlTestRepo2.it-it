### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  id: JsonQueryStringConverter
  children:
  - System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor
  - System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)
  - System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)
  - System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)
  langs:
  - csharp
  name: JsonQueryStringConverter
  nameWithType: JsonQueryStringConverter
  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  type: Class
  summary: "Questa classe converte un valore di parametro in e da un oggetto JSON (JavaScript Notation)."
  remarks: "In una stringa di query JSON all&quot;interno di un URL, è possibile specificare parametri. Questa classe controlla la modalità di mapping dei parametri di stringa di query JSON in e dai parametri dell&quot;operazione del servizio quando il <xref:System.ServiceModel.Description.WebScriptEnablingBehavior>viene utilizzato per elaborare le richieste HTTP dai client AJAX ASP.NET basati su browser.</xref:System.ServiceModel.Description.WebScriptEnablingBehavior>       Questa classe viene utilizzata internamente dal [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] <xref:System.ServiceModel.Description.WebScriptEnablingBehavior>classe per gli endpoint configurati per accettare le richieste HTTP GET/POST con parametri codificati nella stringa di query dell&quot;URI.</xref:System.ServiceModel.Description.WebScriptEnablingBehavior> Questa classe viene utilizzata per la conversione tra oggetti CLR e i valori dei parametri di richiesta di operazione singole nella stringa di query dell&quot;URI. A differenza di tipo di base, questa classe supporta i valori dei tipi sia primitivi che complessi.       JsonQueryStringConverter deriva da <xref:System.ServiceModel.Dispatcher.QueryStringConverter>e supporta i tipi seguenti:- <xref:System.Byte>- <xref:System.SByte>- <xref:System.Int16>- <xref:System.Int32>- <xref:System.Int64>- <xref:System.UInt16>- <xref:System.UInt32>- <xref:System.UInt64>- <xref:System.Single>- <xref:System.Double>- <xref:System.Char>- <xref:System.Decimal>- <xref:System.Boolean>- <xref:System.String>- <xref:System.DateTime>- <xref:System.TimeSpan>- <xref:System.Guid>- un <xref:System.Array>di tipo <xref:System.Byte>- <xref:System.Uri>- <xref:System.Object>a differenza del relativo tipo di base, il convertitore può gestire qualsiasi tipo aderente al modello di contratto dati.</xref:System.Object> </xref:System.Uri> </xref:System.Byte> </xref:System.Array> </xref:System.Guid> </xref:System.TimeSpan> </xref:System.DateTime> </xref:System.String> </xref:System.Boolean> </xref:System.Decimal> </xref:System.Char> </xref:System.Double> </xref:System.Single> </xref:System.UInt64> </xref:System.UInt32> </xref:System.UInt16> </xref:System.Int64> </xref:System.Int32> </xref:System.Int16> </xref:System.SByte> </xref:System.Byte> </xref:System.ServiceModel.Dispatcher.QueryStringConverter> Il convertitore esegue l&quot;override <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29>in modo che ogni parametro venga serializzato in JSON utilizzando il valore predefinito <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer>e un Writer XML JSON configurati per utilizzare la codifica UTF-8.</xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> </xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> `null`i parametri vengono restituiti come `null`."
  syntax:
    content: 'public class JsonQueryStringConverter : System.ServiceModel.Dispatcher.QueryStringConverter'
  inheritance:
  - System.Object
  - System.ServiceModel.Dispatcher.QueryStringConverter
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  langs:
  - csharp
  name: JsonQueryStringConverter()
  nameWithType: JsonQueryStringConverter.JsonQueryStringConverter()
  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter.JsonQueryStringConverter()
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Dispatcher
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Dispatcher.JsonQueryStringConverter&quot;> </xref> classe."
  syntax:
    content: public JsonQueryStringConverter ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)
  id: CanConvert(System.Type)
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  langs:
  - csharp
  name: CanConvert(Type)
  nameWithType: JsonQueryStringConverter.CanConvert(Type)
  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(Type)
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Dispatcher
  summary: "Ottiene un valore che indica se un tipo Common Language Runtime (CLR) specificato è un tipo conosciuto che può essere serializzato e deserializzato."
  remarks: "Verifica se un tipo CLR può essere utilizzato in una stringa di query JSON. I tipi CLR che possono essere usati in una tale stringa sono solo quelli che sono supportate da <xref:System.Runtime.Serialization.DataContractSerializer>.</xref:System.Runtime.Serialization.DataContractSerializer>"
  syntax:
    content: public override bool CanConvert (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Il <xref:System.Type>per verificare.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il tipo può essere serializzato; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)
  id: ConvertStringToValue(System.String,System.Type)
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  langs:
  - csharp
  name: ConvertStringToValue(String,Type)
  nameWithType: JsonQueryStringConverter.ConvertStringToValue(String,Type)
  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(String,Type)
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Dispatcher
  summary: "Deserializza un parametro di stringa di query JavaScript Object Notation (JSON) in un tipo Common Language Runtime (CLR) specificato."
  syntax:
    content: public override object ConvertStringToValue (string parameter, Type parameterType);
    parameters:
    - id: parameter
      type: System.String
      description: "Il formato JSON del valore del parametro."
    - id: parameterType
      type: System.Type
      description: "Il <xref:System.Type>per deserializzare il parametro.</xref:System.Type>"
    return:
      type: System.Object
      description: "Un&quot;istanza del tipo CLR a cui è stato convertito il valore del parametro."
  overload: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)
  id: ConvertValueToString(System.Object,System.Type)
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  langs:
  - csharp
  name: ConvertValueToString(Object,Type)
  nameWithType: JsonQueryStringConverter.ConvertValueToString(Object,Type)
  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(Object,Type)
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Dispatcher
  summary: "Serializza un tipo di parametro di Common Language Runtime (CLR) in una rappresentazione JavaScript Object Notation (JSON)."
  remarks: "Il convertitore esegue l&quot;override <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29>in modo che ogni parametro venga serializzato in JSON utilizzando il valore predefinito <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer>e un Writer XML JSON configurati per utilizzare la codifica UTF-8.</xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> </xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> A differenza del relativo tipo di base, il convertitore può gestire qualsiasi tipo aderente al modello di contratto dati."
  example:
  - "Consider the following operation.  \n  \n```  \n[WebGet]  \n[OperationContract] public int GetOptionQuote(string ticker, DateTime dte, Option opt);  \n```  \n  \n This operation produces a URL that is a URL-encoded version of the following.  \n  \n```  \nhttp://localhost/quote.svc/GetOptionQuote?ticker=”MSFT”&dte=”\\/Date(50067823)\\/”&opt={“type”:”call”,”strikePrice”:”35”}  \n```"
  syntax:
    content: public override string ConvertValueToString (object parameter, Type parameterType);
    parameters:
    - id: parameter
      type: System.Object
      description: "Il valore del parametro da convertire."
    - id: parameterType
      type: System.Type
      description: "Il <xref:System.Type>del parametro da serializzare.</xref:System.Type>"
    return:
      type: System.String
      description: "JSON query stringa parametro serializzazione del tipo CLR. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>viene restituito se il parametro è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.QueryStringConverter
  isExternal: false
  name: System.ServiceModel.Dispatcher.QueryStringConverter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  isExternal: false
  name: JsonQueryStringConverter()
  nameWithType: JsonQueryStringConverter.JsonQueryStringConverter()
  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter.JsonQueryStringConverter()
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  isExternal: false
  name: CanConvert(Type)
  nameWithType: JsonQueryStringConverter.CanConvert(Type)
  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  isExternal: false
  name: ConvertStringToValue(String,Type)
  nameWithType: JsonQueryStringConverter.ConvertStringToValue(String,Type)
  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(String,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  isExternal: false
  name: ConvertValueToString(Object,Type)
  nameWithType: JsonQueryStringConverter.ConvertValueToString(Object,Type)
  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(Object,Type)
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor*
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  isExternal: false
  name: JsonQueryStringConverter
  nameWithType: JsonQueryStringConverter.JsonQueryStringConverter
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert*
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  isExternal: false
  name: CanConvert
  nameWithType: JsonQueryStringConverter.CanConvert
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue*
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  isExternal: false
  name: ConvertStringToValue
  nameWithType: JsonQueryStringConverter.ConvertStringToValue
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString*
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  isExternal: false
  name: ConvertValueToString
  nameWithType: JsonQueryStringConverter.ConvertValueToString
