### YamlMime:ManagedReference
items:
- uid: System.IO.Ports.SerialPort
  id: SerialPort
  children:
  - System.IO.Ports.SerialPort.#ctor
  - System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)
  - System.IO.Ports.SerialPort.#ctor(System.String)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  - System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  - System.IO.Ports.SerialPort.BaseStream
  - System.IO.Ports.SerialPort.BaudRate
  - System.IO.Ports.SerialPort.BreakState
  - System.IO.Ports.SerialPort.BytesToRead
  - System.IO.Ports.SerialPort.BytesToWrite
  - System.IO.Ports.SerialPort.CDHolding
  - System.IO.Ports.SerialPort.Close
  - System.IO.Ports.SerialPort.CtsHolding
  - System.IO.Ports.SerialPort.DataBits
  - System.IO.Ports.SerialPort.DataReceived
  - System.IO.Ports.SerialPort.DiscardInBuffer
  - System.IO.Ports.SerialPort.DiscardNull
  - System.IO.Ports.SerialPort.DiscardOutBuffer
  - System.IO.Ports.SerialPort.Dispose(System.Boolean)
  - System.IO.Ports.SerialPort.DsrHolding
  - System.IO.Ports.SerialPort.DtrEnable
  - System.IO.Ports.SerialPort.Encoding
  - System.IO.Ports.SerialPort.ErrorReceived
  - System.IO.Ports.SerialPort.GetPortNames
  - System.IO.Ports.SerialPort.Handshake
  - System.IO.Ports.SerialPort.InfiniteTimeout
  - System.IO.Ports.SerialPort.IsOpen
  - System.IO.Ports.SerialPort.NewLine
  - System.IO.Ports.SerialPort.Open
  - System.IO.Ports.SerialPort.Parity
  - System.IO.Ports.SerialPort.ParityReplace
  - System.IO.Ports.SerialPort.PinChanged
  - System.IO.Ports.SerialPort.PortName
  - System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.ReadBufferSize
  - System.IO.Ports.SerialPort.ReadByte
  - System.IO.Ports.SerialPort.ReadChar
  - System.IO.Ports.SerialPort.ReadExisting
  - System.IO.Ports.SerialPort.ReadLine
  - System.IO.Ports.SerialPort.ReadTimeout
  - System.IO.Ports.SerialPort.ReadTo(System.String)
  - System.IO.Ports.SerialPort.ReceivedBytesThreshold
  - System.IO.Ports.SerialPort.RtsEnable
  - System.IO.Ports.SerialPort.StopBits
  - System.IO.Ports.SerialPort.Write(System.String)
  - System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)
  - System.IO.Ports.SerialPort.WriteBufferSize
  - System.IO.Ports.SerialPort.WriteLine(System.String)
  - System.IO.Ports.SerialPort.WriteTimeout
  langs:
  - csharp
  name: SerialPort
  nameWithType: SerialPort
  fullName: System.IO.Ports.SerialPort
  type: Class
  summary: "Rappresenta una risorsa di porta seriale.       Per esaminare il codice sorgente di .NET Framework per questo tipo, vedere il [origine riferimento](http://referencesource.microsoft.com/#System/sys/system/io/ports/SerialPort.cs#ae0a3218c6c9f7fe)."
  remarks: "> [!NOTE]> Per visualizzare il codice sorgente di .NET Framework per questo tipo, vedere il [origine riferimento](http://referencesource.microsoft.com/#System/sys/system/io/ports/SerialPort.cs#ae0a3218c6c9f7fe). È possibile esplorare il codice sorgente online, scaricare i riferimenti per la visualizzazione offline e scorrere le origini (inclusi aggiornamenti e patch) durante l&quot;esecuzione del debug. vedere [istruzioni](http://referencesource.microsoft.com/).       Utilizzare questa classe per controllare una risorsa del file della porta seriale. Questa classe fornisce i/o sincrono e basato su eventi, accesso agli stati di blocco e interruzione e l&quot;accesso alle proprietà del driver seriale. Inoltre, la funzionalità di questa classe può essere incluso in un interno <xref:System.IO.Stream>oggetto, accessibile tramite il <xref:System.IO.Ports.SerialPort.BaseStream%2A>, proprietà e passato alle classi che eseguono il wrapping o utilizzano i flussi.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Stream>       La classe SerialPort supporta le codifiche seguenti: <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF32Encoding>e qualsiasi codifica definita in mscorlib. dll in cui la tabella codici è minore di 50000 o è 54936.</xref:System.Text.UTF32Encoding> </xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF8Encoding> </xref:System.Text.ASCIIEncoding>  È possibile utilizzare codifiche alternative, ma è necessario utilizzare il <xref:System.IO.Ports.SerialPort.ReadByte%2A>o <xref:System.IO.Ports.SerialPort.Write%2A>metodo ed eseguire manualmente la codifica.</xref:System.IO.Ports.SerialPort.Write%2A> </xref:System.IO.Ports.SerialPort.ReadByte%2A>       Utilizzare il <xref:System.IO.Ports.SerialPort.GetPortNames%2A>metodo per recuperare le porte valide per il computer corrente.</xref:System.IO.Ports.SerialPort.GetPortNames%2A>       Se un oggetto SerialPort viene bloccato durante un&quot;operazione di lettura, non interrompere il thread. In alternativa, chiudere la base del flusso o eliminare l&quot;oggetto SerialPort."
  example:
  - "The following code example demonstrates the use of the SerialPort class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. Both computers must be executing the program to achieve full functionality of this example.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#10](~/add/codesnippet/cpp/t-system.io.ports.serial_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#10](~/add/codesnippet/csharp/t-system.io.ports.serial_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#10](~/add/codesnippet/visualbasic/t-system.io.ports.serial_1.vb)]"
  syntax:
    content: >-
      [System.Diagnostics.MonitoringDescription("SerialPortDesc")]

      public class SerialPort : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor
  id: '#ctor'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort()
  nameWithType: SerialPort.SerialPort()
  fullName: System.IO.Ports.SerialPort.SerialPort()
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> classe."
  remarks: "Questo costruttore utilizza valori predefiniti delle proprietà quando è stata specificata alcuna. Ad esempio, il <xref:System.IO.Ports.SerialPort.DataBits%2A>proprietà valore predefinito è 8, il <xref:System.IO.Ports.SerialPort.Parity%2A>proprietà viene impostata la `None` valore di enumerazione, il <xref:System.IO.Ports.SerialPort.StopBits%2A>proprietà valore predefinito è 1 e il nome predefinito della porta di COM1.</xref:System.IO.Ports.SerialPort.StopBits%2A> </xref:System.IO.Ports.SerialPort.Parity%2A> </xref:System.IO.Ports.SerialPort.DataBits%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_4_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_4_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_4_1.vb)]"
  syntax:
    content: public SerialPort ();
    parameters: []
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)
  id: '#ctor(System.ComponentModel.IContainer)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(IContainer)
  nameWithType: SerialPort.SerialPort(IContainer)
  fullName: System.IO.Ports.SerialPort.SerialPort(IContainer)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> classe utilizzando l&quot;oggetto specificato <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> oggetto."
  remarks: "Questo costruttore utilizza valori predefiniti delle proprietà quando è stata specificata alcuna. Ad esempio, il <xref:System.IO.Ports.SerialPort.DataBits%2A>proprietà valore predefinito è 8, il <xref:System.IO.Ports.SerialPort.Parity%2A>proprietà viene impostata la `None` valore di enumerazione, il <xref:System.IO.Ports.SerialPort.StopBits%2A>proprietà valore predefinito è 1 e il nome predefinito della porta di COM1.</xref:System.IO.Ports.SerialPort.StopBits%2A> </xref:System.IO.Ports.SerialPort.Parity%2A> </xref:System.IO.Ports.SerialPort.DataBits%2A>"
  syntax:
    content: public SerialPort (System.ComponentModel.IContainer container);
    parameters:
    - id: container
      type: System.ComponentModel.IContainer
      description: "Un&quot;interfaccia a un contenitore."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Impossibile trovare o aprire la porta specificata."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String)
  nameWithType: SerialPort.SerialPort(String)
  fullName: System.IO.Ports.SerialPort.SerialPort(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> classe utilizzando il nome della porta specificato."
  remarks: "Utilizzare questo costruttore per creare una nuova istanza di <xref:System.IO.Ports.SerialPort>classe quando si desidera specificare il nome della porta.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName);
    parameters:
    - id: portName
      type: System.String
      description: "La porta da utilizzare (ad esempio, COM1)."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Impossibile trovare o aprire la porta specificata."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> classe utilizzando il nome e la velocità in baud della porta specificato velocità."
  remarks: "Utilizzare questo costruttore per creare una nuova istanza di <xref:System.IO.Ports.SerialPort>classe quando si desidera specificare il nome della porta e velocità in baud.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate);
    parameters:
    - id: portName
      type: System.String
      description: "La porta da utilizzare (ad esempio, COM1)."
    - id: baudRate
      type: System.Int32
      description: "Velocità in baud."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Impossibile trovare o aprire la porta specificata."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)
  id: '#ctor(System.String,System.Int32,System.IO.Ports.Parity)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32,Parity)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> classe utilizzando il nome della porta specificato, la velocità in baud e il bit di parità."
  remarks: "Utilizzare questo costruttore per creare una nuova istanza di <xref:System.IO.Ports.SerialPort>classe quando si desidera specificare il nome della porta, la velocità in baud e il bit di parità.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);
    parameters:
    - id: portName
      type: System.String
      description: "La porta da utilizzare (ad esempio, COM1)."
    - id: baudRate
      type: System.Int32
      description: "Velocità in baud."
    - id: parity
      type: System.IO.Ports.Parity
      description: "Uno del <xref:System.IO.Ports.SerialPort.Parity*>valori.</xref:System.IO.Ports.SerialPort.Parity*>"
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Impossibile trovare o aprire la porta specificata."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  id: '#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32,Parity,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> classe utilizzando il nome della porta specificato, la velocità in baud, il bit di parità e i bit di dati."
  remarks: "Utilizzare questo costruttore per creare una nuova istanza di <xref:System.IO.Ports.SerialPort>classe quando si desidera specificare il nome della porta, la velocità in baud, il bit di parità e i bit di dati.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);
    parameters:
    - id: portName
      type: System.String
      description: "La porta da utilizzare (ad esempio, COM1)."
    - id: baudRate
      type: System.Int32
      description: "Velocità in baud."
    - id: parity
      type: System.IO.Ports.Parity
      description: "Uno del <xref:System.IO.Ports.SerialPort.Parity*>valori.</xref:System.IO.Ports.SerialPort.Parity*>"
    - id: dataBits
      type: System.Int32
      description: "Il valore di bit di dati."
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Impossibile trovare o aprire la porta specificata."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  id: '#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)'
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: SerialPort(String,Int32,Parity,Int32,StopBits)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
  type: Constructor
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> classe utilizzando il nome della porta specificato, la velocità in baud, il bit di parità, i bit di dati e il bit di stop."
  remarks: "Utilizzare questo costruttore per creare una nuova istanza di <xref:System.IO.Ports.SerialPort>classe quando si desidera specificare il nome della porta, la velocità in baud, il bit di parità, i bit di dati e il bit di stop.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);
    parameters:
    - id: portName
      type: System.String
      description: "La porta da utilizzare (ad esempio, COM1)."
    - id: baudRate
      type: System.Int32
      description: "Velocità in baud."
    - id: parity
      type: System.IO.Ports.Parity
      description: "Uno del <xref:System.IO.Ports.SerialPort.Parity*>valori.</xref:System.IO.Ports.SerialPort.Parity*>"
    - id: dataBits
      type: System.Int32
      description: "Il valore di bit di dati."
    - id: stopBits
      type: System.IO.Ports.StopBits
      description: "Uno del <xref:System.IO.Ports.SerialPort.StopBits*>valori.</xref:System.IO.Ports.SerialPort.StopBits*>"
  overload: System.IO.Ports.SerialPort.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Impossibile trovare o aprire la porta specificata."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BaseStream
  id: BaseStream
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BaseStream
  nameWithType: SerialPort.BaseStream
  fullName: System.IO.Ports.SerialPort.BaseStream
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene l&quot;oggetto sottostante <xref:System.IO.Stream>dell&quot;oggetto per un <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> oggetto.</xref:System.IO.Stream>"
  remarks: "Utilizzare questa proprietà per operazioni dei / o asincrone esplicite o per passare l&quot; <xref:System.IO.Ports.SerialPort>oggetto a una <xref:System.IO.Stream>classe wrapper, ad esempio <xref:System.IO.StreamWriter>.</xref:System.IO.StreamWriter> </xref:System.IO.Stream> </xref:System.IO.Ports.SerialPort>       Qualsiasi aprire restituisce BaseStream della porta seriale un oggetto che deriva dalla classe astratta <xref:System.IO.Stream>classe, implementa leggere e scrivere metodi mediante i prototipi ereditati dalla <xref:System.IO.Stream>classe: <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.BeginWrite%2A>, <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, <xref:System.IO.Stream.Write%2A>e <xref:System.IO.Stream.WriteByte%2A>.</xref:System.IO.Stream.WriteByte%2A> </xref:System.IO.Stream.Write%2A> </xref:System.IO.Stream.ReadByte%2A> </xref:System.IO.Stream.Read%2A> </xref:System.IO.Stream.BeginWrite%2A> </xref:System.IO.Stream.BeginRead%2A> </xref:System.IO.Stream> </xref:System.IO.Stream> Questi metodi possono essere utili quando si passa una risorsa seriale inclusa in una <xref:System.IO.Stream>classe wrapper</xref:System.IO.Stream>       A causa dell&quot;inaccessibilità il wrapping dell&quot;handle di file, il <xref:System.IO.Stream.Length%2A>e <xref:System.IO.Stream.Position%2A>non sono supportate le proprietà e <xref:System.IO.Stream.Seek%2A>e <xref:System.IO.Stream.SetLength%2A>metodi non sono supportati.</xref:System.IO.Stream.SetLength%2A> </xref:System.IO.Stream.Seek%2A> </xref:System.IO.Stream.Position%2A> </xref:System.IO.Stream.Length%2A>"
  syntax:
    content: public System.IO.Stream BaseStream { get; }
    return:
      type: System.IO.Stream
      description: "Oggetto <xref:System.IO.Stream>oggetto.</xref:System.IO.Stream>"
  overload: System.IO.Ports.SerialPort.BaseStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il flusso è chiuso. Ciò può verificarsi perché il <> </> *> (metodo) non è stato chiamato o <> </> *> metodo è stato chiamato."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il flusso è un&quot;applicazione .NET Compact Framework e chiamato uno dei metodi seguenti: <> </> *> <> </> *> <> </> *> <> </> *>.NET Compact Framework non supporta il modello asincrono con i flussi di base."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BaudRate
  id: BaudRate
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BaudRate
  nameWithType: SerialPort.BaudRate
  fullName: System.IO.Ports.SerialPort.BaudRate
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene o imposta la velocità in baud della porta seriale."
  remarks: "Velocità in baud deve essere supportata dal driver seriale dell&quot;utente. Il valore predefinito è 9600 bit al secondo (bps)."
  example:
  - "The following example shows how to set the BaudRate property to `9600`.  \n  \n [!code-cs[System.IO.Ports.SerialPort#20](~/add/codesnippet/csharp/p-system.io.ports.serial_3_1.cs)]\n [!code-cpp[System.IO.Ports.SerialPort#20](~/add/codesnippet/cpp/p-system.io.ports.serial_3_1.cpp)]\n [!code-vb[System.IO.Ports.SerialPort#20](~/add/codesnippet/visualbasic/p-system.io.ports.serial_3_1.vb)]  \n  \n The following example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_3_2.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_3_2.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_3_2.vb)]"
  syntax:
    content: public int BaudRate { get; set; }
    return:
      type: System.Int32
      description: "Velocità in baud."
  overload: System.IO.Ports.SerialPort.BaudRate*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Velocità in baud specificato è minore o uguale a zero o maggiore rispetto alla velocità massima di trasmissione consentita per il dispositivo."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BreakState
  id: BreakState
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BreakState
  nameWithType: SerialPort.BreakState
  fullName: System.IO.Ports.SerialPort.BreakState
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene o imposta lo stato del segnale di interruzione."
  remarks: "Lo stato del segnale di interruzione si verifica quando una trasmissione viene sospesa e la riga si trova in stato di interruzione (minimo, alcun bit di stop) fino al rilascio. Per immettere uno stato di interruzione, impostare questa proprietà su `true`. Se la porta è già in stato di interruzione, impostando questa proprietà nuovamente su `true` non generare un&quot;eccezione. Non è possibile scrivere il <xref:System.IO.Ports.SerialPort>oggetto mentre è BreakState `true`.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public bool BreakState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la porta è in uno stato di interruzione. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.BreakState*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il flusso è chiuso. Ciò può verificarsi perché il <> </> *> (metodo) non è stato chiamato o <> </> *> metodo è stato chiamato."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BytesToRead
  id: BytesToRead
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BytesToRead
  nameWithType: SerialPort.BytesToRead
  fullName: System.IO.Ports.SerialPort.BytesToRead
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene il numero di byte di dati nel buffer di ricezione."
  remarks: "Buffer di ricezione include del driver seriale buffer di ricezione nonché il buffer interno nel <xref:System.IO.Ports.SerialPort>oggetto stesso.</xref:System.IO.Ports.SerialPort>       Perché la proprietà BytesToRead rappresenta sia la <xref:System.IO.Ports.SerialPort>buffer e il buffer creato da Windows, può restituire un valore maggiore di <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>proprietà che rappresenta solo il buffer creato da Windows.</xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> </xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public int BytesToRead { get; }
    return:
      type: System.Int32
      description: "Il numero di byte di dati nel buffer di ricezione."
  overload: System.IO.Ports.SerialPort.BytesToRead*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La porta non è aperta."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.BytesToWrite
  id: BytesToWrite
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: BytesToWrite
  nameWithType: SerialPort.BytesToWrite
  fullName: System.IO.Ports.SerialPort.BytesToWrite
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene il numero di byte di dati nel buffer di invio."
  remarks: "Buffer di invio include del driver seriale buffer di invio nonché il buffer interno nel <xref:System.IO.Ports.SerialPort>oggetto stesso.</xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public int BytesToWrite { get; }
    return:
      type: System.Int32
      description: "Il numero di byte di dati nel buffer di invio."
  overload: System.IO.Ports.SerialPort.BytesToWrite*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La porta è in uno stato non valido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il flusso è chiuso. Ciò può verificarsi perché il <> </> *> (metodo) non è stato chiamato o <> </> *> metodo è stato chiamato."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.CDHolding
  id: CDHolding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: CDHolding
  nameWithType: SerialPort.CDHolding
  fullName: System.IO.Ports.SerialPort.CDHolding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene lo stato della riga di rilevamento portante per la porta."
  remarks: "Questa proprietà può essere utilizzata per monitorare lo stato della riga di rilevamento del vettore per una porta. Nessun gestore telefonico indica in genere che il destinatario ha riagganciato e il vettore è stato eliminato."
  syntax:
    content: public bool CDHolding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la portante viene rilevata; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.CDHolding*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il flusso è chiuso. Ciò può verificarsi perché il <> </> *> (metodo) non è stato chiamato o <> </> *> metodo è stato chiamato."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Close
  id: Close
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Close()
  nameWithType: SerialPort.Close()
  fullName: System.IO.Ports.SerialPort.Close()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Chiude la connessione alla porta, imposta la <xref:System.IO.Ports.SerialPort.IsOpen*>proprietà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ed Elimina interno <xref:System.IO.Stream>oggetto.</xref:System.IO.Stream> </xref:System.IO.Ports.SerialPort.IsOpen*>"
  remarks: "Chiamare questo metodo chiude il <xref:System.IO.Ports.SerialPort>dell&quot;oggetto e di ricezione e buffer di trasmissione.</xref:System.IO.Ports.SerialPort> Questo metodo chiama il <xref:System.ComponentModel.Component.Dispose?displayProperty=fullName>metodo che richiama il metodo protetto <xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=fullName>metodo con il `disposing` parametro impostato su `true`.</xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=fullName> </xref:System.ComponentModel.Component.Dispose?displayProperty=fullName>       La procedura consigliata per qualsiasi applicazione è in attesa per un periodo di tempo dopo la chiamata del metodo Close prima di chiamare il <xref:System.IO.Ports.SerialPort.Open%2A>(metodo), come la porta potrebbe non essere chiusa immediatamente.</xref:System.IO.Ports.SerialPort.Open%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_5_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_5_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_5_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.IO.Ports.SerialPort.Close*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.CtsHolding
  id: CtsHolding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: CtsHolding
  nameWithType: SerialPort.CtsHolding
  fullName: System.IO.Ports.SerialPort.CtsHolding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene lo stato della riga di Clear-to-Send."
  remarks: "La riga di Clear-to-Send (CTS) viene utilizzata nella richiesta di trasmissione e la cancellazione di inviare la sincronizzazione di hardware (RTS/CTS). La linea CTS viene eseguita una query tramite una porta prima dell&quot;invio di dati."
  syntax:
    content: public bool CtsHolding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se viene rilevata la riga di Clear-to-Send; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.CtsHolding*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il flusso è chiuso. Ciò può verificarsi perché il <> </> *> (metodo) non è stato chiamato o <> </> *> metodo è stato chiamato."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DataBits
  id: DataBits
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DataBits
  nameWithType: SerialPort.DataBits
  fullName: System.IO.Ports.SerialPort.DataBits
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene o imposta la lunghezza standard dei bit di dati per byte."
  remarks: "L&quot;intervallo di valori per questa proprietà è compreso tra 5 e 8. Il valore predefinito è 8."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_7_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_7_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_7_1.vb)]"
  syntax:
    content: public int DataBits { get; set; }
    return:
      type: System.Int32
      description: "La lunghezza dei bit di dati."
  overload: System.IO.Ports.SerialPort.DataBits*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore di bit di dati è minore di 5 o più di 8."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DataReceived
  id: DataReceived
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DataReceived
  nameWithType: SerialPort.DataReceived
  fullName: System.IO.Ports.SerialPort.DataReceived
  type: Event
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Indica che i dati sono stati ricevuti tramite una porta rappresentata dal <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> oggetto."
  remarks: "Gli eventi di dati possono essere causati da uno qualsiasi degli elementi di <xref:System.IO.Ports.SerialData>enumerazione.</xref:System.IO.Ports.SerialData> Poiché il sistema operativo determina se generare l&quot;evento o No, non tutti gli errori di parità possono essere segnalati.       L&quot;evento DataReceived viene generato anche se un carattere Eof viene ricevuto, indipendentemente dal numero di byte nel buffer di input interno e il valore di <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A>proprietà.</xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A>       <xref:System.IO.Ports.SerialPort.PinChanged>, DataReceived, e <xref:System.IO.Ports.SerialPort.ErrorReceived>gli eventi possono essere chiamati ordine e potrebbe verificarsi un leggero ritardo tra quando il flusso sottostante segnala l&quot;errore e quando viene eseguito il gestore dell&quot;evento.</xref:System.IO.Ports.SerialPort.ErrorReceived></xref:System.IO.Ports.SerialPort.PinChanged> Un solo gestore eventi è possibile eseguire contemporaneamente.       L&quot;evento DataReceived non deve necessariamente essere generato per ogni byte ricevuto. Utilizzare il <xref:System.IO.Ports.SerialPort.BytesToRead%2A>proprietà per determinare la quantità di dati viene lasciato per poter essere letto nel buffer.</xref:System.IO.Ports.SerialPort.BytesToRead%2A>       L&quot;evento DataReceived è generato su un thread secondario quando vengono ricevuti dati dal <xref:System.IO.Ports.SerialPort>oggetto.</xref:System.IO.Ports.SerialPort> Poiché questo evento viene generato in un thread secondario e non il thread principale, il tentativo di modificare alcuni elementi nel thread principale, ad esempio elementi dell&quot;interfaccia utente, potrebbe generare un&quot;eccezione di threading. Se è necessario modificare gli elementi di principale <xref:System.Windows.Forms.Form>o <xref:System.Windows.Forms.Control>, richieste di modifica con <xref:System.Windows.Forms.Control.Invoke%2A>, che verrà eseguita l&quot;operazione sul thread appropriato.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Form>       Per ulteriori informazioni sulla gestione degli eventi, vedere [eventi](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example adds a <xref:System.IO.Ports.SerialDataReceivedEventHandler> to DataReceived to read all the available data received on the COM1 port. Note that to test this code it is necessary to have hardware attached to COM1 that will send data.  \n  \n [!code-cs[System.IO.Ports.SerialPort#06](~/add/codesnippet/csharp/e-system.io.ports.serial_1.cs)]\n [!code-cpp[System.IO.Ports.SerialPort#06](~/add/codesnippet/cpp/e-system.io.ports.serial_1.cpp)]\n [!code-vb[System.IO.Ports.SerialPort#06](~/add/codesnippet/visualbasic/e-system.io.ports.serial_1.vb)]"
  syntax:
    content: public event System.IO.Ports.SerialDataReceivedEventHandler DataReceived;
    return:
      type: System.IO.Ports.SerialDataReceivedEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DiscardInBuffer
  id: DiscardInBuffer
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DiscardInBuffer()
  nameWithType: SerialPort.DiscardInBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardInBuffer()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Buffer di ricezione Elimina i dati del driver seriale."
  remarks: 'Questo metodo è equivalente al codice Visual Basic seguente: `MSComm1.InBufferCount = 0`. Cancella il buffer di ricezione, ma non influisce sui buffer di trasmissione.'
  syntax:
    content: public void DiscardInBuffer ();
    parameters: []
  overload: System.IO.Ports.SerialPort.DiscardInBuffer*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il flusso è chiuso. Ciò può verificarsi perché il <> </> *> (metodo) non è stato chiamato o <> </> *> metodo è stato chiamato."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DiscardNull
  id: DiscardNull
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DiscardNull
  nameWithType: SerialPort.DiscardNull
  fullName: System.IO.Ports.SerialPort.DiscardNull
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene o imposta un valore che indica se i byte null vengono ignorati quando vengono trasmessi tra la porta e il buffer di ricezione."
  remarks: "In genere, questo valore deve essere impostato su `false`, soprattutto per le trasmissioni binarie.  Impostando questa proprietà su `true` può causare risultati imprevisti per byte con codifica UTF32 e UTF16."
  syntax:
    content: public bool DiscardNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i byte null vengono ignorati; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.DiscardNull*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il flusso è chiuso. Ciò può verificarsi perché il <> </> *> (metodo) non è stato chiamato o <> </> *> metodo è stato chiamato."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DiscardOutBuffer
  id: DiscardOutBuffer
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DiscardOutBuffer()
  nameWithType: SerialPort.DiscardOutBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardOutBuffer()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Buffer di trasmissione Elimina i dati del driver seriale."
  remarks: 'Questo metodo è equivalente al codice Visual Basic seguente: `MSComm1.OutBufferCount = 0`. Cancella il buffer di trasmissione, ma non influisce sui buffer di ricezione.'
  syntax:
    content: public void DiscardOutBuffer ();
    parameters: []
  overload: System.IO.Ports.SerialPort.DiscardOutBuffer*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il flusso è chiuso. Ciò può verificarsi perché il <> </> *> (metodo) non è stato chiamato o <> </> *> metodo è stato chiamato."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SerialPort.Dispose(Boolean)
  fullName: System.IO.Ports.SerialPort.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Rilascia le risorse non gestite usate da di <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> e facoltativamente rilascia le risorse gestite."
  remarks: "Questo metodo viene chiamato dal metodo pubblico <xref:System.ComponentModel.Component.Dispose%2A>metodo e <xref:System.Object.Finalize%2A>metodo.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> <xref:System.ComponentModel.Component.Dispose%2A>richiama il metodo Dispose protetto con il `disposing` parametro impostato su `true`.</xref:System.ComponentModel.Component.Dispose%2A> <xref:System.Object.Finalize%2A>richiama Dispose con `disposing` impostato su `false`.</xref:System.Object.Finalize%2A>       Quando il `disposing` parametro `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.IO.Ports.SerialPort>riferimenti.</xref:System.IO.Ports.SerialPort> Questo metodo richiama il <xref:System.ComponentModel.Component.Dispose%2A>metodo di ciascun oggetto cui viene fatto riferimento.</xref:System.ComponentModel.Component.Dispose%2A>       Questo metodo scarica e chiude l&quot;oggetto flusso <xref:System.IO.Ports.SerialPort.BaseStream%2A>proprietà.</xref:System.IO.Ports.SerialPort.BaseStream%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.IO.Ports.SerialPort.Dispose*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DsrHolding
  id: DsrHolding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DsrHolding
  nameWithType: SerialPort.DsrHolding
  fullName: System.IO.Ports.SerialPort.DsrHolding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene lo stato del segnale DSR Data Set Ready ()."
  remarks: "Questa proprietà viene usata nella sincronizzazione Data Set Ready/Data Terminal Ready DSR/DTR (). Il segnale DSR Data Set Ready () è in genere inviato tramite un modem a una porta per indicare che è pronto per la trasmissione dei dati o la ricezione dei dati."
  syntax:
    content: public bool DsrHolding { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è stato inviato un segnale di Set di dati pronti a porta. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.DsrHolding*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il flusso è chiuso. Ciò può verificarsi perché il <> </> *> (metodo) non è stato chiamato o <> </> *> metodo è stato chiamato."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.DtrEnable
  id: DtrEnable
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: DtrEnable
  nameWithType: SerialPort.DtrEnable
  fullName: System.IO.Ports.SerialPort.DtrEnable
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene o imposta un valore che abilita il segnale DTR Data Terminal Ready () durante la comunicazione seriale."
  remarks: "DTR Data Terminal Ready () è abilitato in genere durante la sincronizzazione software XON/XOFF e Request to Send/Clear per inviare la sincronizzazione di hardware (RTS/CTS) e le comunicazioni modem."
  syntax:
    content: public bool DtrEnable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per abilitare DTR Data Terminal Ready (); in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.DtrEnable*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Encoding
  id: Encoding
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Encoding
  nameWithType: SerialPort.Encoding
  fullName: System.IO.Ports.SerialPort.Encoding
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene o imposta la codifica dei byte per la conversione del testo prima e dopo la trasmissione."
  syntax:
    content: public System.Text.Encoding Encoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "Un <xref:System.Text.Encoding>oggetto.</xref:System.Text.Encoding> Il valore predefinito è <xref:System.Text.ASCIIEncoding>.</xref:System.Text.ASCIIEncoding>"
  overload: System.IO.Ports.SerialPort.Encoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La proprietà di codifica è stata impostata su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La proprietà di codifica è stata impostata su una codifica non <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, <xref:System.Text.UnicodeEncoding>, uno di codifiche a byte singolo di Windows o una delle codifiche a byte doppio di Windows.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.Text.ASCIIEncoding>"
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ErrorReceived
  id: ErrorReceived
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ErrorReceived
  nameWithType: SerialPort.ErrorReceived
  fullName: System.IO.Ports.SerialPort.ErrorReceived
  type: Event
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Indica che si è verificato un errore con una porta rappresentata da un <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> oggetto."
  remarks: "Eventi di errore possono essere causati da uno qualsiasi degli elementi di <xref:System.IO.Ports.SerialError>enumerazione.</xref:System.IO.Ports.SerialError> Poiché il sistema operativo determina se generare l&quot;evento o No, non tutti gli errori di parità possono essere segnalati.       <xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, ErrorReceived eventi possono essere chiamati nell&quot;ordinati e possono esistere un leggero ritardo tra quando il flusso sottostante segnala l&quot;errore e che è possibile che il gestore dell&quot;evento viene eseguito.</xref:System.IO.Ports.SerialPort.DataReceived></xref:System.IO.Ports.SerialPort.PinChanged> Un solo gestore eventi è possibile eseguire contemporaneamente.       Se si verifica un errore di parità byte finale di un flusso, verrà aggiunto un ulteriore byte nel buffer di input con un valore di 126.       L&quot;evento ErrorReceived viene generato in un thread secondario quando viene ricevuto un errore dal <xref:System.IO.Ports.SerialPort>oggetto.</xref:System.IO.Ports.SerialPort> Poiché questo evento viene generato in un thread secondario e non il thread principale, il tentativo di modificare alcuni elementi nel thread principale, ad esempio elementi dell&quot;interfaccia utente, potrebbe generare un&quot;eccezione di threading. Se è necessario modificare gli elementi di principale <xref:System.Windows.Forms.Form>o <xref:System.Windows.Forms.Control>, richieste di modifica con <xref:System.Windows.Forms.Control.Invoke%2A>, che verrà eseguita l&quot;operazione sul thread appropriato.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Form>       Per ulteriori informazioni sulla gestione degli eventi, vedere [eventi](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.IO.Ports.SerialErrorReceivedEventHandler ErrorReceived;
    return:
      type: System.IO.Ports.SerialErrorReceivedEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.GetPortNames
  id: GetPortNames
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: GetPortNames()
  nameWithType: SerialPort.GetPortNames()
  fullName: System.IO.Ports.SerialPort.GetPortNames()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene una matrice di nomi di porta seriale per il computer corrente."
  remarks: "The order of port names returned from GetPortNames is not specified.  \n  \n Use the GetPortNames method to query the current computer for a list of valid serial port names. For example, you can use this method to determine whether COM1 and COM2 are valid serial ports for the current computer.  \n  \n The port names are obtained from the system registry (for example, HKEY_LOCAL_MACHINE\\HARDWARE\\DEVICEMAP\\SERIALCOMM). If the registry contains stale or otherwise incorrect data then the GetPortNames method will return incorrect data."
  example:
  - "The following code example uses the GetPortNames method to display serial port names to the console.  \n  \n [!code-cs[IO.Ports.GetPortNames#1](~/add/codesnippet/csharp/m-system.io.ports.serial_3_1.cs)]\n [!code-cpp[IO.Ports.GetPortNames#1](~/add/codesnippet/cpp/m-system.io.ports.serial_3_1.cpp)]\n [!code-vb[IO.Ports.GetPortNames#1](~/add/codesnippet/visualbasic/m-system.io.ports.serial_3_1.vb)]"
  syntax:
    content: public static string[] GetPortNames ();
    parameters: []
    return:
      type: System.String[]
      description: "Matrice di nomi di porta seriale per il computer corrente."
  overload: System.IO.Ports.SerialPort.GetPortNames*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Impossibile interrogare i nomi di porta seriale."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Handshake
  id: Handshake
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Handshake
  nameWithType: SerialPort.Handshake
  fullName: System.IO.Ports.SerialPort.Handshake
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene o imposta il protocollo di sincronizzazione per la trasmissione di dati usando un valore di porta seriale <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref>."
  remarks: "Quando viene utilizzata la sincronizzazione, il dispositivo è connesso al <xref:System.IO.Ports.SerialPort>oggetto viene richiesto di arrestare l&quot;invio dei dati quando è presente almeno (<xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>-1024) byte nel buffer.</xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> </xref:System.IO.Ports.SerialPort> Il dispositivo viene richiesto di riprendere l&quot;invio dei dati quando sono presenti 1024 byte o meno nel buffer. Se il dispositivo invia i dati in blocchi più grandi di 1024 byte, questo può causare un overflow del buffer.       Se la proprietà di Handshake è impostata su <xref:System.IO.Ports.Handshake>e <xref:System.IO.Ports.SerialPort.CtsHolding%2A>è impostato su `false`, non verrà inviato il carattere XOff.</xref:System.IO.Ports.SerialPort.CtsHolding%2A> </xref:System.IO.Ports.Handshake> Se <xref:System.IO.Ports.SerialPort.CtsHolding%2A>viene quindi impostato su `true`, più dati devono essere inviati prima di inviare il carattere XOff.</xref:System.IO.Ports.SerialPort.CtsHolding%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_0_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_0_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_0_1.vb)]"
  syntax:
    content: public System.IO.Ports.Handshake Handshake { get; set; }
    return:
      type: System.IO.Ports.Handshake
      description: "Uno del <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> valori. Il valore predefinito è <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.Handshake*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore passato non è un valore valido di <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> enumerazione."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.InfiniteTimeout
  id: InfiniteTimeout
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: InfiniteTimeout
  nameWithType: SerialPort.InfiniteTimeout
  fullName: System.IO.Ports.SerialPort.InfiniteTimeout
  type: Field
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Indica che deve verificarsi alcun timeout."
  remarks: "Questo valore viene utilizzato con il <xref:System.IO.Ports.SerialPort.ReadTimeout%2A>e <xref:System.IO.Ports.SerialPort.WriteTimeout%2A>proprietà.</xref:System.IO.Ports.SerialPort.WriteTimeout%2A> </xref:System.IO.Ports.SerialPort.ReadTimeout%2A>"
  syntax:
    content: public const int InfiniteTimeout = -1;
    return:
      type: System.Int32
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.IsOpen
  id: IsOpen
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: IsOpen
  nameWithType: SerialPort.IsOpen
  fullName: System.IO.Ports.SerialPort.IsOpen
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene un valore che indica lo stato aperto o chiuso del <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> oggetto."
  remarks: "La proprietà IsOpen rileva se la porta è aperta per l&quot;utilizzo dal chiamante, non se la porta viene aperta da qualsiasi applicazione nel computer."
  syntax:
    content: public bool IsOpen { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la porta seriale è aperta. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.IsOpen*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore della proprietà IsOpen passato è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il valore della proprietà IsOpen passato è una stringa vuota (&quot;&quot;)."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.NewLine
  id: NewLine
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: NewLine
  nameWithType: SerialPort.NewLine
  fullName: System.IO.Ports.SerialPort.NewLine
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene o imposta il valore utilizzato per interpretare la fine di una chiamata al <> </> *> e <> </> *> metodi."
  remarks: "Questa proprietà determina il valore (byte) definisce la fine di una riga per il <xref:System.IO.Ports.SerialPort.ReadLine%2A>e <xref:System.IO.Ports.SerialPort.WriteLine%2A>metodi.</xref:System.IO.Ports.SerialPort.WriteLine%2A> </xref:System.IO.Ports.SerialPort.ReadLine%2A> Per impostazione predefinita, il valore di fine della riga è <xref:System.Environment.NewLine%2A>.</xref:System.Environment.NewLine%2A> È necessario modificare questa su un valore diverso se il dispositivo seriale particolare che si lavora con utilizza un valore diverso per lo stesso scopo."
  syntax:
    content: public string NewLine { get; set; }
    return:
      type: System.String
      description: "Un valore che rappresenta la fine di una riga. Il valore predefinito è un ritorno a capo, <xref:System.Environment.NewLine*>.</xref:System.Environment.NewLine*>"
  overload: System.IO.Ports.SerialPort.NewLine*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il valore della proprietà è vuoto."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore della proprietà <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Open
  id: Open
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Open()
  nameWithType: SerialPort.Open()
  fullName: System.IO.Ports.SerialPort.Open()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Apre una nuova connessione su porta seriale."
  remarks: "Può esistere una sola connessione aperta per <xref:System.IO.Ports.SerialPort>oggetto.</xref:System.IO.Ports.SerialPort>       La procedura consigliata per qualsiasi applicazione è in attesa per un periodo di tempo dopo la chiamata di <xref:System.IO.Ports.SerialPort.Close%2A>metodo prima di chiamare il metodo Open, in quanto la porta non può essere chiusa immediatamente.</xref:System.IO.Ports.SerialPort.Close%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_2_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_2_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_2_1.vb)]"
  syntax:
    content: public void Open ();
    parameters: []
  overload: System.IO.Ports.SerialPort.Open*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Access is denied to the port.  \n  \n \\- or -  \n  \n The current process, or another process on the system, already has the specified COM port open either by a <xref href=\"System.IO.Ports.SerialPort\"></xref> instance or in unmanaged code."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Uno o più delle proprietà per questa istanza non sono validi. Ad esempio, il <> </> *>, <> </> *>, o <> </> *> proprietà non sono valori validi; <> </> *> è minore o uguale a zero; il <> </> *> o <> </> *> proprietà è minore di zero e non <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The port name does not begin with \"COM\".  \n  \n \\- or -  \n  \n The file type of the port is not supported."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La porta specificata nell&quot;istanza corrente del <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> è già aperto."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Parity
  id: Parity
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Parity
  nameWithType: SerialPort.Parity
  fullName: System.IO.Ports.SerialPort.Parity
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene o imposta il protocollo di controllo della parità."
  remarks: "Parità è una routine di controllo degli errori in cui il numero di 1 deve essere sempre lo stesso, ovvero pari o dispari, per ogni gruppo di bit che viene trasmesso senza errori. Parità nelle comunicazioni a-modem, è spesso uno dei parametri che devono essere concordati dalle parti di invio e ricezione inserisce prima dell&quot;inizio della trasmissione può richiedere.       Se si verifica un errore di parità byte finale di un flusso, verrà aggiunto un ulteriore byte nel buffer di input con un valore di 126."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_6_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_6_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_6_1.vb)]"
  syntax:
    content: public System.IO.Ports.Parity Parity { get; set; }
    return:
      type: System.IO.Ports.Parity
      description: "Uno dei valori di enumerazione che rappresenta il protocollo di controllo della parità. Il valore predefinito è <xref href=&quot;System.IO.Ports.Parity&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.Parity*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore di parità passato non è un valore valido di <xref href=&quot;System.IO.Ports.Parity&quot;> </xref> enumerazione."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ParityReplace
  id: ParityReplace
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ParityReplace
  nameWithType: SerialPort.ParityReplace
  fullName: System.IO.Ports.SerialPort.ParityReplace
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene o imposta il byte che sostituisce i byte non validi in un flusso di dati quando si verifica un errore di parità."
  remarks: "Se il valore è impostato per il carattere null, viene disabilitata la sostituzione della parità."
  syntax:
    content: public byte ParityReplace { get; set; }
    return:
      type: System.Byte
      description: "Byte che sostituisce i byte non validi."
  overload: System.IO.Ports.SerialPort.ParityReplace*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.PinChanged
  id: PinChanged
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: PinChanged
  nameWithType: SerialPort.PinChanged
  fullName: System.IO.Ports.SerialPort.PinChanged
  type: Event
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Indica che si è verificato un evento segnale non di dati sulla porta rappresentata la <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> oggetto."
  remarks: "Modifica del pin seriale eventi possono essere causati da uno qualsiasi degli elementi di <xref:System.IO.Ports.SerialPinChange>enumerazione.</xref:System.IO.Ports.SerialPinChange> Poiché il sistema operativo determina se generare l&quot;evento o No, non tutti gli errori di parità possono essere segnalati. Come parte dell&quot;evento, il nuovo valore del pin è impostato.       Viene generato l&quot;evento PinChanged quando un <xref:System.IO.Ports.SerialPort>oggetto immette il <xref:System.IO.Ports.SerialPort.BreakState%2A>, ma non quando la porta chiusa <xref:System.IO.Ports.SerialPort.BreakState%2A>.</xref:System.IO.Ports.SerialPort.BreakState%2A> </xref:System.IO.Ports.SerialPort.BreakState%2A> </xref:System.IO.Ports.SerialPort> Questo comportamento non si applica ad altri valori di <xref:System.IO.Ports.SerialPinChange>enumerazione.</xref:System.IO.Ports.SerialPinChange>       PinChanged, <xref:System.IO.Ports.SerialPort.DataReceived>, e <xref:System.IO.Ports.SerialPort.ErrorReceived>gli eventi possono essere chiamati ordine e potrebbe verificarsi un leggero ritardo tra quando il flusso sottostante segnala l&quot;errore e quando viene eseguito il gestore dell&quot;evento.</xref:System.IO.Ports.SerialPort.ErrorReceived> </xref:System.IO.Ports.SerialPort.DataReceived> Un solo gestore eventi è possibile eseguire contemporaneamente.       L&quot;evento PinChanged viene generato in un thread secondario. Poiché questo evento viene generato in un thread secondario e non il thread principale, il tentativo di modificare alcuni elementi nel thread principale, ad esempio elementi dell&quot;interfaccia utente, potrebbe generare un&quot;eccezione di threading. Se è necessario modificare gli elementi di principale <xref:System.Windows.Forms.Form>o <xref:System.Windows.Forms.Control>, richieste di modifica con <xref:System.Windows.Forms.Control.Invoke%2A>, che verrà eseguita l&quot;operazione sul thread appropriato.</xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Form>       Per ulteriori informazioni sulla gestione degli eventi, vedere [eventi](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.IO.Ports.SerialPinChangedEventHandler PinChanged;
    return:
      type: System.IO.Ports.SerialPinChangedEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.PortName
  id: PortName
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: PortName
  nameWithType: SerialPort.PortName
  fullName: System.IO.Ports.SerialPort.PortName
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene o imposta la porta per le comunicazioni, incluse, ma non solo tutte le porte COM disponibili."
  remarks: "Un elenco di nomi di porta validi può essere ottenuto utilizzando la <xref:System.IO.Ports.SerialPort.GetPortNames%2A>metodo.</xref:System.IO.Ports.SerialPort.GetPortNames%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_4_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_4_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_4_1.vb)]"
  syntax:
    content: public string PortName { get; set; }
    return:
      type: System.String
      description: "La porta di comunicazione. L&quot;impostazione predefinita è COM1."
  overload: System.IO.Ports.SerialPort.PortName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The PortName property was set to a value with a length of zero.  \n  \n -or-  \n  \n The PortName property was set to a value that starts with \"\\\\\\\\\".  \n  \n -or-  \n  \n The port name was not valid."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La proprietà PortName è stata impostata su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La porta specificata è aperta."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: SerialPort.Read(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Legge un numero di byte dal <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> buffer di input e li scrive in una matrice di byte in corrispondenza dell&quot;offset specificato."
  remarks: "Se è necessario passare dalla lettura di testo e la lettura dei dati binari dal flusso, selezionare un protocollo che definisce il limite tra testo e dati binari, ad esempio la lettura dei byte e decodifica i dati manualmente.       Poiché la <xref:System.IO.Ports.SerialPort>classe memorizza nel buffer di dati e il flusso di contenuti nel <xref:System.IO.Ports.SerialPort.BaseStream%2A>proprietà non è possibile una discordanza il numero di byte disponibile per la lettura.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  Il <xref:System.IO.Ports.SerialPort.BytesToRead%2A>proprietà può indicare che sono presenti byte da leggere, ma potrebbe non essere accessibili per il flusso di contenuti nel <xref:System.IO.Ports.SerialPort.BaseStream%2A>proprietà perché sono stati memorizzati nella <xref:System.IO.Ports.SerialPort>classe.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>       Il metodo Read non bloccare altre operazioni quando il numero di byte letti è uguale a `count` ma sono disponibili ancora letti i byte sulla porta seriale."
  syntax:
    content: public int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Matrice di byte da scrivere l&quot;input."
    - id: offset
      type: System.Int32
      description: "L&quot;offset in `buffer` in cui scrivere i byte."
    - id: count
      type: System.Int32
      description: "Numero massimo di byte da leggere. Vengono letti meno byte se `count` è maggiore del numero di byte nel buffer di input."
    return:
      type: System.Int32
      description: "Il numero di byte letti."
  overload: System.IO.Ports.SerialPort.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La dimensione del buffer è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La porta specificata non è aperta."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il <code> offset </code> o <code> count </code> i parametri sono di fuori dell&quot;area di validità del <code> buffer </code> passati. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>Oltre a <code>count</code> è maggiore della lunghezza del <code>buffer</code>."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "Non sono disponibili byte da leggere."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)
  id: Read(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Read(Char[],Int32,Int32)
  nameWithType: SerialPort.Read(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Legge un numero di caratteri dal <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> buffer di input e li scrive in una matrice di caratteri a un offset specificato."
  remarks: "Utilizzare questo metodo per la lettura di caratteri dalla porta seriale.       Se è necessario passare dalla lettura di testo e la lettura dei dati binari dal flusso, selezionare un protocollo che definisce il limite tra testo e dati binari, ad esempio la lettura dei byte e decodifica i dati manualmente.       Poiché la <xref:System.IO.Ports.SerialPort>classe memorizza nel buffer di dati e il flusso di contenuti nel <xref:System.IO.Ports.SerialPort.BaseStream%2A>proprietà non è possibile che una discordanza il numero di caratteri disponibile per la lettura.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  Il <xref:System.IO.Ports.SerialPort.BytesToRead%2A>proprietà può indicare che sono presenti caratteri da leggere, ma potrebbe non essere accessibili per il flusso di contenuti nel <xref:System.IO.Ports.SerialPort.BaseStream%2A>proprietà perché sono stati memorizzati nella <xref:System.IO.Ports.SerialPort>classe.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>       Il metodo Read non bloccare altre operazioni quando il numero di byte letti è uguale a `count` ma sono disponibili ancora letti i byte sulla porta seriale."
  syntax:
    content: public int Read (char[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Matrice di caratteri da scrivere l&quot;input."
    - id: offset
      type: System.Int32
      description: "L&quot;offset in `buffer` in cui scrivere i caratteri."
    - id: count
      type: System.Int32
      description: "Numero massimo di caratteri da leggere. Vengono letti meno caratteri se `count` è maggiore del numero di caratteri nel buffer di input."
    return:
      type: System.Int32
      description: "Il numero di caratteri letti."
  overload: System.IO.Ports.SerialPort.Read*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code> plus <code>count</code> is greater than the length of the buffer.  \n  \n \\- or -  \n  \n <code>count</code> is 1 and there is a surrogate character in the buffer."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>buffer</code> passed is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il <code> offset </code> o <code> count </code> i parametri sono di fuori dell&quot;area di validità del <code> buffer </code> passati. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La porta specificata non è aperta."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "Non sono disponibili caratteri da leggere."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadBufferSize
  id: ReadBufferSize
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadBufferSize
  nameWithType: SerialPort.ReadBufferSize
  fullName: System.IO.Ports.SerialPort.ReadBufferSize
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene o imposta la dimensione del <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> buffer di input."
  remarks: "La proprietà ReadBufferSize ignora qualsiasi valore inferiore a 4096.       Perché la proprietà ReadBufferSize rappresenta solo il buffer creato da Windows, può restituire un valore minore di <xref:System.IO.Ports.SerialPort.BytesToRead%2A>proprietà che rappresenta entrambi il <xref:System.IO.Ports.SerialPort>buffer e il buffer creato da Windows.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public int ReadBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Dimensioni del buffer, in byte. Il valore predefinito è 4096; il valore massimo è quello di un intero positivo o 2147483647."
  overload: System.IO.Ports.SerialPort.ReadBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore di ReadBufferSize impostato è minore o uguale a zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La proprietà ReadBufferSize è stata impostata durante il flusso è stato aperto."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La proprietà ReadBufferSize è stata impostata su un valore intero dispari."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadByte
  id: ReadByte
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadByte()
  nameWithType: SerialPort.ReadByte()
  fullName: System.IO.Ports.SerialPort.ReadByte()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Legge in modo sincrono un byte dal <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> buffer di input."
  remarks: "Questo metodo legge un byte.       Prestare attenzione quando si utilizza ReadByte e <xref:System.IO.Ports.SerialPort.ReadChar%2A>insieme.</xref:System.IO.Ports.SerialPort.ReadChar%2A> Il passaggio tra la lettura dei byte e lettura di caratteri può provocare la lettura dei dati aggiuntivi e/o altri comportamenti imprevisti. Se è necessario passare dalla lettura di testo e la lettura dei dati binari dal flusso, selezionare un protocollo che definisce il limite tra testo e dati binari, ad esempio la lettura dei byte e decodifica i dati manualmente.      > [!NOTE] > Perché la <xref:System.IO.Ports.SerialPort>classe memorizza nel buffer di dati e il flusso di contenuti nel <xref:System.IO.Ports.SerialPort.BaseStream%2A>proprietà non è possibile una discordanza il numero di byte disponibile per la lettura.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  Il <xref:System.IO.Ports.SerialPort.BytesToRead%2A>proprietà può indicare che sono presenti byte da leggere, ma potrebbe non essere accessibili per il flusso di contenuti nel <xref:System.IO.Ports.SerialPort.BaseStream%2A>proprietà perché sono stati memorizzati nella <xref:System.IO.Ports.SerialPort>classe.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: "Byte, cast su un <xref:System.Int32>, oppure -1 se è stata letta la fine del flusso.</xref:System.Int32>"
  overload: System.IO.Ports.SerialPort.ReadByte*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La porta specificata non è aperta."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "The operation did not complete before the time-out period ended.  \n  \n \\- or -  \n  \n No byte was read."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadChar
  id: ReadChar
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadChar()
  nameWithType: SerialPort.ReadChar()
  fullName: System.IO.Ports.SerialPort.ReadChar()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Legge in modo sincrono un carattere dal <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> buffer di input."
  remarks: "Questo metodo legge un carattere completo in base alla codifica.       Prestare attenzione quando si utilizza <xref:System.IO.Ports.SerialPort.ReadByte%2A>ReadChar insieme e.</xref:System.IO.Ports.SerialPort.ReadByte%2A> Il passaggio tra la lettura dei byte e lettura di caratteri può provocare la lettura dei dati aggiuntivi e/o altri comportamenti imprevisti. Se è necessario passare dalla lettura di testo e la lettura dei dati binari dal flusso, selezionare un protocollo che definisce il limite tra testo e dati binari, ad esempio la lettura dei byte e decodifica i dati manualmente.      > [!NOTE] > Perché la <xref:System.IO.Ports.SerialPort>classe memorizza nel buffer di dati e il flusso di contenuti nel <xref:System.IO.Ports.SerialPort.BaseStream%2A>proprietà non è possibile una discordanza il numero di byte disponibile per la lettura.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  Il <xref:System.IO.Ports.SerialPort.BytesToRead%2A>proprietà può indicare che sono presenti byte da leggere, ma potrebbe non essere accessibili per il flusso di contenuti nel <xref:System.IO.Ports.SerialPort.BaseStream%2A>proprietà perché sono stati memorizzati nella <xref:System.IO.Ports.SerialPort>classe.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public int ReadChar ();
    parameters: []
    return:
      type: System.Int32
      description: "Il carattere che è stato letto."
  overload: System.IO.Ports.SerialPort.ReadChar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La porta specificata non è aperta."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "The operation did not complete before the time-out period ended.  \n  \n \\- or -  \n  \n No character was available in the allotted time-out period."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadExisting
  id: ReadExisting
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadExisting()
  nameWithType: SerialPort.ReadExisting()
  fullName: System.IO.Ports.SerialPort.ReadExisting()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Legge tutti i byte disponibili immediatamente, in base alla codifica, sia nel flusso che il buffer di input di <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> oggetto."
  remarks: "Questo metodo restituisce il contenuto del flusso e il buffer interno del <xref:System.IO.Ports.SerialPort>oggetto sotto forma di stringa.</xref:System.IO.Ports.SerialPort> Questo metodo non utilizza un timeout. Si noti che questo metodo può lasciare finali byte di apertura nel buffer interno, che rende il <xref:System.IO.Ports.SerialPort.BytesToRead%2A>valore maggiore di zero.</xref:System.IO.Ports.SerialPort.BytesToRead%2A>       Se è necessario passare dalla lettura di testo e la lettura dei dati binari dal flusso, selezionare un protocollo che definisce il limite tra testo e dati binari, ad esempio la lettura dei byte e decodifica i dati manualmente.      > [!NOTE] > La <xref:System.IO.Ports.SerialPort>classe memorizza nel buffer di dati, ma è contenuto l&quot;oggetto di flusso di <xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=fullName>proprietà non.</xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=fullName> </xref:System.IO.Ports.SerialPort> Pertanto, il <xref:System.IO.Ports.SerialPort>oggetto e l&quot;oggetto flusso potrebbero essere diversi per il numero di byte che sono disponibili per la lettura.</xref:System.IO.Ports.SerialPort> Quando byte memorizzati nel buffer di <xref:System.IO.Ports.SerialPort>oggetto, il <xref:System.IO.Ports.SerialPort.BytesToRead%2A>proprietà include i byte nel relativo valore; tuttavia, questi potrebbero non essere accessibili per il flusso di contenuti nel <xref:System.IO.Ports.SerialPort.BaseStream%2A>proprietà.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A> </xref:System.IO.Ports.SerialPort>"
  syntax:
    content: public string ReadExisting ();
    parameters: []
    return:
      type: System.String
      description: "Il contenuto del flusso e il buffer di input di <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> oggetto."
  overload: System.IO.Ports.SerialPort.ReadExisting*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La porta specificata non è aperta."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadLine
  id: ReadLine
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadLine()
  nameWithType: SerialPort.ReadLine()
  fullName: System.IO.Ports.SerialPort.ReadLine()
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Legge fino al <xref:System.IO.Ports.SerialPort.NewLine*>valore nel buffer di input.</xref:System.IO.Ports.SerialPort.NewLine*>"
  remarks: "Si noti che sebbene questo metodo non restituisce il <xref:System.IO.Ports.SerialPort.NewLine%2A>valore, il <xref:System.IO.Ports.SerialPort.NewLine%2A>il valore viene rimosso dal buffer di input.</xref:System.IO.Ports.SerialPort.NewLine%2A> </xref:System.IO.Ports.SerialPort.NewLine%2A>       Per impostazione predefinita, il metodo ReadLine verrà bloccata finché non viene ricevuta una riga. Se questo comportamento è indesiderato, impostare la <xref:System.IO.Ports.SerialPort.ReadTimeout%2A>proprietà su qualsiasi valore diverso da zero per imporre il metodo ReadLine per generare un <xref:System.TimeoutException>Se una riga non è disponibile sulla porta.</xref:System.TimeoutException> </xref:System.IO.Ports.SerialPort.ReadTimeout%2A>       Se è necessario passare dalla lettura di testo e la lettura dei dati binari dal flusso, selezionare un protocollo che definisce il limite tra testo e dati binari, ad esempio la lettura dei byte e decodifica i dati manualmente.      > [!NOTE] > Perché la <xref:System.IO.Ports.SerialPort>classe memorizza nel buffer di dati e il flusso di contenuti nel <xref:System.IO.Ports.SerialPort.BaseStream%2A>proprietà non è possibile una discordanza il numero di byte disponibile per la lettura.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  Il <xref:System.IO.Ports.SerialPort.BytesToRead%2A>proprietà può indicare che sono presenti byte da leggere, ma potrebbe non essere accessibili per il flusso di contenuti nel <xref:System.IO.Ports.SerialPort.BaseStream%2A>proprietà perché sono stati memorizzati nella <xref:System.IO.Ports.SerialPort>classe.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_0_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_0_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_0_1.vb)]"
  syntax:
    content: public string ReadLine ();
    parameters: []
    return:
      type: System.String
      description: "Il contenuto del buffer di input fino alla prima occorrenza di un <xref:System.IO.Ports.SerialPort.NewLine*>valore.</xref:System.IO.Ports.SerialPort.NewLine*>"
  overload: System.IO.Ports.SerialPort.ReadLine*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La porta specificata non è aperta."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "The operation did not complete before the time-out period ended.  \n  \n \\- or -  \n  \n No bytes were read."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadTimeout
  id: ReadTimeout
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SerialPort.ReadTimeout
  fullName: System.IO.Ports.SerialPort.ReadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene o imposta il numero di millisecondi prima del timeout quando un&quot;operazione di lettura non viene completata."
  remarks: "Il valore di timeout di lettura è stato originariamente impostato su 500 millisecondi nell&quot;API di comunicazione Win32. Questa proprietà consente di impostare questo valore. Il timeout può essere impostato su qualsiasi valore maggiore di zero o impostato su <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, nel qual caso si verifica alcun timeout.</xref:System.IO.Ports.SerialPort.InfiniteTimeout> <xref:System.IO.Ports.SerialPort.InfiniteTimeout>è il valore predefinito.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>      > [!NOTE] > Gli utenti dell&quot;interfaccia non gestita `COMMTIMEOUTS` struttura prevedibile impostare il valore di timeout su zero per sopprimere i timeout. Per eliminare i timeout con la proprietà ReadTimeout, tuttavia, è necessario specificare <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>       Questa proprietà non influisce sul <xref:System.IO.Stream.BeginRead%2A>il flusso restituito dal metodo di <xref:System.IO.Ports.SerialPort.BaseStream%2A>proprietà.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Stream.BeginRead%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_1_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_1_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_1_1.vb)]"
  syntax:
    content: public int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: "Il numero di millisecondi prima del timeout si verifica quando non viene completata un&quot;operazione di lettura."
  overload: System.IO.Ports.SerialPort.ReadTimeout*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore di timeout di lettura è minore di zero e non è uguale a <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReadTo(System.String)
  id: ReadTo(System.String)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReadTo(String)
  nameWithType: SerialPort.ReadTo(String)
  fullName: System.IO.Ports.SerialPort.ReadTo(String)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Legge una stringa fino specificato <code> value </code> nel buffer di input."
  remarks: "Questo metodo legge una stringa fino specificato `value`. Quando la stringa restituita non include il `value`, `value` viene rimosso dal buffer di input.       Se è necessario passare dalla lettura di testo e la lettura dei dati binari dal flusso, selezionare un protocollo che definisce il limite tra testo e dati binari, ad esempio la lettura dei byte e decodifica i dati manualmente.      > [!NOTE] > Perché la <xref:System.IO.Ports.SerialPort>classe memorizza nel buffer di dati e il flusso di contenuti nel <xref:System.IO.Ports.SerialPort.BaseStream%2A>proprietà non è possibile una discordanza il numero di byte disponibile per la lettura.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort>  Il <xref:System.IO.Ports.SerialPort.BytesToRead%2A>proprietà può indicare che sono presenti byte da leggere, ma potrebbe non essere accessibili per il flusso di contenuti nel <xref:System.IO.Ports.SerialPort.BaseStream%2A>proprietà perché sono stati memorizzati nella <xref:System.IO.Ports.SerialPort>classe.</xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Ports.SerialPort.BytesToRead%2A>"
  syntax:
    content: public string ReadTo (string value);
    parameters:
    - id: value
      type: System.String
      description: "Un valore che indica dove si interrompe l&quot;operazione di lettura."
    return:
      type: System.String
      description: "Il contenuto del buffer di input fino a specificato <code> value </code>."
  overload: System.IO.Ports.SerialPort.ReadTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La lunghezza di <code> value </code> parametro è 0."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La porta specificata non è aperta."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "L&quot;operazione non è stata completata prima che il periodo di timeout."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.ReceivedBytesThreshold
  id: ReceivedBytesThreshold
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: ReceivedBytesThreshold
  nameWithType: SerialPort.ReceivedBytesThreshold
  fullName: System.IO.Ports.SerialPort.ReceivedBytesThreshold
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene o imposta il numero di byte nel buffer di input interno prima che un <xref href=&quot;System.IO.Ports.SerialPort.DataReceived&quot;> </xref> si verifica l&quot;evento."
  remarks: "Il <xref:System.IO.Ports.SerialPort.DataReceived>evento viene generato anche se un <xref:System.IO.Ports.SerialData>carattere viene ricevuto, indipendentemente dal numero di byte nel buffer di input interno e il valore della proprietà ReceivedBytesThreshold.</xref:System.IO.Ports.SerialData> </xref:System.IO.Ports.SerialPort.DataReceived>"
  syntax:
    content: public int ReceivedBytesThreshold { get; set; }
    return:
      type: System.Int32
      description: "Il numero di byte nel buffer di input interno prima che un <xref href=&quot;System.IO.Ports.SerialPort.DataReceived&quot;> </xref> viene generato l&quot;evento. Il valore predefinito è 1."
  overload: System.IO.Ports.SerialPort.ReceivedBytesThreshold*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore ReceivedBytesThreshold è minore o uguale a zero."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.RtsEnable
  id: RtsEnable
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: RtsEnable
  nameWithType: SerialPort.RtsEnable
  fullName: System.IO.Ports.SerialPort.RtsEnable
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene o imposta un valore che indica se la richiesta al segnale RTS (Send) è abilitata durante la comunicazione seriale."
  remarks: "La richiesta di trasmettere segnale RTS () in genere viene utilizzata nella richiesta di trasmissione e la cancellazione di inviare la sincronizzazione di hardware (RTS/CTS)."
  syntax:
    content: public bool RtsEnable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per abilitare una richiesta per trasmettere RTS (); in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.RtsEnable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il valore della proprietà RtsEnable è stato impostato o recuperato mentre il <xref:System.IO.Ports.SerialPort.Handshake*>è impostata sul <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> valore o <xref href=&quot;System.IO.Ports.Handshake&quot;> </xref> valore.</xref:System.IO.Ports.SerialPort.Handshake*>"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.StopBits
  id: StopBits
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: StopBits
  nameWithType: SerialPort.StopBits
  fullName: System.IO.Ports.SerialPort.StopBits
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene o imposta il numero standard dei bit di stop per byte."
  remarks: "Il valore predefinito per Stop è <xref:System.IO.Ports.StopBits>.</xref:System.IO.Ports.StopBits>       Il <xref:System.IO.Ports.StopBits?displayProperty=fullName>valore non è supportato.</xref:System.IO.Ports.StopBits?displayProperty=fullName>"
  example:
  - "The following example shows how to set the StopBits property to `One`.  \n  \n [!code-cs[System.IO.Ports.SerialPort#20](~/add/codesnippet/csharp/p-system.io.ports.serial_2_1.cs)]\n [!code-cpp[System.IO.Ports.SerialPort#20](~/add/codesnippet/cpp/p-system.io.ports.serial_2_1.cpp)]\n [!code-vb[System.IO.Ports.SerialPort#20](~/add/codesnippet/visualbasic/p-system.io.ports.serial_2_1.vb)]  \n  \n The following example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_2_2.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_2_2.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_2_2.vb)]"
  syntax:
    content: public System.IO.Ports.StopBits StopBits { get; set; }
    return:
      type: System.IO.Ports.StopBits
      description: "Uno del <xref href=&quot;System.IO.Ports.StopBits&quot;> </xref> valori."
  overload: System.IO.Ports.SerialPort.StopBits*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore di Stop è <xref href=&quot;System.IO.Ports.StopBits&quot;> </xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Write(System.String)
  id: Write(System.String)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Write(String)
  nameWithType: SerialPort.Write(String)
  fullName: System.IO.Ports.SerialPort.Write(String)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Scrive la stringa specificata per la porta seriale."
  remarks: "Utilizzare questo metodo quando si desidera scrivere una stringa come output a una porta seriale.       Se sono presenti troppi byte nel buffer di output e <xref:System.IO.Ports.SerialPort.Handshake%2A>è impostato su <xref:System.IO.Ports.Handshake>il <xref:System.IO.Ports.SerialPort>oggetto può generare un <xref:System.ServiceProcess.TimeoutException>mentre è in attesa per il dispositivo sia pronto per accettare più dati.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       Per impostazione predefinita, <xref:System.IO.Ports.SerialPort>utilizza <xref:System.Text.ASCIIEncoding>per codificare i caratteri.</xref:System.Text.ASCIIEncoding> </xref:System.IO.Ports.SerialPort> <xref:System.Text.ASCIIEncoding>codifica di tutti i caratteri maggiori di 127 come (char) 63 o &quot;?&quot;.</xref:System.Text.ASCIIEncoding> Per supportare caratteri aggiuntivi in tale intervallo, impostare <xref:System.IO.Ports.SerialPort.Encoding%2A>per <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, o <xref:System.Text.UnicodeEncoding>.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.IO.Ports.SerialPort.Encoding%2A>"
  syntax:
    content: public void Write (string text);
    parameters:
    - id: text
      type: System.String
      description: "La stringa per l&quot;output."
  overload: System.IO.Ports.SerialPort.Write*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La porta specificata non è aperta."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>str</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "L&quot;operazione non è stata completata prima che il periodo di timeout."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: SerialPort.Write(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Scrive un numero specificato di byte sulla porta seriale usando i dati di un buffer."
  remarks: "Utilizzare questo metodo quando si desidera scrivere in un buffer di byte per creare l&quot;output a una porta seriale.       Se sono presenti troppi byte nel buffer di output e <xref:System.IO.Ports.SerialPort.Handshake%2A>è impostato su <xref:System.IO.Ports.Handshake>il <xref:System.IO.Ports.SerialPort>oggetto può generare un <xref:System.ServiceProcess.TimeoutException>mentre è in attesa per il dispositivo sia pronto per accettare più dati.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       Per impostazione predefinita, <xref:System.IO.Ports.SerialPort>utilizza <xref:System.Text.ASCIIEncoding>per codificare i caratteri.</xref:System.Text.ASCIIEncoding> </xref:System.IO.Ports.SerialPort> <xref:System.Text.ASCIIEncoding>codifica di tutti i caratteri maggiori di 127 come (char) 63 o &quot;?&quot;.</xref:System.Text.ASCIIEncoding> Per supportare caratteri aggiuntivi in tale intervallo, impostare <xref:System.IO.Ports.SerialPort.Encoding%2A>per <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, o <xref:System.Text.UnicodeEncoding>.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.IO.Ports.SerialPort.Encoding%2A>"
  syntax:
    content: public void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Matrice di byte che contiene i dati da scrivere sulla porta."
    - id: offset
      type: System.Int32
      description: "Offset dei byte in base zero nel `buffer` parametro in corrispondenza del quale iniziare la copia dei byte sulla porta."
    - id: count
      type: System.Int32
      description: "Il numero di byte da scrivere."
  overload: System.IO.Ports.SerialPort.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>buffer</code> passed is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La porta specificata non è aperta."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il <code> offset </code> o <code> count </code> i parametri sono di fuori dell&quot;area di validità del <code> buffer </code> passati. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>Oltre a <code>count</code> è maggiore della lunghezza del <code>buffer</code>."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "L&quot;operazione non è stata completata prima che il periodo di timeout."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: Write(Char[],Int32,Int32)
  nameWithType: SerialPort.Write(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Scrive un numero specificato di caratteri alla porta seriale usando i dati di un buffer."
  remarks: "Utilizzare questo metodo quando si desidera scrivere un buffer di caratteri per creare l&quot;output a una porta seriale.       Se sono presenti troppi byte nel buffer di output e <xref:System.IO.Ports.SerialPort.Handshake%2A>è impostato su <xref:System.IO.Ports.Handshake>il <xref:System.IO.Ports.SerialPort>oggetto può generare un <xref:System.ServiceProcess.TimeoutException>mentre è in attesa per il dispositivo sia pronto per accettare più dati.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       Per impostazione predefinita, <xref:System.IO.Ports.SerialPort>utilizza <xref:System.Text.ASCIIEncoding>per codificare i caratteri.</xref:System.Text.ASCIIEncoding> </xref:System.IO.Ports.SerialPort> <xref:System.Text.ASCIIEncoding>codifica di tutti i caratteri maggiori di 127 come (char) 63 o &quot;?&quot;.</xref:System.Text.ASCIIEncoding> Per supportare caratteri aggiuntivi in tale intervallo, impostare <xref:System.IO.Ports.SerialPort.Encoding%2A>per <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, o <xref:System.Text.UnicodeEncoding>.</xref:System.Text.UnicodeEncoding> </xref:System.Text.UTF32Encoding> </xref:System.Text.UTF8Encoding> </xref:System.IO.Ports.SerialPort.Encoding%2A>"
  syntax:
    content: public void Write (char[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Matrice di caratteri che contiene i dati da scrivere sulla porta."
    - id: offset
      type: System.Int32
      description: "Offset dei byte in base zero nel `buffer` parametro in corrispondenza del quale iniziare la copia dei byte sulla porta."
    - id: count
      type: System.Int32
      description: "Il numero di caratteri da scrivere."
  overload: System.IO.Ports.SerialPort.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>buffer</code> passed is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La porta specificata non è aperta."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il <code> offset </code> o <code> count </code> i parametri sono di fuori dell&quot;area di validità del <code> buffer </code> passati. Either <code>offset</code> or <code>count</code> is less than zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>Oltre a <code>count</code> è maggiore della lunghezza del <code>buffer</code>."
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "L&quot;operazione non è stata completata prima che il periodo di timeout."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.WriteBufferSize
  id: WriteBufferSize
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: WriteBufferSize
  nameWithType: SerialPort.WriteBufferSize
  fullName: System.IO.Ports.SerialPort.WriteBufferSize
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene o imposta la dimensione del buffer di output della porta seriale."
  remarks: "La proprietà WriteBufferSize ignora qualsiasi valore inferiore a 2048."
  syntax:
    content: public int WriteBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Le dimensioni del buffer di output. Il valore predefinito è 2048."
  overload: System.IO.Ports.SerialPort.WriteBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore WriteBufferSize è minore o uguale a zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La proprietà WriteBufferSize è stata impostata durante il flusso è stato aperto."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "La proprietà WriteBufferSize è stata impostata su un valore intero dispari."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: SerialPort.WriteLine(String)
  fullName: System.IO.Ports.SerialPort.WriteLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Scrive la stringa specificata e <xref:System.IO.Ports.SerialPort.NewLine*>valore per il buffer di output.</xref:System.IO.Ports.SerialPort.NewLine*>"
  remarks: "Se sono presenti troppi byte nel buffer di input e <xref:System.IO.Ports.SerialPort.Handshake%2A>è impostato su <xref:System.IO.Ports.Handshake>il <xref:System.IO.Ports.SerialPort>oggetto può generare un <xref:System.ServiceProcess.TimeoutException>mentre è in attesa per il dispositivo sia pronto per accettare più dati.</xref:System.ServiceProcess.TimeoutException> </xref:System.IO.Ports.SerialPort> </xref:System.IO.Ports.Handshake> </xref:System.IO.Ports.SerialPort.Handshake%2A>       L&quot;output scritto include la <xref:System.IO.Ports.SerialPort.NewLine%2A>stringa.</xref:System.IO.Ports.SerialPort.NewLine%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/m-system.io.ports.serial_1_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/m-system.io.ports.serial_1_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/m-system.io.ports.serial_1_1.vb)]"
  syntax:
    content: public void WriteLine (string text);
    parameters:
    - id: text
      type: System.String
      description: "Stringa da scrivere nel buffer di output."
  overload: System.IO.Ports.SerialPort.WriteLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>str</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La porta specificata non è aperta."
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "Il metodo WriteLine Impossibile scrivere nel flusso."
  platform:
  - net462
- uid: System.IO.Ports.SerialPort.WriteTimeout
  id: WriteTimeout
  parent: System.IO.Ports.SerialPort
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SerialPort.WriteTimeout
  fullName: System.IO.Ports.SerialPort.WriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.IO.Ports
  summary: "Ottiene o imposta il numero di millisecondi prima del timeout quando un&quot;operazione di scrittura non viene completata."
  remarks: "Il valore di timeout di scrittura è stato originariamente impostato su 500 millisecondi nell&quot;API di comunicazione Win32. Questa proprietà consente di impostare questo valore. Il timeout può essere impostato su qualsiasi valore maggiore di zero o impostato su <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, nel qual caso si verifica alcun timeout.</xref:System.IO.Ports.SerialPort.InfiniteTimeout> <xref:System.IO.Ports.SerialPort.InfiniteTimeout>è il valore predefinito.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>      > [!NOTE] > Gli utenti dell&quot;interfaccia non gestita `COMMTIMEOUTS` struttura prevedibile impostare il valore di timeout su zero per sopprimere i timeout. Per eliminare i timeout con la proprietà WriteTimeout, tuttavia, è necessario specificare <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.</xref:System.IO.Ports.SerialPort.InfiniteTimeout>       Questa proprietà non influisce sul <xref:System.IO.Stream.BeginWrite%2A>il flusso restituito dal metodo di <xref:System.IO.Ports.SerialPort.BaseStream%2A>proprietà.</xref:System.IO.Ports.SerialPort.BaseStream%2A> </xref:System.IO.Stream.BeginWrite%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable. In this example, the users are prompted for the port settings and a username before chatting. This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.  \n  \n [!code-cpp[System.IO.Ports.SerialPort#01](~/add/codesnippet/cpp/p-system.io.ports.serial_5_1.cpp)]\n [!code-cs[System.IO.Ports.SerialPort#01](~/add/codesnippet/csharp/p-system.io.ports.serial_5_1.cs)]\n [!code-vb[System.IO.Ports.SerialPort#01](~/add/codesnippet/visualbasic/p-system.io.ports.serial_5_1.vb)]"
  syntax:
    content: public int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "Il numero di millisecondi prima del timeout. Il valore predefinito è <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>."
  overload: System.IO.Ports.SerialPort.WriteTimeout*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The port is in an invalid state.  \n  \n \\- or -  \n  \n An attempt to set the state of the underlying port failed. For example, the parameters passed from this <xref href=\"System.IO.Ports.SerialPort\"></xref> object were invalid."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore WriteTimeout è minore di zero e non è uguale a <xref href=&quot;System.IO.Ports.SerialPort.InfiniteTimeout&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.TimeoutException
  isExternal: true
  name: System.TimeoutException
- uid: System.ServiceProcess.TimeoutException
  parent: System.ServiceProcess
  isExternal: false
  name: TimeoutException
  nameWithType: TimeoutException
  fullName: System.ServiceProcess.TimeoutException
- uid: System.IO.Ports.SerialPort.#ctor
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort()
  nameWithType: SerialPort.SerialPort()
  fullName: System.IO.Ports.SerialPort.SerialPort()
- uid: System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(IContainer)
  nameWithType: SerialPort.SerialPort(IContainer)
  fullName: System.IO.Ports.SerialPort.SerialPort(IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.IO.Ports.SerialPort.#ctor(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String)
  nameWithType: SerialPort.SerialPort(String)
  fullName: System.IO.Ports.SerialPort.SerialPort(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32,Parity)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity)
- uid: System.IO.Ports.Parity
  parent: System.IO.Ports
  isExternal: false
  name: Parity
  nameWithType: Parity
  fullName: System.IO.Ports.Parity
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32,Parity,Int32)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32)
- uid: System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort(String,Int32,Parity,Int32,StopBits)
  nameWithType: SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
  fullName: System.IO.Ports.SerialPort.SerialPort(String,Int32,Parity,Int32,StopBits)
- uid: System.IO.Ports.StopBits
  parent: System.IO.Ports
  isExternal: false
  name: StopBits
  nameWithType: StopBits
  fullName: System.IO.Ports.StopBits
- uid: System.IO.Ports.SerialPort.BaseStream
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaseStream
  nameWithType: SerialPort.BaseStream
  fullName: System.IO.Ports.SerialPort.BaseStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Ports.SerialPort.BaudRate
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaudRate
  nameWithType: SerialPort.BaudRate
  fullName: System.IO.Ports.SerialPort.BaudRate
- uid: System.IO.Ports.SerialPort.BreakState
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BreakState
  nameWithType: SerialPort.BreakState
  fullName: System.IO.Ports.SerialPort.BreakState
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Ports.SerialPort.BytesToRead
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToRead
  nameWithType: SerialPort.BytesToRead
  fullName: System.IO.Ports.SerialPort.BytesToRead
- uid: System.IO.Ports.SerialPort.BytesToWrite
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToWrite
  nameWithType: SerialPort.BytesToWrite
  fullName: System.IO.Ports.SerialPort.BytesToWrite
- uid: System.IO.Ports.SerialPort.CDHolding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CDHolding
  nameWithType: SerialPort.CDHolding
  fullName: System.IO.Ports.SerialPort.CDHolding
- uid: System.IO.Ports.SerialPort.Close
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Close()
  nameWithType: SerialPort.Close()
  fullName: System.IO.Ports.SerialPort.Close()
- uid: System.IO.Ports.SerialPort.CtsHolding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CtsHolding
  nameWithType: SerialPort.CtsHolding
  fullName: System.IO.Ports.SerialPort.CtsHolding
- uid: System.IO.Ports.SerialPort.DataBits
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DataBits
  nameWithType: SerialPort.DataBits
  fullName: System.IO.Ports.SerialPort.DataBits
- uid: System.IO.Ports.SerialPort.DataReceived
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DataReceived
  nameWithType: SerialPort.DataReceived
  fullName: System.IO.Ports.SerialPort.DataReceived
- uid: System.IO.Ports.SerialDataReceivedEventHandler
  parent: System.IO.Ports
  isExternal: false
  name: SerialDataReceivedEventHandler
  nameWithType: SerialDataReceivedEventHandler
  fullName: System.IO.Ports.SerialDataReceivedEventHandler
- uid: System.IO.Ports.SerialPort.DiscardInBuffer
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardInBuffer()
  nameWithType: SerialPort.DiscardInBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardInBuffer()
- uid: System.IO.Ports.SerialPort.DiscardNull
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardNull
  nameWithType: SerialPort.DiscardNull
  fullName: System.IO.Ports.SerialPort.DiscardNull
- uid: System.IO.Ports.SerialPort.DiscardOutBuffer
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardOutBuffer()
  nameWithType: SerialPort.DiscardOutBuffer()
  fullName: System.IO.Ports.SerialPort.DiscardOutBuffer()
- uid: System.IO.Ports.SerialPort.Dispose(System.Boolean)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SerialPort.Dispose(Boolean)
  fullName: System.IO.Ports.SerialPort.Dispose(Boolean)
- uid: System.IO.Ports.SerialPort.DsrHolding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DsrHolding
  nameWithType: SerialPort.DsrHolding
  fullName: System.IO.Ports.SerialPort.DsrHolding
- uid: System.IO.Ports.SerialPort.DtrEnable
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DtrEnable
  nameWithType: SerialPort.DtrEnable
  fullName: System.IO.Ports.SerialPort.DtrEnable
- uid: System.IO.Ports.SerialPort.Encoding
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Encoding
  nameWithType: SerialPort.Encoding
  fullName: System.IO.Ports.SerialPort.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.Ports.SerialPort.ErrorReceived
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ErrorReceived
  nameWithType: SerialPort.ErrorReceived
  fullName: System.IO.Ports.SerialPort.ErrorReceived
- uid: System.IO.Ports.SerialErrorReceivedEventHandler
  parent: System.IO.Ports
  isExternal: false
  name: SerialErrorReceivedEventHandler
  nameWithType: SerialErrorReceivedEventHandler
  fullName: System.IO.Ports.SerialErrorReceivedEventHandler
- uid: System.IO.Ports.SerialPort.GetPortNames
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: GetPortNames()
  nameWithType: SerialPort.GetPortNames()
  fullName: System.IO.Ports.SerialPort.GetPortNames()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Ports.SerialPort.Handshake
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Handshake
  nameWithType: SerialPort.Handshake
  fullName: System.IO.Ports.SerialPort.Handshake
- uid: System.IO.Ports.Handshake
  parent: System.IO.Ports
  isExternal: false
  name: Handshake
  nameWithType: Handshake
  fullName: System.IO.Ports.Handshake
- uid: System.IO.Ports.SerialPort.InfiniteTimeout
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: InfiniteTimeout
  nameWithType: SerialPort.InfiniteTimeout
  fullName: System.IO.Ports.SerialPort.InfiniteTimeout
- uid: System.IO.Ports.SerialPort.IsOpen
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: IsOpen
  nameWithType: SerialPort.IsOpen
  fullName: System.IO.Ports.SerialPort.IsOpen
- uid: System.IO.Ports.SerialPort.NewLine
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: NewLine
  nameWithType: SerialPort.NewLine
  fullName: System.IO.Ports.SerialPort.NewLine
- uid: System.IO.Ports.SerialPort.Open
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Open()
  nameWithType: SerialPort.Open()
  fullName: System.IO.Ports.SerialPort.Open()
- uid: System.IO.Ports.SerialPort.Parity
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Parity
  nameWithType: SerialPort.Parity
  fullName: System.IO.Ports.SerialPort.Parity
- uid: System.IO.Ports.SerialPort.ParityReplace
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ParityReplace
  nameWithType: SerialPort.ParityReplace
  fullName: System.IO.Ports.SerialPort.ParityReplace
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.IO.Ports.SerialPort.PinChanged
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: PinChanged
  nameWithType: SerialPort.PinChanged
  fullName: System.IO.Ports.SerialPort.PinChanged
- uid: System.IO.Ports.SerialPinChangedEventHandler
  parent: System.IO.Ports
  isExternal: false
  name: SerialPinChangedEventHandler
  nameWithType: SerialPinChangedEventHandler
  fullName: System.IO.Ports.SerialPinChangedEventHandler
- uid: System.IO.Ports.SerialPort.PortName
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: PortName
  nameWithType: SerialPort.PortName
  fullName: System.IO.Ports.SerialPort.PortName
- uid: System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: SerialPort.Read(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Read(Char[],Int32,Int32)
  nameWithType: SerialPort.Read(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Read(Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Ports.SerialPort.ReadBufferSize
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadBufferSize
  nameWithType: SerialPort.ReadBufferSize
  fullName: System.IO.Ports.SerialPort.ReadBufferSize
- uid: System.IO.Ports.SerialPort.ReadByte
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadByte()
  nameWithType: SerialPort.ReadByte()
  fullName: System.IO.Ports.SerialPort.ReadByte()
- uid: System.IO.Ports.SerialPort.ReadChar
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadChar()
  nameWithType: SerialPort.ReadChar()
  fullName: System.IO.Ports.SerialPort.ReadChar()
- uid: System.IO.Ports.SerialPort.ReadExisting
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadExisting()
  nameWithType: SerialPort.ReadExisting()
  fullName: System.IO.Ports.SerialPort.ReadExisting()
- uid: System.IO.Ports.SerialPort.ReadLine
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadLine()
  nameWithType: SerialPort.ReadLine()
  fullName: System.IO.Ports.SerialPort.ReadLine()
- uid: System.IO.Ports.SerialPort.ReadTimeout
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTimeout
  nameWithType: SerialPort.ReadTimeout
  fullName: System.IO.Ports.SerialPort.ReadTimeout
- uid: System.IO.Ports.SerialPort.ReadTo(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTo(String)
  nameWithType: SerialPort.ReadTo(String)
  fullName: System.IO.Ports.SerialPort.ReadTo(String)
- uid: System.IO.Ports.SerialPort.ReceivedBytesThreshold
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReceivedBytesThreshold
  nameWithType: SerialPort.ReceivedBytesThreshold
  fullName: System.IO.Ports.SerialPort.ReceivedBytesThreshold
- uid: System.IO.Ports.SerialPort.RtsEnable
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: RtsEnable
  nameWithType: SerialPort.RtsEnable
  fullName: System.IO.Ports.SerialPort.RtsEnable
- uid: System.IO.Ports.SerialPort.StopBits
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: StopBits
  nameWithType: SerialPort.StopBits
  fullName: System.IO.Ports.SerialPort.StopBits
- uid: System.IO.Ports.SerialPort.Write(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write(String)
  nameWithType: SerialPort.Write(String)
  fullName: System.IO.Ports.SerialPort.Write(String)
- uid: System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: SerialPort.Write(Byte[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Byte[],Int32,Int32)
- uid: System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write(Char[],Int32,Int32)
  nameWithType: SerialPort.Write(Char[],Int32,Int32)
  fullName: System.IO.Ports.SerialPort.Write(Char[],Int32,Int32)
- uid: System.IO.Ports.SerialPort.WriteBufferSize
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteBufferSize
  nameWithType: SerialPort.WriteBufferSize
  fullName: System.IO.Ports.SerialPort.WriteBufferSize
- uid: System.IO.Ports.SerialPort.WriteLine(System.String)
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteLine(String)
  nameWithType: SerialPort.WriteLine(String)
  fullName: System.IO.Ports.SerialPort.WriteLine(String)
- uid: System.IO.Ports.SerialPort.WriteTimeout
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteTimeout
  nameWithType: SerialPort.WriteTimeout
  fullName: System.IO.Ports.SerialPort.WriteTimeout
- uid: System.IO.Ports.SerialPort.#ctor*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: SerialPort
  nameWithType: SerialPort.SerialPort
- uid: System.IO.Ports.SerialPort.BaseStream*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaseStream
  nameWithType: SerialPort.BaseStream
- uid: System.IO.Ports.SerialPort.BaudRate*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BaudRate
  nameWithType: SerialPort.BaudRate
- uid: System.IO.Ports.SerialPort.BreakState*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BreakState
  nameWithType: SerialPort.BreakState
- uid: System.IO.Ports.SerialPort.BytesToRead*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToRead
  nameWithType: SerialPort.BytesToRead
- uid: System.IO.Ports.SerialPort.BytesToWrite*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: BytesToWrite
  nameWithType: SerialPort.BytesToWrite
- uid: System.IO.Ports.SerialPort.CDHolding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CDHolding
  nameWithType: SerialPort.CDHolding
- uid: System.IO.Ports.SerialPort.Close*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Close
  nameWithType: SerialPort.Close
- uid: System.IO.Ports.SerialPort.CtsHolding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: CtsHolding
  nameWithType: SerialPort.CtsHolding
- uid: System.IO.Ports.SerialPort.DataBits*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DataBits
  nameWithType: SerialPort.DataBits
- uid: System.IO.Ports.SerialPort.DiscardInBuffer*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardInBuffer
  nameWithType: SerialPort.DiscardInBuffer
- uid: System.IO.Ports.SerialPort.DiscardNull*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardNull
  nameWithType: SerialPort.DiscardNull
- uid: System.IO.Ports.SerialPort.DiscardOutBuffer*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DiscardOutBuffer
  nameWithType: SerialPort.DiscardOutBuffer
- uid: System.IO.Ports.SerialPort.Dispose*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Dispose
  nameWithType: SerialPort.Dispose
- uid: System.IO.Ports.SerialPort.DsrHolding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DsrHolding
  nameWithType: SerialPort.DsrHolding
- uid: System.IO.Ports.SerialPort.DtrEnable*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: DtrEnable
  nameWithType: SerialPort.DtrEnable
- uid: System.IO.Ports.SerialPort.Encoding*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Encoding
  nameWithType: SerialPort.Encoding
- uid: System.IO.Ports.SerialPort.GetPortNames*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: GetPortNames
  nameWithType: SerialPort.GetPortNames
- uid: System.IO.Ports.SerialPort.Handshake*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Handshake
  nameWithType: SerialPort.Handshake
- uid: System.IO.Ports.SerialPort.IsOpen*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: IsOpen
  nameWithType: SerialPort.IsOpen
- uid: System.IO.Ports.SerialPort.NewLine*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: NewLine
  nameWithType: SerialPort.NewLine
- uid: System.IO.Ports.SerialPort.Open*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Open
  nameWithType: SerialPort.Open
- uid: System.IO.Ports.SerialPort.Parity*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Parity
  nameWithType: SerialPort.Parity
- uid: System.IO.Ports.SerialPort.ParityReplace*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ParityReplace
  nameWithType: SerialPort.ParityReplace
- uid: System.IO.Ports.SerialPort.PortName*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: PortName
  nameWithType: SerialPort.PortName
- uid: System.IO.Ports.SerialPort.Read*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Read
  nameWithType: SerialPort.Read
- uid: System.IO.Ports.SerialPort.ReadBufferSize*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadBufferSize
  nameWithType: SerialPort.ReadBufferSize
- uid: System.IO.Ports.SerialPort.ReadByte*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadByte
  nameWithType: SerialPort.ReadByte
- uid: System.IO.Ports.SerialPort.ReadChar*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadChar
  nameWithType: SerialPort.ReadChar
- uid: System.IO.Ports.SerialPort.ReadExisting*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadExisting
  nameWithType: SerialPort.ReadExisting
- uid: System.IO.Ports.SerialPort.ReadLine*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadLine
  nameWithType: SerialPort.ReadLine
- uid: System.IO.Ports.SerialPort.ReadTimeout*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTimeout
  nameWithType: SerialPort.ReadTimeout
- uid: System.IO.Ports.SerialPort.ReadTo*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReadTo
  nameWithType: SerialPort.ReadTo
- uid: System.IO.Ports.SerialPort.ReceivedBytesThreshold*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: ReceivedBytesThreshold
  nameWithType: SerialPort.ReceivedBytesThreshold
- uid: System.IO.Ports.SerialPort.RtsEnable*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: RtsEnable
  nameWithType: SerialPort.RtsEnable
- uid: System.IO.Ports.SerialPort.StopBits*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: StopBits
  nameWithType: SerialPort.StopBits
- uid: System.IO.Ports.SerialPort.Write*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: Write
  nameWithType: SerialPort.Write
- uid: System.IO.Ports.SerialPort.WriteBufferSize*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteBufferSize
  nameWithType: SerialPort.WriteBufferSize
- uid: System.IO.Ports.SerialPort.WriteLine*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteLine
  nameWithType: SerialPort.WriteLine
- uid: System.IO.Ports.SerialPort.WriteTimeout*
  parent: System.IO.Ports.SerialPort
  isExternal: false
  name: WriteTimeout
  nameWithType: SerialPort.WriteTimeout
