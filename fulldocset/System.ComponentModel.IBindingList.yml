### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.IBindingList
  id: IBindingList
  children:
  - System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.IBindingList.AddNew
  - System.ComponentModel.IBindingList.AllowEdit
  - System.ComponentModel.IBindingList.AllowNew
  - System.ComponentModel.IBindingList.AllowRemove
  - System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  - System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)
  - System.ComponentModel.IBindingList.IsSorted
  - System.ComponentModel.IBindingList.ListChanged
  - System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.IBindingList.RemoveSort
  - System.ComponentModel.IBindingList.SortDirection
  - System.ComponentModel.IBindingList.SortProperty
  - System.ComponentModel.IBindingList.SupportsChangeNotification
  - System.ComponentModel.IBindingList.SupportsSearching
  - System.ComponentModel.IBindingList.SupportsSorting
  langs:
  - csharp
  name: IBindingList
  nameWithType: IBindingList
  fullName: System.ComponentModel.IBindingList
  type: Interface
  summary: "Fornisce le funzionalità necessarie per supportare scenari semplici e complessi durante l&quot;associazione a un&quot;origine dati."
  remarks: "Questa interfaccia viene implementata dalla <xref:System.Data.DataView>classe.</xref:System.Data.DataView> Implementazione di un metodo deve presentare lo stesso comportamento dell&quot;implementazione di tale metodo nella <xref:System.Data.DataView>classe.</xref:System.Data.DataView>       Quando si chiama il <xref:System.ComponentModel.IBindingList.ApplySort%2A>o <xref:System.ComponentModel.IBindingList.RemoveSort%2A>metodi, è necessario generare un <xref:System.ComponentModel.IBindingList.ListChanged>evento con il <xref:System.ComponentModel.ListChangedType>enumerazione.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged> </xref:System.ComponentModel.IBindingList.RemoveSort%2A> </xref:System.ComponentModel.IBindingList.ApplySort%2A>       Quando si chiama il <xref:System.ComponentModel.IBindingList.AddNew%2A>(metodo), è necessario generare un <xref:System.ComponentModel.IBindingList.ListChanged>evento con il <xref:System.ComponentModel.ListChangedType>enumerazione l&quot;indice appropriato.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged> </xref:System.ComponentModel.IBindingList.AddNew%2A> La riga aggiunta è in uno stato in cui premendo il tasto ESC per un <xref:System.Windows.Forms.DataGridView>controllo è possibile rimuovere la nuova riga.</xref:System.Windows.Forms.DataGridView> Generazione di <xref:System.ComponentModel.IBindingList.ListChanged>evento con il <xref:System.ComponentModel.ListChangedType>enumerazione una seconda volta su questa riga indica che l&quot;elemento è ora una riga non nello stato di &quot;new&quot;.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged>       Quando si rimuove un elemento o una chiamata di <xref:System.ComponentModel.IEditableObject.CancelEdit%2A>metodo in una nuova riga (se la riga implementi <xref:System.ComponentModel.IEditableObject>), è necessario generare un <xref:System.ComponentModel.IBindingList.ListChanged>evento con il <xref:System.ComponentModel.ListChangedType>enumerazione l&quot;indice appropriato.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged> </xref:System.ComponentModel.IEditableObject> </xref:System.ComponentModel.IEditableObject.CancelEdit%2A>"
  example:
  - "The following example provides a simple implementation of the IBindingList interface. The `CustomerList` class stores customer information in a list. This example assumes that you have used the `Customer` class that can be found in the example in the <xref:System.ComponentModel.IEditableObject> class.  \n  \n [!code-cs[Binding_Editable#2](~/add/codesnippet/csharp/t-system.componentmodel._23_1.cs)]\n [!code-cpp[Binding_Editable#2](~/add/codesnippet/cpp/t-system.componentmodel._23_1.cpp)]\n [!code-vb[Binding_Editable#2](~/add/codesnippet/visualbasic/t-system.componentmodel._23_1.vb)]"
  syntax:
    content: 'public interface IBindingList : System.Collections.IList'
  implements:
  - System.Collections.IList
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)
  id: AddIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AddIndex(PropertyDescriptor)
  nameWithType: IBindingList.AddIndex(PropertyDescriptor)
  fullName: System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Aggiunge il <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> per gli indici utilizzati per la ricerca."
  remarks: "L&quot;elenco deve supportare questo metodo. Tuttavia, il supporto per questo metodo non può essere un&quot;operazione."
  syntax:
    content: public void AddIndex (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "Il <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> per aggiungere gli indici utilizzati per la ricerca."
  overload: System.ComponentModel.IBindingList.AddIndex*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AddNew
  id: AddNew
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AddNew()
  nameWithType: IBindingList.AddNew()
  fullName: System.ComponentModel.IBindingList.AddNew()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Aggiunge un nuovo elemento all&quot;elenco."
  remarks: "Questo metodo è supportato solo se <xref:System.ComponentModel.IBindingList.AllowNew%2A>è `true`; in caso contrario, un <xref:System.NotSupportedException>viene generata un&quot;eccezione.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.AllowNew%2A>       Implementazione di questo metodo indica che il <xref:System.ComponentModel.IBindingList>elenco deve comprendere il tipo di oggetti da aggiungere all&quot;elenco e deve comprendere come creare una nuova istanza di quel tipo.</xref:System.ComponentModel.IBindingList> Ad esempio, se si dispone di una raccolta di `myCustomer` oggetti, il metodo AddNew aggiunge un nuovo `myCustomer` oggetto all&quot;elenco.      > [!NOTE] > Se implementano gli oggetti in questo elenco il <xref:System.ComponentModel.IEditableObject>interfaccia, la chiamata di <xref:System.ComponentModel.IEditableObject.CancelEdit%2A>metodo è necessario annullare un oggetto, non aggiungerlo all&quot;elenco, quando l&quot;oggetto è stato creato utilizzando il metodo AddNew.</xref:System.ComponentModel.IEditableObject.CancelEdit%2A> </xref:System.ComponentModel.IEditableObject> L&quot;oggetto deve essere aggiunto solo all&quot;elenco quando il <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName>metodo viene chiamato.</xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName> Di conseguenza, è necessario sincronizzare l&quot;oggetto e l&quot;elenco con attenzione.       Quando viene chiamato questo metodo, è necessario generare un <xref:System.ComponentModel.IBindingList.ListChanged>evento con il <xref:System.ComponentModel.ListChangedType>enumerazione l&quot;indice appropriato.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged> La riga aggiunta è in uno stato in cui premendo Esc una <xref:System.Windows.Forms.DataGridView>controllo è possibile rimuovere la nuova riga.</xref:System.Windows.Forms.DataGridView> Generazione di <xref:System.ComponentModel.IBindingList.ListChanged>evento con il <xref:System.ComponentModel.ListChangedType>enumerazione una seconda volta su questa riga indica che l&quot;elemento è ora una riga normale (non in stato nuovo).</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged>"
  syntax:
    content: public object AddNew ();
    parameters: []
    return:
      type: System.Object
      description: "L&quot;elemento aggiunto all&quot;elenco."
  overload: System.ComponentModel.IBindingList.AddNew*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.AllowNew*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.AllowNew*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AllowEdit
  id: AllowEdit
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AllowEdit
  nameWithType: IBindingList.AllowEdit
  fullName: System.ComponentModel.IBindingList.AllowEdit
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se è possibile aggiornare gli elementi dell&quot;elenco."
  syntax:
    content: public bool AllowEdit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è possibile aggiornare gli elementi nell&quot;elenco. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.AllowEdit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AllowNew
  id: AllowNew
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AllowNew
  nameWithType: IBindingList.AllowNew
  fullName: System.ComponentModel.IBindingList.AllowNew
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se è possibile aggiungere elementi all&quot;elenco utilizzando <xref:System.ComponentModel.IBindingList.AddNew*>.</xref:System.ComponentModel.IBindingList.AddNew*>"
  remarks: "Se <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName>o <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName>è `true`, questa proprietà restituisce `false`.</xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName> </xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName>"
  syntax:
    content: public bool AllowNew { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è possibile aggiungere elementi all&quot;elenco utilizzando <xref:System.ComponentModel.IBindingList.AddNew*>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.IBindingList.AddNew*>"
  overload: System.ComponentModel.IBindingList.AllowNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AllowRemove
  id: AllowRemove
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AllowRemove
  nameWithType: IBindingList.AllowRemove
  fullName: System.ComponentModel.IBindingList.AllowRemove
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se è possibile rimuovere elementi dall&quot;elenco, utilizzando <> </> *> o <> </> *>."
  remarks: "Se <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName>o <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName>è `true`, questa proprietà restituisce `false`.</xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName> </xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName>      > [!NOTE] > AllowRemove se restituisce `false` <xref:System.Collections.IList.Remove%2A?displayProperty=fullName>e <xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName>Genera un <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName> </xref:System.Collections.IList.Remove%2A?displayProperty=fullName>"
  syntax:
    content: public bool AllowRemove { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è possibile rimuovere elementi dall&quot;elenco. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.AllowRemove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  id: ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: ApplySort(PropertyDescriptor,ListSortDirection)
  nameWithType: IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  fullName: System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ordina l&quot;elenco in base a un <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> e <xref href=&quot;System.ComponentModel.ListSortDirection&quot;> </xref>."
  remarks: "Se gli elementi vengono aggiunti o rimossi, questi elementi vengono inseriti nell&quot;ordine dell&quot;ordinamento.       Questo metodo è supportato se <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>è `true`; in caso contrario, questo metodo genera un <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>"
  syntax:
    content: public void ApplySort (System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection direction);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "Il <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> eseguire l&quot;ordinamento."
    - id: direction
      type: System.ComponentModel.ListSortDirection
      description: "Uno del <xref href=&quot;System.ComponentModel.ListSortDirection&quot;> </xref> valori."
  overload: System.ComponentModel.IBindingList.ApplySort*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)
  id: Find(System.ComponentModel.PropertyDescriptor,System.Object)
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: Find(PropertyDescriptor,Object)
  nameWithType: IBindingList.Find(PropertyDescriptor,Object)
  fullName: System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce l&quot;indice della riga con il determinato <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>."
  remarks: "Questo metodo verrà selezionata la prima riga in cui il valore della `property` parametro è uguale al valore del `key` parametro.       Questo metodo è supportato se <xref:System.ComponentModel.IBindingList.SupportsSearching%2A>è `true`, in caso contrario questo metodo genera un <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSearching%2A>"
  example:
  - "The following code example demonstrates how to implement the Find method.  \n  \n [!code-cs[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/add/codesnippet/csharp/03c83841-f554-4f60-86f9-_1.cs)]\n [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/add/codesnippet/visualbasic/03c83841-f554-4f60-86f9-_1.vb)]"
  syntax:
    content: public int Find (System.ComponentModel.PropertyDescriptor property, object key);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "Il <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> eseguire la ricerca."
    - id: key
      type: System.Object
      description: "Il valore di `property` parametro da cercare."
    return:
      type: System.Int32
      description: "L&quot;indice della riga con il determinato <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.Find*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSearching*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSearching*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.IsSorted
  id: IsSorted
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: IsSorted
  nameWithType: IBindingList.IsSorted
  fullName: System.ComponentModel.IBindingList.IsSorted
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se l&quot;ordinamento degli elementi nell&quot;elenco."
  remarks: "Questa proprietà è supportata se <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>è `true`; in caso contrario, questa proprietà genera un <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>       Se la proprietà IsSorted restituisce `true`, gli elementi vengono aggiunti o rimossi sequenza di ordinamento."
  syntax:
    content: public bool IsSorted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <> </> *> è stato chiamato e <> </> *> non è stato chiamato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.IsSorted*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.ListChanged
  id: ListChanged
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: ListChanged
  nameWithType: IBindingList.ListChanged
  fullName: System.ComponentModel.IBindingList.ListChanged
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Si verifica quando viene modificato l&quot;elenco o un elemento nell&quot;elenco."
  remarks: "Questo evento viene generato solo se il <xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A>proprietà `true`.</xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A>"
  syntax:
    content: public event System.ComponentModel.ListChangedEventHandler ListChanged;
    return:
      type: System.ComponentModel.ListChangedEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)
  id: RemoveIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: RemoveIndex(PropertyDescriptor)
  nameWithType: IBindingList.RemoveIndex(PropertyDescriptor)
  fullName: System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Rimuove il <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> dagli indici utilizzati per la ricerca."
  remarks: "L&quot;elenco deve supportare questo metodo. Tuttavia, il supporto per questo metodo non può essere un&quot;operazione."
  syntax:
    content: public void RemoveIndex (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "Il <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> per rimuovere gli indici utilizzati per la ricerca."
  overload: System.ComponentModel.IBindingList.RemoveIndex*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.RemoveSort
  id: RemoveSort
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: RemoveSort()
  nameWithType: IBindingList.RemoveSort()
  fullName: System.ComponentModel.IBindingList.RemoveSort()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Rimuove qualsiasi ordinamento applicato tramite <xref:System.ComponentModel.IBindingList.ApplySort*>.</xref:System.ComponentModel.IBindingList.ApplySort*>"
  remarks: "Questa proprietà è supportata se <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>è `true`; in caso contrario, questa proprietà genera un <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>       Quando si chiama questo metodo, è necessario generare un <xref:System.ComponentModel.IBindingList.ListChanged>evento con il <xref:System.ComponentModel.ListChangedType>enumerazione.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged>"
  syntax:
    content: public void RemoveSort ();
    parameters: []
  overload: System.ComponentModel.IBindingList.RemoveSort*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SortDirection
  id: SortDirection
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SortDirection
  nameWithType: IBindingList.SortDirection
  fullName: System.ComponentModel.IBindingList.SortDirection
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene la direzione dell&quot;ordinamento."
  remarks: "Questa proprietà è supportata se <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>è `true`; in caso contrario, questa proprietà genera un <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>"
  syntax:
    content: public System.ComponentModel.ListSortDirection SortDirection { get; }
    return:
      type: System.ComponentModel.ListSortDirection
      description: "Uno del <xref href=&quot;System.ComponentModel.ListSortDirection&quot;> </xref> valori."
  overload: System.ComponentModel.IBindingList.SortDirection*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SortProperty
  id: SortProperty
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SortProperty
  nameWithType: IBindingList.SortProperty
  fullName: System.ComponentModel.IBindingList.SortProperty
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> che viene utilizzato per l&quot;ordinamento."
  remarks: "Questa proprietà è supportata se <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>è `true`; in caso contrario, questa proprietà genera un <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptor SortProperty { get; }
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "Il <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> che viene utilizzato per l&quot;ordinamento."
  overload: System.ComponentModel.IBindingList.SortProperty*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SupportsChangeNotification
  id: SupportsChangeNotification
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SupportsChangeNotification
  nameWithType: IBindingList.SupportsChangeNotification
  fullName: System.ComponentModel.IBindingList.SupportsChangeNotification
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene se un <xref href=&quot;System.ComponentModel.IBindingList.ListChanged&quot;> </xref> evento viene generato quando viene modificato l&quot;elenco o un elemento nell&quot;elenco."
  remarks: "Gli oggetti dell&quot;elenco devono segnalare all&quot;elenco quando vengono modificati, pertanto l&quot;elenco può generare un <xref:System.ComponentModel.IBindingList.ListChanged>evento.</xref:System.ComponentModel.IBindingList.ListChanged>"
  syntax:
    content: public bool SupportsChangeNotification { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se un <xref href=&quot;System.ComponentModel.IBindingList.ListChanged&quot;> </xref> evento viene generato quando viene modificato l&quot;elenco o un elemento; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.SupportsChangeNotification*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SupportsSearching
  id: SupportsSearching
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SupportsSearching
  nameWithType: IBindingList.SupportsSearching
  fullName: System.ComponentModel.IBindingList.SupportsSearching
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se l&quot;elenco supporta la ricerca utilizzando il <xref:System.ComponentModel.IBindingList.Find*>metodo.</xref:System.ComponentModel.IBindingList.Find*>"
  remarks: ''
  example:
  - "The following code example demonstrates how to implement the SupportsSearching property.  \n  \n [!code-cs[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/add/codesnippet/csharp/p-system.componentmodel._7_1.cs)]\n [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/add/codesnippet/visualbasic/p-system.componentmodel._7_1.vb)]"
  syntax:
    content: public bool SupportsSearching { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;elenco supporta la ricerca con il <xref:System.ComponentModel.IBindingList.Find*>metodo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.IBindingList.Find*>"
  overload: System.ComponentModel.IBindingList.SupportsSearching*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SupportsSorting
  id: SupportsSorting
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SupportsSorting
  nameWithType: IBindingList.SupportsSorting
  fullName: System.ComponentModel.IBindingList.SupportsSorting
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se l&quot;elenco supporta l&quot;ordinamento."
  remarks: "Se questa proprietà è `true`, quindi <xref:System.ComponentModel.IBindingList.IsSorted%2A>, <xref:System.ComponentModel.IBindingList.SortProperty%2A>, <xref:System.ComponentModel.IBindingList.SortDirection%2A>, <xref:System.ComponentModel.IBindingList.ApplySort%2A>, e <xref:System.ComponentModel.IBindingList.RemoveSort%2A>sono supportati.</xref:System.ComponentModel.IBindingList.RemoveSort%2A> </xref:System.ComponentModel.IBindingList.ApplySort%2A> </xref:System.ComponentModel.IBindingList.SortDirection%2A> </xref:System.ComponentModel.IBindingList.SortProperty%2A> </xref:System.ComponentModel.IBindingList.IsSorted%2A>"
  syntax:
    content: public bool SupportsSorting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;elenco supporta l&quot;ordinamento. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.SupportsSorting*
  exceptions: []
  platform:
  - net462
references:
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AddIndex(PropertyDescriptor)
  nameWithType: IBindingList.AddIndex(PropertyDescriptor)
  fullName: System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.IBindingList.AddNew
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AddNew()
  nameWithType: IBindingList.AddNew()
  fullName: System.ComponentModel.IBindingList.AddNew()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.IBindingList.AllowEdit
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowEdit
  nameWithType: IBindingList.AllowEdit
  fullName: System.ComponentModel.IBindingList.AllowEdit
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.IBindingList.AllowNew
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowNew
  nameWithType: IBindingList.AllowNew
  fullName: System.ComponentModel.IBindingList.AllowNew
- uid: System.ComponentModel.IBindingList.AllowRemove
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowRemove
  nameWithType: IBindingList.AllowRemove
  fullName: System.ComponentModel.IBindingList.AllowRemove
- uid: System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: ApplySort(PropertyDescriptor,ListSortDirection)
  nameWithType: IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  fullName: System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
- uid: System.ComponentModel.ListSortDirection
  parent: System.ComponentModel
  isExternal: false
  name: ListSortDirection
  nameWithType: ListSortDirection
  fullName: System.ComponentModel.ListSortDirection
- uid: System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: Find(PropertyDescriptor,Object)
  nameWithType: IBindingList.Find(PropertyDescriptor,Object)
  fullName: System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.IBindingList.IsSorted
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: IsSorted
  nameWithType: IBindingList.IsSorted
  fullName: System.ComponentModel.IBindingList.IsSorted
- uid: System.ComponentModel.IBindingList.ListChanged
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: ListChanged
  nameWithType: IBindingList.ListChanged
  fullName: System.ComponentModel.IBindingList.ListChanged
- uid: System.ComponentModel.ListChangedEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: ListChangedEventHandler
  nameWithType: ListChangedEventHandler
  fullName: System.ComponentModel.ListChangedEventHandler
- uid: System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: RemoveIndex(PropertyDescriptor)
  nameWithType: IBindingList.RemoveIndex(PropertyDescriptor)
  fullName: System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
- uid: System.ComponentModel.IBindingList.RemoveSort
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: RemoveSort()
  nameWithType: IBindingList.RemoveSort()
  fullName: System.ComponentModel.IBindingList.RemoveSort()
- uid: System.ComponentModel.IBindingList.SortDirection
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SortDirection
  nameWithType: IBindingList.SortDirection
  fullName: System.ComponentModel.IBindingList.SortDirection
- uid: System.ComponentModel.IBindingList.SortProperty
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SortProperty
  nameWithType: IBindingList.SortProperty
  fullName: System.ComponentModel.IBindingList.SortProperty
- uid: System.ComponentModel.IBindingList.SupportsChangeNotification
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsChangeNotification
  nameWithType: IBindingList.SupportsChangeNotification
  fullName: System.ComponentModel.IBindingList.SupportsChangeNotification
- uid: System.ComponentModel.IBindingList.SupportsSearching
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsSearching
  nameWithType: IBindingList.SupportsSearching
  fullName: System.ComponentModel.IBindingList.SupportsSearching
- uid: System.ComponentModel.IBindingList.SupportsSorting
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsSorting
  nameWithType: IBindingList.SupportsSorting
  fullName: System.ComponentModel.IBindingList.SupportsSorting
- uid: System.ComponentModel.IBindingList.AddIndex*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AddIndex
  nameWithType: IBindingList.AddIndex
- uid: System.ComponentModel.IBindingList.AddNew*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AddNew
  nameWithType: IBindingList.AddNew
- uid: System.ComponentModel.IBindingList.AllowEdit*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowEdit
  nameWithType: IBindingList.AllowEdit
- uid: System.ComponentModel.IBindingList.AllowNew*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowNew
  nameWithType: IBindingList.AllowNew
- uid: System.ComponentModel.IBindingList.AllowRemove*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowRemove
  nameWithType: IBindingList.AllowRemove
- uid: System.ComponentModel.IBindingList.ApplySort*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: ApplySort
  nameWithType: IBindingList.ApplySort
- uid: System.ComponentModel.IBindingList.Find*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: Find
  nameWithType: IBindingList.Find
- uid: System.ComponentModel.IBindingList.IsSorted*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: IsSorted
  nameWithType: IBindingList.IsSorted
- uid: System.ComponentModel.IBindingList.RemoveIndex*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: RemoveIndex
  nameWithType: IBindingList.RemoveIndex
- uid: System.ComponentModel.IBindingList.RemoveSort*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: RemoveSort
  nameWithType: IBindingList.RemoveSort
- uid: System.ComponentModel.IBindingList.SortDirection*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SortDirection
  nameWithType: IBindingList.SortDirection
- uid: System.ComponentModel.IBindingList.SortProperty*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SortProperty
  nameWithType: IBindingList.SortProperty
- uid: System.ComponentModel.IBindingList.SupportsChangeNotification*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsChangeNotification
  nameWithType: IBindingList.SupportsChangeNotification
- uid: System.ComponentModel.IBindingList.SupportsSearching*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsSearching
  nameWithType: IBindingList.SupportsSearching
- uid: System.ComponentModel.IBindingList.SupportsSorting*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsSorting
  nameWithType: IBindingList.SupportsSorting
