### YamlMime:ManagedReference
items:
- uid: System.Drawing.Drawing2D.LinearGradientBrush
  id: LinearGradientBrush
  children:
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  - System.Drawing.Drawing2D.LinearGradientBrush.Blend
  - System.Drawing.Drawing2D.LinearGradientBrush.Clone
  - System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
  - System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
  - System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
  - System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
  - System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform
  - System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.Transform
  - System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
  langs:
  - csharp
  name: LinearGradientBrush
  nameWithType: LinearGradientBrush
  fullName: System.Drawing.Drawing2D.LinearGradientBrush
  type: Class
  summary: "Incapsula un <xref href=&quot;System.Drawing.Brush&quot;> </xref> con una sfumatura lineare. Questa classe non può essere ereditata."
  remarks: "Questa classe incapsula sia sfumature di due colori e sfumature più colori personalizzate.       Tutti i gradienti lineari sono definiti lungo una riga specificata in base alla larghezza di un rettangolo o da due punti.       Per impostazione predefinita, una sfumatura lineare a due colori è una sfumatura lineare orizzontale anche dal colore iniziale al colore finale lungo la riga specificata. Personalizzare il modello di blend mediante il <xref:System.Drawing.Drawing2D.Blend>(classe), il <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>, metodi o <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>metodi.</xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A> </xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A> </xref:System.Drawing.Drawing2D.Blend> Per personalizzare la direzione della sfumatura specificando il <xref:System.Drawing.Drawing2D.LinearGradientMode>enumerazione o l&quot;angolo nel costruttore.</xref:System.Drawing.Drawing2D.LinearGradientMode>       Utilizzare il <xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A>proprietà per creare una sfumatura.</xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A>       Il <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A>proprietà specifica una trasformazione geometrica locale applicata alla sfumatura.</xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A>"
  example:
  - "The following example creates a horizontal LinearGradientBrush; the color components change linearly as you move from a horizontal coordinate of 0 to a horizontal coordinate of 200. For example, a point whose first coordinate is halfway between 0 and 200 will have a blue component that is halfway between 0 and 255. This example is designed for use with Windows Forms. The following code example is designed for use with Windows Forms, and it requires the <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of <xref:System.Windows.Forms.PaintEventHandler>.  \n  \n [!code-vb[System.Drawing.UsingaGradientBrush#21](~/add/codesnippet/visualbasic/t-system.drawing.drawing_3_1.vb)]\n [!code-cs[System.Drawing.UsingaGradientBrush#21](~/add/codesnippet/csharp/t-system.drawing.drawing_3_1.cs)]"
  syntax:
    content: 'public sealed class LinearGradientBrush : System.Drawing.Brush'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Drawing.Brush
  implements: []
  inheritedMembers:
  - System.Drawing.Brush.Dispose
  - System.Drawing.Brush.Dispose(System.Boolean)
  - System.Drawing.Brush.SetNativeBrush(System.IntPtr)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)
  id: '#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(Point,Point,Color,Color)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Point,Point,Color,Color)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Point,Point,Color,Color)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> classe con i colori e i punti specificati."
  syntax:
    content: public LinearGradientBrush (System.Drawing.Point point1, System.Drawing.Point point2, System.Drawing.Color color1, System.Drawing.Color color2);
    parameters:
    - id: point1
      type: System.Drawing.Point
      description: "Oggetto <xref href=&quot;System.Drawing.Point&quot;> </xref> struttura che rappresenta il punto iniziale della sfumatura lineare."
    - id: point2
      type: System.Drawing.Point
      description: "Oggetto <xref href=&quot;System.Drawing.Point&quot;> </xref> struttura che rappresenta il punto finale della sfumatura lineare."
    - id: color1
      type: System.Drawing.Color
      description: "Oggetto <xref href=&quot;System.Drawing.Color&quot;> </xref> struttura che rappresenta il colore iniziale della sfumatura lineare."
    - id: color2
      type: System.Drawing.Color
      description: "Oggetto <xref href=&quot;System.Drawing.Color&quot;> </xref> struttura che rappresenta il colore finale della sfumatura lineare."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)
  id: '#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(PointF,PointF,Color,Color)
  nameWithType: LinearGradientBrush.LinearGradientBrush(PointF,PointF,Color,Color)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(PointF,PointF,Color,Color)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> classe con i colori e i punti specificati."
  syntax:
    content: public LinearGradientBrush (System.Drawing.PointF point1, System.Drawing.PointF point2, System.Drawing.Color color1, System.Drawing.Color color2);
    parameters:
    - id: point1
      type: System.Drawing.PointF
      description: "Oggetto <xref href=&quot;System.Drawing.PointF&quot;> </xref> struttura che rappresenta il punto iniziale della sfumatura lineare."
    - id: point2
      type: System.Drawing.PointF
      description: "Oggetto <xref href=&quot;System.Drawing.PointF&quot;> </xref> struttura che rappresenta il punto finale della sfumatura lineare."
    - id: color1
      type: System.Drawing.Color
      description: "Oggetto <xref href=&quot;System.Drawing.Color&quot;> </xref> struttura che rappresenta il colore iniziale della sfumatura lineare."
    - id: color2
      type: System.Drawing.Color
      description: "Oggetto <xref href=&quot;System.Drawing.Color&quot;> </xref> struttura che rappresenta il colore finale della sfumatura lineare."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  id: '#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Crea una nuova istanza di <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> classe basata su un rettangolo, iniziale e finale di colori e l&quot;orientamento."
  syntax:
    content: public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "Oggetto <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> struttura che specifica i limiti della sfumatura lineare."
    - id: color1
      type: System.Drawing.Color
      description: "Oggetto <xref href=&quot;System.Drawing.Color&quot;> </xref> struttura che rappresenta il colore iniziale della sfumatura."
    - id: color2
      type: System.Drawing.Color
      description: "Oggetto <xref href=&quot;System.Drawing.Color&quot;> </xref> struttura che rappresenta il colore finale della sfumatura."
    - id: linearGradientMode
      type: System.Drawing.Drawing2D.LinearGradientMode
      description: "Oggetto <xref href=&quot;System.Drawing.Drawing2D.LinearGradientMode&quot;> </xref> elemento di enumerazione che specifica l&quot;orientamento della sfumatura. L&quot;orientamento determina i punti iniziale e finale della sfumatura. Ad esempio, <xref uid=&quot;langword_csharp_LinearGradientMode.ForwardDiagonal&quot; name=&quot;LinearGradientMode.ForwardDiagonal&quot; href=&quot;&quot;> </xref> specifica che il punto iniziale è l&quot;angolo superiore sinistro del rettangolo e il punto finale è l&quot;angolo inferiore destro del rettangolo."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)
  id: '#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(Rectangle,Color,Color,Single)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Crea una nuova istanza di <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> classe basata su un rettangolo, iniziale e finale di colori e un angolo di orientamento."
  remarks: "Tutti i punti lungo una linea perpendicolare alla linea di orientamento sono dello stesso colore.       La riga iniziale perpendicolare alla linea di orientamento e passa attraverso uno degli angoli del rettangolo. Tutti i punti sulla riga iniziale sono il colore iniziale. Riga finale quindi perpendicolare alla linea di orientamento e passa attraverso uno degli angoli del rettangolo. Tutti i punti della riga finale sono il colore finale.       L&quot;angolo della linea di orientamento determina quali angoli iniziale e finale delle righe pass-through. Se, ad esempio, l&quot;angolo è compreso tra 0 e 90 gradi, la riga iniziale passa attraverso l&quot;angolo superiore sinistro, e la riga finale passa attraverso l&quot;angolo inferiore destro."
  syntax:
    content: public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "Oggetto <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> struttura che specifica i limiti della sfumatura lineare."
    - id: color1
      type: System.Drawing.Color
      description: "Oggetto <xref href=&quot;System.Drawing.Color&quot;> </xref> struttura che rappresenta il colore iniziale della sfumatura."
    - id: color2
      type: System.Drawing.Color
      description: "Oggetto <xref href=&quot;System.Drawing.Color&quot;> </xref> struttura che rappresenta il colore finale della sfumatura."
    - id: angle
      type: System.Single
      description: "L&quot;angolo, espresso in gradi in senso orario dall&quot;asse x, della riga di orientamento della sfumatura."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  id: '#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Crea una nuova istanza di <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> in base a un rettangolo, iniziale e finale di colori e una modalità di orientamento."
  syntax:
    content: public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "Oggetto <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struttura che specifica i limiti della sfumatura lineare."
    - id: color1
      type: System.Drawing.Color
      description: "Oggetto <xref href=&quot;System.Drawing.Color&quot;> </xref> struttura che rappresenta il colore iniziale della sfumatura."
    - id: color2
      type: System.Drawing.Color
      description: "Oggetto <xref href=&quot;System.Drawing.Color&quot;> </xref> struttura che rappresenta il colore finale della sfumatura."
    - id: linearGradientMode
      type: System.Drawing.Drawing2D.LinearGradientMode
      description: "Oggetto <xref href=&quot;System.Drawing.Drawing2D.LinearGradientMode&quot;> </xref> elemento di enumerazione che specifica l&quot;orientamento della sfumatura. L&quot;orientamento determina i punti iniziale e finale della sfumatura. Ad esempio, <xref uid=&quot;langword_csharp_LinearGradientMode.ForwardDiagonal&quot; name=&quot;LinearGradientMode.ForwardDiagonal&quot; href=&quot;&quot;> </xref> specifica che il punto iniziale è l&quot;angolo superiore sinistro del rettangolo e il punto finale è l&quot;angolo inferiore destro del rettangolo."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)
  id: '#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(RectangleF,Color,Color,Single)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Crea una nuova istanza di <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> classe basata su un rettangolo, iniziale e finale di colori e un angolo di orientamento."
  remarks: "Tutti i punti lungo una linea perpendicolare alla linea di orientamento sono dello stesso colore.       La riga iniziale perpendicolare alla linea di orientamento e passa attraverso uno degli angoli del rettangolo. Tutti i punti sulla riga iniziale sono il colore iniziale. Riga finale quindi perpendicolare alla linea di orientamento e passa attraverso uno degli angoli del rettangolo. Tutti i punti della riga finale sono il colore finale.       L&quot;angolo della linea di orientamento determina quali angoli iniziale e finale delle righe pass-through. Se, ad esempio, l&quot;angolo è compreso tra 0 e 90 gradi, la riga iniziale passa attraverso l&quot;angolo superiore sinistro, e la riga finale passa attraverso l&quot;angolo inferiore destro."
  syntax:
    content: public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "Oggetto <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struttura che specifica i limiti della sfumatura lineare."
    - id: color1
      type: System.Drawing.Color
      description: "Oggetto <xref href=&quot;System.Drawing.Color&quot;> </xref> struttura che rappresenta il colore iniziale della sfumatura."
    - id: color2
      type: System.Drawing.Color
      description: "Oggetto <xref href=&quot;System.Drawing.Color&quot;> </xref> struttura che rappresenta il colore finale della sfumatura."
    - id: angle
      type: System.Single
      description: "L&quot;angolo, espresso in gradi in senso orario dall&quot;asse x, della riga di orientamento della sfumatura."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  id: '#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Crea una nuova istanza di <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> classe basata su un rettangolo, iniziale e finale di colori e un angolo di orientamento."
  remarks: "Tutti i punti lungo una linea perpendicolare alla linea di orientamento sono dello stesso colore.       La riga iniziale perpendicolare alla linea di orientamento e passa attraverso uno degli angoli del rettangolo. Tutti i punti sulla riga iniziale sono il colore iniziale. Riga finale quindi perpendicolare alla linea di orientamento e passa attraverso uno degli angoli del rettangolo. Tutti i punti della riga finale sono il colore finale.       L&quot;angolo della linea di orientamento determina quali angoli iniziale e finale delle righe pass-through. Se, ad esempio, l&quot;angolo è compreso tra 0 e 90 gradi, la riga iniziale passa attraverso l&quot;angolo superiore sinistro, e la riga finale passa attraverso l&quot;angolo inferiore destro."
  syntax:
    content: public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "Oggetto <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> struttura che specifica i limiti della sfumatura lineare."
    - id: color1
      type: System.Drawing.Color
      description: "Oggetto <xref href=&quot;System.Drawing.Color&quot;> </xref> struttura che rappresenta il colore iniziale della sfumatura."
    - id: color2
      type: System.Drawing.Color
      description: "Oggetto <xref href=&quot;System.Drawing.Color&quot;> </xref> struttura che rappresenta il colore finale della sfumatura."
    - id: angle
      type: System.Single
      description: "L&quot;angolo, espresso in gradi in senso orario dall&quot;asse x, della riga di orientamento della sfumatura."
    - id: isAngleScaleable
      type: System.Boolean
      description: "Impostare su <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> per specificare che l&quot;angolo viene modificato dalla trasformazione associata a questo <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  id: '#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Crea una nuova istanza di <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> classe basata su un rettangolo, iniziale e finale di colori e un angolo di orientamento."
  remarks: "Tutti i punti lungo una linea perpendicolare alla linea di orientamento sono dello stesso colore.       La riga iniziale perpendicolare alla linea di orientamento e passa attraverso uno degli angoli del rettangolo. Tutti i punti sulla riga iniziale sono il colore iniziale. Riga finale quindi perpendicolare alla linea di orientamento e passa attraverso uno degli angoli del rettangolo. Tutti i punti della riga finale sono il colore finale.       L&quot;angolo della linea di orientamento determina quali angoli iniziale e finale delle righe pass-through. Se, ad esempio, l&quot;angolo è compreso tra 0 e 90 gradi, la riga iniziale passa attraverso l&quot;angolo superiore sinistro, e la riga finale passa attraverso l&quot;angolo inferiore destro."
  syntax:
    content: public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "Oggetto <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struttura che specifica i limiti della sfumatura lineare."
    - id: color1
      type: System.Drawing.Color
      description: "Oggetto <xref href=&quot;System.Drawing.Color&quot;> </xref> struttura che rappresenta il colore iniziale della sfumatura."
    - id: color2
      type: System.Drawing.Color
      description: "Oggetto <xref href=&quot;System.Drawing.Color&quot;> </xref> struttura che rappresenta il colore finale della sfumatura."
    - id: angle
      type: System.Single
      description: "L&quot;angolo, espresso in gradi in senso orario dall&quot;asse x, della riga di orientamento della sfumatura."
    - id: isAngleScaleable
      type: System.Boolean
      description: "Impostare su <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> per specificare che l&quot;angolo viene modificato dalla trasformazione associata a questo <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Blend
  id: Blend
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: Blend
  nameWithType: LinearGradientBrush.Blend
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Blend
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Ottiene o imposta un <xref href=&quot;System.Drawing.Drawing2D.Blend&quot;> </xref> che specifica le posizioni e i fattori che definiscono un&quot;interruzione personalizzata per la sfumatura."
  remarks: "Oggetto <xref:System.Drawing.Drawing2D.Blend>contiene le matrici corrispondenti dei fattori di blend e posizioni.</xref:System.Drawing.Drawing2D.Blend> I fattori di blend specificano le percentuali di colore iniziale e finale da utilizzare nella posizione corrispondente. Le posizioni vengono fornite come percentuale della distanza lungo la linea della sfumatura."
  syntax:
    content: public System.Drawing.Drawing2D.Blend Blend { get; set; }
    return:
      type: System.Drawing.Drawing2D.Blend
      description: "Oggetto <xref href=&quot;System.Drawing.Drawing2D.Blend&quot;> </xref> che rappresenta un&quot;interruzione personalizzata per la sfumatura."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.Blend*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Clone
  id: Clone
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: Clone()
  nameWithType: LinearGradientBrush.Clone()
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Crea una copia esatta di questo <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen using this brush.  \n  \n-   Clones the <xref:System.Drawing.Drawing2D.LinearGradientBrush> (`clonedLGBrush`).  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the cloned brush.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/add/codesnippet/visualbasic/m-system.drawing.drawing_18_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/add/codesnippet/cpp/m-system.drawing.drawing_18_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/add/codesnippet/csharp/m-system.drawing.drawing_18_1.cs)]"
  syntax:
    content: public override object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Il <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> questo metodo viene eseguito il cast come oggetto."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
  id: GammaCorrection
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: GammaCorrection
  nameWithType: LinearGradientBrush.GammaCorrection
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Ottiene o imposta un valore che indica se la correzione gamma è attivata per questa <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>."
  syntax:
    content: public bool GammaCorrection { get; set; }
    return:
      type: System.Boolean
      description: "Il valore è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se è attivata la correzione gamma per <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
  id: InterpolationColors
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: InterpolationColors
  nameWithType: LinearGradientBrush.InterpolationColors
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Ottiene o imposta un <xref href=&quot;System.Drawing.Drawing2D.ColorBlend&quot;> </xref> che definisce una sfumatura lineare."
  remarks: "Oggetto <xref:System.Drawing.Drawing2D.ColorBlend>contiene le matrici corrispondenti dei colori e delle posizioni.</xref:System.Drawing.Drawing2D.ColorBlend> Le posizioni sono valori compresi tra 0 e 1 che consente di specificare la percentuale della distanza lungo la linea della sfumatura in cui si trova il colore corrispondente.       Impostazione di questa proprietà consente di creare una sfumatura con un colore in ogni posizione lungo la linea della sfumatura. Impostazione di questa proprietà Annulla tutte le impostazioni precedenti colore, posizione e interruzione per questa <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</xref:System.Drawing.Drawing2D.LinearGradientBrush>"
  syntax:
    content: public System.Drawing.Drawing2D.ColorBlend InterpolationColors { get; set; }
    return:
      type: System.Drawing.Drawing2D.ColorBlend
      description: "Oggetto <xref href=&quot;System.Drawing.Drawing2D.ColorBlend&quot;> </xref> che definisce una sfumatura lineare."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
  id: LinearColors
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearColors
  nameWithType: LinearGradientBrush.LinearColors
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Ottiene o imposta il colore iniziale e finale della sfumatura."
  syntax:
    content: public System.Drawing.Color[] LinearColors { get; set; }
    return:
      type: System.Drawing.Color[]
      description: "Una matrice di due <xref href=&quot;System.Drawing.Color&quot;> </xref> strutture che rappresenta l&quot;inizio e fine della sfumatura."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: MultiplyTransform(Matrix)
  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Moltiplica il <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> che rappresenta la trasformazione geometrica locale di questo <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> dall&quot;oggetto <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> anteponendo specificato <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A>.
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "Il <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> mediante il quale moltiplicare la trasformazione geometrica."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Moltiplica il <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> che rappresenta la trasformazione geometrica locale di questo <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> dall&quot;oggetto <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> nell&quot;ordine specificato."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen using this brush.  \n  \n-   Calls the <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> method, to transform the <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.  \n  \n Notice that the lower ellipse is stretched in the horizontal direction, and that the gradient is stretched to match the new shape.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/add/codesnippet/visualbasic/90c76832-46c2-4578-8b9f-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/add/codesnippet/cpp/90c76832-46c2-4578-8b9f-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/add/codesnippet/csharp/90c76832-46c2-4578-8b9f-_1.cs)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "Il <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> mediante il quale moltiplicare la trasformazione geometrica."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Oggetto <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> che specifica in quale ordine moltiplicare le due matrici."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
  id: Rectangle
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: Rectangle
  nameWithType: LinearGradientBrush.Rectangle
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Ottiene un&quot;area rettangolare che definisce i punti iniziale e finale della sfumatura."
  remarks: "Il lato sinistro del rettangolo specifica il punto iniziale della sfumatura lineare e il lato destro del rettangolo specifica l&quot;endpoint."
  syntax:
    content: public System.Drawing.RectangleF Rectangle { get; }
    return:
      type: System.Drawing.RectangleF
      description: "Oggetto <xref href=&quot;System.Drawing.RectangleF&quot;> </xref> struttura che specifica il punto iniziale e finale della sfumatura."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform
  id: ResetTransform
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: ResetTransform()
  nameWithType: LinearGradientBrush.ResetTransform()
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Reimposta il <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform*>proprietà identity.</xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform*>"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen using this brush.  \n  \n-   Calls the <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> method to transform the <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.  \n  \n-   Resets the transform.  \n  \n-   Draws a third ellipse to the screen below the first two.  \n  \n Notice that the lowest ellipse is drawn the same size as the first, and that, due to the call to the ResetTransform method, the gradient has been reduced to match.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/add/codesnippet/visualbasic/m-system.drawing.drawing_6_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/add/codesnippet/cpp/m-system.drawing.drawing_6_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/add/codesnippet/csharp/m-system.drawing.drawing_6_1.cs)]"
  syntax:
    content: public void ResetTransform ();
    parameters: []
  overload: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)
  id: RotateTransform(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: RotateTransform(Single)
  nameWithType: LinearGradientBrush.RotateTransform(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Ruota la trasformazione geometrica locale in base al valore specificato. Questo metodo antepone la rotazione alla trasformazione."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A>.
  syntax:
    content: public void RotateTransform (float angle);
    parameters:
    - id: angle
      type: System.Single
      description: "L&quot;angolo di rotazione."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: LinearGradientBrush.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Ruota la trasformazione geometrica locale in base al valore specificato nell&quot;ordine specificato."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen using this brush.  \n  \n-   Rotates the <xref:System.Drawing.Drawing2D.LinearGradientBrush> 45 degrees by calling the <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A> method.  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the rotated brush.  \n  \n Notice that the gradient of the lower ellipse is at a 45 degree angle to the x-axis of the top ellipse. Also notice that a call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> method is used to justify the left edge of the gradient fill with the left edge of the lower ellipse.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/add/codesnippet/visualbasic/6302de64-3f75-4fc9-b2c4-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/add/codesnippet/cpp/6302de64-3f75-4fc9-b2c4-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/add/codesnippet/csharp/6302de64-3f75-4fc9-b2c4-_1.cs)]"
  syntax:
    content: public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: angle
      type: System.Single
      description: "L&quot;angolo di rotazione."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Oggetto <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> che specifica se accodare o anteporre la matrice di rotazione."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)
  id: ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: ScaleTransform(Single,Single)
  nameWithType: LinearGradientBrush.ScaleTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Scale locale geometrica trasformano in base ai valori specificati. Questo metodo antepone la matrice di scala alla trasformazione."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform%2A>.
  syntax:
    content: public void ScaleTransform (float sx, float sy);
    parameters:
    - id: sx
      type: System.Single
      description: "Quantità in base al quale scalare la trasformazione nella direzione dell&quot;asse x."
    - id: sy
      type: System.Single
      description: "Quantità in base al quale scalare la trasformazione nella direzione dell&quot;asse y."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: LinearGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Scale locale geometrica trasformano in base ai valori specificati nell&quot;ordine specificato."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draw an ellipse to the screen using this brush.  \n  \n-   Scales the <xref:System.Drawing.Drawing2D.LinearGradientBrush> by a factor of two in the x-axis.  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the scaled brush.  \n  \n Notice that the gradient of the lower ellipse is stretched by a factor of two. Also notice that a call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> method is used to justify the left edge of the gradient fill with the left edge of ellipse.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/add/codesnippet/visualbasic/e0c3e704-6b4f-48bc-83d2-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/add/codesnippet/cpp/e0c3e704-6b4f-48bc-83d2-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/add/codesnippet/csharp/e0c3e704-6b4f-48bc-83d2-_1.cs)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: sx
      type: System.Single
      description: "Quantità in base al quale scalare la trasformazione nella direzione dell&quot;asse x."
    - id: sy
      type: System.Single
      description: "Quantità in base al quale scalare la trasformazione nella direzione dell&quot;asse y."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Oggetto <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> che specifica se accodare o anteporre la matrice di scala."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)
  id: SetBlendTriangularShape(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: SetBlendTriangularShape(Single)
  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Crea una sfumatura lineare con un colore centrale e di un&quot;interruzione lineare su un singolo colore a entrambe le estremità."
  remarks: "Questo metodo specifica un `focus`, ovvero il punto in cui la sfumatura è composta solo il colore finale. Il `focus` parametro rappresenta un percorso come una proporzione della distanza lungo la linea della sfumatura. La sfumatura passa il colore iniziale in modo lineare da entrambi i lati."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>.
  syntax:
    content: public void SetBlendTriangularShape (float focus);
    parameters:
    - id: focus
      type: System.Single
      description: "Un valore compreso tra 0 e 1 che specifica il centro della sfumatura (il punto in cui la sfumatura è composta solo il colore finale)."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)
  id: SetBlendTriangularShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: SetBlendTriangularShape(Single,Single)
  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Crea una sfumatura lineare con un colore centrale e di un&quot;interruzione lineare su un singolo colore a entrambe le estremità."
  remarks: "Questo metodo specifica un `focus`, ovvero il punto in cui la sfumatura è composta solo il colore finale. Il `focus` parametro rappresenta un percorso come una proporzione della distanza lungo la linea della sfumatura. La sfumatura passa il colore iniziale in modo lineare da entrambi i lati."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.  \n  \n-   Transforms the <xref:System.Drawing.Drawing2D.LinearGradientBrush> into a triangular shape with its peak in the center.  \n  \n-   Draws a second ellipse to the screen using the transformed brush.  \n  \n Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/add/codesnippet/visualbasic/e6c3d0c9-aed2-4364-946f-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/add/codesnippet/cpp/e6c3d0c9-aed2-4364-946f-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/add/codesnippet/csharp/e6c3d0c9-aed2-4364-946f-_1.cs)]"
  syntax:
    content: public void SetBlendTriangularShape (float focus, float scale);
    parameters:
    - id: focus
      type: System.Single
      description: "Un valore compreso tra 0 e 1 che specifica il centro della sfumatura (il punto in cui la sfumatura è composta solo il colore finale)."
    - id: scale
      type: System.Single
      description: "Un valore compreso tra 0 e 1 che specifica la velocità di colori passano dal colore iniziale per `focus` (colore finale)"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)
  id: SetSigmaBellShape(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: SetSigmaBellShape(Single)
  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Crea un&quot;interruzione della sfumatura in base a una curva a campana."
  remarks: "Questo metodo specifica un `focus`, ovvero il punto in cui la sfumatura è composta solo il colore finale. Il `focus` parametro rappresenta un percorso come una proporzione della distanza lungo la linea della sfumatura. La sfumatura passa al colore iniziale in base a una curva a campana (distribuzione normale) per entrambi i lati."
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>`.`
  syntax:
    content: public void SetSigmaBellShape (float focus);
    parameters:
    - id: focus
      type: System.Single
      description: "Un valore compreso tra 0 e 1 che specifica il centro della sfumatura (il punto in cui il colore iniziale e finale sono combinati in modo uniforme)."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)
  id: SetSigmaBellShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: SetSigmaBellShape(Single,Single)
  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Crea un&quot;interruzione della sfumatura in base a una curva a campana."
  remarks: "Questo metodo specifica un `focus`, ovvero il punto in cui la sfumatura è composta solo il colore finale. Il `focus` parametro rappresenta un percorso come una proporzione della distanza lungo la linea della sfumatura. La sfumatura passa al colore iniziale in base a una curva a campana (distribuzione normale) per entrambi i lati."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.  \n  \n-   Transforms the <xref:System.Drawing.Drawing2D.LinearGradientBrush> to have a bell shaped curve with its peak in the center.  \n  \n-   Draws a second ellipse to the screen using the bell-shaped brush.  \n  \n Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/add/codesnippet/visualbasic/06854fcf-f315-4b99-b3db-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/add/codesnippet/cpp/06854fcf-f315-4b99-b3db-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/add/codesnippet/csharp/06854fcf-f315-4b99-b3db-_1.cs)]"
  syntax:
    content: public void SetSigmaBellShape (float focus, float scale);
    parameters:
    - id: focus
      type: System.Single
      description: "Un valore compreso tra 0 e 1 che specifica il centro della sfumatura (il punto in cui la sfumatura è composta solo il colore finale)."
    - id: scale
      type: System.Single
      description: "Un valore compreso tra 0 e 1 che specifica la velocità di colori passano dal `focus`."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Transform
  id: Transform
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: Transform
  nameWithType: LinearGradientBrush.Transform
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Transform
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Ottiene o imposta una copia <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> che definisce una trasformazione geometrica locale per questo <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>."
  remarks: "Una trasformazione geometrica può essere utilizzata per tradurre, scala, rotazione o inclinare il riempimento sfumato. Poiché la matrice restituita dalla trasformazione per la proprietà è una copia della trasformazione geometrica del pennello, è necessario eliminarlo quando non è più necessario."
  syntax:
    content: public System.Drawing.Drawing2D.Matrix Transform { get; set; }
    return:
      type: System.Drawing.Drawing2D.Matrix
      description: "Una copia del <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> che definisce una trasformazione geometrica che si applica solo a riempimenti disegnati con questo <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)
  id: TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: TranslateTransform(Single,Single)
  nameWithType: LinearGradientBrush.TranslateTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Trasla la trasformazione geometrica locale in base alle dimensioni specificate. Questo metodo antepone la traslazione alla trasformazione."
  remarks: ''
  example:
  - For an example, see TranslateTransform.
  syntax:
    content: public void TranslateTransform (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "Il valore della traslazione in x."
    - id: dy
      type: System.Single
      description: "Il valore della traslazione in y."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: LinearGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Trasla la trasformazione geometrica locale in base alle dimensioni specificate nell&quot;ordine specificato."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Uses this brush to draw a rectangle to the screen that has a linear, left-to-right transition of colors.  \n  \n-   Rotates the <xref:System.Drawing.Drawing2D.LinearGradientBrush> by 90 degrees and scales the gradient.  \n  \n-   Draws the rectangle, with the rotated and scaled gradient, to the screen.  \n  \n-   Translates the rectangle so that it has a linear gradient running from top to bottom.  \n  \n-   Draws the translated rectangle to the screen.  \n  \n Notice that there are three rectangles displayed the top one showing the left-to-right gradient, the middle one showing the rotated and scaled gradient, and the bottom one showing the final, translated gradient.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/add/codesnippet/visualbasic/245473a1-ce62-4749-b877-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/add/codesnippet/cpp/245473a1-ce62-4749-b877-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/add/codesnippet/csharp/245473a1-ce62-4749-b877-_1.cs)]"
  syntax:
    content: public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: dx
      type: System.Single
      description: "Il valore della traslazione in x."
    - id: dy
      type: System.Single
      description: "Il valore della traslazione in y."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "L&quot;ordine (anteposizione o accodamento) in cui applicare la conversione."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
  id: WrapMode
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: WrapMode
  nameWithType: LinearGradientBrush.WrapMode
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "Ottiene o imposta un <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> enumerazione che indica la modalità di disposizione per questo <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>."
  syntax:
    content: public System.Drawing.Drawing2D.WrapMode WrapMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.WrapMode
      description: "Oggetto <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref> che specifica come riempimenti disegnati con questo <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref> vengono affiancati."
  overload: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Drawing.Brush
  isExternal: false
  name: System.Drawing.Brush
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(Point,Point,Color,Color)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Point,Point,Color,Color)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Point,Point,Color,Color)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(PointF,PointF,Color,Color)
  nameWithType: LinearGradientBrush.LinearGradientBrush(PointF,PointF,Color,Color)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(PointF,PointF,Color,Color)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.Drawing2D.LinearGradientMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LinearGradientMode
  nameWithType: LinearGradientMode
  fullName: System.Drawing.Drawing2D.LinearGradientMode
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(Rectangle,Color,Color,Single)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(RectangleF,Color,Color,Single)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Blend
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Blend
  nameWithType: LinearGradientBrush.Blend
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Blend
- uid: System.Drawing.Drawing2D.Blend
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Blend
  nameWithType: Blend
  fullName: System.Drawing.Drawing2D.Blend
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Clone
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Clone()
  nameWithType: LinearGradientBrush.Clone()
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: GammaCorrection
  nameWithType: LinearGradientBrush.GammaCorrection
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
- uid: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: InterpolationColors
  nameWithType: LinearGradientBrush.InterpolationColors
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
- uid: System.Drawing.Drawing2D.ColorBlend
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: ColorBlend
  nameWithType: ColorBlend
  fullName: System.Drawing.Drawing2D.ColorBlend
- uid: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearColors
  nameWithType: LinearGradientBrush.LinearColors
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
- uid: System.Drawing.Color[]
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color[]
  spec.csharp:
  - uid: System.Drawing.Color
    name: Color
    nameWithType: Color
    fullName: Color[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: MultiplyTransform(Matrix)
  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(Matrix)
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Rectangle
  nameWithType: LinearGradientBrush.Rectangle
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ResetTransform()
  nameWithType: LinearGradientBrush.ResetTransform()
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform()
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: RotateTransform(Single)
  nameWithType: LinearGradientBrush.RotateTransform(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: LinearGradientBrush.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ScaleTransform(Single,Single)
  nameWithType: LinearGradientBrush.ScaleTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(Single,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: LinearGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetBlendTriangularShape(Single)
  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetBlendTriangularShape(Single,Single)
  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(Single,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetSigmaBellShape(Single)
  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetSigmaBellShape(Single,Single)
  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(Single,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Transform
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Transform
  nameWithType: LinearGradientBrush.Transform
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Transform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: TranslateTransform(Single,Single)
  nameWithType: LinearGradientBrush.TranslateTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(Single,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: LinearGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: WrapMode
  nameWithType: LinearGradientBrush.WrapMode
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
- uid: System.Drawing.Drawing2D.WrapMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: WrapMode
  nameWithType: WrapMode
  fullName: System.Drawing.Drawing2D.WrapMode
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush
  nameWithType: LinearGradientBrush.LinearGradientBrush
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Blend*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Blend
  nameWithType: LinearGradientBrush.Blend
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Clone*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Clone
  nameWithType: LinearGradientBrush.Clone
- uid: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: GammaCorrection
  nameWithType: LinearGradientBrush.GammaCorrection
- uid: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: InterpolationColors
  nameWithType: LinearGradientBrush.InterpolationColors
- uid: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearColors
  nameWithType: LinearGradientBrush.LinearColors
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: MultiplyTransform
  nameWithType: LinearGradientBrush.MultiplyTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Rectangle
  nameWithType: LinearGradientBrush.Rectangle
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ResetTransform
  nameWithType: LinearGradientBrush.ResetTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: RotateTransform
  nameWithType: LinearGradientBrush.RotateTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ScaleTransform
  nameWithType: LinearGradientBrush.ScaleTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetBlendTriangularShape
  nameWithType: LinearGradientBrush.SetBlendTriangularShape
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetSigmaBellShape
  nameWithType: LinearGradientBrush.SetSigmaBellShape
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Transform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Transform
  nameWithType: LinearGradientBrush.Transform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: TranslateTransform
  nameWithType: LinearGradientBrush.TranslateTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: WrapMode
  nameWithType: LinearGradientBrush.WrapMode
