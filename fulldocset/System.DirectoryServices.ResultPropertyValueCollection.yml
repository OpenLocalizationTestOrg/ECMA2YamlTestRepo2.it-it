### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ResultPropertyValueCollection
  id: ResultPropertyValueCollection
  children:
  - System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)
  - System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)
  - System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)
  - System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)
  langs:
  - csharp
  name: ResultPropertyValueCollection
  nameWithType: ResultPropertyValueCollection
  fullName: System.DirectoryServices.ResultPropertyValueCollection
  type: Class
  summary: "Contiene i valori di un <xref href=&quot;System.DirectoryServices.SearchResult&quot;> </xref> proprietà."
  remarks: "<xref:System.DirectoryServices.SearchResult>le istanze sono simili a <xref:System.DirectoryServices.DirectoryEntry>istanze.</xref:System.DirectoryServices.DirectoryEntry></xref:System.DirectoryServices.SearchResult> La differenza evidente è che il <xref:System.DirectoryServices.DirectoryEntry>Recupera le informazioni dalla gerarchia di servizi di dominio Active Directory ogni volta che un nuovo oggetto si accede, mentre i dati per il <xref:System.DirectoryServices.SearchResult>è già disponibile nel <xref:System.DirectoryServices.SearchResultCollection>che un <xref:System.DirectoryServices.DirectorySearcher>query restituisce.</xref:System.DirectoryServices.DirectorySearcher> </xref:System.DirectoryServices.SearchResultCollection> </xref:System.DirectoryServices.SearchResult> </xref:System.DirectoryServices.DirectoryEntry> Se si tenta di ottenere un <xref:System.DirectoryServices.SearchResult>proprietà che la query non ha specificato per il recupero, la proprietà non è disponibile.</xref:System.DirectoryServices.SearchResult>"
  syntax:
    content: 'public class ResultPropertyValueCollection : System.Collections.ReadOnlyCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.ReadOnlyCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: ResultPropertyValueCollection.Contains(Object)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.Contains(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Il metodo Contains determina se un valore della proprietà specificata è incluso nella raccolta."
  syntax:
    content: public bool Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il valore della proprietà da trovare."
    return:
      type: System.Boolean
      description: "Il valore restituito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se la proprietà specificata appartiene alla raccolta; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ResultPropertyValueCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)
  id: CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  langs:
  - csharp
  name: CopyTo(Object[],Int32)
  nameWithType: ResultPropertyValueCollection.CopyTo(Object[],Int32)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(Object[],Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Il metodo CopyTo copia i valori delle proprietà da questa raccolta in una matrice, iniziando da un particolare indice di matrice."
  syntax:
    content: public void CopyTo (object[] values, int index);
    parameters:
    - id: values
      type: System.Object[]
      description: "Matrice di tipo <xref:System.Object>che riceve i valori delle proprietà della raccolta.</xref:System.Object>"
    - id: index
      type: System.Int32
      description: "Indice della matrice in base zero in corrispondenza del quale iniziare la copia dei valori della proprietà."
  overload: System.DirectoryServices.ResultPropertyValueCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  langs:
  - csharp
  name: IndexOf(Object)
  nameWithType: ResultPropertyValueCollection.IndexOf(Object)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Metodo IndexOf recupera l&quot;indice di un valore della proprietà specificata in questa raccolta."
  syntax:
    content: public int IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il valore della proprietà da trovare."
    return:
      type: System.Int32
      description: "Indice in base zero del valore della proprietà specificato. Se l&quot;oggetto non viene trovato, il valore restituito è -1."
  overload: System.DirectoryServices.ResultPropertyValueCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ResultPropertyValueCollection.Item(Int32)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.Item(Int32)
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "La proprietà Item Ottiene il valore della proprietà che si trova in corrispondenza dell&quot;indice specificato."
  remarks: "In c#, questa proprietà è l&quot;indicizzatore per la <xref:System.DirectoryServices.ResultPropertyValueCollection>classe.</xref:System.DirectoryServices.ResultPropertyValueCollection>       In JScript è possibile utilizzare le proprietà predefinite indicizzate definite da un tipo, ma non è possibile definire in modo esplicito la propria. Tuttavia, specificando che l&quot;attributo expando in una classe fornisce automaticamente un valore predefinito proprietà indicizzata con un tipo di oggetto e un tipo di indice di <xref:System.String>.</xref:System.String>"
  syntax:
    content: public object this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Indice in base zero del valore della proprietà da recuperare."
    return:
      type: System.Object
      description: "Il valore della proprietà che si trova in corrispondenza dell&quot;indice specificato."
  overload: System.DirectoryServices.ResultPropertyValueCollection.Item*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ReadOnlyCollectionBase
- uid: System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: Contains(Object)
  nameWithType: ResultPropertyValueCollection.Contains(Object)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: CopyTo(Object[],Int32)
  nameWithType: ResultPropertyValueCollection.CopyTo(Object[],Int32)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(Object[],Int32)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: IndexOf(Object)
  nameWithType: ResultPropertyValueCollection.IndexOf(Object)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(Object)
- uid: System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ResultPropertyValueCollection.Item(Int32)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.Item(Int32)
- uid: System.DirectoryServices.ResultPropertyValueCollection.Contains*
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: Contains
  nameWithType: ResultPropertyValueCollection.Contains
- uid: System.DirectoryServices.ResultPropertyValueCollection.CopyTo*
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: CopyTo
  nameWithType: ResultPropertyValueCollection.CopyTo
- uid: System.DirectoryServices.ResultPropertyValueCollection.IndexOf*
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: IndexOf
  nameWithType: ResultPropertyValueCollection.IndexOf
- uid: System.DirectoryServices.ResultPropertyValueCollection.Item*
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: Item
  nameWithType: ResultPropertyValueCollection.Item
