### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.NetCodeGroup
  id: NetCodeGroup
  children:
  - System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  - System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  - System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  - System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  - System.Security.Policy.NetCodeGroup.AttributeString
  - System.Security.Policy.NetCodeGroup.Copy
  - System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.NetCodeGroup.Equals(System.Object)
  - System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  - System.Security.Policy.NetCodeGroup.GetHashCode
  - System.Security.Policy.NetCodeGroup.MergeLogic
  - System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.NetCodeGroup.PermissionSetName
  - System.Security.Policy.NetCodeGroup.ResetConnectAccess
  - System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  - System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  langs:
  - csharp
  name: NetCodeGroup
  nameWithType: NetCodeGroup
  fullName: System.Security.Policy.NetCodeGroup
  type: Class
  summary: "Concede l&quot;autorizzazione Web al sito da cui l&quot;assembly è stato scaricato. Questa classe non può essere ereditata."
  remarks: "Gruppi di codice sono i blocchi predefiniti di criteri di sicurezza di accesso di codice. Ogni livello di criteri è costituito da un gruppo di codice radice che può avere uno o più gruppi di codice figlio. Ogni gruppo di codice figlio può avere un proprio gruppi di codice figlio; Questo comportamento si estende a tutti i livelli, creando una struttura ad albero. Ogni gruppo di codice presenta una condizione di appartenenza che determina se un assembly specificato appartiene al gruppo, in base all&quot;evidenza dell&quot;assembly. Solo i gruppi di codice le cui condizioni di appartenenza corrispondono a un assembly specificato, insieme ai gruppi di codice figlio, si applicano i criteri di sicurezza di accesso di codice.       NetCodeGroup non ha la stessa semantica di unione del <xref:System.Security.Policy.UnionCodeGroup>; costituisce l&quot;unione del <xref:System.Security.Policy.PolicyStatement>gli oggetti figlio corrispondenti a tutti i gruppi di codice e <xref:System.Security.Policy.PolicyStatement>Genera dall&quot;input <xref:System.Security.Policy.Url>evidenza.</xref:System.Security.Policy.Url> </xref:System.Security.Policy.PolicyStatement> </xref:System.Security.Policy.PolicyStatement> </xref:System.Security.Policy.UnionCodeGroup> Tuttavia, NetCodeGroup restituisce un&quot;autorizzazione contenente un <xref:System.Net.WebPermission>calcolato in modo dinamico che concede l&quot;accesso per connettersi al sito da cui viene eseguito il codice. <xref:System.Security.Policy.UnionCodeGroup>restituisce semplicemente un set di autorizzazioni statiche.</xref:System.Security.Policy.UnionCodeGroup> </xref:System.Net.WebPermission>       Quando viene creato un NetCodeGroup, contiene le regole di accesso predefinite di connessione illustrate nella tabella seguente.      | Schema URI | Regola |   |----------------|----------|   | file | È permesso alcun accesso della connessione al server di origine. |   | http | È consentito l&quot;accesso HTTP e HTTPS tramite la porta di origine. |   | https | È consentito l&quot;accesso HTTPS tramite la porta di origine. |       È possibile controllare lo schema e la porta di codice è consentita per la connessione al sito di origine passando un <xref:System.Security.Policy.CodeConnectAccess>oggetto con l&quot;appropriato <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A>e <xref:System.Security.Policy.CodeConnectAccess.Port%2A>i valori delle proprietà per il <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>(metodo).</xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> </xref:System.Security.Policy.CodeConnectAccess.Port%2A> </xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> </xref:System.Security.Policy.CodeConnectAccess> È possibile creare una regola di accesso di connessione che si applica quando lo schema di origine non è presente nell&quot;evidenza o non è riconosciuto specificando <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>(&quot;&quot;) dello schema.</xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> È anche possibile creare una regola di accesso di connessione che si applica quando non è presente alcuna regola con uno schema corrispondente specificando <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>(&quot;*&quot;) dello schema.</xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>      > [!NOTE] > Se il codice non presenta lo schema URI come prova, è consentito l&quot;accesso utilizzando uno schema nel sito di origine."
  example:
  - "The following code example demonstrates creating a NetCodeGroup and adding <xref:System.Security.Policy.CodeConnectAccess> objects for code downloaded using the HTTP scheme.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/t-system.security.policy_8_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/t-system.security.policy_8_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class NetCodeGroup : System.Security.Policy.CodeGroup
  inheritance:
  - System.Object
  - System.Security.Policy.CodeGroup
  implements: []
  inheritedMembers:
  - System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.Children
  - System.Security.Policy.CodeGroup.Description
  - System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.CodeGroup.MembershipCondition
  - System.Security.Policy.CodeGroup.Name
  - System.Security.Policy.CodeGroup.PolicyStatement
  - System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.ToXml
  - System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  id: '#ctor(System.Security.Policy.IMembershipCondition)'
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: NetCodeGroup(IMembershipCondition)
  nameWithType: NetCodeGroup.NetCodeGroup(IMembershipCondition)
  fullName: System.Security.Policy.NetCodeGroup.NetCodeGroup(IMembershipCondition)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Policy.NetCodeGroup&quot;> </xref> classe."
  remarks: "Quando un <xref:System.Security.Policy.NetCodeGroup>viene creato, contiene le regole di accesso predefinite di connessione illustrate nella tabella seguente.</xref:System.Security.Policy.NetCodeGroup>      | Schema | Regola |   |------------|----------|   | file | È permesso alcun accesso della connessione al server di origine. |   | http | È consentito l&quot;accesso HTTP e HTTPS tramite la porta di origine. |   | https | È consentito l&quot;accesso HTTPS tramite la porta di origine. |"
  example:
  - "The following code example demonstrates creating a <xref:System.Security.Policy.NetCodeGroup> and adding <xref:System.Security.Policy.CodeConnectAccess> objects for code downloaded using the HTTP scheme.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/e7170b34-662f-4231-84e8-_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/e7170b34-662f-4231-84e8-_1.cpp)]"
  syntax:
    content: public NetCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition);
    parameters:
    - id: membershipCondition
      type: System.Security.Policy.IMembershipCondition
      description: "Una condizione di appartenenza che verifica l&quot;evidenza per determinare se questo gruppo consente di applicare criteri di sicurezza di accesso di codice."
  overload: System.Security.Policy.NetCodeGroup.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>membershipCondition</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il tipo di <code> membershipCondition </code> parametro non è valido."
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  id: AbsentOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AbsentOriginScheme
  nameWithType: NetCodeGroup.AbsentOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Contiene un valore utilizzato per specificare l&quot;accesso alla connessione per il codice con uno schema di origine sconosciuta o non riconosciuto."
  remarks: "Quando si chiama il <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>(metodo), specificare uno schema e un oggetto associato <xref:System.Security.Policy.CodeConnectAccess>oggetto.</xref:System.Security.Policy.CodeConnectAccess> </xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> Qualsiasi <xref:System.Security.Policy.CodeConnectAccess>oggetti che vengono aggiunti per il <xref:System.Security.Policy.NetCodeGroup>utilizzando AbsentOriginScheme come schema di origine vengono applicate quando dello schema di origine del codice non è presente nell&quot;evidenza, o schema non è riconosciuto dal <xref:System.Security.Policy.NetCodeGroup>oggetto.</xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.CodeConnectAccess>       Per specificare il <xref:System.Security.Policy.CodeConnectAccess>gli oggetti da utilizzare quando lo schema di origine del codice non corrisponde a nessuno degli schemi contenuti nel set di schemi di origine aggiunti all&quot;oggetto corrente <xref:System.Security.Policy.NetCodeGroup>oggetto, usare il <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>valore.</xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> </xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.CodeConnectAccess>       Il valore del campo AbsentOriginScheme è una stringa vuota (&quot;&quot;)."
  syntax:
    content: public static readonly string AbsentOriginScheme;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  id: AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AddConnectAccess(String,CodeConnectAccess)
  nameWithType: NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
  fullName: System.Security.Policy.NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Aggiunge l&quot;accesso alla connessione specificata per il gruppo di codice corrente."
  remarks: "È possibile aggiungere più <xref:System.Security.Policy.CodeConnectAccess>oggetti per lo stesso `origin scheme`.</xref:System.Security.Policy.CodeConnectAccess> Se un `origin scheme` dispone già di uno o più <xref:System.Security.Policy.CodeConnectAccess>oggetti, che specificano `null` per `connectAccess` non ha alcun effetto.</xref:System.Security.Policy.CodeConnectAccess> Se lo schema di origine non sono associati <xref:System.Security.Policy.CodeConnectAccess>oggetti, che specificano `null` per `connectAccess` impedisce di codice con uno schema di origine corrispondente `originScheme` di accedere ai server di origine.</xref:System.Security.Policy.CodeConnectAccess>"
  example:
  - "The following code example demonstrates creating and adding <xref:System.Security.Policy.CodeConnectAccess> objects to a <xref:System.Security.Policy.NetCodeGroup>.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/c09efa70-70d7-4f2a-aa3b-_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/c09efa70-70d7-4f2a-aa3b-_1.cpp)]"
  syntax:
    content: public void AddConnectAccess (string originScheme, System.Security.Policy.CodeConnectAccess connectAccess);
    parameters:
    - id: originScheme
      type: System.String
      description: "Oggetto <xref:System.String>contenente lo schema da confrontare con lo schema del codice.</xref:System.String>"
    - id: connectAccess
      type: System.Security.Policy.CodeConnectAccess
      description: "Oggetto <xref href=&quot;System.Security.Policy.CodeConnectAccess&quot;> </xref> che specifica il codice di schema e la porta può utilizzare per la connessione al server di origine."
  overload: System.Security.Policy.NetCodeGroup.AddConnectAccess*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>originScheme</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>originScheme</code>contiene caratteri non consentiti negli schemi.       -or-       <code>originScheme</code> = <xref href=&quot;System.Security.Policy.NetCodeGroup.AbsentOriginScheme&quot;></xref> and <code>connectAccess</code> specifies <xref href=&quot;System.Security.Policy.CodeConnectAccess.OriginScheme&quot;></xref> as its scheme."
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  id: AnyOtherOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AnyOtherOriginScheme
  nameWithType: NetCodeGroup.AnyOtherOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Contiene un valore utilizzato per specificare qualsiasi altro schema di origine non specificato."
  remarks: "Quando si chiama il <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>(metodo), specificare uno schema e un oggetto associato <xref:System.Security.Policy.CodeConnectAccess>oggetto.</xref:System.Security.Policy.CodeConnectAccess> </xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> È possibile utilizzare il valore del campo AnyOtherOriginScheme per specificare il <xref:System.Security.Policy.CodeConnectAccess>gli oggetti che devono essere utilizzati per qualsiasi schema che non è contenuto in modo esplicito nel set di schemi di origine aggiunti all&quot;oggetto corrente <xref:System.Security.Policy.NetCodeGroup>oggetto.</xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.CodeConnectAccess>       Il <xref:System.Security.Policy.CodeConnectAccess>gli oggetti specificati con il campo AnyOtherOriginScheme vengono utilizzati solo se lo schema di origine del codice non corrisponde a nessuno degli schemi contenuti nel set di schemi di origine aggiunti all&quot;oggetto corrente <xref:System.Security.Policy.NetCodeGroup>oggetto.</xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.CodeConnectAccess>       Per specificare il <xref:System.Security.Policy.CodeConnectAccess>oggetti da applicare quando lo schema di origine del codice non è disponibile nell&quot;evidenza o non viene riconosciuto, utilizzare il <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>valore.</xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> </xref:System.Security.Policy.CodeConnectAccess>       Il valore del campo AnyOtherOriginScheme è &quot;*&quot;."
  syntax:
    content: public static readonly string AnyOtherOriginScheme;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AttributeString
  id: AttributeString
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AttributeString
  nameWithType: NetCodeGroup.AttributeString
  fullName: System.Security.Policy.NetCodeGroup.AttributeString
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Ottiene una rappresentazione di stringa degli attributi dell&quot;istruzione di criteri per il gruppo di codice."
  syntax:
    content: public override string AttributeString { get; }
    return:
      type: System.String
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Policy.NetCodeGroup.AttributeString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.Copy
  id: Copy
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: Copy()
  nameWithType: NetCodeGroup.Copy()
  fullName: System.Security.Policy.NetCodeGroup.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Esegue una copia completa del gruppo di codice corrente."
  remarks: "Questo metodo esegue una copia completa del gruppo di codice, vale a dire che le copie di tutti gli oggetti che contiene il gruppo di codice vengono eseguite anche."
  syntax:
    content: public override System.Security.Policy.CodeGroup Copy ();
    parameters: []
    return:
      type: System.Security.Policy.CodeGroup
      description: "Copia del gruppo di codice corrente, incluse le condizioni di appartenenza e i gruppi di codice figlio equivalente."
  overload: System.Security.Policy.NetCodeGroup.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: CreateXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: protected override void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: element
      type: System.Security.SecurityElement
      description: "Da aggiungere."
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "Da aggiungere."
  overload: System.Security.Policy.NetCodeGroup.CreateXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: NetCodeGroup.Equals(Object)
  fullName: System.Security.Policy.NetCodeGroup.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Determina se il gruppo di codice specificato è equivalente al gruppo di codice corrente."
  remarks: "I seguenti dati vengono utilizzati per determinare l&quot;uguaglianza di due <xref:System.Security.Policy.NetCodeGroup>oggetti: - il <xref:System.Security.Policy.CodeGroup.Name%2A>e <xref:System.Security.Policy.CodeGroup.Description%2A>proprietà.</xref:System.Security.Policy.CodeGroup.Description%2A> </xref:System.Security.Policy.CodeGroup.Name%2A> </xref:System.Security.Policy.NetCodeGroup>      -La <xref:System.Security.Policy.CodeGroup.MembershipCondition%2A>proprietà.</xref:System.Security.Policy.CodeGroup.MembershipCondition%2A>      -Il set di schemi di origine e associato <xref:System.Security.Policy.CodeConnectAccess>oggetti.</xref:System.Security.Policy.CodeConnectAccess>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Il <xref href=&quot;System.Security.Policy.NetCodeGroup&quot;> </xref> oggetto da confrontare con il gruppo di codice corrente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il gruppo di codice specificato è equivalente al gruppo di codice corrente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.NetCodeGroup.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  id: GetConnectAccessRules
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: GetConnectAccessRules()
  nameWithType: NetCodeGroup.GetConnectAccessRules()
  fullName: System.Security.Policy.NetCodeGroup.GetConnectAccessRules()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Ottiene le informazioni di accesso di connessione per il gruppo di codice corrente."
  remarks: "In ogni voce di dizionario, la <xref:System.Collections.DictionaryEntry.Key%2A>valore della proprietà è lo schema di origine e il <xref:System.Collections.DictionaryEntry.Value%2A>valore della proprietà è la matrice di associati <xref:System.Security.Policy.CodeConnectAccess>oggetti.</xref:System.Security.Policy.CodeConnectAccess> </xref:System.Collections.DictionaryEntry.Value%2A> </xref:System.Collections.DictionaryEntry.Key%2A> Se sono presenti associato alcun <xref:System.Security.Policy.CodeConnectAccess>oggetti, <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName>restituisce una matrice vuota.</xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> </xref:System.Security.Policy.CodeConnectAccess>"
  example:
  - "The following code example demonstrates displaying the connection access rules for a <xref:System.Security.Policy.NetCodeGroup> object.  \n  \n [!code-cs[NclCodeGroup#8](~/add/codesnippet/csharp/m-system.security.policy_21_1.cs)]\n [!code-cpp[NclCodeGroup#8](~/add/codesnippet/cpp/m-system.security.policy_21_1.cpp)]"
  syntax:
    content: public System.Collections.DictionaryEntry[] GetConnectAccessRules ();
    parameters: []
    return:
      type: System.Collections.DictionaryEntry[]
      description: "Oggetto <xref:System.Collections.DictionaryEntry>matrice contenente le informazioni di accesso di connessione.</xref:System.Collections.DictionaryEntry>"
  overload: System.Security.Policy.NetCodeGroup.GetConnectAccessRules*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.GetHashCode
  id: GetHashCode
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: NetCodeGroup.GetHashCode()
  fullName: System.Security.Policy.NetCodeGroup.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Ottiene il codice hash del gruppo di codice corrente."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Il codice hash del gruppo di codice corrente."
  overload: System.Security.Policy.NetCodeGroup.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.MergeLogic
  id: MergeLogic
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: MergeLogic
  nameWithType: NetCodeGroup.MergeLogic
  fullName: System.Security.Policy.NetCodeGroup.MergeLogic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Ottiene la logica da utilizzare per l&quot;unione di gruppi."
  syntax:
    content: public override string MergeLogic { get; }
    return:
      type: System.String
      description: "La stringa &quot;Union&quot;."
  overload: System.Security.Policy.NetCodeGroup.MergeLogic*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: ParseXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: protected override void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "Da aggiungere."
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "Da aggiungere."
  overload: System.Security.Policy.NetCodeGroup.ParseXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.PermissionSetName
  id: PermissionSetName
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: PermissionSetName
  nameWithType: NetCodeGroup.PermissionSetName
  fullName: System.Security.Policy.NetCodeGroup.PermissionSetName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Ottiene il nome del <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> per il gruppo di codice."
  syntax:
    content: public override string PermissionSetName { get; }
    return:
      type: System.String
      description: "Sempre la stringa &quot;Stesso sito Web&quot;."
  overload: System.Security.Policy.NetCodeGroup.PermissionSetName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess
  id: ResetConnectAccess
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: ResetConnectAccess()
  nameWithType: NetCodeGroup.ResetConnectAccess()
  fullName: System.Security.Policy.NetCodeGroup.ResetConnectAccess()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Rimuove tutte le informazioni di accesso di connessione per il gruppo di codice corrente."
  remarks: "Utilizzare questo metodo per rimuovere le regole di accesso di connessione predefinito fornito dal sistema.       Le regole predefinite vengono visualizzate nella tabella seguente.      | Schema | Regola |   |------------|----------|   | file | È permesso alcun accesso della connessione al server di origine. |   | http | È consentito l&quot;accesso HTTP e HTTPS tramite la porta di origine. |   | https | È consentito l&quot;accesso HTTPS tramite la porta di origine. |"
  example:
  - "The following code example demonstrates calling this method to remove the default code access connection rules.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/m-system.security.policy_32_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/m-system.security.policy_32_1.cpp)]"
  syntax:
    content: public void ResetConnectAccess ();
    parameters: []
  overload: System.Security.Policy.NetCodeGroup.ResetConnectAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  id: Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: Resolve(Evidence)
  nameWithType: NetCodeGroup.Resolve(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.Resolve(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Risolve i criteri per il gruppo di codice e i relativi discendenti per un set di evidenze."
  remarks: "Dato l&quot;evidenza per un assembly da caricare, questo metodo restituisce il gruppo di codice controllando innanzitutto la condizione di appartenenza base all&quot;evidenza specificata. Se viene trovata una corrispondenza, questo metodo restituisce un&quot;istruzione di criteri per il gruppo di codice, inclusa la valutazione dei gruppi di codice figlio.       L&quot;operazione di questo metodo è il seguente: se la condizione di appartenenza non corrisponde l&quot;evidenza specificata, restituire `null`; in caso contrario, impostare l&quot;autorizzazione impostata per essere restituiti (P) è uguale all&quot;istruzione dei criteri del gruppo di codice e continuare. Per ogni gruppo di codice figlio, risolvere il gruppo di codice con la stessa prova; Se il risultato non è `null`, restituire tale istruzione dei criteri. Se nessun gruppo di codice figlio corrispondente, restituire P (istruzione dei criteri dell&quot;elemento padre)."
  syntax:
    content: public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Il <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> per l&quot;assembly."
    return:
      type: System.Security.Policy.PolicyStatement
      description: "Oggetto <xref href=&quot;System.Security.Policy.PolicyStatement&quot;> </xref> che include le autorizzazioni concesse dal gruppo di codice con attributi facoltativi, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non si applica il gruppo di codice (la condizione di appartenenza non corrisponde l&quot;evidenza specificata)."
  overload: System.Security.Policy.NetCodeGroup.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "Più di un gruppo di codice (incluso il gruppo di codice padre e i gruppi di codice figlio) è contrassegnato <xref href=&quot;System.Security.Policy.PolicyStatementAttribute&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Risolve i gruppi di codice corrispondenti."
  remarks: "Dato l&quot;evidenza per un assembly da caricare, questo metodo restituisce il gruppo di codice controllando innanzitutto la condizione di appartenenza base all&quot;evidenza specificata. Se viene trovata una corrispondenza, questo metodo restituisce un gruppo di codice radice. Il gruppo di codice che viene restituito può contenere gruppi di codice figlio, che, a sua volta, possono anche avere gruppi di codice figlio, pertanto il valore restituito riflette il set completo di gruppi di codice corrispondente dall&quot;evidenza fornita."
  syntax:
    content: public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "L&quot;evidenza per l&quot;assembly."
    return:
      type: System.Security.Policy.CodeGroup
      description: "Il set completo di gruppi di codice che sono stati soddisfatti dall&quot;evidenza."
  overload: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Policy.CodeGroup
  isExternal: false
  name: System.Security.Policy.CodeGroup
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: NetCodeGroup(IMembershipCondition)
  nameWithType: NetCodeGroup.NetCodeGroup(IMembershipCondition)
  fullName: System.Security.Policy.NetCodeGroup.NetCodeGroup(IMembershipCondition)
- uid: System.Security.Policy.IMembershipCondition
  parent: System.Security.Policy
  isExternal: false
  name: IMembershipCondition
  nameWithType: IMembershipCondition
  fullName: System.Security.Policy.IMembershipCondition
- uid: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AbsentOriginScheme
  nameWithType: NetCodeGroup.AbsentOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AddConnectAccess(String,CodeConnectAccess)
  nameWithType: NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
  fullName: System.Security.Policy.NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
- uid: System.Security.Policy.CodeConnectAccess
  parent: System.Security.Policy
  isExternal: false
  name: CodeConnectAccess
  nameWithType: CodeConnectAccess
  fullName: System.Security.Policy.CodeConnectAccess
- uid: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AnyOtherOriginScheme
  nameWithType: NetCodeGroup.AnyOtherOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
- uid: System.Security.Policy.NetCodeGroup.AttributeString
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AttributeString
  nameWithType: NetCodeGroup.AttributeString
  fullName: System.Security.Policy.NetCodeGroup.AttributeString
- uid: System.Security.Policy.NetCodeGroup.Copy
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Copy()
  nameWithType: NetCodeGroup.Copy()
  fullName: System.Security.Policy.NetCodeGroup.Copy()
- uid: System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: CreateXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.Policy.NetCodeGroup.Equals(System.Object)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Equals(Object)
  nameWithType: NetCodeGroup.Equals(Object)
  fullName: System.Security.Policy.NetCodeGroup.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetConnectAccessRules()
  nameWithType: NetCodeGroup.GetConnectAccessRules()
  fullName: System.Security.Policy.NetCodeGroup.GetConnectAccessRules()
- uid: System.Collections.DictionaryEntry[]
  parent: System.Collections
  isExternal: true
  name: DictionaryEntry
  nameWithType: DictionaryEntry
  fullName: System.Collections.DictionaryEntry[]
  spec.csharp:
  - uid: System.Collections.DictionaryEntry
    name: DictionaryEntry
    nameWithType: DictionaryEntry
    fullName: DictionaryEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Policy.NetCodeGroup.GetHashCode
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetHashCode()
  nameWithType: NetCodeGroup.GetHashCode()
  fullName: System.Security.Policy.NetCodeGroup.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.NetCodeGroup.MergeLogic
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: NetCodeGroup.MergeLogic
  fullName: System.Security.Policy.NetCodeGroup.MergeLogic
- uid: System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ParseXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
- uid: System.Security.Policy.NetCodeGroup.PermissionSetName
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: PermissionSetName
  nameWithType: NetCodeGroup.PermissionSetName
  fullName: System.Security.Policy.NetCodeGroup.PermissionSetName
- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResetConnectAccess()
  nameWithType: NetCodeGroup.ResetConnectAccess()
  fullName: System.Security.Policy.NetCodeGroup.ResetConnectAccess()
- uid: System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Resolve(Evidence)
  nameWithType: NetCodeGroup.Resolve(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.Resolve(Evidence)
- uid: System.Security.Policy.PolicyStatement
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatement
  nameWithType: PolicyStatement
  fullName: System.Security.Policy.PolicyStatement
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
- uid: System.Security.Policy.NetCodeGroup.#ctor*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: NetCodeGroup
  nameWithType: NetCodeGroup.NetCodeGroup
- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AddConnectAccess
  nameWithType: NetCodeGroup.AddConnectAccess
- uid: System.Security.Policy.NetCodeGroup.AttributeString*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AttributeString
  nameWithType: NetCodeGroup.AttributeString
- uid: System.Security.Policy.NetCodeGroup.Copy*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Copy
  nameWithType: NetCodeGroup.Copy
- uid: System.Security.Policy.NetCodeGroup.CreateXml*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: CreateXml
  nameWithType: NetCodeGroup.CreateXml
- uid: System.Security.Policy.NetCodeGroup.Equals*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Equals
  nameWithType: NetCodeGroup.Equals
- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetConnectAccessRules
  nameWithType: NetCodeGroup.GetConnectAccessRules
- uid: System.Security.Policy.NetCodeGroup.GetHashCode*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetHashCode
  nameWithType: NetCodeGroup.GetHashCode
- uid: System.Security.Policy.NetCodeGroup.MergeLogic*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: NetCodeGroup.MergeLogic
- uid: System.Security.Policy.NetCodeGroup.ParseXml*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ParseXml
  nameWithType: NetCodeGroup.ParseXml
- uid: System.Security.Policy.NetCodeGroup.PermissionSetName*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: PermissionSetName
  nameWithType: NetCodeGroup.PermissionSetName
- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResetConnectAccess
  nameWithType: NetCodeGroup.ResetConnectAccess
- uid: System.Security.Policy.NetCodeGroup.Resolve*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Resolve
  nameWithType: NetCodeGroup.Resolve
- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups
  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups
