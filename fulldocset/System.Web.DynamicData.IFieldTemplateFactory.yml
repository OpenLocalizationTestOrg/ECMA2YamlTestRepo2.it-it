### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.IFieldTemplateFactory
  id: IFieldTemplateFactory
  children:
  - System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  - System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  langs:
  - csharp
  name: IFieldTemplateFactory
  nameWithType: IFieldTemplateFactory
  fullName: System.Web.DynamicData.IFieldTemplateFactory
  type: Interface
  summary: "Definisce un&quot;interfaccia implementata da oggetti che creano modelli di campo."
  remarks: "Questa classe deve essere implementata dalla <xref:System.Web.DynamicData.FieldTemplateFactory>classe per creare un modello di campo.</xref:System.Web.DynamicData.FieldTemplateFactory> Questa interfaccia fornisce metodi che consentono di inizializzare il <xref:System.Web.DynamicData.FieldTemplateFactory>e crea i modelli di campo.</xref:System.Web.DynamicData.FieldTemplateFactory>"
  syntax:
    content: public interface IFieldTemplateFactory
  implements: []
  platform:
  - net462
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  id: CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  langs:
  - csharp
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Crea un&quot;istanza di un modello di campo utilizzando il <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> (classe), il <xref href=&quot;System.Web.UI.WebControls.DataBoundControlMode&quot;> </xref> classe e <xref:System.Web.DynamicData.MetaColumn.UIHint*>proprietà.</xref:System.Web.DynamicData.MetaColumn.UIHint*>"
  remarks: "Modelli di campo di ASP.NET Dynamic Data sono controlli utente ASP.NET che mappano i controlli di dati per tipi di dati in un modello di dati. Modelli di campo derivano in genere da <xref:System.Web.DynamicData.FieldTemplateUserControl>, la classe che consente l&quot;accesso ai campi di dati, le colonne di dati e metadati nei modelli di data.</xref:System.Web.DynamicData.FieldTemplateUserControl> Progetti di Dynamic Data forniscono modelli di campo predefiniti, ma è possibile modificarle o creare modelli di campo personalizzati. Quando viene implementato, questo metodo crea un modello di campo in base alla colonna di dati, la modalità della colonna di dati e <xref:System.Web.DynamicData.MetaColumn.UIHint%2A>proprietà.</xref:System.Web.DynamicData.MetaColumn.UIHint%2A> Specificare il `uiHint` parametro se si desidera eseguire il rendering di dati utilizzando un modello di campo personalizzato."
  syntax:
    content: public System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "Specifica la colonna di dati da utilizzare per visualizzare il modello di campo."
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "Specifica la modalità di visualizzazione del modello di campo."
    - id: uiHint
      type: System.String
      description: "Specifica il modello di campo da utilizzare."
    return:
      type: System.Web.DynamicData.IFieldTemplate
      description: "Un&quot;istanza di un <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref> quando viene implementato in una classe dell&quot;oggetto."
  overload: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  id: Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  langs:
  - csharp
  name: Initialize(MetaModel)
  nameWithType: IFieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.Initialize(MetaModel)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inizializza un <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref> utilizzando il modello di dati specificato."
  remarks: "ASP.NET Dynamic Data utilizza modelli di campo per visualizzare i singoli campi dati. Modelli di campo in genere vengono implementati come controlli utente che eseguono il mapping dei tipi di dati in un modello di dati ai singoli campi nel controllo dei dati. Questo metodo inizializza la <xref:System.Web.DynamicData.FieldTemplateFactory>classe, che è possibile creare modelli di campo tramite il modello di dati del modello di campo verrà utilizzato.</xref:System.Web.DynamicData.FieldTemplateFactory>"
  syntax:
    content: public void Initialize (System.Web.DynamicData.MetaModel model);
    parameters:
    - id: model
      type: System.Web.DynamicData.MetaModel
      description: "Specifica il modello di dati che utilizza il modello di campo."
  overload: System.Web.DynamicData.IFieldTemplateFactory.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
- uid: System.Web.DynamicData.IFieldTemplate
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldTemplate
  nameWithType: IFieldTemplate
  fullName: System.Web.DynamicData.IFieldTemplate
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: Initialize(MetaModel)
  nameWithType: IFieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.Initialize(MetaModel)
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate*
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize*
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: Initialize
  nameWithType: IFieldTemplateFactory.Initialize
