### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.BindableAttribute
  id: BindableAttribute
  children:
  - System.ComponentModel.BindableAttribute.#ctor(System.Boolean)
  - System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)
  - System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)
  - System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)
  - System.ComponentModel.BindableAttribute.Bindable
  - System.ComponentModel.BindableAttribute.Default
  - System.ComponentModel.BindableAttribute.Direction
  - System.ComponentModel.BindableAttribute.Equals(System.Object)
  - System.ComponentModel.BindableAttribute.GetHashCode
  - System.ComponentModel.BindableAttribute.IsDefaultAttribute
  - System.ComponentModel.BindableAttribute.No
  - System.ComponentModel.BindableAttribute.Yes
  langs:
  - csharp
  name: BindableAttribute
  nameWithType: BindableAttribute
  fullName: System.ComponentModel.BindableAttribute
  type: Class
  summary: "Specifica se un membro viene in genere utilizzato per l&quot;associazione. Questa classe non può essere ereditata."
  remarks: "È possibile specificare questo attributo per più membri, in genere di proprietà, in un controllo.       Se una proprietà è stata contrassegnata con il BindableAttribute impostato su `true`, quindi una notifica di modifica della proprietà deve essere generata per tale proprietà. Questo significa che se il <xref:System.ComponentModel.BindableAttribute.Bindable%2A>proprietà <xref:System.ComponentModel.BindableAttribute.Yes>, quindi l&quot;associazione dati bidirezionale è supportata.</xref:System.ComponentModel.BindableAttribute.Yes> </xref:System.ComponentModel.BindableAttribute.Bindable%2A> Se <xref:System.ComponentModel.BindableAttribute.Bindable%2A>è <xref:System.ComponentModel.BindableAttribute.No>, è comunque possibile associare la proprietà, ma questa non dovrebbe essere presente nel set predefinito di proprietà da associare, perché venga generata una notifica di modifica della proprietà.</xref:System.ComponentModel.BindableAttribute.No> </xref:System.ComponentModel.BindableAttribute.Bindable%2A>      > [!NOTE] > Quando si contrassegna una proprietà con <xref:System.ComponentModel.BindableAttribute.%23ctor%2A>impostato su `true`, il valore di questo attributo è impostato sul membro costante <xref:System.ComponentModel.BindableAttribute.Yes>.</xref:System.ComponentModel.BindableAttribute.Yes> </xref:System.ComponentModel.BindableAttribute.%23ctor%2A> Per una proprietà contrassegnata con il <xref:System.ComponentModel.BindableAttribute.%23ctor%2A>impostato su `false`, il valore è <xref:System.ComponentModel.BindableAttribute.No>.</xref:System.ComponentModel.BindableAttribute.No> </xref:System.ComponentModel.BindableAttribute.%23ctor%2A> Pertanto, per controllare il valore di questo attributo nel codice, è necessario specificare l&quot;attributo come <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>o <xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>.</xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName> </xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>      > [!CAUTION] > È possibile utilizzare questo attributo in fase di progettazione solo. È comunque possibile associazione a qualsiasi proprietà in fase di esecuzione.       Per ulteriori informazioni, vedere [attributi](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example marks a property as appropriate to bind data to.  \n  \n [!code-cs[Classic BindableAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._142_1.cs)]\n [!code-vb[Classic BindableAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._142_1.vb)]\n [!code-cpp[Classic BindableAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._142_1.cpp)]  \n  \n The next code example shows how to check the value of the BindableAttribute for `MyProperty`. First, the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object. Next, the code indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`. Finally, the code returns the attributes for this property and saves them in the attributes variable. The code example presents two different ways to check the value of the BindableAttribute. In the second code fragment, the example calls the <xref:System.Object.Equals%2A> method. In the last code fragment, the example uses the <xref:System.ComponentModel.BindableAttribute.Bindable%2A> property to check the value.  \n  \n [!code-cs[Classic BindableAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._142_2.cs)]\n [!code-vb[Classic BindableAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._142_2.vb)]\n [!code-cpp[Classic BindableAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._142_2.cpp)]  \n  \n If you marked a class with the BindableAttribute, use the following code example to check the value.  \n  \n [!code-cs[Classic BindableAttribute Example#3](~/add/codesnippet/csharp/t-system.componentmodel._142_3.cs)]\n [!code-vb[Classic BindableAttribute Example#3](~/add/codesnippet/visualbasic/t-system.componentmodel._142_3.vb)]\n [!code-cpp[Classic BindableAttribute Example#3](~/add/codesnippet/cpp/t-system.componentmodel._142_3.cpp)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All)]

      public sealed class BindableAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: BindableAttribute(Boolean)
  nameWithType: BindableAttribute.BindableAttribute(Boolean)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref> classe con un valore booleano."
  remarks: "Quando si contrassegna una proprietà con il <xref:System.ComponentModel.BindableAttribute>impostato su `true`, il valore di questo attributo è impostato sul membro costante <xref:System.ComponentModel.BindableAttribute.Yes>.</xref:System.ComponentModel.BindableAttribute.Yes> </xref:System.ComponentModel.BindableAttribute> Per una proprietà contrassegnata con il <xref:System.ComponentModel.BindableAttribute>impostato su `false`, il valore è <xref:System.ComponentModel.BindableAttribute.No>.</xref:System.ComponentModel.BindableAttribute.No> </xref:System.ComponentModel.BindableAttribute> Pertanto, per controllare il valore di questo attributo nel codice, è necessario specificare l&quot;attributo come <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>o <xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>.</xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName> </xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>"
  example:
  - "The following code example marks a property as appropriate to bind data to. This code example creates a new <xref:System.ComponentModel.BindableAttribute>, sets its value to <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>, and binds it to the property.  \n  \n [!code-cs[Classic BindableAttribute.BindableAttribute Example#1](~/add/codesnippet/csharp/m-system.componentmodel._14_1.cs)]\n [!code-vb[Classic BindableAttribute.BindableAttribute Example#1](~/add/codesnippet/visualbasic/m-system.componentmodel._14_1.vb)]\n [!code-cpp[Classic BindableAttribute.BindableAttribute Example#1](~/add/codesnippet/cpp/m-system.componentmodel._14_1.cpp)]"
  syntax:
    content: public BindableAttribute (bool bindable);
    parameters:
    - id: bindable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per utilizzare proprietà di binding. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.BindableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)
  id: '#ctor(System.ComponentModel.BindableSupport)'
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: BindableAttribute(BindableSupport)
  nameWithType: BindableAttribute.BindableAttribute(BindableSupport)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref> classe con uno del <xref href=&quot;System.ComponentModel.BindableSupport&quot;> </xref> valori."
  remarks: "Quando si contrassegna una proprietà con il <xref:System.ComponentModel.BindableAttribute>impostato su `true`, il valore di questo attributo è impostato sul membro costante <xref:System.ComponentModel.BindableAttribute.Yes>.</xref:System.ComponentModel.BindableAttribute.Yes> </xref:System.ComponentModel.BindableAttribute> Per una proprietà contrassegnata con il <xref:System.ComponentModel.BindableAttribute>impostato su `false`, il valore è <xref:System.ComponentModel.BindableAttribute.No>.</xref:System.ComponentModel.BindableAttribute.No> </xref:System.ComponentModel.BindableAttribute> Pertanto, per controllare il valore di questo attributo nel codice, è necessario specificare l&quot;attributo come <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>o <xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName>.</xref:System.ComponentModel.BindableAttribute.No?displayProperty=fullName> </xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>"
  example:
  - "The following code example marks a property as appropriate to bind data to. This code example creates a new <xref:System.ComponentModel.BindableAttribute>, sets its value to <xref:System.ComponentModel.BindableAttribute.Yes?displayProperty=fullName>, and binds it to the property.  \n  \n [!code-cpp[Classic BindableAttribute.BindableAttribute1 Example#1](~/add/codesnippet/cpp/f23f7ef8-7d45-4e98-96fc-_1.cpp)]\n [!code-vb[Classic BindableAttribute.BindableAttribute1 Example#1](~/add/codesnippet/visualbasic/f23f7ef8-7d45-4e98-96fc-_1.vb)]\n [!code-cs[Classic BindableAttribute.BindableAttribute1 Example#1](~/add/codesnippet/csharp/f23f7ef8-7d45-4e98-96fc-_1.cs)]"
  syntax:
    content: public BindableAttribute (System.ComponentModel.BindableSupport flags);
    parameters:
    - id: flags
      type: System.ComponentModel.BindableSupport
      description: "Uno del <xref href=&quot;System.ComponentModel.BindableSupport&quot;> </xref> valori."
  overload: System.ComponentModel.BindableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)
  id: '#ctor(System.Boolean,System.ComponentModel.BindingDirection)'
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: BindableAttribute(Boolean,BindingDirection)
  nameWithType: BindableAttribute.BindableAttribute(Boolean,BindingDirection)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean,BindingDirection)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref> classe."
  syntax:
    content: public BindableAttribute (bool bindable, System.ComponentModel.BindingDirection direction);
    parameters:
    - id: bindable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per utilizzare proprietà di binding. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: direction
      type: System.ComponentModel.BindingDirection
      description: "Uno del <xref href=&quot;System.ComponentModel.BindingDirection&quot;> </xref> valori."
  overload: System.ComponentModel.BindableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)
  id: '#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)'
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: BindableAttribute(BindableSupport,BindingDirection)
  nameWithType: BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref> classe."
  syntax:
    content: public BindableAttribute (System.ComponentModel.BindableSupport flags, System.ComponentModel.BindingDirection direction);
    parameters:
    - id: flags
      type: System.ComponentModel.BindableSupport
      description: "Uno del <xref href=&quot;System.ComponentModel.BindableSupport&quot;> </xref> valori."
    - id: direction
      type: System.ComponentModel.BindingDirection
      description: "Uno del <xref href=&quot;System.ComponentModel.BindingDirection&quot;> </xref> valori."
  overload: System.ComponentModel.BindableAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Bindable
  id: Bindable
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Bindable
  nameWithType: BindableAttribute.Bindable
  fullName: System.ComponentModel.BindableAttribute.Bindable
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene un valore che indica che una proprietà viene in genere utilizzata per l&quot;associazione."
  remarks: ''
  example:
  - "The following code example checks to see whether `MyProperty` is bindable. First the code gets the attributes for `MyProperty` by doing the following:  \n  \n-   Retrieving a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.  \n  \n-   Indexing into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.  \n  \n-   Saving the attributes for this property in the attributes variable.  \n  \n Then, the code sets `myAttribute` to the value of the <xref:System.ComponentModel.BindableAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property is bindable.  \n  \n For this code example to run, you must provide the fully qualified assembly name. For information about how to obtain the fully qualified assembly name, see  \n  \n [Assembly Names](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic BindableAttribute.Bindable Example#1](~/add/codesnippet/csharp/p-system.componentmodel._3_1.cs)]\n [!code-cpp[Classic BindableAttribute.Bindable Example#1](~/add/codesnippet/cpp/p-system.componentmodel._3_1.cpp)]\n [!code-vb[Classic BindableAttribute.Bindable Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._3_1.vb)]"
  syntax:
    content: public bool Bindable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la proprietà viene in genere utilizzata per l&quot;associazione; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.BindableAttribute.Bindable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Default
  id: Default
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Default
  nameWithType: BindableAttribute.Default
  fullName: System.ComponentModel.BindableAttribute.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Specifica il valore predefinito per il <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref>, ovvero <xref href=&quot;System.ComponentModel.BindableAttribute.No&quot;> </xref>. Questo campo è di sola lettura."
  remarks: "Se si contrassegna una proprietà con questo valore <xref:System.ComponentModel.BindableAttribute>è impostato sul membro costante <xref:System.ComponentModel.BindableAttribute>.</xref:System.ComponentModel.BindableAttribute> </xref:System.ComponentModel.BindableAttribute> Pertanto, quando si desidera controllare se l&quot;attributo è impostato su questo valore nel codice, è necessario specificare l&quot;attributo come <xref:System.ComponentModel.BindableAttribute?displayProperty=fullName>.</xref:System.ComponentModel.BindableAttribute?displayProperty=fullName>"
  syntax:
    content: public static readonly System.ComponentModel.BindableAttribute Default;
    return:
      type: System.ComponentModel.BindableAttribute
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Direction
  id: Direction
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Direction
  nameWithType: BindableAttribute.Direction
  fullName: System.ComponentModel.BindableAttribute.Direction
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene un valore che indica la direzione o istruzioni di associazione di dati di questa proprietà."
  syntax:
    content: public System.ComponentModel.BindingDirection Direction { get; }
    return:
      type: System.ComponentModel.BindingDirection
      description: "La direzione dell&quot;associazione di dati di questa proprietà."
  overload: System.ComponentModel.BindableAttribute.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: BindableAttribute.Equals(Object)
  fullName: System.ComponentModel.BindableAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Determina se due <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref> oggetti sono uguali."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto specificato <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref> è uguale all&quot;oggetto corrente <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref>; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se non è uguale."
  overload: System.ComponentModel.BindableAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: BindableAttribute.GetHashCode()
  fullName: System.ComponentModel.BindableAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Funge da funzione hash per il <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref> classe."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash per l&quot;oggetto corrente <xref href=&quot;System.ComponentModel.BindableAttribute&quot;> </xref>."
  overload: System.ComponentModel.BindableAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.IsDefaultAttribute
  id: IsDefaultAttribute
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: IsDefaultAttribute()
  nameWithType: BindableAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.BindableAttribute.IsDefaultAttribute()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Determina se questo attributo è il valore predefinito."
  syntax:
    content: public override bool IsDefaultAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;attributo è il valore predefinito per questa classe di attributo. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.BindableAttribute.IsDefaultAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.No
  id: No
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: No
  nameWithType: BindableAttribute.No
  fullName: System.ComponentModel.BindableAttribute.No
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Specifica che una proprietà non è in genere utilizzata per l&quot;associazione. Questo campo è di sola lettura."
  remarks: "Il campo non è l&quot;impostazione predefinita per <xref:System.ComponentModel.BindableAttribute>.</xref:System.ComponentModel.BindableAttribute>       Quando si contrassegna una proprietà con il <xref:System.ComponentModel.BindableAttribute.%23ctor%2A>costruttore del valore `false,` il valore di questo attributo è impostato sul membro costante Nr.</xref:System.ComponentModel.BindableAttribute.%23ctor%2A> Pertanto, per controllare se l&quot;attributo è impostato su questo valore nel codice, è necessario specificare l&quot;attributo come No."
  syntax:
    content: public static readonly System.ComponentModel.BindableAttribute No;
    return:
      type: System.ComponentModel.BindableAttribute
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.BindableAttribute.Yes
  id: Yes
  parent: System.ComponentModel.BindableAttribute
  langs:
  - csharp
  name: Yes
  nameWithType: BindableAttribute.Yes
  fullName: System.ComponentModel.BindableAttribute.Yes
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Specifica che una proprietà viene in genere utilizzata per l&quot;associazione. Questo campo è di sola lettura."
  remarks: "Quando si contrassegna una proprietà con il <xref:System.ComponentModel.BindableAttribute.%23ctor%2A>costruttore del valore `true`, il valore della <xref:System.ComponentModel.BindableAttribute>è impostato sul membro costante Sì.</xref:System.ComponentModel.BindableAttribute> </xref:System.ComponentModel.BindableAttribute.%23ctor%2A> Pertanto, per controllare se l&quot;attributo è impostato su questo valore nel codice, è necessario specificare l&quot;attributo su Sì."
  syntax:
    content: public static readonly System.ComponentModel.BindableAttribute Yes;
    return:
      type: System.ComponentModel.BindableAttribute
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute(Boolean)
  nameWithType: BindableAttribute.BindableAttribute(Boolean)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute(BindableSupport)
  nameWithType: BindableAttribute.BindableAttribute(BindableSupport)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport)
- uid: System.ComponentModel.BindableSupport
  parent: System.ComponentModel
  isExternal: false
  name: BindableSupport
  nameWithType: BindableSupport
  fullName: System.ComponentModel.BindableSupport
- uid: System.ComponentModel.BindableAttribute.#ctor(System.Boolean,System.ComponentModel.BindingDirection)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute(Boolean,BindingDirection)
  nameWithType: BindableAttribute.BindableAttribute(Boolean,BindingDirection)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(Boolean,BindingDirection)
- uid: System.ComponentModel.BindingDirection
  parent: System.ComponentModel
  isExternal: false
  name: BindingDirection
  nameWithType: BindingDirection
  fullName: System.ComponentModel.BindingDirection
- uid: System.ComponentModel.BindableAttribute.#ctor(System.ComponentModel.BindableSupport,System.ComponentModel.BindingDirection)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute(BindableSupport,BindingDirection)
  nameWithType: BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)
  fullName: System.ComponentModel.BindableAttribute.BindableAttribute(BindableSupport,BindingDirection)
- uid: System.ComponentModel.BindableAttribute.Bindable
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Bindable
  nameWithType: BindableAttribute.Bindable
  fullName: System.ComponentModel.BindableAttribute.Bindable
- uid: System.ComponentModel.BindableAttribute.Default
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Default
  nameWithType: BindableAttribute.Default
  fullName: System.ComponentModel.BindableAttribute.Default
- uid: System.ComponentModel.BindableAttribute
  parent: System.ComponentModel
  isExternal: false
  name: BindableAttribute
  nameWithType: BindableAttribute
  fullName: System.ComponentModel.BindableAttribute
- uid: System.ComponentModel.BindableAttribute.Direction
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Direction
  nameWithType: BindableAttribute.Direction
  fullName: System.ComponentModel.BindableAttribute.Direction
- uid: System.ComponentModel.BindableAttribute.Equals(System.Object)
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: BindableAttribute.Equals(Object)
  fullName: System.ComponentModel.BindableAttribute.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.BindableAttribute.GetHashCode
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: BindableAttribute.GetHashCode()
  fullName: System.ComponentModel.BindableAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.BindableAttribute.IsDefaultAttribute
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: IsDefaultAttribute()
  nameWithType: BindableAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.BindableAttribute.IsDefaultAttribute()
- uid: System.ComponentModel.BindableAttribute.No
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: No
  nameWithType: BindableAttribute.No
  fullName: System.ComponentModel.BindableAttribute.No
- uid: System.ComponentModel.BindableAttribute.Yes
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Yes
  nameWithType: BindableAttribute.Yes
  fullName: System.ComponentModel.BindableAttribute.Yes
- uid: System.ComponentModel.BindableAttribute.#ctor*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: BindableAttribute
  nameWithType: BindableAttribute.BindableAttribute
- uid: System.ComponentModel.BindableAttribute.Bindable*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Bindable
  nameWithType: BindableAttribute.Bindable
- uid: System.ComponentModel.BindableAttribute.Direction*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Direction
  nameWithType: BindableAttribute.Direction
- uid: System.ComponentModel.BindableAttribute.Equals*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: Equals
  nameWithType: BindableAttribute.Equals
- uid: System.ComponentModel.BindableAttribute.GetHashCode*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: BindableAttribute.GetHashCode
- uid: System.ComponentModel.BindableAttribute.IsDefaultAttribute*
  parent: System.ComponentModel.BindableAttribute
  isExternal: false
  name: IsDefaultAttribute
  nameWithType: BindableAttribute.IsDefaultAttribute
