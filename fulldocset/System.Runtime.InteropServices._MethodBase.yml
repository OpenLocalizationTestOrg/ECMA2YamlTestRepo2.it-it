### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._MethodBase
  id: _MethodBase
  children:
  - System.Runtime.InteropServices._MethodBase.Attributes
  - System.Runtime.InteropServices._MethodBase.CallingConvention
  - System.Runtime.InteropServices._MethodBase.DeclaringType
  - System.Runtime.InteropServices._MethodBase.Equals(System.Object)
  - System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._MethodBase.GetHashCode
  - System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags
  - System.Runtime.InteropServices._MethodBase.GetParameters
  - System.Runtime.InteropServices._MethodBase.GetType
  - System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])
  - System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._MethodBase.IsAbstract
  - System.Runtime.InteropServices._MethodBase.IsAssembly
  - System.Runtime.InteropServices._MethodBase.IsConstructor
  - System.Runtime.InteropServices._MethodBase.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._MethodBase.IsFamily
  - System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly
  - System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly
  - System.Runtime.InteropServices._MethodBase.IsFinal
  - System.Runtime.InteropServices._MethodBase.IsHideBySig
  - System.Runtime.InteropServices._MethodBase.IsPrivate
  - System.Runtime.InteropServices._MethodBase.IsPublic
  - System.Runtime.InteropServices._MethodBase.IsSpecialName
  - System.Runtime.InteropServices._MethodBase.IsStatic
  - System.Runtime.InteropServices._MethodBase.IsVirtual
  - System.Runtime.InteropServices._MethodBase.MemberType
  - System.Runtime.InteropServices._MethodBase.MethodHandle
  - System.Runtime.InteropServices._MethodBase.Name
  - System.Runtime.InteropServices._MethodBase.ReflectedType
  - System.Runtime.InteropServices._MethodBase.ToString
  langs:
  - csharp
  name: _MethodBase
  nameWithType: _MethodBase
  fullName: System.Runtime.InteropServices._MethodBase
  type: Interface
  summary: "Espone i membri pubblici del &lt;xref:System.Reflection.MethodBase?displayProperty=fullName&gt; classe al codice non gestito."
  remarks: "Questa interfaccia consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Questa interfaccia mantiene l&quot;ordine vtable della <xref:System.Reflection.MethodBase?displayProperty=fullName>classe membri che è possibile accedere tramite gli oggetti COM non gestiti.</xref:System.Reflection.MethodBase?displayProperty=fullName>"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("6240837A-707F-3181-8E98-A36AE086766B")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.MethodBase))]

      public interface _MethodBase
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: Attributes
  nameWithType: _MethodBase.Attributes
  fullName: System.Runtime.InteropServices._MethodBase.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.Attributes*>proprietà.</xref:System.Reflection.MethodBase.Attributes*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MethodBase.Attributes%2A>proprietà ottiene gli attributi associati a questo metodo.</xref:System.Reflection.MethodBase.Attributes%2A>"
  syntax:
    content: public System.Reflection.MethodAttributes Attributes { get; }
    return:
      type: System.Reflection.MethodAttributes
      description: "Uno del <xref:System.Reflection.MethodAttributes>valori.</xref:System.Reflection.MethodAttributes>"
  overload: System.Runtime.InteropServices._MethodBase.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.CallingConvention
  id: CallingConvention
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: CallingConvention
  nameWithType: _MethodBase.CallingConvention
  fullName: System.Runtime.InteropServices._MethodBase.CallingConvention
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.CallingConvention*>proprietà.</xref:System.Reflection.MethodBase.CallingConvention*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MethodBase.CallingConvention%2A>proprietà ottiene un valore che indica le convenzioni di chiamata per questo metodo.</xref:System.Reflection.MethodBase.CallingConvention%2A>"
  syntax:
    content: public System.Reflection.CallingConventions CallingConvention { get; }
    return:
      type: System.Reflection.CallingConventions
      description: "Uno del <xref:System.Reflection.CallingConventions>valori.</xref:System.Reflection.CallingConventions>"
  overload: System.Runtime.InteropServices._MethodBase.CallingConvention*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _MethodBase.DeclaringType
  fullName: System.Runtime.InteropServices._MethodBase.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MemberInfo.DeclaringType*>proprietà.</xref:System.Reflection.MemberInfo.DeclaringType*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MemberInfo.DeclaringType%2A>proprietà ottiene la classe che dichiara questo membro.</xref:System.Reflection.MemberInfo.DeclaringType%2A>"
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "Il <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> oggetto per la classe che dichiara questo membro."
  overload: System.Runtime.InteropServices._MethodBase.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _MethodBase.Equals(Object)
  fullName: System.Runtime.InteropServices._MethodBase.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Object.Equals*>metodo.</xref:System.Object.Equals*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Object.Equals%2A>metodo determina se l&quot;oggetto specificato <xref:System.Object>è uguale all&quot;oggetto corrente <xref:System.Object>.</xref:System.Object> </xref:System.Object> </xref:System.Object.Equals%2A>"
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "<xref:System.Object>Da confrontare con l&quot;attuale <xref:System.Object>.</xref:System.Object> </xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto specificato <xref:System.Object>è uguale all&quot;oggetto corrente <xref:System.Object>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object> </xref:System.Object>"
  overload: System.Runtime.InteropServices._MethodBase.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _MethodBase.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MemberInfo.GetCustomAttributes*>metodo.</xref:System.Reflection.MemberInfo.GetCustomAttributes*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>metodo restituisce una matrice contenente tutti gli attributi personalizzati.</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>eseguire la ricerca nella catena di ereditarietà del membro per trovare gli attributi. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object[]
      description: "Matrice che contiene tutti gli attributi personalizzati o matrice con zero (0) elementi se non è definito alcun attributo."
  overload: System.Runtime.InteropServices._MethodBase.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _MethodBase.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MemberInfo.GetCustomAttributes*>metodo.</xref:System.Reflection.MemberInfo.GetCustomAttributes*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A>metodo restituisce una matrice di attributi personalizzati identificati dal <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "Il tipo di attributo da cercare. Vengono restituiti solo gli attributi assegnabili a questo tipo."
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>eseguire la ricerca nella catena di ereditarietà del membro per trovare gli attributi. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object[]
      description: "Matrice di attributi personalizzati applicati a questo membro, o una matrice con zero (0) elementi se non sono stati applicati attributi."
  overload: System.Runtime.InteropServices._MethodBase.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _MethodBase.GetHashCode()
  fullName: System.Runtime.InteropServices._MethodBase.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Object.GetHashCode*>metodo.</xref:System.Object.GetHashCode*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Object.GetHashCode%2A>metodo serve come funzione hash per un particolare tipo.</xref:System.Object.GetHashCode%2A> <xref:System.Object.GetHashCode%2A>è adatto per l&quot;uso in algoritmi hash e dati strutture, ad esempio una tabella hash.</xref:System.Object.GetHashCode%2A>"
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Il codice hash per l&quot;istanza corrente."
  overload: System.Runtime.InteropServices._MethodBase.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Esegue il mapping di un set di nomi a un set corrispondente di ID dispatch."
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito. Per ulteriori informazioni su `IDispatch::GetIDsOfNames`, vedere MSDN Library."
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "Riservato per utilizzo futuro. Deve essere IID_NULL."
    - id: rgszNames
      type: System.IntPtr
      description: "Matrice di nomi da mappare."
    - id: cNames
      type: System.UInt32
      description: "Il conteggio dei nomi di cui eseguire il mapping."
    - id: lcid
      type: System.UInt32
      description: "Contesto in cui interpretare i nomi delle impostazioni locali."
    - id: rgDispId
      type: System.IntPtr
      description: "Matrice allocata dal chiamante che riceve gli identificatori corrispondenti ai nomi."
  overload: System.Runtime.InteropServices._MethodBase.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags
  id: GetMethodImplementationFlags
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetMethodImplementationFlags()
  nameWithType: _MethodBase.GetMethodImplementationFlags()
  fullName: System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.GetMethodImplementationFlags*>metodo.</xref:System.Reflection.MethodBase.GetMethodImplementationFlags*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A>membro restituisce il <xref:System.Reflection.MethodImplAttributes>flag.</xref:System.Reflection.MethodImplAttributes> </xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A>"
  syntax:
    content: public System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();
    parameters: []
    return:
      type: System.Reflection.MethodImplAttributes
      description: "Uno del <xref:System.Reflection.MethodImplAttributes>valori.</xref:System.Reflection.MethodImplAttributes>"
  overload: System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetParameters
  id: GetParameters
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetParameters()
  nameWithType: _MethodBase.GetParameters()
  fullName: System.Runtime.InteropServices._MethodBase.GetParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.GetParameters*>metodo.</xref:System.Reflection.MethodBase.GetParameters*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.MethodBase.GetParameters%2A>metodo ottiene i parametri del costruttore o metodo specificato.</xref:System.Reflection.MethodBase.GetParameters%2A>"
  syntax:
    content: public System.Reflection.ParameterInfo[] GetParameters ();
    parameters: []
    return:
      type: System.Reflection.ParameterInfo[]
      description: "Matrice di tipo <xref:System.Reflection.ParameterInfo>contenente informazioni che corrisponde alla firma del metodo (o costruttore) ottenuto mediante reflection da questa istanza.</xref:System.Reflection.ParameterInfo>"
  overload: System.Runtime.InteropServices._MethodBase.GetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetType
  id: GetType
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetType()
  nameWithType: _MethodBase.GetType()
  fullName: System.Runtime.InteropServices._MethodBase.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Type.GetType*>metodo.</xref:System.Type.GetType*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Object.GetType%2A>metodo ottiene il tipo dell&quot;istanza corrente.</xref:System.Object.GetType%2A>"
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "Oggetto <xref:System.Type>oggetto.</xref:System.Type>"
  overload: System.Runtime.InteropServices._MethodBase.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Recupera le informazioni sul tipo per un oggetto che può essere utilizzato per ottenere le informazioni sul tipo per un&quot;interfaccia."
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito. Per ulteriori informazioni su `IDispatch::GetTypeInfo`, vedere MSDN Library."
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "Le informazioni sul tipo da restituire."
    - id: lcid
      type: System.UInt32
      description: "Identificatore delle impostazioni locali per le informazioni sul tipo."
    - id: ppTInfo
      type: System.IntPtr
      description: "Puntatore a oggetto informazioni sul tipo richiesto."
  overload: System.Runtime.InteropServices._MethodBase.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _MethodBase.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Recupera il numero di interfacce di informazioni sul tipo fornite da un oggetto (0 o 1)."
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito. Per ulteriori informazioni su `IDispatch::GetTypeInfoCount`, vedere MSDN Library."
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "Quando termina, questo metodo contiene un puntatore a una posizione che riceve il numero di interfacce di informazioni sul tipo fornite dall&quot;oggetto. Questo parametro viene passato non inizializzato."
  overload: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])
  id: Invoke(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: Invoke(Object,Object[])
  nameWithType: _MethodBase.Invoke(Object,Object[])
  fullName: System.Runtime.InteropServices._MethodBase.Invoke(Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.Invoke*>metodo.</xref:System.Reflection.MethodBase.Invoke*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.MethodBase.Invoke%2A>metodo richiama il metodo o costruttore rappresentato da questo oggetto, utilizzando i parametri specificati.</xref:System.Reflection.MethodBase.Invoke%2A>"
  syntax:
    content: public object Invoke (object obj, object[] parameters);
    parameters:
    - id: obj
      type: System.Object
      description: "L&quot;istanza creata di questo metodo."
    - id: parameters
      type: System.Object[]
      description: "Elenco di argomenti per il costruttore o il metodo richiamato. Si tratta di una matrice di oggetti con lo stesso numero, ordine e tipo dei parametri del metodo o costruttore da richiamare. Se non sono presenti parametri, `parameters` deve essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       Se il metodo o costruttore rappresentato da questa istanza accetta un <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> parametro (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> in Visual Basic), non è richiesto per tale parametro per richiamare il metodo o costruttore tramite la funzione Nessun attributo speciale. Qualsiasi oggetto in questa matrice non inizializzato in modo esplicito con un valore conterrà il valore predefinito per tale tipo di oggetto. Per gli elementi di tipo riferimento, questo valore è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Per gli elementi di tipo valore, questo valore è 0, 0,0, o <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, a seconda del tipo di elemento specifico."
    return:
      type: System.Object
      description: "Un&quot;istanza della classe associata al costruttore."
  overload: System.Runtime.InteropServices._MethodBase.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _MethodBase.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._MethodBase.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.Invoke*>metodo.</xref:System.Reflection.MethodBase.Invoke*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.MethodBase.Invoke%2A>metodo richiama il costruttore ottenuto mediante reflection da questa <xref:System.Reflection.ConstructorInfo>oggetto con gli argomenti specificati, in base ai vincoli dell&quot;oggetto specificato <xref:System.Reflection.Binder>oggetto.</xref:System.Reflection.Binder> </xref:System.Reflection.ConstructorInfo> </xref:System.Reflection.MethodBase.Invoke%2A>"
  syntax:
    content: public object Invoke (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "L&quot;istanza creata di questo metodo."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "Uno del <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;> </xref> valori che specifica il tipo di associazione."
    - id: binder
      type: System.Reflection.Binder
      description: "Oggetto <xref uid=&quot;langword_csharp_Binder&quot; name=&quot;Binder&quot; href=&quot;&quot;> </xref> che definisce un set di proprietà e consente l&quot;associazione, la coercizione dei tipi di argomento e la chiamata dei membri tramite reflection. If `binder` is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, then <xref uid=&quot;langword_csharp_Binder.DefaultBinding&quot; name=&quot;Binder.DefaultBinding&quot; href=&quot;&quot;></xref> is used."
    - id: parameters
      type: System.Object[]
      description: "Matrice di tipo <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> utilizzato per identificare il numero, ordine e tipo dei parametri per questo costruttore, in base ai vincoli di `binder`. Se il costruttore richiede parametri, è possibile passare una matrice con zero elementi, come in `Object[] parameters = new Object[0]`. Qualsiasi oggetto in questa matrice non inizializzato in modo esplicito con un valore conterrà il valore predefinito per tale tipo di oggetto. Per gli elementi di tipo riferimento, questo valore è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Per gli elementi di tipo valore, questo valore è 0, 0,0, o <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, a seconda del tipo di elemento specifico."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Oggetto <xref:System.Globalization.CultureInfo>oggetto utilizzato per regolare la coercizione dei tipi.</xref:System.Globalization.CultureInfo> Se si tratta di <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref:System.Globalization.CultureInfo>per il thread corrente verrà usato.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "Un&quot;istanza della classe associata al costruttore."
  overload: System.Runtime.InteropServices._MethodBase.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce l&quot;accesso a proprietà e metodi esposti da un oggetto."
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito. Per ulteriori informazioni su `IDispatch::Invoke`, vedere MSDN Library."
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "Un identificatore per il membro."
    - id: riid
      type: System.Guid
      description: "Riservato per utilizzo futuro. Deve essere IID_NULL."
    - id: lcid
      type: System.UInt32
      description: "Contesto delle impostazioni locali in cui interpretare gli argomenti."
    - id: wFlags
      type: System.Int16
      description: "Flag che descrivono il contesto della chiamata."
    - id: pDispParams
      type: System.IntPtr
      description: "Un puntatore a una struttura contenente una matrice di argomenti, una matrice di DISPID per argomenti denominati e i conteggi del numero di elementi nelle matrici."
    - id: pVarResult
      type: System.IntPtr
      description: "Un puntatore alla posizione in cui verrà archiviato il risultato."
    - id: pExcepInfo
      type: System.IntPtr
      description: "Un puntatore a una struttura contenente informazioni sull&quot;eccezione."
    - id: puArgErr
      type: System.IntPtr
      description: "L&quot;indice del primo argomento che contiene un errore."
  overload: System.Runtime.InteropServices._MethodBase.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsAbstract
  id: IsAbstract
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsAbstract
  nameWithType: _MethodBase.IsAbstract
  fullName: System.Runtime.InteropServices._MethodBase.IsAbstract
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.IsAbstract*>proprietà.</xref:System.Reflection.MethodBase.IsAbstract*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MethodBase.IsAbstract%2A>proprietà ottiene un valore che indica se il metodo è astratto.</xref:System.Reflection.MethodBase.IsAbstract%2A>"
  syntax:
    content: public bool IsAbstract { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il metodo è astratto. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodBase.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsAssembly
  id: IsAssembly
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsAssembly
  nameWithType: _MethodBase.IsAssembly
  fullName: System.Runtime.InteropServices._MethodBase.IsAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.IsAssembly*>proprietà.</xref:System.Reflection.MethodBase.IsAssembly*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       L&quot; <xref:System.Reflection.MethodBase.IsAssembly%2A>proprietà ottiene un valore che indica se questo metodo può essere chiamato da altre classi nello stesso assembly</xref:System.Reflection.MethodBase.IsAssembly%2A>"
  syntax:
    content: public bool IsAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo metodo può essere chiamato da altre classi nello stesso assembly; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodBase.IsAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsConstructor
  id: IsConstructor
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsConstructor
  nameWithType: _MethodBase.IsConstructor
  fullName: System.Runtime.InteropServices._MethodBase.IsConstructor
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.IsConstructor*>proprietà.</xref:System.Reflection.MethodBase.IsConstructor*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MethodBase.IsConstructor%2A>proprietà ottiene un valore che indica se il metodo è un costruttore.</xref:System.Reflection.MethodBase.IsConstructor%2A>"
  syntax:
    content: public bool IsConstructor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo metodo è un costruttore. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodBase.IsConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _MethodBase.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodBase.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MemberInfo.IsDefined*>metodo.</xref:System.Reflection.MemberInfo.IsDefined*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.       Il <xref:System.Reflection.MemberInfo.IsDefined%2A>membro indica se una o più istanze del `attributeType` parametro vengono applicate a questo membro.</xref:System.Reflection.MemberInfo.IsDefined%2A>"
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "Il <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> dell&quot;oggetto a cui vengono applicati gli attributi personalizzati."
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>eseguire la ricerca nella catena di ereditarietà del membro per trovare gli attributi. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uno o più istanze del <code> attributeType </code> parametro verrà applicate a questo membro; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodBase.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsFamily
  id: IsFamily
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsFamily
  nameWithType: _MethodBase.IsFamily
  fullName: System.Runtime.InteropServices._MethodBase.IsFamily
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.IsFamily*>proprietà.</xref:System.Reflection.MethodBase.IsFamily*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MethodBase.IsFamily%2A>proprietà ottiene un valore che indica se l&quot;accesso a questo metodo è limitato ai membri della classe e i membri delle classi derivate.</xref:System.Reflection.MethodBase.IsFamily%2A>"
  syntax:
    content: public bool IsFamily { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;accesso alla classe è limitato ai membri della classe e ai membri delle classi derivate; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodBase.IsFamily*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly
  id: IsFamilyAndAssembly
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsFamilyAndAssembly
  nameWithType: _MethodBase.IsFamilyAndAssembly
  fullName: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.IsFamilyAndAssembly*>proprietà.</xref:System.Reflection.MethodBase.IsFamilyAndAssembly*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       L&quot; <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A>proprietà ottiene un valore che indica se questo metodo può essere chiamato dai membri della classe stessa e da classi derivate, se sono nello stesso assembly</xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A>"
  syntax:
    content: public bool IsFamilyAndAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;accesso a questo metodo è limitato ai membri della classe e ai membri delle classi derivate che sono nello stesso assembly; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly
  id: IsFamilyOrAssembly
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsFamilyOrAssembly
  nameWithType: _MethodBase.IsFamilyOrAssembly
  fullName: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.IsFamilyOrAssembly*>proprietà.</xref:System.Reflection.MethodBase.IsFamilyOrAssembly*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A>proprietà ottiene un valore che indica se questo metodo può essere chiamato dalle classi derivate, ovunque si trovino e da tutte le classi nello stesso assembly.</xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A>"
  syntax:
    content: public bool IsFamilyOrAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;accesso a questo metodo è limitato ai membri della classe stessa, i membri di classi derivate, ovunque si trovino e i membri di altre classi nello stesso assembly; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsFinal
  id: IsFinal
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsFinal
  nameWithType: _MethodBase.IsFinal
  fullName: System.Runtime.InteropServices._MethodBase.IsFinal
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.IsFinal*>proprietà.</xref:System.Reflection.MethodBase.IsFinal*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MethodBase.IsFinal%2A>proprietà ottiene un valore che indica se questo metodo è `final`.</xref:System.Reflection.MethodBase.IsFinal%2A>"
  syntax:
    content: public bool IsFinal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo metodo è <xref uid=&quot;langword_csharp_final&quot; name=&quot;final&quot; href=&quot;&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodBase.IsFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsHideBySig
  id: IsHideBySig
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsHideBySig
  nameWithType: _MethodBase.IsHideBySig
  fullName: System.Runtime.InteropServices._MethodBase.IsHideBySig
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.IsHideBySig*>proprietà.</xref:System.Reflection.MethodBase.IsHideBySig*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       L&quot; <xref:System.Reflection.MethodBase.IsHideBySig%2A>proprietà ottiene un valore che indica se è nascosto solo un membro con lo stesso nome con esattamente la stessa firma nella classe derivata.</xref:System.Reflection.MethodBase.IsHideBySig%2A>"
  syntax:
    content: public bool IsHideBySig { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il membro è nascosto dalla firma. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodBase.IsHideBySig*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsPrivate
  id: IsPrivate
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsPrivate
  nameWithType: _MethodBase.IsPrivate
  fullName: System.Runtime.InteropServices._MethodBase.IsPrivate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.IsPrivate*>proprietà.</xref:System.Reflection.MethodBase.IsPrivate*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MethodBase.IsPrivate%2A>proprietà ottiene un valore che indica se questo membro è privato.</xref:System.Reflection.MethodBase.IsPrivate%2A>"
  syntax:
    content: public bool IsPrivate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;accesso a questo metodo è limitato agli altri membri della classe stessa. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodBase.IsPrivate*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsPublic
  id: IsPublic
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsPublic
  nameWithType: _MethodBase.IsPublic
  fullName: System.Runtime.InteropServices._MethodBase.IsPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.IsPublic*>proprietà.</xref:System.Reflection.MethodBase.IsPublic*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MethodBase.IsPublic%2A>proprietà ottiene un valore che indica se questo metodo è pubblico.</xref:System.Reflection.MethodBase.IsPublic%2A>"
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo metodo è pubblico; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodBase.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _MethodBase.IsSpecialName
  fullName: System.Runtime.InteropServices._MethodBase.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.IsSpecialName*>proprietà.</xref:System.Reflection.MethodBase.IsSpecialName*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MethodBase.IsSpecialName%2A>proprietà ottiene un valore che indica se questo metodo è un nome speciale.</xref:System.Reflection.MethodBase.IsSpecialName%2A>"
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo metodo ha un nome speciale; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodBase.IsSpecialName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsStatic
  id: IsStatic
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsStatic
  nameWithType: _MethodBase.IsStatic
  fullName: System.Runtime.InteropServices._MethodBase.IsStatic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.IsStatic*>proprietà.</xref:System.Reflection.MethodBase.IsStatic*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MethodBase.IsStatic%2A>proprietà ottiene un valore che indica se il metodo è `static`.</xref:System.Reflection.MethodBase.IsStatic%2A>"
  syntax:
    content: public bool IsStatic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo metodo è <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodBase.IsStatic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsVirtual
  id: IsVirtual
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsVirtual
  nameWithType: _MethodBase.IsVirtual
  fullName: System.Runtime.InteropServices._MethodBase.IsVirtual
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.IsVirtual*>proprietà.</xref:System.Reflection.MethodBase.IsVirtual*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MethodBase.IsVirtual%2A>proprietà ottiene un valore che indica se il metodo è `virtual`.</xref:System.Reflection.MethodBase.IsVirtual%2A>"
  syntax:
    content: public bool IsVirtual { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo metodo è <xref uid=&quot;langword_csharp_virtual&quot; name=&quot;virtual&quot; href=&quot;&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodBase.IsVirtual*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: MemberType
  nameWithType: _MethodBase.MemberType
  fullName: System.Runtime.InteropServices._MethodBase.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MemberInfo.MemberType*>proprietà.</xref:System.Reflection.MemberInfo.MemberType*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MemberInfo.MemberType%2A>proprietà ottiene un <xref:System.Reflection.MemberTypes>valore che indica il tipo del membro, metodo, costruttore, eventi e così via.</xref:System.Reflection.MemberTypes> </xref:System.Reflection.MemberInfo.MemberType%2A>"
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "Uno del <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> valori che indicano il tipo di membro."
  overload: System.Runtime.InteropServices._MethodBase.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.MethodHandle
  id: MethodHandle
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: MethodHandle
  nameWithType: _MethodBase.MethodHandle
  fullName: System.Runtime.InteropServices._MethodBase.MethodHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MethodBase.MethodHandle*>proprietà.</xref:System.Reflection.MethodBase.MethodHandle*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MethodBase.MethodHandle%2A>proprietà ottiene un handle per la rappresentazione interna dei metadati di un metodo.</xref:System.Reflection.MethodBase.MethodHandle%2A>"
  syntax:
    content: public RuntimeMethodHandle MethodHandle { get; }
    return:
      type: System.RuntimeMethodHandle
      description: "Oggetto <xref:System.RuntimeMethodHandle>oggetto.</xref:System.RuntimeMethodHandle>"
  overload: System.Runtime.InteropServices._MethodBase.MethodHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.Name
  id: Name
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: Name
  nameWithType: _MethodBase.Name
  fullName: System.Runtime.InteropServices._MethodBase.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MemberInfo.Name*>proprietà.</xref:System.Reflection.MemberInfo.Name*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MemberInfo.Name%2A>proprietà ottiene il nome del membro corrente.</xref:System.Reflection.MemberInfo.Name%2A>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>oggetto contenente il nome di questo membro.</xref:System.String>"
  overload: System.Runtime.InteropServices._MethodBase.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _MethodBase.ReflectedType
  fullName: System.Runtime.InteropServices._MethodBase.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Reflection.MemberInfo.ReflectedType*>proprietà.</xref:System.Reflection.MemberInfo.ReflectedType*>"
  remarks: "Questa proprietà consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.       Il <xref:System.Reflection.MemberInfo.ReflectedType%2A>proprietà ottiene l&quot;oggetto classe usato per ottenere questo `MemberInfo` oggetto.</xref:System.Reflection.MemberInfo.ReflectedType%2A>"
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: "Il <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> oggetto utilizzato per ottenere questo <xref uid=&quot;langword_csharp_MemberInfo&quot; name=&quot;MemberInfo&quot; href=&quot;&quot;> </xref> oggetto."
  overload: System.Runtime.InteropServices._MethodBase.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.ToString
  id: ToString
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: ToString()
  nameWithType: _MethodBase.ToString()
  fullName: System.Runtime.InteropServices._MethodBase.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornisce oggetti COM con accesso indipendente dalla versione di <xref:System.Object.ToString*>metodo.</xref:System.Object.ToString*>"
  remarks: "Questo metodo consente l&quot;accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito."
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Stringa che rappresenta l&quot;oggetto corrente <xref:System.Object>.</xref:System.Object>"
  overload: System.Runtime.InteropServices._MethodBase.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._MethodBase.Attributes
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Attributes
  nameWithType: _MethodBase.Attributes
  fullName: System.Runtime.InteropServices._MethodBase.Attributes
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: true
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Runtime.InteropServices._MethodBase.CallingConvention
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: CallingConvention
  nameWithType: _MethodBase.CallingConvention
  fullName: System.Runtime.InteropServices._MethodBase.CallingConvention
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: true
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Runtime.InteropServices._MethodBase.DeclaringType
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: DeclaringType
  nameWithType: _MethodBase.DeclaringType
  fullName: System.Runtime.InteropServices._MethodBase.DeclaringType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._MethodBase.Equals(System.Object)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Equals(Object)
  nameWithType: _MethodBase.Equals(Object)
  fullName: System.Runtime.InteropServices._MethodBase.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _MethodBase.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _MethodBase.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(Type,Boolean)
- uid: System.Runtime.InteropServices._MethodBase.GetHashCode
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetHashCode()
  nameWithType: _MethodBase.GetHashCode()
  fullName: System.Runtime.InteropServices._MethodBase.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetMethodImplementationFlags()
  nameWithType: _MethodBase.GetMethodImplementationFlags()
  fullName: System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags()
- uid: System.Reflection.MethodImplAttributes
  parent: System.Reflection
  isExternal: true
  name: MethodImplAttributes
  nameWithType: MethodImplAttributes
  fullName: System.Reflection.MethodImplAttributes
- uid: System.Runtime.InteropServices._MethodBase.GetParameters
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetParameters()
  nameWithType: _MethodBase.GetParameters()
  fullName: System.Runtime.InteropServices._MethodBase.GetParameters()
- uid: System.Reflection.ParameterInfo[]
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo[]
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._MethodBase.GetType
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetType()
  nameWithType: _MethodBase.GetType()
  fullName: System.Runtime.InteropServices._MethodBase.GetType()
- uid: System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _MethodBase.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Invoke(Object,Object[])
  nameWithType: _MethodBase.Invoke(Object,Object[])
  fullName: System.Runtime.InteropServices._MethodBase.Invoke(Object,Object[])
- uid: System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _MethodBase.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._MethodBase.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._MethodBase.IsAbstract
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsAbstract
  nameWithType: _MethodBase.IsAbstract
  fullName: System.Runtime.InteropServices._MethodBase.IsAbstract
- uid: System.Runtime.InteropServices._MethodBase.IsAssembly
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsAssembly
  nameWithType: _MethodBase.IsAssembly
  fullName: System.Runtime.InteropServices._MethodBase.IsAssembly
- uid: System.Runtime.InteropServices._MethodBase.IsConstructor
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsConstructor
  nameWithType: _MethodBase.IsConstructor
  fullName: System.Runtime.InteropServices._MethodBase.IsConstructor
- uid: System.Runtime.InteropServices._MethodBase.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _MethodBase.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodBase.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._MethodBase.IsFamily
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFamily
  nameWithType: _MethodBase.IsFamily
  fullName: System.Runtime.InteropServices._MethodBase.IsFamily
- uid: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: _MethodBase.IsFamilyAndAssembly
  fullName: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly
- uid: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: _MethodBase.IsFamilyOrAssembly
  fullName: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly
- uid: System.Runtime.InteropServices._MethodBase.IsFinal
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFinal
  nameWithType: _MethodBase.IsFinal
  fullName: System.Runtime.InteropServices._MethodBase.IsFinal
- uid: System.Runtime.InteropServices._MethodBase.IsHideBySig
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsHideBySig
  nameWithType: _MethodBase.IsHideBySig
  fullName: System.Runtime.InteropServices._MethodBase.IsHideBySig
- uid: System.Runtime.InteropServices._MethodBase.IsPrivate
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsPrivate
  nameWithType: _MethodBase.IsPrivate
  fullName: System.Runtime.InteropServices._MethodBase.IsPrivate
- uid: System.Runtime.InteropServices._MethodBase.IsPublic
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsPublic
  nameWithType: _MethodBase.IsPublic
  fullName: System.Runtime.InteropServices._MethodBase.IsPublic
- uid: System.Runtime.InteropServices._MethodBase.IsSpecialName
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsSpecialName
  nameWithType: _MethodBase.IsSpecialName
  fullName: System.Runtime.InteropServices._MethodBase.IsSpecialName
- uid: System.Runtime.InteropServices._MethodBase.IsStatic
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsStatic
  nameWithType: _MethodBase.IsStatic
  fullName: System.Runtime.InteropServices._MethodBase.IsStatic
- uid: System.Runtime.InteropServices._MethodBase.IsVirtual
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsVirtual
  nameWithType: _MethodBase.IsVirtual
  fullName: System.Runtime.InteropServices._MethodBase.IsVirtual
- uid: System.Runtime.InteropServices._MethodBase.MemberType
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: MemberType
  nameWithType: _MethodBase.MemberType
  fullName: System.Runtime.InteropServices._MethodBase.MemberType
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Runtime.InteropServices._MethodBase.MethodHandle
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: MethodHandle
  nameWithType: _MethodBase.MethodHandle
  fullName: System.Runtime.InteropServices._MethodBase.MethodHandle
- uid: System.RuntimeMethodHandle
  parent: System
  isExternal: true
  name: RuntimeMethodHandle
  nameWithType: RuntimeMethodHandle
  fullName: System.RuntimeMethodHandle
- uid: System.Runtime.InteropServices._MethodBase.Name
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Name
  nameWithType: _MethodBase.Name
  fullName: System.Runtime.InteropServices._MethodBase.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._MethodBase.ReflectedType
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: ReflectedType
  nameWithType: _MethodBase.ReflectedType
  fullName: System.Runtime.InteropServices._MethodBase.ReflectedType
- uid: System.Runtime.InteropServices._MethodBase.ToString
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: ToString()
  nameWithType: _MethodBase.ToString()
  fullName: System.Runtime.InteropServices._MethodBase.ToString()
- uid: System.Runtime.InteropServices._MethodBase.Attributes*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Attributes
  nameWithType: _MethodBase.Attributes
- uid: System.Runtime.InteropServices._MethodBase.CallingConvention*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: CallingConvention
  nameWithType: _MethodBase.CallingConvention
- uid: System.Runtime.InteropServices._MethodBase.DeclaringType*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: DeclaringType
  nameWithType: _MethodBase.DeclaringType
- uid: System.Runtime.InteropServices._MethodBase.Equals*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Equals
  nameWithType: _MethodBase.Equals
- uid: System.Runtime.InteropServices._MethodBase.GetCustomAttributes*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _MethodBase.GetCustomAttributes
- uid: System.Runtime.InteropServices._MethodBase.GetHashCode*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetHashCode
  nameWithType: _MethodBase.GetHashCode
- uid: System.Runtime.InteropServices._MethodBase.GetIDsOfNames*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _MethodBase.GetIDsOfNames
- uid: System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetMethodImplementationFlags
  nameWithType: _MethodBase.GetMethodImplementationFlags
- uid: System.Runtime.InteropServices._MethodBase.GetParameters*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetParameters
  nameWithType: _MethodBase.GetParameters
- uid: System.Runtime.InteropServices._MethodBase.GetType*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetType
  nameWithType: _MethodBase.GetType
- uid: System.Runtime.InteropServices._MethodBase.GetTypeInfo*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetTypeInfo
  nameWithType: _MethodBase.GetTypeInfo
- uid: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _MethodBase.GetTypeInfoCount
- uid: System.Runtime.InteropServices._MethodBase.Invoke*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Invoke
  nameWithType: _MethodBase.Invoke
- uid: System.Runtime.InteropServices._MethodBase.IsAbstract*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsAbstract
  nameWithType: _MethodBase.IsAbstract
- uid: System.Runtime.InteropServices._MethodBase.IsAssembly*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsAssembly
  nameWithType: _MethodBase.IsAssembly
- uid: System.Runtime.InteropServices._MethodBase.IsConstructor*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsConstructor
  nameWithType: _MethodBase.IsConstructor
- uid: System.Runtime.InteropServices._MethodBase.IsDefined*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsDefined
  nameWithType: _MethodBase.IsDefined
- uid: System.Runtime.InteropServices._MethodBase.IsFamily*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFamily
  nameWithType: _MethodBase.IsFamily
- uid: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: _MethodBase.IsFamilyAndAssembly
- uid: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: _MethodBase.IsFamilyOrAssembly
- uid: System.Runtime.InteropServices._MethodBase.IsFinal*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFinal
  nameWithType: _MethodBase.IsFinal
- uid: System.Runtime.InteropServices._MethodBase.IsHideBySig*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsHideBySig
  nameWithType: _MethodBase.IsHideBySig
- uid: System.Runtime.InteropServices._MethodBase.IsPrivate*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsPrivate
  nameWithType: _MethodBase.IsPrivate
- uid: System.Runtime.InteropServices._MethodBase.IsPublic*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsPublic
  nameWithType: _MethodBase.IsPublic
- uid: System.Runtime.InteropServices._MethodBase.IsSpecialName*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsSpecialName
  nameWithType: _MethodBase.IsSpecialName
- uid: System.Runtime.InteropServices._MethodBase.IsStatic*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsStatic
  nameWithType: _MethodBase.IsStatic
- uid: System.Runtime.InteropServices._MethodBase.IsVirtual*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsVirtual
  nameWithType: _MethodBase.IsVirtual
- uid: System.Runtime.InteropServices._MethodBase.MemberType*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: MemberType
  nameWithType: _MethodBase.MemberType
- uid: System.Runtime.InteropServices._MethodBase.MethodHandle*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: MethodHandle
  nameWithType: _MethodBase.MethodHandle
- uid: System.Runtime.InteropServices._MethodBase.Name*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Name
  nameWithType: _MethodBase.Name
- uid: System.Runtime.InteropServices._MethodBase.ReflectedType*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: ReflectedType
  nameWithType: _MethodBase.ReflectedType
- uid: System.Runtime.InteropServices._MethodBase.ToString*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: ToString
  nameWithType: _MethodBase.ToString
