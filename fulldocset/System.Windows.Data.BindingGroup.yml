### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingGroup
  id: BindingGroup
  children:
  - System.Windows.Data.BindingGroup.#ctor
  - System.Windows.Data.BindingGroup.BeginEdit
  - System.Windows.Data.BindingGroup.BindingExpressions
  - System.Windows.Data.BindingGroup.CancelEdit
  - System.Windows.Data.BindingGroup.CanRestoreValues
  - System.Windows.Data.BindingGroup.CommitEdit
  - System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  - System.Windows.Data.BindingGroup.HasValidationError
  - System.Windows.Data.BindingGroup.IsDirty
  - System.Windows.Data.BindingGroup.Items
  - System.Windows.Data.BindingGroup.Name
  - System.Windows.Data.BindingGroup.NotifyOnValidationError
  - System.Windows.Data.BindingGroup.Owner
  - System.Windows.Data.BindingGroup.SharesProposedValues
  - System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  - System.Windows.Data.BindingGroup.UpdateSources
  - System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  - System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  - System.Windows.Data.BindingGroup.ValidationErrors
  - System.Windows.Data.BindingGroup.ValidationRules
  langs:
  - csharp
  name: BindingGroup
  nameWithType: BindingGroup
  fullName: System.Windows.Data.BindingGroup
  type: Class
  summary: "Contiene una raccolta di associazioni e <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> oggetti utilizzati per convalidare un oggetto."
  remarks: "Un BindingGroup crea una relazione tra più associazioni, che possono essere convalidate e aggiornate insieme. Ad esempio, si supponga che un&quot;applicazione richiede all&quot;utente di immettere un indirizzo. L&quot;applicazione quindi popola un oggetto di tipo `Address`, che dispone di proprietà, `Street`, `City`, `ZipCode`, e `Country`, con i valori immessi dall&quot;utente. L&quot;applicazione include un pannello che contiene quattro <xref:System.Windows.Controls.TextBox>controlli, ognuno dei quali è associato a una delle proprietà dell&quot;oggetto dati.</xref:System.Windows.Controls.TextBox> È possibile utilizzare un <xref:System.Windows.Controls.ValidationRule>in un BindingGroup differente per convalidare il `Address` oggetto.</xref:System.Windows.Controls.ValidationRule> Se le associazioni di partecipano al BindingGroup stesso, è possibile garantire che il codice postale valido per il paese dell&quot;indirizzo.       Impostare la <xref:System.Windows.FrameworkElement.BindingGroup%2A>proprietà su <xref:System.Windows.FrameworkElement>o <xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> </xref:System.Windows.FrameworkElement.BindingGroup%2A> Gli elementi figlio ereditano il BindingGroup dagli elementi padre, come con qualsiasi altra proprietà ereditabile. Un&quot;associazione a un elemento discendente viene aggiunto a un BindingGroup differente, se si verifica una delle situazioni seguenti:-l&quot;origine dell&quot;associazione e <xref:System.Windows.FrameworkElement.DataContext%2A>dell&quot;elemento che ha il BindingGroup sono lo stesso oggetto e <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>non è impostata.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.FrameworkElement.DataContext%2A>      -Il <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>è uguale alla proprietà dell&quot;associazione di <xref:System.Windows.Data.BindingGroup.Name%2A>del <xref:System.Windows.FrameworkContentElement.BindingGroup%2A>e non è impostate esplicitamente su `null`.</xref:System.Windows.FrameworkContentElement.BindingGroup%2A> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingBase.BindingGroupName%2A>       Nell&quot;esempio dell&quot;indirizzo, si supponga che il <xref:System.Windows.FrameworkElement.DataContext%2A>del <xref:System.Windows.Controls.Panel>è impostato per l&quot;oggetto di tipo `Address`.</xref:System.Windows.Controls.Panel> </xref:System.Windows.FrameworkElement.DataContext%2A> L&quot;associazione per ogni <xref:System.Windows.Controls.TextBox>viene aggiunto a BindingGroup del pannello.</xref:System.Windows.Controls.TextBox>       Aggiungere <xref:System.Windows.Controls.ValidationRule>oggetti a un BindingGroup differente.</xref:System.Windows.Controls.ValidationRule> Il BindingGroup viene passato come primo parametro del <xref:System.Windows.Controls.ValidationRule.Validate%2A>metodo quando il <xref:System.Windows.Controls.ValidationRule>viene eseguito.</xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.ValidationRule.Validate%2A> È possibile utilizzare il <xref:System.Windows.Data.BindingGroup.TryGetValue%2A>o <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>metodo su tale BindingGroup per ottenere i valori dell&quot;oggetto, proposti e <xref:System.Windows.Data.BindingGroup.Items%2A>proprietà da ottenere le origini delle associazioni.</xref:System.Windows.Data.BindingGroup.Items%2A> </xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> </xref:System.Windows.Data.BindingGroup.TryGetValue%2A>       Un BindingGroup Aggiorna le origini di associazione nello stesso momento anziché aggiornare separatamente ogni associazione. Quando si chiama uno dei metodi per convalidare i dati (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, o <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), l&quot;associazione per ogni <xref:System.Windows.Controls.TextBox>nell&quot;esempio viene convalidata e potenzialmente aggiornata.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Data.BindingGroup.CommitEdit%2A> </xref:System.Windows.Data.BindingGroup.UpdateSources%2A> </xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A> Quando un&quot;associazione fa parte di un BindingGroup differente, l&quot;origine dell&quot;associazione non viene aggiornato finché non si chiama <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>o <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>su BindingGroup, a meno che non è impostato in modo esplicito il <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>proprietà.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.BindingGroup.CommitEdit%2A> </xref:System.Windows.Data.BindingGroup.UpdateSources%2A>"
  example:
  - "The following examples create an application that prompts the user to enter the description and price of an item and the date that the offer expires. The application displays the current information for the item below the form. The user can submit or cancel the changes.  \n  \n The application does the following to achieve this behavior.  \n  \n-   Creates a BindingGroup and adds it the root <xref:System.Windows.Controls.StackPanel> when it creates the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] of the application.  \n  \n-   Calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, and <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> in the application's logic to enable rolling back changes.  \n  \n-   Calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> in a <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the user's input and then check that an item over 100 dollars is available for at least seven days.  \n  \n The following example creates the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] of the application. The root <xref:System.Windows.Controls.StackPanel> has a BindingGroup that contains a <xref:System.Windows.Controls.ValidationRule> that validates the item, as described previously. The binding objects on the `Price` property and the `OfferExpires` property become part of the BindingGroup and each binding has a <xref:System.Windows.Controls.ValidationRule> to make sure that price and date, respectively, are valid values. The validation rules for the individual properties run before the <xref:System.Windows.Controls.ValidationRule> on the BindingGroup.  \n  \n [!code-xml[BindingGroupSnippets#WindowLayout](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#windowlayout)]  \n  \n The following example shows the event handlers for the application. When the user clicks the Submit button, the application calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to run each <xref:System.Windows.Controls.ValidationRule> that is associated with the BindingGroup. If each <xref:System.Windows.Controls.ValidationRule> succeeds, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> saves the values to the object and ends the edit transaction. If <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> is successful, the application begins another edit transaction. When a <xref:System.Windows.Controls.ValidationRule> fails, the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event occurs because the application set <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` on the BindingGroup (in the previous example). `ItemError` handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event and displays information about the validation error to the user. The example also handles the <xref:System.Windows.FrameworkElement.Loaded> event for the <xref:System.Windows.Controls.StackPanel> and the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event for the **Cancel** button.  \n  \n [!code-cs[BindingGroupSnippets#WindowLogic](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#windowlogic)]\n [!code-vb[BindingGroupSnippets#WindowLogic](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#windowlogic)]  \n  \n The following example shows the custom <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, which was added to the BindingGroup in the first example. The <xref:System.Windows.Controls.ValidationRule> uses the BindingGroup in its <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: 'public class BindingGroup : System.Windows.DependencyObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.#ctor
  id: '#ctor'
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BindingGroup()
  nameWithType: BindingGroup.BindingGroup()
  fullName: System.Windows.Data.BindingGroup.BindingGroup()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> classe."
  syntax:
    content: public BindingGroup ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.BeginEdit
  id: BeginEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BeginEdit()
  nameWithType: BindingGroup.BeginEdit()
  fullName: System.Windows.Data.BindingGroup.BeginEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Avvia una transazione di modifica per le origini nel <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Se le origini di <xref:System.Windows.Data.BindingGroup>supportano l&quot;annullamento delle modifiche in sospeso, è possibile chiamare BeginEdit per avviare la transazione di modifica, chiamare <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>per salvare le modifiche in sospeso, chiamare <xref:System.Windows.Data.BindingGroup.CancelEdit%2A>per annullare le modifiche in sospeso.</xref:System.Windows.Data.BindingGroup.CancelEdit%2A> </xref:System.Windows.Data.BindingGroup.CommitEdit%2A> </xref:System.Windows.Data.BindingGroup>       Per ogni oggetto <xref:System.Windows.Data.BindingGroup.Items%2A>che implementa <xref:System.ComponentModel.IEditableObject>, chiamate BeginEdit <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=fullName> </xref:System.ComponentModel.IEditableObject> </xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls BeginEdit when a window loads to begin the edit transaction.  \n  \n [!code-cs[BindingGroupSnippets#BeginEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#beginedit)]\n [!code-vb[BindingGroupSnippets#BeginEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#beginedit)]"
  syntax:
    content: public void BeginEdit ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.BeginEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.BindingExpressions
  id: BindingExpressions
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
  fullName: System.Windows.Data.BindingGroup.BindingExpressions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Ottiene una raccolta di <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> gli oggetti che contiene informazioni per ogni associazione nel <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "A <xref:System.Windows.Data.BindingExpression>appartiene a un <xref:System.Windows.Data.BindingGroup>Se si verifica uno dei casi seguenti:-l&quot;origine dell&quot;associazione e il <xref:System.Windows.FrameworkElement.DataContext%2A>dell&quot;elemento che ha il <xref:System.Windows.Data.BindingGroup>lo stesso oggetto e <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>non è impostata.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingExpression>      -La <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>proprietà dell&quot;associazione e <xref:System.Windows.Data.BindingGroup.Name%2A>del <xref:System.Windows.Data.BindingGroup>impostati sullo stesso valore non null e <xref:System.Windows.Data.BindingGroup>appartiene a un elemento padre dell&quot;elemento di destinazione del binding.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup.Name%2A> </xref:System.Windows.Data.BindingBase.BindingGroupName%2A>      -Si aggiunge un <xref:System.Windows.Data.BindingExpression>per BindingExpressions.</xref:System.Windows.Data.BindingExpression>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Data.BindingExpressionBase> BindingExpressions { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingExpressionBase}
      description: "Una raccolta di <xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> gli oggetti che contiene informazioni per ogni associazione nel <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.BindingExpressions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CancelEdit
  id: CancelEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: BindingGroup.CancelEdit()
  fullName: System.Windows.Data.BindingGroup.CancelEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Termina la transazione di modifica ed Elimina le modifiche in sospeso."
  remarks: "Questo metodo determina le origini annullare le modifiche in sospeso, se un oggetto di origine è in grado di farlo e terminare la transazione di modifica. Il metodo quindi aggiorna le proprietà di destinazione con i valori di origine salvata.       Per ogni oggetto <xref:System.Windows.Data.BindingGroup.Items%2A>che implementa <xref:System.ComponentModel.IEditableObject>, chiamate CancelEdit <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=fullName> </xref:System.ComponentModel.IEditableObject> </xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls CancelEdit to discard the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.  \n  \n [!code-cs[BindingGroupSnippets#CancelEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#canceledit)]\n [!code-vb[BindingGroupSnippets#CancelEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#canceledit)]"
  syntax:
    content: public void CancelEdit ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.CancelEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CanRestoreValues
  id: CanRestoreValues
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
  fullName: System.Windows.Data.BindingGroup.CanRestoreValues
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Indica se ogni origine di associazione può annullare le modifiche in sospeso e ripristinare i valori originali."
  remarks: "Un&quot;origine può annullare le modifiche in sospeso se implementa <xref:System.ComponentModel.IEditableObject>.</xref:System.ComponentModel.IEditableObject>"
  syntax:
    content: public bool CanRestoreValues { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se ogni origine di associazione può annullare le modifiche in sospeso e ripristinare i valori originali; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.CanRestoreValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CommitEdit
  id: CommitEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CommitEdit()
  nameWithType: BindingGroup.CommitEdit()
  fullName: System.Windows.Data.BindingGroup.CommitEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Esegue tutti i <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> oggetti e aggiorna le origini di associazione, se tutte le regole di convalida hanno esito positivo."
  remarks: "Se ogni <xref:System.Windows.Controls.ValidationRule>ha esito positivo, questo metodo provoca le origini per il commit delle modifiche in sospeso e terminare la transazione di modifica, se un&quot;origine dell&quot;oggetto è in grado di eseguire l&quot;operazione necessaria.</xref:System.Windows.Controls.ValidationRule>       Per ogni oggetto <xref:System.Windows.Data.BindingGroup.Items%2A>che implementa <xref:System.ComponentModel.IEditableObject>, chiamate CommitEdit <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName> </xref:System.ComponentModel.IEditableObject> </xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls CommitEdit to save the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.  \n  \n [!code-cs[BindingGroupSnippets#BeginEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#beginedit)]\n [!code-vb[BindingGroupSnippets#BeginEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#beginedit)]"
  syntax:
    content: public bool CommitEdit ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se ogni <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> ha esito positivo e i valori sono salvata per le origini; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.CommitEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  id: GetValue(System.Object,System.String)
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: GetValue(Object,String)
  nameWithType: BindingGroup.GetValue(Object,String)
  fullName: System.Windows.Data.BindingGroup.GetValue(Object,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Restituisce il valore specificato per la proprietà specificata e l&quot;elemento."
  remarks: "Utilizzare questo metodo nel <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName>metodo per ottenere il valore per eseguire il commit all&quot;origine.</xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName> Il tipo del valore restituito dipende dalla fase in cui il <xref:System.Windows.Controls.ValidationRule>si verifica.</xref:System.Windows.Controls.ValidationRule> Ad esempio, se un <xref:System.Windows.Controls.TextBox>è associato a dati a una proprietà di tipo integer e <xref:System.Windows.Controls.ValidationRule>che chiama GetValue ha relativo <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>impostato su <xref:System.Windows.Controls.ValidationStep>, il metodo restituisce una stringa.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.TextBox> Se il <xref:System.Windows.Controls.ValidationRule>è relativo <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>impostato su <xref:System.Windows.Controls.ValidationStep>, il metodo restituisce il tipo restituito dal convertitore dell&quot;associazione.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> In questo esempio GetValue restituisce in genere un numero intero."
  example:
  - "The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer. The application checks that the sales representative and the customer belong to the same region. The example shows the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, which uses the GetValue method to get values that the customer entered.  \n  \n [!code-cs[BindingGroupSnippets#ItemBindGroupValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window2.xaml.cs#itembindgroupvalidationrule)]\n [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window2.xaml.vb#itembindgroupvalidationrule)]"
  syntax:
    content: public object GetValue (object item, string propertyName);
    parameters:
    - id: item
      type: System.Object
      description: "Oggetto che contiene la proprietà specificata."
    - id: propertyName
      type: System.String
      description: "La proprietà il cui valore proposto da ottenere."
    return:
      type: System.Object
      description: "Il valore della proprietà proposto."
  overload: System.Windows.Data.BindingGroup.GetValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Non è un&quot;associazione per la proprietà e l&quot;elemento specificato."
  - type: System.Windows.Data.ValueUnavailableException
    commentId: T:System.Windows.Data.ValueUnavailableException
    description: "Il valore della proprietà specificata non è disponibile, a causa di un errore di conversione o una precedente regola di convalida non riuscita."
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.HasValidationError
  id: HasValidationError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
  fullName: System.Windows.Data.BindingGroup.HasValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> dispone di una regola di convalida non riuscita."
  syntax:
    content: public bool HasValidationError { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> dispone di una regola di convalida non riuscita; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.HasValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.IsDirty
  id: IsDirty
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
  fullName: System.Windows.Data.BindingGroup.IsDirty
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Ottiene o imposta un valore che indica se il <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> contiene un valore proposto non è stato scritto per l&quot;origine."
  syntax:
    content: public bool IsDirty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> contiene un valore proposto non è stato scritto per l&quot;origine; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Items
  id: Items
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Items
  nameWithType: BindingGroup.Items
  fullName: System.Windows.Data.BindingGroup.Items
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Ottiene le origini utilizzate dagli oggetti di associazione nel <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Ogni oggetto che viene utilizzato come origine viene aggiunto nella proprietà di elementi di una volta, anche se l&quot;oggetto viene utilizzato come origine per più associazioni. Spesso, è presente un solo elemento negli elementi, ovvero l&quot;oggetto che è l&quot; <xref:System.Windows.FrameworkElement.DataContext%2A>elemento che utilizza <xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> È possibile che un <xref:System.Windows.Data.BindingGroup>di disporre di più origini, tuttavia.</xref:System.Windows.Data.BindingGroup> Ad esempio, se gli oggetti di associazione condividono lo stesso <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>ma utilizzare oggetti di origine diversi, ogni oggetto che viene utilizzato come origine negli elementi.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A>       Può anche contenere più oggetti negli elementi se il percorso di un&quot;associazione può essere risolto in una proprietà annidata dell&quot;origine. Si supponga, ad esempio, un <xref:System.Windows.Controls.TextBox>associazione del controllo non fa parte di un <xref:System.Windows.Data.BindingGroup>e il relativo <xref:System.Windows.FrameworkElement.DataContext%2A>è un `Customer` object, che contiene una proprietà di tipo `Address`.</xref:System.Windows.FrameworkElement.DataContext%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Controls.TextBox> Se il <xref:System.Windows.Data.Binding.Path%2A>del <xref:System.Windows.Data.Binding>è il `Address.ZipCode` proprietà, il `Address` viene aggiunto alla proprietà Items.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.Path%2A>"
  example:
  - "The following examples are part of an application that checks whether the user has set the properties of two objects to equal values. The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source. The binding of the first <xref:System.Windows.Controls.TextBox> gets its source, `object1`, from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.TextBox> control's parent element (the <xref:System.Windows.Controls.StackPanel>). On the second <xref:System.Windows.Controls.TextBox>, the source of the binding is set to `object2`. The example also creates a <xref:System.Windows.Controls.Label> that displays validation errors.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroupName](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#bindinggroupname)]  \n[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validationadornersite)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.  \n  \n [!code-cs[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#bindinggroupnamevalidationrule)]\n [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#bindinggroupnamevalidationrule)]"
  syntax:
    content: public System.Collections.IList Items { get; }
    return:
      type: System.Collections.IList
      description: "Le origini utilizzate dagli oggetti di associazione nel <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Name
  id: Name
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Name
  nameWithType: BindingGroup.Name
  fullName: System.Windows.Data.BindingGroup.Name
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Ottiene o imposta il nome che identifica il <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>, che consente di includere ed escludere gli oggetti di associazione di <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Se il nome è `null`, associazioni che dispone di un&quot;origine che è lo stesso oggetto come la <xref:System.Windows.FrameworkElement.DataContext%2A>dell&quot;elemento con la <xref:System.Windows.Data.BindingGroup>partecipazione al <xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A>       È possibile includere le associazioni che dispone di un&quot;origine diversa dal <xref:System.Windows.FrameworkElement.DataContext%2A>dell&quot;elemento padre che ha il <xref:System.Windows.Data.BindingGroup>impostando nome il <xref:System.Windows.Data.BindingGroup>e <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>proprietà di un&quot;associazione sullo stesso valore.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A> È possibile escludere le associazioni che hanno la stessa origine <xref:System.Windows.FrameworkElement.DataContext%2A>dell&quot;elemento padre che ha il <xref:System.Windows.Data.BindingGroup>impostando nome il <xref:System.Windows.Data.BindingGroup>e <xref:System.Windows.Data.BindingBase.BindingGroupName%2A>proprietà di un&quot;associazione a valori diversi.</xref:System.Windows.Data.BindingBase.BindingGroupName%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.FrameworkElement.DataContext%2A>"
  example:
  - "The following examples are part of an application that checks whether the user has set the properties of two objects to equal values. The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source. The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>.  \n  \n The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the Name of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroupName](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#bindinggroupname)]  \n[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validationadornersite)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.  \n  \n [!code-cs[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#bindinggroupnamevalidationrule)]\n [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#bindinggroupnamevalidationrule)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Il nome che identifica il <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError
  id: NotifyOnValidationError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
  fullName: System.Windows.Data.BindingGroup.NotifyOnValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Ottiene o imposta se la &lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt; evento si verifica quando lo stato di un <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> le modifiche."
  remarks: "L&quot; <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>evento si verifica sull&quot;elemento che dispone di <xref:System.Windows.Data.BindingGroup>.</xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>"
  example:
  - "The following example creates a <xref:System.Windows.Data.BindingGroup> and sets NotifyOnValidationError to `true` so that the application can handle the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event when a <xref:System.Windows.Controls.ValidationRule> fails.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroup](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#bindinggroup)]  \n  \n The following example handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event.  \n  \n [!code-cs[BindingGroupSnippets#ErrorHandler](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#errorhandler)]\n [!code-vb[BindingGroupSnippets#ErrorHandler](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#errorhandler)]"
  syntax:
    content: public bool NotifyOnValidationError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il &lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt; evento si verifica quando lo stato di un <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> modifiche; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.NotifyOnValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Owner
  id: Owner
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Owner
  nameWithType: BindingGroup.Owner
  fullName: System.Windows.Data.BindingGroup.Owner
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Ottiene l&quot;oggetto di questo <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> viene assegnato a."
  syntax:
    content: public System.Windows.DependencyObject Owner { get; }
    return:
      type: System.Windows.DependencyObject
      description: "L&quot;oggetto da questo <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> viene assegnato a."
  overload: System.Windows.Data.BindingGroup.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.SharesProposedValues
  id: SharesProposedValues
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
  fullName: System.Windows.Data.BindingGroup.SharesProposedValues
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Ottiene o imposta un valore che indica se il <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> riutilizza i valori che non sono stato eseguito il commit all&quot;origine di destinazione."
  remarks: "Un valore proposto è un valore che è stato modificato nella destinazione di un&quot;associazione, ma non è stato eseguito il commit all&quot;origine. Ad esempio, si supponga che esista un&quot;associazione bidirezionale in una <xref:System.Windows.Controls.TextBox>e la <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>proprietà è impostata su <xref:System.Windows.Data.UpdateSourceTrigger>.</xref:System.Windows.Data.UpdateSourceTrigger> </xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> </xref:System.Windows.Controls.TextBox> Se l&quot;utente modifica il valore di <xref:System.Windows.Controls.TextBox>, il valore proposto è il valore nel <xref:System.Windows.Controls.TextBox>prima che venga eseguito il commit all&quot;origine.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBox>       Quando SharesProposedValues è `true`, <xref:System.Windows.Data.BindingGroup>utilizza il valore proposto quando un&quot;associazione lascia il BindingGroup e un&quot;altra associazione con la stessa origine si unisce al BindingGroup.</xref:System.Windows.Data.BindingGroup>  Ad esempio, si supponga che un&quot;applicazione consente all&quot;utente di modificare più campi e aggiornare l&quot;oggetto di origine facendo clic su un pulsante. Quando un campo non viene modificato, l&quot;applicazione visualizza in un <xref:System.Windows.Controls.TextBlock>.</xref:System.Windows.Controls.TextBlock> Quando l&quot;utente inizia a modificare un campo, l&quot;applicazione sostituisce la <xref:System.Windows.Controls.TextBlock>con un <xref:System.Windows.Controls.TextBox>.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBlock> Quando l&quot;utente termina la modifica di tale campo, l&quot;applicazione sostituisce la <xref:System.Windows.Controls.TextBox>con un <xref:System.Windows.Controls.TextBlock>.</xref:System.Windows.Controls.TextBlock> </xref:System.Windows.Controls.TextBox> Poiché l&quot;origine non viene aggiornata fino a quando l&quot;utente fa clic sul pulsante, ci deve essere un modo per il <xref:System.Windows.Controls.TextBlock>per visualizzare il valore proposto.</xref:System.Windows.Controls.TextBlock> Impostando SharesProposedValues su `true`, l&quot;applicazione visualizzerà modifiche apportate le a un campo anche quando l&quot;origine non è stato aggiornato."
  syntax:
    content: public bool SharesProposedValues { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> riutilizza i valori che non sono stato eseguito il commit all&quot;origine; in caso contrario, destinazione <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.SharesProposedValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  id: TryGetValue(System.Object,System.String,System.Object@)
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: TryGetValue(Object,String,Object)
  nameWithType: BindingGroup.TryGetValue(Object,String,Object)
  fullName: System.Windows.Data.BindingGroup.TryGetValue(Object,String,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Tenta di ottenere il valore proposto per l&quot;articolo e la proprietà specificata."
  remarks: "Restituisce TryGetValue `false` se non è presente un&quot;associazione per l&quot;elemento specificato e una proprietà o se il valore della proprietà specificata non è disponibile, a causa di un errore di conversione o una precedente regola di convalida non riuscita.       Utilizzare questo metodo nel <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName>metodo per ottenere il valore per eseguire il commit all&quot;origine.</xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName> Il tipo `value` dipende dalla fase in cui il <xref:System.Windows.Controls.ValidationRule>si verifica.</xref:System.Windows.Controls.ValidationRule> Ad esempio, se un <xref:System.Windows.Controls.TextBox>è associata a una proprietà di tipo integer, ai dati `value` è una stringa se <xref:System.Windows.Controls.ValidationRule>che chiamate TryGetValue dispone di un <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>set di <xref:System.Windows.Controls.ValidationStep>.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.TextBox> Se il <xref:System.Windows.Controls.ValidationRule>è relativo <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>impostato su <xref:System.Windows.Controls.ValidationStep>, il tipo di `value` corrisponde al tipo restituito dal convertitore dell&quot;associazione.</xref:System.Windows.Controls.ValidationStep> </xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> </xref:System.Windows.Controls.ValidationRule> In questo esempio, `value` è in genere un numero intero."
  example:
  - "The following example creates a custom <xref:System.Windows.Controls.ValidationRule> named `ValidateDateAndPrice`. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example uses the TryGetValue method and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the values the user entered into the form. Then the example checks that if an item is over 100 dollars, it will be available for at least seven days. This example is part of a larger example on the <xref:System.Windows.Data.BindingGroup> class  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: public bool TryGetValue (object item, string propertyName, out object value);
    parameters:
    - id: item
      type: System.Object
      description: "Oggetto che contiene la proprietà specificata."
    - id: propertyName
      type: System.String
      description: "La proprietà il cui valore proposto da ottenere."
    - id: value
      type: System.Object
      description: "Quando termina, questo metodo contiene un oggetto che rappresenta il valore della proprietà proposto. Questo parametro viene passato non inizializzato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore è il valore proposto per la proprietà specificata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.TryGetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.UpdateSources
  id: UpdateSources
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: UpdateSources()
  nameWithType: BindingGroup.UpdateSources()
  fullName: System.Windows.Data.BindingGroup.UpdateSources()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Esegue il convertitore sull&quot;associazione e <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> gli oggetti che hanno il <xref:System.Windows.Controls.ValidationRule.ValidationStep*>proprietà impostata su <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>, <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>, o <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref> e Salva i valori delle destinazioni di oggetti di origine se tutte le regole di convalida riuscita.</xref:System.Windows.Controls.ValidationRule.ValidationStep*>"
  remarks: "Questo metodo aggiorna l&quot;origine se ogni <xref:System.Windows.Controls.ValidationRule>ha esito positivo, ma comporta le origini per il commit delle modifiche in sospeso e terminare la transazione di modifica.</xref:System.Windows.Controls.ValidationRule> Ovvero, se l&quot;oggetto di origine implementa <xref:System.ComponentModel.IEditableObject>.</xref:System.ComponentModel.IEditableObject> Chiamare questo metodo non provoca <xref:System.ComponentModel.IEditableObject.EndEdit%2A>da chiamare.</xref:System.ComponentModel.IEditableObject.EndEdit%2A> Utilizzare il <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>metodo il commit delle modifiche in sospeso per le origini.</xref:System.Windows.Data.BindingGroup.CommitEdit%2A>"
  example:
  - "The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer. The application checks that the sales representative and the customer belong to the same region. The example calls UpdateSources to validate the bindings and save the values to the source if all the validation rules succeed.  \n  \n [!code-cs[BindingGroupSnippets#UpdateSources](~/add/codesnippet/csharp/BindingGroupSnippets/Window2.xaml.cs#updatesources)]\n [!code-vb[BindingGroupSnippets#UpdateSources](~/add/codesnippet/visualbasic/bindinggroupsnippets/window2.xaml.vb#updatesources)]"
  syntax:
    content: public bool UpdateSources ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se tutte le regole di convalida riesca. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.UpdateSources*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  id: ValidatesOnNotifyDataError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
  fullName: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Ottiene o imposta un valore che indica se includere il <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>."
  remarks: "Quando ValidatesOnNotifyDataError è `true`, l&quot;associazione verifica la presenza e segnala gli errori generati da un&quot;origine dati che implementa <xref:System.ComponentModel.INotifyDataErrorInfo>.</xref:System.ComponentModel.INotifyDataErrorInfo>"
  syntax:
    content: public bool ValidatesOnNotifyDataError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per includere il <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  id: ValidateWithoutUpdate
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidateWithoutUpdate()
  nameWithType: BindingGroup.ValidateWithoutUpdate()
  fullName: System.Windows.Data.BindingGroup.ValidateWithoutUpdate()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Esegue il convertitore sull&quot;associazione e <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> gli oggetti che hanno il <xref:System.Windows.Controls.ValidationRule.ValidationStep*>proprietà impostata su <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref> o <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>.</xref:System.Windows.Controls.ValidationRule.ValidationStep*>"
  remarks: "Le origini non vengono aggiornate quando si chiama questo metodo."
  syntax:
    content: public bool ValidateWithoutUpdate ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se le regole di convalida riesca. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.ValidateWithoutUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidationErrors
  id: ValidationErrors
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
  fullName: System.Windows.Data.BindingGroup.ValidationErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Ottiene una raccolta di <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> oggetti che hanno provocato il <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> potrebbe non essere valido."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Controls.ValidationError> ValidationErrors { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.ValidationError}
      description: "Una raccolta di <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> oggetti che hanno provocato <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref> potrebbe non essere valido.  Il valore è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non sono presenti errori."
  overload: System.Windows.Data.BindingGroup.ValidationErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidationRules
  id: ValidationRules
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
  fullName: System.Windows.Data.BindingGroup.ValidationRules
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Ottiene una raccolta di <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> oggetti per la convalida degli oggetti nell&quot;origine di <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  remarks: "Quando un <xref:System.Windows.Controls.ValidationRule>viene aggiunto a un <xref:System.Windows.Data.BindingGroup>, <xref:System.Windows.Data.BindingGroup>viene passato come primo parametro del <xref:System.Windows.Controls.ValidationRule.Validate%2A>(metodo).</xref:System.Windows.Controls.ValidationRule.Validate%2A> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Data.BindingGroup> </xref:System.Windows.Controls.ValidationRule> È possibile ottenere i valori proposti per l&quot;oggetto utilizzando il <xref:System.Windows.Data.BindingGroup.TryGetValue%2A>o <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>metodo.</xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> </xref:System.Windows.Data.BindingGroup.TryGetValue%2A> È possibile ottenere gli oggetti che rappresentano le origini delle associazioni dal <xref:System.Windows.Data.BindingGroup.Items%2A>proprietà.</xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example adds the custom <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`, to the <xref:System.Windows.Data.BindingGroup>.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroup](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#bindinggroup)]  \n  \n The following example shows the `ValidateDateAndPrice` class. The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method uses the <xref:System.Windows.Data.BindingGroup> to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule> ValidationRules { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
      description: "Una raccolta di <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> oggetti per la convalida degli oggetti nell&quot;origine di <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>."
  overload: System.Windows.Data.BindingGroup.ValidationRules*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Data.ValueUnavailableException
  parent: System.Windows.Data
  isExternal: false
  name: ValueUnavailableException
  nameWithType: ValueUnavailableException
  fullName: System.Windows.Data.ValueUnavailableException
- uid: System.Windows.Data.BindingGroup.#ctor
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingGroup()
  nameWithType: BindingGroup.BindingGroup()
  fullName: System.Windows.Data.BindingGroup.BindingGroup()
- uid: System.Windows.Data.BindingGroup.BeginEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BeginEdit()
  nameWithType: BindingGroup.BeginEdit()
  fullName: System.Windows.Data.BindingGroup.BeginEdit()
- uid: System.Windows.Data.BindingGroup.BindingExpressions
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
  fullName: System.Windows.Data.BindingGroup.BindingExpressions
- uid: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingExpressionBase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<BindingExpressionBase>
  nameWithType: Collection<BindingExpressionBase>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Data.BindingExpressionBase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Data.BindingExpressionBase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.BindingExpressionBase
    name: BindingExpressionBase
    nameWithType: BindingExpressionBase
    fullName: BindingExpressionBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.CancelEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CancelEdit()
  nameWithType: BindingGroup.CancelEdit()
  fullName: System.Windows.Data.BindingGroup.CancelEdit()
- uid: System.Windows.Data.BindingGroup.CanRestoreValues
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
  fullName: System.Windows.Data.BindingGroup.CanRestoreValues
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.BindingGroup.CommitEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CommitEdit()
  nameWithType: BindingGroup.CommitEdit()
  fullName: System.Windows.Data.BindingGroup.CommitEdit()
- uid: System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: GetValue(Object,String)
  nameWithType: BindingGroup.GetValue(Object,String)
  fullName: System.Windows.Data.BindingGroup.GetValue(Object,String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.BindingGroup.HasValidationError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
  fullName: System.Windows.Data.BindingGroup.HasValidationError
- uid: System.Windows.Data.BindingGroup.IsDirty
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
  fullName: System.Windows.Data.BindingGroup.IsDirty
- uid: System.Windows.Data.BindingGroup.Items
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Items
  nameWithType: BindingGroup.Items
  fullName: System.Windows.Data.BindingGroup.Items
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Data.BindingGroup.Name
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Name
  nameWithType: BindingGroup.Name
  fullName: System.Windows.Data.BindingGroup.Name
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
  fullName: System.Windows.Data.BindingGroup.NotifyOnValidationError
- uid: System.Windows.Data.BindingGroup.Owner
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Owner
  nameWithType: BindingGroup.Owner
  fullName: System.Windows.Data.BindingGroup.Owner
- uid: System.Windows.Data.BindingGroup.SharesProposedValues
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
  fullName: System.Windows.Data.BindingGroup.SharesProposedValues
- uid: System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: TryGetValue(Object,String,Object)
  nameWithType: BindingGroup.TryGetValue(Object,String,Object)
  fullName: System.Windows.Data.BindingGroup.TryGetValue(Object,String,Object)
- uid: System.Windows.Data.BindingGroup.UpdateSources
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: UpdateSources()
  nameWithType: BindingGroup.UpdateSources()
  fullName: System.Windows.Data.BindingGroup.UpdateSources()
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
  fullName: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidateWithoutUpdate()
  nameWithType: BindingGroup.ValidateWithoutUpdate()
  fullName: System.Windows.Data.BindingGroup.ValidateWithoutUpdate()
- uid: System.Windows.Data.BindingGroup.ValidationErrors
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
  fullName: System.Windows.Data.BindingGroup.ValidationErrors
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.ValidationError}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ValidationError>
  nameWithType: ReadOnlyCollection<ValidationError>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Controls.ValidationError>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Windows.Controls.ValidationError>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationError
    name: ValidationError
    nameWithType: ValidationError
    fullName: ValidationError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.ValidationRules
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
  fullName: System.Windows.Data.BindingGroup.ValidationRules
- uid: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ValidationRule>
  nameWithType: Collection<ValidationRule>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Controls.ValidationRule>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationRule
    name: ValidationRule
    nameWithType: ValidationRule
    fullName: ValidationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.#ctor*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingGroup
  nameWithType: BindingGroup.BindingGroup
- uid: System.Windows.Data.BindingGroup.BeginEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BeginEdit
  nameWithType: BindingGroup.BeginEdit
- uid: System.Windows.Data.BindingGroup.BindingExpressions*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
- uid: System.Windows.Data.BindingGroup.CancelEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CancelEdit
  nameWithType: BindingGroup.CancelEdit
- uid: System.Windows.Data.BindingGroup.CanRestoreValues*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
- uid: System.Windows.Data.BindingGroup.CommitEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CommitEdit
  nameWithType: BindingGroup.CommitEdit
- uid: System.Windows.Data.BindingGroup.GetValue*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: GetValue
  nameWithType: BindingGroup.GetValue
- uid: System.Windows.Data.BindingGroup.HasValidationError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
- uid: System.Windows.Data.BindingGroup.IsDirty*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
- uid: System.Windows.Data.BindingGroup.Items*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Items
  nameWithType: BindingGroup.Items
- uid: System.Windows.Data.BindingGroup.Name*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Name
  nameWithType: BindingGroup.Name
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
- uid: System.Windows.Data.BindingGroup.Owner*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Owner
  nameWithType: BindingGroup.Owner
- uid: System.Windows.Data.BindingGroup.SharesProposedValues*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
- uid: System.Windows.Data.BindingGroup.TryGetValue*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: TryGetValue
  nameWithType: BindingGroup.TryGetValue
- uid: System.Windows.Data.BindingGroup.UpdateSources*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: UpdateSources
  nameWithType: BindingGroup.UpdateSources
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidateWithoutUpdate
  nameWithType: BindingGroup.ValidateWithoutUpdate
- uid: System.Windows.Data.BindingGroup.ValidationErrors*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
- uid: System.Windows.Data.BindingGroup.ValidationRules*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
