### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebSuccessAuditEvent
  id: WebSuccessAuditEvent
  children:
  - System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)
  - System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  - System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters
  langs:
  - csharp
  name: WebSuccessAuditEvent
  nameWithType: WebSuccessAuditEvent
  fullName: System.Web.Management.WebSuccessAuditEvent
  type: Class
  summary: "Fornisce informazioni sugli eventi di sicurezza senza errori."
  remarks: "Il monitoraggio dello stato ASP.NET consente di produzione e lo staff operativo per la gestione di applicazioni Web distribuite. Il <xref:System.Web.Management>spazio dei nomi contiene i tipi di evento di stato responsabili per comprimere i dati di stato di integrità dell&quot;applicazione e i tipi di provider responsabili dell&quot;elaborazione dei dati.</xref:System.Web.Management> Contiene inoltre i tipi di supporto che semplificano la gestione degli eventi di integrità.       La classe WebSuccessAuditEvent viene utilizzata quando si verifica un&quot;operazione di protezione completata correttamente. Un esempio di questo oggetto è un&quot;autorizzazione URL per una richiesta Web.       L&quot;elenco seguente descrive le funzionalità per gli eventi di tipo WebSuccessAuditEvent vengono generati da ASP.NET:-autorizzazione del File. Vengono controllate le condizioni di esito positivo. Autorizzazione del file viene eseguito solo da ASP.NET quando un&quot;identità di Windows è associata alla richiesta. Il codice di controllo di eventi correlati è <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationSuccess>.</xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationSuccess>      -Autorizzazione URL. Comporta l&quot;accesso di una risorsa URL per il quale viene concessa l&quot;autorizzazione. Vengono controllate le condizioni di esito positivo. Il codice di controllo di eventi correlati è <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationSuccess>.</xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationSuccess>      -Altre condizioni di sicurezza. Di seguito è riportato un elenco dei codici di evento correlato:- <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>- <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>WebSuccessAuditEvent un quando viene generato, il monitoraggio dello stato ASP.NET incrementa il contatore delle prestazioni eventi di controllo riusciti generati correlato e quindi controlla la `healthMonitoring` configurazione per determinare se tutti i provider di sottoscrivono l&quot;evento.</xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess> </xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess> Se i provider di sottoscrivono dell&quot;evento, ASP.NET invia l&quot;evento a essi per l&quot;elaborazione.      > [!NOTE] > Per visualizzare il contatore delle prestazioni eventi di controllo riusciti generati in Monitor di sistema (PerfMon), nel **Aggiungi contatori** finestra selezionare **ASP.NET** dal **oggetto prestazione** elenco a discesa, seleziona il **eventi di controllo riusciti generati** contatore delle prestazioni e scegliere il **Aggiungi** pulsante. Per ulteriori informazioni, vedere [monitoraggio delle prestazioni dell&quot;applicazione ASP.NET](~/add/includes/ajax-current-ext-md.md).       Poiché riusciti rappresentano una condizione prevista, si desidera eseguirne la sottoscrizione. È possibile sottoscrivere li per fornire l&quot;accesso al controllo per il sito.      > [!NOTE] > Nella maggior parte dei casi sarà possibile utilizzare i tipi di monitoraggio dello stato ASP.NET, come implementato e controllare il sistema di monitoraggio dello stato specificando i valori di `healthMonitoring` sezione di configurazione. È anche possibile derivare da tipi di monitoraggio dello stato per creare eventi personalizzati e i provider. Per un esempio di derivazione dalla classe WebSuccessAuditEvent, vedere l&quot;esempio fornito in questo argomento."
  example:
  - "The following code example shows how to derive from the WebSuccessAuditEvent class to create a custom audit event.  \n  \n [!code-vb[System.Web.Management.WebSuccessAuditEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._9_1.vb)]\n [!code-cs[System.Web.Management.WebSuccessAuditEvent#1](~/add/codesnippet/csharp/t-system.web.management._9_1.cs)]  \n  \n The following example is an excerpt of the configuration file that enables ASP.NET health monitoring to use the event.  \n  \n```  \n<healthMonitoring   \n..enabled=\"true\"  \n..heartBeatInterval=\"0\">   \n  <providers>  \n    <add name=\"EventLogProvider\"   \n    type=\"System.Web.Management.EventLogWebEventProvider,  \n    System.Web,Version=2.0.3600.0,Culture=neutral,  \n    PublicKeyToken=b03f5f7f11d50a3a\"/>  \n  </providers>  \n  <eventMappings>  \n    <add  name=\"SampleWebSuccessAuditEvent\"   \n      type=\"SamplesAspNet.SampleWebSuccessAuditEvent,  \n      websuccessauditevent,Version=1.0.1663.31140,   \n      Culture=neutral,   \n      PublicKeyToken=0d1fa0f69d94de96,   \n      processorArchitecture=MSIL\"/>  \n  </eventMappings>  \n  <rules>  \n    <add name=\"Custom Failure Audit Default\"  \n      eventName=\" SampleWebFailureAuditEvent \"  \n      provider=\"EventLogProvider\"  \n      profile=\"Default\"/>    \n  </rules>  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public class WebSuccessAuditEvent : System.Web.Management.WebAuditEvent'
  inheritance:
  - System.Object
  - System.Web.Management.WebBaseEvent
  - System.Web.Management.WebManagementEvent
  - System.Web.Management.WebAuditEvent
  implements: []
  inheritedMembers:
  - System.Web.Management.WebAuditEvent.RequestInformation
  - System.Web.Management.WebBaseEvent.ApplicationInformation
  - System.Web.Management.WebBaseEvent.EventCode
  - System.Web.Management.WebBaseEvent.EventDetailCode
  - System.Web.Management.WebBaseEvent.EventID
  - System.Web.Management.WebBaseEvent.EventOccurrence
  - System.Web.Management.WebBaseEvent.EventSequence
  - System.Web.Management.WebBaseEvent.EventSource
  - System.Web.Management.WebBaseEvent.EventTime
  - System.Web.Management.WebBaseEvent.EventTimeUtc
  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebBaseEvent.Message
  - System.Web.Management.WebBaseEvent.Raise
  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebBaseEvent.ToString
  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)
  - System.Web.Management.WebManagementEvent.ProcessInformation
  platform:
  - net462
- uid: System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32)'
  parent: System.Web.Management.WebSuccessAuditEvent
  langs:
  - csharp
  name: WebSuccessAuditEvent(String,Object,Int32)
  nameWithType: WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32)
  fullName: System.Web.Management.WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.Management.WebSuccessAuditEvent&quot;> </xref> classe utilizzando i parametri forniti."
  remarks: "Questo costruttore viene utilizzato internamente dal sistema di monitoraggio dello stato di ASP.NET. Non verrà mai utilizzato per creare un&quot;istanza di un <xref:System.Web.Management.WebSuccessAuditEvent>oggetto, ma è possibile chiamare questo costruttore quando si implementa un tipo di evento che eredita da questa classe.</xref:System.Web.Management.WebSuccessAuditEvent>      > [!NOTE] > WebSuccessAuditEvent il costruttore non è destinato a essere utilizzato direttamente dal codice. Viene chiamato da ASP.NET. È possibile chiamare il costruttore WebSuccessAuditEvent quando si deriva dalla <xref:System.Web.Management.WebSuccessAuditEvent>classe.</xref:System.Web.Management.WebSuccessAuditEvent>"
  example:
  - "The following code example shows how to call this constructor in the `SampleWebSuccessAuditEvent` class. This code example is part of a larger example provided for the <xref:System.Web.Management.WebSuccessAuditEvent> class.  \n  \n [!code-vb[System.Web.Management.WebSuccessAuditEvent#2](~/add/codesnippet/visualbasic/5c3da28f-d581-4e89-9969-_1.vb)]\n [!code-cs[System.Web.Management.WebSuccessAuditEvent#2](~/add/codesnippet/csharp/5c3da28f-d581-4e89-9969-_1.cs)]"
  syntax:
    content: protected WebSuccessAuditEvent (string message, object eventSource, int eventCode);
    parameters:
    - id: message
      type: System.String
      description: "Descrizione dell&quot;evento."
    - id: eventSource
      type: System.Object
      description: "Oggetto che rappresenta l&quot;origine dell&quot;evento."
    - id: eventCode
      type: System.Int32
      description: "Il codice associato all&quot;evento. Quando si implementa un evento personalizzato, il codice dell&quot;evento deve essere maggiore di <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
  overload: System.Web.Management.WebSuccessAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32,System.Int32)'
  parent: System.Web.Management.WebSuccessAuditEvent
  langs:
  - csharp
  name: WebSuccessAuditEvent(String,Object,Int32,Int32)
  nameWithType: WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.Management.WebSuccessAuditEvent&quot;> </xref> classe utilizzando i parametri forniti."
  remarks: "Questo costruttore viene utilizzato internamente dal sistema di monitoraggio dello stato di ASP.NET. Non verrà mai utilizzato per creare un&quot;istanza di un <xref:System.Web.Management.WebSuccessAuditEvent>oggetto, ma è possibile chiamare questo costruttore quando si implementa un tipo di evento che eredita da questa classe.</xref:System.Web.Management.WebSuccessAuditEvent>      > [!NOTE] > WebSuccessAuditEvent il costruttore non è destinato a essere utilizzato direttamente dal codice. Viene chiamato da ASP.NET. È possibile chiamare il costruttore WebSuccessAuditEvent quando si deriva dalla <xref:System.Web.Management.WebSuccessAuditEvent>classe.</xref:System.Web.Management.WebSuccessAuditEvent>"
  example:
  - "The following code example shows how to call this constructor in the `SampleWebSuccessAuditEvent` class. This code example is part of a larger example provided for the <xref:System.Web.Management.WebSuccessAuditEvent> class.  \n  \n [!code-vb[System.Web.Management.WebSuccessAuditEvent#3](~/add/codesnippet/visualbasic/eb3e15a7-d3d9-41f8-b6c1-_1.vb)]\n [!code-cs[System.Web.Management.WebSuccessAuditEvent#3](~/add/codesnippet/csharp/eb3e15a7-d3d9-41f8-b6c1-_1.cs)]"
  syntax:
    content: protected WebSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);
    parameters:
    - id: message
      type: System.String
      description: "Descrizione dell&quot;evento."
    - id: eventSource
      type: System.Object
      description: "Oggetto che rappresenta l&quot;origine dell&quot;evento."
    - id: eventCode
      type: System.Int32
      description: "Il codice associato all&quot;evento. Quando si implementa un evento personalizzato, il codice dell&quot;evento deve essere maggiore di <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
    - id: eventDetailCode
      type: System.Int32
      description: "Il <xref href=&quot;System.Web.Management.WebEventCodes&quot;> </xref> valore che specifica l&quot;identificatore dettagliato per l&quot;evento."
  overload: System.Web.Management.WebSuccessAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters
  id: IncrementPerfCounters
  parent: System.Web.Management.WebSuccessAuditEvent
  langs:
  - csharp
  name: IncrementPerfCounters()
  nameWithType: WebSuccessAuditEvent.IncrementPerfCounters()
  fullName: System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Incrementa il contatore delle prestazioni eventi di controllo riusciti generati."
  remarks: "Il contatore delle prestazioni eventi di controllo riusciti generati tiene traccia del numero di eventi di controllo con esito positivo generati dall&quot;avvio dell&quot;applicazione. Questo metodo chiama anche l&quot;elemento padre <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A>metodo, che incrementa il numero di eventi generati.</xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> Questo contatore registra il numero totale di eventi generati.       Per visualizzare questi contatori delle prestazioni in Monitor di sistema (PerfMon), nel **Aggiungi contatori** finestra selezionare **ASP.NET** dal **oggetto prestazione** elenco a discesa selezionare il contatore delle prestazioni che si desidera visualizzare e scegliere il **Aggiungi** pulsante. Per ulteriori informazioni, vedere [monitoraggio delle prestazioni dell&quot;applicazione ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected override void IncrementPerfCounters ();
    parameters: []
  overload: System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebAuditEvent
  isExternal: false
  name: System.Web.Management.WebAuditEvent
- uid: System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)
  parent: System.Web.Management.WebSuccessAuditEvent
  isExternal: false
  name: WebSuccessAuditEvent(String,Object,Int32)
  nameWithType: WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32)
  fullName: System.Web.Management.WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  parent: System.Web.Management.WebSuccessAuditEvent
  isExternal: false
  name: WebSuccessAuditEvent(String,Object,Int32,Int32)
  nameWithType: WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebSuccessAuditEvent.WebSuccessAuditEvent(String,Object,Int32,Int32)
- uid: System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters
  parent: System.Web.Management.WebSuccessAuditEvent
  isExternal: false
  name: IncrementPerfCounters()
  nameWithType: WebSuccessAuditEvent.IncrementPerfCounters()
  fullName: System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters()
- uid: System.Web.Management.WebSuccessAuditEvent.#ctor*
  parent: System.Web.Management.WebSuccessAuditEvent
  isExternal: false
  name: WebSuccessAuditEvent
  nameWithType: WebSuccessAuditEvent.WebSuccessAuditEvent
- uid: System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters*
  parent: System.Web.Management.WebSuccessAuditEvent
  isExternal: false
  name: IncrementPerfCounters
  nameWithType: WebSuccessAuditEvent.IncrementPerfCounters
