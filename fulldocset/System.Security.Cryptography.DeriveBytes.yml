### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.DeriveBytes
  id: DeriveBytes
  children:
  - System.Security.Cryptography.DeriveBytes.#ctor
  - System.Security.Cryptography.DeriveBytes.Dispose
  - System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)
  - System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)
  - System.Security.Cryptography.DeriveBytes.Reset
  langs:
  - csharp
  name: DeriveBytes
  nameWithType: DeriveBytes
  fullName: System.Security.Cryptography.DeriveBytes
  type: Class
  summary: "Rappresenta la classe base astratta dalla quale ereditano tutte le classi che derivano sequenze di byte di lunghezza specificata."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class DeriveBytes : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.DeriveBytes.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.DeriveBytes
  langs:
  - csharp
  name: DeriveBytes()
  nameWithType: DeriveBytes.DeriveBytes()
  fullName: System.Security.Cryptography.DeriveBytes.DeriveBytes()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.DeriveBytes&quot;> </xref> classe."
  syntax:
    content: protected DeriveBytes ();
    parameters: []
  overload: System.Security.Cryptography.DeriveBytes.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DeriveBytes.Dispose
  id: Dispose
  parent: System.Security.Cryptography.DeriveBytes
  langs:
  - csharp
  name: Dispose()
  nameWithType: DeriveBytes.Dispose()
  fullName: System.Security.Cryptography.DeriveBytes.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Quando sottoposto a override in una classe derivata, rilascia tutte le risorse usate dall&quot;istanza corrente del <xref href=&quot;System.Security.Cryptography.DeriveBytes&quot;> </xref> classe."
  remarks: "Chiamare `Dispose` quando si è terminato di utilizzare <xref:System.Security.Cryptography.DeriveBytes>.</xref:System.Security.Cryptography.DeriveBytes> Il `Dispose` metodo lascia la <xref:System.Security.Cryptography.DeriveBytes>in uno stato inutilizzabile.</xref:System.Security.Cryptography.DeriveBytes> Dopo la chiamata `Dispose`, è necessario rilasciare tutti i riferimenti al <xref:System.Security.Cryptography.DeriveBytes>in modo che il garbage collector può recuperare la memoria che di <xref:System.Security.Cryptography.DeriveBytes>occupata.</xref:System.Security.Cryptography.DeriveBytes> </xref:System.Security.Cryptography.DeriveBytes>       Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md) e [implementazione di un metodo Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Chiamare sempre `Dispose` prima di rilasciare l&quot;ultimo riferimento a <xref:System.Security.Cryptography.DeriveBytes>.</xref:System.Security.Cryptography.DeriveBytes> In caso contrario, le risorse non vengono liberate finché il garbage collector chiama la <xref:System.Security.Cryptography.DeriveBytes>dell&quot;oggetto `Finalize` metodo.</xref:System.Security.Cryptography.DeriveBytes>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.DeriveBytes.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.DeriveBytes
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DeriveBytes.Dispose(Boolean)
  fullName: System.Security.Cryptography.DeriveBytes.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Quando sottoposto a override in una classe derivata, rilascia le risorse non gestite usate dal <xref href=&quot;System.Security.Cryptography.DeriveBytes&quot;> </xref> classe e facoltativamente rilascia le risorse gestite."
  remarks: "Questo metodo viene chiamato dal metodo pubblico `Dispose()` (metodo) e `Finalize` metodo. `Dispose()`richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`. `Finalize`richiama `Dispose` con `disposing` impostato su `false`.       Quando il `disposing` parametro `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.Security.Cryptography.DeriveBytes>riferimenti.</xref:System.Security.Cryptography.DeriveBytes> Questo metodo richiama il `Dispose()` metodo di ciascun oggetto cui viene fatto riferimento."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.Security.Cryptography.DeriveBytes.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)
  id: GetBytes(System.Int32)
  parent: System.Security.Cryptography.DeriveBytes
  langs:
  - csharp
  name: GetBytes(Int32)
  nameWithType: DeriveBytes.GetBytes(Int32)
  fullName: System.Security.Cryptography.DeriveBytes.GetBytes(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Quando sottoposto a override in una classe derivata, restituisce byte chiave pseudo-casuali."
  syntax:
    content: public abstract byte[] GetBytes (int cb);
    parameters:
    - id: cb
      type: System.Int32
      description: "Il numero di byte chiave pseudo-casuali da generare."
    return:
      type: System.Byte[]
      description: "Matrice di byte riempita con byte chiave pseudo-casuali."
  overload: System.Security.Cryptography.DeriveBytes.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DeriveBytes.Reset
  id: Reset
  parent: System.Security.Cryptography.DeriveBytes
  langs:
  - csharp
  name: Reset()
  nameWithType: DeriveBytes.Reset()
  fullName: System.Security.Cryptography.DeriveBytes.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Quando sottoposto a override in una classe derivata, reimposta lo stato dell&quot;operazione."
  syntax:
    content: public abstract void Reset ();
    parameters: []
  overload: System.Security.Cryptography.DeriveBytes.Reset*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.DeriveBytes.#ctor
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: DeriveBytes()
  nameWithType: DeriveBytes.DeriveBytes()
  fullName: System.Security.Cryptography.DeriveBytes.DeriveBytes()
- uid: System.Security.Cryptography.DeriveBytes.Dispose
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: Dispose()
  nameWithType: DeriveBytes.Dispose()
  fullName: System.Security.Cryptography.DeriveBytes.Dispose()
- uid: System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DeriveBytes.Dispose(Boolean)
  fullName: System.Security.Cryptography.DeriveBytes.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: GetBytes(Int32)
  nameWithType: DeriveBytes.GetBytes(Int32)
  fullName: System.Security.Cryptography.DeriveBytes.GetBytes(Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.DeriveBytes.Reset
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: Reset()
  nameWithType: DeriveBytes.Reset()
  fullName: System.Security.Cryptography.DeriveBytes.Reset()
- uid: System.Security.Cryptography.DeriveBytes.#ctor*
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: DeriveBytes
  nameWithType: DeriveBytes.DeriveBytes
- uid: System.Security.Cryptography.DeriveBytes.Dispose*
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: Dispose
  nameWithType: DeriveBytes.Dispose
- uid: System.Security.Cryptography.DeriveBytes.GetBytes*
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: GetBytes
  nameWithType: DeriveBytes.GetBytes
- uid: System.Security.Cryptography.DeriveBytes.Reset*
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: Reset
  nameWithType: DeriveBytes.Reset
