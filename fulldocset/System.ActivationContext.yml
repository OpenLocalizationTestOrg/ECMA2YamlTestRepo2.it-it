### YamlMime:ManagedReference
items:
- uid: System.ActivationContext
  id: ActivationContext
  children:
  - System.ActivationContext.ApplicationManifestBytes
  - System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)
  - System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])
  - System.ActivationContext.DeploymentManifestBytes
  - System.ActivationContext.Dispose
  - System.ActivationContext.Finalize
  - System.ActivationContext.Form
  - System.ActivationContext.Identity
  - System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
  type: Class
  summary: "Identifica il contesto di attivazione per l&quot;applicazione corrente. Questa classe non può essere ereditata."
  remarks: "La classe di ActivationContext contiene un <xref:System.ApplicationIdentity>e fornisce l&quot;accesso solo interno al manifesto dell&quot;applicazione.</xref:System.ApplicationIdentity> Il contesto di attivazione viene utilizzato durante l&quot;attivazione basata su manifesto per impostare i criteri di dominio e fornire un modello di sicurezza basato sull&quot;applicazione. Per ulteriori informazioni, vedere la <xref:System.Security.Policy.ApplicationSecurityManager>classe.</xref:System.Security.Policy.ApplicationSecurityManager>      > [!IMPORTANT] > Questo tipo implementa il <xref:System.IDisposable>interfaccia.</xref:System.IDisposable> Dopo aver utilizzando il tipo, è necessario eliminarlo di esso direttamente o indirettamente. Per eliminare direttamente il tipo, chiamare il relativo <xref:System.IDisposable.Dispose%2A>metodo in un `try` / `catch` blocco.</xref:System.IDisposable.Dispose%2A> Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio, ad esempio `using` (in c#) o `Using` (in Visual Basic). Per ulteriori informazioni, vedere la sezione &quot;Utilizzo di oggetti che implementano IDisposable&quot; nel <xref:System.IDisposable>argomento relativo all&quot;interfaccia.</xref:System.IDisposable>"
  example:
  - "The following code example demonstrates the use of an ActivationContext object to obtain the <xref:System.ApplicationIdentity> for a manifest-based application. For correct results, execute this code example as a manifest-based application.  \n  \n [!code-vb[System.ActivationContext#1](~/add/codesnippet/visualbasic/t-system.activationcontext_1.vb)]\n [!code-cs[System.ActivationContext#1](~/add/codesnippet/csharp/t-system.activationcontext_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class ActivationContext : IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ActivationContext.ApplicationManifestBytes
  id: ApplicationManifestBytes
  parent: System.ActivationContext
  langs:
  - csharp
  name: ApplicationManifestBytes
  nameWithType: ActivationContext.ApplicationManifestBytes
  fullName: System.ActivationContext.ApplicationManifestBytes
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene il manifesto dell&quot;applicazione ClickOnce per l&quot;applicazione corrente."
  remarks: "Se il contesto di attivazione è <xref:System.ActivationContext.ContextForm>, vale a dire che l&quot;applicazione non è installato nell&quot;archivio ClickOnce, viene letto il manifesto di distribuzione dalla cartella di download temporaneo.</xref:System.ActivationContext.ContextForm> Se il contesto di attivazione è <xref:System.ActivationContext.ContextForm>, vale a dire che l&quot;applicazione è installata in ClickOnce store, il manifesto di distribuzione viene letto da archivio ClickOnce.</xref:System.ActivationContext.ContextForm> Per ulteriori informazioni sui manifesti di distribuzione, vedere [manifesto della distribuzione ClickOnce](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public byte[] ApplicationManifestBytes { get; }
    return:
      type: System.Byte[]
      description: "Matrice di byte che contiene il manifesto dell&quot;applicazione ClickOnce per l&quot;applicazione che è associata a questo <xref href=&quot;System.ActivationContext&quot;> </xref>."
  overload: System.ActivationContext.ApplicationManifestBytes*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)
  id: CreatePartialActivationContext(System.ApplicationIdentity)
  parent: System.ActivationContext
  langs:
  - csharp
  name: CreatePartialActivationContext(ApplicationIdentity)
  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity)
  fullName: System.ActivationContext.CreatePartialActivationContext(ApplicationIdentity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ActivationContext&quot;> </xref> classe utilizzando l&quot;identità di applicazione specificata."
  remarks: "Il metodo CreatePartialActivationContext chiama un costruttore per creare un nuovo contesto di attivazione interno. L&quot;implementazione del <xref:System.ActivationContext>classe in .NET Framework versione 2.0 è progettata per le applicazioni che non sono completamente installate in un archivio né completamente contenute in una cartella.</xref:System.ActivationContext> Questo metodo fornisce la compatibilità con versioni successive in cui i costruttori pubblici forniscono contesti di attivazione completo."
  syntax:
    content: public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity);
    parameters:
    - id: identity
      type: System.ApplicationIdentity
      description: "Oggetto che identifica un&quot;applicazione."
    return:
      type: System.ActivationContext
      description: "Un oggetto con l&quot;identità dell&quot;applicazione specificato."
  overload: System.ActivationContext.CreatePartialActivationContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Viene specificata alcuna identità di distribuzione o dell&quot;applicazione <code> identity </code>."
  platform:
  - net462
- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])
  id: CreatePartialActivationContext(System.ApplicationIdentity,System.String[])
  parent: System.ActivationContext
  langs:
  - csharp
  name: CreatePartialActivationContext(ApplicationIdentity,String[])
  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity,String[])
  fullName: System.ActivationContext.CreatePartialActivationContext(ApplicationIdentity,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ActivationContext&quot;> </xref> classe utilizzando l&quot;identità di applicazione specificata e la matrice di percorsi di manifesto."
  remarks: "Il metodo CreatePartialActivationContext chiama un costruttore per creare un nuovo contesto di attivazione interno. L&quot;implementazione del <xref:System.ActivationContext>classe in .NET Framework versione 2.0 è progettata per le applicazioni che non sono completamente installate in un archivio né completamente contenute in una cartella.</xref:System.ActivationContext> Questo metodo fornisce la compatibilità con versioni successive in cui i costruttori pubblici forniscono contesti di attivazione completo."
  syntax:
    content: public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity, string[] manifestPaths);
    parameters:
    - id: identity
      type: System.ApplicationIdentity
      description: "Oggetto che identifica un&quot;applicazione."
    - id: manifestPaths
      type: System.String[]
      description: "Matrice di stringhe dei percorsi di manifesto per l&quot;applicazione."
    return:
      type: System.ActivationContext
      description: "Un oggetto con l&quot;identità di applicazione specificata e la matrice di percorsi di manifesto."
  overload: System.ActivationContext.CreatePartialActivationContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>manifestPaths</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Viene specificata alcuna identità di distribuzione o dell&quot;applicazione <code> identity </code>.       - oppure - <code> identity </code> non corrisponde all&quot;identità nei manifesti.       - oppure - <code> identity </code> non hanno lo stesso numero di componenti dei percorsi di manifesto."
  platform:
  - net462
- uid: System.ActivationContext.DeploymentManifestBytes
  id: DeploymentManifestBytes
  parent: System.ActivationContext
  langs:
  - csharp
  name: DeploymentManifestBytes
  nameWithType: ActivationContext.DeploymentManifestBytes
  fullName: System.ActivationContext.DeploymentManifestBytes
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene il manifesto della distribuzione ClickOnce per l&quot;applicazione corrente."
  remarks: "Se il contesto di attivazione è <xref:System.ActivationContext.ContextForm>, vale a dire che l&quot;applicazione non è installato nell&quot;archivio ClickOnce, viene letto il manifesto di distribuzione dalla cartella di download temporaneo.</xref:System.ActivationContext.ContextForm> Se il contesto di attivazione è <xref:System.ActivationContext.ContextForm>, vale a dire che l&quot;applicazione è installata in ClickOnce store, il manifesto di distribuzione viene letto da archivio ClickOnce.</xref:System.ActivationContext.ContextForm> Per ulteriori informazioni sui manifesti di distribuzione, vedere [manifesto della distribuzione ClickOnce](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public byte[] DeploymentManifestBytes { get; }
    return:
      type: System.Byte[]
      description: "Matrice di byte che contiene il manifesto della distribuzione ClickOnce per l&quot;applicazione che è associata a questo <xref href=&quot;System.ActivationContext&quot;> </xref>."
  overload: System.ActivationContext.DeploymentManifestBytes*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.Dispose
  id: Dispose
  parent: System.ActivationContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: ActivationContext.Dispose()
  fullName: System.ActivationContext.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Rilascia tutte le risorse usate dal <xref href=&quot;System.ActivationContext&quot;> </xref>."
  remarks: "Chiamare Dispose dopo aver terminato di utilizzare <xref:System.ActivationContext>.</xref:System.ActivationContext> Il metodo Dispose lascia il <xref:System.ActivationContext>in uno stato inutilizzabile.</xref:System.ActivationContext> Dopo aver chiamato Dispose, è necessario rilasciare tutti i riferimenti al <xref:System.ActivationContext>in modo che il garbage collector può recuperare la memoria che di <xref:System.ActivationContext>occupata.</xref:System.ActivationContext> </xref:System.ActivationContext> Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md) e [implementazione di un metodo Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Chiamare sempre Dispose prima di rilasciare l&quot;ultimo riferimento a <xref:System.ActivationContext>.</xref:System.ActivationContext> In caso contrario, le risorse non vengono liberate finché il garbage collector chiama la <xref:System.ActivationContext>dell&quot;oggetto `Finalize` metodo.</xref:System.ActivationContext>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ActivationContext.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.Finalize
  id: Finalize
  parent: System.ActivationContext
  langs:
  - csharp
  name: Finalize()
  nameWithType: ActivationContext.Finalize()
  fullName: System.ActivationContext.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Consente un <xref href=&quot;System.ActivationContext&quot;> </xref> oggetto di tentare di liberare risorse ed eseguire altre operazioni di pulizia prima che il <xref href=&quot;System.ActivationContext&quot;> </xref> venga recuperata tramite garbage collection."
  syntax:
    content: ~ActivationContext ();
    parameters: []
  overload: System.ActivationContext.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.Form
  id: Form
  parent: System.ActivationContext
  langs:
  - csharp
  name: Form
  nameWithType: ActivationContext.Form
  fullName: System.ActivationContext.Form
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene il modulo o un contesto di archiviazione per l&quot;applicazione corrente."
  remarks: "Un&quot;applicazione basata su manifesto potrebbe non essere installata nell&quot;archivio ClickOnce. Un&quot;applicazione che non si trova nell&quot;archivio, ad esempio l&quot;esecuzione di un&quot;applicazione attivata manifesto in [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)], viene classificato come <xref:System.ActivationContext.ContextForm>.</xref:System.ActivationContext.ContextForm> Un&quot;applicazione contenuta nell&quot;archivio viene classificata come <xref:System.ActivationContext.ContextForm>.</xref:System.ActivationContext.ContextForm>"
  syntax:
    content: public ActivationContext.ContextForm Form { get; }
    return:
      type: System.ActivationContext.ContextForm
      description: "Uno dei valori di enumerazione."
  overload: System.ActivationContext.Form*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.Identity
  id: Identity
  parent: System.ActivationContext
  langs:
  - csharp
  name: Identity
  nameWithType: ActivationContext.Identity
  fullName: System.ActivationContext.Identity
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene l&quot;identità dell&quot;applicazione per l&quot;applicazione corrente."
  remarks: "Un <xref:System.ApplicationIdentity>identifica in modo univoco un&quot;applicazione in base al relativo nome e percorso completi.</xref:System.ApplicationIdentity>"
  example:
  - "The following code example demonstrates the use of an <xref:System.ActivationContext> object to obtain the <xref:System.ApplicationIdentity> for a manifest-based application. This code example is part of a larger example provided for the <xref:System.ActivationContext> class.  \n  \n [!code-vb[System.ActivationContext#2](~/add/codesnippet/visualbasic/p-system.activationconte_1.vb)]\n [!code-cs[System.ActivationContext#2](~/add/codesnippet/csharp/p-system.activationconte_1.cs)]"
  syntax:
    content: public ApplicationIdentity Identity { get; }
    return:
      type: System.ApplicationIdentity
      description: "Un <xref href=&quot;System.ApplicationIdentity&quot;> </xref> oggetto che identifica l&quot;applicazione corrente."
  overload: System.ActivationContext.Identity*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.ActivationContext
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Popola un <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> con i dati necessari per serializzare l&quot;oggetto di destinazione."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Oggetto da popolare con i dati."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "La struttura per la serializzazione."
  overload: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ActivationContext.ApplicationManifestBytes
  parent: System.ActivationContext
  isExternal: false
  name: ApplicationManifestBytes
  nameWithType: ActivationContext.ApplicationManifestBytes
  fullName: System.ActivationContext.ApplicationManifestBytes
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)
  parent: System.ActivationContext
  isExternal: false
  name: CreatePartialActivationContext(ApplicationIdentity)
  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity)
  fullName: System.ActivationContext.CreatePartialActivationContext(ApplicationIdentity)
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.ApplicationIdentity
  parent: System
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationIdentity
  fullName: System.ApplicationIdentity
- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])
  parent: System.ActivationContext
  isExternal: false
  name: CreatePartialActivationContext(ApplicationIdentity,String[])
  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity,String[])
  fullName: System.ActivationContext.CreatePartialActivationContext(ApplicationIdentity,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ActivationContext.DeploymentManifestBytes
  parent: System.ActivationContext
  isExternal: false
  name: DeploymentManifestBytes
  nameWithType: ActivationContext.DeploymentManifestBytes
  fullName: System.ActivationContext.DeploymentManifestBytes
- uid: System.ActivationContext.Dispose
  parent: System.ActivationContext
  isExternal: false
  name: Dispose()
  nameWithType: ActivationContext.Dispose()
  fullName: System.ActivationContext.Dispose()
- uid: System.ActivationContext.Finalize
  parent: System.ActivationContext
  isExternal: false
  name: Finalize()
  nameWithType: ActivationContext.Finalize()
  fullName: System.ActivationContext.Finalize()
- uid: System.ActivationContext.Form
  parent: System.ActivationContext
  isExternal: false
  name: Form
  nameWithType: ActivationContext.Form
  fullName: System.ActivationContext.Form
- uid: System.ActivationContext.ContextForm
  parent: System
  isExternal: false
  name: ActivationContext+ContextForm
  nameWithType: ActivationContext+ContextForm
  fullName: System.ActivationContext+ContextForm
- uid: System.ActivationContext.Identity
  parent: System.ActivationContext
  isExternal: false
  name: Identity
  nameWithType: ActivationContext.Identity
  fullName: System.ActivationContext.Identity
- uid: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.ActivationContext
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.ActivationContext.ApplicationManifestBytes*
  parent: System.ActivationContext
  isExternal: false
  name: ApplicationManifestBytes
  nameWithType: ActivationContext.ApplicationManifestBytes
- uid: System.ActivationContext.CreatePartialActivationContext*
  parent: System.ActivationContext
  isExternal: false
  name: CreatePartialActivationContext
  nameWithType: ActivationContext.CreatePartialActivationContext
- uid: System.ActivationContext.DeploymentManifestBytes*
  parent: System.ActivationContext
  isExternal: false
  name: DeploymentManifestBytes
  nameWithType: ActivationContext.DeploymentManifestBytes
- uid: System.ActivationContext.Dispose*
  parent: System.ActivationContext
  isExternal: false
  name: Dispose
  nameWithType: ActivationContext.Dispose
- uid: System.ActivationContext.Finalize*
  parent: System.ActivationContext
  isExternal: false
  name: Finalize
  nameWithType: ActivationContext.Finalize
- uid: System.ActivationContext.Form*
  parent: System.ActivationContext
  isExternal: false
  name: Form
  nameWithType: ActivationContext.Form
- uid: System.ActivationContext.Identity*
  parent: System.ActivationContext
  isExternal: false
  name: Identity
  nameWithType: ActivationContext.Identity
- uid: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.ActivationContext
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData
