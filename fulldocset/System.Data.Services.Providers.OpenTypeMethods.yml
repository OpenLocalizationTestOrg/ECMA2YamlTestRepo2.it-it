### YamlMime:ManagedReference
items:
- uid: System.Data.Services.Providers.OpenTypeMethods
  id: OpenTypeMethods
  children:
  - System.Data.Services.Providers.OpenTypeMethods.Add(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.AndAlso(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Ceiling(System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Concat(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Convert(System.Object,System.Data.Services.Providers.ResourceType)
  - System.Data.Services.Providers.OpenTypeMethods.Day(System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Divide(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.EndsWith(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Equal(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Floor(System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.GetValue(System.Object,System.String)
  - System.Data.Services.Providers.OpenTypeMethods.GreaterThan(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.GreaterThanOrEqual(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Hour(System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.IndexOf(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Length(System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.LessThan(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.LessThanOrEqual(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Minute(System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Modulo(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Month(System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Multiply(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Negate(System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Not(System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.NotEqual(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.OrElse(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Replace(System.Object,System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Round(System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Second(System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.StartsWith(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Substring(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Substring(System.Object,System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.SubstringOf(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Subtract(System.Object,System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.ToLower(System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.ToUpper(System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.Trim(System.Object)
  - System.Data.Services.Providers.OpenTypeMethods.TypeIs(System.Object,System.Data.Services.Providers.ResourceType)
  - System.Data.Services.Providers.OpenTypeMethods.Year(System.Object)
  langs:
  - csharp
  name: OpenTypeMethods
  nameWithType: OpenTypeMethods
  fullName: System.Data.Services.Providers.OpenTypeMethods
  type: Class
  summary: "Utilizzato per eseguire operazioni ad associazione tardiva su proprietà open."
  remarks: "Questa classe viene utilizzata quando si implementa un provider di servizi dati personalizzati per [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]."
  syntax:
    content: public static class OpenTypeMethods
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Add(Object,Object)
  nameWithType: OpenTypeMethods.Add(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Add(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Aggiunge due valori."
  remarks: "Il metodo Add aggiunge due valori senza il controllo dell&quot;overflow."
  syntax:
    content: public static object Add (object left, object right);
    parameters:
    - id: left
      type: System.Object
      description: "Primo valore da aggiungere."
    - id: right
      type: System.Object
      description: "Secondo valore da aggiungere."
    return:
      type: System.Object
      description: "Il risultato dell&quot;operazione aritmetica."
  overload: System.Data.Services.Providers.OpenTypeMethods.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.AndAlso(System.Object,System.Object)
  id: AndAlso(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: AndAlso(Object,Object)
  nameWithType: OpenTypeMethods.AndAlso(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.AndAlso(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Esegue una logica <xref uid=&quot;langword_csharp_and&quot; name=&quot;and&quot; href=&quot;&quot;> </xref> operazione tra due espressioni."
  syntax:
    content: public static object AndAlso (object left, object right);
    parameters:
    - id: left
      type: System.Object
      description: "Valore a sinistra."
    - id: right
      type: System.Object
      description: "Valore a destra."
    return:
      type: System.Object
      description: "Il risultato logico <xref uid=&quot;langword_csharp_and&quot; name=&quot;and&quot; href=&quot;&quot;> </xref> operazione."
  overload: System.Data.Services.Providers.OpenTypeMethods.AndAlso*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Ceiling(System.Object)
  id: Ceiling(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Ceiling(Object)
  nameWithType: OpenTypeMethods.Ceiling(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Ceiling(Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Restituisce il limite massimo del valore specificato."
  syntax:
    content: public static object Ceiling (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Oggetto <xref:System.Decimal>o <xref:System.Double>oggetto.</xref:System.Double> </xref:System.Decimal>"
    return:
      type: System.Object
      description: "Il valore del limite massimo per il valore specificato."
  overload: System.Data.Services.Providers.OpenTypeMethods.Ceiling*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Concat(System.Object,System.Object)
  id: Concat(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Concat(Object,Object)
  nameWithType: OpenTypeMethods.Concat(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Concat(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Concatena due valori stringa."
  syntax:
    content: public static object Concat (object first, object second);
    parameters:
    - id: first
      type: System.Object
      description: "Prima stringa."
    - id: second
      type: System.Object
      description: "Seconda stringa."
    return:
      type: System.Object
      description: "Una nuova istanza che è la stringa concatenata."
  overload: System.Data.Services.Providers.OpenTypeMethods.Concat*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Convert(System.Object,System.Data.Services.Providers.ResourceType)
  id: Convert(System.Object,System.Data.Services.Providers.ResourceType)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Convert(Object,ResourceType)
  nameWithType: OpenTypeMethods.Convert(Object,ResourceType)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Convert(Object,ResourceType)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Converte un valore nel tipo specificato."
  remarks: "Il metodo Convert viene utilizzato per eseguire un cast del tipo sul specificato `value`."
  syntax:
    content: public static object Convert (object value, System.Data.Services.Providers.ResourceType type);
    parameters:
    - id: value
      type: System.Object
      description: "Valore da convertire."
    - id: type
      type: System.Data.Services.Providers.ResourceType
      description: "Tipo di risorsa per la conversione."
    return:
      type: System.Object
      description: "Valore convertito."
  overload: System.Data.Services.Providers.OpenTypeMethods.Convert*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Day(System.Object)
  id: Day(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Day(Object)
  nameWithType: OpenTypeMethods.Day(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Day(Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Restituisce il valore del giorno di dato <xref:System.DateTime>istanza.</xref:System.DateTime>"
  syntax:
    content: public static object Day (object dateTime);
    parameters:
    - id: dateTime
      type: System.Object
      description: "Oggetto <xref:System.DateTime>oggetto.</xref:System.DateTime>"
    return:
      type: System.Object
      description: "Il valore del giorno di dato <xref:System.DateTime>istanza.</xref:System.DateTime>"
  overload: System.Data.Services.Providers.OpenTypeMethods.Day*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Divide(System.Object,System.Object)
  id: Divide(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Divide(Object,Object)
  nameWithType: OpenTypeMethods.Divide(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Divide(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Divide due valori."
  syntax:
    content: public static object Divide (object left, object right);
    parameters:
    - id: left
      type: System.Object
      description: "Il primo valore (dividendo)."
    - id: right
      type: System.Object
      description: "Il secondo valore (divisore)."
    return:
      type: System.Object
      description: "Il valore diviso."
  overload: System.Data.Services.Providers.OpenTypeMethods.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.EndsWith(System.Object,System.Object)
  id: EndsWith(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: EndsWith(Object,Object)
  nameWithType: OpenTypeMethods.EndsWith(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.EndsWith(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Determina se la fine di una stringa corrisponde a un&quot;altra stringa."
  remarks: "Viene generato un errore quando i parametri non sono stringhe."
  syntax:
    content: public static object EndsWith (object targetString, object substring);
    parameters:
    - id: targetString
      type: System.Object
      description: "La stringa da confrontare."
    - id: substring
      type: System.Object
      description: "Stringa da confrontare."
    return:
      type: System.Object
      description: "Returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> when <code>targetString</code> ends with <code>substring</code>; otherwise returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Services.Providers.OpenTypeMethods.EndsWith*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Equal(System.Object,System.Object)
  id: Equal(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Equal(Object,Object)
  nameWithType: OpenTypeMethods.Equal(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Equal(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Determina se gli oggetti specificati sono considerati uguali."
  syntax:
    content: public static object Equal (object left, object right);
    parameters:
    - id: left
      type: System.Object
      description: "Il primo oggetto da confrontare."
    - id: right
      type: System.Object
      description: "Secondo oggetto da confrontare."
    return:
      type: System.Object
      description: "Oggetto <xref:System.Boolean>valore <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> quando entrambi gli oggetti sono uguali; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Boolean>"
  overload: System.Data.Services.Providers.OpenTypeMethods.Equal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Floor(System.Object)
  id: Floor(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Floor(Object)
  nameWithType: OpenTypeMethods.Floor(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Floor(Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Restituisce la parte intera del valore specificato."
  syntax:
    content: public static object Floor (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il <xref:System.Decimal>o <xref:System.Double>oggetto da valutare.</xref:System.Double> </xref:System.Decimal>"
    return:
      type: System.Object
      description: "Restituisce il valore di base per l&quot;oggetto specificato."
  overload: System.Data.Services.Providers.OpenTypeMethods.Floor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.GetValue(System.Object,System.String)
  id: GetValue(System.Object,System.String)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: GetValue(Object,String)
  nameWithType: OpenTypeMethods.GetValue(Object,String)
  fullName: System.Data.Services.Providers.OpenTypeMethods.GetValue(Object,String)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Ottiene un valore dalla proprietà specificata di un oggetto specificato."
  syntax:
    content: public static object GetValue (object value, string propertyName);
    parameters:
    - id: value
      type: System.Object
      description: "Oggetto da cui ottenere il valore della proprietà."
    - id: propertyName
      type: System.String
      description: "Nome della proprietà da cui ottenere il valore."
    return:
      type: System.Object
      description: "Il valore richiesto. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il valore non può essere determinato."
  overload: System.Data.Services.Providers.OpenTypeMethods.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.GreaterThan(System.Object,System.Object)
  id: GreaterThan(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: GreaterThan(Object,Object)
  nameWithType: OpenTypeMethods.GreaterThan(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.GreaterThan(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Determina se il valore di un oggetto è maggiore di un altro oggetto."
  syntax:
    content: public static object GreaterThan (object left, object right);
    parameters:
    - id: left
      type: System.Object
      description: "Il primo valore."
    - id: right
      type: System.Object
      description: "Il secondo valore."
    return:
      type: System.Object
      description: "Restituisce <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> quando il valore del primo oggetto è maggiore del secondo oggetto; in caso contrario restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Services.Providers.OpenTypeMethods.GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.GreaterThanOrEqual(System.Object,System.Object)
  id: GreaterThanOrEqual(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: GreaterThanOrEqual(Object,Object)
  nameWithType: OpenTypeMethods.GreaterThanOrEqual(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.GreaterThanOrEqual(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Determina se il valore di un oggetto è maggiore o uguale a un altro oggetto."
  syntax:
    content: public static object GreaterThanOrEqual (object left, object right);
    parameters:
    - id: left
      type: System.Object
      description: "Il primo valore."
    - id: right
      type: System.Object
      description: "Il secondo valore."
    return:
      type: System.Object
      description: "Restituisce <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> quando il valore del primo oggetto è maggiore o uguale a quello del secondo oggetto; in caso contrario restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Services.Providers.OpenTypeMethods.GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Hour(System.Object)
  id: Hour(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Hour(Object)
  nameWithType: OpenTypeMethods.Hour(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Hour(Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Restituisce il valore delle ore il determinato <xref:System.DateTime>istanza.</xref:System.DateTime>"
  syntax:
    content: public static object Hour (object dateTime);
    parameters:
    - id: dateTime
      type: System.Object
      description: "Oggetto <xref:System.DateTime>oggetto.</xref:System.DateTime>"
    return:
      type: System.Object
      description: "Il valore delle ore il determinato <xref:System.DateTime>istanza.</xref:System.DateTime>"
  overload: System.Data.Services.Providers.OpenTypeMethods.Hour*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.IndexOf(System.Object,System.Object)
  id: IndexOf(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: IndexOf(Object,Object)
  nameWithType: OpenTypeMethods.IndexOf(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.IndexOf(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Restituisce l&quot;indice di una sottostringa nella stringa di destinazione."
  remarks: "Il metodo IndexOf restituisce un valore null quando `substring` non può trovarsi in `targetString`."
  syntax:
    content: public static object IndexOf (object targetString, object substring);
    parameters:
    - id: targetString
      type: System.Object
      description: "La stringa di destinazione."
    - id: substring
      type: System.Object
      description: "La sottostringa da trovare."
    return:
      type: System.Object
      description: "Restituisce l&quot;indice della posizione di <code> substring </code> nel <code> targetString </code>."
  overload: System.Data.Services.Providers.OpenTypeMethods.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Length(System.Object)
  id: Length(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Length(Object)
  nameWithType: OpenTypeMethods.Length(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Length(Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Ottiene il numero di caratteri nell&quot;oggetto string specificato."
  remarks: "Viene generato un errore quando l&quot;oggetto fornito `value` non è di tipo <xref:System.String>.</xref:System.String>"
  syntax:
    content: public static object Length (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Stringa da controllare."
    return:
      type: System.Object
      description: "La lunghezza del valore di stringa."
  overload: System.Data.Services.Providers.OpenTypeMethods.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.LessThan(System.Object,System.Object)
  id: LessThan(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: LessThan(Object,Object)
  nameWithType: OpenTypeMethods.LessThan(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.LessThan(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Determina se il valore di un oggetto è minore di un altro oggetto."
  syntax:
    content: public static object LessThan (object left, object right);
    parameters:
    - id: left
      type: System.Object
      description: "Il primo valore."
    - id: right
      type: System.Object
      description: "Il secondo valore."
    return:
      type: System.Object
      description: "Restituisce <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> quando il valore del primo oggetto è minore del secondo oggetto; in caso contrario restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Services.Providers.OpenTypeMethods.LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.LessThanOrEqual(System.Object,System.Object)
  id: LessThanOrEqual(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: LessThanOrEqual(Object,Object)
  nameWithType: OpenTypeMethods.LessThanOrEqual(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.LessThanOrEqual(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Determina se il valore di un oggetto è minore o uguale a un altro oggetto."
  syntax:
    content: public static object LessThanOrEqual (object left, object right);
    parameters:
    - id: left
      type: System.Object
      description: "Il primo valore."
    - id: right
      type: System.Object
      description: "Il secondo valore."
    return:
      type: System.Object
      description: "Restituisce <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> quando il valore del primo oggetto è minore o uguale a quello del secondo oggetto; in caso contrario restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Services.Providers.OpenTypeMethods.LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Minute(System.Object)
  id: Minute(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Minute(Object)
  nameWithType: OpenTypeMethods.Minute(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Minute(Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Restituisce il valore dei minuti il determinato <xref:System.DateTime>istanza.</xref:System.DateTime>"
  syntax:
    content: public static object Minute (object dateTime);
    parameters:
    - id: dateTime
      type: System.Object
      description: "Oggetto <xref:System.DateTime>oggetto.</xref:System.DateTime>"
    return:
      type: System.Object
      description: "Il valore dei minuti di dato <xref:System.DateTime>istanza.</xref:System.DateTime>"
  overload: System.Data.Services.Providers.OpenTypeMethods.Minute*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Modulo(System.Object,System.Object)
  id: Modulo(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Modulo(Object,Object)
  nameWithType: OpenTypeMethods.Modulo(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Modulo(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Calcola il resto aritmetico della divisione di un valore per un secondo valore."
  syntax:
    content: public static object Modulo (object left, object right);
    parameters:
    - id: left
      type: System.Object
      description: "Il primo valore (dividendo)."
    - id: right
      type: System.Object
      description: "Il secondo valore (divisore)."
    return:
      type: System.Object
      description: "Il valore rimanente."
  overload: System.Data.Services.Providers.OpenTypeMethods.Modulo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Month(System.Object)
  id: Month(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Month(Object)
  nameWithType: OpenTypeMethods.Month(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Month(Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Restituisce il valore del mese il determinato <xref:System.DateTime>istanza.</xref:System.DateTime>"
  syntax:
    content: public static object Month (object dateTime);
    parameters:
    - id: dateTime
      type: System.Object
      description: "Oggetto <xref:System.DateTime>oggetto.</xref:System.DateTime>"
    return:
      type: System.Object
      description: "Il valore del mese il determinato <xref:System.DateTime>istanza.</xref:System.DateTime>"
  overload: System.Data.Services.Providers.OpenTypeMethods.Month*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Multiply(System.Object,System.Object)
  id: Multiply(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Multiply(Object,Object)
  nameWithType: OpenTypeMethods.Multiply(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Multiply(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Moltiplica due valori."
  remarks: "La moltiplicazione metodo Moltiplica due valori senza controllo dell&quot;overflow."
  syntax:
    content: public static object Multiply (object left, object right);
    parameters:
    - id: left
      type: System.Object
      description: "Il primo valore."
    - id: right
      type: System.Object
      description: "Il secondo valore."
    return:
      type: System.Object
      description: "Il prodotto dei due valori."
  overload: System.Data.Services.Providers.OpenTypeMethods.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Negate(System.Object)
  id: Negate(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Negate(Object)
  nameWithType: OpenTypeMethods.Negate(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Negate(Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Restituisce il risultato della moltiplicazione del valore specificato per uno negativo."
  syntax:
    content: public static object Negate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il valore da negare."
    return:
      type: System.Object
      description: "Il prodotto di <code> value </code> moltiplicato per uno negativo."
  overload: System.Data.Services.Providers.OpenTypeMethods.Negate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Not(System.Object)
  id: Not(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Not(Object)
  nameWithType: OpenTypeMethods.Not(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Not(Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Esegue un&quot;operazione di complemento bit per bit di (logico) sul valore fornito."
  syntax:
    content: public static object Not (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Valore da integrare in modo logico."
    return:
      type: System.Object
      description: "Un complemento bit per bit del valore fornito."
  overload: System.Data.Services.Providers.OpenTypeMethods.Not*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.NotEqual(System.Object,System.Object)
  id: NotEqual(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: NotEqual(Object,Object)
  nameWithType: OpenTypeMethods.NotEqual(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.NotEqual(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Esegue un confronto logico tra i due valori per determinare se non sono uguali."
  syntax:
    content: public static object NotEqual (object left, object right);
    parameters:
    - id: left
      type: System.Object
      description: "Il primo valore."
    - id: right
      type: System.Object
      description: "Il secondo valore."
    return:
      type: System.Object
      description: "Oggetto <xref:System.Boolean>valore <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> quando entrambi gli oggetti non sono uguali; in caso contrario restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Boolean>"
  overload: System.Data.Services.Providers.OpenTypeMethods.NotEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.OrElse(System.Object,System.Object)
  id: OrElse(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: OrElse(Object,Object)
  nameWithType: OpenTypeMethods.OrElse(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.OrElse(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Esegue una logica <xref uid=&quot;langword_csharp_OR&quot; name=&quot;OR&quot; href=&quot;&quot;> </xref> operazione su due valori."
  syntax:
    content: public static object OrElse (object left, object right);
    parameters:
    - id: left
      type: System.Object
      description: "Il primo valore."
    - id: right
      type: System.Object
      description: "Il secondo valore."
    return:
      type: System.Object
      description: "Il risultato logico <xref uid=&quot;langword_csharp_OR&quot; name=&quot;OR&quot; href=&quot;&quot;> </xref> operazione."
  overload: System.Data.Services.Providers.OpenTypeMethods.OrElse*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Replace(System.Object,System.Object,System.Object)
  id: Replace(System.Object,System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Replace(Object,Object,Object)
  nameWithType: OpenTypeMethods.Replace(Object,Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Replace(Object,Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Sostituisce una sottostringa con una seconda sottostringa in una stringa di destinazione."
  syntax:
    content: public static object Replace (object targetString, object substring, object newString);
    parameters:
    - id: targetString
      type: System.Object
      description: "La stringa con la sottostringa da sostituire."
    - id: substring
      type: System.Object
      description: "La sottostringa da sostituire."
    - id: newString
      type: System.Object
      description: "La nuova sottostringa."
    return:
      type: System.Object
      description: "Nuova stringa con la sottostringa sostituita con la nuova sottostringa."
  overload: System.Data.Services.Providers.OpenTypeMethods.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Round(System.Object)
  id: Round(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Round(Object)
  nameWithType: OpenTypeMethods.Round(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Round(Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Arrotonda il valore fornito."
  syntax:
    content: public static object Round (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Oggetto <xref:System.Decimal>o <xref:System.Double>da arrotondare.</xref:System.Double> </xref:System.Decimal>"
    return:
      type: System.Object
      description: "Il valore arrotondato."
  overload: System.Data.Services.Providers.OpenTypeMethods.Round*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Second(System.Object)
  id: Second(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Second(Object)
  nameWithType: OpenTypeMethods.Second(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Second(Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Restituisce il valore del secondo il determinato <xref:System.DateTime>istanza.</xref:System.DateTime>"
  syntax:
    content: public static object Second (object dateTime);
    parameters:
    - id: dateTime
      type: System.Object
      description: "Oggetto <xref:System.DateTime>oggetto.</xref:System.DateTime>"
    return:
      type: System.Object
      description: "Il valore del secondo il determinato <xref:System.DateTime>istanza.</xref:System.DateTime>"
  overload: System.Data.Services.Providers.OpenTypeMethods.Second*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.StartsWith(System.Object,System.Object)
  id: StartsWith(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: StartsWith(Object,Object)
  nameWithType: OpenTypeMethods.StartsWith(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.StartsWith(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Controlla se la stringa di destinazione inizia con la sottostringa."
  syntax:
    content: public static object StartsWith (object targetString, object substring);
    parameters:
    - id: targetString
      type: System.Object
      description: "La stringa da confrontare."
    - id: substring
      type: System.Object
      description: "La sottostringa che il `targetString` potrebbe iniziare con."
    return:
      type: System.Object
      description: "Restituisce <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se la stringa di destinazione inizia con la sottostringa specificata, in caso contrario restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Services.Providers.OpenTypeMethods.StartsWith*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Substring(System.Object,System.Object)
  id: Substring(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Substring(Object,Object)
  nameWithType: OpenTypeMethods.Substring(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Substring(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Restituisce la sottostringa dopo la posizione di indice iniziale specificato."
  remarks: "Il metodo sottostringa restituisce tutti i caratteri dalla `startIndex` fino alla fine del `targetString`."
  syntax:
    content: public static object Substring (object targetString, object startIndex);
    parameters:
    - id: targetString
      type: System.Object
      description: "La stringa da cui restituire la sottostringa."
    - id: startIndex
      type: System.Object
      description: "Indice iniziale della sottostringa."
    return:
      type: System.Object
      description: "La sottostringa."
  overload: System.Data.Services.Providers.OpenTypeMethods.Substring*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Substring(System.Object,System.Object,System.Object)
  id: Substring(System.Object,System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Substring(Object,Object,Object)
  nameWithType: OpenTypeMethods.Substring(Object,Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Substring(Object,Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Restituisce la sottostringa di lunghezza specifica dopo la posizione di indice iniziale specificato."
  remarks: "Il <xref:System.Data.Services.Providers.OpenTypeMethods.Substring%2A>metodo restituisce il `length` numero di caratteri da `startIndex` fino alla fine del `targetString`.</xref:System.Data.Services.Providers.OpenTypeMethods.Substring%2A>"
  syntax:
    content: public static object Substring (object targetString, object startIndex, object length);
    parameters:
    - id: targetString
      type: System.Object
      description: "La stringa da cui restituire la sottostringa."
    - id: startIndex
      type: System.Object
      description: "Indice iniziale della sottostringa."
    - id: length
      type: System.Object
      description: "La lunghezza della sottostringa."
    return:
      type: System.Object
      description: "La sottostringa."
  overload: System.Data.Services.Providers.OpenTypeMethods.Substring*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.SubstringOf(System.Object,System.Object)
  id: SubstringOf(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: SubstringOf(Object,Object)
  nameWithType: OpenTypeMethods.SubstringOf(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.SubstringOf(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Determina se una sottostringa è presente in un&quot;altra stringa."
  syntax:
    content: public static object SubstringOf (object substring, object targetString);
    parameters:
    - id: substring
      type: System.Object
      description: "La sottostringa da individuare."
    - id: targetString
      type: System.Object
      description: "La stringa da cercare."
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>when <code>substring</code> occurs in <code>targetString</code>, otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Services.Providers.OpenTypeMethods.SubstringOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Subtract(System.Object,System.Object)
  id: Subtract(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Subtract(Object,Object)
  nameWithType: OpenTypeMethods.Subtract(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Subtract(Object,Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Sottrae due valori."
  syntax:
    content: public static object Subtract (object left, object right);
    parameters:
    - id: left
      type: System.Object
      description: "Primo valore nella sottrazione."
    - id: right
      type: System.Object
      description: "Secondo valore nella sottrazione."
    return:
      type: System.Object
      description: "Il risultato dell&quot;operazione aritmetica."
  overload: System.Data.Services.Providers.OpenTypeMethods.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.ToLower(System.Object)
  id: ToLower(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: ToLower(Object)
  nameWithType: OpenTypeMethods.ToLower(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.ToLower(Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Restituisce una copia di una stringa convertita in caratteri minuscoli."
  syntax:
    content: public static object ToLower (object targetString);
    parameters:
    - id: targetString
      type: System.Object
      description: "Stringa da convertire."
    return:
      type: System.Object
      description: "Un nuovo valore stringa con solo caratteri minuscoli."
  overload: System.Data.Services.Providers.OpenTypeMethods.ToLower*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.ToUpper(System.Object)
  id: ToUpper(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: ToUpper(Object)
  nameWithType: OpenTypeMethods.ToUpper(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.ToUpper(Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Restituisce una copia di una stringa convertita in lettere maiuscole."
  syntax:
    content: public static object ToUpper (object targetString);
    parameters:
    - id: targetString
      type: System.Object
      description: "Stringa da convertire."
    return:
      type: System.Object
      description: "Un nuovo valore stringa con solo caratteri maiuscoli."
  overload: System.Data.Services.Providers.OpenTypeMethods.ToUpper*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Trim(System.Object)
  id: Trim(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Trim(Object)
  nameWithType: OpenTypeMethods.Trim(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Trim(Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Rimuove tutti i caratteri spazi vuoti iniziali e finali da una stringa."
  syntax:
    content: public static object Trim (object targetString);
    parameters:
    - id: targetString
      type: System.Object
      description: "Stringa da tagliare."
    return:
      type: System.Object
      description: "Stringa tagliata."
  overload: System.Data.Services.Providers.OpenTypeMethods.Trim*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.TypeIs(System.Object,System.Data.Services.Providers.ResourceType)
  id: TypeIs(System.Object,System.Data.Services.Providers.ResourceType)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: TypeIs(Object,ResourceType)
  nameWithType: OpenTypeMethods.TypeIs(Object,ResourceType)
  fullName: System.Data.Services.Providers.OpenTypeMethods.TypeIs(Object,ResourceType)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Controlla il tipo di un valore specificato."
  syntax:
    content: public static object TypeIs (object value, System.Data.Services.Providers.ResourceType type);
    parameters:
    - id: value
      type: System.Object
      description: "Valore da controllare."
    - id: type
      type: System.Data.Services.Providers.ResourceType
      description: "Tipo di risorsa per cui si desidera controllare."
    return:
      type: System.Object
      description: "Oggetto <xref:System.Boolean>valore <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> quando il valore è del tipo di risorsa specificato; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Boolean>"
  overload: System.Data.Services.Providers.OpenTypeMethods.TypeIs*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.Providers.OpenTypeMethods.Year(System.Object)
  id: Year(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  langs:
  - csharp
  name: Year(Object)
  nameWithType: OpenTypeMethods.Year(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Year(Object)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services.Providers
  summary: "Restituisce il valore dell&quot;anno il determinato <xref:System.DateTime>istanza.</xref:System.DateTime>"
  syntax:
    content: public static object Year (object dateTime);
    parameters:
    - id: dateTime
      type: System.Object
      description: "Oggetto <xref:System.DateTime>oggetto.</xref:System.DateTime>"
    return:
      type: System.Object
      description: "Il valore dell&quot;anno il determinato <xref:System.DateTime>istanza.</xref:System.DateTime>"
  overload: System.Data.Services.Providers.OpenTypeMethods.Year*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Services.Providers.OpenTypeMethods.Add(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Add(Object,Object)
  nameWithType: OpenTypeMethods.Add(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Add(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.AndAlso(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: AndAlso(Object,Object)
  nameWithType: OpenTypeMethods.AndAlso(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.AndAlso(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Ceiling(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Ceiling(Object)
  nameWithType: OpenTypeMethods.Ceiling(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Ceiling(Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Concat(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Concat(Object,Object)
  nameWithType: OpenTypeMethods.Concat(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Concat(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Convert(System.Object,System.Data.Services.Providers.ResourceType)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Convert(Object,ResourceType)
  nameWithType: OpenTypeMethods.Convert(Object,ResourceType)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Convert(Object,ResourceType)
- uid: System.Data.Services.Providers.ResourceType
  parent: System.Data.Services.Providers
  isExternal: false
  name: ResourceType
  nameWithType: ResourceType
  fullName: System.Data.Services.Providers.ResourceType
- uid: System.Data.Services.Providers.OpenTypeMethods.Day(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Day(Object)
  nameWithType: OpenTypeMethods.Day(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Day(Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Divide(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Divide(Object,Object)
  nameWithType: OpenTypeMethods.Divide(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Divide(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.EndsWith(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: EndsWith(Object,Object)
  nameWithType: OpenTypeMethods.EndsWith(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.EndsWith(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Equal(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Equal(Object,Object)
  nameWithType: OpenTypeMethods.Equal(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Equal(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Floor(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Floor(Object)
  nameWithType: OpenTypeMethods.Floor(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Floor(Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.GetValue(System.Object,System.String)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: GetValue(Object,String)
  nameWithType: OpenTypeMethods.GetValue(Object,String)
  fullName: System.Data.Services.Providers.OpenTypeMethods.GetValue(Object,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Services.Providers.OpenTypeMethods.GreaterThan(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: GreaterThan(Object,Object)
  nameWithType: OpenTypeMethods.GreaterThan(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.GreaterThan(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.GreaterThanOrEqual(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: GreaterThanOrEqual(Object,Object)
  nameWithType: OpenTypeMethods.GreaterThanOrEqual(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.GreaterThanOrEqual(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Hour(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Hour(Object)
  nameWithType: OpenTypeMethods.Hour(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Hour(Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.IndexOf(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: IndexOf(Object,Object)
  nameWithType: OpenTypeMethods.IndexOf(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.IndexOf(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Length(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Length(Object)
  nameWithType: OpenTypeMethods.Length(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Length(Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.LessThan(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: LessThan(Object,Object)
  nameWithType: OpenTypeMethods.LessThan(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.LessThan(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.LessThanOrEqual(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: LessThanOrEqual(Object,Object)
  nameWithType: OpenTypeMethods.LessThanOrEqual(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.LessThanOrEqual(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Minute(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Minute(Object)
  nameWithType: OpenTypeMethods.Minute(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Minute(Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Modulo(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Modulo(Object,Object)
  nameWithType: OpenTypeMethods.Modulo(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Modulo(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Month(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Month(Object)
  nameWithType: OpenTypeMethods.Month(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Month(Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Multiply(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Multiply(Object,Object)
  nameWithType: OpenTypeMethods.Multiply(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Multiply(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Negate(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Negate(Object)
  nameWithType: OpenTypeMethods.Negate(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Negate(Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Not(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Not(Object)
  nameWithType: OpenTypeMethods.Not(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Not(Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.NotEqual(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: NotEqual(Object,Object)
  nameWithType: OpenTypeMethods.NotEqual(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.NotEqual(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.OrElse(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: OrElse(Object,Object)
  nameWithType: OpenTypeMethods.OrElse(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.OrElse(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Replace(System.Object,System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Replace(Object,Object,Object)
  nameWithType: OpenTypeMethods.Replace(Object,Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Replace(Object,Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Round(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Round(Object)
  nameWithType: OpenTypeMethods.Round(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Round(Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Second(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Second(Object)
  nameWithType: OpenTypeMethods.Second(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Second(Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.StartsWith(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: StartsWith(Object,Object)
  nameWithType: OpenTypeMethods.StartsWith(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.StartsWith(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Substring(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Substring(Object,Object)
  nameWithType: OpenTypeMethods.Substring(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Substring(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Substring(System.Object,System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Substring(Object,Object,Object)
  nameWithType: OpenTypeMethods.Substring(Object,Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Substring(Object,Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.SubstringOf(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: SubstringOf(Object,Object)
  nameWithType: OpenTypeMethods.SubstringOf(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.SubstringOf(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Subtract(System.Object,System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Subtract(Object,Object)
  nameWithType: OpenTypeMethods.Subtract(Object,Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Subtract(Object,Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.ToLower(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: ToLower(Object)
  nameWithType: OpenTypeMethods.ToLower(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.ToLower(Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.ToUpper(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: ToUpper(Object)
  nameWithType: OpenTypeMethods.ToUpper(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.ToUpper(Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Trim(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Trim(Object)
  nameWithType: OpenTypeMethods.Trim(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Trim(Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.TypeIs(System.Object,System.Data.Services.Providers.ResourceType)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: TypeIs(Object,ResourceType)
  nameWithType: OpenTypeMethods.TypeIs(Object,ResourceType)
  fullName: System.Data.Services.Providers.OpenTypeMethods.TypeIs(Object,ResourceType)
- uid: System.Data.Services.Providers.OpenTypeMethods.Year(System.Object)
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Year(Object)
  nameWithType: OpenTypeMethods.Year(Object)
  fullName: System.Data.Services.Providers.OpenTypeMethods.Year(Object)
- uid: System.Data.Services.Providers.OpenTypeMethods.Add*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Add
  nameWithType: OpenTypeMethods.Add
- uid: System.Data.Services.Providers.OpenTypeMethods.AndAlso*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: AndAlso
  nameWithType: OpenTypeMethods.AndAlso
- uid: System.Data.Services.Providers.OpenTypeMethods.Ceiling*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Ceiling
  nameWithType: OpenTypeMethods.Ceiling
- uid: System.Data.Services.Providers.OpenTypeMethods.Concat*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Concat
  nameWithType: OpenTypeMethods.Concat
- uid: System.Data.Services.Providers.OpenTypeMethods.Convert*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Convert
  nameWithType: OpenTypeMethods.Convert
- uid: System.Data.Services.Providers.OpenTypeMethods.Day*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Day
  nameWithType: OpenTypeMethods.Day
- uid: System.Data.Services.Providers.OpenTypeMethods.Divide*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Divide
  nameWithType: OpenTypeMethods.Divide
- uid: System.Data.Services.Providers.OpenTypeMethods.EndsWith*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: EndsWith
  nameWithType: OpenTypeMethods.EndsWith
- uid: System.Data.Services.Providers.OpenTypeMethods.Equal*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Equal
  nameWithType: OpenTypeMethods.Equal
- uid: System.Data.Services.Providers.OpenTypeMethods.Floor*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Floor
  nameWithType: OpenTypeMethods.Floor
- uid: System.Data.Services.Providers.OpenTypeMethods.GetValue*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: GetValue
  nameWithType: OpenTypeMethods.GetValue
- uid: System.Data.Services.Providers.OpenTypeMethods.GreaterThan*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: GreaterThan
  nameWithType: OpenTypeMethods.GreaterThan
- uid: System.Data.Services.Providers.OpenTypeMethods.GreaterThanOrEqual*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: OpenTypeMethods.GreaterThanOrEqual
- uid: System.Data.Services.Providers.OpenTypeMethods.Hour*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Hour
  nameWithType: OpenTypeMethods.Hour
- uid: System.Data.Services.Providers.OpenTypeMethods.IndexOf*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: IndexOf
  nameWithType: OpenTypeMethods.IndexOf
- uid: System.Data.Services.Providers.OpenTypeMethods.Length*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Length
  nameWithType: OpenTypeMethods.Length
- uid: System.Data.Services.Providers.OpenTypeMethods.LessThan*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: LessThan
  nameWithType: OpenTypeMethods.LessThan
- uid: System.Data.Services.Providers.OpenTypeMethods.LessThanOrEqual*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: LessThanOrEqual
  nameWithType: OpenTypeMethods.LessThanOrEqual
- uid: System.Data.Services.Providers.OpenTypeMethods.Minute*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Minute
  nameWithType: OpenTypeMethods.Minute
- uid: System.Data.Services.Providers.OpenTypeMethods.Modulo*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Modulo
  nameWithType: OpenTypeMethods.Modulo
- uid: System.Data.Services.Providers.OpenTypeMethods.Month*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Month
  nameWithType: OpenTypeMethods.Month
- uid: System.Data.Services.Providers.OpenTypeMethods.Multiply*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Multiply
  nameWithType: OpenTypeMethods.Multiply
- uid: System.Data.Services.Providers.OpenTypeMethods.Negate*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Negate
  nameWithType: OpenTypeMethods.Negate
- uid: System.Data.Services.Providers.OpenTypeMethods.Not*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Not
  nameWithType: OpenTypeMethods.Not
- uid: System.Data.Services.Providers.OpenTypeMethods.NotEqual*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: NotEqual
  nameWithType: OpenTypeMethods.NotEqual
- uid: System.Data.Services.Providers.OpenTypeMethods.OrElse*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: OrElse
  nameWithType: OpenTypeMethods.OrElse
- uid: System.Data.Services.Providers.OpenTypeMethods.Replace*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Replace
  nameWithType: OpenTypeMethods.Replace
- uid: System.Data.Services.Providers.OpenTypeMethods.Round*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Round
  nameWithType: OpenTypeMethods.Round
- uid: System.Data.Services.Providers.OpenTypeMethods.Second*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Second
  nameWithType: OpenTypeMethods.Second
- uid: System.Data.Services.Providers.OpenTypeMethods.StartsWith*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: StartsWith
  nameWithType: OpenTypeMethods.StartsWith
- uid: System.Data.Services.Providers.OpenTypeMethods.Substring*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Substring
  nameWithType: OpenTypeMethods.Substring
- uid: System.Data.Services.Providers.OpenTypeMethods.SubstringOf*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: SubstringOf
  nameWithType: OpenTypeMethods.SubstringOf
- uid: System.Data.Services.Providers.OpenTypeMethods.Subtract*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Subtract
  nameWithType: OpenTypeMethods.Subtract
- uid: System.Data.Services.Providers.OpenTypeMethods.ToLower*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: ToLower
  nameWithType: OpenTypeMethods.ToLower
- uid: System.Data.Services.Providers.OpenTypeMethods.ToUpper*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: ToUpper
  nameWithType: OpenTypeMethods.ToUpper
- uid: System.Data.Services.Providers.OpenTypeMethods.Trim*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Trim
  nameWithType: OpenTypeMethods.Trim
- uid: System.Data.Services.Providers.OpenTypeMethods.TypeIs*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: TypeIs
  nameWithType: OpenTypeMethods.TypeIs
- uid: System.Data.Services.Providers.OpenTypeMethods.Year*
  parent: System.Data.Services.Providers.OpenTypeMethods
  isExternal: false
  name: Year
  nameWithType: OpenTypeMethods.Year
