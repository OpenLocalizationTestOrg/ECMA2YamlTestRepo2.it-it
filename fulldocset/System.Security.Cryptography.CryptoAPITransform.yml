### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CryptoAPITransform
  id: CryptoAPITransform
  children:
  - System.Security.Cryptography.CryptoAPITransform.CanReuseTransform
  - System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks
  - System.Security.Cryptography.CryptoAPITransform.Clear
  - System.Security.Cryptography.CryptoAPITransform.Dispose
  - System.Security.Cryptography.CryptoAPITransform.InputBlockSize
  - System.Security.Cryptography.CryptoAPITransform.KeyHandle
  - System.Security.Cryptography.CryptoAPITransform.OutputBlockSize
  - System.Security.Cryptography.CryptoAPITransform.Reset
  - System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: CryptoAPITransform
  nameWithType: CryptoAPITransform
  fullName: System.Security.Cryptography.CryptoAPITransform
  type: Class
  summary: "Esegue una trasformazione di crittografia dei dati. Questa classe non può essere ereditata."
  remarks: ''
  example:
  - "The following code example demonstrates how to use members of the CryptoAPITransform class.  \n  \n [!code-cs[System.Security.Cryptography.CryptoAPITransform#1](~/add/codesnippet/csharp/t-system.security.crypto_128_1.cs)]\n [!code-vb[System.Security.Cryptography.CryptoAPITransform#1](~/add/codesnippet/visualbasic/t-system.security.crypto_128_1.vb)]\n [!code-cpp[System.Security.Cryptography.CryptoAPITransform#1](~/add/codesnippet/cpp/t-system.security.crypto_128_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class CryptoAPITransform : System.Security.Cryptography.ICryptoTransform
  inheritance:
  - System.Object
  implements:
  - System.Security.Cryptography.ICryptoTransform
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoAPITransform.CanReuseTransform
  id: CanReuseTransform
  parent: System.Security.Cryptography.CryptoAPITransform
  langs:
  - csharp
  name: CanReuseTransform
  nameWithType: CryptoAPITransform.CanReuseTransform
  fullName: System.Security.Cryptography.CryptoAPITransform.CanReuseTransform
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene un valore che indica se è possibile riutilizzare la trasformazione corrente."
  remarks: ''
  example:
  - "The following code example demonstrates how to call the CanReuseTransform property to determine if the current transform can be reused. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.  \n  \n [!code-cs[System.Security.Cryptography.CryptoAPITransform#2](~/add/codesnippet/csharp/p-system.security.crypto_33_1.cs)]\n [!code-vb[System.Security.Cryptography.CryptoAPITransform#2](~/add/codesnippet/visualbasic/p-system.security.crypto_33_1.vb)]\n [!code-cpp[System.Security.Cryptography.CryptoAPITransform#2](~/add/codesnippet/cpp/p-system.security.crypto_33_1.cpp)]"
  syntax:
    content: public bool CanReuseTransform { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.CryptoAPITransform.CanReuseTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks
  id: CanTransformMultipleBlocks
  parent: System.Security.Cryptography.CryptoAPITransform
  langs:
  - csharp
  name: CanTransformMultipleBlocks
  nameWithType: CryptoAPITransform.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene un valore che indica se è possano trasformare più blocchi."
  remarks: ''
  example:
  - "The following code example demonstrates how to call the CanTransformMultipleBlocks property to determine if multiple blocks can be transformed. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.  \n  \n [!code-cs[System.Security.Cryptography.CryptoAPITransform#3](~/add/codesnippet/csharp/p-system.security.crypto_68_1.cs)]\n [!code-vb[System.Security.Cryptography.CryptoAPITransform#3](~/add/codesnippet/visualbasic/p-system.security.crypto_68_1.vb)]\n [!code-cpp[System.Security.Cryptography.CryptoAPITransform#3](~/add/codesnippet/cpp/p-system.security.crypto_68_1.cpp)]"
  syntax:
    content: public bool CanTransformMultipleBlocks { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è possono trasformare più blocchi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoAPITransform.Clear
  id: Clear
  parent: System.Security.Cryptography.CryptoAPITransform
  langs:
  - csharp
  name: Clear()
  nameWithType: CryptoAPITransform.Clear()
  fullName: System.Security.Cryptography.CryptoAPITransform.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Rilascia tutte le risorse usate dal <xref href=&quot;System.Security.Cryptography.CryptoAPITransform&quot;> </xref> metodo."
  remarks: "Questo metodo è una semplice chiamata a <xref:System.IDisposable.Dispose%2A?displayProperty=fullName>.</xref:System.IDisposable.Dispose%2A?displayProperty=fullName>       La chiamata `Dispose` le risorse utilizzate da di <xref:System.Security.Cryptography.CryptoAPITransform>riallocazione per altri scopi.</xref:System.Security.Cryptography.CryptoAPITransform> Per ulteriori informazioni su `Dispose`, vedere [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to call the Clear method to release the resources used by the current transform. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.  \n  \n [!code-cs[System.Security.Cryptography.CryptoAPITransform#7](~/add/codesnippet/csharp/m-system.security.crypto_94_1.cs)]\n [!code-vb[System.Security.Cryptography.CryptoAPITransform#7](~/add/codesnippet/visualbasic/m-system.security.crypto_94_1.vb)]\n [!code-cpp[System.Security.Cryptography.CryptoAPITransform#7](~/add/codesnippet/cpp/m-system.security.crypto_94_1.cpp)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Cryptography.CryptoAPITransform.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoAPITransform.Dispose
  id: Dispose
  parent: System.Security.Cryptography.CryptoAPITransform
  langs:
  - csharp
  name: Dispose()
  nameWithType: CryptoAPITransform.Dispose()
  fullName: System.Security.Cryptography.CryptoAPITransform.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Rilascia tutte le risorse usate dall&quot;istanza corrente del <xref href=&quot;System.Security.Cryptography.CryptoAPITransform&quot;> </xref> classe."
  remarks: "Chiamare `Dispose` quando si è terminato di utilizzare <xref:System.Security.Cryptography.CryptoAPITransform>.</xref:System.Security.Cryptography.CryptoAPITransform> Il `Dispose` metodo lascia la <xref:System.Security.Cryptography.CryptoAPITransform>in uno stato inutilizzabile.</xref:System.Security.Cryptography.CryptoAPITransform> Dopo la chiamata `Dispose`, è necessario rilasciare tutti i riferimenti al <xref:System.Security.Cryptography.CryptoAPITransform>in modo che il garbage collector può recuperare la memoria che di <xref:System.Security.Cryptography.CryptoAPITransform>occupata.</xref:System.Security.Cryptography.CryptoAPITransform> </xref:System.Security.Cryptography.CryptoAPITransform>       Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md) e [implementazione di un metodo Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Chiamare sempre `Dispose` prima di rilasciare l&quot;ultimo riferimento a <xref:System.Security.Cryptography.CryptoAPITransform>.</xref:System.Security.Cryptography.CryptoAPITransform> In caso contrario, le risorse non vengono liberate finché il garbage collector chiama la <xref:System.Security.Cryptography.CryptoAPITransform>dell&quot;oggetto `Finalize` metodo.</xref:System.Security.Cryptography.CryptoAPITransform>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.CryptoAPITransform.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoAPITransform.InputBlockSize
  id: InputBlockSize
  parent: System.Security.Cryptography.CryptoAPITransform
  langs:
  - csharp
  name: InputBlockSize
  nameWithType: CryptoAPITransform.InputBlockSize
  fullName: System.Security.Cryptography.CryptoAPITransform.InputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene le dimensioni del blocco di input."
  remarks: ''
  example:
  - "The following code example demonstrates how to call the InputBlockSize property to retrieve the input block size. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.  \n  \n [!code-cs[System.Security.Cryptography.CryptoAPITransform#4](~/add/codesnippet/csharp/p-system.security.crypto_98_1.cs)]\n [!code-vb[System.Security.Cryptography.CryptoAPITransform#4](~/add/codesnippet/visualbasic/p-system.security.crypto_98_1.vb)]\n [!code-cpp[System.Security.Cryptography.CryptoAPITransform#4](~/add/codesnippet/cpp/p-system.security.crypto_98_1.cpp)]"
  syntax:
    content: public int InputBlockSize { get; }
    return:
      type: System.Int32
      description: "Le dimensioni del blocco di input in byte."
  overload: System.Security.Cryptography.CryptoAPITransform.InputBlockSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoAPITransform.KeyHandle
  id: KeyHandle
  parent: System.Security.Cryptography.CryptoAPITransform
  langs:
  - csharp
  name: KeyHandle
  nameWithType: CryptoAPITransform.KeyHandle
  fullName: System.Security.Cryptography.CryptoAPITransform.KeyHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene l&quot;handle di chiave."
  syntax:
    content: public IntPtr KeyHandle { get; }
    return:
      type: System.IntPtr
      description: "Handle di chiave."
  overload: System.Security.Cryptography.CryptoAPITransform.KeyHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoAPITransform.OutputBlockSize
  id: OutputBlockSize
  parent: System.Security.Cryptography.CryptoAPITransform
  langs:
  - csharp
  name: OutputBlockSize
  nameWithType: CryptoAPITransform.OutputBlockSize
  fullName: System.Security.Cryptography.CryptoAPITransform.OutputBlockSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene la dimensione del blocco di output."
  remarks: ''
  example:
  - "The following code example demonstrates how to call the OutputBlockSize property to retrieve the output block size. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.  \n  \n [!code-cs[System.Security.Cryptography.CryptoAPITransform#6](~/add/codesnippet/csharp/p-system.security.crypto_55_1.cs)]\n [!code-vb[System.Security.Cryptography.CryptoAPITransform#6](~/add/codesnippet/visualbasic/p-system.security.crypto_55_1.vb)]\n [!code-cpp[System.Security.Cryptography.CryptoAPITransform#6](~/add/codesnippet/cpp/p-system.security.crypto_55_1.cpp)]"
  syntax:
    content: public int OutputBlockSize { get; }
    return:
      type: System.Int32
      description: "La dimensione del blocco di output in byte."
  overload: System.Security.Cryptography.CryptoAPITransform.OutputBlockSize*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoAPITransform.Reset
  id: Reset
  parent: System.Security.Cryptography.CryptoAPITransform
  langs:
  - csharp
  name: Reset()
  nameWithType: CryptoAPITransform.Reset()
  fullName: System.Security.Cryptography.CryptoAPITransform.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Reimposta lo stato interno di <xref href=&quot;System.Security.Cryptography.CryptoAPITransform&quot;> </xref> in modo che può essere utilizzato nuovamente per eseguire un backup diversa crittografia o decrittografia."
  remarks: "Il metodo di ripristino viene chiamato automaticamente quando si chiama TransformFinalBlock. Il `Reset` metodo non viene chiamato quando, ad esempio, i dati di input crittografati nel Garbage Collector e non possono essere decrittografati. In questo caso, viene generata un&quot;eccezione e `Reset` non viene chiamato. È possibile scegliere di chiamare manualmente il `Reset` metodo in questo caso."
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Security.Cryptography.CryptoAPITransform.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  id: TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.CryptoAPITransform
  langs:
  - csharp
  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  nameWithType: CryptoAPITransform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  fullName: System.Security.Cryptography.CryptoAPITransform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Calcola la trasformazione per l&quot;area specificata della matrice di byte di input e copia la trasformazione risultante nell&quot;area specificata della matrice di byte di output."
  remarks: ''
  example:
  - "The following code example demonstrates how to call the TransformBlock method to transform the bytes from `currentPosition` in the `sourceBytes` array, writing the bytes to the `targetBytes` array. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.  \n  \n [!code-cs[System.Security.Cryptography.CryptoAPITransform#8](~/add/codesnippet/csharp/cb78acec-9bf8-4488-8243-_1.cs)]\n [!code-vb[System.Security.Cryptography.CryptoAPITransform#8](~/add/codesnippet/visualbasic/cb78acec-9bf8-4488-8243-_1.vb)]\n [!code-cpp[System.Security.Cryptography.CryptoAPITransform#8](~/add/codesnippet/cpp/cb78acec-9bf8-4488-8243-_1.cpp)]"
  syntax:
    content: public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: "L&quot;input su cui eseguire l&quot;operazione."
    - id: inputOffset
      type: System.Int32
      description: "Offset nella matrice di byte di input dal quale iniziare a utilizzare i dati."
    - id: inputCount
      type: System.Int32
      description: "Il numero di byte nella matrice di byte di input da utilizzare come dati."
    - id: outputBuffer
      type: System.Byte[]
      description: "L&quot;output in cui scrivere i dati."
    - id: outputOffset
      type: System.Int32
      description: "Offset nella matrice di byte di output da cui iniziare a scrivere i dati."
    return:
      type: System.Int32
      description: "Il numero di byte scritti."
  overload: System.Security.Cryptography.CryptoAPITransform.TransformBlock*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputBuffer</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>outputBuffer</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La lunghezza del buffer di input è inferiore alla somma di offset di input e il numero di input."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inputOffset</code>non compreso nell&quot;intervallo. Questo parametro è richiesto un numero non negativo."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  id: TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.CryptoAPITransform
  langs:
  - csharp
  name: TransformFinalBlock(Byte[],Int32,Int32)
  nameWithType: CryptoAPITransform.TransformFinalBlock(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Calcola la trasformazione per l&quot;area specificata della matrice di byte specificato."
  remarks: ''
  example:
  - "The following code example demonstrates how to call the TransformFinalBlock method to transform the final block of bytes. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoAPITransform> class.  \n  \n [!code-cs[System.Security.Cryptography.CryptoAPITransform#9](~/add/codesnippet/csharp/58c95bd3-abbd-4afc-91d8-_1.cs)]\n [!code-vb[System.Security.Cryptography.CryptoAPITransform#9](~/add/codesnippet/visualbasic/58c95bd3-abbd-4afc-91d8-_1.vb)]\n [!code-cpp[System.Security.Cryptography.CryptoAPITransform#9](~/add/codesnippet/cpp/58c95bd3-abbd-4afc-91d8-_1.cpp)]"
  syntax:
    content: public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);
    parameters:
    - id: inputBuffer
      type: System.Byte[]
      description: "L&quot;input su cui eseguire l&quot;operazione."
    - id: inputOffset
      type: System.Int32
      description: "Offset nella matrice di byte da cui iniziare utilizzando i dati."
    - id: inputCount
      type: System.Int32
      description: "Il numero di byte nella matrice di byte da usare come dati."
    return:
      type: System.Byte[]
      description: "La trasformazione calcolata."
  overload: System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>inputBuffer</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> inputOffset </code> parametro è minore di zero.       - o - <code> inputCount </code> parametro è minore di zero.       oppure la lunghezza del buffer di input è inferiore alla somma di offset di input e il numero di input."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il <xref href=&quot;System.Security.Cryptography.PaddingMode&quot;> </xref> riempimento non è valido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il <code> inputOffset </code> parametro non compreso nell&quot;intervallo. Questo parametro è richiesto un numero non negativo."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.CryptoAPITransform.CanReuseTransform
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: CanReuseTransform
  nameWithType: CryptoAPITransform.CanReuseTransform
  fullName: System.Security.Cryptography.CryptoAPITransform.CanReuseTransform
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: CryptoAPITransform.CanTransformMultipleBlocks
  fullName: System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks
- uid: System.Security.Cryptography.CryptoAPITransform.Clear
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: Clear()
  nameWithType: CryptoAPITransform.Clear()
  fullName: System.Security.Cryptography.CryptoAPITransform.Clear()
- uid: System.Security.Cryptography.CryptoAPITransform.Dispose
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: Dispose()
  nameWithType: CryptoAPITransform.Dispose()
  fullName: System.Security.Cryptography.CryptoAPITransform.Dispose()
- uid: System.Security.Cryptography.CryptoAPITransform.InputBlockSize
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: InputBlockSize
  nameWithType: CryptoAPITransform.InputBlockSize
  fullName: System.Security.Cryptography.CryptoAPITransform.InputBlockSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CryptoAPITransform.KeyHandle
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: KeyHandle
  nameWithType: CryptoAPITransform.KeyHandle
  fullName: System.Security.Cryptography.CryptoAPITransform.KeyHandle
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.CryptoAPITransform.OutputBlockSize
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: OutputBlockSize
  nameWithType: CryptoAPITransform.OutputBlockSize
  fullName: System.Security.Cryptography.CryptoAPITransform.OutputBlockSize
- uid: System.Security.Cryptography.CryptoAPITransform.Reset
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: Reset()
  nameWithType: CryptoAPITransform.Reset()
  fullName: System.Security.Cryptography.CryptoAPITransform.Reset()
- uid: System.Security.Cryptography.CryptoAPITransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  nameWithType: CryptoAPITransform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
  fullName: System.Security.Cryptography.CryptoAPITransform.TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: TransformFinalBlock(Byte[],Int32,Int32)
  nameWithType: CryptoAPITransform.TransformFinalBlock(Byte[],Int32,Int32)
  fullName: System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock(Byte[],Int32,Int32)
- uid: System.Security.Cryptography.CryptoAPITransform.CanReuseTransform*
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: CanReuseTransform
  nameWithType: CryptoAPITransform.CanReuseTransform
- uid: System.Security.Cryptography.CryptoAPITransform.CanTransformMultipleBlocks*
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: CanTransformMultipleBlocks
  nameWithType: CryptoAPITransform.CanTransformMultipleBlocks
- uid: System.Security.Cryptography.CryptoAPITransform.Clear*
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: Clear
  nameWithType: CryptoAPITransform.Clear
- uid: System.Security.Cryptography.CryptoAPITransform.Dispose*
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: Dispose
  nameWithType: CryptoAPITransform.Dispose
- uid: System.Security.Cryptography.CryptoAPITransform.InputBlockSize*
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: InputBlockSize
  nameWithType: CryptoAPITransform.InputBlockSize
- uid: System.Security.Cryptography.CryptoAPITransform.KeyHandle*
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: KeyHandle
  nameWithType: CryptoAPITransform.KeyHandle
- uid: System.Security.Cryptography.CryptoAPITransform.OutputBlockSize*
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: OutputBlockSize
  nameWithType: CryptoAPITransform.OutputBlockSize
- uid: System.Security.Cryptography.CryptoAPITransform.Reset*
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: Reset
  nameWithType: CryptoAPITransform.Reset
- uid: System.Security.Cryptography.CryptoAPITransform.TransformBlock*
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: TransformBlock
  nameWithType: CryptoAPITransform.TransformBlock
- uid: System.Security.Cryptography.CryptoAPITransform.TransformFinalBlock*
  parent: System.Security.Cryptography.CryptoAPITransform
  isExternal: false
  name: TransformFinalBlock
  nameWithType: CryptoAPITransform.TransformFinalBlock
