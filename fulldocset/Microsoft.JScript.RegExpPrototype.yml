### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.RegExpPrototype
  id: RegExpPrototype
  children:
  - Microsoft.JScript.RegExpPrototype.compile(System.Object,System.Object,System.Object)
  - Microsoft.JScript.RegExpPrototype.constructor
  - Microsoft.JScript.RegExpPrototype.exec(System.Object,System.Object)
  - Microsoft.JScript.RegExpPrototype.test(System.Object,System.Object)
  - Microsoft.JScript.RegExpPrototype.toString(System.Object)
  langs:
  - csharp
  name: RegExpPrototype
  nameWithType: RegExpPrototype
  fullName: Microsoft.JScript.RegExpPrototype
  type: Class
  summary: "Fornisce proprietà e metodi statici per <xref href=&quot;Microsoft.JScript.RegExpObject&quot;> </xref> oggetti. Tutti i metodi di questa classe vengono chiamati passando un riferimento all&quot;oggetto che richiede l&quot;accesso al metodo. Questa classe appartiene alla categoria del modello a oggetti incorporati."
  syntax:
    content: 'public class RegExpPrototype : Microsoft.JScript.JSObject'
  inheritance:
  - System.Object
  - Microsoft.JScript.ScriptObject
  - Microsoft.JScript.JSObject
  implements: []
  inheritedMembers:
  - Microsoft.JScript.JSObject.AddField(System.String)
  - Microsoft.JScript.JSObject.field_table
  - Microsoft.JScript.JSObject.GetMember(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.GetMembers(System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.SetMemberValue2(System.String,System.Object)
  - Microsoft.JScript.JSObject.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)
  - Microsoft.JScript.JSObject.ToString
  - Microsoft.JScript.ScriptObject.engine
  - Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetParent
  - Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - Microsoft.JScript.ScriptObject.Item(System.Double)
  - Microsoft.JScript.ScriptObject.Item(System.Int32)
  - Microsoft.JScript.ScriptObject.Item(System.Object[])
  - Microsoft.JScript.ScriptObject.Item(System.String)
  - Microsoft.JScript.ScriptObject.parent
  - Microsoft.JScript.ScriptObject.UnderlyingSystemType
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  platform:
  - net462
- uid: Microsoft.JScript.RegExpPrototype.compile(System.Object,System.Object,System.Object)
  id: compile(System.Object,System.Object,System.Object)
  parent: Microsoft.JScript.RegExpPrototype
  langs:
  - csharp
  name: compile(Object,Object,Object)
  nameWithType: RegExpPrototype.compile(Object,Object,Object)
  fullName: Microsoft.JScript.RegExpPrototype.compile(Object,Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Crea e compila un nuovo <xref href=&quot;Microsoft.JScript.RegExpObject&quot;> </xref> oggetto per il criterio di espressione regolare e i flag."
  syntax:
    content: public static Microsoft.JScript.RegExpObject compile (object thisob, object source, object flags);
    parameters:
    - id: thisob
      type: System.Object
      description: "Oggetto che agisce su questo metodo."
    - id: source
      type: System.Object
      description: "Criterio di espressione regolare da cercare."
    - id: flags
      type: System.Object
      description: "Flag per le Ignora maiuscole/minuscole, globali e modalità multiriga."
    return:
      type: Microsoft.JScript.RegExpObject
      description: "Un nuovo <xref href=&quot;Microsoft.JScript.RegExpObject&quot;> </xref> oggetto."
  overload: Microsoft.JScript.RegExpPrototype.compile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.RegExpPrototype.constructor
  id: constructor
  parent: Microsoft.JScript.RegExpPrototype
  langs:
  - csharp
  name: constructor
  nameWithType: RegExpPrototype.constructor
  fullName: Microsoft.JScript.RegExpPrototype.constructor
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Ottiene un riferimento a un oggetto basato su prototipo che utilizza questo prototipo."
  syntax:
    content: public static Microsoft.JScript.RegExpConstructor constructor { get; }
    return:
      type: Microsoft.JScript.RegExpConstructor
      description: "Un riferimento a un oggetto basato su prototipo."
  overload: Microsoft.JScript.RegExpPrototype.constructor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.RegExpPrototype.exec(System.Object,System.Object)
  id: exec(System.Object,System.Object)
  parent: Microsoft.JScript.RegExpPrototype
  langs:
  - csharp
  name: exec(Object,Object)
  nameWithType: RegExpPrototype.exec(Object,Object)
  fullName: Microsoft.JScript.RegExpPrototype.exec(Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Esegue una ricerca per il modello di espressione regolare specificata nell&quot;oggetto specificato."
  syntax:
    content: public static object exec (object thisob, object input);
    parameters:
    - id: thisob
      type: System.Object
      description: "Oggetto che agisce su questo metodo."
    - id: input
      type: System.Object
      description: "Criterio di espressione regolare da cercare."
    return:
      type: System.Object
      description: "Il risultato della ricerca del criterio di espressione regolare."
  overload: Microsoft.JScript.RegExpPrototype.exec*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.RegExpPrototype.test(System.Object,System.Object)
  id: test(System.Object,System.Object)
  parent: Microsoft.JScript.RegExpPrototype
  langs:
  - csharp
  name: test(Object,Object)
  nameWithType: RegExpPrototype.test(Object,Object)
  fullName: Microsoft.JScript.RegExpPrototype.test(Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Verifica la ricerca per il modello di espressione regolare specificata nell&quot;oggetto specificato."
  syntax:
    content: public static bool test (object thisob, object input);
    parameters:
    - id: thisob
      type: System.Object
      description: "Oggetto che agisce su questo metodo."
    - id: input
      type: System.Object
      description: "Criterio di espressione regolare da cercare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la ricerca ha esito positivo. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.JScript.RegExpPrototype.test*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.RegExpPrototype.toString(System.Object)
  id: toString(System.Object)
  parent: Microsoft.JScript.RegExpPrototype
  langs:
  - csharp
  name: toString(Object)
  nameWithType: RegExpPrototype.toString(Object)
  fullName: Microsoft.JScript.RegExpPrototype.toString(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Crea una rappresentazione di stringa dell&quot;oggetto specificato che contiene il criterio di espressione regolare e i flag."
  syntax:
    content: public static string toString (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "Oggetto che agisce su questo metodo."
    return:
      type: System.String
      description: "Rappresentazione di stringa di <code> thisob </code>."
  overload: Microsoft.JScript.RegExpPrototype.toString*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.JSObject
  isExternal: false
  name: Microsoft.JScript.JSObject
- uid: Microsoft.JScript.RegExpPrototype.compile(System.Object,System.Object,System.Object)
  parent: Microsoft.JScript.RegExpPrototype
  isExternal: false
  name: compile(Object,Object,Object)
  nameWithType: RegExpPrototype.compile(Object,Object,Object)
  fullName: Microsoft.JScript.RegExpPrototype.compile(Object,Object,Object)
- uid: Microsoft.JScript.RegExpObject
  parent: Microsoft.JScript
  isExternal: false
  name: RegExpObject
  nameWithType: RegExpObject
  fullName: Microsoft.JScript.RegExpObject
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.JScript.RegExpPrototype.constructor
  parent: Microsoft.JScript.RegExpPrototype
  isExternal: false
  name: constructor
  nameWithType: RegExpPrototype.constructor
  fullName: Microsoft.JScript.RegExpPrototype.constructor
- uid: Microsoft.JScript.RegExpConstructor
  parent: Microsoft.JScript
  isExternal: false
  name: RegExpConstructor
  nameWithType: RegExpConstructor
  fullName: Microsoft.JScript.RegExpConstructor
- uid: Microsoft.JScript.RegExpPrototype.exec(System.Object,System.Object)
  parent: Microsoft.JScript.RegExpPrototype
  isExternal: false
  name: exec(Object,Object)
  nameWithType: RegExpPrototype.exec(Object,Object)
  fullName: Microsoft.JScript.RegExpPrototype.exec(Object,Object)
- uid: Microsoft.JScript.RegExpPrototype.test(System.Object,System.Object)
  parent: Microsoft.JScript.RegExpPrototype
  isExternal: false
  name: test(Object,Object)
  nameWithType: RegExpPrototype.test(Object,Object)
  fullName: Microsoft.JScript.RegExpPrototype.test(Object,Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.JScript.RegExpPrototype.toString(System.Object)
  parent: Microsoft.JScript.RegExpPrototype
  isExternal: false
  name: toString(Object)
  nameWithType: RegExpPrototype.toString(Object)
  fullName: Microsoft.JScript.RegExpPrototype.toString(Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.JScript.RegExpPrototype.compile*
  parent: Microsoft.JScript.RegExpPrototype
  isExternal: false
  name: compile
  nameWithType: RegExpPrototype.compile
- uid: Microsoft.JScript.RegExpPrototype.constructor*
  parent: Microsoft.JScript.RegExpPrototype
  isExternal: false
  name: constructor
  nameWithType: RegExpPrototype.constructor
- uid: Microsoft.JScript.RegExpPrototype.exec*
  parent: Microsoft.JScript.RegExpPrototype
  isExternal: false
  name: exec
  nameWithType: RegExpPrototype.exec
- uid: Microsoft.JScript.RegExpPrototype.test*
  parent: Microsoft.JScript.RegExpPrototype
  isExternal: false
  name: test
  nameWithType: RegExpPrototype.test
- uid: Microsoft.JScript.RegExpPrototype.toString*
  parent: Microsoft.JScript.RegExpPrototype
  isExternal: false
  name: toString
  nameWithType: RegExpPrototype.toString
