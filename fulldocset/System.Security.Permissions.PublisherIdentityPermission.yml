### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.PublisherIdentityPermission
  id: PublisherIdentityPermission
  children:
  - System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.PublisherIdentityPermission.Certificate
  - System.Security.Permissions.PublisherIdentityPermission.Copy
  - System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.PublisherIdentityPermission.ToXml
  - System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: PublisherIdentityPermission
  nameWithType: PublisherIdentityPermission
  fullName: System.Security.Permissions.PublisherIdentityPermission
  type: Class
  summary: "Rappresenta l&quot;identità di un autore di software. Questa classe non può essere ereditata."
  remarks: "> [!IMPORTANT]> Inizia con il [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], non vengono utilizzate le autorizzazioni di identità.   >> Nelle versioni di .NET Framework 1.0 e 1.1, le autorizzazioni di identità non possono avere un <xref:System.Security.Permissions.PermissionState>valore dello stato di autorizzazione.</xref:System.Security.Permissions.PermissionState> A partire da .NET Framework versione 2.0, le autorizzazioni di identità possono avere qualsiasi valore di stato di autorizzazione. Ciò significa che nelle versioni 2.0 e versioni successive, le autorizzazioni di identità hanno lo stesso comportamento delle autorizzazioni che implementano il <xref:System.Security.Permissions.IUnrestrictedPermission>interfaccia.</xref:System.Security.Permissions.IUnrestrictedPermission> Vale a dire, una richiesta per un&quot;identità sempre ha esito positivo, indipendentemente dall&quot;identità dell&quot;assembly, se l&quot;assembly è stata concessa l&quot;attendibilità totale.   >> Nelle versioni di .NET Framework 1.0 e 1.1, le richieste per le autorizzazioni di identità sono valide, anche quando l&quot;assembly chiamante sia completamente attendibile. Vale a dire, anche se l&quot;assembly chiamante dispone di attendibilità, una richiesta per un&quot;autorizzazione di identità ha esito negativo se l&quot;assembly non soddisfa i criteri richiesti. A partire da .NET Framework versione 2.0, le richieste di autorizzazioni di identità sono effettive se l&quot;assembly chiamante dispone di attendibilità totale. Ciò assicura la coerenza per tutte le autorizzazioni, eliminando il trattamento delle autorizzazioni di identità come un caso speciale.      > [!NOTE] > Per impostazione predefinita, sicurezza dall&quot;accesso di codice non verifica <xref:System.Security.Policy.Publisher>evidenza.</xref:System.Security.Policy.Publisher> A meno che il computer disponga di un gruppo di codice personalizzato basato sul <xref:System.Security.Policy.PublisherMembershipCondition>(classe), è possibile migliorare le prestazioni per ignorare la verifica della firma Authenticode.</xref:System.Security.Policy.PublisherMembershipCondition> Questa operazione viene eseguita tramite la configurazione di runtime per fornire non <xref:System.Security.Policy.Publisher>evidenza di sicurezza dall&quot;accesso di codice.</xref:System.Security.Policy.Publisher> Per ulteriori informazioni su come configurare questa opzione e quali applicazioni possono utilizzarlo, vedere l&quot;elemento."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class PublisherIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)'
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: PublisherIdentityPermission(X509Certificate)
  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission(X509Certificate)
  fullName: System.Security.Permissions.PublisherIdentityPermission.PublisherIdentityPermission(X509Certificate)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Permissions.PublisherIdentityPermission&quot;> </xref> classe con il certificato Authenticode x.&509;v3 specificato."
  remarks: "Il certificato x.&509; definisce l&quot;identità dell&quot;editore di software specificato, definito dalla firma del codice Authenticode."
  syntax:
    content: public PublisherIdentityPermission (System.Security.Cryptography.X509Certificates.X509Certificate certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Un certificato x.&509; che rappresenta identità dell&quot;editore del software."
  overload: System.Security.Permissions.PublisherIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>certificate</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> certificate </code> parametro non è un certificato valido."
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: PublisherIdentityPermission(PermissionState)
  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.PublisherIdentityPermission.PublisherIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Permissions.PublisherIdentityPermission&quot;> </xref> classe con l&quot;oggetto specificato <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  remarks: "Consente di creare un con restrizioni (`None`) o `Unrestricted` autorizzazione.      > [!NOTE] > Versioni in .NET Framework 1.0 e 1.1, le autorizzazioni di identità non possono avere un <xref:System.Security.Permissions.PermissionState>valore dello stato di autorizzazione.</xref:System.Security.Permissions.PermissionState> A partire da .NET Framework versione 2.0, le autorizzazioni di identità possono avere qualsiasi valore di stato di autorizzazione. Ciò significa che nelle versioni 2.0 e versioni successive, le autorizzazioni di identità hanno lo stesso comportamento delle autorizzazioni che implementano il <xref:System.Security.Permissions.IUnrestrictedPermission>interfaccia.</xref:System.Security.Permissions.IUnrestrictedPermission> Vale a dire, una richiesta per un&quot;identità sempre ha esito positivo, indipendentemente dall&quot;identità dell&quot;assembly, se l&quot;assembly è stata concessa l&quot;attendibilità totale.       Nelle versioni di .NET Framework 1.0 e 1.1, le richieste per le autorizzazioni di identità sono valide, anche quando l&quot;assembly chiamante sia completamente attendibile. Vale a dire, anche se l&quot;assembly chiamante dispone di attendibilità, una richiesta per un&quot;autorizzazione di identità ha esito negativo se l&quot;assembly non soddisfa i criteri richiesti. A partire da .NET Framework versione 2.0, le richieste di autorizzazioni di identità sono effettive se l&quot;assembly chiamante dispone di attendibilità totale. Ciò assicura la coerenza per tutte le autorizzazioni, eliminando il trattamento delle autorizzazioni di identità come un caso speciale."
  example:
  - "The following example shows how to use the PublisherIdentityPermission constructor.  \n  \n [!code-cs[System.Security.Permissions.PublisherIdentityPermission#7](~/add/codesnippet/csharp/1a39ce0c-6535-46dd-bd5f-_1.cs)]\n [!code-vb[System.Security.Permissions.PublisherIdentityPermission#7](~/add/codesnippet/visualbasic/1a39ce0c-6535-46dd-bd5f-_1.vb)]\n [!code-cpp[System.Security.Permissions.PublisherIdentityPermission#7](~/add/codesnippet/cpp/1a39ce0c-6535-46dd-bd5f-_1.cpp)]"
  syntax:
    content: public PublisherIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Uno del <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> valori."
  overload: System.Security.Permissions.PublisherIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> state </code> parametro non è un valore valido di <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.Certificate
  id: Certificate
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: Certificate
  nameWithType: PublisherIdentityPermission.Certificate
  fullName: System.Security.Permissions.PublisherIdentityPermission.Certificate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ottiene o imposta un certificato Authenticode x.&509;v3 che rappresenta l&quot;identità dell&quot;editore di software."
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Un certificato x.&509; che rappresenta l&quot;identità dell&quot;editore di software."
  overload: System.Security.Permissions.PublisherIdentityPermission.Certificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il certificato è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il certificato non è un certificato valido."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile impostare la proprietà perché l&quot;identità è ambigua."
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: PublisherIdentityPermission.Copy()
  fullName: System.Security.Permissions.PublisherIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea e restituisce una copia identica dell&quot;autorizzazione corrente."
  remarks: "Una copia di un&quot;autorizzazione rappresenta lo stesso accesso alle risorse dell&quot;autorizzazione originale."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Una copia dell&quot;autorizzazione corrente."
  overload: System.Security.Permissions.PublisherIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: PublisherIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.PublisherIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ricostruisce un&quot;autorizzazione con uno stato specificato da una codifica XML."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "La codifica XML da usare per ricostruire l&quot;autorizzazione."
  overload: System.Security.Permissions.PublisherIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> esd </code> parametro non è un elemento di autorizzazione valido.       - o - <code> esd </code> il numero di versione del parametro non è valido."
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: PublisherIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.PublisherIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea e restituisce un&quot;autorizzazione che rappresenta l&quot;intersezione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata."
  remarks: "L&quot;intersezione delle due autorizzazioni è un&quot;autorizzazione che descrive il set di operazioni che hanno in comune. Solo una richiesta che supera entrambe le autorizzazioni originali passerà l&quot;intersezione.       <xref:System.Security.Permissions.PublisherIdentityPermission>supporta solo operazioni sui set (<xref:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf%2A>, Intersect, e <xref:System.Security.Permissions.PublisherIdentityPermission.Union%2A>) quando l&quot;autorizzazione corrente è uguale all&quot;autorizzazione specificata.</xref:System.Security.Permissions.PublisherIdentityPermission.Union%2A> </xref:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf%2A></xref:System.Security.Permissions.PublisherIdentityPermission>"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da intersecare con l&quot;autorizzazione corrente. Deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Security.IPermission
      description: "Nuova autorizzazione che rappresenta l&quot;intersezione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata. La nuova autorizzazione è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se l&quot;intersezione è vuota."
  overload: System.Security.Permissions.PublisherIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> target </code> parametro non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e non è dello stesso tipo dell&quot;autorizzazione corrente."
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: PublisherIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Determina se l&quot;autorizzazione corrente è un subset dell&quot;autorizzazione specificata."
  remarks: "Se le due autorizzazioni sono uguali, l&quot;autorizzazione corrente è un subset dell&quot;autorizzazione specificata. Se questo metodo restituisce `true`, l&quot;autorizzazione corrente rappresenta lo stesso accesso alla risorsa protetta dell&quot;autorizzazione specificata.       <xref:System.Security.Permissions.PublisherIdentityPermission>supporta le operazioni di impostazione (IsSubsetOf, <xref:System.Security.Permissions.PublisherIdentityPermission.Intersect%2A>, e <xref:System.Security.Permissions.PublisherIdentityPermission.Union%2A>) solo quando l&quot;autorizzazione corrente è uguale all&quot;autorizzazione specificata.</xref:System.Security.Permissions.PublisherIdentityPermission.Union%2A> </xref:System.Security.Permissions.PublisherIdentityPermission.Intersect%2A></xref:System.Security.Permissions.PublisherIdentityPermission>"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da testare per la relazione del subset. Questa autorizzazione deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;autorizzazione corrente è un subset dell&quot;autorizzazione specificata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> target </code> parametro non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e non è dello stesso tipo dell&quot;autorizzazione corrente."
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: PublisherIdentityPermission.ToXml()
  fullName: System.Security.Permissions.PublisherIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea una codifica XML dell&quot;autorizzazione e del relativo stato corrente."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Codifica XML dell&quot;autorizzazione, che include le informazioni sullo stato."
  overload: System.Security.Permissions.PublisherIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.PublisherIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: PublisherIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.PublisherIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea un&quot;autorizzazione che rappresenta l&quot;unione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata."
  remarks: "Il risultato di una chiamata al metodo di unione è un&quot;autorizzazione che rappresenta tutte le operazioni indicate sia dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata. Qualsiasi richiesta che passa l&quot;autorizzazione passa l&quot;unione.       La <xref:System.Security.Permissions.PublisherIdentityPermission>classe supporta solo operazioni sui set (<xref:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf%2A>, <xref:System.Security.Permissions.PublisherIdentityPermission.Intersect%2A>, unione e) quando l&quot;autorizzazione corrente è uguale all&quot;autorizzazione specificata.</xref:System.Security.Permissions.PublisherIdentityPermission.Intersect%2A> </xref:System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf%2A> </xref:System.Security.Permissions.PublisherIdentityPermission>"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da combinare con l&quot;autorizzazione corrente. Deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Security.IPermission
      description: "Nuova autorizzazione che rappresenta l&quot;unione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata."
  overload: System.Security.Permissions.PublisherIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> target </code> parametro non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e non è dello stesso tipo dell&quot;autorizzazione corrente.       - oppure - le due autorizzazioni non sono uguali."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: PublisherIdentityPermission(X509Certificate)
  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission(X509Certificate)
  fullName: System.Security.Permissions.PublisherIdentityPermission.PublisherIdentityPermission(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: PublisherIdentityPermission(PermissionState)
  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.PublisherIdentityPermission.PublisherIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.PublisherIdentityPermission.Certificate
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Certificate
  nameWithType: PublisherIdentityPermission.Certificate
  fullName: System.Security.Permissions.PublisherIdentityPermission.Certificate
- uid: System.Security.Permissions.PublisherIdentityPermission.Copy
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: PublisherIdentityPermission.Copy()
  fullName: System.Security.Permissions.PublisherIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: PublisherIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.PublisherIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: PublisherIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.PublisherIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: PublisherIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.PublisherIdentityPermission.ToXml
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: PublisherIdentityPermission.ToXml()
  fullName: System.Security.Permissions.PublisherIdentityPermission.ToXml()
- uid: System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: PublisherIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.PublisherIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: PublisherIdentityPermission
  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission
- uid: System.Security.Permissions.PublisherIdentityPermission.Certificate*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Certificate
  nameWithType: PublisherIdentityPermission.Certificate
- uid: System.Security.Permissions.PublisherIdentityPermission.Copy*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: PublisherIdentityPermission.Copy
- uid: System.Security.Permissions.PublisherIdentityPermission.FromXml*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: PublisherIdentityPermission.FromXml
- uid: System.Security.Permissions.PublisherIdentityPermission.Intersect*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: PublisherIdentityPermission.Intersect
- uid: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: PublisherIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.PublisherIdentityPermission.ToXml*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: PublisherIdentityPermission.ToXml
- uid: System.Security.Permissions.PublisherIdentityPermission.Union*
  parent: System.Security.Permissions.PublisherIdentityPermission
  isExternal: false
  name: Union
  nameWithType: PublisherIdentityPermission.Union
