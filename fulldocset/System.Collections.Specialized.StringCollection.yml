### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.StringCollection
  id: StringCollection
  children:
  - System.Collections.Specialized.StringCollection.#ctor
  - System.Collections.Specialized.StringCollection.Add(System.String)
  - System.Collections.Specialized.StringCollection.AddRange(System.String[])
  - System.Collections.Specialized.StringCollection.Clear
  - System.Collections.Specialized.StringCollection.Contains(System.String)
  - System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)
  - System.Collections.Specialized.StringCollection.Count
  - System.Collections.Specialized.StringCollection.GetEnumerator
  - System.Collections.Specialized.StringCollection.IndexOf(System.String)
  - System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)
  - System.Collections.Specialized.StringCollection.IsReadOnly
  - System.Collections.Specialized.StringCollection.IsSynchronized
  - System.Collections.Specialized.StringCollection.Item(System.Int32)
  - System.Collections.Specialized.StringCollection.Remove(System.String)
  - System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)
  - System.Collections.Specialized.StringCollection.SyncRoot
  - System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize
  - System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)
  - System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
  type: Class
  summary: "Rappresenta una raccolta di stringhe."
  remarks: "StringCollection accetta `null` come un valore valido e consente elementi duplicati.       I confronti di stringhe tra maiuscole e minuscole.       Elementi nella raccolta è accessibile tramite un indice intero.  Gli indici in questa raccolta sono in base zero."
  example:
  - "The following code example demonstrates several of the properties and methods of StringCollection.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollection2#1](~/add/codesnippet/cpp/t-system.collections.spe_2_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollection2#1](~/add/codesnippet/csharp/t-system.collections.spe_2_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollection2#1](~/add/codesnippet/visualbasic/t-system.collections.spe_2_1.vb)]"
  syntax:
    content: 'public class StringCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: StringCollection()
  nameWithType: StringCollection.StringCollection()
  fullName: System.Collections.Specialized.StringCollection.StringCollection()
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> classe."
  remarks: "Questo costruttore è un&quot;operazione o (1)."
  syntax:
    content: public StringCollection ();
    parameters: []
  overload: System.Collections.Specialized.StringCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: StringCollection.Add(String)
  fullName: System.Collections.Specialized.StringCollection.Add(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Aggiunge alla fine di una stringa di <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.StringCollection>accetta `null` come un valore valido e consente elementi duplicati.</xref:System.Collections.Specialized.StringCollection>       Se <xref:System.Collections.Specialized.StringCollection.Count%2A>è minore della capacità, questo metodo è un&quot;operazione o (1).</xref:System.Collections.Specialized.StringCollection.Count%2A> Se la capacità deve essere incrementata per far posto al nuovo elemento, questo metodo diventa un&quot;operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/cpp/m-system.collections.spe_39_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/csharp/m-system.collections.spe_39_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.collections.spe_39_1.vb)]"
  syntax:
    content: public int Add (string value);
    parameters:
    - id: value
      type: System.String
      description: "Stringa da aggiungere alla fine del <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. Il valore può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Indice in base zero in corrispondenza del quale è inserito il nuovo elemento."
  overload: System.Collections.Specialized.StringCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.AddRange(System.String[])
  id: AddRange(System.String[])
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: AddRange(String[])
  nameWithType: StringCollection.AddRange(String[])
  fullName: System.Collections.Specialized.StringCollection.AddRange(String[])
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Copia gli elementi di una matrice di stringhe in fondo il <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.StringCollection>accetta `null` come un valore valido e consente elementi duplicati.</xref:System.Collections.Specialized.StringCollection>       Se il <xref:System.Collections.Specialized.StringCollection>può contenere i nuovi elementi senza aumentare la capacità, questo metodo è un&quot;operazione O (`n`) operazione, in cui `n` è il numero di elementi da aggiungere.</xref:System.Collections.Specialized.StringCollection> Se la capacità deve essere aumentato di conseguenza i nuovi elementi, questo metodo diventa un&quot;operazione O (`n` + `m`) operazione, in cui `n` è il numero di elementi da aggiungere e `m` è <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/cpp/m-system.collections.spe_4_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/csharp/m-system.collections.spe_4_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.collections.spe_4_1.vb)]"
  syntax:
    content: public void AddRange (string[] value);
    parameters:
    - id: value
      type: System.String[]
      description: "Matrice di stringhe da aggiungere alla fine di <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. La matrice stessa non può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ma può contenere elementi <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Clear
  id: Clear
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: StringCollection.Clear()
  fullName: System.Collections.Specialized.StringCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Rimuove tutte le stringhe dal <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.StringCollection.Count%2A>è impostato su zero e vengono rilasciati anche i riferimenti ad altri oggetti da elementi della raccolta.</xref:System.Collections.Specialized.StringCollection.Count%2A>       Questo metodo è un&quot;operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_2_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_2_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_2_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Collections.Specialized.StringCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: StringCollection.Contains(String)
  fullName: System.Collections.Specialized.StringCollection.Contains(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Determina se la stringa specificata è nel <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Il metodo Contains è possibile verificare l&quot;esistenza di una stringa prima di eseguire ulteriori operazioni.       Questo metodo determina l&quot;uguaglianza chiamando <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> I confronti di stringhe tra maiuscole e minuscole.       Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un&quot;operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>       A partire da .NET Framework 2.0, questo metodo utilizza degli oggetti della raccolta <xref:System.Object.Equals%2A>e <xref:System.IComparable.CompareTo%2A>metodi su `item` per determinare se esiste un elemento.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> Nelle versioni precedenti di .NET Framework, questa operazione è stata effettuata utilizzando il <xref:System.Object.Equals%2A>e <xref:System.IComparable.CompareTo%2A>metodi il `item` parametro per gli oggetti nella raccolta.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example searches the <xref:System.Collections.Specialized.StringCollection> for an element.  \n  \n [!code-cs[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/csharp/m-system.collections.spe_28_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/cpp/m-system.collections.spe_28_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/visualbasic/m-system.collections.spe_28_1.vb)]"
  syntax:
    content: public bool Contains (string value);
    parameters:
    - id: value
      type: System.String
      description: "Stringa da individuare nel <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. Il valore può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>value</code> is found in the <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Collections.Specialized.StringCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)
  id: CopyTo(System.String[],System.Int32)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: CopyTo(String[],Int32)
  nameWithType: StringCollection.CopyTo(String[],Int32)
  fullName: System.Collections.Specialized.StringCollection.CopyTo(String[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Copia l&quot;intero <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> valori in una matrice unidimensionale di stringhe, a partire dall&quot;indice specificato della matrice di destinazione."
  remarks: "La matrice specificata deve essere di un tipo compatibile.       Gli elementi vengono copiati il <xref:System.Array>nello stesso ordine in cui l&quot;enumeratore di <xref:System.Collections.Specialized.StringCollection>iterazione <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection> </xref:System.Array>       Questo metodo è un&quot;operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example copies a <xref:System.Collections.Specialized.StringCollection> to an array.  \n  \n [!code-cs[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/csharp/6398d0a9-11dc-4566-8dea-_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/cpp/6398d0a9-11dc-4566-8dea-_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/visualbasic/6398d0a9-11dc-4566-8dea-_1.vb)]"
  syntax:
    content: public void CopyTo (string[] array, int index);
    parameters:
    - id: array
      type: System.String[]
      description: "Matrice unidimensionale di stringhe che rappresenta la destinazione degli elementi copiati dalla <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. Il <xref:System.Array>deve avere un&quot;indicizzazione in base zero.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Indice in base zero `array` da cui avviare la copia."
  overload: System.Collections.Specialized.StringCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>è minore di zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>è multidimensionale.       - oppure - il numero di elementi nell&quot;origine <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> è maggiore dello spazio disponibile da <code>index</code> alla fine della destinazione <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il tipo di origine <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> non può essere eseguire automaticamente il cast al tipo della destinazione <code> array </code>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Count
  id: Count
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Count
  nameWithType: StringCollection.Count
  fullName: System.Collections.Specialized.StringCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Ottiene il numero di stringhe contenute nel <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Il recupero del valore di questa proprietà è un&quot;operazione o (1)."
  example:
  - "The following code example copies a <xref:System.Collections.Specialized.StringCollection> to an array.  \n  \n [!code-cs[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/csharp/p-system.collections.spe_15_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/cpp/p-system.collections.spe_15_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringCollectionCopyTo#1](~/add/codesnippet/visualbasic/p-system.collections.spe_15_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Il numero di stringhe contenute nel <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: StringCollection.GetEnumerator()
  fullName: System.Collections.Specialized.StringCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Restituisce un <xref href=&quot;System.Collections.Specialized.StringEnumerator&quot;> </xref> che scorre la <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "[Visual Basic, c#]       Il `foreach` istruzione del linguaggio c# (`for each` in Visual Basic) nasconde la complessità degli enumeratori.  Pertanto, l&quot;utilizzo `foreach` è consigliabile, anziché la modifica diretta dell&quot;enumeratore.       È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non possono essere utilizzati per modificare la raccolta sottostante.       Inizialmente l&quot;enumeratore è posizionato prima del primo elemento nella raccolta. <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>riporta l&quot;enumeratore in questa posizione.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A>  In questa posizione, <xref:System.Collections.Specialized.StringEnumerator.Current%2A>è definito.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> Pertanto, è necessario chiamare <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>per passare l&quot;enumeratore al primo elemento della raccolta prima di leggere il valore di <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       <xref:System.Collections.Specialized.StringEnumerator.Current%2A>Restituisce lo stesso oggetto finché non <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>o <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>viene chiamato.</xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A></xref:System.Collections.Specialized.StringEnumerator.Current%2A> <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>imposta <xref:System.Collections.Specialized.StringEnumerator.Current%2A>all&quot;elemento successivo.</xref:System.Collections.Specialized.StringEnumerator.Current%2A></xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>       Se <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>raggiunge la fine della raccolta, l&quot;enumeratore è posizionato dopo l&quot;ultimo elemento nella raccolta e <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>restituisce `false`.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Quando l&quot;enumeratore si trova in questa posizione, le chiamate successive a <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>restituire anche `false`.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Se l&quot;ultima chiamata a <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>restituito `false`, <xref:System.Collections.Specialized.StringEnumerator.Current%2A>è definito.</xref:System.Collections.Specialized.StringEnumerator.Current%2A> </xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> Per impostare <xref:System.Collections.Specialized.StringEnumerator.Current%2A>il primo elemento della raccolta, è possibile chiamare il metodo <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>seguito dal <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>.</xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> </xref:System.Collections.Specialized.StringEnumerator.Reset%2A> </xref:System.Collections.Specialized.StringEnumerator.Current%2A>       Un enumeratore rimane valido fino a quando la raccolta rimane invariata. Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l&quot;enumeratore viene invalidato e il relativo comportamento sarà indefinito.       L&quot;enumeratore non dispone di accesso esclusivo alla raccolta. Pertanto, l&quot;enumerazione di una raccolta non è quindi una procedura thread-safe.  Per garantire la protezione dei thread durante l&quot;enumerazione, è possibile bloccare la raccolta per l&quot;intera enumerazione.  Per consentire la raccolta a cui accedere da più thread per la lettura e scrittura, è necessario implementare la propria sincronizzazione.       Questo metodo è un&quot;operazione o (1)."
  syntax:
    content: public System.Collections.Specialized.StringEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Specialized.StringEnumerator
      description: "A <xref href=&quot;System.Collections.Specialized.StringEnumerator&quot;></xref> for the <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref>."
  overload: System.Collections.Specialized.StringCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: StringCollection.IndexOf(String)
  fullName: System.Collections.Specialized.StringCollection.IndexOf(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Cerca la stringa specificata e restituisce l&quot;indice in base zero della prima occorrenza all&quot;interno di <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Questo metodo determina l&quot;uguaglianza chiamando <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> I confronti di stringhe tra maiuscole e minuscole.       Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un&quot;operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>       A partire da .NET Framework 2.0, questo metodo utilizza degli oggetti della raccolta <xref:System.Object.Equals%2A>e <xref:System.IComparable.CompareTo%2A>metodi su `item` per determinare se esiste un elemento.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> Nelle versioni precedenti di .NET Framework, questa operazione è stata effettuata utilizzando il <xref:System.Object.Equals%2A>e <xref:System.IComparable.CompareTo%2A>metodi il `item` parametro per gli oggetti nella raccolta.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example searches the <xref:System.Collections.Specialized.StringCollection> for an element.  \n  \n [!code-cs[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/csharp/m-system.collections.spe_7_1.cs)]\n [!code-cpp[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/cpp/m-system.collections.spe_7_1.cpp)]\n [!code-vb[System.Collections.Specialized.StringCollectionContains#1](~/add/codesnippet/visualbasic/m-system.collections.spe_7_1.vb)]"
  syntax:
    content: public int IndexOf (string value);
    parameters:
    - id: value
      type: System.String
      description: "Stringa da individuare. Il valore può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "L&quot;indice in base zero della prima occorrenza di <code> value </code> nel <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>, se presente; in caso contrario, -1."
  overload: System.Collections.Specialized.StringCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)
  id: Insert(System.Int32,System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Insert(Int32,String)
  nameWithType: StringCollection.Insert(Int32,String)
  fullName: System.Collections.Specialized.StringCollection.Insert(Int32,String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inserisce una stringa nel <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> in corrispondenza dell&quot;indice specificato."
  remarks: "Sono consentite stringhe duplicate <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection>       Se `index` è uguale a <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` viene aggiunto alla fine di <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection.Count%2A>       In raccolte di elementi adiacenti, quali gli elenchi, gli elementi successivi al punto di inserimento vengono spostati verso il basso per consentire l&quot;inserimento del nuovo elemento. Se la raccolta è indicizzata, vengono aggiornati anche gli indici degli elementi spostati. Questo comportamento non viene applicato alle raccolte in cui gli elementi sono raggruppati concettualmente in bucket, come una tabella hash.       Questo metodo è un&quot;operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example adds new elements to the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/cpp/5308ad74-fbfb-4390-83de-_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/csharp/5308ad74-fbfb-4390-83de-_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionAdd#1](~/add/codesnippet/visualbasic/5308ad74-fbfb-4390-83de-_1.vb)]"
  syntax:
    content: public void Insert (int index, string value);
    parameters:
    - id: index
      type: System.Int32
      description: "L&quot;indice in base zero in corrispondenza del quale `value` viene inserito."
    - id: value
      type: System.String
      description: "Stringa da inserire. Il valore può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>è minore di zero.       - oppure - <code>index</code> maggiore <xref:System.Collections.Specialized.StringCollection.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: StringCollection.IsReadOnly
  fullName: System.Collections.Specialized.StringCollection.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> è di sola lettura."
  remarks: "<xref:System.Collections.Specialized.StringCollection>implementa la proprietà IsReadOnly perché è necessaria per il <xref:System.Collections.IList?displayProperty=fullName>interfaccia.</xref:System.Collections.IList?displayProperty=fullName></xref:System.Collections.Specialized.StringCollection>       Una raccolta di sola lettura non consente l&quot;aggiunta, rimozione o modifica di elementi dopo la sua creazione.       Una raccolta di sola lettura è semplicemente una raccolta con un wrapper che impedisce la modifica. Pertanto, se vengono apportate modifiche alla raccolta sottostante, la raccolta di sola lettura riflette le modifiche.       Oggetto <xref:System.Collections.Specialized.StringCollection>istanza sia sempre accessibile in scrittura.</xref:System.Collections.Specialized.StringCollection>       Il recupero del valore di questa proprietà è un&quot;operazione o (1)."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Questa proprietà restituisce sempre <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: StringCollection.IsSynchronized
  fullName: System.Collections.Specialized.StringCollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Ottiene un valore che indica se l&quot;accesso per il <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> è sincronizzato (thread-safe)."
  remarks: "<xref:System.Collections.Specialized.StringCollection>implementa la proprietà IsSynchronized perché è necessaria per il <xref:System.Collections.ICollection>interfaccia.</xref:System.Collections.ICollection></xref:System.Collections.Specialized.StringCollection>       L&quot;enumerazione di una raccolta non è quindi una procedura thread-safe. Anche se una raccolta è sincronizzata, altri thread possa comunque modificare la raccolta, che determina l&quot;enumeratore generare un&quot;eccezione. Per garantire la protezione dei thread durante l&quot;enumerazione, bloccare la raccolta per l&quot;intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.       Esempio di codice seguente viene illustrato come bloccare la raccolta utilizzando la <xref:System.Collections.Specialized.StringCollection.SyncRoot%2A>durante l&quot;intera enumerazione: [!code-cpp [System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/cpp/p-system.collections.spe_23_1.cpp)][!code-cs[System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/csharp/p-system.collections.spe_23_1.cs)][!code-vb[System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/visualbasic/p-system.collections.spe_23_1.vb) ] il recupero del valore di questa proprietà è un&quot;operazione o (1).    </xref:System.Collections.Specialized.StringCollection.SyncRoot%2A>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Questa proprietà restituisce sempre <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: StringCollection.Item(Int32)
  fullName: System.Collections.Specialized.StringCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Ottiene o imposta l&quot;elemento in corrispondenza dell&quot;indice specificato."
  remarks: "Questa proprietà consente di accedere a un elemento specifico nella raccolta utilizzando la sintassi seguente: `myCollection[index]`.       <xref:System.Collections.Specialized.StringCollection>accetta `null` come un valore valido e consente elementi duplicati.</xref:System.Collections.Specialized.StringCollection>       Nel linguaggio c# viene utilizzata la parola chiave per definire gli indicizzatori anziché implementare la proprietà dell&quot;elemento. Visual Basic implementa elemento come una proprietà predefinita, che fornisce la stessa funzionalità di indicizzazione.       Il recupero del valore di questa proprietà è un&quot;operazione o (1). l&quot;impostazione della proprietà è un&quot;operazione o (1)."
  syntax:
    content: public string this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Indice in base zero della voce da ottenere o impostare."
    return:
      type: System.String
      description: "L&quot;elemento in corrispondenza dell&quot;indice specificato."
  overload: System.Collections.Specialized.StringCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>è minore di zero.       - oppure - <code>index</code> è maggiore o uguale a <xref:System.Collections.Specialized.StringCollection.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: StringCollection.Remove(String)
  fullName: System.Collections.Specialized.StringCollection.Remove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Rimuove la prima occorrenza di una stringa specifica dal <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Sono consentite stringhe duplicate <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> Viene rimossa solo la prima occorrenza. Per rimuovere tutte le occorrenze della stringa specificata, utilizzare `RemoveAt(IndexOf(value))` ripetutamente durante <xref:System.Collections.Specialized.StringCollection.IndexOf%2A>non restituisce -1.</xref:System.Collections.Specialized.StringCollection.IndexOf%2A>       Se il <xref:System.Collections.Specialized.StringCollection>non contiene l&quot;oggetto specificato, il <xref:System.Collections.Specialized.StringCollection>rimane invariato.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection> Viene generata alcuna eccezione.       In raccolte di elementi adiacenti, quali gli elenchi, gli elementi che seguono l&quot;elemento rimosso Sposta su per occupare la posizione rimasta vuota. Se la raccolta è indicizzata, vengono aggiornati anche gli indici degli elementi spostati. Questo comportamento non viene applicato alle raccolte in cui gli elementi sono raggruppati concettualmente in bucket, come una tabella hash.       Questo metodo determina l&quot;uguaglianza chiamando <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> I confronti di stringhe tra maiuscole e minuscole.       Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un&quot;operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_20_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_20_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_20_1.vb)]"
  syntax:
    content: public void Remove (string value);
    parameters:
    - id: value
      type: System.String
      description: "La stringa per rimuovere il <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>. Il valore può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: StringCollection.RemoveAt(Int32)
  fullName: System.Collections.Specialized.StringCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Rimuove la stringa in corrispondenza dell&quot;indice specificato del <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "In raccolte di elementi adiacenti, quali gli elenchi, gli elementi che seguono l&quot;elemento rimosso Sposta su per occupare la posizione rimasta vuota. Se la raccolta è indicizzata, vengono aggiornati anche gli indici degli elementi spostati. Questo comportamento non viene applicato alle raccolte in cui gli elementi sono raggruppati concettualmente in bucket, come una tabella hash.       Questo metodo è un&quot;operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  example:
  - "The following code example removes elements from the <xref:System.Collections.Specialized.StringCollection>.  \n  \n [!code-cpp[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_16_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_16_1.cs)]\n [!code-vb[System.Collections.Specialized.StringCollectionRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_16_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Indice in base zero della stringa da rimuovere."
  overload: System.Collections.Specialized.StringCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>è minore di zero.       - oppure - <code>index</code> è maggiore o uguale a <xref:System.Collections.Specialized.StringCollection.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.SyncRoot
  id: SyncRoot
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: StringCollection.SyncRoot
  fullName: System.Collections.Specialized.StringCollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Ottiene un oggetto che può essere utilizzato per sincronizzare l&quot;accesso al <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Classi derivate possono fornire una propria versione sincronizzata del <xref:System.Collections.Specialized.StringCollection>utilizzando la proprietà SyncRoot.</xref:System.Collections.Specialized.StringCollection> Il codice di sincronizzazione deve essere eseguite nella radice di sincronizzazione del <xref:System.Collections.Specialized.StringCollection>, non direttamente sulla <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection> In questo modo si garantisce il corretto funzionamento delle raccolte derivate da altri oggetti. In particolare, viene mantenuta la sincronizzazione con altri thread che potrebbero modificare contemporaneamente il <xref:System.Collections.Specialized.StringCollection>oggetto.</xref:System.Collections.Specialized.StringCollection>       L&quot;enumerazione di una raccolta non è quindi una procedura thread-safe. Anche se una raccolta è sincronizzata, altri thread possa comunque modificare la raccolta, che determina l&quot;enumeratore generare un&quot;eccezione. Per garantire la protezione dei thread durante l&quot;enumerazione, bloccare la raccolta per l&quot;intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.       Esempio di codice seguente viene illustrato come bloccare la raccolta utilizzando SyncRoot durante l&quot;intera enumerazione: [!code-cpp [System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/cpp/p-system.collections.spe_3_1.cpp)][!code-cs[System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/csharp/p-system.collections.spe_3_1.cs)][!code-vb[System.Collections.Specialized.StringCollection2#2](~/add/codesnippet/visualbasic/p-system.collections.spe_3_1.vb) ] il recupero del valore di questa proprietà è un&quot;operazione o (1).    "
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Oggetto che può essere utilizzato per sincronizzare l&quot;accesso a di <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: StringCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Copia l&quot;intero <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> in una matrice unidimensionale compatibile <xref:System.Array>, a partire dall&quot;indice specificato della matrice di destinazione.</xref:System.Array>"
  remarks: "La matrice specificata deve essere di un tipo compatibile.       Questo metodo utilizza <xref:System.Array.Copy%2A?displayProperty=fullName>per copiare gli elementi.</xref:System.Array.Copy%2A?displayProperty=fullName>       Questo metodo è un&quot;operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Oggetto unidimensionale <xref:System.Array>che rappresenta la destinazione degli elementi copiati da <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Array> Il <xref:System.Array>deve avere un&quot;indicizzazione in base zero.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "Indice in base zero `array` da cui avviare la copia."
  overload: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>è minore di zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>è multidimensionale.       - oppure - il numero di elementi nell&quot;origine <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> è maggiore dello spazio disponibile da <code>index</code> alla fine della destinazione <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il tipo di origine <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> non può essere eseguire automaticamente il cast al tipo della destinazione <code> array </code>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: StringCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Restituisce un <xref:System.Collections.IEnumerator>che scorre la <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "[Visual Basic, c#]       Il `foreach` istruzione del linguaggio c# (`for each` in Visual Basic) nasconde la complessità degli enumeratori.  Pertanto, l&quot;utilizzo `foreach` è consigliabile, anziché la modifica diretta dell&quot;enumeratore.       È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non possono essere utilizzati per modificare la raccolta sottostante.       Inizialmente l&quot;enumeratore è posizionato prima del primo elemento nella raccolta. <xref:System.Collections.IEnumerator.Reset%2A>riporta l&quot;enumeratore in questa posizione.</xref:System.Collections.IEnumerator.Reset%2A> In questa posizione, la chiamata <xref:System.Collections.IEnumerator.Current%2A>genera un&quot;eccezione.</xref:System.Collections.IEnumerator.Current%2A> Pertanto, è necessario chiamare <xref:System.Collections.IEnumerator.MoveNext%2A>per passare l&quot;enumeratore al primo elemento della raccolta prima di leggere il valore di <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>Restituisce lo stesso oggetto finché non <xref:System.Collections.IEnumerator.MoveNext%2A>o <xref:System.Collections.IEnumerator.Reset%2A>viene chiamato.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>imposta <xref:System.Collections.IEnumerator.Current%2A>all&quot;elemento successivo.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Se <xref:System.Collections.IEnumerator.MoveNext%2A>raggiunge la fine della raccolta, l&quot;enumeratore è posizionato dopo l&quot;ultimo elemento nella raccolta e <xref:System.Collections.IEnumerator.MoveNext%2A>restituisce `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Quando l&quot;enumeratore si trova in questa posizione, le chiamate successive a <xref:System.Collections.IEnumerator.MoveNext%2A>restituire anche `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Se l&quot;ultima chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A>restituito `false`, la chiamata <xref:System.Collections.IEnumerator.Current%2A>viene generata un&quot;eccezione.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Per impostare <xref:System.Collections.IEnumerator.Current%2A>il primo elemento della raccolta, è possibile chiamare il metodo <xref:System.Collections.IEnumerator.Reset%2A>seguito dal <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       Un enumeratore rimane valido fino a quando la raccolta rimane invariata. Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l&quot;enumeratore viene invalidato e la successiva chiamata a <xref:System.Collections.IEnumerator.MoveNext%2A>o <xref:System.Collections.IEnumerator.Reset%2A>Genera un <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Se la raccolta viene modificata tra <xref:System.Collections.IEnumerator.MoveNext%2A>e <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>restituisce l&quot;elemento su cui è stata impostata, anche se l&quot;enumeratore risulta già invalidato.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       L&quot;enumeratore non dispone di accesso esclusivo alla raccolta. Pertanto, l&quot;enumerazione di una raccolta non è quindi una procedura thread-safe. Anche se una raccolta è sincronizzata, altri thread possa comunque modificare la raccolta, che determina l&quot;enumeratore generare un&quot;eccezione. Per garantire la protezione dei thread durante l&quot;enumerazione, bloccare la raccolta per l&quot;intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.       Questo metodo è un&quot;operazione o (1)."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: StringCollection.System.Collections.IList.Add(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Aggiunge un oggetto alla fine di <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.StringCollection>accetta `null` come un valore valido e consente elementi duplicati.</xref:System.Collections.Specialized.StringCollection>       Se <xref:System.Collections.Specialized.StringCollection.Count%2A>è già pari alla capacità, la capacità del <xref:System.Collections.Specialized.StringCollection>viene aumentata automaticamente la riallocazione della matrice interna e gli elementi esistenti vengono copiati nella nuova matrice prima che venga aggiunto il nuovo elemento.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection.Count%2A>       Se <xref:System.Collections.Specialized.StringCollection.Count%2A>è minore della capacità, questo metodo è un&quot;operazione o (1).</xref:System.Collections.Specialized.StringCollection.Count%2A> Se la capacità deve essere incrementata per far posto al nuovo elemento, questo metodo diventa un&quot;operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il <xref:System.Object>da aggiungere alla fine di <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object> Il valore può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Il <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> indice in corrispondenza del quale il <code> value </code> è stato aggiunto."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> è di sola lettura.       - o - <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> ha dimensioni fisse."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: StringCollection.System.Collections.IList.Contains(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Determina se un elemento è incluso il <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Questo metodo determina l&quot;uguaglianza chiamando <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un&quot;operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>       A partire da .NET Framework 2.0, questo metodo utilizza degli oggetti della raccolta <xref:System.Object.Equals%2A>e <xref:System.IComparable.CompareTo%2A>metodi su `item` per determinare se esiste un elemento.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> Nelle versioni precedenti di .NET Framework, questa operazione è stata effettuata utilizzando il <xref:System.Object.Equals%2A>e <xref:System.IComparable.CompareTo%2A>metodi il `item` parametro per gli oggetti nella raccolta.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il <xref:System.Object>per individuare il <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object> Il valore può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>value</code> is found in the <xref href=&quot;System.Collections.Specialized.StringCollection&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: StringCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Cerca l&quot;oggetto specificato <xref:System.Object>e restituisce l&quot;indice in base zero della prima occorrenza all&quot;interno dell&quot;intero <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object>"
  remarks: "Il <xref:System.Collections.Specialized.StringCollection>Avanti al primo elemento fino all&quot;ultimo elemento, viene eseguita la ricerca.</xref:System.Collections.Specialized.StringCollection>       Questo metodo determina l&quot;uguaglianza chiamando <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un&quot;operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>       A partire da .NET Framework 2.0, questo metodo utilizza degli oggetti della raccolta <xref:System.Object.Equals%2A>e <xref:System.IComparable.CompareTo%2A>metodi su `item` per determinare se esiste un elemento.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> Nelle versioni precedenti di .NET Framework, questa operazione è stata effettuata utilizzando il <xref:System.Object.Equals%2A>e <xref:System.IComparable.CompareTo%2A>metodi il `item` parametro per gli oggetti nella raccolta.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il <xref:System.Object>per individuare il <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object> Il valore può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "L&quot;indice in base zero della prima occorrenza di <code> value </code> all&quot;interno dell&quot;intero <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>, se presente; in caso contrario, -1."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: StringCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inserisce un elemento nel <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> in corrispondenza dell&quot;indice specificato."
  remarks: "Se <xref:System.Collections.Specialized.StringCollection.Count%2A>è già pari alla capacità, la capacità del <xref:System.Collections.Specialized.StringCollection>viene aumentata automaticamente la riallocazione della matrice interna e gli elementi esistenti vengono copiati nella nuova matrice prima che venga aggiunto il nuovo elemento.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection.Count%2A>       Se `index` è uguale a <xref:System.Collections.Specialized.StringCollection.Count%2A>, `value` viene aggiunto alla fine di <xref:System.Collections.Specialized.StringCollection>.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection.Count%2A>       In raccolte di elementi adiacenti, quali gli elenchi, gli elementi successivi al punto di inserimento vengono spostati verso il basso per consentire l&quot;inserimento del nuovo elemento. Se la raccolta è indicizzata, vengono aggiornati anche gli indici degli elementi spostati. Questo comportamento non viene applicato alle raccolte in cui gli elementi sono raggruppati concettualmente in bucket, come una tabella hash.       Questo metodo è un&quot;operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "L&quot;indice in base zero in corrispondenza del quale `value` deve essere inserito."
    - id: value
      type: System.Object
      description: "Il <xref:System.Object>da inserire.</xref:System.Object> Il valore può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>è minore di zero.       - oppure - <code>index</code> è maggiore di <xref:System.Collections.Specialized.StringCollection.Count*>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> è di sola lettura.       - o - <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> ha dimensioni fisse."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: StringCollection.System.Collections.IList.IsFixedSize
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> oggetto ha dimensioni fisse."
  remarks: "Una raccolta con dimensioni fisse non consente l&quot;aggiunta o la rimozione di elementi dopo la raccolta viene creata, ma consente la modifica degli elementi esistenti.       Una raccolta con una dimensione fissa è semplicemente una raccolta con un wrapper che impedisce l&quot;aggiunta e rimozione di elementi. Pertanto, se vengono apportate modifiche alla raccolta sottostante, incluse l&quot;aggiunta o la rimozione di elementi, la raccolta a dimensione fissa riflette le modifiche.       Il recupero del valore di questa proprietà è un&quot;operazione o (1)."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> oggetto è fisse dimensioni; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: StringCollection.System.Collections.IList.IsReadOnly
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> oggetto è di sola lettura."
  remarks: "Una raccolta di sola lettura non consente l&quot;aggiunta, rimozione o modifica di elementi dopo la sua creazione.       Una raccolta di sola lettura è semplicemente una raccolta con un wrapper che impedisce la modifica. Pertanto, se vengono apportate modifiche alla raccolta sottostante, la raccolta di sola lettura riflette le modifiche.       Il recupero del valore di questa proprietà è un&quot;operazione o (1)."
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> oggetto è di sola lettura; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: StringCollection.System.Collections.IList.Item(Int32)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Ottiene o imposta l&quot;elemento in corrispondenza dell&quot;indice specificato."
  remarks: "Questo metodo consente di accedere a un elemento specifico nella raccolta utilizzando la sintassi seguente: `myCollection[index]`.       Nel linguaggio c# viene utilizzata la [questo](~/add/includes/ajax-current-ext-md.md) (parola chiave) per definire gli indicizzatori anziché implementare la proprietà IList.Item. Visual Basic implementa IList.Item come una proprietà predefinita, che fornisce la stessa funzionalità di indicizzazione.       <xref:System.Collections.Specialized.StringCollection>accetta `null` come un valore valido e consente elementi duplicati.</xref:System.Collections.Specialized.StringCollection>       Il recupero del valore di questa proprietà è un&quot;operazione o (1). l&quot;impostazione della proprietà è un&quot;operazione o (1)."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Indice in base zero dell&quot;elemento da ottenere o impostare."
    return:
      type: System.Object
      description: "L&quot;elemento in corrispondenza dell&quot;indice specificato."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>è minore di zero.       - oppure - <code>index</code> è maggiore o uguale a <xref:System.Collections.Specialized.StringCollection.Count*>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Collections.Specialized.StringCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: StringCollection.System.Collections.IList.Remove(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Rimuove la prima occorrenza di un oggetto specifico dal <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>."
  remarks: "Se il <xref:System.Collections.Specialized.StringCollection>non contiene l&quot;oggetto specificato, il <xref:System.Collections.Specialized.StringCollection>rimane invariato.</xref:System.Collections.Specialized.StringCollection> </xref:System.Collections.Specialized.StringCollection> Viene generata alcuna eccezione.       In raccolte di elementi adiacenti, quali gli elenchi, gli elementi che seguono l&quot;elemento rimosso Sposta su per occupare la posizione rimasta vuota. Se la raccolta è indicizzata, vengono aggiornati anche gli indici degli elementi spostati. Questo comportamento non viene applicato alle raccolte in cui gli elementi sono raggruppati concettualmente in bucket, come una tabella hash.       Questo metodo determina l&quot;uguaglianza chiamando <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName>       Questo metodo esegue una ricerca lineare. Pertanto, questo metodo è un&quot;operazione O (`n`) operazione, in cui `n` è <xref:System.Collections.Specialized.StringCollection.Count%2A>.</xref:System.Collections.Specialized.StringCollection.Count%2A>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il <xref:System.Object>per rimuovere il <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>.</xref:System.Object> Il valore può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> è di sola lettura.       - o - <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> ha dimensioni fisse."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Collections.Specialized.StringCollection.#ctor
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: StringCollection()
  nameWithType: StringCollection.StringCollection()
  fullName: System.Collections.Specialized.StringCollection.StringCollection()
- uid: System.Collections.Specialized.StringCollection.Add(System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Add(String)
  nameWithType: StringCollection.Add(String)
  fullName: System.Collections.Specialized.StringCollection.Add(String)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.StringCollection.AddRange(System.String[])
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: AddRange(String[])
  nameWithType: StringCollection.AddRange(String[])
  fullName: System.Collections.Specialized.StringCollection.AddRange(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Specialized.StringCollection.Clear
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Clear()
  nameWithType: StringCollection.Clear()
  fullName: System.Collections.Specialized.StringCollection.Clear()
- uid: System.Collections.Specialized.StringCollection.Contains(System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Contains(String)
  nameWithType: StringCollection.Contains(String)
  fullName: System.Collections.Specialized.StringCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: CopyTo(String[],Int32)
  nameWithType: StringCollection.CopyTo(String[],Int32)
  fullName: System.Collections.Specialized.StringCollection.CopyTo(String[],Int32)
- uid: System.Collections.Specialized.StringCollection.Count
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Count
  nameWithType: StringCollection.Count
  fullName: System.Collections.Specialized.StringCollection.Count
- uid: System.Collections.Specialized.StringCollection.GetEnumerator
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: StringCollection.GetEnumerator()
  fullName: System.Collections.Specialized.StringCollection.GetEnumerator()
- uid: System.Collections.Specialized.StringEnumerator
  parent: System.Collections.Specialized
  isExternal: false
  name: StringEnumerator
  nameWithType: StringEnumerator
  fullName: System.Collections.Specialized.StringEnumerator
- uid: System.Collections.Specialized.StringCollection.IndexOf(System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: StringCollection.IndexOf(String)
  fullName: System.Collections.Specialized.StringCollection.IndexOf(String)
- uid: System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Insert(Int32,String)
  nameWithType: StringCollection.Insert(Int32,String)
  fullName: System.Collections.Specialized.StringCollection.Insert(Int32,String)
- uid: System.Collections.Specialized.StringCollection.IsReadOnly
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: StringCollection.IsReadOnly
  fullName: System.Collections.Specialized.StringCollection.IsReadOnly
- uid: System.Collections.Specialized.StringCollection.IsSynchronized
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: StringCollection.IsSynchronized
  fullName: System.Collections.Specialized.StringCollection.IsSynchronized
- uid: System.Collections.Specialized.StringCollection.Item(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: StringCollection.Item(Int32)
  fullName: System.Collections.Specialized.StringCollection.Item(Int32)
- uid: System.Collections.Specialized.StringCollection.Remove(System.String)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Remove(String)
  nameWithType: StringCollection.Remove(String)
  fullName: System.Collections.Specialized.StringCollection.Remove(String)
- uid: System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: StringCollection.RemoveAt(Int32)
  fullName: System.Collections.Specialized.StringCollection.RemoveAt(Int32)
- uid: System.Collections.Specialized.StringCollection.SyncRoot
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: SyncRoot
  nameWithType: StringCollection.SyncRoot
  fullName: System.Collections.Specialized.StringCollection.SyncRoot
- uid: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: StringCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: StringCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: StringCollection.System.Collections.IList.Add(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Add(Object)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: StringCollection.System.Collections.IList.Contains(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Contains(Object)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: StringCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: StringCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: StringCollection.System.Collections.IList.IsFixedSize
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IsFixedSize
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: StringCollection.System.Collections.IList.IsReadOnly
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.IsReadOnly
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: StringCollection.System.Collections.IList.Item(Int32)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Item(Int32)
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: StringCollection.System.Collections.IList.Remove(Object)
  fullName: System.Collections.Specialized.StringCollection.System.Collections.IList.Remove(Object)
- uid: System.Collections.Specialized.StringCollection.#ctor*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection.StringCollection
- uid: System.Collections.Specialized.StringCollection.Add*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Add
  nameWithType: StringCollection.Add
- uid: System.Collections.Specialized.StringCollection.AddRange*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: AddRange
  nameWithType: StringCollection.AddRange
- uid: System.Collections.Specialized.StringCollection.Clear*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Clear
  nameWithType: StringCollection.Clear
- uid: System.Collections.Specialized.StringCollection.Contains*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Contains
  nameWithType: StringCollection.Contains
- uid: System.Collections.Specialized.StringCollection.CopyTo*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: CopyTo
  nameWithType: StringCollection.CopyTo
- uid: System.Collections.Specialized.StringCollection.Count*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Count
  nameWithType: StringCollection.Count
- uid: System.Collections.Specialized.StringCollection.GetEnumerator*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: StringCollection.GetEnumerator
- uid: System.Collections.Specialized.StringCollection.IndexOf*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IndexOf
  nameWithType: StringCollection.IndexOf
- uid: System.Collections.Specialized.StringCollection.Insert*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Insert
  nameWithType: StringCollection.Insert
- uid: System.Collections.Specialized.StringCollection.IsReadOnly*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: StringCollection.IsReadOnly
- uid: System.Collections.Specialized.StringCollection.IsSynchronized*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: StringCollection.IsSynchronized
- uid: System.Collections.Specialized.StringCollection.Item*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Item
  nameWithType: StringCollection.Item
- uid: System.Collections.Specialized.StringCollection.Remove*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: Remove
  nameWithType: StringCollection.Remove
- uid: System.Collections.Specialized.StringCollection.RemoveAt*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: RemoveAt
  nameWithType: StringCollection.RemoveAt
- uid: System.Collections.Specialized.StringCollection.SyncRoot*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: SyncRoot
  nameWithType: StringCollection.SyncRoot
- uid: System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: StringCollection.System.Collections.ICollection.CopyTo
- uid: System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: StringCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Add*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: StringCollection.System.Collections.IList.Add
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Contains*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: StringCollection.System.Collections.IList.Contains
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: StringCollection.System.Collections.IList.IndexOf
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Insert*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: StringCollection.System.Collections.IList.Insert
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: StringCollection.System.Collections.IList.IsFixedSize
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: StringCollection.System.Collections.IList.IsReadOnly
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Item*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: StringCollection.System.Collections.IList.Item
- uid: System.Collections.Specialized.StringCollection.System#Collections#IList#Remove*
  parent: System.Collections.Specialized.StringCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: StringCollection.System.Collections.IList.Remove
