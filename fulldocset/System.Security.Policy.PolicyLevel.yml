### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.PolicyLevel
  id: PolicyLevel
  children:
  - System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)
  - System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  - System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)
  - System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)
  - System.Security.Policy.PolicyLevel.CreateAppDomainLevel
  - System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)
  - System.Security.Policy.PolicyLevel.FullTrustAssemblies
  - System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)
  - System.Security.Policy.PolicyLevel.Label
  - System.Security.Policy.PolicyLevel.NamedPermissionSets
  - System.Security.Policy.PolicyLevel.Recover
  - System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)
  - System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  - System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)
  - System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)
  - System.Security.Policy.PolicyLevel.Reset
  - System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)
  - System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  - System.Security.Policy.PolicyLevel.RootCodeGroup
  - System.Security.Policy.PolicyLevel.StoreLocation
  - System.Security.Policy.PolicyLevel.ToXml
  - System.Security.Policy.PolicyLevel.Type
  langs:
  - csharp
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
  type: Class
  summary: "Rappresenta i livelli di criteri di protezione di common language runtime. Questa classe non può essere ereditata."
  remarks: "> [!IMPORTANT]> Inizia con il [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], common language runtime (CLR) è non fornisce criteri di sicurezza per i computer. È consigliabile utilizzare [Windows Software di criteri di restrizione](http://go.microsoft.com/fwlink/?LinkId=178101) o [AppLocker](http://go.microsoft.com/fwlink/?LinkId=178102) come sostituzione per i criteri di sicurezza CLR. Le informazioni contenute in questo argomento si applicano a .NET Framework versione 3.5 e versioni precedenti; non è valido per il [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] e versioni successive. Per ulteriori informazioni su questa e altre modifiche, vedere [modifiche della sicurezza](~/add/includes/ajax-current-ext-md.md).       Il massimo livello di criteri di sicurezza è a livello aziendale. Successivi livelli inferiori della gerarchia rappresentano ulteriori restrizioni dei criteri, ma mai possano concedere autorizzazioni a quella consentita dalla livelli più elevati. Vengono implementati i livelli di criteri seguenti: 1.  Dell&quot;organizzazione: Criteri di sicurezza per tutto il codice gestito in un&quot;organizzazione.      2.  Computer: Criteri di sicurezza per tutto il codice gestito eseguito nel computer.      3.  Utente: Criteri di sicurezza per tutto il codice gestito eseguito dall&quot;utente.      4.  Dominio applicazione: criteri di sicurezza per tutto il codice gestito in un&quot;applicazione.       Un livello di criteri è costituito da un set di gruppi di codice organizzato in una singola struttura gerarchica (vedere <xref:System.Security.Policy.CodeGroup>), un set di autorizzazioni denominati che fanno riferimento i gruppi di codice per specificare le autorizzazioni da concedere al codice che appartiene al gruppo di codice e un elenco di assembly completamente attendibili.</xref:System.Security.Policy.CodeGroup>       Utilizzare <xref:System.Security.SecurityManager.PolicyHierarchy%2A?displayProperty=fullName>per enumerare i livelli di criteri.</xref:System.Security.SecurityManager.PolicyHierarchy%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class PolicyLevel
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)
  id: AddFullTrustAssembly(System.Security.Policy.StrongName)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: AddFullTrustAssembly(StrongName)
  nameWithType: PolicyLevel.AddFullTrustAssembly(StrongName)
  fullName: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(StrongName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Aggiunge un <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> corrispondente al valore <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref> all&quot;elenco di <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> oggetti utilizzati per determinare se un assembly è un membro del gruppo di assembly che non devono essere valutati."
  remarks: "Il metodo di AddFullTrustAssembly non è supportato nella versione 2.0 o versione successiva di .NET Framework, perché l&quot;elenco di assembly con attendibilità totale non viene utilizzata in tali versioni."
  syntax:
    content: public void AddFullTrustAssembly (System.Security.Policy.StrongName sn);
    parameters:
    - id: sn
      type: System.Security.Policy.StrongName
      description: "Il <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref> utilizzato per creare il <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> da aggiungere all&quot;elenco di <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> oggetti utilizzati per determinare se un assembly è un membro del gruppo di assembly che non devono essere valutati."
  overload: System.Security.Policy.PolicyLevel.AddFullTrustAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>sn</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref> specificato per il <code> sn </code> parametro dispone già di attendibilità."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  id: AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: AddFullTrustAssembly(StrongNameMembershipCondition)
  nameWithType: PolicyLevel.AddFullTrustAssembly(StrongNameMembershipCondition)
  fullName: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(StrongNameMembershipCondition)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> all&quot;elenco di <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> oggetti utilizzati per determinare se un assembly è un membro del gruppo di assembly che non devono essere valutati."
  remarks: "Il metodo di AddFullTrustAssembly non è supportato nella versione 2.0 o versione successiva di .NET Framework, perché l&quot;elenco di assembly con attendibilità totale non viene utilizzata in tali versioni."
  syntax:
    content: public void AddFullTrustAssembly (System.Security.Policy.StrongNameMembershipCondition snMC);
    parameters:
    - id: snMC
      type: System.Security.Policy.StrongNameMembershipCondition
      description: "Il <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> da aggiungere all&quot;elenco di <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> oggetti utilizzati per determinare se un assembly è un membro del gruppo di assembly che non devono essere valutati."
  overload: System.Security.Policy.PolicyLevel.AddFullTrustAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>snMC</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> specificato per il <code> snMC </code> parametro dispone già di attendibilità."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)
  id: AddNamedPermissionSet(System.Security.NamedPermissionSet)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: AddNamedPermissionSet(NamedPermissionSet)
  nameWithType: PolicyLevel.AddNamedPermissionSet(NamedPermissionSet)
  fullName: System.Security.Policy.PolicyLevel.AddNamedPermissionSet(NamedPermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Aggiunge un <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> a livello di criteri corrente."
  remarks: "Set di autorizzazioni denominati sono limitati dal livello di criteri."
  syntax:
    content: public void AddNamedPermissionSet (System.Security.NamedPermissionSet permSet);
    parameters:
    - id: permSet
      type: System.Security.NamedPermissionSet
      description: "Il <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> per aggiungere a livello di criteri corrente."
  overload: System.Security.Policy.PolicyLevel.AddNamedPermissionSet*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>permSet</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> permSet </code> parametro ha lo stesso nome di un oggetto esistente <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> nel <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)
  id: ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: ChangeNamedPermissionSet(String,PermissionSet)
  nameWithType: PolicyLevel.ChangeNamedPermissionSet(String,PermissionSet)
  fullName: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(String,PermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Sostituisce un <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> nel livello di criteri corrente con l&quot;oggetto specificato <xref href=&quot;System.Security.PermissionSet&quot;> </xref>."
  syntax:
    content: public System.Security.NamedPermissionSet ChangeNamedPermissionSet (string name, System.Security.PermissionSet pSet);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> da sostituire."
    - id: pSet
      type: System.Security.PermissionSet
      description: "Il <xref href=&quot;System.Security.PermissionSet&quot;> </xref> che sostituisce il <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> specificato per il `name` parametro."
    return:
      type: System.Security.NamedPermissionSet
      description: "Una copia del <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> che è stato sostituito."
  overload: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <code>pSet</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> name </code> parametro è uguale al nome di un set di autorizzazioni riservate.       - o - <xref href=&quot;System.Security.PermissionSet&quot;> </xref> specificato per il <code> pSet </code> Impossibile trovare il parametro."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.CreateAppDomainLevel
  id: CreateAppDomainLevel
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: CreateAppDomainLevel()
  nameWithType: PolicyLevel.CreateAppDomainLevel()
  fullName: System.Security.Policy.PolicyLevel.CreateAppDomainLevel()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Crea un nuovo livello di criteri per l&quot;utilizzo a livello di criteri di dominio di applicazione."
  remarks: "Questo metodo crea un nuovo <xref:System.Security.Policy.PolicyLevel>con il <xref:System.Security.Policy.PolicyLevel.Label%2A>&quot;AppDomain&quot;.</xref:System.Security.Policy.PolicyLevel.Label%2A> </xref:System.Security.Policy.PolicyLevel> Il nuovo <xref:System.Security.Policy.PolicyLevel>inizialmente contiene lo stesso <xref:System.Security.NamedPermissionSet>gli oggetti come i criteri di computer predefiniti e verrà dispongono di un gruppo di codice radice che concede `FullTrust` a tutto il codice.</xref:System.Security.NamedPermissionSet> </xref:System.Security.Policy.PolicyLevel>"
  syntax:
    content: public static System.Security.Policy.PolicyLevel CreateAppDomainLevel ();
    parameters: []
    return:
      type: System.Security.Policy.PolicyLevel
      description: "L&quot;oggetto appena creato <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref>."
  overload: System.Security.Policy.PolicyLevel.CreateAppDomainLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: PolicyLevel.FromXml(SecurityElement)
  fullName: System.Security.Policy.PolicyLevel.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Ricostruisce un oggetto di sicurezza con uno stato specifico da una codifica XML."
  syntax:
    content: public void FromXml (System.Security.SecurityElement e);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "La codifica XML da usare per ricostruire l&quot;oggetto di sicurezza."
  overload: System.Security.Policy.PolicyLevel.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>e</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <xref href=&quot;System.Security.SecurityElement&quot;> </xref> specificato per il <code> e </code> parametro non è valido."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.FullTrustAssemblies
  id: FullTrustAssemblies
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: FullTrustAssemblies
  nameWithType: PolicyLevel.FullTrustAssemblies
  fullName: System.Security.Policy.PolicyLevel.FullTrustAssemblies
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Ottiene un elenco di <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> oggetti utilizzati per determinare se un assembly è un membro del gruppo di assembly utilizzato per valutare i criteri di sicurezza."
  remarks: "FullTrustAssemblies concessa l&quot;attendibilità completa durante la valutazione dei criteri di sicurezza degli assembly non presenti nell&quot;elenco, ma non viene automaticamente concessa l&quot;attendibilità totale quando valutata direttamente dal sistema di criteri di sicurezza.       La proprietà di FullTrustAssemblies non è supportata nella versione 2.0 o versione successiva di .NET Framework, perché l&quot;elenco di assembly con attendibilità totale non viene utilizzata in tali versioni."
  syntax:
    content: public System.Collections.IList FullTrustAssemblies { get; }
    return:
      type: System.Collections.IList
      description: "Un elenco di <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> oggetti utilizzati per determinare se un assembly è un membro del gruppo di assembly utilizzato per valutare i criteri di sicurezza. Questi assembly è concessa l&quot;attendibilità totale durante la valutazione dei criteri di sicurezza degli assembly non presenti nell&quot;elenco."
  overload: System.Security.Policy.PolicyLevel.FullTrustAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)
  id: GetNamedPermissionSet(System.String)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: GetNamedPermissionSet(String)
  nameWithType: PolicyLevel.GetNamedPermissionSet(String)
  fullName: System.Security.Policy.PolicyLevel.GetNamedPermissionSet(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Restituisce il <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> nel livello di criteri corrente con il nome specificato."
  syntax:
    content: public System.Security.NamedPermissionSet GetNamedPermissionSet (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> trovare."
    return:
      type: System.Security.NamedPermissionSet
      description: "Il <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> nel livello di criteri corrente con il nome specificato, se trovato; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.PolicyLevel.GetNamedPermissionSet*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.Label
  id: Label
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: Label
  nameWithType: PolicyLevel.Label
  fullName: System.Security.Policy.PolicyLevel.Label
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Ottiene un&quot;etichetta descrittiva del livello di criteri."
  remarks: "L&quot;etichetta viene usata per consentire all&quot;amministratore di identificare il livello di criteri."
  syntax:
    content: public string Label { get; }
    return:
      type: System.String
      description: "L&quot;etichetta associata a livello di criteri."
  overload: System.Security.Policy.PolicyLevel.Label*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.NamedPermissionSets
  id: NamedPermissionSets
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: NamedPermissionSets
  nameWithType: PolicyLevel.NamedPermissionSets
  fullName: System.Security.Policy.PolicyLevel.NamedPermissionSets
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Ottiene un elenco di autorizzazioni denominati definiti per il livello di criteri."
  syntax:
    content: public System.Collections.IList NamedPermissionSets { get; }
    return:
      type: System.Collections.IList
      description: "Un elenco di set di autorizzazioni denominati definiti per il livello di criteri."
  overload: System.Security.Policy.PolicyLevel.NamedPermissionSets*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.Recover
  id: Recover
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: Recover()
  nameWithType: PolicyLevel.Recover()
  fullName: System.Security.Policy.PolicyLevel.Recover()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Sostituisce il file di configurazione per questo <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref> con l&quot;ultimo backup (per riflettere lo stato del criterio prima di eseguire l&quot;ultimo salvataggio) e restituisce per lo stato dell&quot;ultimo salvataggio."
  remarks: "Questo metodo non apporta modifiche all&quot;oggetto corrente <xref:System.Security.Policy.PolicyLevel>.</xref:System.Security.Policy.PolicyLevel> Bensì aggiorna il <xref:System.Security.Policy.PolicyLevel>file dell&quot;oggetto e <xref:System.Security.Policy.PolicyLevel>che il sistema di sicurezza utilizzato per valutare i criteri.</xref:System.Security.Policy.PolicyLevel> </xref:System.Security.Policy.PolicyLevel>       Questo metodo viene utilizzato da caspol-opzione di ripristino (vedere [Caspol.exe (strumento di criteri di sicurezza di accesso di codice)](~/add/includes/ajax-current-ext-md.md))."
  syntax:
    content: public void Recover ();
    parameters: []
  overload: System.Security.Policy.PolicyLevel.Recover*
  exceptions:
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "Il livello di criteri non dispone di un file di configurazione valido."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)
  id: RemoveFullTrustAssembly(System.Security.Policy.StrongName)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: RemoveFullTrustAssembly(StrongName)
  nameWithType: PolicyLevel.RemoveFullTrustAssembly(StrongName)
  fullName: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(StrongName)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Rimuove un assembly con l&quot;oggetto specificato <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref> dall&quot;elenco degli assembly al livello di criteri viene utilizzata per valutare i criteri."
  remarks: "Il metodo di RemoveFullTrustAssembly non è supportato nella versione 2.0 o versione successiva di .NET Framework, perché l&quot;elenco di assembly con attendibilità totale non viene utilizzata in tali versioni."
  syntax:
    content: public void RemoveFullTrustAssembly (System.Security.Policy.StrongName sn);
    parameters:
    - id: sn
      type: System.Security.Policy.StrongName
      description: "Il <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref> dell&quot;assembly da rimuovere dall&quot;elenco di assembly utilizzato per valutare i criteri."
  overload: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>sn</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;assembly con il <xref href=&quot;System.Security.Policy.StrongName&quot;> </xref> specificato per il <code> sn </code> parametro non ha l&quot;attendibilità totale."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  id: RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: RemoveFullTrustAssembly(StrongNameMembershipCondition)
  nameWithType: PolicyLevel.RemoveFullTrustAssembly(StrongNameMembershipCondition)
  fullName: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(StrongNameMembershipCondition)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Rimuove un assembly con l&quot;oggetto specificato <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> dall&quot;elenco degli assembly al livello di criteri viene utilizzata per valutare i criteri."
  remarks: "Il metodo di RemoveFullTrustAssembly non è supportato nella versione 2.0 o versione successiva di .NET Framework, perché l&quot;elenco di assembly con attendibilità totale non viene utilizzata in tali versioni."
  syntax:
    content: public void RemoveFullTrustAssembly (System.Security.Policy.StrongNameMembershipCondition snMC);
    parameters:
    - id: snMC
      type: System.Security.Policy.StrongNameMembershipCondition
      description: "Il <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> dell&quot;assembly da rimuovere dall&quot;elenco di assembly utilizzato per valutare i criteri."
  overload: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>snMC</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <xref href=&quot;System.Security.Policy.StrongNameMembershipCondition&quot;> </xref> specificato per il <code> snMC </code> parametro non ha l&quot;attendibilità totale."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)
  id: RemoveNamedPermissionSet(System.Security.NamedPermissionSet)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: RemoveNamedPermissionSet(NamedPermissionSet)
  nameWithType: PolicyLevel.RemoveNamedPermissionSet(NamedPermissionSet)
  fullName: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(NamedPermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Rimuove l&quot;oggetto specificato <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> dal livello dei criteri corrente."
  syntax:
    content: public System.Security.NamedPermissionSet RemoveNamedPermissionSet (System.Security.NamedPermissionSet permSet);
    parameters:
    - id: permSet
      type: System.Security.NamedPermissionSet
      description: "Il <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> da rimuovere dal livello dei criteri corrente."
    return:
      type: System.Security.NamedPermissionSet
      description: "Il <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> che è stato rimosso."
  overload: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> specificato per il <code> permSet </code> parametro non è stato trovato."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>permSet</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)
  id: RemoveNamedPermissionSet(System.String)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: RemoveNamedPermissionSet(String)
  nameWithType: PolicyLevel.RemoveNamedPermissionSet(String)
  fullName: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Rimuove il <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> con il nome specificato dal livello dei criteri corrente."
  syntax:
    content: public System.Security.NamedPermissionSet RemoveNamedPermissionSet (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> da rimuovere."
    return:
      type: System.Security.NamedPermissionSet
      description: "Il <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> che è stato rimosso."
  overload: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> name </code> parametro è uguale al nome di un set di autorizzazioni riservate.       - o - <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> con il nome specificato non è stato trovato."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.Reset
  id: Reset
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: Reset()
  nameWithType: PolicyLevel.Reset()
  fullName: System.Security.Policy.PolicyLevel.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Restituisce il livello di criteri corrente allo stato predefinito."
  remarks: "Il valore predefinito è diverso per ogni livello di criteri."
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Security.Policy.PolicyLevel.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)
  id: Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: Resolve(Evidence)
  nameWithType: PolicyLevel.Resolve(Evidence)
  fullName: System.Security.Policy.PolicyLevel.Resolve(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Risolve i criteri in base all&quot;evidenza per il livello di criteri e restituisce il valore risultante <xref href=&quot;System.Security.Policy.PolicyStatement&quot;> </xref>."
  remarks: "Risoluzione è l&quot;operazione di valutazione dei criteri di base per i livelli di criteri. Dato un set di evidenza di input, questo metodo verifica le condizioni di appartenenza dei gruppi di codice, iniziando dalla radice e procedendo verso il basso come corrispondenza. La combinazione di autorizzazioni risultante dal codice di corrispondenza dei gruppi produce un <xref:System.Security.Policy.PolicyStatement>restituito.</xref:System.Security.Policy.PolicyStatement>       Concessione di autorizzazioni al codice, criteri di sicurezza utilizzano le istruzioni dei criteri risolti per tutti i livelli di criteri applicabili, con la richiesta di codice per le autorizzazioni."
  example:
  - "The following code shows the use of the Resolve method. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyLevel> class.  \n  \n [!code-cpp[system.Security.policy.policylevel#13](~/add/codesnippet/cpp/m-system.security.policy_27_1.cpp)]\n [!code-cs[system.Security.policy.policylevel#13](~/add/codesnippet/csharp/m-system.security.policy_27_1.cs)]\n [!code-vb[system.Security.policy.policylevel#13](~/add/codesnippet/visualbasic/m-system.security.policy_27_1.vb)]"
  syntax:
    content: public System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Il <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> utilizzato per risolvere il <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref>."
    return:
      type: System.Security.Policy.PolicyStatement
      description: "Il valore risultante <xref href=&quot;System.Security.Policy.PolicyStatement&quot;> </xref>."
  overload: System.Security.Policy.PolicyLevel.Resolve*
  exceptions:
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "Il livello di criteri contiene più gruppi di codice corrispondenti contrassegnati come esclusivo."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: PolicyLevel.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Risolve i criteri a livello di criteri e restituisce la radice di una struttura di gruppo di codice che corrisponde alla prova."
  remarks: "È possibile utilizzare questo metodo per analizzare l&quot;effetto dei gruppi di codice in un livello di criteri rispetto a un determinato set di evidenza. Ad esempio, se i criteri di sicurezza non concede un assembly il codice minimo richiedere le autorizzazioni che necessarie, può essere difficile stabilire esame dei gruppi di codice in cui il problema è esattamente.       Poiché questo metodo restituisce un gruppo di codice che può avere gruppi di codice figlio, è possibile che un amministratore di esaminare il gruppo di codice e i gruppi di codice figlio e determinare quali gruppi di codice corrispondenza."
  syntax:
    content: public System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Il <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> utilizzato per risolvere i criteri."
    return:
      type: System.Security.Policy.CodeGroup
      description: "Oggetto <xref href=&quot;System.Security.Policy.CodeGroup&quot;> </xref> che rappresenta la radice di un albero dei gruppi di codice corrispondenti l&quot;evidenza specificata."
  overload: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups*
  exceptions:
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "Il livello di criteri contiene più gruppi di codice corrispondenti contrassegnati come esclusivo."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.RootCodeGroup
  id: RootCodeGroup
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: RootCodeGroup
  nameWithType: PolicyLevel.RootCodeGroup
  fullName: System.Security.Policy.PolicyLevel.RootCodeGroup
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Ottiene o imposta il gruppo di codice radice per il livello di criteri."
  remarks: "Ogni livello di criteri ha una radice <xref:System.Security.Policy.CodeGroup>.</xref:System.Security.Policy.CodeGroup>"
  syntax:
    content: public System.Security.Policy.CodeGroup RootCodeGroup { get; set; }
    return:
      type: System.Security.Policy.CodeGroup
      description: "Il <xref href=&quot;System.Security.Policy.CodeGroup&quot;> </xref> che rappresenta la radice dell&quot;albero di gruppi di codice a livello di criteri."
  overload: System.Security.Policy.PolicyLevel.RootCodeGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore di RootCodeGroup è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.StoreLocation
  id: StoreLocation
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: StoreLocation
  nameWithType: PolicyLevel.StoreLocation
  fullName: System.Security.Policy.PolicyLevel.StoreLocation
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Ottiene il percorso in cui è archiviato il file dei criteri."
  remarks: ''
  example:
  - "The following code shows how to display the store location for a policy level. This code example is part of a larger example provided for the <xref:System.Security.Policy.PolicyLevel> class.  \n  \n [!code-cpp[system.Security.policy.policylevel#15](~/add/codesnippet/cpp/p-system.security.policy_12_1.cpp)]\n [!code-cs[system.Security.policy.policylevel#15](~/add/codesnippet/csharp/p-system.security.policy_12_1.cs)]\n [!code-vb[system.Security.policy.policylevel#15](~/add/codesnippet/visualbasic/p-system.security.policy_12_1.vb)]"
  syntax:
    content: public string StoreLocation { get; }
    return:
      type: System.String
      description: "Il percorso in cui è archiviato il file dei criteri, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref> non dispone di un percorso di archiviazione."
  overload: System.Security.Policy.PolicyLevel.StoreLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.ToXml
  id: ToXml
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: ToXml()
  nameWithType: PolicyLevel.ToXml()
  fullName: System.Security.Policy.PolicyLevel.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Crea una codifica XML dell&quot;oggetto di sicurezza e lo stato corrente."
  syntax:
    content: public System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Codifica XML dell&quot;oggetto di sicurezza, inclusi eventuali informazioni sullo stato."
  overload: System.Security.Policy.PolicyLevel.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.PolicyLevel.Type
  id: Type
  parent: System.Security.Policy.PolicyLevel
  langs:
  - csharp
  name: Type
  nameWithType: PolicyLevel.Type
  fullName: System.Security.Policy.PolicyLevel.Type
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Ottiene il tipo di livello dei criteri."
  remarks: "Il massimo livello di criteri di sicurezza è a livello aziendale. Successivi livelli inferiori della gerarchia rappresentano ulteriori restrizioni dei criteri, ma mai possano concedere autorizzazioni a quella consentita dalla livelli più elevati. I livelli di criteri nell&quot;ordine sono i seguenti.      1.  Enterprise 2.  Computer 3.  Utente 4.  Dominio dell&quot;applicazione per ulteriori informazioni, vedere <xref:System.Security.PolicyLevelType>.</xref:System.Security.PolicyLevelType>"
  syntax:
    content: public System.Security.PolicyLevelType Type { get; }
    return:
      type: System.Security.PolicyLevelType
      description: "Uno del <xref href=&quot;System.Security.PolicyLevelType&quot;> </xref> valori."
  overload: System.Security.Policy.PolicyLevel.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongName)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: AddFullTrustAssembly(StrongName)
  nameWithType: PolicyLevel.AddFullTrustAssembly(StrongName)
  fullName: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(StrongName)
- uid: System.Security.Policy.StrongName
  parent: System.Security.Policy
  isExternal: false
  name: StrongName
  nameWithType: StrongName
  fullName: System.Security.Policy.StrongName
- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: AddFullTrustAssembly(StrongNameMembershipCondition)
  nameWithType: PolicyLevel.AddFullTrustAssembly(StrongNameMembershipCondition)
  fullName: System.Security.Policy.PolicyLevel.AddFullTrustAssembly(StrongNameMembershipCondition)
- uid: System.Security.Policy.StrongNameMembershipCondition
  parent: System.Security.Policy
  isExternal: false
  name: StrongNameMembershipCondition
  nameWithType: StrongNameMembershipCondition
  fullName: System.Security.Policy.StrongNameMembershipCondition
- uid: System.Security.Policy.PolicyLevel.AddNamedPermissionSet(System.Security.NamedPermissionSet)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: AddNamedPermissionSet(NamedPermissionSet)
  nameWithType: PolicyLevel.AddNamedPermissionSet(NamedPermissionSet)
  fullName: System.Security.Policy.PolicyLevel.AddNamedPermissionSet(NamedPermissionSet)
- uid: System.Security.NamedPermissionSet
  parent: System.Security
  isExternal: false
  name: NamedPermissionSet
  nameWithType: NamedPermissionSet
  fullName: System.Security.NamedPermissionSet
- uid: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(System.String,System.Security.PermissionSet)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: ChangeNamedPermissionSet(String,PermissionSet)
  nameWithType: PolicyLevel.ChangeNamedPermissionSet(String,PermissionSet)
  fullName: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet(String,PermissionSet)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Security.Policy.PolicyLevel.CreateAppDomainLevel
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: CreateAppDomainLevel()
  nameWithType: PolicyLevel.CreateAppDomainLevel()
  fullName: System.Security.Policy.PolicyLevel.CreateAppDomainLevel()
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.Policy.PolicyLevel.FromXml(System.Security.SecurityElement)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: PolicyLevel.FromXml(SecurityElement)
  fullName: System.Security.Policy.PolicyLevel.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.PolicyLevel.FullTrustAssemblies
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: FullTrustAssemblies
  nameWithType: PolicyLevel.FullTrustAssemblies
  fullName: System.Security.Policy.PolicyLevel.FullTrustAssemblies
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Security.Policy.PolicyLevel.GetNamedPermissionSet(System.String)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: GetNamedPermissionSet(String)
  nameWithType: PolicyLevel.GetNamedPermissionSet(String)
  fullName: System.Security.Policy.PolicyLevel.GetNamedPermissionSet(String)
- uid: System.Security.Policy.PolicyLevel.Label
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Label
  nameWithType: PolicyLevel.Label
  fullName: System.Security.Policy.PolicyLevel.Label
- uid: System.Security.Policy.PolicyLevel.NamedPermissionSets
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: NamedPermissionSets
  nameWithType: PolicyLevel.NamedPermissionSets
  fullName: System.Security.Policy.PolicyLevel.NamedPermissionSets
- uid: System.Security.Policy.PolicyLevel.Recover
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Recover()
  nameWithType: PolicyLevel.Recover()
  fullName: System.Security.Policy.PolicyLevel.Recover()
- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongName)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RemoveFullTrustAssembly(StrongName)
  nameWithType: PolicyLevel.RemoveFullTrustAssembly(StrongName)
  fullName: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(StrongName)
- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(System.Security.Policy.StrongNameMembershipCondition)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RemoveFullTrustAssembly(StrongNameMembershipCondition)
  nameWithType: PolicyLevel.RemoveFullTrustAssembly(StrongNameMembershipCondition)
  fullName: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly(StrongNameMembershipCondition)
- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.Security.NamedPermissionSet)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RemoveNamedPermissionSet(NamedPermissionSet)
  nameWithType: PolicyLevel.RemoveNamedPermissionSet(NamedPermissionSet)
  fullName: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(NamedPermissionSet)
- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(System.String)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RemoveNamedPermissionSet(String)
  nameWithType: PolicyLevel.RemoveNamedPermissionSet(String)
  fullName: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet(String)
- uid: System.Security.Policy.PolicyLevel.Reset
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Reset()
  nameWithType: PolicyLevel.Reset()
  fullName: System.Security.Policy.PolicyLevel.Reset()
- uid: System.Security.Policy.PolicyLevel.Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Resolve(Evidence)
  nameWithType: PolicyLevel.Resolve(Evidence)
  fullName: System.Security.Policy.PolicyLevel.Resolve(Evidence)
- uid: System.Security.Policy.PolicyStatement
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatement
  nameWithType: PolicyStatement
  fullName: System.Security.Policy.PolicyStatement
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: PolicyLevel.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups(Evidence)
- uid: System.Security.Policy.CodeGroup
  parent: System.Security.Policy
  isExternal: false
  name: CodeGroup
  nameWithType: CodeGroup
  fullName: System.Security.Policy.CodeGroup
- uid: System.Security.Policy.PolicyLevel.RootCodeGroup
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RootCodeGroup
  nameWithType: PolicyLevel.RootCodeGroup
  fullName: System.Security.Policy.PolicyLevel.RootCodeGroup
- uid: System.Security.Policy.PolicyLevel.StoreLocation
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: StoreLocation
  nameWithType: PolicyLevel.StoreLocation
  fullName: System.Security.Policy.PolicyLevel.StoreLocation
- uid: System.Security.Policy.PolicyLevel.ToXml
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: ToXml()
  nameWithType: PolicyLevel.ToXml()
  fullName: System.Security.Policy.PolicyLevel.ToXml()
- uid: System.Security.Policy.PolicyLevel.Type
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Type
  nameWithType: PolicyLevel.Type
  fullName: System.Security.Policy.PolicyLevel.Type
- uid: System.Security.PolicyLevelType
  parent: System.Security
  isExternal: false
  name: PolicyLevelType
  nameWithType: PolicyLevelType
  fullName: System.Security.PolicyLevelType
- uid: System.Security.Policy.PolicyLevel.AddFullTrustAssembly*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: AddFullTrustAssembly
  nameWithType: PolicyLevel.AddFullTrustAssembly
- uid: System.Security.Policy.PolicyLevel.AddNamedPermissionSet*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: AddNamedPermissionSet
  nameWithType: PolicyLevel.AddNamedPermissionSet
- uid: System.Security.Policy.PolicyLevel.ChangeNamedPermissionSet*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: ChangeNamedPermissionSet
  nameWithType: PolicyLevel.ChangeNamedPermissionSet
- uid: System.Security.Policy.PolicyLevel.CreateAppDomainLevel*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: CreateAppDomainLevel
  nameWithType: PolicyLevel.CreateAppDomainLevel
- uid: System.Security.Policy.PolicyLevel.FromXml*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: FromXml
  nameWithType: PolicyLevel.FromXml
- uid: System.Security.Policy.PolicyLevel.FullTrustAssemblies*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: FullTrustAssemblies
  nameWithType: PolicyLevel.FullTrustAssemblies
- uid: System.Security.Policy.PolicyLevel.GetNamedPermissionSet*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: GetNamedPermissionSet
  nameWithType: PolicyLevel.GetNamedPermissionSet
- uid: System.Security.Policy.PolicyLevel.Label*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Label
  nameWithType: PolicyLevel.Label
- uid: System.Security.Policy.PolicyLevel.NamedPermissionSets*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: NamedPermissionSets
  nameWithType: PolicyLevel.NamedPermissionSets
- uid: System.Security.Policy.PolicyLevel.Recover*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Recover
  nameWithType: PolicyLevel.Recover
- uid: System.Security.Policy.PolicyLevel.RemoveFullTrustAssembly*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RemoveFullTrustAssembly
  nameWithType: PolicyLevel.RemoveFullTrustAssembly
- uid: System.Security.Policy.PolicyLevel.RemoveNamedPermissionSet*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RemoveNamedPermissionSet
  nameWithType: PolicyLevel.RemoveNamedPermissionSet
- uid: System.Security.Policy.PolicyLevel.Reset*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Reset
  nameWithType: PolicyLevel.Reset
- uid: System.Security.Policy.PolicyLevel.Resolve*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Resolve
  nameWithType: PolicyLevel.Resolve
- uid: System.Security.Policy.PolicyLevel.ResolveMatchingCodeGroups*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: ResolveMatchingCodeGroups
  nameWithType: PolicyLevel.ResolveMatchingCodeGroups
- uid: System.Security.Policy.PolicyLevel.RootCodeGroup*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: RootCodeGroup
  nameWithType: PolicyLevel.RootCodeGroup
- uid: System.Security.Policy.PolicyLevel.StoreLocation*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: StoreLocation
  nameWithType: PolicyLevel.StoreLocation
- uid: System.Security.Policy.PolicyLevel.ToXml*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: ToXml
  nameWithType: PolicyLevel.ToXml
- uid: System.Security.Policy.PolicyLevel.Type*
  parent: System.Security.Policy.PolicyLevel
  isExternal: false
  name: Type
  nameWithType: PolicyLevel.Type
