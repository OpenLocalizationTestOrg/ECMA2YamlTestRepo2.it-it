### YamlMime:ManagedReference
items:
- uid: System.Web.HttpServerUtility
  id: HttpServerUtility
  children:
  - System.Web.HttpServerUtility.ClearError
  - System.Web.HttpServerUtility.CreateObject(System.String)
  - System.Web.HttpServerUtility.CreateObject(System.Type)
  - System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)
  - System.Web.HttpServerUtility.Execute(System.String)
  - System.Web.HttpServerUtility.Execute(System.String,System.Boolean)
  - System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)
  - System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)
  - System.Web.HttpServerUtility.GetLastError
  - System.Web.HttpServerUtility.HtmlDecode(System.String)
  - System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.HtmlEncode(System.String)
  - System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.MachineName
  - System.Web.HttpServerUtility.MapPath(System.String)
  - System.Web.HttpServerUtility.ScriptTimeout
  - System.Web.HttpServerUtility.Transfer(System.String)
  - System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)
  - System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)
  - System.Web.HttpServerUtility.TransferRequest(System.String)
  - System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)
  - System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)
  - System.Web.HttpServerUtility.UrlDecode(System.String)
  - System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.UrlEncode(System.String)
  - System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)
  - System.Web.HttpServerUtility.UrlPathEncode(System.String)
  - System.Web.HttpServerUtility.UrlTokenDecode(System.String)
  - System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])
  langs:
  - csharp
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
  type: Class
  summary: "Fornisce metodi helper per l&quot;elaborazione delle richieste Web."
  remarks: "I metodi e proprietà della classe HttpServerUtility sono esposte tramite la funzione intrinseca <xref:System.Web.HttpContext.Server%2A>oggetto fornito da ASP.NET.</xref:System.Web.HttpContext.Server%2A>"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192870).  \n  \n The following example demonstrates how to use the <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method and the <xref:System.Web.HttpServerUtility.UrlEncode%2A> method of the HttpServerUtility class. The <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method helps ensure that any user-supplied string input will be rendered as static text in browsers instead of executable script or HTML elements. The <xref:System.Web.HttpServerUtility.UrlEncode%2A> method encodes URLs so that they are correctly transmitted in the HTTP stream.  \n  \n [!code-cs[System.Web.HttpServerUtility1#1](~/add/codesnippet/csharp/t-system.web.httpserveru_1.aspx)]\n [!code-vb[System.Web.HttpServerUtility1#1](~/add/codesnippet/visualbasic/t-system.web.httpserveru_1.aspx)]"
  syntax:
    content: public sealed class HttpServerUtility
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.ClearError
  id: ClearError
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: ClearError()
  nameWithType: HttpServerUtility.ClearError()
  fullName: System.Web.HttpServerUtility.ClearError()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Cancella l&quot;eccezione precedente."
  remarks: ''
  example:
  - "The following example clears the last exception that was thrown.  \n  \n [!code-cs[Classic HttpServerUtility.ClearError Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_6_1.cs)]\n [!code-vb[Classic HttpServerUtility.ClearError Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_6_1.vb)]"
  syntax:
    content: public void ClearError ();
    parameters: []
  overload: System.Web.HttpServerUtility.ClearError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.CreateObject(System.String)
  id: CreateObject(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: CreateObject(String)
  nameWithType: HttpServerUtility.CreateObject(String)
  fullName: System.Web.HttpServerUtility.CreateObject(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Crea un&quot;istanza del server di un oggetto COM identificato dall&quot;identificatore a livello di codice dell&quot;oggetto (ProgID)."
  remarks: ''
  example:
  - "The following example creates an object by using the object's ProgID.  \n  \n [!code-vb[Classic HttpServerUtility.CreateObject Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_4_1.vb)]\n [!code-cs[Classic HttpServerUtility.CreateObject Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_4_1.cs)]"
  syntax:
    content: public object CreateObject (string progID);
    parameters:
    - id: progID
      type: System.String
      description: "Classe o tipo di oggetto per creare un&quot;istanza di."
    return:
      type: System.Object
      description: "Nuovo oggetto."
  overload: System.Web.HttpServerUtility.CreateObject*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Non è stato possibile creare un&quot;istanza dell&quot;oggetto."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.CreateObject(System.Type)
  id: CreateObject(System.Type)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: CreateObject(Type)
  nameWithType: HttpServerUtility.CreateObject(Type)
  fullName: System.Web.HttpServerUtility.CreateObject(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Crea un&quot;istanza del server di un oggetto COM identificato dal tipo dell&quot;oggetto."
  syntax:
    content: public object CreateObject (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Oggetto <xref:System.Type>che rappresenta l&quot;oggetto da creare.</xref:System.Type>"
    return:
      type: System.Object
      description: "Nuovo oggetto."
  overload: System.Web.HttpServerUtility.CreateObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)
  id: CreateObjectFromClsid(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: CreateObjectFromClsid(String)
  nameWithType: HttpServerUtility.CreateObjectFromClsid(String)
  fullName: System.Web.HttpServerUtility.CreateObjectFromClsid(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Crea un&quot;istanza del server di un oggetto COM identificato dall&quot;identificatore di classe dell&quot;oggetto (CLSID)."
  remarks: ''
  example:
  - "The following example demonstrates how to use the CreateObjectFromClsid method to create a server instance of a COM object.  \n  \n [!code-cs[Classic HttpServerUtility.CreateObjectFromClsid Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_2_1.cs)]\n [!code-vb[Classic HttpServerUtility.CreateObjectFromClsid Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_2_1.vb)]"
  syntax:
    content: public object CreateObjectFromClsid (string clsid);
    parameters:
    - id: clsid
      type: System.String
      description: "Identificatore di classe dell&quot;oggetto per creare un&quot;istanza di."
    return:
      type: System.Object
      description: "Nuovo oggetto."
  overload: System.Web.HttpServerUtility.CreateObjectFromClsid*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Non è stato possibile creare un&quot;istanza dell&quot;oggetto."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.String)
  id: Execute(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(String)
  nameWithType: HttpServerUtility.Execute(String)
  fullName: System.Web.HttpServerUtility.Execute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Esegue il gestore per il percorso virtuale specificato nel contesto della richiesta corrente."
  remarks: "Il metodo Execute continua l&quot;esecuzione della pagina originale al termine dell&quot;esecuzione della nuova pagina. Il <xref:System.Web.HttpServerUtility.Transfer%2A>incondizionatamente trasferisce l&quot;esecuzione a un altro gestore.</xref:System.Web.HttpServerUtility.Transfer%2A>       ASP.NET non verifica che l&quot;utente corrente sia autorizzato a visualizzare la risorsa fornita dal metodo Execute. Anche se la logica di autenticazione e autorizzazione ASP.NET viene eseguito prima che venga chiamato il gestore di risorse, ASP.NET chiama il gestore indicato dal metodo Execute direttamente e non viene rieseguita la logica di autenticazione e autorizzazione per la nuova risorsa. Se i criteri di sicurezza dell&quot;applicazione richiedono che i client dispongano di autorizzazioni appropriate per accedere alla risorsa, l&quot;applicazione deve essere forzata o forniscono un meccanismo di controllo di accesso personalizzato.       È possibile forzare la nuova autorizzazione tramite il <xref:System.Web.HttpResponse.Redirect%2A>metodo anziché il metodo Execute.</xref:System.Web.HttpResponse.Redirect%2A> <xref:System.Web.HttpResponse.Redirect%2A>esegue un reindirizzamento sul lato client in cui il browser richiede la nuova risorsa.</xref:System.Web.HttpResponse.Redirect%2A> Poiché questo reindirizzamento è una nuova richiesta in ingresso nel sistema, è soggetto a in tutta la logica di autenticazione e autorizzazione di criteri di sicurezza di Internet Information Services (IIS) sia ASP.NET.       È possibile verificare che l&quot;utente disponga dell&quot;autorizzazione per visualizzare la risorsa incorporando un metodo di autorizzazione personalizzato che utilizza il <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metodo prima che l&quot;applicazione chiama il metodo Execute.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  example:
  - "The following example displays the .aspx page \"Updateinfo.aspx\" in the current directory. Program execution returns to the starting page after the Updateinfo.aspx page is displayed.  \n  \n [!code-vb[Classic HttpServerUtility.Execute Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_15_1.vb)]\n [!code-cs[Classic HttpServerUtility.Execute Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_15_1.cs)]"
  syntax:
    content: public void Execute (string path);
    parameters:
    - id: path
      type: System.String
      description: "Percorso URL da eseguire."
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=\"System.Web.HttpContext\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n An error occurred while executing the handler specified by <code>path</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>path</code> is not a virtual path."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.String,System.Boolean)
  id: Execute(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(String,Boolean)
  nameWithType: HttpServerUtility.Execute(String,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Esegue il gestore per il percorso virtuale specificato nel contesto della richiesta corrente e specifica se cancellare le <> </> *> e <> </> *> raccolte."
  remarks: ''
  example:
  - "The following example shows how to execute the .aspx page `Updateinfo.aspx` in the current request and preserve the <xref:System.Web.HttpRequest.QueryString%2A> and <xref:System.Web.HttpRequest.Form%2A> collections. Program execution returns to the starting page after `Updateinfo.aspx` is displayed.  \n  \n [!code-vb[HttpServerUtility.Execute#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_16_1.aspx)]\n [!code-cs[HttpServerUtility.Execute#1](~/add/codesnippet/csharp/m-system.web.httpserveru_16_1.aspx)]"
  syntax:
    content: public void Execute (string path, bool preserveForm);
    parameters:
    - id: path
      type: System.String
      description: "Percorso URL da eseguire."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per mantenere il <> </> *> e <> </> *> gli insiemi. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=\"System.Web.HttpContext\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n An error occurred while executing the handler specified by <code>path</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>path</code> is not a virtual path."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)
  id: Execute(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(String,TextWriter)
  nameWithType: HttpServerUtility.Execute(String,TextWriter)
  fullName: System.Web.HttpServerUtility.Execute(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Esegue il gestore per il percorso virtuale specificato nel contesto della richiesta corrente. Oggetto <xref:System.IO.TextWriter>acquisisce l&quot;output dal gestore eseguito.</xref:System.IO.TextWriter>"
  remarks: "Il metodo Execute continua l&quot;esecuzione della richiesta originale al termine dell&quot;esecuzione del percorso virtuale specificato. Il <xref:System.Web.HttpServerUtility.Transfer%2A>incondizionatamente trasferisce l&quot;esecuzione a un altro gestore.</xref:System.Web.HttpServerUtility.Transfer%2A>       ASP.NET non verifica che l&quot;utente corrente sia autorizzato a visualizzare la risorsa fornita dal metodo Execute. Anche se la logica di autenticazione e autorizzazione ASP.NET viene eseguito prima che venga chiamato il gestore di risorse, ASP.NET chiama il gestore indicato dal metodo Execute direttamente e non viene rieseguita la logica di autenticazione e autorizzazione per la nuova risorsa. Se i criteri di sicurezza dell&quot;applicazione richiedono che i client dispongano di autorizzazioni appropriate per accedere alla risorsa, l&quot;applicazione deve essere forzata o forniscono un meccanismo di controllo di accesso personalizzato.       È possibile forzare la nuova autorizzazione tramite il <xref:System.Web.HttpResponse.Redirect%2A>metodo anziché il metodo Execute.</xref:System.Web.HttpResponse.Redirect%2A> <xref:System.Web.HttpResponse.Redirect%2A>esegue un reindirizzamento sul lato client in cui il browser richiede la nuova risorsa.</xref:System.Web.HttpResponse.Redirect%2A> Poiché questo reindirizzamento è una nuova richiesta in ingresso nel sistema, è soggetto a in tutta la logica di autenticazione e autorizzazione di criteri di sicurezza di Internet Information Services (IIS) sia ASP.NET.       È possibile verificare che l&quot;utente disponga dell&quot;autorizzazione per visualizzare la risorsa incorporando un metodo di autorizzazione personalizzato che utilizza il <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metodo prima che l&quot;applicazione chiama il metodo Execute.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  example:
  - "The following example executes the `Login.aspx` page on the server in the current directory and receives the output from the page through the <xref:System.IO.StringWriter> object `writer`. It writes the HTML stream received from `writer` to the HTTP output stream.  \n  \n [!code-cs[Classic HttpServerUtility.Execute1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_12_1.cs)]\n [!code-vb[Classic HttpServerUtility.Execute1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_12_1.vb)]"
  syntax:
    content: public void Execute (string path, System.IO.TextWriter writer);
    parameters:
    - id: path
      type: System.String
      description: "Percorso URL da eseguire."
    - id: writer
      type: System.IO.TextWriter
      description: "Il <xref:System.IO.TextWriter>per acquisire l&quot;output.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=\"System.Web.HttpContext\"></xref> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n An error occurred while executing the handler specified by <code>path</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>path</code> is not a virtual path."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)
  id: Execute(System.String,System.IO.TextWriter,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(String,TextWriter,Boolean)
  nameWithType: HttpServerUtility.Execute(String,TextWriter,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(String,TextWriter,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Esegue il gestore per il percorso virtuale specificato nel contesto della richiesta corrente. Oggetto <xref:System.IO.TextWriter>acquisizioni output dalla pagina e un parametro booleano specifica se cancellare le <> </> *> e <> </> *> raccolte.</xref:System.IO.TextWriter>"
  remarks: "Il <xref:System.Web.HttpServerUtility.Execute%2A>metodo continua l&quot;esecuzione della richiesta originale al termine dell&quot;esecuzione del percorso virtuale specificato.</xref:System.Web.HttpServerUtility.Execute%2A> Il <xref:System.Web.HttpServerUtility.Transfer%2A>incondizionatamente trasferisce l&quot;esecuzione a un altro gestore.</xref:System.Web.HttpServerUtility.Transfer%2A>       ASP.NET non verifica che l&quot;utente corrente sia autorizzato a visualizzare la risorsa fornita dal metodo Execute. Anche se la logica di autenticazione e autorizzazione ASP.NET viene eseguito prima che venga chiamato il gestore di risorse, ASP.NET chiama il gestore indicato dal metodo Execute direttamente e non viene rieseguita la logica di autenticazione e autorizzazione per la nuova risorsa. Se i criteri di sicurezza dell&quot;applicazione richiedono che i client dispongano di autorizzazioni appropriate per accedere alla risorsa, l&quot;applicazione deve essere forzata o forniscono un meccanismo di controllo di accesso personalizzato.       È possibile forzare la nuova autorizzazione tramite il <xref:System.Web.HttpResponse.Redirect%2A>metodo anziché il metodo Execute.</xref:System.Web.HttpResponse.Redirect%2A> <xref:System.Web.HttpResponse.Redirect%2A>esegue un reindirizzamento sul lato client in cui il browser richiede la nuova risorsa.</xref:System.Web.HttpResponse.Redirect%2A> Poiché questo reindirizzamento è una nuova richiesta in ingresso nel sistema, è soggetto a in tutta la logica di autenticazione e autorizzazione di criteri di sicurezza di Internet Information Services (IIS) sia ASP.NET.       È possibile verificare che l&quot;utente disponga dell&quot;autorizzazione per visualizzare la risorsa incorporando un metodo di autorizzazione personalizzato che utilizza il <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metodo prima che l&quot;applicazione chiama il metodo Execute.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  example:
  - "The following example executes the `Login.aspx` page on the server in the current directory and receives the output from the page through the <xref:System.IO.StringWriter> object `writer`. It writes the HTML stream received from `writer` to the HTTP output stream. The contents of the <xref:System.Web.HttpRequest.Form%2A> and <xref:System.Web.HttpRequest.QueryString%2A> collections are preserved.  \n  \n [!code-cs[HttpServerUtility.Execute02#1](~/add/codesnippet/csharp/0d13d28c-0070-4c47-b943-_1.aspx)]\n [!code-vb[HttpServerUtility.Execute02#1](~/add/codesnippet/visualbasic/0d13d28c-0070-4c47-b943-_1.aspx)]"
  syntax:
    content: public void Execute (string path, System.IO.TextWriter writer, bool preserveForm);
    parameters:
    - id: path
      type: System.String
      description: "Percorso URL da eseguire."
    - id: writer
      type: System.IO.TextWriter
      description: "Il <xref:System.IO.TextWriter>per acquisire l&quot;output.</xref:System.IO.TextWriter>"
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per mantenere il <> </> *> e <> </> *> gli insiemi. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=\"System.Web.HttpContext\"></xref> is a null reference (<xref uid=\"langword_csharp_Nothing\" name=\"Nothing\" href=\"\"></xref> in Visual Basic).  \n  \n \\- or -  \n  \n <code>path</code> ends with a period (.).  \n  \n \\- or -  \n  \n An error occurred while executing the handler specified by <code>path</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>non è un percorso virtuale."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)
  id: Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Execute(IHttpHandler,TextWriter,Boolean)
  nameWithType: HttpServerUtility.Execute(IHttpHandler,TextWriter,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(IHttpHandler,TextWriter,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Esegue il gestore per il percorso virtuale specificato nel contesto della richiesta corrente. Oggetto <xref:System.IO.TextWriter>acquisizioni output dal gestore eseguito e un parametro booleano specifica se cancellare le <> </> *> e <> </> *> raccolte.</xref:System.IO.TextWriter>"
  remarks: "È possibile scrivere gestori HTTP personalizzati per elaborare i tipi predefiniti specifici di richieste HTTP in qualsiasi linguaggio compatibile con la lingua specifica CLS (Common). Il codice eseguibile definito nelle classi del gestore HTTP anziché le pagine ASP (noto anche come ASP classico) convenzionale o delle pagine ASP.NET risponde a queste richieste specifiche. I gestori HTTP consentono l&quot;interazione con i servizi di risposta di un server Web che esegue Internet Information Services (IIS) e la richiesta di basso livello e forniscono funzionalità simili alle estensioni ISAPI ma con un modello di programmazione più semplice.       ASP.NET non verifica che l&quot;utente corrente sia autorizzato a visualizzare la risorsa fornita dal metodo Execute. Anche se la logica di autenticazione e autorizzazione ASP.NET viene eseguito prima che venga chiamato il gestore di risorse, ASP.NET chiama direttamente il gestore indicato dal metodo Execute e non viene rieseguita la logica di autenticazione e autorizzazione per la nuova risorsa. Se i criteri di sicurezza per l&quot;applicazione richiedono che i client dispongano di autorizzazioni appropriate per accedere alla risorsa, l&quot;applicazione deve essere forzata o forniscono un meccanismo di controllo di accesso personalizzato.       È possibile forzare la nuova autorizzazione tramite il <xref:System.Web.HttpResponse.Redirect%2A>metodo anziché il metodo Execute.</xref:System.Web.HttpResponse.Redirect%2A> Il <xref:System.Web.HttpResponse.Redirect%2A>esegue un reindirizzamento sul lato client in cui il browser richiede la nuova risorsa.</xref:System.Web.HttpResponse.Redirect%2A> Poiché questo reindirizzamento è una nuova richiesta in ingresso nel sistema, è soggetto a in tutta la logica di autenticazione e autorizzazione di criteri di sicurezza di IIS e ASP.NET.       È possibile verificare che l&quot;utente disponga dell&quot;autorizzazione per visualizzare la risorsa incorporando un metodo di autorizzazione personalizzato che utilizza il <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metodo prima che l&quot;applicazione chiama il metodo Execute.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  syntax:
    content: public void Execute (System.Web.IHttpHandler handler, System.IO.TextWriter writer, bool preserveForm);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "Il gestore HTTP che implementa il <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> per trasferire la richiesta corrente."
    - id: writer
      type: System.IO.TextWriter
      description: "Il <xref:System.IO.TextWriter>per acquisire l&quot;output.</xref:System.IO.TextWriter>"
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per mantenere il <> </> *> e <> </> *> gli insiemi. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Execute*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Si è verificato un errore durante l&quot;esecuzione del gestore specificato da <code> handler </code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>handler</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.GetLastError
  id: GetLastError
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: GetLastError()
  nameWithType: HttpServerUtility.GetLastError()
  fullName: System.Web.HttpServerUtility.GetLastError()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Restituisce l&quot;eccezione precedente."
  remarks: ''
  example:
  - "The following example prints a description of the application's last error to the HTTP output stream. It prints \"No Errors\" if no errors have been encountered.  \n  \n [!code-vb[Classic HttpServerUtility.GetLastError Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_8_1.vb)]\n [!code-cs[Classic HttpServerUtility.GetLastError Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_8_1.cs)]"
  syntax:
    content: public Exception GetLastError ();
    parameters: []
    return:
      type: System.Exception
      description: "L&quot;eccezione precedente che è stata generata."
  overload: System.Web.HttpServerUtility.GetLastError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.HtmlDecode(System.String)
  id: HtmlDecode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: HtmlDecode(String)
  nameWithType: HttpServerUtility.HtmlDecode(String)
  fullName: System.Web.HttpServerUtility.HtmlDecode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Decodifica una stringa codificata in formato HTML e restituisce la stringa decodificata."
  remarks: "HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML. For example, if a text string contains a less than sign (\\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag. When the characters are HTML encoded, they are converted to the strings `<` and `>`, which causes the browser to display the less than sign and greater than sign correctly. HtmlDecode decodes text that has been transmitted to the server.  \n  \n This method is a convenient way to access the <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName> method at run time from an ASP.NET application. Internally, this method uses <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName> to decode strings.  \n  \n In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property. In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.  \n  \n Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values."
  example:
  - "The following example contains the function `LoadDecodedFile`, which decodes the data from a file and copies it into one string.  \n  \n [!code-cs[Classic HttpServerUtility.HtmlDecode Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_14_1.aspx)]\n [!code-vb[Classic HttpServerUtility.HtmlDecode Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_14_1.aspx)]"
  syntax:
    content: public string HtmlDecode (string s);
    parameters:
    - id: s
      type: System.String
      description: "Stringa HTML da decodificare."
    return:
      type: System.String
      description: "Testo decodificato."
  overload: System.Web.HttpServerUtility.HtmlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)
  id: HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpServerUtility.HtmlDecode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.HtmlDecode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Decodifica una stringa codificata in formato HTML e invia l&quot;output per il valore risultante un <xref:System.IO.TextWriter>flusso di output.</xref:System.IO.TextWriter>"
  remarks: "HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML. For example, if a text string contains a less than sign (\\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag. When the characters are HTML encoded, they are converted to the strings `<` and `>`, which causes the browser to display the less than sign and greater than sign correctly.  \n  \n <xref:System.Web.HttpServerUtility.HtmlDecode%2A> decodes text that has been transmitted to the server.  \n  \n <xref:System.Web.HttpServerUtility.HtmlDecode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName> method at run time from an ASP.NET application. Internally, <xref:System.Web.HttpServerUtility.HtmlDecode%2A> uses <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=fullName> to decode strings.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  example:
  - "The following example decodes a string that has been HTML-encoded for transmission over HTTP. It decodes the supplied string named `EncodedString` which contains the text \"This is a &lt;Test String&gt;.\", and copies it into the string named `DecodedString` as \"This is a \\<Test String>.\".  \n  \n [!code-vb[Classic HttpServerUtility.HtmlDecode1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_1_1.vb)]\n [!code-cs[Classic HttpServerUtility.HtmlDecode1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_1_1.cs)]"
  syntax:
    content: public void HtmlDecode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "Stringa HTML da decodificare."
    - id: output
      type: System.IO.TextWriter
      description: "Il <xref:System.IO.TextWriter>flusso di output che contiene la stringa decodificata.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.HtmlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.HtmlEncode(System.String)
  id: HtmlEncode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: HtmlEncode(String)
  nameWithType: HttpServerUtility.HtmlEncode(String)
  fullName: System.Web.HttpServerUtility.HtmlEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Codifica in HTML una stringa e restituisce la stringa codificata."
  remarks: "HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML. For example, if a text string contains a less than sign (\\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag. When the characters are HTML encoded, they are converted to the strings `<` and `>`, which causes the browser to display the less than sign and greater than sign correctly.  \n  \n This method is a convenient way to access the <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName> method at run time from an ASP.NET application. Internally, this method uses <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName> to encode strings.  \n  \n In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property. In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.  \n  \n Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values."
  example:
  - "The following example shows how to HTML-encode a value that potentially codes unsafe code. The code resides in the code-behind file for a web page. The value to encode is hard-coded in this example only to simplify the example and show the type of value you might HTML-encode. Typically, you would HTML-encode a value that you received from the user or the request. `Result` refers to a `Literal` control.  \n  \n [!code-cs[System.Web.HttpServerUtility.HtmlEncode#1](~/add/codesnippet/csharp/m-system.web.httpserveru_10_1.cs)]\n [!code-vb[System.Web.HttpServerUtility.HtmlEncode#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_10_1.vb)]  \n  \n The next example is similar to the previous example except it shows how to HTML-encode a value from within a class that is not in the code-behind file.  \n  \n [!code-cs[System.Web.HttpServerUtility.HtmlEncode#2](~/add/codesnippet/csharp/m-system.web.httpserveru_10_2.cs)]\n [!code-vb[System.Web.HttpServerUtility.HtmlEncode#2](~/add/codesnippet/visualbasic/m-system.web.httpserveru_10_2.vb)]"
  syntax:
    content: public string HtmlEncode (string s);
    parameters:
    - id: s
      type: System.String
      description: "La stringa di testo da codificare."
    return:
      type: System.String
      description: "Testo codificato in HTML."
  overload: System.Web.HttpServerUtility.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)
  id: HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpServerUtility.HtmlEncode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.HtmlEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Codifica in HTML una stringa e invia l&quot;output risultante a un <xref:System.IO.TextWriter>flusso di output.</xref:System.IO.TextWriter>"
  remarks: "HTML encoding ensures that text will be correctly displayed in the browser, not interpreted by the browser as HTML. For example, if a text string contains a less than sign (\\<) or greater than sign (>), the browser would interpret these characters as an opening or closing bracket of an HTML tag. The HTML encoding of these two characters is `<` and `>`, respectively, which causes the browser to display the less than sign and greater than sign correctly.  \n  \n <xref:System.Web.HttpServerUtility.HtmlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName> method at run time from an ASP.NET application. Internally, <xref:System.Web.HttpServerUtility.HtmlEncode%2A> uses <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=fullName> to encode strings.  \n  \n To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class."
  example:
  - "The following example encodes a string for transmission by HTTP. It encodes the string named `TestString`, which contains the text \"This is a \\<Test String>.\", and copies it into the string named `EncodedString` as \"This is a &lt;Test String&gt;.\".  \n  \n [!code-vb[Classic HttpServerUtility.HtmlEncode1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_7_1.vb)]\n [!code-cs[Classic HttpServerUtility.HtmlEncode1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_7_1.cs)]"
  syntax:
    content: public void HtmlEncode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "Stringa da codificare."
    - id: output
      type: System.IO.TextWriter
      description: "Il <xref:System.IO.TextWriter>flusso di output che contiene la stringa codificata.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.MachineName
  id: MachineName
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: MachineName
  nameWithType: HttpServerUtility.MachineName
  fullName: System.Web.HttpServerUtility.MachineName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene il nome del computer server."
  remarks: ''
  example:
  - "The following example stores the server's computer name as a string variable.  \n  \n [!code-vb[Classic HttpServerUtility.MachineName Example#1](~/add/codesnippet/visualbasic/p-system.web.httpserveru_0_1.vb)]\n [!code-cs[Classic HttpServerUtility.MachineName Example#1](~/add/codesnippet/csharp/p-system.web.httpserveru_0_1.cs)]"
  syntax:
    content: public string MachineName { get; }
    return:
      type: System.String
      description: "Il nome del computer locale."
  overload: System.Web.HttpServerUtility.MachineName*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Impossibile trovare il nome del computer."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.MapPath(System.String)
  id: MapPath(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: MapPath(String)
  nameWithType: HttpServerUtility.MapPath(String)
  fullName: System.Web.HttpServerUtility.MapPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Restituisce il percorso del file fisico che corrisponde al percorso virtuale specificato."
  remarks: "If `path` is `null`, the MapPath method returns the full physical path of the directory that contains the current request for the path. The relative path does not need to specify an existing file or folder for this method to return a value. However, you cannot specify a path outside of the Web application.  \n  \n> [!IMPORTANT]\n>  The MapPath method potentially contains sensitive information about the hosting environment. The return value should not be displayed to users.  \n  \n A Web application that resides at `C:\\ExampleSites\\TestMapPath` would return the following results:  \n  \n|Request from|`path`|Returned value|  \n|------------------|------------|--------------------|  \n|RootLevelPage.aspx|`null`|C:\\ExampleSites\\TestMapPath|  \n|RootLevelPage.aspx|\"/DownOneLevel/DownLevelPage.aspx\"|C:\\ExampleSites\\TestMapPath\\DownOneLevel\\DownLevelPage.aspx|  \n|RootLevelPage.aspx|\"/NotRealFolder\"|C:\\ExampleSites\\TestMapPath\\NotRealFolder|  \n|RootLevelPage.aspx|\"../OutsideApplication\"|<xref:System.Web.HttpException>|  \n|/DownOneLevel/DownLevelPage.aspx|`null`|C:\\ExampleSites\\TestMapPath\\DownOneLevel|  \n|/DownOneLevel/DownLevelPage.aspx|\"../RootLevelPage.aspx\"|C:\\ExampleSites\\TestMapPath\\RootLevelPage.aspx|"
  example:
  - "The following example shows how to retrieve the physical file of a relative virtual path. The code resides in the code-behind file for a web page and utilizes the default `Server` object.  \n  \n [!code-cs[System.Web.HttpServerUtility.MapPath#1](~/add/codesnippet/csharp/m-system.web.httpserveru_5_1.cs)]\n [!code-vb[System.Web.HttpServerUtility.MapPath#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_5_1.vb)]  \n  \n The next example is similar to the previous example except it shows how to retrieve a physical path from within a class that is not in the code-behind file.  \n  \n [!code-cs[System.Web.HttpServerUtility.MapPath#2](~/add/codesnippet/csharp/m-system.web.httpserveru_5_2.cs)]\n [!code-vb[System.Web.HttpServerUtility.MapPath#2](~/add/codesnippet/visualbasic/m-system.web.httpserveru_5_2.vb)]"
  syntax:
    content: public string MapPath (string path);
    parameters:
    - id: path
      type: System.String
      description: "Percorso virtuale dell&quot;applicazione Web."
    return:
      type: System.String
      description: "Percorso fisico del file nel server Web che corrisponde a <code> path </code>."
  overload: System.Web.HttpServerUtility.MapPath*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=&quot;System.Web.HttpContext&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.ScriptTimeout
  id: ScriptTimeout
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: ScriptTimeout
  nameWithType: HttpServerUtility.ScriptTimeout
  fullName: System.Web.HttpServerUtility.ScriptTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene e imposta il valore di timeout della richiesta in secondi."
  remarks: "La proprietà ScriptTimeout può essere impostata nel file Web. config mediante l&quot;impostazione di `executionTimeout` attributo dell&quot;elemento. L&quot;impostazione del timeout a livello di codice con la proprietà ScriptTimeout ha la precedenza sull&quot;impostazione Web. config.      > [!NOTE] > Se si imposta la `debug` attributo dell&quot;elemento da `true` nel file Web. config, il valore di ScriptTimeout verrà ignorato."
  example:
  - "The following example sets the request time-out period to 60 seconds.  \n  \n [!code-vb[Classic HttpServerUtility.ScriptTimeout Example#1](~/add/codesnippet/visualbasic/p-system.web.httpserveru_1_1.vb)]\n [!code-cs[Classic HttpServerUtility.ScriptTimeout Example#1](~/add/codesnippet/csharp/p-system.web.httpserveru_1_1.cs)]"
  syntax:
    content: public int ScriptTimeout { get; set; }
    return:
      type: System.Int32
      description: "Impostazione del valore di timeout per le richieste."
  overload: System.Web.HttpServerUtility.ScriptTimeout*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current <xref href=&quot;System.Web.HttpContext&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il periodo di timeout è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o non può essere impostato."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Transfer(System.String)
  id: Transfer(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Transfer(String)
  nameWithType: HttpServerUtility.Transfer(String)
  fullName: System.Web.HttpServerUtility.Transfer(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Per la richiesta corrente, termina l&quot;esecuzione della corrente pagina e inizia l&quot;esecuzione di una nuova pagina usando il percorso URL della pagina."
  remarks: "La pagina trasferita deve essere un&quot;altra pagina. aspx. Ad esempio, un trasferimento a una pagina ASP o ASMX non è valido. Il metodo di trasferimento consente di mantenere il <xref:System.Web.HttpRequest.QueryString%2A>e <xref:System.Web.HttpRequest.Form%2A>raccolte.</xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.QueryString%2A>       Trasferimento chiamate <xref:System.Web.HttpResponse.End%2A>, che genera un <xref:System.Threading.ThreadAbortException>eccezione dopo il completamento.</xref:System.Threading.ThreadAbortException> </xref:System.Web.HttpResponse.End%2A>       ASP.NET non verifica che l&quot;utente corrente sia autorizzato a visualizzare la risorsa fornita dal metodo di trasferimento. Sebbene la logica di autenticazione e autorizzazione ASP.NET viene eseguito prima che venga chiamato il gestore di risorse, ASP.NET direttamente il gestore indicato dal metodo di trasferimento e non viene rieseguita la logica di autenticazione e autorizzazione per la nuova risorsa. Se i criteri di sicurezza dell&quot;applicazione richiedono che i client dispongano di autorizzazioni appropriate per accedere alla risorsa, l&quot;applicazione deve essere forzata o forniscono un meccanismo di controllo di accesso personalizzato.       È possibile forzare la nuova autorizzazione tramite il <xref:System.Web.HttpResponse.Redirect%2A>metodo anziché il metodo di trasferimento.</xref:System.Web.HttpResponse.Redirect%2A> Il <xref:System.Web.HttpResponse.Redirect%2A>metodo esegue un reindirizzamento sul lato client in cui il browser richiede la nuova risorsa.</xref:System.Web.HttpResponse.Redirect%2A> Poiché questo reindirizzamento è una nuova richiesta in ingresso nel sistema, è soggetto a in tutta la logica di autenticazione e autorizzazione di criteri di sicurezza di Internet Information Services (IIS) sia ASP.NET.       È possibile verificare che l&quot;utente disponga dell&quot;autorizzazione per visualizzare la risorsa incorporando un metodo di autorizzazione personalizzato che utilizza il <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metodo prima che l&quot;applicazione chiama il metodo di trasferimento.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  syntax:
    content: public void Transfer (string path);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso URL della nuova pagina sul server da eseguire."
  overload: System.Web.HttpServerUtility.Transfer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)
  id: Transfer(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Transfer(String,Boolean)
  nameWithType: HttpServerUtility.Transfer(String,Boolean)
  fullName: System.Web.HttpServerUtility.Transfer(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Termina l&quot;esecuzione della pagina corrente e avvia l&quot;esecuzione di una nuova pagina usando il percorso URL della pagina. Specifica se cancellare le <> </> *> e <> </> *> raccolte."
  remarks: "La pagina trasferita deve essere un&quot;altra pagina. aspx. Ad esempio, un trasferimento a una pagina ASP o ASMX non è valido.       Trasferimento chiamate <xref:System.Web.HttpResponse.End%2A>, che genera un <xref:System.Threading.ThreadAbortException>eccezione dopo il completamento.</xref:System.Threading.ThreadAbortException> </xref:System.Web.HttpResponse.End%2A>       Se si imposta la `preserveForm` parametro `true`, la pagina di destinazione saranno in grado di accedere allo stato di visualizzazione della pagina precedente utilizzando il <xref:System.Web.UI.Page.PreviousPage%2A>proprietà.</xref:System.Web.UI.Page.PreviousPage%2A>       Per motivi di sicurezza, è necessario mantenere il `enableViewStateMac` attributo impostato su `true`. ASP.NET non verifica che l&quot;utente corrente sia autorizzato a visualizzare la risorsa fornita dal metodo di trasferimento. Sebbene la logica di autenticazione e autorizzazione ASP.NET viene eseguito prima che venga chiamato il gestore di risorse, ASP.NET direttamente il gestore indicato dal metodo di trasferimento e non viene rieseguita la logica di autenticazione e autorizzazione per la nuova risorsa. Se i criteri di sicurezza dell&quot;applicazione richiedono che i client dispongano di autorizzazioni appropriate per accedere alla risorsa, l&quot;applicazione deve essere forzata o forniscono un meccanismo di controllo di accesso personalizzato.       È possibile forzare la nuova autorizzazione tramite il <xref:System.Web.HttpResponse.Redirect%2A>metodo anziché il metodo di trasferimento.</xref:System.Web.HttpResponse.Redirect%2A> Il <xref:System.Web.HttpResponse.Redirect%2A>metodo esegue un reindirizzamento sul lato client in cui il browser richiede la nuova risorsa.</xref:System.Web.HttpResponse.Redirect%2A> Poiché questo reindirizzamento è una nuova richiesta in ingresso nel sistema, è soggetto a in tutta la logica di autenticazione e autorizzazione di criteri di sicurezza di Internet Information Services (IIS) sia ASP.NET.       È possibile verificare che l&quot;utente disponga dell&quot;autorizzazione per visualizzare la risorsa incorporando un metodo di autorizzazione personalizzato che utilizza il <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metodo prima che l&quot;applicazione chiama il metodo di trasferimento.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  example:
  - "The following example executes a new page in the same directory as the current page.  \n  \n [!code-cs[Classic HttpServerUtility.Transfer Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_3_1.cs)]\n [!code-vb[Classic HttpServerUtility.Transfer Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_3_1.vb)]"
  syntax:
    content: public void Transfer (string path, bool preserveForm);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso URL della nuova pagina sul server da eseguire."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per mantenere il <> </> *> e <> </> *> gli insiemi. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Transfer*
  exceptions:
  - type: System.ApplicationException
    commentId: T:System.ApplicationException
    description: "La richiesta della pagina corrente è un callback."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)
  id: Transfer(System.Web.IHttpHandler,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: Transfer(IHttpHandler,Boolean)
  nameWithType: HttpServerUtility.Transfer(IHttpHandler,Boolean)
  fullName: System.Web.HttpServerUtility.Transfer(IHttpHandler,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Termina l&quot;esecuzione della pagina corrente e avvia l&quot;esecuzione di una nuova richiesta utilizzando un gestore HTTP personalizzato che implementa il <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> l&quot;interfaccia e specifica se cancellare le <> </> *> e <> </> *> raccolte."
  remarks: "È possibile scrivere gestori HTTP personalizzati per elaborare i tipi predefiniti specifici di richieste HTTP in qualsiasi linguaggio compatibile con la lingua specifica CLS (Common). Il codice eseguibile definito nelle classi del gestore HTTP anziché le pagine ASP (noto anche come ASP classico) convenzionale o delle pagine ASP.NET risponde a queste richieste specifiche. I gestori HTTP consentono l&quot;interazione con i servizi di risposta di un server Web che esegue Internet Information Services (IIS) e la richiesta di basso livello e forniscono funzionalità simili alle estensioni ISAPI ma con un modello di programmazione più semplice.       Se si imposta la `preserveForm` parametro `true`, la pagina di destinazione saranno in grado di accedere allo stato di visualizzazione della pagina precedente utilizzando il <xref:System.Web.UI.Page.PreviousPage%2A>proprietà.</xref:System.Web.UI.Page.PreviousPage%2A>       Per motivi di sicurezza, è necessario mantenere il `enableViewStateMac` attributo impostato su `true`. ASP.NET non verifica che l&quot;utente corrente è autorizzato a visualizzare la risorsa fornita dal <xref:System.Web.HttpServerUtility.Transfer%2A>metodo.</xref:System.Web.HttpServerUtility.Transfer%2A> Anche se la logica di autenticazione e autorizzazione ASP.NET viene eseguito prima che venga chiamato il gestore di risorse, ASP.NET direttamente il gestore indicato dal metodo di trasferimento e non viene rieseguita la logica di autenticazione e autorizzazione per la nuova risorsa. Se i criteri di sicurezza per l&quot;applicazione richiedono che i client dispongano di autorizzazioni appropriate per accedere alla risorsa, l&quot;applicazione deve essere forzata o forniscono un meccanismo di controllo di accesso personalizzato.       È possibile forzare la nuova autorizzazione tramite il <xref:System.Web.HttpResponse.Redirect%2A>metodo anziché il metodo di trasferimento.</xref:System.Web.HttpResponse.Redirect%2A> Il <xref:System.Web.HttpResponse.Redirect%2A>metodo esegue un reindirizzamento sul lato client in cui il browser richiede la nuova risorsa.</xref:System.Web.HttpResponse.Redirect%2A> Poiché questo reindirizzamento è una nuova richiesta in ingresso nel sistema, è soggetto a in tutta la logica di autenticazione e autorizzazione di criteri di sicurezza di IIS e ASP.NET.       È possibile verificare che l&quot;utente disponga dell&quot;autorizzazione per visualizzare la risorsa incorporando un metodo di autorizzazione personalizzato che utilizza il <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>metodo prima che l&quot;applicazione chiama il metodo di trasferimento.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>"
  syntax:
    content: public void Transfer (System.Web.IHttpHandler handler, bool preserveForm);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "Il gestore HTTP che implementa il <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> per trasferire la richiesta corrente."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per mantenere il <> </> *> e <> </> *> gli insiemi. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to clear the <>*> and <>*> collections."
  overload: System.Web.HttpServerUtility.Transfer*
  exceptions:
  - type: System.ApplicationException
    commentId: T:System.ApplicationException
    description: "La richiesta della pagina corrente è un callback."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.TransferRequest(System.String)
  id: TransferRequest(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: TransferRequest(String)
  nameWithType: HttpServerUtility.TransferRequest(String)
  fullName: System.Web.HttpServerUtility.TransferRequest(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Esegue un&quot;esecuzione asincrona dell&quot;URL specificato."
  remarks: "Overload di questo metodo chiama il <xref:System.Web.HttpServerUtility.TransferRequest%2A>overload con il `preserveForm` parametro impostato su `false`, `method` parametro impostato su `null`, il `headers` parametro impostato su `null`e `preserveUser` parametro impostato su `true`.</xref:System.Web.HttpServerUtility.TransferRequest%2A> Per ulteriori informazioni, vedere la sezione &quot;Osservazioni&quot; in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>rapporto di overload.</xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>"
  syntax:
    content: public void TransferRequest (string path);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso URL della nuova pagina sul server da eseguire."
  overload: System.Web.HttpServerUtility.TransferRequest*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La richiesta è necessaria la modalità pipeline integrata di [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Il server non è disponibile per gestire la richiesta."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> path </code> parametro non è valido."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)
  id: TransferRequest(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: TransferRequest(String,Boolean)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Esegue un&quot;esecuzione asincrona dell&quot;URL specificato e mantiene i parametri di stringa di query."
  remarks: "Questo overload chiama il <xref:System.Web.HttpServerUtility.TransferRequest%2A>overload con il `preserveForm` parametro impostato sul valore passato, il `method` parametro impostato su `null`, `headers` parametro impostato su `null`e il `preserveUser` parametro impostato su `true`.</xref:System.Web.HttpServerUtility.TransferRequest%2A> Per ulteriori informazioni, vedere la sezione &quot;Osservazioni&quot; in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>.</xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>       Oggetto TransferRequest è stato introdotto in .NET Framework versione 3.5.  Per ulteriori informazioni, vedere [versioni e dipendenze](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void TransferRequest (string path, bool preserveForm);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso URL della nuova pagina sul server da eseguire."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per mantenere il <> </> *> insieme. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per cancellare il <> </> *> insieme."
  overload: System.Web.HttpServerUtility.TransferRequest*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La richiesta è necessaria la modalità pipeline integrata di [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Il server non è disponibile per gestire la richiesta."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> path </code> parametro non è valido."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)
  id: TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: TransferRequest(String,Boolean,String,NameValueCollection)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Esegue un&quot;esecuzione asincrona dell&quot;URL specificato usando il metodo HTTP specificato e le intestazioni."
  remarks: "Questo metodo viene utilizzato durante l&quot;esecuzione con la modalità pipeline integrata in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] per consentire l&quot;elaborazione della richiesta essere trasferito da un tipo di risorsa a un altro durante l&quot;esecuzione della richiesta di destinazione con il contesto di richiesta corretto. Ad esempio, è possibile utilizzare il metodo di TransferRequest per trasferire una richiesta per una pagina ASPX a una richiesta per una pagina XML.       Il metodo TransferRequest esegue un&quot;esecuzione figlio asincrona dell&quot;URL specificato con le condizioni seguenti: - se il `path` parametro specifica una stringa di query, verrà considerato come la nuova stringa di query. Se nessuna stringa di query è inclusa, la stringa di query della richiesta sarà utilizzata nuovamente.      -Se il `method` viene specificato, verrà utilizzato. Se è `null`, verrà utilizzato il metodo HTTP della richiesta originale.      -Se il `preserveForm` parametro `true`, il corpo dell&quot;entità corrente della richiesta sarà disponibile per la richiesta di destinazione. In questo modo gli invii di form e carica per essere trasferita.      -Se l&quot;identità dell&quot;utente è attualmente impostata nella richiesta originale, l&quot;identità verrà trasferito alla nuova richiesta. In questo modo le richieste autenticate di riutilizzare il risultato dell&quot;autenticazione per la nuova richiesta. Se non si desidera che l&quot;utente da trasferire, impostare l&quot;utente `null` nella richiesta originale prima del trasferimento.      -Se il `headers` viene specificato, la nuova richiesta verrà eseguita con le intestazioni specificate. Questo può essere utilizzato per modificare le intestazioni di richiesta e i cookie per la nuova richiesta o aggiunta un&quot;intestazione speciale che specifica in cui è stata ricevuta la richiesta originale.           Questo metodo chiama il <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29>overload del metodo con il `preserveUser` parametro impostato su `true`.</xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29>"
  syntax:
    content: public void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso URL della nuova pagina sul server da eseguire."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per mantenere il <> </> *> insieme. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per cancellare il <> </> *> insieme."
    - id: method
      type: System.String
      description: "Il metodo HTTP da utilizzare nell&quot;esecuzione della nuova richiesta."
    - id: headers
      type: System.Collections.Specialized.NameValueCollection
      description: "Oggetto <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> delle intestazioni di richiesta per la nuova richiesta."
  overload: System.Web.HttpServerUtility.TransferRequest*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La richiesta richiede [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] in esecuzione in modalità integrata."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Il server non è disponibile per gestire la richiesta."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> path </code> parametro non è valido."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)
  id: TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Esegue un&quot;esecuzione asincrona dell&quot;URL specificato utilizzando il metodo HTTP specificato, le intestazioni e percorso e, facoltativamente, mantiene i valori del form e l&quot;identità dell&quot;utente."
  remarks: "Per ulteriori informazioni, vedere la sezione &quot;Osservazioni&quot; in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>.</xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>"
  syntax:
    content: public void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers, bool preserveUser);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso."
    - id: preserveForm
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per mantenere il <> </> *> insieme. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per cancellare il <> </> *> insieme."
    - id: method
      type: System.String
      description: "Il metodo HTTP da utilizzare nella nuova richiesta."
    - id: headers
      type: System.Collections.Specialized.NameValueCollection
      description: "Oggetto <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> oggetto che contiene le intestazioni di richiesta per la nuova richiesta."
    - id: preserveUser
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per mantenere l&quot;identità dell&quot;utente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Altri overload del metodo di questo metodo chiama questo overload con il parametro impostato su <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpServerUtility.TransferRequest*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "La richiesta è necessaria la modalità pipeline integrata di [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Il server non è disponibile per gestire la richiesta."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> path </code> parametro non è valido."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlDecode(System.String)
  id: UrlDecode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlDecode(String)
  nameWithType: HttpServerUtility.UrlDecode(String)
  fullName: System.Web.HttpServerUtility.UrlDecode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Decodifica una stringa URL e restituisce la stringa decodificata."
  remarks: "La codifica URL assicura che tutti i browser verranno trasmesso correttamente il testo nelle stringhe URL. Caratteri, ad esempio un punto interrogativo (?), contrassegnare di e commerciale (&), barra (/) e spazi potrebbero essere troncati o danneggiati da alcuni browser. Di conseguenza, questi caratteri devono essere codificati `<a>` tag o in stringhe di query in cui le stringhe possono essere nuovamente inviate in una stringa di richiesta da un browser.       Questo metodo è un modo pratico per accedere il <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>metodo in fase di esecuzione da un&quot;applicazione ASP.NET.</xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName> Internamente, questo metodo utilizza <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>per decodificare stringhe.</xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>       Nel file code-behind per una pagina web ASP.NET, accedere a un&quot;istanza di <xref:System.Web.HttpServerUtility>classe tramite il `Server` proprietà.</xref:System.Web.HttpServerUtility> In una classe che non è in un file code-behind, utilizzare `HttpContext.Current.Server` per accedere a un&quot;istanza della <xref:System.Web.HttpServerUtility>classe.</xref:System.Web.HttpServerUtility>       Di fuori di un&quot;applicazione web, utilizzare la <xref:System.Net.WebUtility>classe per codificare o decodificare i valori.</xref:System.Net.WebUtility>"
  example:
  - "The following example shows how to URL-decode a value that is retrieved from the query string. The code resides in the code-behind file for a web page. `ReturnPage` refers to a `HyperLink` control.  \n  \n [!code-vb[System.Web.HttpServerUtility.UrlDecode#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_9_1.vb)]\n [!code-cs[System.Web.HttpServerUtility.UrlDecode#1](~/add/codesnippet/csharp/m-system.web.httpserveru_9_1.cs)]  \n  \n The next example is similar to the previous example except it shows how to URL-decode a value from within a class that is not in the code-behind file.  \n  \n [!code-cs[System.Web.HttpServerUtility.UrlDecode#2](~/add/codesnippet/csharp/m-system.web.httpserveru_9_2.cs)]\n [!code-vb[System.Web.HttpServerUtility.UrlDecode#2](~/add/codesnippet/visualbasic/m-system.web.httpserveru_9_2.vb)]"
  syntax:
    content: public string UrlDecode (string s);
    parameters:
    - id: s
      type: System.String
      description: "La stringa di testo da decodificare."
    return:
      type: System.String
      description: "Testo decodificato."
  overload: System.Web.HttpServerUtility.UrlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)
  id: UrlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlDecode(String,TextWriter)
  nameWithType: HttpServerUtility.UrlDecode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.UrlDecode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Decodifica una stringa HTML ricevuta in un URL e invia l&quot;output per il valore risultante un <xref:System.IO.TextWriter>flusso di output.</xref:System.IO.TextWriter>"
  remarks: "La codifica URL assicura che tutti i browser verranno trasmesso correttamente il testo nelle stringhe URL. Caratteri, ad esempio un punto interrogativo (?), contrassegnare di e commerciale (&), barra (/) e spazi potrebbero essere troncati o danneggiati da alcuni browser. Di conseguenza, questi caratteri devono essere codificati `<a>` tag o in stringhe di query in cui le stringhe possono essere nuovamente inviate in una stringa di richiesta da un browser.       <xref:System.Web.HttpServerUtility.UrlDecode%2A>è un modo pratico per accedere il <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>metodo in fase di esecuzione da un&quot;applicazione ASP.NET.</xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName></xref:System.Web.HttpServerUtility.UrlDecode%2A> Internamente, <xref:System.Web.HttpServerUtility.UrlDecode%2A>utilizza <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName>per decodificare stringhe.</xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=fullName> </xref:System.Web.HttpServerUtility.UrlDecode%2A>       Per codificare o decodificare i valori di fuori di un&quot;applicazione web, utilizzare la <xref:System.Net.WebUtility>classe.</xref:System.Net.WebUtility>"
  example:
  - "The following example decodes the string named `EncodedString` (received in a URL) into the string named `DecodedString`.  \n  \n [!code-vb[Classic HttpServerUtility.UrlDecode1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_11_1.vb)]\n [!code-cs[Classic HttpServerUtility.UrlDecode1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_11_1.cs)]"
  syntax:
    content: public void UrlDecode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "Stringa HTML da decodificare."
    - id: output
      type: System.IO.TextWriter
      description: "Il <xref:System.IO.TextWriter>flusso di output che contiene la stringa decodificata.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.UrlDecode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlEncode(System.String)
  id: UrlEncode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlEncode(String)
  nameWithType: HttpServerUtility.UrlEncode(String)
  fullName: System.Web.HttpServerUtility.UrlEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Codifica una stringa in URL e restituisce la stringa codificata."
  remarks: "La codifica URL assicura che tutti i browser verranno trasmesso correttamente il testo nelle stringhe URL. Caratteri, ad esempio un punto interrogativo (?), contrassegnare di e commerciale (&), barra (/) e spazi potrebbero essere troncati o danneggiati da alcuni browser. Di conseguenza, questi caratteri devono essere codificati `<a>` tag o in stringhe di query in cui le stringhe possono essere nuovamente inviate in una stringa di richiesta da un browser.       Questo metodo è un modo pratico per accedere il <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>metodo in fase di esecuzione da un&quot;applicazione ASP.NET.</xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName> Internamente, questo metodo utilizza <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>per codificare le stringhe.</xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>       Nel file code-behind per una pagina web ASP.NET, accedere a un&quot;istanza di <xref:System.Web.HttpServerUtility>classe tramite il `Server` proprietà.</xref:System.Web.HttpServerUtility> In una classe che non è in un file code-behind, utilizzare `HttpContext.Current.Server` per accedere a un&quot;istanza della <xref:System.Web.HttpServerUtility>classe.</xref:System.Web.HttpServerUtility>       Di fuori di un&quot;applicazione web, utilizzare la <xref:System.Net.WebUtility>classe per codificare o decodificare i valori.</xref:System.Net.WebUtility>"
  example:
  - "The following example shows how to URL-encode a value that is used as a query string value of a hyperlink. The code resides in the code-behind file for a web page. The value to encode is hard-coded in this example only to simplify the example and show the type of value you might URL-encode. Typically, you would URL-encode a value that you received from the user or the request. `NextPage` refers to a `HyperLink` control.  \n  \n [!code-cs[System.Web.HttpServerUtility.UrlEncode#1](~/add/codesnippet/csharp/m-system.web.httpserveru_0_1.cs)]\n [!code-vb[System.Web.HttpServerUtility.UrlEncode#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_0_1.vb)]  \n  \n The next example is similar to the previous example except it shows how to URL-encode a value from within a class that is not in the code-behind file.  \n  \n [!code-cs[System.Web.HttpServerUtility.UrlEncode#2](~/add/codesnippet/csharp/m-system.web.httpserveru_0_2.cs)]\n [!code-vb[System.Web.HttpServerUtility.UrlEncode#2](~/add/codesnippet/visualbasic/m-system.web.httpserveru_0_2.vb)]"
  syntax:
    content: public string UrlEncode (string s);
    parameters:
    - id: s
      type: System.String
      description: "Il testo per la codifica URL."
    return:
      type: System.String
      description: "Testo codificato in URL."
  overload: System.Web.HttpServerUtility.UrlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)
  id: UrlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlEncode(String,TextWriter)
  nameWithType: HttpServerUtility.UrlEncode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.UrlEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Codifica una stringa in URL e invia l&quot;output risultante a un <xref:System.IO.TextWriter>flusso di output.</xref:System.IO.TextWriter>"
  remarks: "La codifica URL assicura che tutti i browser verranno trasmesso correttamente il testo nelle stringhe URL. Caratteri, ad esempio un punto interrogativo (?), contrassegnare di e commerciale (&), barra (/) e spazi potrebbero essere troncati o danneggiati da alcuni browser. Di conseguenza, questi caratteri devono essere codificati `<a>` tag o in stringhe di query in cui le stringhe possono essere nuovamente inviate in una stringa di richiesta da un browser.       <xref:System.Web.HttpServerUtility.UrlEncode%2A>è un modo pratico per accedere il <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>metodo in fase di esecuzione da un&quot;applicazione ASP.NET.</xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName></xref:System.Web.HttpServerUtility.UrlEncode%2A> Internamente, <xref:System.Web.HttpServerUtility.UrlEncode%2A>utilizza <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName>per codificare le stringhe.</xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=fullName> </xref:System.Web.HttpServerUtility.UrlEncode%2A>       Per codificare o decodificare i valori di fuori di un&quot;applicazione web, utilizzare la <xref:System.Net.WebUtility>classe.</xref:System.Net.WebUtility>"
  example:
  - "The following example encodes a string for transmission by HTTP. It encodes the string named `TestString`, which contains the text \"This is a \\<Test String>.\", and copies it into the string named `EncodedString` as \"This+is+a+%3cTest+String%3e.\".  \n  \n [!code-cs[Classic HttpServerUtility.UrlEncode1 Example#1](~/add/codesnippet/csharp/m-system.web.httpserveru_13_1.cs)]\n [!code-vb[Classic HttpServerUtility.UrlEncode1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpserveru_13_1.vb)]"
  syntax:
    content: public void UrlEncode (string s, System.IO.TextWriter output);
    parameters:
    - id: s
      type: System.String
      description: "La stringa di testo da codificare."
    - id: output
      type: System.IO.TextWriter
      description: "Il <xref:System.IO.TextWriter>flusso di output che contiene la stringa codificata.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpServerUtility.UrlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlPathEncode(System.String)
  id: UrlPathEncode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlPathEncode(String)
  nameWithType: HttpServerUtility.UrlPathEncode(String)
  fullName: System.Web.HttpServerUtility.UrlPathEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Non utilizzare; progettato solo per compatibilità browser. Utilizzare <xref:System.Web.HttpServerUtility.UrlEncode*>.</xref:System.Web.HttpServerUtility.UrlEncode*>"
  syntax:
    content: public string UrlPathEncode (string s);
    parameters:
    - id: s
      type: System.String
      description: "Il testo per la codifica URL."
    return:
      type: System.String
      description: "Testo codificato in URL."
  overload: System.Web.HttpServerUtility.UrlPathEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlTokenDecode(System.String)
  id: UrlTokenDecode(System.String)
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlTokenDecode(String)
  nameWithType: HttpServerUtility.UrlTokenDecode(String)
  fullName: System.Web.HttpServerUtility.UrlTokenDecode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Decodifica un token di stringa URL per la matrice di byte equivalente con cifre base 64."
  remarks: "Il metodo UrlTokenDecode converte un token di stringa URL, che codifica dati binari come cifre base 64, nella relativa rappresentazione di matrice di byte equivalente. Utilizzare il metodo UrlTokenDecode per decodificare i token trasmessi nell&quot;URL e codificati tramite <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>.</xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>       Il metodo UrlTokenDecode restituirà una matrice di byte vuota se il `input` parametro ha una lunghezza minore di&1;."
  syntax:
    content: public static byte[] UrlTokenDecode (string input);
    parameters:
    - id: input
      type: System.String
      description: "Il token di stringa URL da decodificare."
    return:
      type: System.Byte[]
      description: "Matrice di byte contenente il token di stringa URL decodificato."
  overload: System.Web.HttpServerUtility.UrlTokenDecode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore di <code> input </code> parametro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])
  id: UrlTokenEncode(System.Byte[])
  parent: System.Web.HttpServerUtility
  langs:
  - csharp
  name: UrlTokenEncode(Byte[])
  nameWithType: HttpServerUtility.UrlTokenEncode(Byte[])
  fullName: System.Web.HttpServerUtility.UrlTokenEncode(Byte[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Codifica una matrice di byte nella relativa rappresentazione di stringa equivalente usando Base64 cifre, indicate per la trasmissione nell&quot;URL."
  remarks: "Il metodo UrlTokenEncode converte una matrice di byte in una rappresentazione di stringa equivalente codificata con cifre base 64. Il token di stringa risultante può essere trasmesso nell&quot;URL.       Il UrlTokenEncode restituirà una stringa vuota se il `input` parametro ha una lunghezza minore di&1;."
  syntax:
    content: public static string UrlTokenEncode (byte[] input);
    parameters:
    - id: input
      type: System.Byte[]
      description: "Matrice di byte da codificare."
    return:
      type: System.String
      description: "Stringa che contiene token codificata se la matrice di byte *lunghezza* è maggiore di uno; in caso contrario, una stringa vuota (&quot;&quot;)."
  overload: System.Web.HttpServerUtility.UrlTokenEncode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore di <code> input </code> parametro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ApplicationException
  parent: System
  isExternal: false
  name: ApplicationException
  nameWithType: ApplicationException
  fullName: System.ApplicationException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Web.HttpServerUtility.ClearError
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: ClearError()
  nameWithType: HttpServerUtility.ClearError()
  fullName: System.Web.HttpServerUtility.ClearError()
- uid: System.Web.HttpServerUtility.CreateObject(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObject(String)
  nameWithType: HttpServerUtility.CreateObject(String)
  fullName: System.Web.HttpServerUtility.CreateObject(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpServerUtility.CreateObject(System.Type)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObject(Type)
  nameWithType: HttpServerUtility.CreateObject(Type)
  fullName: System.Web.HttpServerUtility.CreateObject(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObjectFromClsid(String)
  nameWithType: HttpServerUtility.CreateObjectFromClsid(String)
  fullName: System.Web.HttpServerUtility.CreateObjectFromClsid(String)
- uid: System.Web.HttpServerUtility.Execute(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(String)
  nameWithType: HttpServerUtility.Execute(String)
  fullName: System.Web.HttpServerUtility.Execute(String)
- uid: System.Web.HttpServerUtility.Execute(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(String,Boolean)
  nameWithType: HttpServerUtility.Execute(String,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(String,TextWriter)
  nameWithType: HttpServerUtility.Execute(String,TextWriter)
  fullName: System.Web.HttpServerUtility.Execute(String,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(String,TextWriter,Boolean)
  nameWithType: HttpServerUtility.Execute(String,TextWriter,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(String,TextWriter,Boolean)
- uid: System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute(IHttpHandler,TextWriter,Boolean)
  nameWithType: HttpServerUtility.Execute(IHttpHandler,TextWriter,Boolean)
  fullName: System.Web.HttpServerUtility.Execute(IHttpHandler,TextWriter,Boolean)
- uid: System.Web.IHttpHandler
  parent: System.Web
  isExternal: false
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
- uid: System.Web.HttpServerUtility.GetLastError
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: GetLastError()
  nameWithType: HttpServerUtility.GetLastError()
  fullName: System.Web.HttpServerUtility.GetLastError()
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.HttpServerUtility.HtmlDecode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlDecode(String)
  nameWithType: HttpServerUtility.HtmlDecode(String)
  fullName: System.Web.HttpServerUtility.HtmlDecode(String)
- uid: System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpServerUtility.HtmlDecode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.HtmlDecode(String,TextWriter)
- uid: System.Web.HttpServerUtility.HtmlEncode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlEncode(String)
  nameWithType: HttpServerUtility.HtmlEncode(String)
  fullName: System.Web.HttpServerUtility.HtmlEncode(String)
- uid: System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpServerUtility.HtmlEncode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.HtmlEncode(String,TextWriter)
- uid: System.Web.HttpServerUtility.MachineName
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: MachineName
  nameWithType: HttpServerUtility.MachineName
  fullName: System.Web.HttpServerUtility.MachineName
- uid: System.Web.HttpServerUtility.MapPath(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: MapPath(String)
  nameWithType: HttpServerUtility.MapPath(String)
  fullName: System.Web.HttpServerUtility.MapPath(String)
- uid: System.Web.HttpServerUtility.ScriptTimeout
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: ScriptTimeout
  nameWithType: HttpServerUtility.ScriptTimeout
  fullName: System.Web.HttpServerUtility.ScriptTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpServerUtility.Transfer(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Transfer(String)
  nameWithType: HttpServerUtility.Transfer(String)
  fullName: System.Web.HttpServerUtility.Transfer(String)
- uid: System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Transfer(String,Boolean)
  nameWithType: HttpServerUtility.Transfer(String,Boolean)
  fullName: System.Web.HttpServerUtility.Transfer(String,Boolean)
- uid: System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Transfer(IHttpHandler,Boolean)
  nameWithType: HttpServerUtility.Transfer(IHttpHandler,Boolean)
  fullName: System.Web.HttpServerUtility.Transfer(IHttpHandler,Boolean)
- uid: System.Web.HttpServerUtility.TransferRequest(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest(String)
  nameWithType: HttpServerUtility.TransferRequest(String)
  fullName: System.Web.HttpServerUtility.TransferRequest(String)
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest(String,Boolean)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean)
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest(String,Boolean,String,NameValueCollection)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  nameWithType: HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
  fullName: System.Web.HttpServerUtility.TransferRequest(String,Boolean,String,NameValueCollection,Boolean)
- uid: System.Web.HttpServerUtility.UrlDecode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlDecode(String)
  nameWithType: HttpServerUtility.UrlDecode(String)
  fullName: System.Web.HttpServerUtility.UrlDecode(String)
- uid: System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlDecode(String,TextWriter)
  nameWithType: HttpServerUtility.UrlDecode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.UrlDecode(String,TextWriter)
- uid: System.Web.HttpServerUtility.UrlEncode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlEncode(String)
  nameWithType: HttpServerUtility.UrlEncode(String)
  fullName: System.Web.HttpServerUtility.UrlEncode(String)
- uid: System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlEncode(String,TextWriter)
  nameWithType: HttpServerUtility.UrlEncode(String,TextWriter)
  fullName: System.Web.HttpServerUtility.UrlEncode(String,TextWriter)
- uid: System.Web.HttpServerUtility.UrlPathEncode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlPathEncode(String)
  nameWithType: HttpServerUtility.UrlPathEncode(String)
  fullName: System.Web.HttpServerUtility.UrlPathEncode(String)
- uid: System.Web.HttpServerUtility.UrlTokenDecode(System.String)
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlTokenDecode(String)
  nameWithType: HttpServerUtility.UrlTokenDecode(String)
  fullName: System.Web.HttpServerUtility.UrlTokenDecode(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlTokenEncode(Byte[])
  nameWithType: HttpServerUtility.UrlTokenEncode(Byte[])
  fullName: System.Web.HttpServerUtility.UrlTokenEncode(Byte[])
- uid: System.Web.HttpServerUtility.ClearError*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: ClearError
  nameWithType: HttpServerUtility.ClearError
- uid: System.Web.HttpServerUtility.CreateObject*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObject
  nameWithType: HttpServerUtility.CreateObject
- uid: System.Web.HttpServerUtility.CreateObjectFromClsid*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: CreateObjectFromClsid
  nameWithType: HttpServerUtility.CreateObjectFromClsid
- uid: System.Web.HttpServerUtility.Execute*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Execute
  nameWithType: HttpServerUtility.Execute
- uid: System.Web.HttpServerUtility.GetLastError*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: GetLastError
  nameWithType: HttpServerUtility.GetLastError
- uid: System.Web.HttpServerUtility.HtmlDecode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlDecode
  nameWithType: HttpServerUtility.HtmlDecode
- uid: System.Web.HttpServerUtility.HtmlEncode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: HtmlEncode
  nameWithType: HttpServerUtility.HtmlEncode
- uid: System.Web.HttpServerUtility.MachineName*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: MachineName
  nameWithType: HttpServerUtility.MachineName
- uid: System.Web.HttpServerUtility.MapPath*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: MapPath
  nameWithType: HttpServerUtility.MapPath
- uid: System.Web.HttpServerUtility.ScriptTimeout*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: ScriptTimeout
  nameWithType: HttpServerUtility.ScriptTimeout
- uid: System.Web.HttpServerUtility.Transfer*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: Transfer
  nameWithType: HttpServerUtility.Transfer
- uid: System.Web.HttpServerUtility.TransferRequest*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: TransferRequest
  nameWithType: HttpServerUtility.TransferRequest
- uid: System.Web.HttpServerUtility.UrlDecode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlDecode
  nameWithType: HttpServerUtility.UrlDecode
- uid: System.Web.HttpServerUtility.UrlEncode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlEncode
  nameWithType: HttpServerUtility.UrlEncode
- uid: System.Web.HttpServerUtility.UrlPathEncode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlPathEncode
  nameWithType: HttpServerUtility.UrlPathEncode
- uid: System.Web.HttpServerUtility.UrlTokenDecode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlTokenDecode
  nameWithType: HttpServerUtility.UrlTokenDecode
- uid: System.Web.HttpServerUtility.UrlTokenEncode*
  parent: System.Web.HttpServerUtility
  isExternal: false
  name: UrlTokenEncode
  nameWithType: HttpServerUtility.UrlTokenEncode
