### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription
  id: WebPartDescription
  children:
  - System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  - System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  - System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  - System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  langs:
  - csharp
  name: WebPartDescription
  nameWithType: WebPartDescription
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription
  type: Class
  summary: "Fornisce informazioni su un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo che è possibile visualizzare in un catalogo di controlli Web part senza dover creare un&quot;istanza del controllo."
  remarks: "Quando <xref:System.Web.UI.WebControls.WebParts.WebPart>i controlli vengono visualizzati in un catalogo di controlli che gli utenti possono aggiungere a una pagina, sono necessarie delle informazioni di base su ogni controllo.</xref:System.Web.UI.WebControls.WebParts.WebPart> Ad esempio, è utile disporre di un titolo per il controllo e una descrizione, in modo che quando gli utenti visualizzano un catalogo dispongano di informazioni sufficienti per decidere se aggiungere un controllo alla pagina. Tuttavia, un catalogo di <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli possono potenzialmente contenere molti controlli, e può compromettere le prestazioni di un&quot;applicazione se un&quot;istanza di ogni <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo deve essere creato per estrarre le informazioni da visualizzare nel catalogo.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>       La classe WebPartDescription esiste in modo che non è necessario creare un&quot;istanza di un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo da recuperare le informazioni relative al controllo che viene visualizzato in un catalogo di controlli.</xref:System.Web.UI.WebControls.WebParts.WebPart> Il set di controlli Web part è utilizzato anche un oggetto WebPartDescription in combinazione con i vari <xref:System.Web.UI.WebControls.WebParts.CatalogPart>la modalità di visualizzazione di controlli quando una pagina si trova nel catalogo.</xref:System.Web.UI.WebControls.WebParts.CatalogPart>       La classe WebPartDescription dispone di due overload del costruttore, uno che accetta un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo come parametro quando è disponibile un&quot;istanza (la <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A>costruttore), e uno che accetta più stringhe contenenti informazioni sul controllo come parametri (il <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A>costruttore).</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       La classe di WebPartDescription include inoltre diverse proprietà progettate per contenere le informazioni di descrizione per <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli.</xref:System.Web.UI.WebControls.WebParts.WebPart> Nella tabella seguente sono riepilogate le proprietà di WebPartDescription e quali proprietà uno corrisponde a una <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPart>      | Proprietà descrizione | Proprietà controllo parte correlata |   |--------------------------|-----------------------------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A>| <xref:System.Web.UI.Control.ID%2A>|   | <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A>| <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>|   | <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A>| <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>|   | <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A>| <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>|</xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A></xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A></xref:System.Web.UI.WebControls.WebParts.Part.Description%2A></xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A></xref:System.Web.UI.WebControls.WebParts.Part.Title%2A></xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A></xref:System.Web.UI.Control.ID%2A></xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A>"
  example:
  - "The following code example demonstrates programmatic use of the WebPartDescription class. Ordinarily, this type is used primarily by the Web Parts control set, but this code example is simply showing basic programmatic usage of the main description properties.  \n  \n The code example has four parts:  \n  \n-   A user control that enables users to change display modes on a Web page.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page to host the other controls.  \n  \n-   An explanation of how the code example works.  \n  \n The first part of the code example is the user control. The source code for the user control comes from another topic. For more details about the user control, see the topic [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#7](~/add/codesnippet/csharp/t-system.web.ui.webcontr_125_1.ascx)]\n [!code-vb[WebParts_WebPartDescription_Overview#7](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_125_1.ascx)]  \n  \n The second part of the code example is a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the approach of dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_125_2.cs)]\n [!code-vb[WebParts_WebPartDescription_Overview#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_125_2.vb)]  \n  \n The third part of the code example is the Web page. Near the top are two `Register` directives: one that registers the user control, and the other to register the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control whose source file is located in the App_Code folder of your site. The page contains an `<asp:catalogzone>` element, which in turn contains declarative references to two controls: the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`, and a <xref:System.Web.UI.WebControls.BulletedList> Web server control that will be treated as a <xref:System.Web.UI.WebControls.WebParts.WebPart> control at run time because the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control will wrap it with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object. Note that in the code for the `Button1_Click` method, the available WebPartDescription objects for the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in the catalog are retrieved using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then the description details are all written out to the page.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_125_3.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_125_3.aspx)]  \n  \n After you load the page in a browser, use the **Display Mode** drop-down list control and select **Catalog** to change the page to catalog display mode. In the catalog, you should see the two controls that are available to be added to the page. Click the **List WebPartDescription Information** button, and the code writes out the values of all available WebPartDescription objects to the page. This demonstrates that you can retrieve description details for <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in a catalog without having to create instances of the controls themselves."
  syntax:
    content: public class WebPartDescription
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)
  id: '#ctor(System.Web.UI.WebControls.WebParts.WebPart)'
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: WebPartDescription(WebPart)
  nameWithType: WebPartDescription.WebPartDescription(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.WebPartDescription(WebPart)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inizializza una nuova istanza della classe quando un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> istanza del controllo è disponibile."
  remarks: "Il costruttore WebPartDescription viene utilizzato per la creazione di un nuovo <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>oggetto basato su un oggetto esistente <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartDescription> Questo costruttore chiama semplicemente l&quot;altro overload, la <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29>costruttore, ottenendo i valori richiesti dalla proprietà sul `part` parametro.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29>"
  syntax:
    content: public WebPartDescription (System.Web.UI.WebControls.WebParts.WebPart part);
    parameters:
    - id: part
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo cui informazioni sono contenute in un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDescription&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <xref:System.Web.UI.Control.ID*>proprietà di <code> part </code> è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o una stringa vuota (&quot;&quot;).</xref:System.Web.UI.Control.ID*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: WebPartDescription(String,String,String,String)
  nameWithType: WebPartDescription.WebPartDescription(String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.WebPartDescription(String,String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inizializza una nuova istanza della classe utilizzando diverse stringhe che contengono informazioni di descrizione per un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo."
  remarks: "Il costruttore WebPartDescription viene utilizzato per creare una nuova istanza di <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>quando viene chiamato un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo non è disponibile.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartDescription> Ciò si verifica ad esempio nel caso di un <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>controllare quando importa un file di descrizione per un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Ottiene le informazioni necessarie per creare un <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>oggetto direttamente dal file di descrizione e un <xref:System.Web.UI.WebControls.WebParts.WebPart>istanza non è presente.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartDescription>"
  syntax:
    content: public WebPartDescription (string id, string title, string description, string imageUrl);
    parameters:
    - id: id
      type: System.String
      description: "Valore da assegnare al <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID*>.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID*>"
    - id: title
      type: System.String
      description: "Valore da assegnare al <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title*>.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title*>"
    - id: description
      type: System.String
      description: "Valore da assegnare al <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description*>.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description*>"
    - id: imageUrl
      type: System.String
      description: "Valore da assegnare al <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl*>.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl*>"
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>o <code>title</code> è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o una stringa vuota (&quot;&quot;)."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  id: CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: CatalogIconImageUrl
  nameWithType: WebPartDescription.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene un URL che contiene il percorso di un&quot;immagine utilizzata come icona per un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo."
  remarks: "La proprietà CatalogIconImageUrl corrisponde direttamente al <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A?displayProperty=fullName>proprietà.</xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A?displayProperty=fullName> Se tale proprietà è impostata su un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo, quindi la proprietà nel corrispondente <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>oggetto disporrà di un valore.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription> </xref:System.Web.UI.WebControls.WebParts.WebPart>       La proprietà CatalogIconImageUrl si applica solo quando una pagina è in modalità di visualizzazione catalogo e un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo viene visualizzato in un catalogo di controlli.</xref:System.Web.UI.WebControls.WebParts.WebPart> Se il controllo ha un&quot;icona assegnata nel valore della proprietà, l&quot;icona viene visualizzata nel catalogo accanto al controllo."
  example:
  - "The following code example demonstrates programmatic use of the CatalogIconImageUrl property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the CatalogIconImageUrl property value is retrieved in the following code.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1296_1.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1296_1.aspx)]"
  syntax:
    content: public string CatalogIconImageUrl { get; }
    return:
      type: System.String
      description: "Stringa che contiene un URL. il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  id: Description
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: Description
  nameWithType: WebPartDescription.Description
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene il testo di una descrizione per un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo."
  remarks: "La proprietà Description corrisponde direttamente il <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A?displayProperty=fullName>proprietà.</xref:System.Web.UI.WebControls.WebParts.Part.Description%2A?displayProperty=fullName> Se tale proprietà è impostata su un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo, quindi la proprietà nel corrispondente <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>oggetto disporrà di un valore.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription> </xref:System.Web.UI.WebControls.WebParts.WebPart>       La proprietà Description si applica solo quando una pagina è in modalità di visualizzazione catalogo e un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo viene visualizzato in un catalogo di controlli.</xref:System.Web.UI.WebControls.WebParts.WebPart> Se il controllo ha una descrizione assegnata, la descrizione viene visualizzata nel catalogo come descrizione comando nel controllo."
  example:
  - "The following code example demonstrates programmatic use of the Description property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the Description property value is retrieved in the following code.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_697_1.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_697_1.aspx)]"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "Stringa che contiene la descrizione di un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo; il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  id: ID
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: ID
  nameWithType: WebPartDescription.ID
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene l&quot;ID di un corrispondente <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo."
  remarks: "Il valore della proprietà ID non può essere `null`; devono essere sempre un valore. La proprietà ID corrisponde direttamente al <xref:System.Web.UI.Control.ID%2A?displayProperty=fullName>proprietà.</xref:System.Web.UI.Control.ID%2A?displayProperty=fullName>       La proprietà ID è valido solo quando una pagina in modalità di visualizzazione catalogo e un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo viene visualizzato in un catalogo di controlli.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates programmatic use of the ID property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the ID property value is retrieved in the following code.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_441_1.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_441_1.aspx)]"
  syntax:
    content: public string ID { get; }
    return:
      type: System.String
      description: "Stringa che contiene l&quot;ID del controllo."
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.ID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  id: Title
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: Title
  nameWithType: WebPartDescription.Title
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene il testo del titolo di un corrispondente <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo."
  remarks: "Il valore della proprietà Title corrisponde direttamente al <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A?displayProperty=fullName>proprietà.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A?displayProperty=fullName> Qualsiasi corrispondente <xref:System.Web.UI.WebControls.WebParts.WebPart>dispone di controllo per il relativo <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>proprietà, che diventa il valore della proprietà Title; in caso contrario, il titolo è un valore calcolato.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       La proprietà Title è valido solo quando una pagina in modalità di visualizzazione catalogo e un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo viene visualizzato in un catalogo di controlli.</xref:System.Web.UI.WebControls.WebParts.WebPart> Qualunque sia il titolo viene assegnato a un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo viene visualizzato accanto al controllo nel catalogo.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates programmatic use of the Title property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the Title property value is retrieved in the following code.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_732_1.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_732_1.aspx)]"
  syntax:
    content: public string Title { get; }
    return:
      type: System.String
      description: "Stringa che contiene il titolo del controllo corrispondente. Il valore predefinito è una stringa calcolata fornita da .NET Framework."
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.Title*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: WebPartDescription(WebPart)
  nameWithType: WebPartDescription.WebPartDescription(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.WebPartDescription(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: WebPartDescription(String,String,String,String)
  nameWithType: WebPartDescription.WebPartDescription(String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.WebPartDescription(String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: WebPartDescription.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Description
  nameWithType: WebPartDescription.Description
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.Description
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: ID
  nameWithType: WebPartDescription.ID
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.ID
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Title
  nameWithType: WebPartDescription.Title
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.Title
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: WebPartDescription
  nameWithType: WebPartDescription.WebPartDescription
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: WebPartDescription.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Description*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Description
  nameWithType: WebPartDescription.Description
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.ID*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: ID
  nameWithType: WebPartDescription.ID
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Title*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Title
  nameWithType: WebPartDescription.Title
