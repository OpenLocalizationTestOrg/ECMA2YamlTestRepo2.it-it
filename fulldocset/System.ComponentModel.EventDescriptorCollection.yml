### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.EventDescriptorCollection
  id: EventDescriptorCollection
  children:
  - System.ComponentModel.EventDescriptorCollection.#ctor(System.ComponentModel.EventDescriptor[])
  - System.ComponentModel.EventDescriptorCollection.#ctor(System.ComponentModel.EventDescriptor[],System.Boolean)
  - System.ComponentModel.EventDescriptorCollection.Add(System.ComponentModel.EventDescriptor)
  - System.ComponentModel.EventDescriptorCollection.Clear
  - System.ComponentModel.EventDescriptorCollection.Contains(System.ComponentModel.EventDescriptor)
  - System.ComponentModel.EventDescriptorCollection.Count
  - System.ComponentModel.EventDescriptorCollection.Empty
  - System.ComponentModel.EventDescriptorCollection.Find(System.String,System.Boolean)
  - System.ComponentModel.EventDescriptorCollection.GetEnumerator
  - System.ComponentModel.EventDescriptorCollection.IndexOf(System.ComponentModel.EventDescriptor)
  - System.ComponentModel.EventDescriptorCollection.Insert(System.Int32,System.ComponentModel.EventDescriptor)
  - System.ComponentModel.EventDescriptorCollection.InternalSort(System.Collections.IComparer)
  - System.ComponentModel.EventDescriptorCollection.InternalSort(System.String[])
  - System.ComponentModel.EventDescriptorCollection.Item(System.Int32)
  - System.ComponentModel.EventDescriptorCollection.Item(System.String)
  - System.ComponentModel.EventDescriptorCollection.Remove(System.ComponentModel.EventDescriptor)
  - System.ComponentModel.EventDescriptorCollection.RemoveAt(System.Int32)
  - System.ComponentModel.EventDescriptorCollection.Sort
  - System.ComponentModel.EventDescriptorCollection.Sort(System.Collections.IComparer)
  - System.ComponentModel.EventDescriptorCollection.Sort(System.String[])
  - System.ComponentModel.EventDescriptorCollection.Sort(System.String[],System.Collections.IComparer)
  - System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#Count
  - System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#IsSynchronized
  - System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#SyncRoot
  - System.ComponentModel.EventDescriptorCollection.System#Collections#IEnumerable#GetEnumerator
  - System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Add(System.Object)
  - System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Clear
  - System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Contains(System.Object)
  - System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IndexOf(System.Object)
  - System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsFixedSize
  - System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsReadOnly
  - System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Item(System.Int32)
  - System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Remove(System.Object)
  - System.ComponentModel.EventDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)
  langs:
  - csharp
  name: "EventDescriptorCollection"
  nameWithType: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
  type: Class
  summary: Represents a collection of <see cref="T:System.ComponentModel.EventDescriptor"></see> objects.
  remarks: "EventDescriptorCollection is read-only; it does not implement methods that add or remove events. You must inherit from this class to implement these methods.  \n  \n Using the properties available in the EventDescriptorCollection class, you can query the collection about its contents. Use the <xref:System.ComponentModel.EventDescriptorCollection.Count%2A> property to determine the number of elements in the collection. Use the [Item\\<xref:System.ComponentModel.EventDescriptorCollection.Item%2A> property to get a specific property by index number or by name.  \n  \n You can also use the <xref:System.ComponentModel.EventDescriptorCollection.Find%2A> method to get a description of the event with the specified name from the collection."
  example:
  - "The following code example prints all the events on a button in a text box. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cs[Classic EventDescriptorCollection Example#1](~/add/codesnippet/CSharp/t-system.componentmodel._50_1.cs)]\n [!code-cpp[Classic EventDescriptorCollection Example#1](~/add/codesnippet/CPP/t-system.componentmodel._50_1.cpp)]\n [!code-vb[Classic EventDescriptorCollection Example#1](~/add/codesnippet/VisualBasic/t-system.componentmodel._50_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class EventDescriptorCollection : System.Collections.IList
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.#ctor(System.ComponentModel.EventDescriptor[])
  id: '#ctor(System.ComponentModel.EventDescriptor[])'
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "EventDescriptorCollection(EventDescriptor[])"
  nameWithType: EventDescriptorCollection.EventDescriptorCollection(EventDescriptor[])
  fullName: System.ComponentModel.EventDescriptorCollection.EventDescriptorCollection(EventDescriptor[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptorCollection"></see> class with the given array of <see cref="T:System.ComponentModel.EventDescriptor"></see> objects.
  remarks: "If the `events` parameter is empty, this constructor creates an empty <xref:System.ComponentModel.EventDescriptorCollection> class.  \n  \n The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this member has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md)."
  example:
  - "The following code example creates a new <xref:System.ComponentModel.EventDescriptorCollection> class using the events on `button1`. It requires that `button1` has been instantiated on a form.  \n  \n [!code-cs[Classic EventDescriptorCollection.EventDescriptorCollection Example#1](~/add/codesnippet/CSharp/acde4970-02ef-4f65-898d-_1.cs)]\n [!code-cpp[Classic EventDescriptorCollection.EventDescriptorCollection Example#1](~/add/codesnippet/CPP/acde4970-02ef-4f65-898d-_1.cpp)]\n [!code-vb[Classic EventDescriptorCollection.EventDescriptorCollection Example#1](~/add/codesnippet/VisualBasic/acde4970-02ef-4f65-898d-_1.vb)]"
  syntax:
    content: public EventDescriptorCollection (System.ComponentModel.EventDescriptor[] events);
    parameters:
    - id: events
      type: System.ComponentModel.EventDescriptor[]
      description: "An array of type  that provides the events for this collection."
  overload: System.ComponentModel.EventDescriptorCollection.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.#ctor(System.ComponentModel.EventDescriptor[],System.Boolean)
  id: '#ctor(System.ComponentModel.EventDescriptor[],System.Boolean)'
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "EventDescriptorCollection(EventDescriptor[],Boolean)"
  nameWithType: EventDescriptorCollection.EventDescriptorCollection(EventDescriptor[],Boolean)
  fullName: System.ComponentModel.EventDescriptorCollection.EventDescriptorCollection(EventDescriptor[],Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Initializes a new instance of the <see cref="T:System.ComponentModel.EventDescriptorCollection"></see> class with the given array of <see cref="T:System.ComponentModel.EventDescriptor"></see> objects. The collection is optionally read-only.
  remarks: "If the `events` parameter is empty, this constructor creates an empty <xref:System.ComponentModel.EventDescriptorCollection> class.  \n  \n> [!NOTE]\n>  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md)."
  example:
  - "The following code example creates a new <xref:System.ComponentModel.EventDescriptorCollection> class using the events on `button1`. It requires that `button1` has been instantiated on a form.  \n  \n [!code-cs[Classic EventDescriptorCollection.EventDescriptorCollection Example#1](~/add/codesnippet/CSharp/7e234bab-f099-4392-a1ef-_1.cs)]\n [!code-cpp[Classic EventDescriptorCollection.EventDescriptorCollection Example#1](~/add/codesnippet/CPP/7e234bab-f099-4392-a1ef-_1.cpp)]\n [!code-vb[Classic EventDescriptorCollection.EventDescriptorCollection Example#1](~/add/codesnippet/VisualBasic/7e234bab-f099-4392-a1ef-_1.vb)]"
  syntax:
    content: public EventDescriptorCollection (System.ComponentModel.EventDescriptor[] events, bool readOnly);
    parameters:
    - id: events
      type: System.ComponentModel.EventDescriptor[]
      description: "An array of type  that provides the events for this collection."
    - id: readOnly
      type: System.Boolean
      description: "\n     to specify a read-only collection; otherwise, ."
  overload: System.ComponentModel.EventDescriptorCollection.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.Add(System.ComponentModel.EventDescriptor)
  id: Add(System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "Add(EventDescriptor)"
  nameWithType: EventDescriptorCollection.Add(EventDescriptor)
  fullName: System.ComponentModel.EventDescriptorCollection.Add(EventDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Adds an <see cref="T:System.ComponentModel.EventDescriptor"></see> to the end of the collection.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: public int Add (System.ComponentModel.EventDescriptor value);
    parameters:
    - id: value
      type: System.ComponentModel.EventDescriptor
      description: "An  to add to the collection."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.ComponentModel.EventDescriptorCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The collection is read-only."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.Clear
  id: Clear
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "Clear()"
  nameWithType: EventDescriptorCollection.Clear()
  fullName: System.ComponentModel.EventDescriptorCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Removes all objects from the collection.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.ComponentModel.EventDescriptorCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The collection is read-only."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.Contains(System.ComponentModel.EventDescriptor)
  id: Contains(System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "Contains(EventDescriptor)"
  nameWithType: EventDescriptorCollection.Contains(EventDescriptor)
  fullName: System.ComponentModel.EventDescriptorCollection.Contains(EventDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Returns whether the collection contains the given <see cref="T:System.ComponentModel.EventDescriptor"></see>.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: public bool Contains (System.ComponentModel.EventDescriptor value);
    parameters:
    - id: value
      type: System.ComponentModel.EventDescriptor
      description: "The  to find within the collection."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.ComponentModel.EventDescriptorCollection.Contains*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.Count
  id: Count
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "Count"
  nameWithType: EventDescriptorCollection.Count
  fullName: System.ComponentModel.EventDescriptorCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Gets the number of event descriptors in the collection.
  remarks: "The Count property can be used to set the limits of a loop that iterates through a collection of objects. If the collection is zero-based, be sure to use `Count - 1` as the upper boundary of the loop.  \n  \n> [!NOTE]\n>  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md)."
  example:
  - "The following code example uses the Count property to print the number of events attached to `button1`. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cs[Classic EventDescriptorCollection.Count Example#1](~/add/codesnippet/CSharp/p-system.componentmodel._23_1.cs)]\n [!code-cpp[Classic EventDescriptorCollection.Count Example#1](~/add/codesnippet/CPP/p-system.componentmodel._23_1.cpp)]\n [!code-vb[Classic EventDescriptorCollection.Count Example#1](~/add/codesnippet/VisualBasic/p-system.componentmodel._23_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of event descriptors in the collection."
  overload: System.ComponentModel.EventDescriptorCollection.Count*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.Empty
  id: Empty
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "Empty"
  nameWithType: EventDescriptorCollection.Empty
  fullName: System.ComponentModel.EventDescriptorCollection.Empty
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Specifies an empty collection to use, rather than creating a new one with no items. This <xref uid="langword_csharp_static" name="static" href=""></xref> field is read-only.
  syntax:
    content: public static readonly System.ComponentModel.EventDescriptorCollection Empty;
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "To be added."
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.Find(System.String,System.Boolean)
  id: Find(System.String,System.Boolean)
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "Find(String,Boolean)"
  nameWithType: EventDescriptorCollection.Find(String,Boolean)
  fullName: System.ComponentModel.EventDescriptorCollection.Find(String,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Gets the description of the event with the specified name in the collection.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  example:
  - "The following code example finds a specific <xref:System.ComponentModel.EventDescriptor>. It prints the type of component for this <xref:System.ComponentModel.EventDescriptor> in a text box. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-vb[Classic EventDescriptorCollection.Find Example#1](~/add/codesnippet/VisualBasic/d8922bbf-1c7b-4d49-a561-_1.vb)]\n [!code-cs[Classic EventDescriptorCollection.Find Example#1](~/add/codesnippet/CSharp/d8922bbf-1c7b-4d49-a561-_1.cs)]\n [!code-cpp[Classic EventDescriptorCollection.Find Example#1](~/add/codesnippet/CPP/d8922bbf-1c7b-4d49-a561-_1.cpp)]"
  syntax:
    content: public virtual System.ComponentModel.EventDescriptor Find (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "The name of the event to get from the collection."
    - id: ignoreCase
      type: System.Boolean
      description: "\n     if you want to ignore the case of the event; otherwise, ."
    return:
      type: System.ComponentModel.EventDescriptor
      description: "To be added."
  overload: System.ComponentModel.EventDescriptorCollection.Find*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.GetEnumerator
  id: GetEnumerator
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "GetEnumerator()"
  nameWithType: EventDescriptorCollection.GetEnumerator()
  fullName: System.ComponentModel.EventDescriptorCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Gets an enumerator for this <see cref="T:System.ComponentModel.EventDescriptorCollection"></see>.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  example:
  - "The following code example gets an enumerator for the events on `button1`. It uses the enumerator to print the names of the events in the collection. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cpp[Classic EventDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/CPP/m-system.componentmodel._15_1.cpp)]\n [!code-cs[Classic EventDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/CSharp/m-system.componentmodel._15_1.cs)]\n [!code-vb[Classic EventDescriptorCollection.GetEnumerator Example#1](~/add/codesnippet/VisualBasic/m-system.componentmodel._15_1.vb)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "To be added."
  overload: System.ComponentModel.EventDescriptorCollection.GetEnumerator*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.IndexOf(System.ComponentModel.EventDescriptor)
  id: IndexOf(System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "IndexOf(EventDescriptor)"
  nameWithType: EventDescriptorCollection.IndexOf(EventDescriptor)
  fullName: System.ComponentModel.EventDescriptorCollection.IndexOf(EventDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Returns the index of the given <see cref="T:System.ComponentModel.EventDescriptor"></see>.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: public int IndexOf (System.ComponentModel.EventDescriptor value);
    parameters:
    - id: value
      type: System.ComponentModel.EventDescriptor
      description: "The  to find within the collection."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.ComponentModel.EventDescriptorCollection.IndexOf*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.Insert(System.Int32,System.ComponentModel.EventDescriptor)
  id: Insert(System.Int32,System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "Insert(Int32,EventDescriptor)"
  nameWithType: EventDescriptorCollection.Insert(Int32,EventDescriptor)
  fullName: System.ComponentModel.EventDescriptorCollection.Insert(Int32,EventDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Inserts an <see cref="T:System.ComponentModel.EventDescriptor"></see> to the collection at a specified index.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: public void Insert (int index, System.ComponentModel.EventDescriptor value);
    parameters:
    - id: index
      type: System.Int32
      description: "The index within the collection in which to insert the `value` parameter."
    - id: value
      type: System.ComponentModel.EventDescriptor
      description: "An  to insert into the collection."
  overload: System.ComponentModel.EventDescriptorCollection.Insert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The collection is read-only."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.InternalSort(System.Collections.IComparer)
  id: InternalSort(System.Collections.IComparer)
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "InternalSort(IComparer)"
  nameWithType: EventDescriptorCollection.InternalSort(IComparer)
  fullName: System.ComponentModel.EventDescriptorCollection.InternalSort(IComparer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Sorts the members of this <see cref="T:System.ComponentModel.EventDescriptorCollection"></see>, using the specified &lt;xref:System.Collections.IComparer&gt;.
  remarks: "If the `sorter` parameter is `null`, the default sort order is used.  \n  \n> [!NOTE]\n>  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md)."
  syntax:
    content: protected void InternalSort (System.Collections.IComparer sorter);
    parameters:
    - id: sorter
      type: System.Collections.IComparer
      description: "A comparer to use to sort the  objects in this collection."
  overload: System.ComponentModel.EventDescriptorCollection.InternalSort*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.InternalSort(System.String[])
  id: InternalSort(System.String[])
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "InternalSort(String[])"
  nameWithType: EventDescriptorCollection.InternalSort(String[])
  fullName: System.ComponentModel.EventDescriptorCollection.InternalSort(String[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Sorts the members of this <see cref="T:System.ComponentModel.EventDescriptorCollection"></see>. The specified order is applied first, followed by the default sort for this collection, which is usually alphabetical.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  example:
  - "The following code example defines the sort order for the InternalSort method. If the <xref:System.ComponentModel.EventDescriptorCollection> contains four <xref:System.ComponentModel.EventDescriptor> objects with the names `A`, `B`, `C`, and `D`, the properties of this <xref:System.ComponentModel.EventDescriptorCollection> would be sorted in the order `D`, `B`, `A`, and `C`.  \n  \n [!code-cs[Classic EventDescriptorCollection.InternalSort Example#1](~/add/codesnippet/CSharp/m-system.componentmodel._21_1.cs)]\n [!code-cpp[Classic EventDescriptorCollection.InternalSort Example#1](~/add/codesnippet/CPP/m-system.componentmodel._21_1.cpp)]\n [!code-vb[Classic EventDescriptorCollection.InternalSort Example#1](~/add/codesnippet/VisualBasic/m-system.componentmodel._21_1.vb)]"
  syntax:
    content: protected void InternalSort (string[] names);
    parameters:
    - id: names
      type: System.String[]
      description: "An array of strings describing the order in which to sort the  objects in this collection."
  overload: System.ComponentModel.EventDescriptorCollection.InternalSort*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "Item(Int32)"
  nameWithType: EventDescriptorCollection.Item(Int32)
  fullName: System.ComponentModel.EventDescriptorCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Gets or sets the event with the specified index number.
  remarks: The index number is zero-based. Therefore, you must subtract 1 from the numerical position of a particular <xref:System.ComponentModel.EventDescriptor> to access that <xref:System.ComponentModel.EventDescriptor>. For example, to get the third <xref:System.ComponentModel.EventDescriptor>, you need to specify `myColl[2]`.
  example:
  - "The following code example uses the Item property to print the name of the <xref:System.ComponentModel.EventDescriptor> specified by the index number in a text box. Because the index number is zero-based, this example prints the name of the second <xref:System.ComponentModel.EventDescriptor>. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cs[Classic EventDescriptorCollection.this Example#1](~/add/codesnippet/CSharp/p-system.componentmodel._13_1.cs)]\n [!code-cpp[Classic EventDescriptorCollection.this Example#1](~/add/codesnippet/CPP/p-system.componentmodel._13_1.cpp)]\n [!code-vb[Classic EventDescriptorCollection.this Example#1](~/add/codesnippet/VisualBasic/p-system.componentmodel._13_1.vb)]"
  syntax:
    content: public virtual System.ComponentModel.EventDescriptor this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index number of the  to get or set."
    return:
      type: System.ComponentModel.EventDescriptor
      description: "The <see cref=&quot;T:System.ComponentModel.EventDescriptor&quot;></see> with the specified index number."
  overload: System.ComponentModel.EventDescriptorCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "\n    index is not a valid index for Item."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.Item(System.String)
  id: Item(System.String)
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "Item(String)"
  nameWithType: EventDescriptorCollection.Item(String)
  fullName: System.ComponentModel.EventDescriptorCollection.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Gets or sets the event with the specified name.
  remarks: "The <xref:System.ComponentModel.EventDescriptorCollection.Item%2A> property is case-sensitive when searching for names. That is, the names \"Ename\" and \"ename\" are considered to be two different events.  \n  \n> [!NOTE]\n>  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md)."
  example:
  - "The following code example uses the <xref:System.ComponentModel.EventDescriptorCollection.Item%2A> property to print the type of the component for the <xref:System.ComponentModel.EventDescriptor> specified by the index. It requires that `button1` and `textBox1` have been instantiated on a form.  \n  \n [!code-cpp[Classic EventDescriptorCollection.this1 Example#1](~/add/codesnippet/CPP/p-system.componentmodel._32_1.cpp)]\n [!code-cs[Classic EventDescriptorCollection.this1 Example#1](~/add/codesnippet/CSharp/p-system.componentmodel._32_1.cs)]\n [!code-vb[Classic EventDescriptorCollection.this1 Example#1](~/add/codesnippet/VisualBasic/p-system.componentmodel._32_1.vb)]"
  syntax:
    content: public virtual System.ComponentModel.EventDescriptor this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "The name of the  to get or set."
    return:
      type: System.ComponentModel.EventDescriptor
      description: "The <see cref=&quot;T:System.ComponentModel.EventDescriptor&quot;></see> with the specified name, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the event does not exist."
  overload: System.ComponentModel.EventDescriptorCollection.Item*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.Remove(System.ComponentModel.EventDescriptor)
  id: Remove(System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "Remove(EventDescriptor)"
  nameWithType: EventDescriptorCollection.Remove(EventDescriptor)
  fullName: System.ComponentModel.EventDescriptorCollection.Remove(EventDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Removes the specified <see cref="T:System.ComponentModel.EventDescriptor"></see> from the collection.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: public void Remove (System.ComponentModel.EventDescriptor value);
    parameters:
    - id: value
      type: System.ComponentModel.EventDescriptor
      description: "The  to remove from the collection."
  overload: System.ComponentModel.EventDescriptorCollection.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The collection is read-only."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "RemoveAt(Int32)"
  nameWithType: EventDescriptorCollection.RemoveAt(Int32)
  fullName: System.ComponentModel.EventDescriptorCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Removes the <see cref="T:System.ComponentModel.EventDescriptor"></see> at the specified index from the collection.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The index of the  to remove."
  overload: System.ComponentModel.EventDescriptorCollection.RemoveAt*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The collection is read-only."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.Sort
  id: Sort
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "Sort()"
  nameWithType: EventDescriptorCollection.Sort()
  fullName: System.ComponentModel.EventDescriptorCollection.Sort()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Sorts the members of this <see cref="T:System.ComponentModel.EventDescriptorCollection"></see>, using the default sort for this collection, which is usually alphabetical.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  example:
  - "The following code example defines the sort order for the Sort method. If the <xref:System.ComponentModel.EventDescriptorCollection> contains four <xref:System.ComponentModel.EventDescriptor> objects with the names `A`, `B`, `C`, and `D`, the properties of `myNewColl` would be sorted in the order `D`, `B`, `A`, and `C`.  \n  \n [!code-cs[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/CSharp/m-system.componentmodel._27_1.cs)]\n [!code-vb[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/VisualBasic/m-system.componentmodel._27_1.vb)]\n [!code-cpp[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/CPP/m-system.componentmodel._27_1.cpp)]"
  syntax:
    content: public virtual System.ComponentModel.EventDescriptorCollection Sort ();
    parameters: []
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "To be added."
  overload: System.ComponentModel.EventDescriptorCollection.Sort*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.Sort(System.Collections.IComparer)
  id: Sort(System.Collections.IComparer)
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "Sort(IComparer)"
  nameWithType: EventDescriptorCollection.Sort(IComparer)
  fullName: System.ComponentModel.EventDescriptorCollection.Sort(IComparer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Sorts the members of this <see cref="T:System.ComponentModel.EventDescriptorCollection"></see>, using the specified &lt;xref:System.Collections.IComparer&gt;.
  remarks: "The specified <xref:System.Collections.IComparer> is applied first, followed by the default sort for this collection, which is usually alphabetical.  \n  \n> [!NOTE]\n>  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md)."
  example:
  - "The following code example defines the sort order for the Sort method. If the <xref:System.ComponentModel.EventDescriptorCollection> contains four <xref:System.ComponentModel.EventDescriptor> objects with the names `A`, `B`, `C`, and `D`, the properties of `myNewColl` would be sorted in the order `D`, `B`, `A`, and `C`.  \n  \n [!code-cs[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/CSharp/7b70e181-ed96-4f23-8e7c-_1.cs)]\n [!code-vb[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/VisualBasic/7b70e181-ed96-4f23-8e7c-_1.vb)]\n [!code-cpp[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/CPP/7b70e181-ed96-4f23-8e7c-_1.cpp)]"
  syntax:
    content: public virtual System.ComponentModel.EventDescriptorCollection Sort (System.Collections.IComparer comparer);
    parameters:
    - id: comparer
      type: System.Collections.IComparer
      description: "An <xref:System.Collections.IComparer> to use to sort the  objects in this collection."
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "To be added."
  overload: System.ComponentModel.EventDescriptorCollection.Sort*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.Sort(System.String[])
  id: Sort(System.String[])
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "Sort(String[])"
  nameWithType: EventDescriptorCollection.Sort(String[])
  fullName: System.ComponentModel.EventDescriptorCollection.Sort(String[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Sorts the members of this <see cref="T:System.ComponentModel.EventDescriptorCollection"></see>, given a specified sort order.
  remarks: "The specified order is applied first, followed by the default sort for this collection, which is usually alphabetical.  \n  \n> [!NOTE]\n>  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md)."
  example:
  - "The following code example defines the sort order for the Sort method. If the <xref:System.ComponentModel.EventDescriptorCollection> contains four <xref:System.ComponentModel.EventDescriptor> objects with the names `A`, `B`, `C`, and `D`, the properties of `myNewColl` would be sorted in the order `D`, `B`, `A`, and `C`.  \n  \n [!code-cs[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/CSharp/m-system.componentmodel._4_1.cs)]\n [!code-vb[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/VisualBasic/m-system.componentmodel._4_1.vb)]\n [!code-cpp[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/CPP/m-system.componentmodel._4_1.cpp)]"
  syntax:
    content: public virtual System.ComponentModel.EventDescriptorCollection Sort (string[] names);
    parameters:
    - id: names
      type: System.String[]
      description: "An array of strings describing the order in which to sort the  objects in the collection."
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "To be added."
  overload: System.ComponentModel.EventDescriptorCollection.Sort*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.Sort(System.String[],System.Collections.IComparer)
  id: Sort(System.String[],System.Collections.IComparer)
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "Sort(String[],IComparer)"
  nameWithType: EventDescriptorCollection.Sort(String[],IComparer)
  fullName: System.ComponentModel.EventDescriptorCollection.Sort(String[],IComparer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Sorts the members of this <see cref="T:System.ComponentModel.EventDescriptorCollection"></see>, given a specified sort order and an &lt;xref:System.Collections.IComparer&gt;.
  remarks: "The specified sort order is applied first, followed by the sort using the specified <xref:System.Collections.IComparer>.  \n  \n> [!NOTE]\n>  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md)."
  example:
  - "The following code example defines the sort order for the Sort method. If the <xref:System.ComponentModel.EventDescriptorCollection> contains four <xref:System.ComponentModel.EventDescriptor> objects with the names `A`, `B`, `C`, and `D`, the properties of `myNewColl` would be sorted in the order `D`, `B`, `A`, and `C`.  \n  \n [!code-cs[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/CSharp/e1489fdf-63a5-407c-99c2-_1.cs)]\n [!code-vb[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/VisualBasic/e1489fdf-63a5-407c-99c2-_1.vb)]\n [!code-cpp[classic eventdescriptorcollection.sort example#1](~/add/codesnippet/CPP/e1489fdf-63a5-407c-99c2-_1.cpp)]"
  syntax:
    content: public virtual System.ComponentModel.EventDescriptorCollection Sort (string[] names, System.Collections.IComparer comparer);
    parameters:
    - id: names
      type: System.String[]
      description: "An array of strings describing the order in which to sort the  objects in the collection."
    - id: comparer
      type: System.Collections.IComparer
      description: "An <xref:System.Collections.IComparer> to use to sort the  objects in this collection."
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "To be added."
  overload: System.ComponentModel.EventDescriptorCollection.Sort*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "System.Collections.ICollection.CopyTo(Array,Int32)"
  nameWithType: EventDescriptorCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Copies the elements of the collection to an &lt;xref:System.Array&gt;, starting at a particular &lt;xref:System.Array&gt; index.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "The one-dimensional <xref:System.Array> that is the destination of the elements copied from collection. The <xref:System.Array> must have zero-based indexing."
    - id: index
      type: System.Int32
      description: "The zero-based index in `array` at which copying begins."
  overload: System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "System.Collections.ICollection.Count"
  nameWithType: EventDescriptorCollection.System.Collections.ICollection.Count
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Gets the number of elements contained in the collection.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "The number of elements contained in the collection."
  overload: System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "System.Collections.ICollection.IsSynchronized"
  nameWithType: EventDescriptorCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Gets a value indicating whether access to the collection is synchronized.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if access to the collection is synchronized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "System.Collections.ICollection.SyncRoot"
  nameWithType: EventDescriptorCollection.System.Collections.ICollection.SyncRoot
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Gets an object that can be used to synchronize access to the collection.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "An object that can be used to synchronize access to the collection."
  overload: System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "System.Collections.IEnumerable.GetEnumerator()"
  nameWithType: EventDescriptorCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Returns an enumerator that iterates through a collection.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "To be added."
  overload: System.ComponentModel.EventDescriptorCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "System.Collections.IList.Add(Object)"
  nameWithType: EventDescriptorCollection.System.Collections.IList.Add(Object)
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Adds an item to the collection.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to add to the collection."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The collection is read-only."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "System.Collections.IList.Clear()"
  nameWithType: EventDescriptorCollection.System.Collections.IList.Clear()
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Removes all the items from the collection.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The collection is read-only."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "System.Collections.IList.Contains(Object)"
  nameWithType: EventDescriptorCollection.System.Collections.IList.Contains(Object)
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Determines whether the collection contains a specific value.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to locate in the collection."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "System.Collections.IList.IndexOf(Object)"
  nameWithType: EventDescriptorCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Determines the index of a specific item in the collection.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to locate in the collection."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "System.Collections.IList.Insert(Int32,Object)"
  nameWithType: EventDescriptorCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Inserts an item to the collection at the specified index.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index at which `value` should be inserted."
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to insert into the collection."
  overload: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The collection is read-only."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "System.Collections.IList.IsFixedSize"
  nameWithType: EventDescriptorCollection.System.Collections.IList.IsFixedSize
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Gets a value indicating whether the collection has a fixed size.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the collection has a fixed size; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "System.Collections.IList.IsReadOnly"
  nameWithType: EventDescriptorCollection.System.Collections.IList.IsReadOnly
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Gets a value indicating whether the collection is read-only.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the collection is read-only; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "System.Collections.IList.Item(Int32)"
  nameWithType: EventDescriptorCollection.System.Collections.IList.Item(Int32)
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Gets or sets the element at the specified index.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the element to get or set."
    return:
      type: System.Object
      description: "The element at the specified index."
  overload: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The collection is read-only."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "\n    index is less than 0.  \n  \n -or-  \n  \n index is equal to or greater than <xref:System.ComponentModel.EventDescriptorCollection.Count%2A>."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "System.Collections.IList.Remove(Object)"
  nameWithType: EventDescriptorCollection.System.Collections.IList.Remove(Object)
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Removes the first occurrence of a specific object from the collection.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to remove from the collection."
  overload: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The collection is read-only."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.ComponentModel.EventDescriptorCollection
  langs:
  - csharp
  name: "System.Collections.IList.RemoveAt(Int32)"
  nameWithType: EventDescriptorCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: Removes the item at the specified index.
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource>. The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser). For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](../Topic/SQL%20Server%20Programming%20and%20Host%20Protection%20Attributes.md).
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the item to remove."
  overload: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#RemoveAt*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The collection is read-only."
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: "System.Object"
- uid: System.ComponentModel.EventDescriptorCollection.#ctor(System.ComponentModel.EventDescriptor[])
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "EventDescriptorCollection(EventDescriptor[])"
  nameWithType: EventDescriptorCollection.EventDescriptorCollection(EventDescriptor[])
  fullName: System.ComponentModel.EventDescriptorCollection.EventDescriptorCollection(EventDescriptor[])
- uid: System.ComponentModel.EventDescriptor[]
  parent: System.ComponentModel
  isExternal: false
  name: "EventDescriptor"
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor[]
  spec.csharp:
  - uid: System.ComponentModel.EventDescriptor
    name: "EventDescriptor"
    nameWithType: EventDescriptor
    fullName: EventDescriptor[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.EventDescriptorCollection.#ctor(System.ComponentModel.EventDescriptor[],System.Boolean)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "EventDescriptorCollection(EventDescriptor[],Boolean)"
  nameWithType: EventDescriptorCollection.EventDescriptorCollection(EventDescriptor[],Boolean)
  fullName: System.ComponentModel.EventDescriptorCollection.EventDescriptorCollection(EventDescriptor[],Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: "Boolean"
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.EventDescriptorCollection.Add(System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Add(EventDescriptor)"
  nameWithType: EventDescriptorCollection.Add(EventDescriptor)
  fullName: System.ComponentModel.EventDescriptorCollection.Add(EventDescriptor)
- uid: System.Int32
  parent: System
  isExternal: true
  name: "Int32"
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: "EventDescriptor"
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.EventDescriptorCollection.Clear
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Clear()"
  nameWithType: EventDescriptorCollection.Clear()
  fullName: System.ComponentModel.EventDescriptorCollection.Clear()
- uid: System.ComponentModel.EventDescriptorCollection.Contains(System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Contains(EventDescriptor)"
  nameWithType: EventDescriptorCollection.Contains(EventDescriptor)
  fullName: System.ComponentModel.EventDescriptorCollection.Contains(EventDescriptor)
- uid: System.ComponentModel.EventDescriptorCollection.Count
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Count"
  nameWithType: EventDescriptorCollection.Count
  fullName: System.ComponentModel.EventDescriptorCollection.Count
- uid: System.ComponentModel.EventDescriptorCollection.Empty
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Empty"
  nameWithType: EventDescriptorCollection.Empty
  fullName: System.ComponentModel.EventDescriptorCollection.Empty
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: "EventDescriptorCollection"
  nameWithType: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.EventDescriptorCollection.Find(System.String,System.Boolean)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Find(String,Boolean)"
  nameWithType: EventDescriptorCollection.Find(String,Boolean)
  fullName: System.ComponentModel.EventDescriptorCollection.Find(String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: "String"
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.EventDescriptorCollection.GetEnumerator
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "GetEnumerator()"
  nameWithType: EventDescriptorCollection.GetEnumerator()
  fullName: System.ComponentModel.EventDescriptorCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: "IEnumerator"
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ComponentModel.EventDescriptorCollection.IndexOf(System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "IndexOf(EventDescriptor)"
  nameWithType: EventDescriptorCollection.IndexOf(EventDescriptor)
  fullName: System.ComponentModel.EventDescriptorCollection.IndexOf(EventDescriptor)
- uid: System.ComponentModel.EventDescriptorCollection.Insert(System.Int32,System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Insert(Int32,EventDescriptor)"
  nameWithType: EventDescriptorCollection.Insert(Int32,EventDescriptor)
  fullName: System.ComponentModel.EventDescriptorCollection.Insert(Int32,EventDescriptor)
- uid: System.ComponentModel.EventDescriptorCollection.InternalSort(System.Collections.IComparer)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "InternalSort(IComparer)"
  nameWithType: EventDescriptorCollection.InternalSort(IComparer)
  fullName: System.ComponentModel.EventDescriptorCollection.InternalSort(IComparer)
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: "IComparer"
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.ComponentModel.EventDescriptorCollection.InternalSort(System.String[])
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "InternalSort(String[])"
  nameWithType: EventDescriptorCollection.InternalSort(String[])
  fullName: System.ComponentModel.EventDescriptorCollection.InternalSort(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: "String"
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: "String"
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.EventDescriptorCollection.Item(System.Int32)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Item(Int32)"
  nameWithType: EventDescriptorCollection.Item(Int32)
  fullName: System.ComponentModel.EventDescriptorCollection.Item(Int32)
- uid: System.ComponentModel.EventDescriptorCollection.Item(System.String)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Item(String)"
  nameWithType: EventDescriptorCollection.Item(String)
  fullName: System.ComponentModel.EventDescriptorCollection.Item(String)
- uid: System.ComponentModel.EventDescriptorCollection.Remove(System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Remove(EventDescriptor)"
  nameWithType: EventDescriptorCollection.Remove(EventDescriptor)
  fullName: System.ComponentModel.EventDescriptorCollection.Remove(EventDescriptor)
- uid: System.ComponentModel.EventDescriptorCollection.RemoveAt(System.Int32)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "RemoveAt(Int32)"
  nameWithType: EventDescriptorCollection.RemoveAt(Int32)
  fullName: System.ComponentModel.EventDescriptorCollection.RemoveAt(Int32)
- uid: System.ComponentModel.EventDescriptorCollection.Sort
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Sort()"
  nameWithType: EventDescriptorCollection.Sort()
  fullName: System.ComponentModel.EventDescriptorCollection.Sort()
- uid: System.ComponentModel.EventDescriptorCollection.Sort(System.Collections.IComparer)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Sort(IComparer)"
  nameWithType: EventDescriptorCollection.Sort(IComparer)
  fullName: System.ComponentModel.EventDescriptorCollection.Sort(IComparer)
- uid: System.ComponentModel.EventDescriptorCollection.Sort(System.String[])
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Sort(String[])"
  nameWithType: EventDescriptorCollection.Sort(String[])
  fullName: System.ComponentModel.EventDescriptorCollection.Sort(String[])
- uid: System.ComponentModel.EventDescriptorCollection.Sort(System.String[],System.Collections.IComparer)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Sort(String[],IComparer)"
  nameWithType: EventDescriptorCollection.Sort(String[],IComparer)
  fullName: System.ComponentModel.EventDescriptorCollection.Sort(String[],IComparer)
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.ICollection.CopyTo(Array,Int32)"
  nameWithType: EventDescriptorCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: "Array"
  nameWithType: Array
  fullName: System.Array
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#Count
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.ICollection.Count"
  nameWithType: EventDescriptorCollection.System.Collections.ICollection.Count
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.Count
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#IsSynchronized
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.ICollection.IsSynchronized"
  nameWithType: EventDescriptorCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.IsSynchronized
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#SyncRoot
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.ICollection.SyncRoot"
  nameWithType: EventDescriptorCollection.System.Collections.ICollection.SyncRoot
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.ICollection.SyncRoot
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IEnumerable.GetEnumerator()"
  nameWithType: EventDescriptorCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Add(System.Object)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.Add(Object)"
  nameWithType: EventDescriptorCollection.System.Collections.IList.Add(Object)
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Add(Object)
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Clear
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.Clear()"
  nameWithType: EventDescriptorCollection.System.Collections.IList.Clear()
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Clear()
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Contains(System.Object)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.Contains(Object)"
  nameWithType: EventDescriptorCollection.System.Collections.IList.Contains(Object)
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Contains(Object)
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.IndexOf(Object)"
  nameWithType: EventDescriptorCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.IndexOf(Object)
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.Insert(Int32,Object)"
  nameWithType: EventDescriptorCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsFixedSize
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.IsFixedSize"
  nameWithType: EventDescriptorCollection.System.Collections.IList.IsFixedSize
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.IsFixedSize
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsReadOnly
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.IsReadOnly"
  nameWithType: EventDescriptorCollection.System.Collections.IList.IsReadOnly
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.IsReadOnly
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Item(System.Int32)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.Item(Int32)"
  nameWithType: EventDescriptorCollection.System.Collections.IList.Item(Int32)
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Item(Int32)
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Remove(System.Object)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.Remove(Object)"
  nameWithType: EventDescriptorCollection.System.Collections.IList.Remove(Object)
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.Remove(Object)
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.RemoveAt(Int32)"
  nameWithType: EventDescriptorCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.ComponentModel.EventDescriptorCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.ComponentModel.EventDescriptorCollection.#ctor*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "EventDescriptorCollection"
  nameWithType: EventDescriptorCollection.EventDescriptorCollection
- uid: System.ComponentModel.EventDescriptorCollection.Add*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Add"
  nameWithType: EventDescriptorCollection.Add
- uid: System.ComponentModel.EventDescriptorCollection.Clear*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Clear"
  nameWithType: EventDescriptorCollection.Clear
- uid: System.ComponentModel.EventDescriptorCollection.Contains*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Contains"
  nameWithType: EventDescriptorCollection.Contains
- uid: System.ComponentModel.EventDescriptorCollection.Count*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Count"
  nameWithType: EventDescriptorCollection.Count
- uid: System.ComponentModel.EventDescriptorCollection.Find*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Find"
  nameWithType: EventDescriptorCollection.Find
- uid: System.ComponentModel.EventDescriptorCollection.GetEnumerator*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "GetEnumerator"
  nameWithType: EventDescriptorCollection.GetEnumerator
- uid: System.ComponentModel.EventDescriptorCollection.IndexOf*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "IndexOf"
  nameWithType: EventDescriptorCollection.IndexOf
- uid: System.ComponentModel.EventDescriptorCollection.Insert*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Insert"
  nameWithType: EventDescriptorCollection.Insert
- uid: System.ComponentModel.EventDescriptorCollection.InternalSort*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "InternalSort"
  nameWithType: EventDescriptorCollection.InternalSort
- uid: System.ComponentModel.EventDescriptorCollection.Item*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Item"
  nameWithType: EventDescriptorCollection.Item
- uid: System.ComponentModel.EventDescriptorCollection.Remove*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Remove"
  nameWithType: EventDescriptorCollection.Remove
- uid: System.ComponentModel.EventDescriptorCollection.RemoveAt*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "RemoveAt"
  nameWithType: EventDescriptorCollection.RemoveAt
- uid: System.ComponentModel.EventDescriptorCollection.Sort*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "Sort"
  nameWithType: EventDescriptorCollection.Sort
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#CopyTo*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.ICollection.CopyTo"
  nameWithType: EventDescriptorCollection.System.Collections.ICollection.CopyTo
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#Count*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.ICollection.Count"
  nameWithType: EventDescriptorCollection.System.Collections.ICollection.Count
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.ICollection.IsSynchronized"
  nameWithType: EventDescriptorCollection.System.Collections.ICollection.IsSynchronized
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#SyncRoot*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.ICollection.SyncRoot"
  nameWithType: EventDescriptorCollection.System.Collections.ICollection.SyncRoot
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IEnumerable.GetEnumerator"
  nameWithType: EventDescriptorCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Add*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.Add"
  nameWithType: EventDescriptorCollection.System.Collections.IList.Add
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Clear*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.Clear"
  nameWithType: EventDescriptorCollection.System.Collections.IList.Clear
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Contains*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.Contains"
  nameWithType: EventDescriptorCollection.System.Collections.IList.Contains
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IndexOf*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.IndexOf"
  nameWithType: EventDescriptorCollection.System.Collections.IList.IndexOf
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Insert*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.Insert"
  nameWithType: EventDescriptorCollection.System.Collections.IList.Insert
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsFixedSize*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.IsFixedSize"
  nameWithType: EventDescriptorCollection.System.Collections.IList.IsFixedSize
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IsReadOnly*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.IsReadOnly"
  nameWithType: EventDescriptorCollection.System.Collections.IList.IsReadOnly
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Item*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.Item"
  nameWithType: EventDescriptorCollection.System.Collections.IList.Item
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Remove*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.Remove"
  nameWithType: EventDescriptorCollection.System.Collections.IList.Remove
- uid: System.ComponentModel.EventDescriptorCollection.System#Collections#IList#RemoveAt*
  parent: System.ComponentModel.EventDescriptorCollection
  isExternal: false
  name: "System.Collections.IList.RemoveAt"
  nameWithType: EventDescriptorCollection.System.Collections.IList.RemoveAt
