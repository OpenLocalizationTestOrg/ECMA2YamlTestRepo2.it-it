### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D
  id: ManipulationProcessor2D
  children:
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  - System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  langs:
  - csharp
  name: ManipulationProcessor2D
  nameWithType: ManipulationProcessor2D
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D
  type: Class
  summary: "Implementa un filtro compositor più input e un singolo output per le trasformazioni di bidimensionali (2D) in uno spazio di coordinate condiviso."
  remarks: "Un oggetto ManipulationProcessor2D considera una raccolta di manipolatori come un oggetto composito. L&quot;applicazione viene liberata quindi la necessità di monitoraggio e gestione dei singoli manipolatori.       Un processore di modifica da sola non causa un elemento da spostare. L&quot;applicazione avvia una modifica in base alle esigenze e quindi riceve informazioni da un processore di modifica in attesa per il <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started>, <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta>e <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed>eventi.</xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> </xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta> </xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started> I valori ricevuti tramite questi eventi consentono di modificare la posizione, dimensione o orientamento di un elemento in base alle esigenze.       Informare un processore di modifica sono consentiti i tipi di modifiche (tradurre, scala, rotazione) impostando il <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A>proprietà.</xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A> È quindi possibile fornire la logica non condizionale alla trasformazione dell&quot;elemento che è stato modificato. Ad esempio, invece di controllare se la rotazione è abilitata prima di modificare l&quot;orientamento di un elemento, in modo non condizionale applicare il fattore di rotazione ricevuto dal processore di modifica; Se la rotazione non è abilitata, verrà segnalato il processore di modifica che non si è verificata alcuna modifica rotazionale.       Quando viene rilasciato un elemento che è stato modificato (vengono rimossi tutti i manipolatori), è possibile utilizzare l&quot;elaborazione dell&quot;inerzia per simulare le forze di attrito e causare l&quot;elemento di rallentare gradualmente i movimenti prima dell&quot;arresto. Per ulteriori informazioni, vedere la <xref:System.Windows.Input.Manipulations.InertiaProcessor2D>classe.</xref:System.Windows.Input.Manipulations.InertiaProcessor2D>"
  syntax:
    content: public class ManipulationProcessor2D
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)
  id: '#ctor(System.Windows.Input.Manipulations.Manipulations2D)'
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: ManipulationProcessor2D(Manipulations2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
  type: Constructor
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Crea un nuovo <xref href=&quot;System.Windows.Input.Manipulations.ManipulationProcessor2D&quot;> </xref> oggetto."
  syntax:
    content: public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations);
    parameters:
    - id: supportedManipulations
      type: System.Windows.Input.Manipulations.Manipulations2D
      description: "Il set iniziale di manipolazioni supportate."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il <code> supportedManipulations </code> parametro non è una combinazione valida del <xref href=&quot;System.Windows.Input.Manipulations.Manipulations2D&quot;> </xref> valori di enumerazione."
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)
  id: '#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)'
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  type: Constructor
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Crea un nuovo <xref href=&quot;System.Windows.Input.Manipulations.ManipulationProcessor2D&quot;> </xref> oggetto."
  syntax:
    content: public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations, System.Windows.Input.Manipulations.ManipulationPivot2D pivot);
    parameters:
    - id: supportedManipulations
      type: System.Windows.Input.Manipulations.Manipulations2D
      description: "Il set iniziale di manipolazioni supportate."
    - id: pivot
      type: System.Windows.Input.Manipulations.ManipulationPivot2D
      description: "Le informazioni per le rotazioni del singolo manipolatore pivot."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il <code> supportedManipulations </code> parametro non è una combinazione valida del <xref href=&quot;System.Windows.Input.Manipulations.Manipulations2D&quot;> </xref> valori di enumerazione."
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  id: Completed
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Completed
  nameWithType: ManipulationProcessor2D.Completed
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Si verifica quando una modifica è stata completata."
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs> Completed;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)
  id: CompleteManipulation(System.Int64)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: CompleteManipulation(Int64)
  nameWithType: ManipulationProcessor2D.CompleteManipulation(Int64)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(Int64)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Forza il completamento della manipolazione corrente e genera il <xref href=&quot;System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed&quot;> </xref> evento."
  syntax:
    content: public void CompleteManipulation (long timestamp);
    parameters:
    - id: timestamp
      type: System.Int64
      description: "Il timestamp per completare la modifica, in tick di 100 nanosecondi."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il timestamp è minore del timestamp precedente per la modifica corrente."
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  id: Delta
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Delta
  nameWithType: ManipulationProcessor2D.Delta
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Si verifica quando l&quot;origine della manipolazione viene modificata o quando si sono verificate rotazione, ridimensionamento o conversione."
  remarks: "L&quot;evento Delta e <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=fullName>evento sono dello stesso tipo.</xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=fullName> In genere, è possibile utilizzare lo stesso gestore eventi per entrambi gli eventi."
  example:
  - '[!code-cs[ManipulationAPI#_ManipulationItem_OnManipulationOrInertiaDelta](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onmanipulationorinertiadelta)]'
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs> Delta;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  id: MinimumScaleRotateRadius
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: MinimumScaleRotateRadius
  nameWithType: ManipulationProcessor2D.MinimumScaleRotateRadius
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Ottiene o imposta il raggio minimo, in unità di coordinate, necessario per un manipolatore deve far parte di scalabilità e la rotazione."
  remarks: "Se un manipolatore è molto vicino al centro della massa dei manipolatori in fase di elaborazione, un movimento manipolatore molto piccoli può diventare una modifica di dimensioni molto grande a rotazione o ridimensionamento. Per evitare questo problema, impostare MinimumScaleRotateRadius su un valore maggiore di zero. I manipolatori che più si avvicina a distanza al centro della massa non verrà incluso nella rotazione e le operazioni di ridimensionamento.       Un valore tipico da utilizzare deve essere basato relativa alla grandezza probabile dei movimenti &quot;accidentale&quot; dei manipolatori. Ad esempio, se il manipolatore è un dito umano toccare una schermata, un raggio corrispondente a un centimetro o scopo potrebbe essere appropriato.       Il valore per MinimumScaleRotateRadius deve essere un numero finito non negativo."
  syntax:
    content: public float MinimumScaleRotateRadius { get; set; }
    return:
      type: System.Single
      description: "Il raggio minimo, in unità di coordinate, necessario per un manipolatore deve far parte di scalabilità e la rotazione."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  id: Pivot
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Pivot
  nameWithType: ManipulationProcessor2D.Pivot
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Ottiene o imposta le informazioni di pivot per il processore di manipolazione."
  remarks: "La proprietà Pivot viene utilizzata per fornire informazioni pivot per le rotazioni del singolo manipolatore. Impostando questa proprietà su null disabilita le rotazioni del singolo manipolatore."
  syntax:
    content: public System.Windows.Input.Manipulations.ManipulationPivot2D Pivot { get; set; }
    return:
      type: System.Windows.Input.Manipulations.ManipulationPivot2D
      description: "Le informazioni di pivot per il processore di manipolazione."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  id: ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  nameWithType: ManipulationProcessor2D.ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Elabora i manipolatori specificati come una singola azione batch."
  remarks: "Il parametro `manipulators` potrebbe essere un elenco vuoto o null. Se il numero di manipolatori che raggiungono zero, di conseguenza il <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed>viene generato l&quot;evento.</xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed>"
  example:
  - "In the following example, the <xref:System.Windows.UIElement.OnLostMouseCapture%2A> method of a <xref:System.Windows.UIElement> object is overridden to call the ProcessManipulators method with the list of <xref:System.Windows.Input.Manipulations.Manipulator2D> objects set to null.  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_OnLostMouseCapture](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onlostmousecapture)]  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_Timestamp](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_timestamp)]"
  syntax:
    content: public void ProcessManipulators (long timestamp, System.Collections.Generic.IEnumerable<System.Windows.Input.Manipulations.Manipulator2D> manipulators);
    parameters:
    - id: timestamp
      type: System.Int64
      description: "Il timestamp per il batch, in tick di 100 nanosecondi."
    - id: manipulators
      type: System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D}
      description: "Il set di manipolatori che sono attualmente nell&quot;ambito."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il timestamp è minore del timestamp precedente per la modifica corrente."
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  id: SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: SetParameters(ManipulationParameters2D)
  nameWithType: ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
  type: Method
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Imposta i parametri nel processore di manipolazione."
  syntax:
    content: public void SetParameters (System.Windows.Input.Manipulations.ManipulationParameters2D parameters);
    parameters:
    - id: parameters
      type: System.Windows.Input.Manipulations.ManipulationParameters2D
      description: "Parametri da impostare."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  id: Started
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: Started
  nameWithType: ManipulationProcessor2D.Started
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  type: Event
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Si verifica quando una nuova modifica è stata avviata."
  remarks: ''
  example:
  - "In the following example, an event handler for the Started event checks to see if inertia processing is running and if so, stops it.  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  \n  \n [!code-cs[ManipulationAPI#_ManipulationItem_Timestamp](~/add/codesnippet/csharp/build/manipulationitem.xaml.cs#_manipulationitem_timestamp)]"
  syntax:
    content: public event EventHandler<System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs> Started;
    return:
      type: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  id: SupportedManipulations
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  langs:
  - csharp
  name: SupportedManipulations
  nameWithType: ManipulationProcessor2D.SupportedManipulations
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  type: Property
  assemblies:
  - System.Windows.Input.Manipulations
  namespace: System.Windows.Input.Manipulations
  summary: "Ottiene o imposta il set corrente di manipolazioni supportate."
  syntax:
    content: public System.Windows.Input.Manipulations.Manipulations2D SupportedManipulations { get; set; }
    return:
      type: System.Windows.Input.Manipulations.Manipulations2D
      description: "Il set corrente di manipolazioni supportate."
  overload: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "La proprietà tenta di impostare un valore che non è una combinazione valida del <xref href=&quot;System.Windows.Input.Manipulations.Manipulations2D&quot;> </xref> valori di enumerazione."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ManipulationProcessor2D(Manipulations2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D)
- uid: System.Windows.Input.Manipulations.Manipulations2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: Manipulations2D
  nameWithType: Manipulations2D
  fullName: System.Windows.Input.Manipulations.Manipulations2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ManipulationProcessor2D(Manipulations2D,ManipulationPivot2D)
- uid: System.Windows.Input.Manipulations.ManipulationPivot2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: ManipulationPivot2D
  nameWithType: ManipulationPivot2D
  fullName: System.Windows.Input.Manipulations.ManipulationPivot2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Completed
  nameWithType: ManipulationProcessor2D.Completed
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<Manipulation2DCompletedEventArgs>
  nameWithType: EventHandler<Manipulation2DCompletedEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs
    name: Manipulation2DCompletedEventArgs
    nameWithType: Manipulation2DCompletedEventArgs
    fullName: Manipulation2DCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: CompleteManipulation(Int64)
  nameWithType: ManipulationProcessor2D.CompleteManipulation(Int64)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Delta
  nameWithType: ManipulationProcessor2D.Delta
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<Manipulation2DDeltaEventArgs>
  nameWithType: EventHandler<Manipulation2DDeltaEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs
    name: Manipulation2DDeltaEventArgs
    nameWithType: Manipulation2DDeltaEventArgs
    fullName: Manipulation2DDeltaEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: MinimumScaleRotateRadius
  nameWithType: ManipulationProcessor2D.MinimumScaleRotateRadius
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Pivot
  nameWithType: ManipulationProcessor2D.Pivot
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  nameWithType: ManipulationProcessor2D.ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(Int64,IEnumerable<Manipulator2D>)
- uid: System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Manipulator2D>
  nameWithType: IEnumerable<Manipulator2D>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Input.Manipulations.Manipulator2D>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.Input.Manipulations.Manipulator2D>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulator2D
    name: Manipulator2D
    nameWithType: Manipulator2D
    fullName: Manipulator2D
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SetParameters(ManipulationParameters2D)
  nameWithType: ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(ManipulationParameters2D)
- uid: System.Windows.Input.Manipulations.ManipulationParameters2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: ManipulationParameters2D
  nameWithType: ManipulationParameters2D
  fullName: System.Windows.Input.Manipulations.ManipulationParameters2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Started
  nameWithType: ManipulationProcessor2D.Started
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.Started
- uid: System.EventHandler{System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<Manipulation2DStartedEventArgs>
  nameWithType: EventHandler<Manipulation2DStartedEventArgs>
  fullName: System.EventHandler<System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs
    name: Manipulation2DStartedEventArgs
    nameWithType: Manipulation2DStartedEventArgs
    fullName: Manipulation2DStartedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SupportedManipulations
  nameWithType: ManipulationProcessor2D.SupportedManipulations
  fullName: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ManipulationProcessor2D
  nameWithType: ManipulationProcessor2D.ManipulationProcessor2D
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: CompleteManipulation
  nameWithType: ManipulationProcessor2D.CompleteManipulation
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: MinimumScaleRotateRadius
  nameWithType: ManipulationProcessor2D.MinimumScaleRotateRadius
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: Pivot
  nameWithType: ManipulationProcessor2D.Pivot
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: ProcessManipulators
  nameWithType: ManipulationProcessor2D.ProcessManipulators
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SetParameters
  nameWithType: ManipulationProcessor2D.SetParameters
- uid: System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations*
  parent: System.Windows.Input.Manipulations.ManipulationProcessor2D
  isExternal: false
  name: SupportedManipulations
  nameWithType: ManipulationProcessor2D.SupportedManipulations
