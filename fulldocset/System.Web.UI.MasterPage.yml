### YamlMime:ManagedReference
items:
- uid: System.Web.UI.MasterPage
  id: MasterPage
  children:
  - System.Web.UI.MasterPage.#ctor
  - System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  - System.Web.UI.MasterPage.ContentPlaceHolders
  - System.Web.UI.MasterPage.ContentTemplates
  - System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)
  - System.Web.UI.MasterPage.Master
  - System.Web.UI.MasterPage.MasterPageFile
  langs:
  - csharp
  name: MasterPage
  nameWithType: MasterPage
  fullName: System.Web.UI.MasterPage
  type: Class
  summary: "Funge da modello e contenitore di unione per le pagine che sono costituite solo <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> controlli e dai rispettivi controlli figlio."
  remarks: "Una pagina master funge da contenitore di modelli e pagina di unione per le pagine dell&quot;applicazione Web ASP.NET. Pagine master forniscono un modo pratico per condividere un set di pagine di contenuto nella struttura e il contenuto. Segnaposto di contenuto consentono di definire le sezioni della pagina master per sostituire con il contenuto dalle pagine di contenuto.       Quando si utilizza una pagina master e le relative pagine di contenuto, aggiungere i tag di documento XHTML richiesti (ad esempio `html`, `head`, e `body`) solo alla pagina master e non occorre creare altri file aspx (pagine ASP.NET) come pagine Web autonome. Le pagine contenute definiscono il contenuto da inserire nei segnaposto della pagina master.       Quando una richiesta HTTP viene effettuata per una pagina in fase di esecuzione, la pagina master e pagine di contenuto vengono combinate in un&quot;unica classe con lo stesso nome di pagine di contenuto. La classe compilata risultante, unita deriva dalla <xref:System.Web.UI.Page>classe.</xref:System.Web.UI.Page>       Una pagina master può contenere i controlli server e di markup, nonché controlli contenitore. Ogni elemento che viene inserito nella pagina master all&quot;esterno di un <xref:System.Web.UI.WebControls.ContentPlaceHolder>controllo viene eseguito il rendering in tutte le pagine risultanti dall&quot;unione della pagina master e pagine di contenuto.</xref:System.Web.UI.WebControls.ContentPlaceHolder>       Ogni pagina di contenuto che corrisponde alla pagina master deve fare riferimento alla pagina master in un `MasterPageFile` attributo della direttiva. Contenuto pagine possono contenere solo un `@ Page` (direttiva) e uno o più <xref:System.Web.UI.WebControls.Content>controlli.</xref:System.Web.UI.WebControls.Content> Tutti i controlli di testo, markup e server di pagina deve essere inseriti in <xref:System.Web.UI.WebControls.Content>controlli.</xref:System.Web.UI.WebControls.Content> Identificare il <xref:System.Web.UI.WebControls.ContentPlaceHolder>pagina di controllo di un master che un <xref:System.Web.UI.WebControls.Content>controllo è associato, impostare il <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A>proprietà del <xref:System.Web.UI.WebControls.Content>controllo.</xref:System.Web.UI.WebControls.Content> </xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> </xref:System.Web.UI.WebControls.Content> </xref:System.Web.UI.WebControls.ContentPlaceHolder>       In fase di esecuzione, il contenuto dinamico da ogni <xref:System.Web.UI.WebControls.Content>controllo nella pagina richiesta viene unita con la pagina master nella posizione esatta dell&quot;oggetto correlato <xref:System.Web.UI.WebControls.ContentPlaceHolder>controllo.</xref:System.Web.UI.WebControls.ContentPlaceHolder> </xref:System.Web.UI.WebControls.Content> Qualsiasi altro markup e controlli nella pagina master non sono interessati. I gestori eventi possono essere definiti nella classe master e nella pagina contenuto. Per ulteriori informazioni, vedere [eventi in pagine Master ASP.NET e contenuto](~/add/includes/ajax-current-ext-md.md).       La classe MasterPage è associata a file con estensione master. Questi file vengono compilati in fase di esecuzione come oggetti MasterPage e vengono memorizzati nella cache nella memoria del server.       La pagina master viene resa disponibile per la pagina contenuto tramite la <xref:System.Web.UI.Page.Master%2A>proprietà della classe base di <xref:System.Web.UI.Page>classe.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.Master%2A> La <xref:System.Web.UI.Page.Master%2A>proprietà restituisce l&quot;istanza della pagina master; tuttavia, è tipizzata come classe base MasterPage.</xref:System.Web.UI.Page.Master%2A> Per i controlli di accesso, le proprietà e funzioni della pagina master, la <xref:System.Web.UI.Page.Master%2A>proprietà può essere convertita in un oggetto MasterPage.</xref:System.Web.UI.Page.Master%2A> Il nome di classe della pagina master viene definito utilizzando il `ClassName` attributo della direttiva.      > [!NOTE] > File con estensione master non sono forniti a un browser.       Le direttive valide in una pagina master sono identici a quelli disponibili in un <xref:System.Web.UI.UserControl>oggetto.</xref:System.Web.UI.UserControl> They can include the following attributes:      -   `AutoEventWireup`      -   `ClassName`      -   `CodeFile`      -   `CompilerMode`      -   `CompilerOptions`      -   `Debug`      -   `Description`      -   `EnableTheming`      -   `EnableViewState`      -   `Explicit`      -   `Inherits`      -   `Language`      -   `LinePragmas`      -   `MasterPageFile`      -   `Src`      -   `Strict`      -   `WarningLevel`       Master page directives do not override the directives on individual content pages.       Pagine master vengono spesso create in modo dichiarativo. Se si desidera creare una pagina master a livello di codice, è possibile derivare direttamente dalla classe MasterPage. Oltre a estendere la classe MasterPage, è necessario creare il file con estensione master per visualizzare l&quot;interfaccia utente (UI) che è associato con le classi che è stato richiamato nel file di origine.      > [!NOTE] > Quando si crea una pagina master creando prima una classe personalizzata, è necessario includere tutti gli spazi dei nomi necessari per le classi che vengono utilizzate dalla pagina.       Per ulteriori informazioni sulle pagine master, vedere [pagine Master ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This section contains four code examples:  \n  \n-   The first code example demonstrates how to create a master page declaratively.  \n  \n-   The second code example represents the content page that is associated with the master page that was created in the first code example.  \n  \n-   The third code example demonstrates how to add a property to a master page.  \n  \n-   The fourth code example demonstrates how to use a content page to access a public property on the master page.  \n  \n The following example demonstrates how to create a master page declaratively and to add some content to it using a content page. The first Web page is the .master page named `MasterPageSample_1.master`.  \n  \n```c#  \n<%@ Master Language=\"C#\" %>  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n<html >  \n<head runat=\"server\">  \n    <title>MasterPage Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\" />  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" %>  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n<html >  \n<head runat=\"server\">  \n    <title>MasterPage Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\" />  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n The following example represents the content page that is associated with `MasterPageSample_1.master`. It contains a <xref:System.Web.UI.WebControls.Content> control and identifies the <xref:System.Web.UI.WebControls.ContentPlaceHolder> control that the content is associated with by using the <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> property.  \n  \n```c#  \n<%@ Page Language=\"C#\" MasterPageFile=\"~/MasterPageSample_1cs.master\" Title=\"Content Page\"%>  \n  \n<asp:content   \n    runat=\"server\"  \n    contentplaceholderid=\"ContentPlaceHolder1\" >Hello, Master Pages!</asp:content>  \n```  \n  \n```vb#  \n<%@ Page Language=\"VB\" MasterPageFile=\"~/MasterPageSample_1vb.master\" Title=\"Content Page\"%>  \n  \n<asp:content   \n    runat=\"server\"  \n    contentplaceholderid=\"ContentPlaceHolder1\" >Hello, Master Pages!</asp:content>  \n```  \n  \n The following example demonstrates how to add a property to a master page. The `ClassName` attribute is used to name the master page.  \n  \n```c#  \n<%@ Master Language=\"C#\" ClassName=\"MasterExample\" %>  \n  \n<script runat=\"server\">  \n        public string SiteName  \n        {  \n            get { return \"My Site Name\"; }  \n        }  \n</script>  \n  \n<html >  \n<head runat=\"server\">  \n    <title>MasterPage Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" ClassName=\"MasterExample\" %>  \n  \n<script runat=\"server\">  \n  Public ReadOnly Property SiteName() As String  \n    Get  \n      Return \"My Site Name\"  \n    End Get  \n  End Property  \n  \n</script>  \n  \n<html >  \n<head runat=\"server\">  \n    <title>MasterPage Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n The following example shows how to use a content page to access the public property `SiteName` on the master page in the preceding code example.  \n  \n```c#  \n<%@ Page Language=\"C#\" MasterPageFile=\"~/MasterPage.master\" Title=\"MasterPage Example\" %>  \n  \n<script runat=\"server\">  \n  protected void Page_Load(object sender, EventArgs e)  \n  {  \n    MasterExample m = (MasterExample)Page.Master;  \n    mylabel.Text = m.SiteName;  \n  }  \n</script>  \n  \n<asp:Content ID=\"Content1\" ContentPlaceHolderID=\"ContentPlaceHolder1\" runat=\"Server\">  \n    Hello, Master Pages!  \n    <asp:Label runat=\"server\" Text=\"Label\" ID=\"mylabel\"></asp:Label>  \n</asp:Content>  \n```  \n  \n```vb#  \n<%@ Page Language=\"VB\" MasterPageFile=\"~/MasterPage.master\" Title=\"MasterPage Example\" %>  \n  \n<script runat=\"server\">  \n  \n  Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)  \n    Dim m As MasterExample = CType(Page.Master, MasterPage)  \n    mylabel.Text = m.SiteName  \n  End Sub  \n</script>  \n  \n<asp:Content ID=\"Content1\" ContentPlaceHolderID=\"ContentPlaceHolder1\" runat=\"Server\">  \n    Hello, Master Pages!  \n    <asp:Label runat=\"server\" Text=\"Label\" ID=\"mylabel\"></asp:Label>  \n</asp:Content>  \n```"
  syntax:
    content: >-
      [System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.MasterPageControlBuilder))]

      [System.Web.UI.ParseChildren(false)]

      public class MasterPage : System.Web.UI.UserControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.TemplateControl
  - System.Web.UI.UserControl
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.TemplateControl.AbortTransaction
  - System.Web.UI.TemplateControl.AppRelativeVirtualPath
  - System.Web.UI.TemplateControl.AutoHandlers
  - System.Web.UI.TemplateControl.CommitTransaction
  - System.Web.UI.TemplateControl.Construct
  - System.Web.UI.TemplateControl.CreateResourceBasedLiteralControl(System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.EnableTheming
  - System.Web.UI.TemplateControl.Error
  - System.Web.UI.TemplateControl.Eval(System.String)
  - System.Web.UI.TemplateControl.Eval(System.String,System.String)
  - System.Web.UI.TemplateControl.FrameworkInitialize
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String)
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.Type,System.Object[])
  - System.Web.UI.TemplateControl.LoadTemplate(System.String)
  - System.Web.UI.TemplateControl.OnAbortTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnCommitTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnError(System.EventArgs)
  - System.Web.UI.TemplateControl.ParseControl(System.String)
  - System.Web.UI.TemplateControl.ParseControl(System.String,System.Boolean)
  - System.Web.UI.TemplateControl.ReadStringResource
  - System.Web.UI.TemplateControl.ReadStringResource(System.Type)
  - System.Web.UI.TemplateControl.SetStringResourcePointer(System.Object,System.Int32)
  - System.Web.UI.TemplateControl.SupportAutoEvents
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  - System.Web.UI.TemplateControl.TestDeviceFilter(System.String)
  - System.Web.UI.TemplateControl.WriteUTF8ResourceString(System.Web.UI.HtmlTextWriter,System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.XPath(System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPath(System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPathSelect(System.String)
  - System.Web.UI.TemplateControl.XPathSelect(System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.UserControl.Application
  - System.Web.UI.UserControl.Attributes
  - System.Web.UI.UserControl.Cache
  - System.Web.UI.UserControl.CachePolicy
  - System.Web.UI.UserControl.DesignerInitialize
  - System.Web.UI.UserControl.InitializeAsUserControl(System.Web.UI.Page)
  - System.Web.UI.UserControl.IsPostBack
  - System.Web.UI.UserControl.LoadViewState(System.Object)
  - System.Web.UI.UserControl.MapPath(System.String)
  - System.Web.UI.UserControl.OnInit(System.EventArgs)
  - System.Web.UI.UserControl.Request
  - System.Web.UI.UserControl.Response
  - System.Web.UI.UserControl.SaveViewState
  - System.Web.UI.UserControl.Server
  - System.Web.UI.UserControl.Session
  - System.Web.UI.UserControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.UserControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.UserControl.System#Web#UI#IUserControlDesignerAccessor#InnerText
  - System.Web.UI.UserControl.System#Web#UI#IUserControlDesignerAccessor#TagName
  - System.Web.UI.UserControl.Trace
  - System.Web.UI.UserControl.TryUpdateModel``1(``0)
  - System.Web.UI.UserControl.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  - System.Web.UI.UserControl.UpdateModel``1(``0)
  - System.Web.UI.UserControl.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  platform:
  - net462
- uid: System.Web.UI.MasterPage.#ctor
  id: '#ctor'
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: MasterPage()
  nameWithType: MasterPage.MasterPage()
  fullName: System.Web.UI.MasterPage.MasterPage()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Crea una nuova istanza di <xref href=&quot;System.Web.UI.MasterPage&quot;> </xref> classe."
  syntax:
    content: public MasterPage ();
    parameters: []
  overload: System.Web.UI.MasterPage.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  id: AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: AddContentTemplate(String,ITemplate)
  nameWithType: MasterPage.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.MasterPage.AddContentTemplate(String,ITemplate)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Aggiunge un <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> controllo il <xref:System.Web.UI.MasterPage.ContentTemplates*>dizionario.</xref:System.Web.UI.MasterPage.ContentTemplates*>"
  remarks: "Le classi derivate pagina master possono aggiungere <xref:System.Web.UI.WebControls.Content>controlli per il <xref:System.Web.UI.MasterPage.ContentTemplates%2A>dizionario utilizzando il metodo AddContentTemplate.</xref:System.Web.UI.MasterPage.ContentTemplates%2A> </xref:System.Web.UI.WebControls.Content> Tipi derivati non in genere l&quot;override del metodo AddContentTemplate."
  syntax:
    content: protected void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);
    parameters:
    - id: templateName
      type: System.String
      description: "Un nome univoco per il <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref>."
    - id: template
      type: System.Web.UI.ITemplate
      description: "The <xref href=&quot;System.Web.UI.WebControls.Content&quot;></xref>."
  overload: System.Web.UI.MasterPage.AddContentTemplate*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> controllo con lo stesso nome esiste già nel <xref:System.Web.UI.MasterPage.ContentTemplates*>dizionario.</xref:System.Web.UI.MasterPage.ContentTemplates*>"
  platform:
  - net462
- uid: System.Web.UI.MasterPage.ContentPlaceHolders
  id: ContentPlaceHolders
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: ContentPlaceHolders
  nameWithType: MasterPage.ContentPlaceHolders
  fullName: System.Web.UI.MasterPage.ContentPlaceHolders
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un elenco di <xref href=&quot;System.Web.UI.WebControls.ContentPlaceHolder&quot;> </xref> controlli che utilizza la pagina master per definire diverse aree di contenuto."
  remarks: "Le classi derivate pagina master accedono alla proprietà ContentPlaceHolder per visualizzare l&quot;elenco corrente <xref:System.Web.UI.WebControls.ContentPlaceHolder>controlli che sono contenuti dal master.</xref:System.Web.UI.WebControls.ContentPlaceHolder> Tipi derivati non in genere l&quot;override della proprietà ContentPlaceHolder."
  syntax:
    content: protected System.Collections.IList ContentPlaceHolders { get; }
    return:
      type: System.Collections.IList
      description: "Un <xref:System.Collections.IList>di <xref href=&quot;System.Web.UI.WebControls.ContentPlaceHolder&quot;> </xref> controlli utilizzati come segnaposto per la pagina master <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> controlli presenti nelle pagine di contenuto.</xref:System.Collections.IList>"
  overload: System.Web.UI.MasterPage.ContentPlaceHolders*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.ContentTemplates
  id: ContentTemplates
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: ContentTemplates
  nameWithType: MasterPage.ContentTemplates
  fullName: System.Web.UI.MasterPage.ContentTemplates
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un elenco dei controlli contenuto associati con la pagina master."
  remarks: "Le classi derivate pagina master accedono alla proprietà ContentTemplates per recuperare l&quot;oggetto corrente <xref:System.Web.UI.WebControls.Content>controlli, come definito dalle pagine di contenuto associate.</xref:System.Web.UI.WebControls.Content> Tipi derivati non in genere l&quot;override della proprietà ContentTemplates."
  syntax:
    content: protected System.Collections.IDictionary ContentTemplates { get; }
    return:
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IList>dei controlli contenuto associati alla pagina master.</xref:System.Collections.IList>"
  overload: System.Web.UI.MasterPage.ContentTemplates*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)
  id: InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: InstantiateInContentPlaceHolder(Control,ITemplate)
  nameWithType: MasterPage.InstantiateInContentPlaceHolder(Control,ITemplate)
  fullName: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(Control,ITemplate)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Fornisce un metodo per impostare il controllo del modello corrente a una pagina a cui appartiene la pagina master."
  syntax:
    content: public void InstantiateInContentPlaceHolder (System.Web.UI.Control contentPlaceHolder, System.Web.UI.ITemplate template);
    parameters:
    - id: contentPlaceHolder
      type: System.Web.UI.Control
      description: "Il controllo che rappresenta il contenitore del contenuto."
    - id: template
      type: System.Web.UI.ITemplate
      description: "Il <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> istanza da utilizzare."
  overload: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.Master
  id: Master
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: Master
  nameWithType: MasterPage.Master
  fullName: System.Web.UI.MasterPage.Master
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene la pagina del master corrente nel master padre annidati scenari con pagine master."
  remarks: "Il Master per la proprietà è di sola lettura, perché la pagina master gerarchie non possono essere compilate in fase di esecuzione."
  example:
  - "This section contains three code examples. The first code example demonstrates how to create a nested master page`.` The second code example demonstrates how to reference the master page that was created in the first code example. The third code example demonstrates how to use a content page to reference the master page that was created in the second code example.  \n  \n The following code example demonstrates how to create a nested master page and represents the parent master page named `ParentMasterPage_1`.  \n  \n```c#  \n<%@ Master Language=\"C#\" %>  \n  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n  \n<html >  \n<head runat=\"server\">  \n    <title>Nested Master Page Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <h1>This is content in the parent master page.</h1>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" %>  \n  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n  \n<html >  \n<head runat=\"server\">  \n    <title>Nested Master Page Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <h1>This is content in the parent master page.</h1>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n The following code example demonstrates how to use a nested master page named `ChildMasterPage_1` that references the master page that was created in the preceding code example.  \n  \n```c#  \n<%@ Master Language=\"C#\" MasterPageFile=\"~/ParentMasterPage_1cs.master\" %>  \n  \n<asp:Content Runat=\"Server\" ContentPlaceHolderID=\"ContentPlaceHolder1\">  \n    <h2>This is the content of a nested Master Page.</h2>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder2\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n</asp:Content>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" MasterPageFile=\"~/ParentMasterPage_1vb.master\" %>  \n  \n<asp:Content Runat=\"Server\" ContentPlaceHolderID=\"ContentPlaceHolder1\">  \n    <h2>This is the content of a nested Master Page.</h2>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder2\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n</asp:Content>  \n```  \n  \n The following code example demonstrates how to use a content page named `ContentPage` that references the `ChildMasterPage_1` that was created in the preceding code example.  \n  \n```c#  \n<%@ Page Language=\"C#\" MasterPageFile=\"~/ChildMasterPage_1cs.master\" Title=\"Untitled Page\"%>  \n  \n<asp:content runat=\"server\" contentplaceholderid=\"ContentPlaceHolder2\">  \nThis is the content of a Content control.  \n</asp:content>  \n```  \n  \n```vb#  \n<%@ Page Language=\"VB\" MasterPageFile=\"~/ChildMasterPage_1vb.master\" Title=\"Untitled Page\"%>  \n  \n<asp:content runat=\"server\" contentplaceholderid=\"ContentPlaceHolder2\">  \nThis is the content of a Content control.  \n</asp:content>  \n```"
  syntax:
    content: public System.Web.UI.MasterPage Master { get; }
    return:
      type: System.Web.UI.MasterPage
      description: "La pagina master che è il padre della pagina master corrente. in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se la pagina master corrente non ha elementi padre."
  overload: System.Web.UI.MasterPage.Master*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.MasterPageFile
  id: MasterPageFile
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: MasterPageFile
  nameWithType: MasterPage.MasterPageFile
  fullName: System.Web.UI.MasterPage.MasterPageFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene o imposta il nome della pagina master che include il contenuto corrente."
  remarks: ''
  example:
  - "This section contains three code examples. The first code example demonstrates how to create a nested master page`.` The second code example demonstrates how to reference the master page that was created in the first code example. The third code example demonstrates how to use a content page to reference the master page that was created in the second code example.  \n  \n The following code example demonstrates how to create a nested master page and represents the parent master page named `ParentMasterPage_1`.  \n  \n```c#  \n<%@ Master Language=\"C#\" %>  \n  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n  \n<html >  \n<head runat=\"server\">  \n    <title>Nested Master Page Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <h1>This is content in the parent master page.</h1>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" %>  \n  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n  \n<html >  \n<head runat=\"server\">  \n    <title>Nested Master Page Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <h1>This is content in the parent master page.</h1>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n The following code example demonstrates how to use a nested master page named `ChildMasterPage_1` that references the master page that was created in the preceding code example.  \n  \n```c#  \n<%@ Master Language=\"C#\" MasterPageFile=\"~/ParentMasterPage_1cs.master\" %>  \n  \n<asp:Content Runat=\"Server\" ContentPlaceHolderID=\"ContentPlaceHolder1\">  \n    <h2>This is the content of a nested Master Page.</h2>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder2\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n</asp:Content>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" MasterPageFile=\"~/ParentMasterPage_1vb.master\" %>  \n  \n<asp:Content Runat=\"Server\" ContentPlaceHolderID=\"ContentPlaceHolder1\">  \n    <h2>This is the content of a nested Master Page.</h2>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder2\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n</asp:Content>  \n```  \n  \n The following code example demonstrates how to use a content page named `ContentPage` that references the `ChildMasterPage_1` that was created in the preceding code example.  \n  \n```c#  \n<%@ Page Language=\"C#\" MasterPageFile=\"~/ChildMasterPage_1cs.master\" Title=\"Untitled Page\"%>  \n  \n<asp:content runat=\"server\" contentplaceholderid=\"ContentPlaceHolder2\">  \nThis is the content of a Content control.  \n</asp:content>  \n```  \n  \n```vb#  \n<%@ Page Language=\"VB\" MasterPageFile=\"~/ChildMasterPage_1vb.master\" Title=\"Untitled Page\"%>  \n  \n<asp:content runat=\"server\" contentplaceholderid=\"ContentPlaceHolder2\">  \nThis is the content of a Content control.  \n</asp:content>  \n```"
  syntax:
    content: public string MasterPageFile { get; set; }
    return:
      type: System.String
      description: "Il nome della pagina master che è il padre della pagina master corrente. in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se la pagina master corrente non ha elementi padre."
  overload: System.Web.UI.MasterPage.MasterPageFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La proprietà MasterPageFile può essere impostata solo prima o il <xref href=&quot;System.Web.UI.Page.PreInit&quot;> </xref> evento."
  platform:
  - net462
references:
- uid: System.Web.UI.UserControl
  isExternal: false
  name: System.Web.UI.UserControl
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.MasterPage.#ctor
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: MasterPage()
  nameWithType: MasterPage.MasterPage()
  fullName: System.Web.UI.MasterPage.MasterPage()
- uid: System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: AddContentTemplate(String,ITemplate)
  nameWithType: MasterPage.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.MasterPage.AddContentTemplate(String,ITemplate)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.MasterPage.ContentPlaceHolders
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: ContentPlaceHolders
  nameWithType: MasterPage.ContentPlaceHolders
  fullName: System.Web.UI.MasterPage.ContentPlaceHolders
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Web.UI.MasterPage.ContentTemplates
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: ContentTemplates
  nameWithType: MasterPage.ContentTemplates
  fullName: System.Web.UI.MasterPage.ContentTemplates
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: InstantiateInContentPlaceHolder(Control,ITemplate)
  nameWithType: MasterPage.InstantiateInContentPlaceHolder(Control,ITemplate)
  fullName: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(Control,ITemplate)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.MasterPage.Master
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: Master
  nameWithType: MasterPage.Master
  fullName: System.Web.UI.MasterPage.Master
- uid: System.Web.UI.MasterPage
  parent: System.Web.UI
  isExternal: false
  name: MasterPage
  nameWithType: MasterPage
  fullName: System.Web.UI.MasterPage
- uid: System.Web.UI.MasterPage.MasterPageFile
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: MasterPageFile
  nameWithType: MasterPage.MasterPageFile
  fullName: System.Web.UI.MasterPage.MasterPageFile
- uid: System.Web.UI.MasterPage.#ctor*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: MasterPage
  nameWithType: MasterPage.MasterPage
- uid: System.Web.UI.MasterPage.AddContentTemplate*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: AddContentTemplate
  nameWithType: MasterPage.AddContentTemplate
- uid: System.Web.UI.MasterPage.ContentPlaceHolders*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: ContentPlaceHolders
  nameWithType: MasterPage.ContentPlaceHolders
- uid: System.Web.UI.MasterPage.ContentTemplates*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: ContentTemplates
  nameWithType: MasterPage.ContentTemplates
- uid: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: InstantiateInContentPlaceHolder
  nameWithType: MasterPage.InstantiateInContentPlaceHolder
- uid: System.Web.UI.MasterPage.Master*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: Master
  nameWithType: MasterPage.Master
- uid: System.Web.UI.MasterPage.MasterPageFile*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: MasterPageFile
  nameWithType: MasterPage.MasterPageFile
