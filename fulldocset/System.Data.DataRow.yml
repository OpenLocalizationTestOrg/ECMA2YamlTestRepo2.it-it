### YamlMime:ManagedReference
items:
- uid: System.Data.DataRow
  id: DataRow
  children:
  - System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  - System.Data.DataRow.AcceptChanges
  - System.Data.DataRow.BeginEdit
  - System.Data.DataRow.CancelEdit
  - System.Data.DataRow.ClearErrors
  - System.Data.DataRow.Delete
  - System.Data.DataRow.EndEdit
  - System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  - System.Data.DataRow.GetChildRows(System.String)
  - System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  - System.Data.DataRow.GetColumnError(System.Int32)
  - System.Data.DataRow.GetColumnError(System.String)
  - System.Data.DataRow.GetColumnsInError
  - System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  - System.Data.DataRow.GetParentRow(System.String)
  - System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  - System.Data.DataRow.GetParentRows(System.String)
  - System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  - System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.HasErrors
  - System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  - System.Data.DataRow.IsNull(System.Data.DataColumn)
  - System.Data.DataRow.IsNull(System.Int32)
  - System.Data.DataRow.IsNull(System.String)
  - System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.Data.DataColumn)
  - System.Data.DataRow.Item(System.Int32)
  - System.Data.DataRow.Item(System.String)
  - System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  - System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  - System.Data.DataRow.ItemArray
  - System.Data.DataRow.RejectChanges
  - System.Data.DataRow.RowError
  - System.Data.DataRow.RowState
  - System.Data.DataRow.SetAdded
  - System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  - System.Data.DataRow.SetColumnError(System.Int32,System.String)
  - System.Data.DataRow.SetColumnError(System.String,System.String)
  - System.Data.DataRow.SetModified
  - System.Data.DataRow.SetNull(System.Data.DataColumn)
  - System.Data.DataRow.SetParentRow(System.Data.DataRow)
  - System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  - System.Data.DataRow.Table
  langs:
  - csharp
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
  type: Class
  summary: "Rappresenta una riga di dati in un <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "Il DataRow e <xref:System.Data.DataColumn>gli oggetti rappresentano i componenti principali di un <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataColumn> Utilizzare l&quot;oggetto DataRow e la relativa proprietà e metodi per recuperare e valutare; inserire, eliminare e aggiornare i valori in <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Il <xref:System.Data.DataRowCollection>rappresenta gli oggetti DataRow effettivi nel <xref:System.Data.DataTable>e <xref:System.Data.DataColumnCollection>contiene gli <xref:System.Data.DataColumn>oggetti che descrivono lo schema di <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataColumn> </xref:System.Data.DataColumnCollection> </xref:System.Data.DataTable> </xref:System.Data.DataRowCollection> Utilizzare l&quot; overload <xref:System.Data.DataRow.Item%2A>per restituire o impostare il valore di un <xref:System.Data.DataColumn>.</xref:System.Data.DataColumn> </xref:System.Data.DataRow.Item%2A>       Utilizzare le <xref:System.Data.DataRow.HasVersion%2A> <xref:System.Data.DataRow.IsNull%2A>proprietà</xref:System.Data.DataRow.IsNull%2A> e per determinare lo stato di un valore particolare riga e la <xref:System.Data.DataRow.RowState%2A>proprietà per determinare lo stato della riga rispetto al padre <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.HasVersion%2A>       Per creare un nuovo DataRow, utilizzare il <xref:System.Data.DataTable.NewRow%2A>metodo il <xref:System.Data.DataTable>oggetto.</xref:System.Data.DataTable> </xref:System.Data.DataTable.NewRow%2A> Dopo aver creato un nuovo DataRow, utilizzare il <xref:System.Data.DataRowCollection.Add%2A>metodo per aggiungere il nuovo DataRow a <xref:System.Data.DataRowCollection>.</xref:System.Data.DataRowCollection> </xref:System.Data.DataRowCollection.Add%2A> Infine, chiamare il <xref:System.Data.DataRow.AcceptChanges%2A>metodo il <xref:System.Data.DataTable>oggetto per confermare l&quot;aggiunta.</xref:System.Data.DataTable> </xref:System.Data.DataRow.AcceptChanges%2A> Per ulteriori informazioni sull&quot;aggiunta di dati da un <xref:System.Data.DataTable>, vedere [aggiunta di dati a un oggetto DataTable](~/add/includes/ajax-current-ext-md.md).</xref:System.Data.DataTable>       È possibile eliminare un DataRow dal <xref:System.Data.DataRowCollection>chiamando il <xref:System.Data.DataRowCollection.Remove%2A>metodo il <xref:System.Data.DataRowCollection>, oppure chiamando il <xref:System.Data.DataRow.Delete%2A>metodo dell&quot;oggetto DataRow.</xref:System.Data.DataRow.Delete%2A> </xref:System.Data.DataRowCollection> </xref:System.Data.DataRowCollection.Remove%2A> </xref:System.Data.DataRowCollection> Il <xref:System.Data.DataRowCollection.Remove%2A>metodo rimuove la riga dalla raccolta.</xref:System.Data.DataRowCollection.Remove%2A> Al contrario, <xref:System.Data.DataRow.Delete%2A>Contrassegna per la rimozione di DataRow.</xref:System.Data.DataRow.Delete%2A> La rimozione effettiva si verifica quando si chiama <xref:System.Data.DataRow.AcceptChanges%2A>metodo.</xref:System.Data.DataRow.AcceptChanges%2A> Chiamando <xref:System.Data.DataRow.Delete%2A>, è possibile controllare a livello di codice le righe contrassegnate per la rimozione prima di eliminarle effettivamente.</xref:System.Data.DataRow.Delete%2A> Per ulteriori informazioni, vedere [l&quot;eliminazione di DataRow](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a new DataRow by calling the <xref:System.Data.DataTable.NewRow%2A> method of the <xref:System.Data.DataTable> object.  \n  \n [!code-vb[Classic WebData DataRow Example#1](~/add/codesnippet/visualbasic/t-system.data.datarow_1.vb)]\n [!code-cs[Classic WebData DataRow Example#1](~/add/codesnippet/csharp/t-system.data.datarow_1.cs)]"
  syntax:
    content: public class DataRow
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  id: '#ctor(System.Data.DataRowBuilder)'
  parent: System.Data.DataRow
  langs:
  - csharp
  name: DataRow(DataRowBuilder)
  nameWithType: DataRow.DataRow(DataRowBuilder)
  fullName: System.Data.DataRow.DataRow(DataRowBuilder)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inizializza una nuova istanza di DataRow. Costruisce una riga dal generatore. Solo per uso interno..."
  syntax:
    content: protected DataRow (System.Data.DataRowBuilder builder);
    parameters:
    - id: builder
      type: System.Data.DataRowBuilder
      description: "Generatore"
  overload: System.Data.DataRow.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.AcceptChanges
  id: AcceptChanges
  parent: System.Data.DataRow
  langs:
  - csharp
  name: AcceptChanges()
  nameWithType: DataRow.AcceptChanges()
  fullName: System.Data.DataRow.AcceptChanges()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Esegue il commit di tutte le modifiche apportate a questa riga dall&quot;ultima chiamata di AcceptChanges."
  remarks: "Durante la chiamata di AcceptChanges, il <xref:System.Data.DataRow.EndEdit%2A>metodo viene chiamato in modo implicito per terminare tutte le modifiche.</xref:System.Data.DataRow.EndEdit%2A> Se il <xref:System.Data.DataRow.RowState%2A>della riga è stato aggiunto o modificato, il <xref:System.Data.DataRow.RowState%2A>diventa Unchanged.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.RowState%2A> Se il <xref:System.Data.DataRow.RowState%2A>è stato eliminato, la riga viene rimossa.</xref:System.Data.DataRow.RowState%2A>       Vedere il <xref:System.Data.DataRow.BeginEdit%2A>metodo per ulteriori informazioni.</xref:System.Data.DataRow.BeginEdit%2A>       La <xref:System.Data.DataTable>classe include inoltre un <xref:System.Data.DataTable.AcceptChanges%2A>metodo che influisce sulle modifiche apportate all&quot;intera tabella.</xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataTable> Per ulteriori informazioni e un esempio di codice viene illustrato come accettare e rifiutare le modifiche alle singole righe di dati, vedere [AcceptChanges e RejectChanges](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example first creates a new <xref:System.Data.DataTable> with one column, and then creates a single <xref:System.Data.DataRow>. As the <xref:System.Data.DataRow> is created, added, modified, and deleted, its <xref:System.Data.DataRow.RowState%2A> is printed.  \n  \n [!code-cs[Classic WebData DataRow.AcceptChanges Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ac_1.cs)]\n [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ac_1.vb)]"
  syntax:
    content: public void AcceptChanges ();
    parameters: []
  overload: System.Data.DataRow.AcceptChanges*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "La riga non appartiene alla tabella."
  platform:
  - net462
- uid: System.Data.DataRow.BeginEdit
  id: BeginEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: BeginEdit()
  nameWithType: DataRow.BeginEdit()
  fullName: System.Data.DataRow.BeginEdit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Avvia un&quot;operazione di modifica in un <xref href=&quot;System.Data.DataRow&quot;> </xref> oggetto."
  remarks: "Utilizzare il metodo BeginEdit per inserire un <xref:System.Data.DataRow>in modalità di modifica.</xref:System.Data.DataRow> In questa modalità, gli eventi sono temporaneamente sospese, consentendo all&quot;utente di apportare modifiche a più di una riga senza attivare le regole di convalida. Ad esempio, se è necessario assicurarsi che il valore della colonna per un importo totale è uguale ai valori per il lato debito e colonne in una riga del credito, è possibile inserire ogni riga in modalità di modifica per sospendere la convalida dei valori di riga fino a quando l&quot;utente tenta di eseguire il commit di valori.       Il metodo BeginEdit viene chiamato in modo implicito quando l&quot;utente modifica il valore di un controllo con associazione a dati. il <xref:System.Data.DataRow.EndEdit%2A>metodo viene chiamato in modo implicito quando si richiama il <xref:System.Data.DataTable.AcceptChanges%2A>metodo per il <xref:System.Data.DataTable>oggetto.</xref:System.Data.DataTable> </xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataRow.EndEdit%2A> In questa modalità di modifica, il <xref:System.Data.DataRow>Archivia rappresentazioni della originale e nuovi valori proposti.</xref:System.Data.DataRow> Pertanto, purché il <xref:System.Data.DataRow.EndEdit%2A>(metodo) non è stato chiamato, è possibile recuperare la versione originale o proposta passando `DataRowVersion.Original` o `DataRowVersion.Proposed` per il `version` parametro del <xref:System.Data.DataRow.Item%2A>proprietà.</xref:System.Data.DataRow.Item%2A> </xref:System.Data.DataRow.EndEdit%2A> È inoltre possibile annullare le modifiche a questo punto richiamando il <xref:System.Data.DataRow.CancelEdit%2A>metodo.</xref:System.Data.DataRow.CancelEdit%2A>       Per verificare se la riga contiene un valore originale o proposto, chiamare il <xref:System.Data.DataRow.HasVersion%2A>metodo.</xref:System.Data.DataRow.HasVersion%2A>      > [!NOTE] > BeginEdit il metodo sospende temporaneamente <xref:System.Data.DataTable.RowChanging>eventi, ma la `delete` operazione.</xref:System.Data.DataTable.RowChanging>"
  example:
  - "The example creates a simple <xref:System.Data.DataTable> with one <xref:System.Data.DataColumn> and five <xref:System.Data.DataRow> objects, and a <xref:System.Data.UniqueConstraint>. A <xref:System.Data.DataTable.RowChanged> event handler is also added to monitor when the row's value is changing. After invoking BeginEdit on the existing rows, the constraint and event are temporarily disabled and the original and proposed values are printed. The BeginEdit is again invoked to set two rows to the same value. When <xref:System.Data.DataRow.EndEdit%2A> is called, the <xref:System.Data.UniqueConstraint> is enforced on the identical values.  \n  \n [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.be_1.vb)]\n [!code-cs[Classic WebData DataRow.BeginEdit Example#1](~/add/codesnippet/csharp/m-system.data.datarow.be_1.cs)]"
  syntax:
    content: public void BeginEdit ();
    parameters: []
  overload: System.Data.DataRow.BeginEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: "È stato chiamato il metodo di <xref href=&quot;System.Data.DataTable.RowChanging&quot;> </xref> evento."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Il metodo è stato chiamato su una riga eliminata."
  platform:
  - net462
- uid: System.Data.DataRow.CancelEdit
  id: CancelEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: DataRow.CancelEdit()
  fullName: System.Data.DataRow.CancelEdit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Annulla la modifica nella riga corrente."
  remarks: "Vedere il <xref:System.Data.DataRow.BeginEdit%2A>metodo per ulteriori informazioni.</xref:System.Data.DataRow.BeginEdit%2A>"
  example:
  - "The following example edits the value of one column in the last row of a <xref:System.Windows.Forms.DataGrid> control. The example uses the <xref:System.Data.DataRow.BeginEdit%2A>, <xref:System.Data.DataRow.EndEdit%2A>, methods to edit the column's value and commit the change to the row.  \n  \n [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ca_1.vb)]\n [!code-cs[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ca_1.cs)]"
  syntax:
    content: public void CancelEdit ();
    parameters: []
  overload: System.Data.DataRow.CancelEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: "È stato chiamato il metodo di <xref href=&quot;System.Data.DataTable.RowChanging&quot;> </xref> evento."
  platform:
  - net462
- uid: System.Data.DataRow.ClearErrors
  id: ClearErrors
  parent: System.Data.DataRow
  langs:
  - csharp
  name: ClearErrors()
  nameWithType: DataRow.ClearErrors()
  fullName: System.Data.DataRow.ClearErrors()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Cancella gli errori per la riga. Ciò include la <> </> *> e impostare gli errori con <> </> *>."
  remarks: "Utilizzare <xref:System.Data.DataRow.SetColumnError%2A>e <xref:System.Data.DataRow.GetColumnError%2A>per impostare e restituire errori per le singole colonne.</xref:System.Data.DataRow.GetColumnError%2A> </xref:System.Data.DataRow.SetColumnError%2A>       Impostare il <xref:System.Data.DataRow.RowError%2A>proprietà per impostare un errore che si applica all&quot;intera riga.</xref:System.Data.DataRow.RowError%2A>       Per determinare se sono presenti errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.HasErrors%2A>metodo.</xref:System.Data.DataRow.HasErrors%2A> Di conseguenza, è possibile utilizzare il <xref:System.Data.DataRow.GetColumnsInError%2A>metodo per recuperare tutte le colonne con errori.</xref:System.Data.DataRow.GetColumnsInError%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.HasErrors%2A> to look for errors. If the row has errors, the <xref:System.Data.DataRow.GetColumnsInError%2A> method returns the array of columns with errors that can then be resolved. The ClearErrors method is then called to clear all errors.  \n  \n [!code-cs[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/csharp/m-system.data.datarow.cl_1.cs)]\n [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.cl_1.vb)]"
  syntax:
    content: public void ClearErrors ();
    parameters: []
  overload: System.Data.DataRow.ClearErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.Delete
  id: Delete
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Delete()
  nameWithType: DataRow.Delete()
  fullName: System.Data.DataRow.Delete()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Elimina il <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  remarks: "Se il <xref:System.Data.DataRow.RowState%2A>della riga viene aggiunta, la <xref:System.Data.DataRow.RowState%2A>diventa `Detached` e la riga viene rimossa dalla tabella quando si chiama <xref:System.Data.DataRow.AcceptChanges%2A>.</xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.RowState%2A>       Il <xref:System.Data.DataRow.RowState%2A>diventa `Deleted` dopo aver utilizzato il metodo Delete su un&quot;esistente <xref:System.Data.DataRow>.</xref:System.Data.DataRow> </xref:System.Data.DataRow.RowState%2A> Rimane `Deleted` finché non si chiama <xref:System.Data.DataRow.AcceptChanges%2A>.</xref:System.Data.DataRow.AcceptChanges%2A> In questo momento, il <xref:System.Data.DataRow>viene rimosso dalla tabella.</xref:System.Data.DataRow>       Eliminazione non deve essere chiamato in un ciclo foreach durante lo scorrimento di un <xref:System.Data.DataRowCollection>oggetto.</xref:System.Data.DataRowCollection> Delete modifica lo stato della raccolta.       Richiamando <xref:System.Data.DataRow.RejectChanges%2A>.</xref:System.Data.DataRow.RejectChanges%2A> , è possibile annullare l&quot;eliminazione di una riga      > [!NOTE] > Il <xref:System.Data.DataRow.BeginEdit%2A>metodo sospende temporaneamente <xref:System.Data.DataTable.RowChanging>gli eventi, ma l&quot;operazione di eliminazione non.</xref:System.Data.DataTable.RowChanging> </xref:System.Data.DataRow.BeginEdit%2A>"
  example:
  - "The following example creates a simple <xref:System.Data.DataTable> with two columns and ten rows. After deleting several <xref:System.Data.DataRow> items with the Delete method, one of the rows is undeleted by invoking <xref:System.Data.DataRow.RejectChanges%2A>.  \n  \n [!code-vb[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.de_1.vb)]\n [!code-cs[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/csharp/m-system.data.datarow.de_1.cs)]"
  syntax:
    content: public void Delete ();
    parameters: []
  overload: System.Data.DataRow.Delete*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Il <xref href=&quot;System.Data.DataRow&quot;> </xref> è già stato eliminato."
  platform:
  - net462
- uid: System.Data.DataRow.EndEdit
  id: EndEdit
  parent: System.Data.DataRow
  langs:
  - csharp
  name: EndEdit()
  nameWithType: DataRow.EndEdit()
  fullName: System.Data.DataRow.EndEdit()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Termina la modifica della riga."
  remarks: "Quando si imposta la proprietà, viene generata un&quot;eccezione se viene generata un&quot;eccezione di <xref:System.Data.DataTable.RowChanging>eventi.</xref:System.Data.DataTable.RowChanging>"
  example:
  - "The following example uses the EndEdit method to end the edit of a <xref:System.Data.DataRow> value if the validation function returns true.  \n  \n [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.en_1.vb)]\n [!code-cs[Classic WebData DataRow.CancelEdit Example#1](~/add/codesnippet/csharp/m-system.data.datarow.en_1.cs)]"
  syntax:
    content: public void EndEdit ();
    parameters: []
  overload: System.Data.DataRow.EndEdit*
  exceptions:
  - type: System.Data.InRowChangingEventException
    commentId: T:System.Data.InRowChangingEventException
    description: "È stato chiamato il metodo di <xref href=&quot;System.Data.DataTable.RowChanging&quot;> </xref> evento."
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: "La modifica si è interrotta vincolo."
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "La riga appartiene alla tabella e si è tentato di modificare il valore di una colonna di sola lettura."
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "Si è tentato di inserire un valore null in una colonna in cui <xref:System.Data.DataColumn.AllowDBNull*>è false.</xref:System.Data.DataColumn.AllowDBNull*>"
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  id: GetChildRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(DataRelation)
  nameWithType: DataRow.GetChildRows(DataRelation)
  fullName: System.Data.DataRow.GetChildRows(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene le righe dell&quot;oggetto figlio <xref href=&quot;System.Data.DataRow&quot;> </xref> utilizzando l&quot;oggetto specificato <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: "Il <xref:System.Data.DataTable>contiene inoltre un insieme di <xref:System.Data.DataRelation>oggetti restituito dal <xref:System.Data.DataTable.ChildRelations%2A>proprietà.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetChildRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-cs[Classic WebData DataRow.GetChildRows2 Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_8_1.cs)]\n [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_8_1.vb)]"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    return:
      type: System.Data.DataRow[]
      description: "Matrice di <xref href=&quot;System.Data.DataRow&quot;> </xref> oggetti o una matrice di lunghezza zero."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La relazione e la riga non appartengono alla stessa tabella."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La relazione è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "La riga non appartiene alla tabella."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "La riga non dispone di questa versione dei dati."
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.String)
  id: GetChildRows(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(String)
  nameWithType: DataRow.GetChildRows(String)
  fullName: System.Data.DataRow.GetChildRows(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene l&quot;elemento figlio di righe di un <xref href=&quot;System.Data.DataRow&quot;> </xref> utilizzando l&quot;oggetto specificato <xref:System.Data.DataRelation.RelationName*>di un <xref href=&quot;System.Data.DataRelation&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "Il <xref:System.Data.DataTable>contiene inoltre un insieme di <xref:System.Data.DataRelation>oggetti restituito dal <xref:System.Data.DataTable.ChildRelations%2A>proprietà.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "Il <xref:System.Data.DataRelation.RelationName*>del <xref href=&quot;System.Data.DataRelation&quot;> </xref> da utilizzare.</xref:System.Data.DataRelation.RelationName*>"
    return:
      type: System.Data.DataRow[]
      description: "Matrice di <xref href=&quot;System.Data.DataRow&quot;> </xref> oggetti o una matrice di lunghezza zero."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La relazione e la riga non appartengono alla stessa tabella."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "La riga non appartiene alla tabella."
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetChildRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(DataRelation,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene l&quot;elemento figlio di righe di un <xref href=&quot;System.Data.DataRow&quot;> </xref> utilizzando l&quot;oggetto specificato <xref href=&quot;System.Data.DataRelation&quot;> </xref>, e <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  remarks: "Il <xref:System.Data.DataTable>contiene inoltre un insieme di <xref:System.Data.DataRelation>oggetti restituito dal <xref:System.Data.DataTable.ChildRelations%2A>proprietà.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Utilizzare il <xref:System.Data.DataRow.HasVersion%2A>proprietà per determinare se il <xref:System.Data.DataRowVersion>che si desidera esiste.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>       Se <xref:System.Data.DataRowVersion>viene specificato, la versione utilizzata dipende il <xref:System.Data.DataRow.RowState%2A>della riga in cui `GetChildRows` viene richiamato.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRowVersion> Se la riga in cui `GetChildRows` viene richiamato con un `RowState` di `Modified`, `New`, o `Unchanged`, il <xref:System.Data.DataRowVersion>versione della riga viene utilizzata per il recupero di righe figlio correlate con i valori corrispondenti nelle relative versioni correnti.</xref:System.Data.DataRowVersion> Se la riga in cui `GetChildRows` viene richiamato con un `RowState` di `Deleted`, il <xref:System.Data.DataRowVersion>versione della riga viene utilizzata per il recupero di righe figlio correlate con i valori corrispondenti nelle rispettive versioni originali.</xref:System.Data.DataRowVersion>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetChildRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column with the specified version in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/add/codesnippet/visualbasic/47f0f4a3-cc08-456d-98cc-_1.vb)]\n [!code-cs[Classic WebData DataRow.GetChildRows3 Example#1](~/add/codesnippet/csharp/47f0f4a3-cc08-456d-98cc-_1.cs)]"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    - id: version
      type: System.Data.DataRowVersion
      description: "Uno del <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> valori che specificano la versione dei dati da recuperare. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Data.DataRow[]
      description: "Matrice di <xref href=&quot;System.Data.DataRow&quot;> </xref> oggetti."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La relazione e la riga non appartengono alla stessa tabella."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "La riga non appartiene alla tabella."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "La riga non è richiesto <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  id: GetChildRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetChildRows(String,DataRowVersion)
  nameWithType: DataRow.GetChildRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(String,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene l&quot;elemento figlio di righe di un <xref href=&quot;System.Data.DataRow&quot;> </xref> utilizzando l&quot;oggetto specificato <xref:System.Data.DataRelation.RelationName*>di un <xref href=&quot;System.Data.DataRelation&quot;> </xref>, e <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "Il <xref:System.Data.DataTable>contiene inoltre un insieme di <xref:System.Data.DataRelation>oggetti restituito dal <xref:System.Data.DataTable.ChildRelations%2A>proprietà.</xref:System.Data.DataTable.ChildRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Utilizzare il <xref:System.Data.DataRow.HasVersion%2A>proprietà per determinare se il <xref:System.Data.DataRowVersion>che si desidera esiste.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>       Se <xref:System.Data.DataRowVersion>viene specificato, la versione utilizzata dipende il <xref:System.Data.DataRow.RowState%2A>della riga in cui `GetChildRows` viene richiamato.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRowVersion> Se la riga in cui `GetChildRows` viene richiamato con un `RowState` di `Modified`, `New`, o `Unchanged`, il <xref:System.Data.DataRowVersion>versione della riga viene utilizzata per il recupero di righe figlio correlate con i valori corrispondenti nelle relative versioni correnti.</xref:System.Data.DataRowVersion> Se la riga in cui `GetChildRows` viene richiamato con un `RowState` di `Deleted`, il <xref:System.Data.DataRowVersion>versione della riga viene utilizzata per il recupero di righe figlio correlate con i valori corrispondenti nelle rispettive versioni originali.</xref:System.Data.DataRowVersion>"
  syntax:
    content: public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: "Il <xref:System.Data.DataRelation.RelationName*>del <xref href=&quot;System.Data.DataRelation&quot;> </xref> da utilizzare.</xref:System.Data.DataRelation.RelationName*>"
    - id: version
      type: System.Data.DataRowVersion
      description: "Uno del <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> valori che specificano la versione dei dati da recuperare. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Data.DataRow[]
      description: "Matrice di <xref href=&quot;System.Data.DataRow&quot;> </xref> oggetti o una matrice di lunghezza zero."
  overload: System.Data.DataRow.GetChildRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La relazione e la riga non appartengono alla stessa tabella."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "La riga non appartiene alla tabella."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "La riga non è richiesto <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  id: GetColumnError(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(DataColumn)
  nameWithType: DataRow.GetColumnError(DataColumn)
  fullName: System.Data.DataRow.GetColumnError(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene la descrizione dell&quot;errore dell&quot;oggetto specificato <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "Utilizzare il <xref:System.Data.DataRow.SetColumnError%2A>per impostare gli errori di colonna.</xref:System.Data.DataRow.SetColumnError%2A>       Per determinare se sono presenti errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.HasErrors%2A>metodo.</xref:System.Data.DataRow.HasErrors%2A> Di conseguenza, è possibile utilizzare il <xref:System.Data.DataRow.GetColumnsInError%2A>metodo per recuperare tutte le colonne con errori.</xref:System.Data.DataRow.GetColumnsInError%2A> In alternativa, il <xref:System.Data.DataTable.GetErrors%2A>metodo il <xref:System.Data.DataTable>restituisce tutte le righe con errori.</xref:System.Data.DataTable> </xref:System.Data.DataTable.GetErrors%2A>       Per cancellare tutti gli errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.ClearErrors%2A>metodo.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_1_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_1_1.vb)]"
  syntax:
    content: public string GetColumnError (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
    return:
      type: System.String
      description: "Il testo della descrizione dell&quot;errore."
  overload: System.Data.DataRow.GetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnError(System.Int32)
  id: GetColumnError(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(Int32)
  nameWithType: DataRow.GetColumnError(Int32)
  fullName: System.Data.DataRow.GetColumnError(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene la descrizione dell&quot;errore per la colonna specificata dall&quot;indice."
  remarks: "Utilizzare il <xref:System.Data.DataRow.SetColumnError%2A>per impostare gli errori di colonna.</xref:System.Data.DataRow.SetColumnError%2A>       Per determinare se sono presenti errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.HasErrors%2A>metodo.</xref:System.Data.DataRow.HasErrors%2A> Di conseguenza, è possibile utilizzare il <xref:System.Data.DataRow.GetColumnsInError%2A>metodo per recuperare tutte le colonne con errori.</xref:System.Data.DataRow.GetColumnsInError%2A>       Per cancellare tutti gli errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.ClearErrors%2A>metodo.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_6_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_6_1.vb)]"
  syntax:
    content: public string GetColumnError (int columnIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Indice in base zero della colonna."
    return:
      type: System.String
      description: "Il testo della descrizione dell&quot;errore."
  overload: System.Data.DataRow.GetColumnError*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Il <code> columnIndex </code> argomento non compreso nell&quot;intervallo."
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnError(System.String)
  id: GetColumnError(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnError(String)
  nameWithType: DataRow.GetColumnError(String)
  fullName: System.Data.DataRow.GetColumnError(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene la descrizione dell&quot;errore per una colonna, specificata in base al nome."
  remarks: "Utilizzare il <xref:System.Data.DataRow.SetColumnError%2A>per impostare gli errori di colonna.</xref:System.Data.DataRow.SetColumnError%2A>       Per determinare se sono presenti errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.HasErrors%2A>metodo.</xref:System.Data.DataRow.HasErrors%2A> Di conseguenza, è possibile utilizzare il <xref:System.Data.DataRow.GetColumnsInError%2A>metodo per recuperare tutte le colonne con errori.</xref:System.Data.DataRow.GetColumnsInError%2A>       Per cancellare tutti gli errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.ClearErrors%2A>metodo.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_0_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_0_1.vb)]"
  syntax:
    content: public string GetColumnError (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "Il nome della colonna."
    return:
      type: System.String
      description: "Il testo della descrizione dell&quot;errore."
  overload: System.Data.DataRow.GetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.GetColumnsInError
  id: GetColumnsInError
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetColumnsInError()
  nameWithType: DataRow.GetColumnsInError()
  fullName: System.Data.DataRow.GetColumnsInError()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene una matrice di colonne che contengono errori."
  remarks: "Il GetColumnsInError consente di ridurre il numero di <xref:System.Data.DataColumn>gli oggetti che devono essere elaborati per gli errori restituendo solo le colonne che dispongono di un errore.</xref:System.Data.DataColumn> Errori possono essere impostati su singole colonne con il <xref:System.Data.DataRow.SetColumnError%2A>metodo.</xref:System.Data.DataRow.SetColumnError%2A> Per ridurre ulteriormente la quantità di elaborazione, esaminare il <xref:System.Data.DataRow.HasErrors%2A>proprietà del <xref:System.Data.DataRow>classe per determinare se un <xref:System.Data.DataRow>presenta errori prima di richiamare GetColumnsInError.</xref:System.Data.DataRow> </xref:System.Data.DataRow> </xref:System.Data.DataRow.HasErrors%2A>       Utilizzare il <xref:System.Data.DataRow.ClearErrors%2A>metodo per cancellare tutti gli errori nella riga.</xref:System.Data.DataRow.ClearErrors%2A> Ciò include la <xref:System.Data.DataRow.RowError%2A>.</xref:System.Data.DataRow.RowError%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.HasErrors%2A> to look for errors. If the row has errors, the GetColumnsInError method returns the array of columns with errors that can then be resolved. The <xref:System.Data.DataRow.ClearErrors%2A> method is then called to clear all errors.  \n  \n [!code-cs[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_5_1.cs)]\n [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_5_1.vb)]"
  syntax:
    content: public System.Data.DataColumn[] GetColumnsInError ();
    parameters: []
    return:
      type: System.Data.DataColumn[]
      description: "Matrice di <xref href=&quot;System.Data.DataColumn&quot;> </xref> oggetti che contengono errori."
  overload: System.Data.DataRow.GetColumnsInError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  id: GetParentRow(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(DataRelation)
  nameWithType: DataRow.GetParentRow(DataRelation)
  fullName: System.Data.DataRow.GetParentRow(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene la riga padre di un <xref href=&quot;System.Data.DataRow&quot;> </xref> utilizzando l&quot;oggetto specificato <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: "In un <xref:System.Data.DataSet>, la raccolta dell&quot;elemento padre di tutti i <xref:System.Data.DataRelation>oggetti per il set di dati viene restituito dal <xref:System.Data.DataRow.GetParentRows%2A>metodo.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       Il <xref:System.Data.DataTable>contiene inoltre un insieme di <xref:System.Data.DataRelation>oggetti restituito dal <xref:System.Data.DataTable.ParentRelations%2A>proprietà.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-cs[Classic WebData DataRow.GetParentRow2 Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_3_1.cs)]\n [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_3_1.vb)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    return:
      type: System.Data.DataRow
      description: "L&quot;elemento padre <xref href=&quot;System.Data.DataRow&quot;> </xref> della riga corrente."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <code> relation </code> non appartiene al <xref href=&quot;System.Data.DataTable&quot;> </xref>.       The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "Una riga figlio ha più elementi padre."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Questa riga non appartiene alla tabella figlio di <xref href=&quot;System.Data.DataRelation&quot;> </xref> oggetto."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "La riga non appartiene a una tabella."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.String)
  id: GetParentRow(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(String)
  nameWithType: DataRow.GetParentRow(String)
  fullName: System.Data.DataRow.GetParentRow(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene la riga padre di un <xref href=&quot;System.Data.DataRow&quot;> </xref> utilizzando l&quot;oggetto specificato <xref:System.Data.DataRelation.RelationName*>di un <xref href=&quot;System.Data.DataRelation&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "In un <xref:System.Data.DataSet>, la raccolta dell&quot;elemento padre di tutti i <xref:System.Data.DataRelation>oggetti per il set di dati viene restituito dal <xref:System.Data.DataRow.GetParentRows%2A>metodo.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       Il <xref:System.Data.DataTable>contiene inoltre un insieme di <xref:System.Data.DataRelation>oggetti restituito dal <xref:System.Data.DataTable.ParentRelations%2A>proprietà.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the GetParentRow to print a value from each parent row of each <xref:System.Data.DataRow> in a <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData DataRow.GetParentRow Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_4_1.cs)]\n [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_4_1.vb)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    return:
      type: System.Data.DataRow
      description: "L&quot;elemento padre <xref href=&quot;System.Data.DataRow&quot;> </xref> della riga corrente."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La relazione e la riga non appartengono alla stessa tabella."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "Una riga figlio ha più elementi padre."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "La riga non appartiene alla tabella."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRow(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(DataRelation,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene la riga padre di un <xref href=&quot;System.Data.DataRow&quot;> </xref> utilizzando l&quot;oggetto specificato <xref href=&quot;System.Data.DataRelation&quot;> </xref>, e <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  remarks: "In un <xref:System.Data.DataSet>, la raccolta dell&quot;elemento padre di tutti i <xref:System.Data.DataRelation>oggetti per il set di dati viene restituito dal <xref:System.Data.DataRow.GetParentRows%2A>metodo.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       Il <xref:System.Data.DataTable>contiene inoltre un insieme di <xref:System.Data.DataRelation>oggetti restituito dal <xref:System.Data.DataTable.ParentRelations%2A>proprietà.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Utilizzare il <xref:System.Data.DataRow.HasVersion%2A>proprietà per determinare se il <xref:System.Data.DataRowVersion>che si desidera esiste.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/add/codesnippet/visualbasic/a16d1012-4e05-4bd8-9275-_1.vb)]\n [!code-cs[Classic WebData DataRow.GetParentRow3 Example#1](~/add/codesnippet/csharp/a16d1012-4e05-4bd8-9275-_1.cs)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    - id: version
      type: System.Data.DataRowVersion
      description: "Uno del <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> valori che specificano la versione dei dati da recuperare."
    return:
      type: System.Data.DataRow
      description: "L&quot;elemento padre <xref href=&quot;System.Data.DataRow&quot;> </xref> della riga corrente."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       Il <code> relation </code> non appartengono a relazioni padre della tabella."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "Una riga figlio ha più elementi padre."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Tabella figlio della relazione non è la tabella a cui che appartiene la riga."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "La riga non appartiene a una tabella."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "La riga non dispone di questa versione dei dati."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  id: GetParentRow(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRow(String,DataRowVersion)
  nameWithType: DataRow.GetParentRow(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(String,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene la riga padre di un <xref href=&quot;System.Data.DataRow&quot;> </xref> utilizzando l&quot;oggetto specificato <xref:System.Data.DataRelation.RelationName*>di un <xref href=&quot;System.Data.DataRelation&quot;> </xref>, e <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "In un <xref:System.Data.DataSet>, la raccolta dell&quot;elemento padre di tutti i <xref:System.Data.DataRelation>oggetti per il set di dati viene restituito dal <xref:System.Data.DataRow.GetParentRows%2A>metodo.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       Il <xref:System.Data.DataTable>contiene inoltre un insieme di <xref:System.Data.DataRelation>oggetti restituito dal <xref:System.Data.DataTable.ParentRelations%2A>proprietà.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Utilizzare il <xref:System.Data.DataRow.HasVersion%2A>proprietà per determinare se il <xref:System.Data.DataRowVersion>che si desidera esiste.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRow%2A> to print a value from each parent row of each <xref:System.Data.DataRow> in a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_7_1.vb)]\n [!code-cs[Classic WebData DataRow.GetParentRow1 Example#1](~/add/codesnippet/csharp/m-system.data.datarow.ge_7_1.cs)]"
  syntax:
    content: public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    - id: version
      type: System.Data.DataRowVersion
      description: "Uno del <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> valori."
    return:
      type: System.Data.DataRow
      description: "L&quot;elemento padre <xref href=&quot;System.Data.DataRow&quot;> </xref> della riga corrente."
  overload: System.Data.DataRow.GetParentRow*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La relazione e la riga non appartengono alla stessa tabella."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.DataException
    commentId: T:System.Data.DataException
    description: "Una riga figlio ha più elementi padre."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "La riga non appartiene alla tabella."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "La riga non è richiesto <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  id: GetParentRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(DataRelation)
  nameWithType: DataRow.GetParentRows(DataRelation)
  fullName: System.Data.DataRow.GetParentRows(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene l&quot;elemento padre di righe di un <xref href=&quot;System.Data.DataRow&quot;> </xref> utilizzando l&quot;oggetto specificato <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: "In un <xref:System.Data.DataSet>, la raccolta dell&quot;elemento padre di tutti i <xref:System.Data.DataRelation>oggetti per il set di dati viene restituito dal <xref:System.Data.DataRow.GetParentRows%2A>metodo.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       Il <xref:System.Data.DataTable>contiene inoltre un insieme di <xref:System.Data.DataRelation>oggetti restituito dal <xref:System.Data.DataTable.ParentRelations%2A>proprietà.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ge_2_1.vb)]"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    return:
      type: System.Data.DataRow[]
      description: "Matrice di <xref href=&quot;System.Data.DataRow&quot;> </xref> oggetti o una matrice di lunghezza zero."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <xref href=&quot;System.Data.DataRelation&quot;> </xref> non appartiene a questa riga <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Tabella figlio della relazione non è la tabella a cui che appartiene la riga."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "La riga non appartiene a un <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.String)
  id: GetParentRows(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(String)
  nameWithType: DataRow.GetParentRows(String)
  fullName: System.Data.DataRow.GetParentRows(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene l&quot;elemento padre di righe di un <xref href=&quot;System.Data.DataRow&quot;> </xref> utilizzando l&quot;oggetto specificato <xref:System.Data.DataRelation.RelationName*>di un <xref href=&quot;System.Data.DataRelation&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "In un <xref:System.Data.DataSet>, la raccolta di tutte padre <xref:System.Data.DataRelation>oggetti per il set di dati viene restituito dal metodo GetParentRows.</xref:System.Data.DataRelation> </xref:System.Data.DataSet>       Il <xref:System.Data.DataTable>contiene inoltre un insieme di <xref:System.Data.DataRelation>oggetti restituito dal <xref:System.Data.DataTable.ParentRelations%2A>proprietà.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    return:
      type: System.Data.DataRow[]
      description: "Matrice di <xref href=&quot;System.Data.DataRow&quot;> </xref> oggetti o una matrice di lunghezza zero."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La relazione e la riga non appartengono alla stessa tabella."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "La riga non appartiene alla tabella."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  id: GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(DataRelation,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene l&quot;elemento padre di righe di un <xref href=&quot;System.Data.DataRow&quot;> </xref> utilizzando l&quot;oggetto specificato <xref href=&quot;System.Data.DataRelation&quot;> </xref>, e <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  remarks: "In un <xref:System.Data.DataSet>, la raccolta dell&quot;elemento padre di tutti i <xref:System.Data.DataRelation>oggetti per il set di dati viene restituito dal <xref:System.Data.DataRow.GetParentRows%2A>metodo.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       Il <xref:System.Data.DataTable>contiene inoltre un insieme di <xref:System.Data.DataRelation>oggetti restituito dal <xref:System.Data.DataTable.ParentRelations%2A>proprietà.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Utilizzare il <xref:System.Data.DataRow.HasVersion%2A>proprietà per determinare se il <xref:System.Data.DataRowVersion>che si desidera esiste.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  example:
  - "The following example uses the <xref:System.Data.DataRow.GetParentRows%2A> to return the child <xref:System.Data.DataRow> objects for every child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>. The value of each column in the row is then printed.  \n  \n [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/add/codesnippet/visualbasic/14f3e3ca-84f4-434d-94fa-_1.vb)]"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "The <xref href=&quot;System.Data.DataRelation&quot;></xref> to use."
    - id: version
      type: System.Data.DataRowVersion
      description: "Uno del <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> valori che specificano la versione dei dati da recuperare."
    return:
      type: System.Data.DataRow[]
      description: "Matrice di <xref href=&quot;System.Data.DataRow&quot;> </xref> oggetti o una matrice di lunghezza zero."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <xref href=&quot;System.Data.DataRelation&quot;> </xref> non appartiene a questa riga <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The row is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Tabella figlio della relazione non è la tabella a cui che appartiene la riga."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "La riga non appartiene a un <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "La riga non è richiesto <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  id: GetParentRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: GetParentRows(String,DataRowVersion)
  nameWithType: DataRow.GetParentRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(String,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene l&quot;elemento padre di righe di un <xref href=&quot;System.Data.DataRow&quot;> </xref> utilizzando l&quot;oggetto specificato <xref:System.Data.DataRelation.RelationName*>di un <xref href=&quot;System.Data.DataRelation&quot;> </xref>, e <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>.</xref:System.Data.DataRelation.RelationName*>"
  remarks: "In un <xref:System.Data.DataSet>, la raccolta dell&quot;elemento padre di tutti i <xref:System.Data.DataRelation>oggetti per il set di dati viene restituito dal <xref:System.Data.DataRow.GetParentRows%2A>metodo.</xref:System.Data.DataRow.GetParentRows%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataSet>       Il <xref:System.Data.DataTable>contiene inoltre un insieme di <xref:System.Data.DataRelation>oggetti restituito dal <xref:System.Data.DataTable.ParentRelations%2A>proprietà.</xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataRelation> </xref:System.Data.DataTable>       Utilizzare il <xref:System.Data.DataRow.HasVersion%2A>proprietà per determinare se il <xref:System.Data.DataRowVersion>che si desidera esiste.</xref:System.Data.DataRowVersion> </xref:System.Data.DataRow.HasVersion%2A>"
  syntax:
    content: public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);
    parameters:
    - id: relationName
      type: System.String
      description: "The <xref:System.Data.DataRelation.RelationName*> of a <xref href=&quot;System.Data.DataRelation&quot;></xref>.</xref:System.Data.DataRelation.RelationName*>"
    - id: version
      type: System.Data.DataRowVersion
      description: "Uno del <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> valori che specificano la versione dei dati da recuperare. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Data.DataRow[]
      description: "Matrice di <xref href=&quot;System.Data.DataRow&quot;> </xref> oggetti o una matrice di lunghezza zero."
  overload: System.Data.DataRow.GetParentRows*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La relazione e la riga non appartengono alla stessa tabella."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>relation</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "La riga non appartiene alla tabella."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "La riga non è richiesto <xref href=&quot;System.Data.DataRowVersion&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.DataRow.HasErrors
  id: HasErrors
  parent: System.Data.DataRow
  langs:
  - csharp
  name: HasErrors
  nameWithType: DataRow.HasErrors
  fullName: System.Data.DataRow.HasErrors
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene un valore che indica se sono presenti errori in una riga."
  remarks: "`HasErrors`Restituisce `true` eventuali <xref:System.Data.DataColumn>nella riga oggetto contiene un errore, o se il <xref:System.Data.DataRow.RowError%2A>proprietà del <xref:System.Data.DataRow>non è una stringa vuota.</xref:System.Data.DataRow> </xref:System.Data.DataRow.RowError%2A> </xref:System.Data.DataColumn>       Quando la convalida dei dati, è possibile impostare un errore su qualsiasi colonna in una riga. Quando visualizzata tale colonna i <xref:System.Windows.Forms.DataGrid?displayProperty=fullName>di controllo, è contrassegnato con un punto esclamativo rosso per segnalare all&quot;utente che la colonna è in errore.</xref:System.Windows.Forms.DataGrid?displayProperty=fullName>       Utilizzare <xref:System.Data.DataRow.SetColumnError%2A>per impostare un errore su qualsiasi colonna.</xref:System.Data.DataRow.SetColumnError%2A>       Utilizzare il <xref:System.Data.DataRow.GetColumnError%2A>e `GetColumnsInError` metodi per restituire le colonne con errori.</xref:System.Data.DataRow.GetColumnError%2A>       Il <xref:System.Data.DataRow.ClearErrors%2A>metodo cancella tutti gli errori per la riga.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example uses the HasErrors to look for errors. If the row has errors, the <xref:System.Data.DataRow.GetColumnsInError%2A> method returns the array of columns with errors that can then be resolved. The <xref:System.Data.DataRow.ClearErrors%2A> method is then called to clear all errors.  \n  \n [!code-cs[Classic WebData DataRow.HasErrors Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ha_1.cs)]\n [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ha_1.vb)]"
  syntax:
    content: public bool HasErrors { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la riga contiene un errore. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.HasErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  id: HasVersion(System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: HasVersion(DataRowVersion)
  nameWithType: DataRow.HasVersion(DataRowVersion)
  fullName: System.Data.DataRow.HasVersion(DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene un valore che indica se è presente una versione specificata."
  remarks: "Vedere il <xref:System.Data.DataRow.BeginEdit%2A>metodo per ulteriori informazioni.</xref:System.Data.DataRow.BeginEdit%2A>"
  example:
  - "The following example uses the HasVersion method to determine whether the current value of a column and the proposed value are the same. If so, the edit is canceled. Otherwise, the <xref:System.Data.DataRow.AcceptChanges%2A> method is called to end the edit.  \n  \n [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.ha_1.vb)]"
  syntax:
    content: public bool HasVersion (System.Data.DataRowVersion version);
    parameters:
    - id: version
      type: System.Data.DataRowVersion
      description: "Uno del <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> valori che specifica la versione di riga."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è presente la versione. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.HasVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn)
  id: IsNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(DataColumn)
  nameWithType: DataRow.IsNull(DataColumn)
  fullName: System.Data.DataRow.IsNull(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene un valore che indica se l&quot;oggetto specificato <xref href=&quot;System.Data.DataColumn&quot;> </xref> contiene un valore null."
  remarks: ''
  example:
  - "The following example prints each column of each row in each table of a <xref:System.Data.DataSet>. If the row is set to a null value, the value is not printed.  \n  \n [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.is_2_1.vb)]"
  syntax:
    content: public bool IsNull (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la colonna contiene un valore null. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.Int32)
  id: IsNull(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(Int32)
  nameWithType: DataRow.IsNull(Int32)
  fullName: System.Data.DataRow.IsNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene un valore che indica se la colonna in corrispondenza dell&quot;indice specificato contiene un valore null."
  remarks: ''
  example:
  - "The following example changes the value of a column to a null value, and then uses the IsNull method to determine whether the value is null.  \n  \n [!code-vb[Classic WebData DataRow.IsNull Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.is_1_1.vb)]"
  syntax:
    content: public bool IsNull (int columnIndex);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Indice in base zero della colonna."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la colonna contiene un valore null. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.String)
  id: IsNull(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(String)
  nameWithType: DataRow.IsNull(String)
  fullName: System.Data.DataRow.IsNull(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene un valore che indica se la colonna contiene un valore null."
  remarks: ''
  example:
  - "The following example changes the value of a column to a null value, and then uses the <xref:System.Data.DataRow.IsNull%2A> method to determine whether the value is null.  \n  \n [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.is_0_1.vb)]"
  syntax:
    content: public bool IsNull (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "Il nome della colonna."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la colonna contiene un valore null. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  id: IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: IsNull(DataColumn,DataRowVersion)
  nameWithType: DataRow.IsNull(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.IsNull(DataColumn,DataRowVersion)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene un valore che indica se l&quot;oggetto specificato <xref href=&quot;System.Data.DataColumn&quot;> </xref> e <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> contiene un valore null."
  syntax:
    content: public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
    - id: version
      type: System.Data.DataRowVersion
      description: "Uno del <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> valori che specifica la versione di riga. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la colonna contiene un valore null. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRow.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Data.DataColumn)
  id: Item(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(DataColumn)
  nameWithType: DataRow.Item(DataColumn)
  fullName: System.Data.DataRow.Item(DataColumn)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene o imposta i dati archiviati nell&quot;oggetto specificato <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "Quando si imposta la proprietà, viene generata un&quot;eccezione se viene generata un&quot;eccezione di <xref:System.Data.DataTable.ColumnChanging>eventi.</xref:System.Data.DataTable.ColumnChanging>       Se si tratta di una modifica immediata, vedere <xref:System.Data.DataRow.EndEdit%2A>per le eccezioni che possono essere generate.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following examples demonstrate the use of the <xref:System.Data.DataRow.Item%2A> property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control. The second sets a value passed as an argument to the method.  \n  \n [!code-vb[Classic WebData DataRow.this2 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_3_1.vb)]"
  syntax:
    content: public object this[System.Data.DataColumn column] { get; set; }
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "Oggetto <xref href=&quot;System.Data.DataColumn&quot;> </xref> che contiene i dati."
    return:
      type: System.Object
      description: "Un <xref:System.Object>che contiene i dati.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La colonna non appartiene a questa tabella."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>column</code> is null."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di impostare un valore in una riga eliminata."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "I tipi di dati del valore e la colonna non corrispondono."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataRow.Item(Int32)
  fullName: System.Data.DataRow.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene o imposta i dati archiviati nella colonna specificata dall&quot;indice."
  remarks: "Quando si imposta la proprietà, viene generata un&quot;eccezione se viene generata un&quot;eccezione di <xref:System.Data.DataTable.ColumnChanging>eventi.</xref:System.Data.DataTable.ColumnChanging>       Se si tratta di una modifica, vedere <xref:System.Data.DataRow.EndEdit%2A>per le eccezioni che possono essere generate.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following examples demonstrate the use of the Item property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-vb[Classic WebData DataRow.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_0_1.vb)]\n [!code-cs[Classic WebData DataRow.this Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_0_1.cs)]"
  syntax:
    content: public object this[int columnIndex] { get; set; }
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Indice in base zero della colonna."
    return:
      type: System.Object
      description: "Un <xref:System.Object>che contiene i dati.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Si verifica quando si tenta di impostare un valore in una riga eliminata."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Il <code> columnIndex </code> argomento non compreso nell&quot;intervallo."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Si verifica quando si imposta il valore e <xref:System.Type>non corrisponde a <xref:System.Data.DataColumn.DataType*>.</xref:System.Data.DataColumn.DataType*> del nuovo valore</xref:System.Type>"
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataRow.Item(String)
  fullName: System.Data.DataRow.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene o imposta i dati archiviati nella colonna specificata in base al nome."
  remarks: "Quando si imposta la proprietà, viene generata un&quot;eccezione se viene generata un&quot;eccezione di <xref:System.Data.DataTable.ColumnChanging>eventi.</xref:System.Data.DataTable.ColumnChanging>       Se si tratta di una modifica immediata, vedere <xref:System.Data.DataRow.EndEdit%2A>per le eccezioni che possono essere generate.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following examples demonstrate the use of the <xref:System.Data.DataRow.Item%2A> property to get and set the value of a specific column index. The first example gets the value of the first column in any row that a user clicks in a <xref:System.Windows.Forms.DataGrid> control. The second sets a value passed as an argument to the method.  \n  \n [!code-vb[Classic WebData DataRow.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_2_1.vb)]\n [!code-cs[Classic WebData DataRow.this1 Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_2_1.cs)]"
  syntax:
    content: public object this[string columnName] { get; set; }
    parameters:
    - id: columnName
      type: System.String
      description: "Il nome della colonna."
    return:
      type: System.Object
      description: "Un <xref:System.Object>che contiene i dati.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La colonna specificata dal <code> columnName </code> non è stato trovato."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "Si verifica quando si tenta di impostare un valore in una riga eliminata."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Si verifica quando si imposta un valore e il <xref:System.Type>non corrisponde a <xref:System.Data.DataColumn.DataType*>.</xref:System.Data.DataColumn.DataType*> </xref:System.Type>"
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "Si verifica quando si tenta di inserire un valore null in una colonna in cui <xref:System.Data.DataColumn.AllowDBNull*>è impostato su <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.DataColumn.AllowDBNull*>"
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  id: Item(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(DataColumn,DataRowVersion)
  nameWithType: DataRow.Item(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.Item(DataColumn,DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene la versione specificata di dati archiviati nell&quot;oggetto specificato <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "Il `version` non deve essere confuso con il <xref:System.Data.DataRow.RowState%2A>proprietà.</xref:System.Data.DataRow.RowState%2A> Il `version` argomento descrive lo stato dei dati di cui sono contenuti in base alla colonna rispetto al valore originale della colonna.       Quando si imposta la proprietà, viene generata un&quot;eccezione se viene generata un&quot;eccezione di <xref:System.Data.DataTable.ColumnChanging>eventi.</xref:System.Data.DataTable.ColumnChanging>       Se si tratta di una modifica immediata, vedere <xref:System.Data.DataRow.EndEdit%2A>per le eccezioni che possono essere generate.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following example gets the current value of a clicked cell in the <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-cs[Classic WebData DataRow.this5 Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_6_1.cs)]\n [!code-vb[Classic WebData DataRow.this5 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_6_1.vb)]"
  syntax:
    content: public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "Oggetto <xref href=&quot;System.Data.DataColumn&quot;> </xref> che contiene informazioni sulla colonna."
    - id: version
      type: System.Data.DataRowVersion
      description: "Uno del <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> valori che specifica la versione della riga che si desidera. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "Un <xref:System.Object>che contiene i dati.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La colonna non appartiene alla tabella."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <code> column </code> argomento è null."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "La riga non dispone di questa versione dei dati."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  id: Item(System.Int32,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(Int32,DataRowVersion)
  nameWithType: DataRow.Item(Int32,DataRowVersion)
  fullName: System.Data.DataRow.Item(Int32,DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene i dati archiviati nella colonna specificata dall&quot;indice e la versione dei dati da recuperare."
  remarks: "È possibile creare o aggiornare una riga dopo la chiamata al <xref:System.Data.DataRow.BeginEdit%2A>metodo; allo stesso modo, il <xref:System.Data.DataRow.EndEdit%2A>metodo deve essere chiamato per eseguire il commit di modifica.</xref:System.Data.DataRow.EndEdit%2A> </xref:System.Data.DataRow.BeginEdit%2A> Dopo aver chiamato il <xref:System.Data.DataRow.EndEdit%2A>(metodo), e prima di chiamare il <xref:System.Data.DataRow.AcceptChanges%2A>(metodo), le rappresentazioni interne dell&quot;originale e nuovi proposto i valori vengono archiviati.</xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.EndEdit%2A> Di conseguenza, finché non si chiama il <xref:System.Data.DataRow.AcceptChanges%2A>, è possibile utilizzare il `version` argomento per specificare quale versione di un valore di colonna da utilizzare, ovvero il `DataRowVersion.Original` o `DataRowVersion.Proposed`.</xref:System.Data.DataRow.AcceptChanges%2A> Tuttavia, appena si chiama il <xref:System.Data.DataRow.AcceptChanges%2A>metodo, la versione della colonna ripristinato `DataRowVersion.Original`.</xref:System.Data.DataRow.AcceptChanges%2A> Se la riga è nuova, è anche possibile passare `DataRowVersion.Default` per il parametro per recuperare il valore predefinito della colonna. Quando si passa `DataRowVersion.Current`, la proprietà restituisce l&quot;attuale valore, qualunque sia la relativa versione.      > [!NOTE] > Il <xref:System.Data.DataRow.BeginEdit%2A>metodo viene chiamato in modo implicito quando si modifica il valore di un controllo con associazione a dati o quando un <xref:System.Data.DataRow>oggetto viene aggiunto al <xref:System.Data.DataRowCollection>; il <xref:System.Data.DataRow.EndEdit%2A>metodo viene chiamato in modo implicito quando si chiamano i metodi seguenti: il <xref:System.Data.DataRow.AcceptChanges%2A>metodo il <xref:System.Data.DataRow>oggetto, il <xref:System.Data.DataTable.AcceptChanges%2A>metodo del <xref:System.Data.DataTable>oggetto, o <xref:System.Data.DataRow.CancelEdit%2A>(metodo).</xref:System.Data.DataRow.CancelEdit%2A> </xref:System.Data.DataTable> </xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataRow> </xref:System.Data.DataRow.AcceptChanges%2A> </xref:System.Data.DataRow.EndEdit%2A> </xref:System.Data.DataRowCollection> </xref:System.Data.DataRow> </xref:System.Data.DataRow.BeginEdit%2A>       Al contrario, il <xref:System.Data.DataRowVersion>enumerazione `Current` restituisce la versione dei dati dopo il <xref:System.Data.DataRow.EndEdit%2A>metodo è stato chiamato.</xref:System.Data.DataRow.EndEdit%2A> </xref:System.Data.DataRowVersion>       Il `version` argomento non deve essere confuso con il <xref:System.Data.DataRow.RowState%2A>proprietà.</xref:System.Data.DataRow.RowState%2A> Il `version` argomento descrive lo stato dei dati di cui sono contenuti in base alla colonna rispetto al valore originale della colonna. La <xref:System.Data.DataRow.RowState%2A>proprietà descrive lo stato dell&quot;intera riga rispetto al padre <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataRow.RowState%2A>       Quando si imposta la proprietà, viene generata un&quot;eccezione se viene generata un&quot;eccezione di <xref:System.Data.DataTable.ColumnChanging>eventi.</xref:System.Data.DataTable.ColumnChanging>       Se si tratta di una modifica immediata, vedere <xref:System.Data.DataRow.EndEdit%2A>per le eccezioni che possono essere generate.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following example gets the current value of a column through the <xref:System.Data.DataRow.Item%2A> property of the <xref:System.Data.DataRow> object.  \n  \n [!code-vb[Classic WebData DataRow.this3 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_4_1.vb)]"
  syntax:
    content: public object this[int columnIndex, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Indice in base zero della colonna."
    - id: version
      type: System.Data.DataRowVersion
      description: "Uno del <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> valori che specifica la versione della riga che si desidera. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "Un <xref:System.Object>che contiene i dati.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Il <code> columnIndex </code> argomento non compreso nell&quot;intervallo."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "I tipi di dati del valore e la colonna non corrispondono."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "La riga non dispone di questa versione dei dati."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "È stato effettuato un tentativo di impostare un valore in una riga eliminata."
  platform:
  - net462
- uid: System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  id: Item(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Item(String,DataRowVersion)
  nameWithType: DataRow.Item(String,DataRowVersion)
  fullName: System.Data.DataRow.Item(String,DataRowVersion)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene la versione specificata di dati archiviati nella colonna specificata."
  remarks: "La versione non deve essere confusa con la <xref:System.Data.DataRow.RowState%2A>proprietà.</xref:System.Data.DataRow.RowState%2A> Il `version` argomento descrive lo stato dei dati di cui sono contenuti in base alla colonna rispetto al valore originale della colonna. La <xref:System.Data.DataRow.RowState%2A>proprietà descrive lo stato dell&quot;intera riga rispetto al padre <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataRow.RowState%2A>       Quando si imposta la proprietà, viene generata un&quot;eccezione se viene generata un&quot;eccezione di <xref:System.Data.DataTable.ColumnChanging>eventi.</xref:System.Data.DataTable.ColumnChanging>       Se si tratta di una modifica immediata, vedere <xref:System.Data.DataRow.EndEdit%2A>per le eccezioni che possono essere generate.</xref:System.Data.DataRow.EndEdit%2A>"
  example:
  - "The following example gets the current version of data at a clicked cell of a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-vb[Classic WebData DataRow.this4 Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_5_1.vb)]\n [!code-cs[Classic WebData DataRow.this4 Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_5_1.cs)]"
  syntax:
    content: public object this[string columnName, System.Data.DataRowVersion version] { get; }
    parameters:
    - id: columnName
      type: System.String
      description: "Il nome della colonna."
    - id: version
      type: System.Data.DataRowVersion
      description: "Uno del <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> valori che specifica la versione della riga che si desidera. Possible values are <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Original&quot; name=&quot;Original&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_Proposed&quot; name=&quot;Proposed&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object
      description: "Un <xref:System.Object>che contiene i dati.</xref:System.Object>"
  overload: System.Data.DataRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La colonna specificata dal <code> columnName </code> non è stato trovato."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "I tipi di dati del valore e la colonna non corrispondono."
  - type: System.Data.VersionNotFoundException
    commentId: T:System.Data.VersionNotFoundException
    description: "La riga non dispone di questa versione dei dati."
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "La riga è stata eliminata."
  platform:
  - net462
- uid: System.Data.DataRow.ItemArray
  id: ItemArray
  parent: System.Data.DataRow
  langs:
  - csharp
  name: ItemArray
  nameWithType: DataRow.ItemArray
  fullName: System.Data.DataRow.ItemArray
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene o imposta tutti i valori per questa riga tramite una matrice."
  remarks: "È possibile utilizzare questa proprietà per impostare o ottenere valori per questa riga tramite una matrice. Se si utilizza questa proprietà per impostare i valori, la matrice deve avere le stesse dimensioni e della raccolta di colonne di ordinamento. Il passaggio di `null` nella ItemArray indica che è stato specificato alcun valore.       È possibile generare eccezioni nel <xref:System.Data.DataTable.ColumnChanging>evento o <xref:System.Data.DataTable.RowChanging>evento.</xref:System.Data.DataTable.RowChanging> </xref:System.Data.DataTable.ColumnChanging>"
  example:
  - "The following examples show how to get and set values using the ItemArray property.  \n  \n [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.it_1_1.vb)]\n [!code-cs[Classic WebData DataRow.ItemArray Example#1](~/add/codesnippet/csharp/p-system.data.datarow.it_1_1.cs)]"
  syntax:
    content: public object[] ItemArray { get; set; }
    return:
      type: System.Object[]
      description: "Matrice di tipo <xref:System.Object>.</xref:System.Object>"
  overload: System.Data.DataRow.ItemArray*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La matrice è maggiore del numero di colonne nella tabella."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Un valore nella matrice corrisponde relativo <xref:System.Data.DataColumn.DataType*>nei rispettivi <xref href=&quot;System.Data.DataColumn&quot;> </xref>.</xref:System.Data.DataColumn.DataType*>"
  - type: System.Data.ConstraintException
    commentId: T:System.Data.ConstraintException
    description: "La modifica si è interrotta vincolo."
  - type: System.Data.ReadOnlyException
    commentId: T:System.Data.ReadOnlyException
    description: "Si è tentato di modificare il valore di una colonna di sola lettura."
  - type: System.Data.NoNullAllowedException
    commentId: T:System.Data.NoNullAllowedException
    description: "Si è tentato di inserire un valore null in una colonna in cui <xref:System.Data.DataColumn.AllowDBNull*>del <xref href=&quot;System.Data.DataColumn&quot;> </xref> oggetto <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.DataColumn.AllowDBNull*>"
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: "La riga è stata eliminata."
  platform:
  - net462
- uid: System.Data.DataRow.RejectChanges
  id: RejectChanges
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RejectChanges()
  nameWithType: DataRow.RejectChanges()
  fullName: System.Data.DataRow.RejectChanges()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Rifiuta tutte le modifiche apportate alla riga dal <xref:System.Data.DataRow.AcceptChanges*>dall&quot;ultima chiamata a.</xref:System.Data.DataRow.AcceptChanges*>"
  remarks: "Quando si chiama il metodo RejectChanges, il <xref:System.Data.DataRow.CancelEdit%2A>metodo viene chiamato in modo implicito per annullare tutte le modifiche.</xref:System.Data.DataRow.CancelEdit%2A> Se <xref:System.Data.DataRow.RowState%2A>viene eliminata o modificata, verranno ripristinati i valori precedenti, la riga e <xref:System.Data.DataRow.RowState%2A>risulterà invariata.</xref:System.Data.DataRow.RowState%2A> </xref:System.Data.DataRow.RowState%2A> Se il <xref:System.Data.DataRow.RowState%2A>viene aggiunta la riga viene rimossa.</xref:System.Data.DataRow.RowState%2A>"
  example:
  - "The following example creates a simple <xref:System.Data.DataTable> with 2 columns and 10 rows. After several <xref:System.Data.DataRow> items are deleted with the <xref:System.Data.DataRow.Delete%2A> method, one of the rows is undeleted by invoking RejectChanges.  \n  \n [!code-vb[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.re_1.vb)]\n [!code-cs[Classic WebData DataRow.Delete Example#1](~/add/codesnippet/csharp/m-system.data.datarow.re_1.cs)]"
  syntax:
    content: public void RejectChanges ();
    parameters: []
  overload: System.Data.DataRow.RejectChanges*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "La riga non appartiene alla tabella."
  platform:
  - net462
- uid: System.Data.DataRow.RowError
  id: RowError
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RowError
  nameWithType: DataRow.RowError
  fullName: System.Data.DataRow.RowError
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene o imposta la descrizione dell&quot;errore personalizzato per una riga."
  remarks: "Usa il <xref:System.Data.DataRow.HasErrors%2A>proprietà per determinare se un <xref:System.Data.DataRow>contiene errori.</xref:System.Data.DataRow> </xref:System.Data.DataRow.HasErrors%2A>"
  example:
  - "The following example sets error text for ten rows of a table displayed in a <xref:System.Windows.Forms.DataGrid> control.  \n  \n [!code-cs[Classic WebData DataRow.RowError Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ro_1_1.cs)]\n [!code-vb[Classic WebData DataRow.RowError Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ro_1_1.vb)]"
  syntax:
    content: public string RowError { get; set; }
    return:
      type: System.String
      description: "Il testo che descrive un errore."
  overload: System.Data.DataRow.RowError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.RowState
  id: RowState
  parent: System.Data.DataRow
  langs:
  - csharp
  name: RowState
  nameWithType: DataRow.RowState
  fullName: System.Data.DataRow.RowState
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene lo stato corrente della riga rispetto alla relativa relazione con il <xref href=&quot;System.Data.DataRowCollection&quot;> </xref>."
  remarks: 'Il valore di RowState dipende da due fattori: il tipo di operazione è stato eseguito sulla riga e se <xref:System.Data.DataRow.AcceptChanges%2A>è stato chiamato su <xref:System.Data.DataRow>.</xref:System.Data.DataRow> </xref:System.Data.DataRow.AcceptChanges%2A>'
  example:
  - "The following example first creates a new <xref:System.Data.DataTable> with one column, and then creates a single <xref:System.Data.DataRow>. As the <xref:System.Data.DataRow> is created, added, modified, and deleted, its RowState is printed.  \n  \n [!code-vb[Classic WebData DataRow.RowState Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ro_0_1.vb)]\n [!code-cs[Classic WebData DataRow.RowState Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ro_0_1.cs)]"
  syntax:
    content: public System.Data.DataRowState RowState { get; }
    return:
      type: System.Data.DataRowState
      description: "Uno del <xref href=&quot;System.Data.DataRowState&quot;> </xref> valori."
  overload: System.Data.DataRow.RowState*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetAdded
  id: SetAdded
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetAdded()
  nameWithType: DataRow.SetAdded()
  fullName: System.Data.DataRow.SetAdded()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Changes the <xref:System.Data.DataRow.Rowstate*> of a <xref href=&quot;System.Data.DataRow&quot;></xref> to <xref uid=&quot;langword_csharp_Added&quot; name=&quot;Added&quot; href=&quot;&quot;></xref>.</xref:System.Data.DataRow.Rowstate*>"
  remarks: "Modifiche di <xref:System.Data.DataRow.RowState%2A>di un <xref:System.Data.DataRow>a `Added`.</xref:System.Data.DataRow> </xref:System.Data.DataRow.RowState%2A> Se la riga corrente non è presente in entrambi un `Unchanged` o un `Added` stato, genera un <xref:System.InvalidOperationException>con il messaggio che `SetAdded` può essere richiamato solo su un `DataRow` istanza in cui il `RowState` è `Unchanged`.</xref:System.InvalidOperationException>"
  syntax:
    content: public void SetAdded ();
    parameters: []
  overload: System.Data.DataRow.SetAdded*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  id: SetColumnError(System.Data.DataColumn,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(DataColumn,String)
  nameWithType: DataRow.SetColumnError(DataColumn,String)
  fullName: System.Data.DataRow.SetColumnError(DataColumn,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Imposta la descrizione dell&quot;errore per una colonna specificata come un <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  remarks: "Per esaminare le descrizioni degli errori, utilizzare il <xref:System.Data.DataRow.GetColumnError%2A>metodo.</xref:System.Data.DataRow.GetColumnError%2A>       Per determinare se sono presenti errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.HasErrors%2A>proprietà.</xref:System.Data.DataRow.HasErrors%2A> Di conseguenza, è possibile utilizzare il <xref:System.Data.DataRow.GetColumnsInError%2A>metodo per recuperare tutte le colonne con errori.</xref:System.Data.DataRow.GetColumnsInError%2A>       Se `null` o una stringa vuota viene passata come il `error` parametro, il <xref:System.Data.DataRow>si comporta come se è stato impostato alcun errore e <xref:System.Data.DataRow.HasErrors%2A>restituirà false.</xref:System.Data.DataRow.HasErrors%2A> </xref:System.Data.DataRow>       Per impostare una descrizione dell&quot;errore personalizzato per l&quot;intera riga, utilizzare il <xref:System.Data.DataRow.RowError%2A>proprietà.</xref:System.Data.DataRow.RowError%2A>       Per determinare se sono presenti errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.HasErrors%2A>metodo.</xref:System.Data.DataRow.HasErrors%2A>       Per cancellare tutti gli errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.ClearErrors%2A>metodo.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.se_3_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_3_1.vb)]"
  syntax:
    content: public void SetColumnError (System.Data.DataColumn column, string error);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "Il <xref href=&quot;System.Data.DataColumn&quot;> </xref> per impostare la descrizione dell&quot;errore."
    - id: error
      type: System.String
      description: "Descrizione dell&quot;errore."
  overload: System.Data.DataRow.SetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetColumnError(System.Int32,System.String)
  id: SetColumnError(System.Int32,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(Int32,String)
  nameWithType: DataRow.SetColumnError(Int32,String)
  fullName: System.Data.DataRow.SetColumnError(Int32,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Imposta la descrizione dell&quot;errore per una colonna specificata dall&quot;indice."
  remarks: "Il metodo viene utilizzato per impostare le descrizioni degli errori personalizzata per le colonne specificate. È possibile utilizzare il <xref:System.Windows.Forms.ErrorProvider>controllo per visualizzare il testo dell&quot;errore.</xref:System.Windows.Forms.ErrorProvider>       Per esaminare le descrizioni degli errori, utilizzare il <xref:System.Data.DataRow.GetColumnError%2A>metodo.</xref:System.Data.DataRow.GetColumnError%2A>       Per determinare se sono presenti errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.HasErrors%2A>proprietà.</xref:System.Data.DataRow.HasErrors%2A> Di conseguenza, è possibile utilizzare il <xref:System.Data.DataRow.GetColumnsInError%2A>metodo per recuperare tutte le colonne con errori.</xref:System.Data.DataRow.GetColumnsInError%2A>       Se `null` o una stringa vuota viene passata come il `error` parametro, il <xref:System.Data.DataRow>si comporta come se è stato impostato alcun errore e <xref:System.Data.DataRow.HasErrors%2A>restituirà false.</xref:System.Data.DataRow.HasErrors%2A> </xref:System.Data.DataRow>       Per impostare una descrizione dell&quot;errore personalizzato per l&quot;intera riga, utilizzare il <xref:System.Data.DataRow.RowError%2A>proprietà.</xref:System.Data.DataRow.RowError%2A>       Per cancellare tutti gli errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.ClearErrors%2A>metodo.</xref:System.Data.DataRow.ClearErrors%2A>       Per impostare il testo di errore che si applica a un&quot;intera riga, impostare il <xref:System.Data.DataRow.RowError%2A>proprietà.</xref:System.Data.DataRow.RowError%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.se_0_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_0_1.vb)]"
  syntax:
    content: public void SetColumnError (int columnIndex, string error);
    parameters:
    - id: columnIndex
      type: System.Int32
      description: "Indice in base zero della colonna."
    - id: error
      type: System.String
      description: "Descrizione dell&quot;errore."
  overload: System.Data.DataRow.SetColumnError*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Il <code> columnIndex </code> argomento non compreso nell&quot;intervallo"
  platform:
  - net462
- uid: System.Data.DataRow.SetColumnError(System.String,System.String)
  id: SetColumnError(System.String,System.String)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetColumnError(String,String)
  nameWithType: DataRow.SetColumnError(String,String)
  fullName: System.Data.DataRow.SetColumnError(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Imposta la descrizione dell&quot;errore per una colonna specificata in base al nome."
  remarks: "Il nome di una colonna è impostato con la <xref:System.Data.DataColumn.ColumnName%2A>proprietà di <xref:System.Data.DataColumn>classe.</xref:System.Data.DataColumn> </xref:System.Data.DataColumn.ColumnName%2A>       Per esaminare le descrizioni degli errori, utilizzare il <xref:System.Data.DataRow.GetColumnError%2A>metodo.</xref:System.Data.DataRow.GetColumnError%2A>       Per determinare se sono presenti errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.HasErrors%2A>proprietà.</xref:System.Data.DataRow.HasErrors%2A> Di conseguenza, è possibile utilizzare il <xref:System.Data.DataRow.GetColumnsInError%2A>metodo per recuperare tutte le colonne con errori.</xref:System.Data.DataRow.GetColumnsInError%2A>       Se `null` o una stringa vuota viene passata come il `error` parametro, il <xref:System.Data.DataRow>si comporta come se è stato impostato alcun errore e <xref:System.Data.DataRow.HasErrors%2A>restituirà false.</xref:System.Data.DataRow.HasErrors%2A> </xref:System.Data.DataRow>       Per impostare una descrizione dell&quot;errore personalizzato per l&quot;intera riga, utilizzare il <xref:System.Data.DataRow.RowError%2A>proprietà.</xref:System.Data.DataRow.RowError%2A>       Per determinare se sono presenti errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.HasErrors%2A>metodo.</xref:System.Data.DataRow.HasErrors%2A>       Per cancellare tutti gli errori per la raccolta di colonne, utilizzare il <xref:System.Data.DataRow.ClearErrors%2A>metodo.</xref:System.Data.DataRow.ClearErrors%2A>"
  example:
  - "The following example sets an error description for a specified <xref:System.Data.DataRow>.  \n  \n [!code-cs[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/csharp/m-system.data.datarow.se_1_1.cs)]\n [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_1_1.vb)]"
  syntax:
    content: public void SetColumnError (string columnName, string error);
    parameters:
    - id: columnName
      type: System.String
      description: "Il nome della colonna."
    - id: error
      type: System.String
      description: "Descrizione dell&quot;errore."
  overload: System.Data.DataRow.SetColumnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetModified
  id: SetModified
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetModified()
  nameWithType: DataRow.SetModified()
  fullName: System.Data.DataRow.SetModified()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Changes the <xref:System.Data.DataRow.Rowstate*> of a <xref href=&quot;System.Data.DataRow&quot;></xref> to <xref uid=&quot;langword_csharp_Modified&quot; name=&quot;Modified&quot; href=&quot;&quot;></xref>.</xref:System.Data.DataRow.Rowstate*>"
  remarks: "Modifiche di <xref:System.Data.DataRow.Rowstate%2A>di un <xref:System.Data.DataRow>a `Modified`.</xref:System.Data.DataRow> </xref:System.Data.DataRow.Rowstate%2A> Se la riga corrente non è presente in entrambi un `Unchanged` o un `Added` stato, genera un <xref:System.InvalidOperationException>con il messaggio che `SetModified` può essere richiamato solo su un `DataRow` istanza in cui il `RowState` è `Unchanged`.</xref:System.InvalidOperationException>"
  syntax:
    content: public void SetModified ();
    parameters: []
  overload: System.Data.DataRow.SetModified*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetNull(System.Data.DataColumn)
  id: SetNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetNull(DataColumn)
  nameWithType: DataRow.SetNull(DataColumn)
  fullName: System.Data.DataRow.SetNull(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Imposta il valore dell&quot;oggetto specificato <xref href=&quot;System.Data.DataColumn&quot;> </xref> su un valore null."
  remarks: "Utilizzare il <xref:System.Data.DataRow.IsNull%2A>metodo per determinare se una colonna contiene un valore null.</xref:System.Data.DataRow.IsNull%2A>"
  syntax:
    content: protected void SetNull (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "A <xref href=&quot;System.Data.DataColumn&quot;></xref>."
  overload: System.Data.DataRow.SetNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow)
  id: SetParentRow(System.Data.DataRow)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetParentRow(DataRow)
  nameWithType: DataRow.SetParentRow(DataRow)
  fullName: System.Data.DataRow.SetParentRow(DataRow)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Imposta la riga padre di un <xref href=&quot;System.Data.DataRow&quot;> </xref> con nuovo oggetto padre specificato <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  syntax:
    content: public void SetParentRow (System.Data.DataRow parentRow);
    parameters:
    - id: parentRow
      type: System.Data.DataRow
      description: "Il nuovo elemento padre <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  overload: System.Data.DataRow.SetParentRow*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  id: SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  parent: System.Data.DataRow
  langs:
  - csharp
  name: SetParentRow(DataRow,DataRelation)
  nameWithType: DataRow.SetParentRow(DataRow,DataRelation)
  fullName: System.Data.DataRow.SetParentRow(DataRow,DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Imposta la riga padre di un <xref href=&quot;System.Data.DataRow&quot;> </xref> con nuovo oggetto padre specificato <xref href=&quot;System.Data.DataRow&quot;> </xref> e <xref href=&quot;System.Data.DataRelation&quot;> </xref>."
  remarks: ''
  example:
  - "The following example sets the parent row of a specific child row.  \n  \n [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datarow.se_2_1.vb)]"
  syntax:
    content: public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);
    parameters:
    - id: parentRow
      type: System.Data.DataRow
      description: "Il nuovo elemento padre <xref href=&quot;System.Data.DataRow&quot;> </xref>."
    - id: relation
      type: System.Data.DataRelation
      description: "La relazione <xref href=&quot;System.Data.DataRelation&quot;> </xref> da utilizzare."
  overload: System.Data.DataRow.SetParentRow*
  exceptions:
  - type: System.Data.RowNotInTableException
    commentId: T:System.Data.RowNotInTableException
    description: "Una delle righe non appartiene a una tabella"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Una delle righe è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La relazione non appartiene al <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref> del <xref href=&quot;System.Data.DataSet&quot;> </xref> oggetto."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "Figlio della relazione <xref href=&quot;System.Data.DataTable&quot;> </xref> non è la tabella a cui appartiene questa riga."
  platform:
  - net462
- uid: System.Data.DataRow.Table
  id: Table
  parent: System.Data.DataRow
  langs:
  - csharp
  name: Table
  nameWithType: DataRow.Table
  fullName: System.Data.DataRow.Table
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il <xref href=&quot;System.Data.DataTable&quot;> </xref> per cui questa riga ha uno schema."
  remarks: "Oggetto <xref:System.Data.DataRow>non appartiene necessariamente all&quot;insieme di una tabella di righe.</xref:System.Data.DataRow> Questo comportamento si verifica quando <xref:System.Data.DataRow>è stata creata ma non aggiunti a <xref:System.Data.DataRowCollection>.</xref:System.Data.DataRowCollection> </xref:System.Data.DataRow> Se il <xref:System.Data.DataRow.RowState%2A>restituisce proprietà `DataRowState.Detached`, la riga non è presente in qualsiasi raccolta.</xref:System.Data.DataRow.RowState%2A>"
  example:
  - "The following example uses the Table property to return a reference to the columns collection of the <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData DataRow.Table Example#1](~/add/codesnippet/csharp/p-system.data.datarow.ta_1.cs)]\n [!code-vb[Classic WebData DataRow.Table Example#1](~/add/codesnippet/visualbasic/p-system.data.datarow.ta_1.vb)]"
  syntax:
    content: public System.Data.DataTable Table { get; }
    return:
      type: System.Data.DataTable
      description: "Il <xref href=&quot;System.Data.DataTable&quot;> </xref> a cui appartiene questa riga."
  overload: System.Data.DataRow.Table*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.RowNotInTableException
  parent: System.Data
  isExternal: false
  name: RowNotInTableException
  nameWithType: RowNotInTableException
  fullName: System.Data.RowNotInTableException
- uid: System.Data.InRowChangingEventException
  parent: System.Data
  isExternal: false
  name: InRowChangingEventException
  nameWithType: InRowChangingEventException
  fullName: System.Data.InRowChangingEventException
- uid: System.Data.DeletedRowInaccessibleException
  parent: System.Data
  isExternal: false
  name: DeletedRowInaccessibleException
  nameWithType: DeletedRowInaccessibleException
  fullName: System.Data.DeletedRowInaccessibleException
- uid: System.Data.ConstraintException
  parent: System.Data
  isExternal: false
  name: ConstraintException
  nameWithType: ConstraintException
  fullName: System.Data.ConstraintException
- uid: System.Data.ReadOnlyException
  parent: System.Data
  isExternal: false
  name: ReadOnlyException
  nameWithType: ReadOnlyException
  fullName: System.Data.ReadOnlyException
- uid: System.Data.NoNullAllowedException
  parent: System.Data
  isExternal: false
  name: NoNullAllowedException
  nameWithType: NoNullAllowedException
  fullName: System.Data.NoNullAllowedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.VersionNotFoundException
  parent: System.Data
  isExternal: false
  name: VersionNotFoundException
  nameWithType: VersionNotFoundException
  fullName: System.Data.VersionNotFoundException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataException
  parent: System.Data
  isExternal: false
  name: DataException
  nameWithType: DataException
  fullName: System.Data.DataException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.DataRow.#ctor(System.Data.DataRowBuilder)
  parent: System.Data.DataRow
  isExternal: false
  name: DataRow(DataRowBuilder)
  nameWithType: DataRow.DataRow(DataRowBuilder)
  fullName: System.Data.DataRow.DataRow(DataRowBuilder)
- uid: System.Data.DataRowBuilder
  parent: System.Data
  isExternal: false
  name: DataRowBuilder
  nameWithType: DataRowBuilder
  fullName: System.Data.DataRowBuilder
- uid: System.Data.DataRow.AcceptChanges
  parent: System.Data.DataRow
  isExternal: false
  name: AcceptChanges()
  nameWithType: DataRow.AcceptChanges()
  fullName: System.Data.DataRow.AcceptChanges()
- uid: System.Data.DataRow.BeginEdit
  parent: System.Data.DataRow
  isExternal: false
  name: BeginEdit()
  nameWithType: DataRow.BeginEdit()
  fullName: System.Data.DataRow.BeginEdit()
- uid: System.Data.DataRow.CancelEdit
  parent: System.Data.DataRow
  isExternal: false
  name: CancelEdit()
  nameWithType: DataRow.CancelEdit()
  fullName: System.Data.DataRow.CancelEdit()
- uid: System.Data.DataRow.ClearErrors
  parent: System.Data.DataRow
  isExternal: false
  name: ClearErrors()
  nameWithType: DataRow.ClearErrors()
  fullName: System.Data.DataRow.ClearErrors()
- uid: System.Data.DataRow.Delete
  parent: System.Data.DataRow
  isExternal: false
  name: Delete()
  nameWithType: DataRow.Delete()
  fullName: System.Data.DataRow.Delete()
- uid: System.Data.DataRow.EndEdit
  parent: System.Data.DataRow
  isExternal: false
  name: EndEdit()
  nameWithType: DataRow.EndEdit()
  fullName: System.Data.DataRow.EndEdit()
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(DataRelation)
  nameWithType: DataRow.GetChildRows(DataRelation)
  fullName: System.Data.DataRow.GetChildRows(DataRelation)
- uid: System.Data.DataRow[]
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow[]
  spec.csharp:
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: DataRow[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelation
  parent: System.Data
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation
- uid: System.Data.DataRow.GetChildRows(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(String)
  nameWithType: DataRow.GetChildRows(String)
  fullName: System.Data.DataRow.GetChildRows(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetChildRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(DataRelation,DataRowVersion)
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows(String,DataRowVersion)
  nameWithType: DataRow.GetChildRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetChildRows(String,DataRowVersion)
- uid: System.Data.DataRow.GetColumnError(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(DataColumn)
  nameWithType: DataRow.GetColumnError(DataColumn)
  fullName: System.Data.DataRow.GetColumnError(DataColumn)
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataRow.GetColumnError(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(Int32)
  nameWithType: DataRow.GetColumnError(Int32)
  fullName: System.Data.DataRow.GetColumnError(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataRow.GetColumnError(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError(String)
  nameWithType: DataRow.GetColumnError(String)
  fullName: System.Data.DataRow.GetColumnError(String)
- uid: System.Data.DataRow.GetColumnsInError
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnsInError()
  nameWithType: DataRow.GetColumnsInError()
  fullName: System.Data.DataRow.GetColumnsInError()
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(DataRelation)
  nameWithType: DataRow.GetParentRow(DataRelation)
  fullName: System.Data.DataRow.GetParentRow(DataRelation)
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.DataRow.GetParentRow(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(String)
  nameWithType: DataRow.GetParentRow(String)
  fullName: System.Data.DataRow.GetParentRow(String)
- uid: System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRow(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(DataRelation,DataRowVersion)
- uid: System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow(String,DataRowVersion)
  nameWithType: DataRow.GetParentRow(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRow(String,DataRowVersion)
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(DataRelation)
  nameWithType: DataRow.GetParentRows(DataRelation)
  fullName: System.Data.DataRow.GetParentRows(DataRelation)
- uid: System.Data.DataRow.GetParentRows(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(String)
  nameWithType: DataRow.GetParentRows(String)
  fullName: System.Data.DataRow.GetParentRows(String)
- uid: System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(DataRelation,DataRowVersion)
  nameWithType: DataRow.GetParentRows(DataRelation,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(DataRelation,DataRowVersion)
- uid: System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows(String,DataRowVersion)
  nameWithType: DataRow.GetParentRows(String,DataRowVersion)
  fullName: System.Data.DataRow.GetParentRows(String,DataRowVersion)
- uid: System.Data.DataRow.HasErrors
  parent: System.Data.DataRow
  isExternal: false
  name: HasErrors
  nameWithType: DataRow.HasErrors
  fullName: System.Data.DataRow.HasErrors
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRow.HasVersion(System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: HasVersion(DataRowVersion)
  nameWithType: DataRow.HasVersion(DataRowVersion)
  fullName: System.Data.DataRow.HasVersion(DataRowVersion)
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(DataColumn)
  nameWithType: DataRow.IsNull(DataColumn)
  fullName: System.Data.DataRow.IsNull(DataColumn)
- uid: System.Data.DataRow.IsNull(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(Int32)
  nameWithType: DataRow.IsNull(Int32)
  fullName: System.Data.DataRow.IsNull(Int32)
- uid: System.Data.DataRow.IsNull(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(String)
  nameWithType: DataRow.IsNull(String)
  fullName: System.Data.DataRow.IsNull(String)
- uid: System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull(DataColumn,DataRowVersion)
  nameWithType: DataRow.IsNull(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.IsNull(DataColumn,DataRowVersion)
- uid: System.Data.DataRow.Item(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(DataColumn)
  nameWithType: DataRow.Item(DataColumn)
  fullName: System.Data.DataRow.Item(DataColumn)
- uid: System.Data.DataRow.Item(System.Int32)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(Int32)
  nameWithType: DataRow.Item(Int32)
  fullName: System.Data.DataRow.Item(Int32)
- uid: System.Data.DataRow.Item(System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(String)
  nameWithType: DataRow.Item(String)
  fullName: System.Data.DataRow.Item(String)
- uid: System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(DataColumn,DataRowVersion)
  nameWithType: DataRow.Item(DataColumn,DataRowVersion)
  fullName: System.Data.DataRow.Item(DataColumn,DataRowVersion)
- uid: System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(Int32,DataRowVersion)
  nameWithType: DataRow.Item(Int32,DataRowVersion)
  fullName: System.Data.DataRow.Item(Int32,DataRowVersion)
- uid: System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRow
  isExternal: false
  name: Item(String,DataRowVersion)
  nameWithType: DataRow.Item(String,DataRowVersion)
  fullName: System.Data.DataRow.Item(String,DataRowVersion)
- uid: System.Data.DataRow.ItemArray
  parent: System.Data.DataRow
  isExternal: false
  name: ItemArray
  nameWithType: DataRow.ItemArray
  fullName: System.Data.DataRow.ItemArray
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRow.RejectChanges
  parent: System.Data.DataRow
  isExternal: false
  name: RejectChanges()
  nameWithType: DataRow.RejectChanges()
  fullName: System.Data.DataRow.RejectChanges()
- uid: System.Data.DataRow.RowError
  parent: System.Data.DataRow
  isExternal: false
  name: RowError
  nameWithType: DataRow.RowError
  fullName: System.Data.DataRow.RowError
- uid: System.Data.DataRow.RowState
  parent: System.Data.DataRow
  isExternal: false
  name: RowState
  nameWithType: DataRow.RowState
  fullName: System.Data.DataRow.RowState
- uid: System.Data.DataRowState
  parent: System.Data
  isExternal: false
  name: DataRowState
  nameWithType: DataRowState
  fullName: System.Data.DataRowState
- uid: System.Data.DataRow.SetAdded
  parent: System.Data.DataRow
  isExternal: false
  name: SetAdded()
  nameWithType: DataRow.SetAdded()
  fullName: System.Data.DataRow.SetAdded()
- uid: System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(DataColumn,String)
  nameWithType: DataRow.SetColumnError(DataColumn,String)
  fullName: System.Data.DataRow.SetColumnError(DataColumn,String)
- uid: System.Data.DataRow.SetColumnError(System.Int32,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(Int32,String)
  nameWithType: DataRow.SetColumnError(Int32,String)
  fullName: System.Data.DataRow.SetColumnError(Int32,String)
- uid: System.Data.DataRow.SetColumnError(System.String,System.String)
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError(String,String)
  nameWithType: DataRow.SetColumnError(String,String)
  fullName: System.Data.DataRow.SetColumnError(String,String)
- uid: System.Data.DataRow.SetModified
  parent: System.Data.DataRow
  isExternal: false
  name: SetModified()
  nameWithType: DataRow.SetModified()
  fullName: System.Data.DataRow.SetModified()
- uid: System.Data.DataRow.SetNull(System.Data.DataColumn)
  parent: System.Data.DataRow
  isExternal: false
  name: SetNull(DataColumn)
  nameWithType: DataRow.SetNull(DataColumn)
  fullName: System.Data.DataRow.SetNull(DataColumn)
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow)
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow(DataRow)
  nameWithType: DataRow.SetParentRow(DataRow)
  fullName: System.Data.DataRow.SetParentRow(DataRow)
- uid: System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow(DataRow,DataRelation)
  nameWithType: DataRow.SetParentRow(DataRow,DataRelation)
  fullName: System.Data.DataRow.SetParentRow(DataRow,DataRelation)
- uid: System.Data.DataRow.Table
  parent: System.Data.DataRow
  isExternal: false
  name: Table
  nameWithType: DataRow.Table
  fullName: System.Data.DataRow.Table
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataRow.#ctor*
  parent: System.Data.DataRow
  isExternal: false
  name: DataRow
  nameWithType: DataRow.DataRow
- uid: System.Data.DataRow.AcceptChanges*
  parent: System.Data.DataRow
  isExternal: false
  name: AcceptChanges
  nameWithType: DataRow.AcceptChanges
- uid: System.Data.DataRow.BeginEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: BeginEdit
  nameWithType: DataRow.BeginEdit
- uid: System.Data.DataRow.CancelEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: CancelEdit
  nameWithType: DataRow.CancelEdit
- uid: System.Data.DataRow.ClearErrors*
  parent: System.Data.DataRow
  isExternal: false
  name: ClearErrors
  nameWithType: DataRow.ClearErrors
- uid: System.Data.DataRow.Delete*
  parent: System.Data.DataRow
  isExternal: false
  name: Delete
  nameWithType: DataRow.Delete
- uid: System.Data.DataRow.EndEdit*
  parent: System.Data.DataRow
  isExternal: false
  name: EndEdit
  nameWithType: DataRow.EndEdit
- uid: System.Data.DataRow.GetChildRows*
  parent: System.Data.DataRow
  isExternal: false
  name: GetChildRows
  nameWithType: DataRow.GetChildRows
- uid: System.Data.DataRow.GetColumnError*
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnError
  nameWithType: DataRow.GetColumnError
- uid: System.Data.DataRow.GetColumnsInError*
  parent: System.Data.DataRow
  isExternal: false
  name: GetColumnsInError
  nameWithType: DataRow.GetColumnsInError
- uid: System.Data.DataRow.GetParentRow*
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRow
  nameWithType: DataRow.GetParentRow
- uid: System.Data.DataRow.GetParentRows*
  parent: System.Data.DataRow
  isExternal: false
  name: GetParentRows
  nameWithType: DataRow.GetParentRows
- uid: System.Data.DataRow.HasErrors*
  parent: System.Data.DataRow
  isExternal: false
  name: HasErrors
  nameWithType: DataRow.HasErrors
- uid: System.Data.DataRow.HasVersion*
  parent: System.Data.DataRow
  isExternal: false
  name: HasVersion
  nameWithType: DataRow.HasVersion
- uid: System.Data.DataRow.IsNull*
  parent: System.Data.DataRow
  isExternal: false
  name: IsNull
  nameWithType: DataRow.IsNull
- uid: System.Data.DataRow.Item*
  parent: System.Data.DataRow
  isExternal: false
  name: Item
  nameWithType: DataRow.Item
- uid: System.Data.DataRow.ItemArray*
  parent: System.Data.DataRow
  isExternal: false
  name: ItemArray
  nameWithType: DataRow.ItemArray
- uid: System.Data.DataRow.RejectChanges*
  parent: System.Data.DataRow
  isExternal: false
  name: RejectChanges
  nameWithType: DataRow.RejectChanges
- uid: System.Data.DataRow.RowError*
  parent: System.Data.DataRow
  isExternal: false
  name: RowError
  nameWithType: DataRow.RowError
- uid: System.Data.DataRow.RowState*
  parent: System.Data.DataRow
  isExternal: false
  name: RowState
  nameWithType: DataRow.RowState
- uid: System.Data.DataRow.SetAdded*
  parent: System.Data.DataRow
  isExternal: false
  name: SetAdded
  nameWithType: DataRow.SetAdded
- uid: System.Data.DataRow.SetColumnError*
  parent: System.Data.DataRow
  isExternal: false
  name: SetColumnError
  nameWithType: DataRow.SetColumnError
- uid: System.Data.DataRow.SetModified*
  parent: System.Data.DataRow
  isExternal: false
  name: SetModified
  nameWithType: DataRow.SetModified
- uid: System.Data.DataRow.SetNull*
  parent: System.Data.DataRow
  isExternal: false
  name: SetNull
  nameWithType: DataRow.SetNull
- uid: System.Data.DataRow.SetParentRow*
  parent: System.Data.DataRow
  isExternal: false
  name: SetParentRow
  nameWithType: DataRow.SetParentRow
- uid: System.Data.DataRow.Table*
  parent: System.Data.DataRow
  isExternal: false
  name: Table
  nameWithType: DataRow.Table
