### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.UdpAnySourceMulticastClient
  id: UdpAnySourceMulticastClient
  children:
  - System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)
  - System.Net.Sockets.UdpAnySourceMulticastClient.Dispose
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)
  - System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  - System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  - System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  - System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)
  langs:
  - csharp
  name: UdpAnySourceMulticastClient
  nameWithType: UdpAnySourceMulticastClient
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient
  type: Class
  summary: "Un destinatario di client per il traffico multicast da qualsiasi origine, nota anche come qualsiasi origine Multicast (ASM) o Internet Standard Multicast (ISM)."
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public class UdpAnySourceMulticastClient : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)
  id: '#ctor(System.Net.IPAddress,System.Int32)'
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: UdpAnySourceMulticastClient(IPAddress,Int32)
  nameWithType: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress,Int32)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress,Int32)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Crea un nuovo <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> client UDP che è possibile sottoscrivere un indirizzo di gruppo e ricevere datagrammi da qualsiasi origine."
  remarks: "Il costruttore UdpAnySourceMulticastClient associa il socket di multicast UDP con un indirizzo di gruppo e una porta, ma non associare o in caso contrario, utilizzare il socket.       Il `groupAddress` parametro può essere IPv4 o IPv6 multicast indirizzo.       Il `localPort` parametro non è necessario specificare una porta inferiore a 1024."
  syntax:
    content: public UdpAnySourceMulticastClient (System.Net.IPAddress groupAddress, int localPort);
    parameters:
    - id: groupAddress
      type: System.Net.IPAddress
      description: "L&quot;indirizzo di gruppo multicast può sottoscrivere questo ricevente."
    - id: localPort
      type: System.Int32
      description: "La porta locale per il ricevitore da associare."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>groupAddress</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. riferimento"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>localPort</code>è minore di 0 - oppure - <code>localPort</code> è maggiore di 65.535."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  id: BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Associa il socket e inizia un&quot;operazione di join al gruppo multicast per consentire di ricezione dei datagrammi da qualsiasi membro di gruppo."
  remarks: "Il metodo BeginJoinGroup associa un socket multicast UDP a una porta locale e viene aggiunto un gruppo multicast per consentire la ricezione dei datagrammi da qualsiasi membro di gruppo multicast. La porta locale e l&quot;indirizzo del gruppo multicast vengono specificate nel <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A>costruttore.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A>       Il metodo specificato nella `callback` parametro viene richiamato quando viene completata l&quot;operazione per aggiungere il gruppo multicast.       Se richiesto dal runtime, il metodo BeginJoinGroup esegue inoltre una verifica di criteri per verificare che il client può accedere il gruppo multicast. Se il client non è consentito l&quot;accesso, <xref:System.Net.Sockets.SocketException>viene generata con <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException> un"
  syntax:
    content: public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Un metodo di callback da richiamare al completamento dell&quot;operazione."
    - id: state
      type: System.Object
      description: "Informazioni di stato facoltative da passare per il `callback` metodo per l&quot;operazione."
    return:
      type: System.IAsyncResult
      description: "Restituisce <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       Un <xref:System.IAsyncResult>che fa riferimento a questa operazione.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast è già stato aggiunto o è in corso un&quot;operazione di join."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> è stato eliminato."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Si è verificato un errore durante il tentativo di accesso al socket. Per ulteriori informazioni, vedere la sezione Osservazioni."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Avvia l&quot;operazione di ricezione di un pacchetto dal gruppo multicast unito e richiama il callback specificato quando arriva un pacchetto per il gruppo da qualsiasi mittente."
  remarks: "Il metodo BeginReceiveFromGroup inizia un&quot;operazione di ricezione di un pacchetto UDP dal gruppo multicast unito da qualsiasi mittente. La porta locale e l&quot;indirizzo del gruppo multicast vengono specificate nel <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A>costruttore.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> Il client multicast deve inoltre aver completato un join al gruppo multicast.       Il metodo specificato nella `callback` parametro viene richiamato quando ha ricevuto un pacchetto.       È possibile disporre di un errore socket se un&quot;operazione di ricezione ha esito negativo in modo sincrono, anche se ciò è insolito con UDP. Se si verifica un errore di socket, un <xref:System.Net.Sockets.SocketException>viene generata un&quot;eccezione.</xref:System.Net.Sockets.SocketException> L&quot;errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError>enumerazione.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginReceiveFromGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Buffer in cui archiviare i dati ricevuti."
    - id: offset
      type: System.Int32
      description: "Offset, in byte, dall&quot;inizio di `buffer` in cui i dati devono essere archiviati."
    - id: count
      type: System.Int32
      description: "Il numero massimo di byte da ricevere e archiviare nel `buffer`."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo di callback da richiamare al completamento dell&quot;operazione."
    - id: state
      type: System.Object
      description: "Informazioni di stato facoltative da passare per il `callback` metodo per l&quot;operazione."
    return:
      type: System.IAsyncResult
      description: "Restituisce <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       Un <xref:System.IAsyncResult>che fa riferimento a questa operazione.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>è un riferimento null (Nothing in Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>è minore di 0 - oppure - <code>offset</code> è maggiore della lunghezza del <code>buffer</code>.       - oppure - <code>count</code> è minore di 0 - oppure - <code>offset</code> più il conteggio è maggiore della lunghezza del <code>buffer</code>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast non è ancora stato unito."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> è stato eliminato."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Si è verificato un errore durante il tentativo di accesso al socket. Per ulteriori informazioni, vedere la sezione Osservazioni."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  id: BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Avvia l&quot;operazione di invio di un pacchetto unicast alla destinazione specificata."
  remarks: "Il metodo BeginSendTo inizia un&quot;operazione di invio di un pacchetto UDP per il gruppo multicast unito.       Il client è necessario aver completato un join al gruppo multicast. L&quot;indirizzo di destinazione specificato nella `remoteEndPoint` parametro deve avere già inviato un pacchetto multicast a questo ricevente. Alcuni protocolli utilizzano queste informazioni per passare al controllo del flusso di qualità del servizio statistiche o messaggi di ripristino.       Il metodo specificato nella `callback` parametro viene richiamato quando ha ricevuto un pacchetto.       La trasmissione è consentita solo se l&quot;indirizzo specificato nella `remoteEndPoint` parametro ha già inviato un pacchetto multicast per il ricevitore. Se il client non è consentito l&quot;accesso, <xref:System.Net.Sockets.SocketException>viene generata con <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException> un       Se la porta di destinazione specificato nella `remoteEndPoint` parametro è minore di 1024, <xref:System.Net.Sockets.SocketException>viene generata con <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException> un       È possibile disporre di un errore socket se un&quot;operazione di ricezione ha esito negativo in modo sincrono, anche se ciò è insolito con UDP. Se si verifica un errore di socket, un <xref:System.Net.Sockets.SocketException>viene generata un&quot;eccezione.</xref:System.Net.Sockets.SocketException> L&quot;errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError>enumerazione.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginSendTo (byte[] buffer, int offset, int count, System.Net.IPEndPoint remoteEndPoint, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Buffer che contiene i dati da inviare."
    - id: offset
      type: System.Int32
      description: "Offset, in byte, dall&quot;inizio della `buffer` per leggere i dati da inviare."
    - id: count
      type: System.Int32
      description: "Il numero di byte da inviare dal `buffer`."
    - id: remoteEndPoint
      type: System.Net.IPEndPoint
      description: "L&quot;endpoint remoto a cui viene inviato il pacchetto."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo di callback da richiamare al completamento dell&quot;operazione."
    - id: state
      type: System.Object
      description: "Informazioni di stato facoltative da passare per il `callback` metodo per l&quot;operazione."
    return:
      type: System.IAsyncResult
      description: "Restituisce <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       Un <xref:System.IAsyncResult>che fa riferimento a questa operazione.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>è un riferimento null (Nothing in Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>è minore di 0 - oppure - <code>offset</code> è maggiore della lunghezza del <code>buffer</code>.       - oppure - <code>count</code> è minore di 0 - oppure - <code>offset</code> più il conteggio è maggiore della lunghezza del <code>buffer</code>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast non è ancora stato unito."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> è stato eliminato."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Si è verificato un errore durante il tentativo di accesso al socket. Per ulteriori informazioni, vedere la sezione Osservazioni."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Avvia l&quot;operazione di invio di un pacchetto a un gruppo multicast unito e richiama il callback specificato quando è stato inviato un pacchetto per il gruppo."
  remarks: "Il metodo BeginSendToGroup inizia un&quot;operazione di invio di un pacchetto UDP per il gruppo multicast unito.       Il client è necessario aver completato un join al gruppo multicast.       Il metodo specificato nella `callback` parametro viene richiamato quando ha ricevuto un pacchetto.       È possibile disporre di un errore socket se un&quot;operazione di ricezione ha esito negativo in modo sincrono, anche se ciò è insolito con UDP. Se si verifica un errore di socket, un <xref:System.Net.Sockets.SocketException>viene generata un&quot;eccezione.</xref:System.Net.Sockets.SocketException> L&quot;errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError>enumerazione.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginSendToGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Buffer che contiene i dati da inviare."
    - id: offset
      type: System.Int32
      description: "Offset, in byte, dall&quot;inizio della `buffer` per leggere i dati da inviare."
    - id: count
      type: System.Int32
      description: "Il numero di byte da inviare dal `buffer`."
    - id: callback
      type: System.AsyncCallback
      description: "Il metodo di callback da richiamare al completamento dell&quot;operazione."
    - id: state
      type: System.Object
      description: "Informazioni di stato facoltative da passare per il `callback` metodo per l&quot;operazione."
    return:
      type: System.IAsyncResult
      description: "Restituisce <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       Un <xref:System.IAsyncResult>che fa riferimento a questa operazione.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>è un riferimento null (Nothing in Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>è minore di 0 - oppure - <code>offset</code> è maggiore della lunghezza del <code>buffer</code>.       - oppure - <code>count</code> è minore di 0 - oppure - <code>offset</code> più il conteggio è maggiore della lunghezza del <code>buffer</code>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast non è ancora stato unito."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> è stato eliminato."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Si è verificato un errore durante il tentativo di accesso al socket. Per ulteriori informazioni, vedere la sezione Osservazioni."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)
  id: BlockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BlockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.BlockSource(IPAddress)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(IPAddress)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Blocca un&quot;origine in modo che i pacchetti multicast provenienti da quest&quot;ultimo non vengano più ricevuti."
  remarks: "Il metodo BlockSource blocca i pacchetti multicast provenienti da un indirizzo di origine specificato da ricevuti. Il client è necessario aver completato un join al gruppo multicast.       Il `sourceAddress` parametro può essere l&quot;indirizzo IPv4 o IPv6, ma la `sourceAddress` parametro deve corrispondere la famiglia di indirizzi del gruppo multicast che fanno parte di client.       Il metodo specificato nella `callback` parametro viene richiamato quando ha ricevuto un pacchetto.       Se si verifica un errore socket durante l&quot;esecuzione dell&quot;operazione di origine del blocco, un <xref:System.Net.Sockets.SocketException>viene generata un&quot;eccezione.</xref:System.Net.Sockets.SocketException> L&quot;errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError>enumerazione.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void BlockSource (System.Net.IPAddress sourceAddress);
    parameters:
    - id: sourceAddress
      type: System.Net.IPAddress
      description: "L&quot;indirizzo di origine da bloccare."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast non è ancora stato unito."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> è stato eliminato."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Si è verificato un errore durante il tentativo di accesso al socket. Per ulteriori informazioni, vedere la sezione Osservazioni."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose
  id: Dispose
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: Dispose()
  nameWithType: UdpAnySourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Esce dal gruppo multicast e rilascia tutte le risorse usate dall&quot;istanza corrente del <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> classe e <xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket> sottostante"
  remarks: "Chiamare Dispose dopo aver terminato di utilizzare <xref:System.Net.Sockets.UdpAnySourceMulticastClient>.</xref:System.Net.Sockets.UdpAnySourceMulticastClient> Il metodo Dispose lascia il <xref:System.Net.Sockets.UdpAnySourceMulticastClient>in uno stato inutilizzabile.</xref:System.Net.Sockets.UdpAnySourceMulticastClient> Dopo aver chiamato Dispose, è necessario rilasciare tutti i riferimenti alla <xref:System.Net.Sockets.UdpAnySourceMulticastClient>consentire il garbage collector di recuperare la memoria che il <xref:System.Net.Sockets.UdpAnySourceMulticastClient>occupata.</xref:System.Net.Sockets.UdpAnySourceMulticastClient> </xref:System.Net.Sockets.UdpAnySourceMulticastClient>       Chiamare sempre il metodo di rilasciare l&quot;ultimo riferimento a <xref:System.Net.Sockets.UdpAnySourceMulticastClient>.</xref:System.Net.Sockets.UdpAnySourceMulticastClient> Disposebefore In caso contrario, le risorse non vengono liberate finché il garbage collector chiama la <xref:System.Net.Sockets.UdpAnySourceMulticastClient>dell&quot;oggetto <xref:System.Object.Finalize%2A>metodo.</xref:System.Object.Finalize%2A> </xref:System.Net.Sockets.UdpAnySourceMulticastClient>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  id: EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Completa l&quot;operazione di join asincrona gruppo a un gruppo multicast."
  remarks: "Il metodo EndJoinGroup completa un&quot;associazione asincrona per un&quot;operazione di join e socket a un gruppo multicast.       Se richiesto dal runtime, il metodo EndJoinGroup esegue inoltre una verifica di criteri per verificare che il client può accedere il gruppo multicast. Se il client non è consentito l&quot;accesso, <xref:System.Net.Sockets.SocketException>viene generata con <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException> un       Se si verifica un errore socket durante l&quot;esecuzione dell&quot;operazione di gruppo di join, un <xref:System.Net.Sockets.SocketException>viene generata un&quot;eccezione.</xref:System.Net.Sockets.SocketException> L&quot;errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError>enumerazione.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndJoinGroup (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Il risultato dell&quot;operazione asincrona di join."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>è un riferimento null (Nothing in Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> è stato eliminato."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Si è verificato un errore durante il tentativo di accesso al socket. Per ulteriori informazioni, vedere la sezione Osservazioni."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  id: EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  nameWithType: UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Completa l&quot;operazione asincrona di ricezione di un pacchetto dal gruppo multicast unito e fornisce le informazioni ricevute."
  remarks: "Il metodo EndReceiveFromGroup completa un&quot;operazione asincrona per ricevere un pacchetto da un gruppo multicast.       Se si verifica un errore socket durante l&quot;esecuzione dell&quot;operazione di ricezione, una <xref:System.Net.Sockets.SocketException>viene generata un&quot;eccezione.</xref:System.Net.Sockets.SocketException> L&quot;errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError>enumerazione.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public int EndReceiveFromGroup (IAsyncResult result, out System.Net.IPEndPoint source);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Operazione di ricezione del risultato asincrono."
    - id: source
      type: System.Net.IPEndPoint
      description: "L&quot;endpoint di origine da cui è stato ricevuto il pacchetto."
    return:
      type: System.Int32
      description: "La lunghezza, espressa in byte, del messaggio archiviato nel parametro buffer passato al <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*>metodo.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*>"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>è un riferimento null (Nothing in Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast non è ancora stato unito."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> è stato eliminato."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Si è verificato un errore durante il tentativo di accesso al socket. Per ulteriori informazioni, vedere la sezione Osservazioni."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)
  id: EndSendTo(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndSendTo(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Completa l&quot;operazione di invio di un pacchetto unicast alla destinazione specificata."
  remarks: "Il metodo EndSendTo completa un&quot;operazione asincrona per inviare un pacchetto all&quot;indirizzo di destinazione specificato.       Se si verifica un errore socket durante l&quot;esecuzione dell&quot;operazione di ricezione, una <xref:System.Net.Sockets.SocketException>viene generata un&quot;eccezione.</xref:System.Net.Sockets.SocketException> L&quot;errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError>enumerazione.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndSendTo (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Il risultato dell&quot;operazione di invio asincrona."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>è un riferimento null (Nothing in Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast non è ancora stato unito."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> è stato eliminato."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Si è verificato un errore durante il tentativo di accesso al socket. Per ulteriori informazioni, vedere la sezione Osservazioni."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)
  id: EndSendToGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndSendToGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Completa l&quot;operazione di invio di un pacchetto a un gruppo multicast."
  remarks: "Il metodo EndSendToGroup completa un&quot;operazione asincrona per inviare un pacchetto a un gruppo multicast.       Se si verifica un errore socket durante l&quot;esecuzione dell&quot;operazione di ricezione, una <xref:System.Net.Sockets.SocketException>viene generata un&quot;eccezione.</xref:System.Net.Sockets.SocketException> L&quot;errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError>enumerazione.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndSendToGroup (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Il risultato dell&quot;operazione di invio asincrona."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>è un riferimento null (Nothing in Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast non è ancora stato unito."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> è stato eliminato."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Si è verificato un errore durante il tentativo di accesso al socket. Per ulteriori informazioni, vedere la sezione Osservazioni."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  id: MulticastLoopback
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: MulticastLoopback
  nameWithType: UdpAnySourceMulticastClient.MulticastLoopback
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Ottiene o imposta un valore che specifica se i pacchetti multicast in uscita recapitati all&quot;applicazione mittente."
  remarks: "Il traffico multicast è un metodo scalabile per la comunicazione di molti-a-molti su Internet. Un processo di sottoscrizione da un indirizzo di un gruppo multicast. Quindi, i pacchetti inviati da un processo sottoscritto il gruppo multicast vengono ricevuti da ogni altro processo ha sottoscritto l&quot;indirizzo multicast. La proprietà MulticastLoopback controlla se qualsiasi processo nel computer locale riceve i pacchetti multicast inviati dal client al gruppo multicast."
  syntax:
    content: public bool MulticastLoopback { get; set; }
    return:
      type: System.Boolean
      description: "Restituisce <xref:System.Boolean>.</xref:System.Boolean>       Un valore che indica se i pacchetti in uscita a un gruppo multicast vengono recapitati all&quot;applicazione mittente."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast non è ancora stato unito."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> è stato eliminato."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: ReceiveBufferSize
  nameWithType: UdpAnySourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Ottiene o imposta la dimensione, in byte, del buffer di ricezione del <xref:System.Net.Sockets.Socket>utilizzato per le operazioni di ricezione multicast su questo <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> istanza.</xref:System.Net.Sockets.Socket>"
  remarks: "Ottiene o imposta la dimensione, in byte, del buffer di ricezione dell&quot;oggetto sottostante di ReceiveBufferSize-proprietà <xref:System.Net.Sockets.Socket>utilizzato per le operazioni di ricezione multicast su questo <xref:System.Net.Sockets.UdpAnySourceMulticastClient>istanza.</xref:System.Net.Sockets.UdpAnySourceMulticastClient> </xref:System.Net.Sockets.Socket> In particolare, ReceiveBufferSize-proprietà controlla le dimensioni del buffer utilizzato da parte dello stack quando arriva un pacchetto, ma l&quot;applicazione non ha ancora chiamato il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>metodo.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> Se questo buffer viene riempito e pacchetti ancora prima l&quot;applicazione chiama il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>e <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A>metodi, i pacchetti precedenti verranno eliminati.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> </xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> L&quot;applicazione non sarà in grado di ricevere i pacchetti precedenti e riceveranno i pacchetti più recenti quando si chiama il <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>metodo.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>       Le dimensioni predefinite del buffer di ricezione in Windows sono 8192 byte."
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Restituisce <xref:System.Int32>.</xref:System.Int32>       Le dimensioni in byte, del buffer di ricezione."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Le dimensioni del buffer specificata sono minore di 0."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast non è ancora stato unito."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> è stato eliminato."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  id: SendBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: SendBufferSize
  nameWithType: UdpAnySourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Ottiene o imposta la dimensione, in byte, del buffer di invio del <xref:System.Net.Sockets.Socket>utilizzato per le operazioni di invio multicast su questo <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> istanza.</xref:System.Net.Sockets.Socket>"
  remarks: "SendBufferSize-proprietà ottiene o imposta la dimensione, in byte, del buffer di invio del Socket sottostante utilizzato per le operazioni di invio multicast su questo <xref:System.Net.Sockets.UdpAnySourceMulticastClient>istanza.</xref:System.Net.Sockets.UdpAnySourceMulticastClient>       le chiamate al <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A>o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A>metodi richiederà più tempo per chiamare il callback in base al valore SendBufferSize-proprietà se il buffer di trasmissione è pieno.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> </xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> SendBufferSize-proprietà controlla solo se rimane buffer dell&quot;utente è stata bloccata nella memoria fisica finché non viene completata la trasmissione.       Le dimensioni predefinite del buffer di invio in Windows sono 8192 byte."
  syntax:
    content: public int SendBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Restituisce <xref:System.Int32>.</xref:System.Int32>       Le dimensioni in byte, del buffer di invio."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Le dimensioni del buffer specificata sono minore di 0."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast non è ancora stato unito."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> è stato eliminato."
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)
  id: UnblockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: UnblockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.UnblockSource(IPAddress)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(IPAddress)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Sblocca un&quot;origine che in precedenza è stata bloccata da una chiamata al <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*>metodo in modo che i pacchetti multicast provenienti da quest&quot;ultimo possono essere ricevuti.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*>"
  remarks: "Il metodo UnblockSource Sblocca i pacchetti multicast provenienti da un indirizzo di origine specificato in modo che possano essere ricevuti. Indirizzo di origine specificato deve avere stata precedentemente bloccata da una chiamata al <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A>metodo.</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A>       Il client è necessario aver completato un join al gruppo multicast.       Il `sourceAddress` parametro può essere IPv4 o IPv6 multicast indirizzo.       Se l&quot;indirizzo di origine specificata nel `sourceAddress` parametro non è stato bloccato in precedenza da una chiamata al <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A>metodo, <xref:System.Net.Sockets.SocketException>viene generata con <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException> un</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A>       Se si verifica un errore socket durante l&quot;esecuzione dell&quot;operazione di origine, sblocca un <xref:System.Net.Sockets.SocketException>viene generata un&quot;eccezione.</xref:System.Net.Sockets.SocketException> L&quot;errore ricevuto è specificato come un membro del <xref:System.Net.Sockets.SocketError>enumerazione.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void UnblockSource (System.Net.IPAddress sourceAddress);
    parameters:
    - id: sourceAddress
      type: System.Net.IPAddress
      description: "L&quot;indirizzo di origine da sbloccare."
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gruppo multicast non è ancora stato unito."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> è stato eliminato."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Si è verificato un errore durante il tentativo di accesso al socket. Per ulteriori informazioni, vedere la sezione Osservazioni."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UdpAnySourceMulticastClient(IPAddress,Int32)
  nameWithType: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress,Int32)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress,Int32)
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
- uid: System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BlockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.BlockSource(IPAddress)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(IPAddress)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: Dispose()
  nameWithType: UdpAnySourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose()
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  nameWithType: UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult,IPEndPoint)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendTo(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendToGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: MulticastLoopback
  nameWithType: UdpAnySourceMulticastClient.MulticastLoopback
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpAnySourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpAnySourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UnblockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.UnblockSource(IPAddress)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(IPAddress)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UdpAnySourceMulticastClient
  nameWithType: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginJoinGroup
  nameWithType: UdpAnySourceMulticastClient.BeginJoinGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginReceiveFromGroup
  nameWithType: UdpAnySourceMulticastClient.BeginReceiveFromGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendTo
  nameWithType: UdpAnySourceMulticastClient.BeginSendTo
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendToGroup
  nameWithType: UdpAnySourceMulticastClient.BeginSendToGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BlockSource
  nameWithType: UdpAnySourceMulticastClient.BlockSource
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: Dispose
  nameWithType: UdpAnySourceMulticastClient.Dispose
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndJoinGroup
  nameWithType: UdpAnySourceMulticastClient.EndJoinGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndReceiveFromGroup
  nameWithType: UdpAnySourceMulticastClient.EndReceiveFromGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendTo
  nameWithType: UdpAnySourceMulticastClient.EndSendTo
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendToGroup
  nameWithType: UdpAnySourceMulticastClient.EndSendToGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: MulticastLoopback
  nameWithType: UdpAnySourceMulticastClient.MulticastLoopback
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpAnySourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpAnySourceMulticastClient.SendBufferSize
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UnblockSource
  nameWithType: UdpAnySourceMulticastClient.UnblockSource
