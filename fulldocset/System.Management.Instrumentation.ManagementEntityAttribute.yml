### YamlMime:ManagedReference
items:
- uid: System.Management.Instrumentation.ManagementEntityAttribute
  id: ManagementEntityAttribute
  children:
  - System.Management.Instrumentation.ManagementEntityAttribute.#ctor
  - System.Management.Instrumentation.ManagementEntityAttribute.External
  - System.Management.Instrumentation.ManagementEntityAttribute.Name
  - System.Management.Instrumentation.ManagementEntityAttribute.Singleton
  langs:
  - csharp
  name: ManagementEntityAttribute
  nameWithType: ManagementEntityAttribute
  fullName: System.Management.Instrumentation.ManagementEntityAttribute
  type: Class
  summary: "L&quot;attributo ManagementEntity indica che una classe fornisce informazioni di gestione esposte tramite un provider WMI.       Nota: le librerie .NET di WMI sono ormai considerate in stato finale e nessuna ulteriore sviluppo, miglioramenti o gli aggiornamenti saranno disponibili per problemi correlati, non correlato alla sicurezza che interessano queste librerie. Il [API MI](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) deve essere utilizzato per lo sviluppo di nuovo."
  remarks: "La classe contrassegnata da questo attributo deve essere pubblica."
  example:
  - "The following example shows how to use the ManagementEntity attribute to mark a class.  \n  \n```  \n// Use the ManagementEntity attribute on the class to specify that this // class contains management information that is available from  \n// provider.  \n  \n    [ManagementEntity(Name = \"MortgageCalc\")]  \n    public class MortgageCalcWMIProvider  \n    {  \n    }  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)]

      public sealed class ManagementEntityAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementEntityAttribute.#ctor
  id: '#ctor'
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  langs:
  - csharp
  name: ManagementEntityAttribute()
  nameWithType: ManagementEntityAttribute.ManagementEntityAttribute()
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.ManagementEntityAttribute()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Inizializza una nuova istanza della <xref:System.Management.ManagementEntityAttribute>classe.</xref:System.Management.ManagementEntityAttribute> Questo è il costruttore predefinito."
  remarks: "Questo costruttore non accetta un parametro di nome. Se non si specifica un nome utilizzando il [nome](~/add/includes/ajax-current-ext-md.md) parametro, il nome della classe WMI associata utilizzerà il nome della classe con attributo."
  syntax:
    content: public ManagementEntityAttribute ();
    parameters: []
  overload: System.Management.Instrumentation.ManagementEntityAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementEntityAttribute.External
  id: External
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  langs:
  - csharp
  name: External
  nameWithType: ManagementEntityAttribute.External
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.External
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Ottiene o imposta un valore che specifica se la classe rappresenta una classe WMI in un provider implementato esterno all&quot;assembly corrente."
  remarks: "Viene utilizzato quando si implementano i provider che implementano le classi che estendono le classi WMI esistenti astratte."
  syntax:
    content: public bool External { get; set; }
    return:
      type: System.Boolean
      description: "Valore booleano che restituisce true se la classe rappresenta una classe WMI esterna e false in caso contrario."
  overload: System.Management.Instrumentation.ManagementEntityAttribute.External*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Name
  id: Name
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ManagementEntityAttribute.Name
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.Name
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Ottiene o imposta il nome della classe WMI."
  remarks: "Se non si specifica il nome della classe WMI impostando questa proprietà, la classe WMI utilizzerà il nome della classe con attributo."
  example:
  - "In the following example, the Name parameter is used to set the name of the WMI class represented by the MortgageCalcWMIProvider class. It sets the name to MortgageCalculator. If the Name parameter is not used, the corresponding C# class name, MortgageCalcWMIProvider in this case, is used as the WMI class name.  \n  \n```  \n[ManagementEntity(Name = \"MortgageCalculator\")]  \npublic class MortgageCalcWMIProvider  \n{  \n}  \n```"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Stringa che contiene il nome della classe WMI."
  overload: System.Management.Instrumentation.ManagementEntityAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Singleton
  id: Singleton
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  langs:
  - csharp
  name: Singleton
  nameWithType: ManagementEntityAttribute.Singleton
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.Singleton
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Specifica se la classe associata rappresenta una classe WMI singleton."
  remarks: "Una classe WMI singleton è per i quali è sempre possibile una sola istanza. Anche se è possibile codificare la logica per garantire che solo una singola istanza di una classe WMI viene sempre creata, viene fornito l&quot;attributo di parametro per consentire l&quot;esecuzione di attività semplice e coerente.       Quando si utilizzano le classi WMI singleton, le applicazioni client devono utilizzare una sintassi speciale. Per ulteriori informazioni, vedere il Describing un argomento di percorso dell&quot;oggetto istanza in MSDN online library presso [http://www.msdn.com](http://www.msdn.com/)."
  example:
  - "The following code snippet demonstrates how to use the Singleton parameter to indicate that a C# class corresponds to a singleton WMI class.  \n  \n```  \n[ManagementEntity(Singleton=true)]  \npublic class SingletonSample  \n```  \n  \n For a complete, working example of a provider that implements a singleton class, see [How to: Create a Basic Decoupled Provider](http://msdn.microsoft.com/en-us/1dabd442-c1ff-40a1-bb0e-d7b3566c2300)."
  syntax:
    content: public bool Singleton { get; set; }
    return:
      type: System.Boolean
      description: "Valore booleano che restituisce true se la classe rappresenta una classe WMI singleton e false in caso contrario."
  overload: System.Management.Instrumentation.ManagementEntityAttribute.Singleton*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Management.Instrumentation.ManagementEntityAttribute.#ctor
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: ManagementEntityAttribute()
  nameWithType: ManagementEntityAttribute.ManagementEntityAttribute()
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.ManagementEntityAttribute()
- uid: System.Management.Instrumentation.ManagementEntityAttribute.External
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: External
  nameWithType: ManagementEntityAttribute.External
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.External
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Name
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: Name
  nameWithType: ManagementEntityAttribute.Name
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Singleton
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: Singleton
  nameWithType: ManagementEntityAttribute.Singleton
  fullName: System.Management.Instrumentation.ManagementEntityAttribute.Singleton
- uid: System.Management.Instrumentation.ManagementEntityAttribute.#ctor*
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: ManagementEntityAttribute
  nameWithType: ManagementEntityAttribute.ManagementEntityAttribute
- uid: System.Management.Instrumentation.ManagementEntityAttribute.External*
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: External
  nameWithType: ManagementEntityAttribute.External
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Name*
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: Name
  nameWithType: ManagementEntityAttribute.Name
- uid: System.Management.Instrumentation.ManagementEntityAttribute.Singleton*
  parent: System.Management.Instrumentation.ManagementEntityAttribute
  isExternal: false
  name: Singleton
  nameWithType: ManagementEntityAttribute.Singleton
