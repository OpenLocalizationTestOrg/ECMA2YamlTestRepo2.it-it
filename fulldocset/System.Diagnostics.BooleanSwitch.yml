### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.BooleanSwitch
  id: BooleanSwitch
  children:
  - System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  - System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.BooleanSwitch.Enabled
  - System.Diagnostics.BooleanSwitch.OnValueChanged
  langs:
  - csharp
  name: BooleanSwitch
  nameWithType: BooleanSwitch
  fullName: System.Diagnostics.BooleanSwitch
  type: Class
  summary: "Fornisce una semplice opzione che controlla il debug e l&quot;output di traccia on/off."
  remarks: "È possibile utilizzare un&quot;opzione di traccia Boolean per attivare o disattivare i messaggi in base alla loro importanza. Utilizzare il <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>proprietà da ottenere il valore corrente dell&quot;opzione.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>       È possibile abilitare o disabilitare un BooleanSwitch tramite file di configurazione dell&quot;applicazione e quindi utilizzare il valore BooleanSwitch configurato nell&quot;applicazione. In alternativa, è possibile creare un BooleanSwitch nel codice e impostare il <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>proprietà direttamente per instrumentare una sezione di codice specifica.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>       Per configurare un BooleanSwitch, modificare il file di configurazione che corrisponde al nome dell&quot;applicazione. In questo file, è possibile aggiungere o rimuovere un commutatore, impostare il valore o deselezionare tutte le opzioni impostate in precedenza dall&quot;applicazione. Il file di configurazione deve essere formattato come nell&quot;esempio seguente.      ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;1&quot;/>       </switches>     </system.diagnostics>   </configuration>   ```Questa sezione di configurazione di esempio definisce un oggetto BooleanSwitch con la <xref:System.Diagnostics.Switch.DisplayName%2A>proprietà impostata su `mySwitch` e <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>valore impostato su `true`.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> All&quot;interno dell&quot;applicazione, è possibile utilizzare il valore dell&quot;opzione configurato creando un BooleanSwitch con lo stesso nome, come illustrato nell&quot;esempio di codice seguente.       [!code-cpp[Classico BooleanSwitch.BooleanSwitch esempio n.&2;](~/add/codesnippet/cpp/t-system.diagnostics.boo_1.cpp)][!code-vb[classico BooleanSwitch.BooleanSwitch esempio n.&2;](~/add/codesnippet/visualbasic/t-system.diagnostics.boo_1.vb)][!code-cs[classico BooleanSwitch.BooleanSwitch esempio n.&2;](~/add/codesnippet/csharp/t-system.diagnostics.boo_1.cs) ] per impostazione predefinita, il <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>viene impostata utilizzando il valore specificato nel file di configurazione.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>     Configurare l&quot;opzione con un valore compreso tra 0 e impostare il <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>proprietà `false`; configurarla con un valore diverso da zero per impostare il <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>proprietà `true`.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A> </xref:System.Diagnostics.BooleanSwitch.Enabled%2A> Se il costruttore di BooleanSwitch non è possibile trovare le impostazioni del commutatore iniziale nel file di configurazione, il <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>della nuova opzione è impostata su `false` per impostazione predefinita.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>       È necessario abilitare l&quot;analisi o di debug per utilizzare un commutatore. La sintassi seguente è specifica del compilatore. Se si utilizzano compilatori diversi da c# o Visual Basic, vedere la documentazione del compilatore.      -Per abilitare il debug in c#, aggiungere il `/d:DEBUG` flag alla riga di comando del compilatore quando si compila il codice, oppure è possibile aggiungere `#define DEBUG` all&quot;inizio del file. In Visual Basic, aggiungere il `/d:DEBUG=True` flag alla riga di comando del compilatore.      -Per abilitare la traccia in c#, aggiungere il `/d:TRACE` flag alla riga di comando del compilatore quando si compila il codice o aggiungere `#define TRACE` all&quot;inizio del file. In Visual Basic, aggiungere il `/d:TRACE=True` flag alla riga di comando del compilatore.      > [!NOTE] > Questi eseguire il debug e traccia del compilatore opzioni non è necessarie quando si utilizza la classe BooleanSwitch in isolamento. Sono necessarie solo in combinazione con <xref:System.Diagnostics.Trace>o <xref:System.Diagnostics.Debug>metodi che vengono compilati in modo condizionale.</xref:System.Diagnostics.Debug> </xref:System.Diagnostics.Trace>       Per ulteriori informazioni sulla strumentazione dell&quot;applicazione, vedere <xref:System.Diagnostics.Debug>e <xref:System.Diagnostics.Trace>.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> Per ulteriori informazioni sulla configurazione e utilizzo delle opzioni di traccia, vedere [opzioni di traccia](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Per migliorare le prestazioni, è possibile apportare BooleanSwitch membri `static` nella classe."
  example:
  - "The following example creates a BooleanSwitch and uses the switch to determine whether to print an error message. You create the switch at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and where the error occurred.  \n  \n [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.boo_2.vb)]\n [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/cpp/t-system.diagnostics.boo_2.cpp)]\n [!code-cs[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/csharp/t-system.diagnostics.boo_2.cs)]"
  syntax:
    content: >-
      [System.Diagnostics.SwitchLevel(typeof(System.Boolean))]

      public class BooleanSwitch : System.Diagnostics.Switch
  inheritance:
  - System.Object
  - System.Diagnostics.Switch
  implements: []
  inheritedMembers:
  - System.Diagnostics.Switch.Attributes
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.GetSupportedAttributes
  - System.Diagnostics.Switch.OnSwitchSettingChanged
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: BooleanSwitch(String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Diagnostics.BooleanSwitch&quot;> </xref> classe con il nome visualizzato specificato e la descrizione."
  remarks: "Quando si crea un <xref:System.Diagnostics.BooleanSwitch>, `displayName` parametro viene utilizzato per trovare le impostazioni del commutatore iniziale.</xref:System.Diagnostics.BooleanSwitch> Se il costruttore non è possibile trovare le impostazioni iniziali, il <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>è impostata su `false` (disabilitato).</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>       Per impostare il livello del <xref:System.Diagnostics.BooleanSwitch>, modificare il file di configurazione corrispondente al nome dell&quot;applicazione.</xref:System.Diagnostics.BooleanSwitch> All&quot;interno di questo file, è possibile aggiungere un commutatore e impostarne il valore, rimuovere un&quot;opzione o deselezionare tutte le opzioni impostate in precedenza dall&quot;applicazione. Il file di configurazione deve essere formattato come nell&quot;esempio seguente: ```   <configuration>       <system.diagnostics>          <switches>             <add name=&quot;mySwitch&quot; value=&quot;10&quot; />             <add name=&quot;myNewSwitch&quot; value=&quot;20&quot; />             <remove name=&quot;mySwitch&quot; />             <clear/>          </switches>       </system.diagnostics>    </configuration>   ```       >  [!NOTE] > le opzioni create devono essere `static`."
  example:
  - "The following example creates a <xref:System.Diagnostics.BooleanSwitch> and uses the switch to determine whether to print an error message. The switch is created at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and where the error occurred.  \n  \n [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.boo_1.vb)]\n [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/cpp/m-system.diagnostics.boo_1.cpp)]\n [!code-cs[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/csharp/m-system.diagnostics.boo_1.cs)]"
  syntax:
    content: public BooleanSwitch (string displayName, string description);
    parameters:
    - id: displayName
      type: System.String
      description: "Il nome da visualizzare in un&quot;interfaccia utente."
    - id: description
      type: System.String
      description: "Descrizione dell&quot;opzione."
  overload: System.Diagnostics.BooleanSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: BooleanSwitch(String,String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Diagnostics.BooleanSwitch&quot;> </xref> classe con il nome visualizzato specificato, la descrizione e il valore di parametro predefinito."
  remarks: "Il `displayName` parametro viene utilizzato per impostare il valore della <xref:System.Diagnostics.Switch.DisplayName%2A>proprietà e `description` parametro viene utilizzato per impostare il valore della <xref:System.Diagnostics.Switch.Description%2A>proprietà.</xref:System.Diagnostics.Switch.Description%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> Il `defaultSwitchValue` parametro viene salvato come un campo e utilizzato per inizializzare il <xref:System.Diagnostics.Switch.Value%2A>proprietà al primo riferimento.</xref:System.Diagnostics.Switch.Value%2A> Per ulteriori informazioni sull&quot;utilizzo di costruttore, vedere il <xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29>costruttore.</xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29>"
  syntax:
    content: public BooleanSwitch (string displayName, string description, string defaultSwitchValue);
    parameters:
    - id: displayName
      type: System.String
      description: "Il nome da visualizzare nell&quot;interfaccia utente."
    - id: description
      type: System.String
      description: "Descrizione dell&quot;opzione."
    - id: defaultSwitchValue
      type: System.String
      description: "Il valore predefinito dell&quot;opzione."
  overload: System.Diagnostics.BooleanSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.Enabled
  id: Enabled
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: Enabled
  nameWithType: BooleanSwitch.Enabled
  fullName: System.Diagnostics.BooleanSwitch.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ottiene o imposta un valore che indica se l&quot;opzione è abilitata o disabilitata."
  remarks: "Per impostazione predefinita, questo campo è impostato su `false` (disabilitato). Per abilitare l&quot;opzione, assegnare il valore di questo campo `true`. Per disabilitare l&quot;opzione, assegnare il valore a `false`.  Il valore di questa proprietà è determinato dal valore della proprietà della classe base <xref:System.Diagnostics.Switch.SwitchSetting%2A>.</xref:System.Diagnostics.Switch.SwitchSetting%2A>      > [!NOTE] > Questo metodo Usa il <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName>flag per evitare di essere chiamato da codice non attendibile, è necessario solo il chiamante immediato abbia <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName>autorizzazione.</xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName> </xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> Se il codice può essere chiamato da codice parzialmente attendibile, non passare input utente in <xref:System.Runtime.InteropServices.Marshal>metodi senza convalida della classe.</xref:System.Runtime.InteropServices.Marshal>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.BooleanSwitch> and uses the switch to determine whether to print an error message. The switch is created at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and the location where the error occurred.  \n  \n [!code-cpp[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/cpp/p-system.diagnostics.boo_1.cpp)]\n [!code-cs[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/csharp/p-system.diagnostics.boo_1.cs)]\n [!code-vb[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.boo_1.vb)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;opzione è abilitata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.BooleanSwitch.Enabled*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante non dispone dell&quot;autorizzazione corretta."
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: OnValueChanged()
  nameWithType: BooleanSwitch.OnValueChanged()
  fullName: System.Diagnostics.BooleanSwitch.OnValueChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Determina se il nuovo valore della <xref:System.Diagnostics.Switch.Value*>proprietà può essere analizzata come un valore booleano.</xref:System.Diagnostics.Switch.Value*>"
  remarks: "Il metodo OnValueChanged determina se il nuovo valore è una rappresentazione di stringa valida di un valore booleano (&quot;false&quot; o &quot;true&quot;). Se in tal caso, il metodo imposta la <xref:System.Diagnostics.Switch.SwitchSetting%2A>proprietà su 0 o 1.</xref:System.Diagnostics.Switch.SwitchSetting%2A>  In caso contrario, viene chiamato il metodo di base, che converte il valore di stringa a valore integer, che viene quindi usato per impostare il <xref:System.Diagnostics.Switch.SwitchSetting%2A>proprietà.</xref:System.Diagnostics.Switch.SwitchSetting%2A>"
  syntax:
    content: protected override void OnValueChanged ();
    parameters: []
  overload: System.Diagnostics.BooleanSwitch.OnValueChanged*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.Switch
  isExternal: false
  name: System.Diagnostics.Switch
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: BooleanSwitch(String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: BooleanSwitch(String,String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String,String)
- uid: System.Diagnostics.BooleanSwitch.Enabled
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: Enabled
  nameWithType: BooleanSwitch.Enabled
  fullName: System.Diagnostics.BooleanSwitch.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: OnValueChanged()
  nameWithType: BooleanSwitch.OnValueChanged()
  fullName: System.Diagnostics.BooleanSwitch.OnValueChanged()
- uid: System.Diagnostics.BooleanSwitch.#ctor*
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: BooleanSwitch
  nameWithType: BooleanSwitch.BooleanSwitch
- uid: System.Diagnostics.BooleanSwitch.Enabled*
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: Enabled
  nameWithType: BooleanSwitch.Enabled
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged*
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: OnValueChanged
  nameWithType: BooleanSwitch.OnValueChanged
