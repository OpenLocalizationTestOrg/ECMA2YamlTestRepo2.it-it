### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.MessageHeaderAttribute
  id: MessageHeaderAttribute
  children:
  - System.ServiceModel.MessageHeaderAttribute.#ctor
  - System.ServiceModel.MessageHeaderAttribute.Actor
  - System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  - System.ServiceModel.MessageHeaderAttribute.Relay
  langs:
  - csharp
  name: MessageHeaderAttribute
  nameWithType: MessageHeaderAttribute
  fullName: System.ServiceModel.MessageHeaderAttribute
  type: Class
  summary: "Specifica che un membro dati è un&quot;intestazione del messaggio SOAP."
  remarks: "L&quot;attributo MessageHeaderAttribute consente di eseguire il mapping di campi e proprietà di un tipo contrassegnato con il <xref:System.ServiceModel.MessageContractAttribute>attributo intestazioni del messaggio SOAP.</xref:System.ServiceModel.MessageContractAttribute> Il campo o la proprietà può essere un tipo semplice o un tipo composito che può essere serializzato.       Per informazioni su come controllare la serializzazione del contenuto di un corpo SOAP senza modificare la SOAP envelope predefinita, vedere <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName>, [specifica di trasferimento dei dati nei contratti di servizio](~/add/includes/ajax-current-ext-md.md), e [utilizzando i contratti dati](~/add/includes/ajax-current-ext-md.md).</xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName>       Per ulteriori informazioni sulla creazione di contratti di messaggio, vedere [con contratti di messaggio](~/add/includes/ajax-current-ext-md.md).       Lo standard SOAP definisce gli attributi seguenti che possono esistere su un&quot;intestazione di:- `Actor` o `Role` (`Actor` in SOAP 1.1, `Role` in SOAP 1.2)- `MustUnderstand`       -    `Relay` il `Actor` o `Role` attributo specifica l&quot;URI del nodo a cui è destinata una determinata intestazione. Il `MustUnderstand` attributo specifica se l&quot;intestazione riconosce l&quot;elaborazione del nodo. Il `Relay` attributo specifica se l&quot;intestazione deve essere inoltrata ai nodi downstream. [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]non esegue alcuna elaborazione di questi attributi nei messaggi in arrivo, tranne che per il `MustUnderstand` attributo.       È possibile, tuttavia, leggere e scrivere tali attributi, anche se non vengono inviati per impostazione predefinita. È possibile impostare i valori di attributo in due modi. In primo luogo, è possibile modificare il <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>, <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A>e <xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A>le proprietà in MessageHeaderAttribute.</xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A> </xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> </xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A> (È presente alcun `Role` impostata: il <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>proprietà e `Role` viene passato, se si utilizza SOAP 1.2).</xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A> Ad esempio: [!code-cs [XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] il secondo modo per controllare questi attributi, è possibile digitare il parametro di tipo di intestazione desiderato di <xref:System.ServiceModel.MessageHeader%601>classe e utilizzare il tipo ottenuto insieme MessageHeaderAttribute.</xref:System.ServiceModel.MessageHeader%601> Utilizzare quindi la <xref:System.ServiceModel.MessageHeader%601>proprietà a livello di codice per impostare gli attributi SOAP.</xref:System.ServiceModel.MessageHeader%601> Ad esempio: [!code-cs [XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)][!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] se vengono utilizzati sia i meccanismi di controllo statico che dinamico, le impostazioni statiche rappresentano le impostazioni predefinite, ma può essere sottoposto a override utilizzando il meccanismo dinamico.        Ad esempio: [!code-cs [XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)][!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] è consentito creare intestazioni ripetute con controllo dinamico degli attributi.        Ad esempio: ```   [MessageHeaderArray] public MessageHeader<Person> documentApprovers[];   ``` sul lato ricevente, la lettura di questi attributi SOAP può essere eseguita solo se il tipo generico <xref:System.ServiceModel.MessageHeader%601>classe viene utilizzata.</xref:System.ServiceModel.MessageHeader%601> Esaminare il <xref:System.ServiceModel.MessageHeader%601.Actor%2A>, <xref:System.ServiceModel.MessageHeader%601.Relay%2A>o <xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A>le proprietà di un&quot;intestazione del <xref:System.ServiceModel.MessageHeader%601>tipo per individuare le impostazioni degli attributi del messaggio ricevuto.</xref:System.ServiceModel.MessageHeader%601> </xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A> </xref:System.ServiceModel.MessageHeader%601.Relay%2A> </xref:System.ServiceModel.MessageHeader%601.Actor%2A>       Quando un messaggio viene ricevuto e inviato nuovamente, roundtrip solo impostazioni attributo SOAP per le intestazioni del <xref:System.ServiceModel.MessageHeader%601>tipo.</xref:System.ServiceModel.MessageHeader%601>"
  example:
  - "The following code example shows the use of the MessageHeaderAttribute to create a SOAP header for the response message with the <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> and <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> properties set to values appropriate for this header. The code example is followed by an example of the message when sent.  \n  \n [!code-vb[MessageHeaderAttribute#4](~/add/codesnippet/visualbasic/messageheaderattribute.client/services.vb#4)]\n [!code-cs[MessageHeaderAttribute#4](~/add/codesnippet/csharp/messageheaderattribute.client/services.cs#4)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false, Inherited=false)]

      public class MessageHeaderAttribute : System.ServiceModel.MessageContractMemberAttribute
  inheritance:
  - System.ServiceModel.MessageContractMemberAttribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.#ctor
  id: '#ctor'
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: MessageHeaderAttribute()
  nameWithType: MessageHeaderAttribute.MessageHeaderAttribute()
  fullName: System.ServiceModel.MessageHeaderAttribute.MessageHeaderAttribute()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.MessageHeaderAttribute&quot;> </xref> classe."
  syntax:
    content: public MessageHeaderAttribute ();
    parameters: []
  overload: System.ServiceModel.MessageHeaderAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.Actor
  id: Actor
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: Actor
  nameWithType: MessageHeaderAttribute.Actor
  fullName: System.ServiceModel.MessageHeaderAttribute.Actor
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ottiene o imposta un URI che indica il nodo in cui è indirizzata questa intestazione. Esegue il mapping per l&quot;attributo di intestazione role quando si utilizza SOAP 1.2 e all&quot;attributo di intestazione actor quando si utilizza SOAP 1.1."
  remarks: "Per ulteriori informazioni, vedere la sezione Note della <xref:System.ServiceModel.MessageHeaderAttribute>per informazioni dettagliate.</xref:System.ServiceModel.MessageHeaderAttribute>"
  syntax:
    content: public string Actor { get; set; }
    return:
      type: System.String
      description: "URI che indica il nodo in cui è indirizzata questa intestazione. Questo URI viene eseguito il mapping all&quot;attributo di intestazione role quando si utilizza SOAP 1.2 e all&quot;attributo di intestazione actor quando si utilizza SOAP 1.1."
  overload: System.ServiceModel.MessageHeaderAttribute.Actor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  id: MustUnderstand
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: MustUnderstand
  nameWithType: MessageHeaderAttribute.MustUnderstand
  fullName: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Specifica se il nodo che svolge il <xref:System.ServiceModel.MessageHeaderAttribute.Actor*>ruolo comprenda questa intestazione.</xref:System.ServiceModel.MessageHeaderAttribute.Actor*> Per questa proprietà è associata la <xref uid=&quot;langword_csharp_mustUnderstand&quot; name=&quot;mustUnderstand&quot; href=&quot;&quot;> </xref> attributo di intestazione SOAP."
  remarks: "Per ulteriori informazioni, vedere la sezione Note della <xref:System.ServiceModel.MessageHeaderAttribute>per informazioni dettagliate.</xref:System.ServiceModel.MessageHeaderAttribute>      > [!IMPORTANT] > È importante tenere presente che se la proprietà MustUnderstand è `true` in un messaggio viene inviato e l&quot;applicazione sul lato ricevente non riconosce l&quot;intestazione viene generato un errore. Al contrario, se un&quot;intestazione con il `mustUnderstand` attributo di intestazione SOAP è impostato su `true` viene ricevuto da [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)], è necessario che faccia parte del contratto di messaggio (o essere elaborata da uno del [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] canali); in caso contrario, si presuppone che l&quot;intestazione non è riconosciuta e viene generata un&quot;eccezione."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.MessageHeaderAttribute> to create a SOAP header for the response message with the <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> and MustUnderstand properties set to values appropriate for this header. The code example is followed by an example of the message when sent.  \n  \n [!code-vb[MessageHeaderAttribute#4](~/add/codesnippet/visualbasic/messageheaderattribute.client/services.vb#4)]\n [!code-cs[MessageHeaderAttribute#4](~/add/codesnippet/csharp/messageheaderattribute.client/services.cs#4)]"
  syntax:
    content: public bool MustUnderstand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il nodo che svolge il <xref:System.ServiceModel.MessageHeaderAttribute.Actor*>ruolo comprenda questa intestazione; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.MessageHeaderAttribute.Actor*>"
  overload: System.ServiceModel.MessageHeaderAttribute.MustUnderstand*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.Relay
  id: Relay
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: Relay
  nameWithType: MessageHeaderAttribute.Relay
  fullName: System.ServiceModel.MessageHeaderAttribute.Relay
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Specifica se questa intestazione deve essere inoltrata ai nodi downstream. Per questa proprietà è associata la <xref uid=&quot;langword_csharp_relay&quot; name=&quot;relay&quot; href=&quot;&quot;> </xref> attributo di intestazione SOAP."
  remarks: "Questa proprietà viene ignorata quando si utilizza SOAP 1.1. Per ulteriori informazioni, vedere la sezione Note della <xref:System.ServiceModel.MessageHeaderAttribute>per informazioni dettagliate.</xref:System.ServiceModel.MessageHeaderAttribute>"
  syntax:
    content: public bool Relay { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questa intestazione deve essere inoltrata ai nodi downstream. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.MessageHeaderAttribute.Relay*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.MessageContractMemberAttribute
  isExternal: false
  name: System.ServiceModel.MessageContractMemberAttribute
- uid: System.ServiceModel.MessageHeaderAttribute.#ctor
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MessageHeaderAttribute()
  nameWithType: MessageHeaderAttribute.MessageHeaderAttribute()
  fullName: System.ServiceModel.MessageHeaderAttribute.MessageHeaderAttribute()
- uid: System.ServiceModel.MessageHeaderAttribute.Actor
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Actor
  nameWithType: MessageHeaderAttribute.Actor
  fullName: System.ServiceModel.MessageHeaderAttribute.Actor
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MustUnderstand
  nameWithType: MessageHeaderAttribute.MustUnderstand
  fullName: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.MessageHeaderAttribute.Relay
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Relay
  nameWithType: MessageHeaderAttribute.Relay
  fullName: System.ServiceModel.MessageHeaderAttribute.Relay
- uid: System.ServiceModel.MessageHeaderAttribute.#ctor*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MessageHeaderAttribute
  nameWithType: MessageHeaderAttribute.MessageHeaderAttribute
- uid: System.ServiceModel.MessageHeaderAttribute.Actor*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Actor
  nameWithType: MessageHeaderAttribute.Actor
- uid: System.ServiceModel.MessageHeaderAttribute.MustUnderstand*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MustUnderstand
  nameWithType: MessageHeaderAttribute.MustUnderstand
- uid: System.ServiceModel.MessageHeaderAttribute.Relay*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Relay
  nameWithType: MessageHeaderAttribute.Relay
