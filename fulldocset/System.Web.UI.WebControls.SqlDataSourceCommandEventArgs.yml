### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  id: SqlDataSourceCommandEventArgs
  children:
  - System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)
  - System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
  langs:
  - csharp
  name: SqlDataSourceCommandEventArgs
  nameWithType: SqlDataSourceCommandEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  type: Class
  summary: "Fornisce dati per il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource.Updating&quot;> </xref>, <xref href=&quot;System.Web.UI.WebControls.SqlDataSource.Deleting&quot;> </xref> e <xref href=&quot;System.Web.UI.WebControls.SqlDataSource.Inserting&quot;> </xref> gli eventi del <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo."
  remarks: "Tramite l&quot;aggiunta di un delegato del gestore eventi per gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, o <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>eventi, è possibile eseguire qualsiasi pre-elaborazione aggiuntiva necessaria o annullare il comando di database completamente.</xref:System.Web.UI.WebControls.SqlDataSource.Deleting> </xref:System.Web.UI.WebControls.SqlDataSource.Inserting> </xref:System.Web.UI.WebControls.SqlDataSource.Updating>       Perché la classe SqlDataSourceCommandEventArgs è derivata dal <xref:System.ComponentModel.CancelEventArgs>(classe), è possibile annullare un&quot;in sospeso <xref:System.Web.UI.WebControls.SqlDataSource>comando di database impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>proprietà `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.ComponentModel.CancelEventArgs> È possibile esaminare e manipolare il <xref:System.Data.Common.DbCommand.CommandText%2A>, <xref:System.Data.Common.DbCommand.Parameters%2A>raccolta e le altre proprietà prima di eseguire il comando tramite l&quot;accesso di <xref:System.Data.Common.DbCommand>oggetto esposto dal <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Parameters%2A> </xref:System.Data.Common.DbCommand.CommandText%2A>       La classe SqlDataSourceCommandEventArgs viene utilizzata nel <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>, e <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>metodi per fornire accesso a un <xref:System.Web.UI.WebControls.SqlDataSource>comando di database prima di eseguirlo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo espone numerosi eventi che è possibile gestire per lavorare con gli oggetti dati sottostanti nel corso di un&quot;operazione di dati.</xref:System.Web.UI.WebControls.SqlDataSource> Nella tabella seguente sono elencati gli eventi e associati <xref:System.EventArgs>e le classi del gestore eventi, come indicazione per i vari eventi che corrispondono al ciclo di vita di un&quot;operazione di dati con il <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.EventArgs>      | Evento | EventArgs | EventHandler |   |-----------|---------------|------------------|   | <xref:System.Web.UI.WebControls.SqlDataSource.Selecting>si verifica prima che i dati vengono recuperati. | <xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>| <xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|   | <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>si verificano prima un&quot;istruzione insert, update o un&quot;operazione di eliminazione viene eseguita. | SqlDataSourceCommandEventArgs | <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|   | <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted>si verificano dopo il recupero dei dati, inserimento, aggiornamento o eliminazione viene completata. | <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>| <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs></xref:System.Web.UI.WebControls.SqlDataSource.Deleted></xref:System.Web.UI.WebControls.SqlDataSource.Updated></xref:System.Web.UI.WebControls.SqlDataSource.Inserted></xref:System.Web.UI.WebControls.SqlDataSource.Selected></xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler></xref:System.Web.UI.WebControls.SqlDataSource.Deleting></xref:System.Web.UI.WebControls.SqlDataSource.Updating></xref:System.Web.UI.WebControls.SqlDataSource.Inserting></xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs></xref:System.Web.UI.WebControls.SqlDataSource.Selecting>"
  example:
  - "The following code example demonstrates how to display data retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control, and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_15_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_15_1.aspx)]"
  syntax:
    content: 'public class SqlDataSourceCommandEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)
  id: '#ctor(System.Data.Common.DbCommand)'
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  langs:
  - csharp
  name: SqlDataSourceCommandEventArgs(DbCommand)
  nameWithType: SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref> classe, utilizzando l&quot;oggetto comando di database specificato."
  syntax:
    content: public SqlDataSourceCommandEventArgs (System.Data.Common.DbCommand command);
    parameters:
    - id: command
      type: System.Data.Common.DbCommand
      description: "Un <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> oggetto che rappresenta l&quot;annullabile <> </> *>, <> </> *>, o <xref:System.Web.UI.WebControls.SqlDataSource.Delete*>comando.</xref:System.Web.UI.WebControls.SqlDataSource.Delete*>"
  overload: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
  id: Command
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  langs:
  - csharp
  name: Command
  nameWithType: SqlDataSourceCommandEventArgs.Command
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene il comando di database in sospeso."
  remarks: "È possibile gestire il <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, o <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>evento per esaminare e modificare le proprietà del <xref:System.Data.Common.DbCommand>prima che venga eseguita dal <xref:System.Web.UI.WebControls.SqlDataSource>controllo.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSource.Deleting> </xref:System.Web.UI.WebControls.SqlDataSource.Inserting> </xref:System.Web.UI.WebControls.SqlDataSource.Updating> La connessione all&quot;origine dati sottostante non è ancora aperta quando viene chiamato il delegato del gestore eventi. Pertanto, è possibile annullare l&quot;operazione di database chiamando il <xref:System.Data.Common.DbCommand.Cancel%2A>metodo il <xref:System.Data.Common.DbCommand>direttamente l&quot;oggetto.</xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> Tuttavia, è possibile annullare l&quot;operazione di database impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>a `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>"
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control, and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The data is initially displayed in the <xref:System.Web.UI.WebControls.GridView> control, and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView>. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has a <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> that ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically-generated insert button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records, and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField>, and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1040_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1040_1.aspx)]"
  syntax:
    content: public System.Data.Common.DbCommand Command { get; }
    return:
      type: System.Data.Common.DbCommand
      description: "Un <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> oggetto che rappresenta il comando di database in sospeso."
  overload: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  isExternal: false
  name: SqlDataSourceCommandEventArgs(DbCommand)
  nameWithType: SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  isExternal: false
  name: Command
  nameWithType: SqlDataSourceCommandEventArgs.Command
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor*
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  isExternal: false
  name: SqlDataSourceCommandEventArgs
  nameWithType: SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command*
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  isExternal: false
  name: Command
  nameWithType: SqlDataSourceCommandEventArgs.Command
