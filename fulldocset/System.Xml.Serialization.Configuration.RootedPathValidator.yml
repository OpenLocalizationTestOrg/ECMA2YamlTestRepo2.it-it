### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.Configuration.RootedPathValidator
  id: RootedPathValidator
  children:
  - System.Xml.Serialization.Configuration.RootedPathValidator.#ctor
  - System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)
  - System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)
  langs:
  - csharp
  name: RootedPathValidator
  nameWithType: RootedPathValidator
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator
  type: Class
  summary: "Le regole che governano l&quot;uso di convalida di `tempFilesLocation` opzione di configurazione."
  remarks: "Quando si aggiunge un `WebReference` oggetto a un servizio Web nel [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)], i file vengono creati dal processo di individuazione del servizio Web.       I client del servizio Web di informazioni su dove trovare il documento di descrizione (WSDL) del servizio Web tramite l&quot;aggiunta di un `WebReference` oggetto. Il client del servizio Web quindi salvare i documenti individuati sul disco utilizzando il `WriteAll` metodo. Ad esempio, i documenti individuati sia i file di schema XSD o descrizioni del servizio. Al termine del processo, il client elimina i file. È possibile modificare il percorso predefinito dei file nella cartella temporanea utilizzando il `tempFilesLocation` di attivazione di `<xmlSerializer>` elemento, specificato nel file di configurazione Machine. config, come nell&quot;esempio seguente.      ```   <configuration>     <system.web>     <system.xml.serialization>       <xmlSerializer tempFilesLocation=&quot;..&quot;/>     </system.xml.serialization>   </configuration>   ```Il valore di `tempFilesLocation` deve essere un percorso assoluto. Se il percorso specificato non è assoluto, il [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] genera un <xref:System.Configuration.ConfigurationErrorsException>eccezione quando viene fatto riferimento alla sezione di configurazione.</xref:System.Configuration.ConfigurationErrorsException>       Il valore della proprietà viene troncato per rimuovere spazi vuoti iniziali e finali.       Se valore il `tempFilesLocation` proprietà è costituita da spazi vuoti, viene utilizzato il percorso predefinito % TMP % per la compilazione. Si verifica lo stesso comportamento predefinito se non si `tempFilesLocation` viene specificata l&quot;opzione.       Il <xref:System.Xml.Serialization.XmlSerializer>consente di verificare l&quot;esistenza del percorso.</xref:System.Xml.Serialization.XmlSerializer> In caso contrario, un <xref:System.IO.DirectoryNotFoundException>viene generato.</xref:System.IO.DirectoryNotFoundException> Questo comportamento è identico al comportamento predefinito del `XmlSerializer` se il percorso % TMP % non esiste."
  syntax:
    content: 'public class RootedPathValidator : System.Configuration.ConfigurationValidatorBase'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationValidatorBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  langs:
  - csharp
  name: RootedPathValidator()
  nameWithType: RootedPathValidator.RootedPathValidator()
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.RootedPathValidator()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization.Configuration
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Xml.Serialization.Configuration.RootedPathValidator&quot;> </xref> classe."
  syntax:
    content: public RootedPathValidator ();
    parameters: []
  overload: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)
  id: CanValidate(System.Type)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  langs:
  - csharp
  name: CanValidate(Type)
  nameWithType: RootedPathValidator.CanValidate(Type)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization.Configuration
  summary: "Determina se il tipo dell&quot;oggetto può essere convalidato."
  syntax:
    content: public override bool CanValidate (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo dell&quot;oggetto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <code> type </code> parametro corrisponde a un oggetto valido <xref uid=&quot;langword_csharp_XMLSerializer&quot; name=&quot;XMLSerializer&quot; href=&quot;&quot;> </xref> oggetto; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  langs:
  - csharp
  name: Validate(Object)
  nameWithType: RootedPathValidator.Validate(Object)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization.Configuration
  summary: "Determina se il valore di un oggetto è valido."
  remarks: "Il `XmlSerializer` oggetto da convalidare viene passato come parametro del `Validate` metodo."
  syntax:
    content: public override void Validate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il valore di un oggetto."
  overload: System.Xml.Serialization.Configuration.RootedPathValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationValidatorBase
  isExternal: false
  name: System.Configuration.ConfigurationValidatorBase
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: RootedPathValidator()
  nameWithType: RootedPathValidator.RootedPathValidator()
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.RootedPathValidator()
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: CanValidate(Type)
  nameWithType: RootedPathValidator.CanValidate(Type)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: Validate(Object)
  nameWithType: RootedPathValidator.Validate(Object)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor*
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: RootedPathValidator
  nameWithType: RootedPathValidator.RootedPathValidator
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate*
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: CanValidate
  nameWithType: RootedPathValidator.CanValidate
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.Validate*
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: Validate
  nameWithType: RootedPathValidator.Validate
