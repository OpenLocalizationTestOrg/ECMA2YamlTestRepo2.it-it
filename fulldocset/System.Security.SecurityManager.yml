### YamlMime:ManagedReference
items:
- uid: System.Security.SecurityManager
  id: SecurityManager
  children:
  - System.Security.SecurityManager.CheckExecutionRights
  - System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture
  - System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)
  - System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)
  - System.Security.SecurityManager.IsGranted(System.Security.IPermission)
  - System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)
  - System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)
  - System.Security.SecurityManager.PolicyHierarchy
  - System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  - System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])
  - System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)
  - System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)
  - System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)
  - System.Security.SecurityManager.SavePolicy
  - System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)
  - System.Security.SecurityManager.SecurityEnabled
  langs:
  - csharp
  name: SecurityManager
  nameWithType: SecurityManager
  fullName: System.Security.SecurityManager
  type: Class
  summary: "Fornisce il punto di accesso principale per le classi che interagiscono con il sistema di sicurezza. Questa classe non può essere ereditata."
  remarks: "Sicurezza fornisce metodi per accedere e modificare la configurazione dei criteri di sicurezza. È possibile creare istanze di SecurityManager."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class SecurityManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.SecurityManager.CheckExecutionRights
  id: CheckExecutionRights
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: CheckExecutionRights
  nameWithType: SecurityManager.CheckExecutionRights
  fullName: System.Security.SecurityManager.CheckExecutionRights
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Ottiene o imposta un valore che indica se il codice deve avere <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> per l&quot;esecuzione."
  remarks: "Se questa proprietà è `false`, anche il codice senza <xref:System.Security.Permissions.SecurityPermissionFlag>possono eseguire.</xref:System.Security.Permissions.SecurityPermissionFlag> La verifica dell&quot;esecuzione è dispendioso e può annullare i vantaggi della risoluzione dei criteri lazy. Questa proprietà viene fornita per disabilitare l&quot;esecuzione di controllo quando necessario.       Una modifica a questa proprietà non viene mantenuta fino a quando <xref:System.Security.SecurityManager.SavePolicy%2A>viene chiamato.</xref:System.Security.SecurityManager.SavePolicy%2A> Nuovi processi non essere interessati dalla modifica fino a quando non è persistente nel Registro di sistema."
  syntax:
    content: public static bool CheckExecutionRights { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il codice deve contenere <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> per l&quot;esecuzione; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.SecurityManager.CheckExecutionRights*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Non è necessario il codice che chiama questo metodo <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture
  id: CurrentThreadRequiresSecurityContextCapture
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: CurrentThreadRequiresSecurityContextCapture()
  nameWithType: SecurityManager.CurrentThreadRequiresSecurityContextCapture()
  fullName: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Determina se il thread corrente richiede un&quot;acquisizione del contesto di sicurezza, se lo stato di sicurezza deve essere ricreata in un secondo momento nel tempo."
  remarks: "È possibile utilizzare il metodo CurrentThreadRequiresSecurityContextCapture prima memorizzare nella cache i dati sensibili ottenuti dopo i requisiti di sicurezza riusciti.       Se il <xref:System.Security.CodeAccessPermission.Assert%2A>metodo è stato chiamato superiore nello stack, i dati necessario non memorizzare nella cache senza acquisire il contesto di sicurezza corrispondente.</xref:System.Security.CodeAccessPermission.Assert%2A> In caso contrario, i dati sensibili ottenuti tramite un <xref:System.Security.CodeAccessPermission.Assert%2A>possono diventare disponibili per il codice non è più in esecuzione con tale <xref:System.Security.CodeAccessPermission.Assert%2A>sul posto.</xref:System.Security.CodeAccessPermission.Assert%2A> </xref:System.Security.CodeAccessPermission.Assert%2A>      > [!IMPORTANT] > Il valore restituito è affidabile solo quando è `false`, il che significa che il thread è garantito per non richiedere un&quot;acquisizione del contesto di sicurezza. Il metodo può restituire true quando un&quot;acquisizione del contesto di sicurezza non è necessaria, per evitare vulnerabilità di sicurezza.       CurrentThreadRequiresSecurityContextCapture è critico per la sicurezza perché l&quot;uso principale consiste nell&quot;evitare il contesto di sicurezza non necessari acquisizioni, che indica che il codice di utilizzo è riservato e deve essere controllato."
  syntax:
    content: public static bool CurrentThreadRequiresSecurityContextCapture ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se lo stack contiene alcun dominio applicazione parzialmente attendibile, nessun assembly parzialmente attendibile e non attivi <> </> *> o <> </> *> modificatori. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se common language runtime non è possibile garantire che lo stack non contiene nessuna di esse."
  overload: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)
  id: GetStandardSandbox(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: GetStandardSandbox(Evidence)
  nameWithType: SecurityManager.GetStandardSandbox(Evidence)
  fullName: System.Security.SecurityManager.GetStandardSandbox(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Ottiene un set di autorizzazioni che è possibile concedere a un&quot;applicazione che contiene l&quot;evidenza fornita."
  remarks: "> [!NOTE]> Nel [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], l&quot;evidenza host in `evidence` deve contenere <xref:System.Security.Policy.Zone?displayProperty=fullName>evidenza.</xref:System.Security.Policy.Zone?displayProperty=fullName>   >> Nella tabella seguente viene illustrato il set di autorizzazioni che vengono restituiti per ogni area.      | Zona | Set di autorizzazioni |   |----------|--------------------|   | <xref:System.Security.SecurityZone>| `FullTrust`|   | <xref:System.Security.SecurityZone>| `LocalIntranet`|   | <xref:System.Security.SecurityZone>| `Internet`|   | <xref:System.Security.SecurityZone>| `Internet`|   | <xref:System.Security.SecurityZone>| None |   | <xref:System.Security.SecurityZone>| None |       Altre evidenze, ad esempio <xref:System.Security.Policy.Url>o <xref:System.Security.Policy.Site>, può essere considerata.</xref:System.Security.Policy.Site> </xref:System.Security.Policy.Url> </xref:System.Security.SecurityZone> </xref:System.Security.SecurityZone> </xref:System.Security.SecurityZone> </xref:System.Security.SecurityZone> </xref:System.Security.SecurityZone> </xref:System.Security.SecurityZone>       Il set di autorizzazioni restituito è utilizzabile da una sandbox per eseguire l&quot;applicazione. Si noti che questo metodo non specifica criteri, ma consente a un host per determinare se il set di autorizzazioni richiesto da un&quot;applicazione è ragionevole. Questo metodo può essere utilizzato per eseguire il mapping di una zona in un sandbox."
  example:
  - "The following example shows how to use the GetStandardSandbox method to obtain the permission set for a sandboxed application. For more information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[sandboxingApis#1](~/add/codesnippet/visualbasic/2aad9996-0182-4c3d-a405-_1.vb)]\n [!code-cs[sandboxingApis#1](~/add/codesnippet/csharp/2aad9996-0182-4c3d-a405-_1.cs)]"
  syntax:
    content: public static System.Security.PermissionSet GetStandardSandbox (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "L&quot;evidenza di host in modo che corrisponda a un set di autorizzazioni."
    return:
      type: System.Security.PermissionSet
      description: "Un set di autorizzazioni che può essere utilizzato come un set di concessioni per l&quot;applicazione con l&quot;evidenza fornita."
  overload: System.Security.SecurityManager.GetStandardSandbox*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>evidence</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)
  id: GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: GetZoneAndOrigin(ArrayList,ArrayList)
  nameWithType: SecurityManager.GetZoneAndOrigin(ArrayList,ArrayList)
  fullName: System.Security.SecurityManager.GetZoneAndOrigin(ArrayList,ArrayList)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Ottiene l&quot;identità della zona concesso e URL set di autorizzazioni di identità per l&quot;assembly corrente."
  remarks: "L&quot;alternativa consigliata per questo metodo è possibile utilizzare l&quot;evidenza URL e dell&quot;area dell&quot;assembly in esecuzione per chiamare <xref:System.Security.SecurityManager.ResolvePolicy%2A>per ogni tipo di evidenza.</xref:System.Security.SecurityManager.ResolvePolicy%2A> I set di autorizzazioni restituiti dal <xref:System.Security.SecurityManager.ResolvePolicy%2A>chiamate identificano le autorizzazioni concesse all&quot;assembly in esecuzione in base alla zona e l&quot;URL di origine.</xref:System.Security.SecurityManager.ResolvePolicy%2A>      > [!NOTE] > Questo membro esegue una richiesta di collegamento per la chiave pubblica ECMA, non è una chiave di crittografia valida ma una pseudo-chiave. In .NET Framework la richiesta di collegamento per la pseudo-chiave ECMA viene automaticamente convertita in una richiesta di collegamento per la chiave pubblica di Microsoft. L&quot;eccezione di sicurezza è basato sulla chiave pubblica Microsoft, non la pseudo-chiave ECMA."
  syntax:
    content: public static void GetZoneAndOrigin (out System.Collections.ArrayList zone, out System.Collections.ArrayList origin);
    parameters:
    - id: zone
      type: System.Collections.ArrayList
      description: "Un parametro di output che contiene un <xref href=&quot;System.Collections.ArrayList&quot;> </xref> di concesso <xref:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone*>oggetti.</xref:System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone*>"
    - id: origin
      type: System.Collections.ArrayList
      description: "Un parametro di output che contiene un <xref href=&quot;System.Collections.ArrayList&quot;> </xref> di concesso <xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;> </xref> oggetti."
  overload: System.Security.SecurityManager.GetZoneAndOrigin*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "La richiesta di <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref> non riuscita."
  platform:
  - net462
- uid: System.Security.SecurityManager.IsGranted(System.Security.IPermission)
  id: IsGranted(System.Security.IPermission)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: IsGranted(IPermission)
  nameWithType: SecurityManager.IsGranted(IPermission)
  fullName: System.Security.SecurityManager.IsGranted(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Determina se un&quot;autorizzazione è concessa al chiamante."
  remarks: "Concessione di autorizzazioni è determinata dai criteri ed è diversa da una richiesta di soggetto a override, ad esempio un&quot;asserzione. Inoltre, IsGranted verifica solo la concessione di assembly di codice chiamante, indipendentemente da altri chiamanti nello stack."
  syntax:
    content: public static bool IsGranted (System.Security.IPermission perm);
    parameters:
    - id: perm
      type: System.Security.IPermission
      description: "Autorizzazione da testare con i privilegi del chiamante."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se le autorizzazioni concesse al chiamante includano l&quot;autorizzazione <code> perm </code>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.SecurityManager.IsGranted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)
  id: LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: LoadPolicyLevelFromFile(String,PolicyLevelType)
  nameWithType: SecurityManager.LoadPolicyLevelFromFile(String,PolicyLevelType)
  fullName: System.Security.SecurityManager.LoadPolicyLevelFromFile(String,PolicyLevelType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Carica un <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref> dal file specificato."
  syntax:
    content: public static System.Security.Policy.PolicyLevel LoadPolicyLevelFromFile (string path, System.Security.PolicyLevelType type);
    parameters:
    - id: path
      type: System.String
      description: "Percorso fisico del file di un file contenente le informazioni sui criteri di sicurezza."
    - id: type
      type: System.Security.PolicyLevelType
      description: "Uno dei valori di enumerazione che specifica il tipo di livello dei criteri da caricare."
    return:
      type: System.Security.Policy.PolicyLevel
      description: "Il livello di criteri caricato."
  overload: System.Security.SecurityManager.LoadPolicyLevelFromFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il file indicato dal <code> path </code> parametro non esiste."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Non è necessario il codice che chiama questo metodo <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>.       - oppure - non è necessario il codice che chiama questo metodo <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - oppure - non è necessario il codice che chiama questo metodo <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>.       - oppure - non è necessario il codice che chiama questo metodo <xref href=&quot;System.Security.Permissions.FileIOPermissionAccess&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Questo metodo utilizza criteri di sicurezza dall&quot;accesso di codice, sono obsoleto nel [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Per abilitare i criteri di sicurezza per la compatibilità con le versioni precedenti di .NET Framework, usare il [ &lt;legacyCasPolicy&gt; elemento](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)
  id: LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: LoadPolicyLevelFromString(String,PolicyLevelType)
  nameWithType: SecurityManager.LoadPolicyLevelFromString(String,PolicyLevelType)
  fullName: System.Security.SecurityManager.LoadPolicyLevelFromString(String,PolicyLevelType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Carica un <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref> dalla stringa specificata."
  syntax:
    content: public static System.Security.Policy.PolicyLevel LoadPolicyLevelFromString (string str, System.Security.PolicyLevelType type);
    parameters:
    - id: str
      type: System.String
      description: "Rappresentazione XML di un livello di criteri di sicurezza nello stesso formato in cui è presente in un file di configurazione."
    - id: type
      type: System.Security.PolicyLevelType
      description: "Uno dei valori di enumerazione che specifica il tipo di livello dei criteri da caricare."
    return:
      type: System.Security.Policy.PolicyLevel
      description: "Il livello di criteri caricato."
  overload: System.Security.SecurityManager.LoadPolicyLevelFromString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>str</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> str </code> parametro non è valido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Non è necessario il codice che chiama questo metodo <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.SecurityManager.PolicyHierarchy
  id: PolicyHierarchy
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: PolicyHierarchy()
  nameWithType: SecurityManager.PolicyHierarchy()
  fullName: System.Security.SecurityManager.PolicyHierarchy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Fornisce un enumeratore per accedere alla gerarchia di criteri di sicurezza da livelli, ad esempio criteri computer e utente."
  remarks: "L&quot;enumeratore restituito fornisce successivi <xref:System.Security.Policy.PolicyLevel>gli oggetti che rappresentano i criteri al rispettivo (computer, utente, enterprise, il dominio applicazione) livello della gerarchia.</xref:System.Security.Policy.PolicyLevel> Questi oggetti sono gli oggetti di criteri in tempo reale. modifica di questi oggetti può produrre risultati imprevisti.       Gerarchia di criteri minima è costituito da un livello di computer, un livello aziendale e un livello di utente. Tuttavia, la gerarchia può includere livelli aggiuntivi."
  syntax:
    content: public static System.Collections.IEnumerator PolicyHierarchy ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Un enumeratore per <xref href=&quot;System.Security.Policy.PolicyLevel&quot;> </xref> gli oggetti che compongono la gerarchia dei criteri di sicurezza."
  overload: System.Security.SecurityManager.PolicyHierarchy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Questo metodo utilizza criteri di sicurezza dall&quot;accesso di codice, sono obsoleto nel [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Per abilitare i criteri di sicurezza per la compatibilità con le versioni precedenti di .NET Framework, usare il [ &lt;legacyCasPolicy&gt; elemento](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Non è necessario il codice che chiama questo metodo <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  id: ResolvePolicy(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: ResolvePolicy(Evidence)
  nameWithType: SecurityManager.ResolvePolicy(Evidence)
  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Determina quali autorizzazioni concedere al codice in base all&quot;evidenza specificata."
  remarks: "Questo metodo richiama il motore dei criteri di sicurezza, fornendo l&quot;evidenza dell&quot;identità del codice chiamante. Il risultato è determinato dai criteri di sicurezza."
  syntax:
    content: public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Set di evidenze utilizzato per valutare i criteri."
    return:
      type: System.Security.PermissionSet
      description: "Il set di autorizzazioni che possono essere concesse dal sistema di sicurezza."
  overload: System.Security.SecurityManager.ResolvePolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Questo metodo utilizza criteri di sicurezza dall&quot;accesso di codice, sono obsoleto nel [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Per abilitare i criteri di sicurezza per la compatibilità con le versioni precedenti di .NET Framework, usare il [ &lt;legacyCasPolicy&gt; elemento](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])
  id: ResolvePolicy(System.Security.Policy.Evidence[])
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: ResolvePolicy(Evidence[])
  nameWithType: SecurityManager.ResolvePolicy(Evidence[])
  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Determina quali autorizzazioni concedere al codice in base all&quot;evidenza specificata."
  remarks: "Questo metodo richiama il motore dei criteri di sicurezza, fornendo una matrice di <xref:System.Security.Policy.Evidence>oggetti.</xref:System.Security.Policy.Evidence> Il set di autorizzazioni restituito rappresenta solo le autorizzazioni che si applicano a tutte le evidenze nella matrice. Queste autorizzazioni sono equivalenti a, o un sottoinsieme delle autorizzazioni che sarebbe concesso criteri a ogni singola evidenza. Questo metodo si comporta come se venisse eseguita un&quot;intersezione sui risultati dei criteri in ogni di risoluzione di <xref:System.Security.Policy.Evidence>oggetti nella matrice.</xref:System.Security.Policy.Evidence>"
  syntax:
    content: public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence[] evidences);
    parameters:
    - id: evidences
      type: System.Security.Policy.Evidence[]
      description: "Una matrice di oggetti evidenza utilizzata per valutare i criteri."
    return:
      type: System.Security.PermissionSet
      description: "Il set di autorizzazioni appropriato per tutta l&quot;evidenza fornita."
  overload: System.Security.SecurityManager.ResolvePolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Questo metodo utilizza criteri di sicurezza dall&quot;accesso di codice, sono obsoleto nel [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Per abilitare i criteri di sicurezza per la compatibilità con le versioni precedenti di .NET Framework, usare il [ &lt;legacyCasPolicy&gt; elemento](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)
  id: ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)
  nameWithType: SecurityManager.ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)
  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Determina quali autorizzazioni concedere al codice in base l&quot;evidenza specificata e le richieste."
  remarks: "Questo metodo richiama il motore dei criteri di sicurezza, fornendo le evidenze dell&quot;identità del codice chiamante e il set di autorizzazioni di codice richieste. Il risultato è determinato dai criteri di sicurezza. Questo metodo restituisce il set di autorizzazioni concesse dal sistema di sicurezza e restituisce il set di autorizzazioni che verrebbe negato come parametro di output. Le autorizzazioni valide concesse sono quelle in set di autorizzazioni concesse non inclusi nel set delle autorizzazioni negate."
  syntax:
    content: public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence, System.Security.PermissionSet reqdPset, System.Security.PermissionSet optPset, System.Security.PermissionSet denyPset, out System.Security.PermissionSet denied);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Set di evidenze utilizzato per valutare i criteri."
    - id: reqdPset
      type: System.Security.PermissionSet
      description: "Le autorizzazioni necessarie, che è necessario eseguire il codice."
    - id: optPset
      type: System.Security.PermissionSet
      description: "Autorizzazioni facoltative che verranno utilizzate se concesse, ma non sono necessari per l&quot;esecuzione del codice."
    - id: denyPset
      type: System.Security.PermissionSet
      description: "Le autorizzazioni negate non devono mai essere concessa al codice, anche se i criteri in caso contrario lo consente."
    - id: denied
      type: System.Security.PermissionSet
      description: "Un parametro di output che contiene il set di autorizzazioni non concesse."
    return:
      type: System.Security.PermissionSet
      description: "Il set di autorizzazioni concesse dal sistema di sicurezza."
  overload: System.Security.SecurityManager.ResolvePolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Questo metodo utilizza criteri di sicurezza dall&quot;accesso di codice, sono obsoleto nel [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Per abilitare i criteri di sicurezza per la compatibilità con le versioni precedenti di .NET Framework, usare il [ &lt;legacyCasPolicy&gt; elemento](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "Criteri non riesce a concedere le autorizzazioni minime necessarie specificate da di <code> reqdPset </code> parametro."
  platform:
  - net462
- uid: System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)
  id: ResolvePolicyGroups(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: ResolvePolicyGroups(Evidence)
  nameWithType: SecurityManager.ResolvePolicyGroups(Evidence)
  fullName: System.Security.SecurityManager.ResolvePolicyGroups(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Ottiene una raccolta di gruppi di codice corrispondenti l&quot;evidenza specificata."
  remarks: "Questo metodo è utile per analizzare il funzionamento di una configurazione di criteri specificata con tipi specifici di prova.       Gruppi di codice verranno restituiti da tutti i livelli applicabili della gerarchia di criteri di corrispondenza di `evidence` parametro."
  syntax:
    content: public static System.Collections.IEnumerator ResolvePolicyGroups (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Il parametro evidence impostato rispetto al quale vengono valutati i criteri."
    return:
      type: System.Collections.IEnumerator
      description: "Enumerazione del set di gruppi di codice corrisponde all&quot;evidenza."
  overload: System.Security.SecurityManager.ResolvePolicyGroups*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Questo metodo utilizza criteri di sicurezza dall&quot;accesso di codice, sono obsoleto nel [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Per abilitare i criteri di sicurezza per la compatibilità con le versioni precedenti di .NET Framework, usare il [ &lt;legacyCasPolicy&gt; elemento](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)
  id: ResolveSystemPolicy(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: ResolveSystemPolicy(Evidence)
  nameWithType: SecurityManager.ResolveSystemPolicy(Evidence)
  fullName: System.Security.SecurityManager.ResolveSystemPolicy(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Determina quali autorizzazioni concedere al codice in base l&quot;evidenza specificata, esclusi i criteri per il <xref href=&quot;System.AppDomain&quot;> </xref> livello."
  remarks: "Questo metodo richiama il motore dei criteri di sicurezza e fornisce la prova dell&quot;identità del codice chiamante. Il risultato è determinato dai criteri di sicurezza del sistema esclude qualsiasi <xref:System.AppDomain>criteri.</xref:System.AppDomain>"
  syntax:
    content: public static System.Security.PermissionSet ResolveSystemPolicy (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Set di evidenze utilizzato per valutare i criteri."
    return:
      type: System.Security.PermissionSet
      description: "Il set di autorizzazioni che possono essere concesse dal sistema di sicurezza."
  overload: System.Security.SecurityManager.ResolveSystemPolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Questo metodo utilizza criteri di sicurezza dall&quot;accesso di codice, sono obsoleto nel [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Per abilitare i criteri di sicurezza per la compatibilità con le versioni precedenti di .NET Framework, usare il [ &lt;legacyCasPolicy&gt; elemento](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.SecurityManager.SavePolicy
  id: SavePolicy
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: SavePolicy()
  nameWithType: SecurityManager.SavePolicy()
  fullName: System.Security.SecurityManager.SavePolicy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Salva lo stato dei criteri di sicurezza modificato."
  remarks: "Questo metodo salva i criteri esposti da <xref:System.Security.SecurityManager.PolicyHierarchy%2A>, <xref:System.Security.Policy.PolicyLevel>, e altre classi che rappresentano la configurazione dei criteri di sicurezza.</xref:System.Security.Policy.PolicyLevel> </xref:System.Security.SecurityManager.PolicyHierarchy%2A> A meno che questo metodo viene chiamato, le modifiche apportate agli oggetti dei criteri non verranno salvate e non avrà effetto sulle esecuzioni successive dell&quot;applicazione."
  syntax:
    content: public static void SavePolicy ();
    parameters: []
  overload: System.Security.SecurityManager.SavePolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Questo metodo utilizza criteri di sicurezza dall&quot;accesso di codice, sono obsoleto nel [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Per abilitare i criteri di sicurezza per la compatibilità con le versioni precedenti di .NET Framework, usare il [ &lt;legacyCasPolicy&gt; elemento](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Non è necessario il codice che chiama questo metodo <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)
  id: SavePolicyLevel(System.Security.Policy.PolicyLevel)
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: SavePolicyLevel(PolicyLevel)
  nameWithType: SecurityManager.SavePolicyLevel(PolicyLevel)
  fullName: System.Security.SecurityManager.SavePolicyLevel(PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Salva un livello di criteri di sicurezza modificato caricato con <xref:System.Security.SecurityManager.LoadPolicyLevelFromFile*>.</xref:System.Security.SecurityManager.LoadPolicyLevelFromFile*>"
  remarks: "Il <xref:System.Security.Policy.PolicyLevel>verrà salvato nello stesso percorso da cui è caricato.</xref:System.Security.Policy.PolicyLevel>"
  syntax:
    content: public static void SavePolicyLevel (System.Security.Policy.PolicyLevel level);
    parameters:
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "Oggetto di livello di criteri da salvare."
  overload: System.Security.SecurityManager.SavePolicyLevel*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Non è necessario il codice che chiama questo metodo <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Questo metodo utilizza criteri di sicurezza dall&quot;accesso di codice, sono obsoleto nel [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Per abilitare i criteri di sicurezza per la compatibilità con le versioni precedenti di .NET Framework, usare il [ &lt;legacyCasPolicy&gt; elemento](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.SecurityManager.SecurityEnabled
  id: SecurityEnabled
  parent: System.Security.SecurityManager
  langs:
  - csharp
  name: SecurityEnabled
  nameWithType: SecurityManager.SecurityEnabled
  fullName: System.Security.SecurityManager.SecurityEnabled
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Ottiene o imposta un valore che indica se è attivata la sicurezza."
  remarks: "Questa proprietà viene utilizzata per la [Caspol.exe (strumento di criteri di sicurezza di accesso di codice)](~/add/includes/ajax-current-ext-md.md) `-security` (`-s`) per disattivare la sicurezza basata su codice.              SecurityEnabled consente agli amministratori di disabilitare la sicurezza dall&quot;accesso di codice. Quando la sicurezza dall&quot;accesso di codice è disabilitata, tutte le richieste di accesso di codice esaudite. In effetti, ciò consente di tutto il codice `FullTrust`. La disabilitazione della sicurezza di accesso di codice consente di ignorare il sistema di sicurezza in modo che potrebbe eseguire codice leggermente migliore la concessione di criteri di sicurezza equivalenti `FullTrust` a tutto il codice. Questa proprietà non disabilitare la protezione basata sui ruoli. Pertanto, <xref:System.Security.Permissions.PrincipalPermission>richieste non sono state interessate.</xref:System.Security.Permissions.PrincipalPermission>      > [!CAUTION] > La disabilitazione della sicurezza dall&quot;accesso di codice rende il sistema vulnerabile agli attacchi di codice dannoso, tra cui virus e worm. La disabilitazione della sicurezza di accesso di codice non blocca automaticamente il codice gestito venga eseguito in qualsiasi modo. Si ottiene solo che il codice venga eseguito senza limitazioni dal sistema di sicurezza di accesso di codice gestito, pertanto devono essere eseguite solo con estrema cautela. La disattivazione della protezione per migliorare le prestazioni deve essere eseguita solo quando sono state adottate altre misure di sicurezza per proteggere la sicurezza del sistema. Esempi di precauzioni alternative sono la disconnessione da reti pubbliche, la sicurezza fisica dei computer e così via.       Una modifica a questa proprietà non è persistente nel Registro di sistema finché <xref:System.Security.SecurityManager.SavePolicy%2A>viene chiamato.</xref:System.Security.SecurityManager.SavePolicy%2A> Nuovi processi non essere interessati dalla modifica fino a quando non è persistente nel Registro di sistema. Il valore di questa proprietà in un processo in esecuzione non necessariamente la modifica lo stato nel modo previsto. Affinché le modifiche sono diventate effettive, è necessario chiamare <xref:System.Security.SecurityManager.SavePolicy%2A>e avviare un nuovo processo.</xref:System.Security.SecurityManager.SavePolicy%2A>"
  syntax:
    content: public static bool SecurityEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la sicurezza è attivata; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.SecurityManager.SecurityEnabled*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Non è necessario il codice che chiama questo metodo <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.Security.SecurityManager.CheckExecutionRights
  parent: System.Security.SecurityManager
  isExternal: false
  name: CheckExecutionRights
  nameWithType: SecurityManager.CheckExecutionRights
  fullName: System.Security.SecurityManager.CheckExecutionRights
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture
  parent: System.Security.SecurityManager
  isExternal: false
  name: CurrentThreadRequiresSecurityContextCapture()
  nameWithType: SecurityManager.CurrentThreadRequiresSecurityContextCapture()
  fullName: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture()
- uid: System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  isExternal: false
  name: GetStandardSandbox(Evidence)
  nameWithType: SecurityManager.GetStandardSandbox(Evidence)
  fullName: System.Security.SecurityManager.GetStandardSandbox(Evidence)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)
  parent: System.Security.SecurityManager
  isExternal: false
  name: GetZoneAndOrigin(ArrayList,ArrayList)
  nameWithType: SecurityManager.GetZoneAndOrigin(ArrayList,ArrayList)
  fullName: System.Security.SecurityManager.GetZoneAndOrigin(ArrayList,ArrayList)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Security.SecurityManager.IsGranted(System.Security.IPermission)
  parent: System.Security.SecurityManager
  isExternal: false
  name: IsGranted(IPermission)
  nameWithType: SecurityManager.IsGranted(IPermission)
  fullName: System.Security.SecurityManager.IsGranted(IPermission)
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)
  parent: System.Security.SecurityManager
  isExternal: false
  name: LoadPolicyLevelFromFile(String,PolicyLevelType)
  nameWithType: SecurityManager.LoadPolicyLevelFromFile(String,PolicyLevelType)
  fullName: System.Security.SecurityManager.LoadPolicyLevelFromFile(String,PolicyLevelType)
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.PolicyLevelType
  parent: System.Security
  isExternal: false
  name: PolicyLevelType
  nameWithType: PolicyLevelType
  fullName: System.Security.PolicyLevelType
- uid: System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)
  parent: System.Security.SecurityManager
  isExternal: false
  name: LoadPolicyLevelFromString(String,PolicyLevelType)
  nameWithType: SecurityManager.LoadPolicyLevelFromString(String,PolicyLevelType)
  fullName: System.Security.SecurityManager.LoadPolicyLevelFromString(String,PolicyLevelType)
- uid: System.Security.SecurityManager.PolicyHierarchy
  parent: System.Security.SecurityManager
  isExternal: false
  name: PolicyHierarchy()
  nameWithType: SecurityManager.PolicyHierarchy()
  fullName: System.Security.SecurityManager.PolicyHierarchy()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolvePolicy(Evidence)
  nameWithType: SecurityManager.ResolvePolicy(Evidence)
  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence)
- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolvePolicy(Evidence[])
  nameWithType: SecurityManager.ResolvePolicy(Evidence[])
  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence[])
- uid: System.Security.Policy.Evidence[]
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence[]
  spec.csharp:
  - uid: System.Security.Policy.Evidence
    name: Evidence
    nameWithType: Evidence
    fullName: Evidence[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)
  nameWithType: SecurityManager.ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)
  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)
- uid: System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolvePolicyGroups(Evidence)
  nameWithType: SecurityManager.ResolvePolicyGroups(Evidence)
  fullName: System.Security.SecurityManager.ResolvePolicyGroups(Evidence)
- uid: System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolveSystemPolicy(Evidence)
  nameWithType: SecurityManager.ResolveSystemPolicy(Evidence)
  fullName: System.Security.SecurityManager.ResolveSystemPolicy(Evidence)
- uid: System.Security.SecurityManager.SavePolicy
  parent: System.Security.SecurityManager
  isExternal: false
  name: SavePolicy()
  nameWithType: SecurityManager.SavePolicy()
  fullName: System.Security.SecurityManager.SavePolicy()
- uid: System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)
  parent: System.Security.SecurityManager
  isExternal: false
  name: SavePolicyLevel(PolicyLevel)
  nameWithType: SecurityManager.SavePolicyLevel(PolicyLevel)
  fullName: System.Security.SecurityManager.SavePolicyLevel(PolicyLevel)
- uid: System.Security.SecurityManager.SecurityEnabled
  parent: System.Security.SecurityManager
  isExternal: false
  name: SecurityEnabled
  nameWithType: SecurityManager.SecurityEnabled
  fullName: System.Security.SecurityManager.SecurityEnabled
- uid: System.Security.SecurityManager.CheckExecutionRights*
  parent: System.Security.SecurityManager
  isExternal: false
  name: CheckExecutionRights
  nameWithType: SecurityManager.CheckExecutionRights
- uid: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture*
  parent: System.Security.SecurityManager
  isExternal: false
  name: CurrentThreadRequiresSecurityContextCapture
  nameWithType: SecurityManager.CurrentThreadRequiresSecurityContextCapture
- uid: System.Security.SecurityManager.GetStandardSandbox*
  parent: System.Security.SecurityManager
  isExternal: false
  name: GetStandardSandbox
  nameWithType: SecurityManager.GetStandardSandbox
- uid: System.Security.SecurityManager.GetZoneAndOrigin*
  parent: System.Security.SecurityManager
  isExternal: false
  name: GetZoneAndOrigin
  nameWithType: SecurityManager.GetZoneAndOrigin
- uid: System.Security.SecurityManager.IsGranted*
  parent: System.Security.SecurityManager
  isExternal: false
  name: IsGranted
  nameWithType: SecurityManager.IsGranted
- uid: System.Security.SecurityManager.LoadPolicyLevelFromFile*
  parent: System.Security.SecurityManager
  isExternal: false
  name: LoadPolicyLevelFromFile
  nameWithType: SecurityManager.LoadPolicyLevelFromFile
- uid: System.Security.SecurityManager.LoadPolicyLevelFromString*
  parent: System.Security.SecurityManager
  isExternal: false
  name: LoadPolicyLevelFromString
  nameWithType: SecurityManager.LoadPolicyLevelFromString
- uid: System.Security.SecurityManager.PolicyHierarchy*
  parent: System.Security.SecurityManager
  isExternal: false
  name: PolicyHierarchy
  nameWithType: SecurityManager.PolicyHierarchy
- uid: System.Security.SecurityManager.ResolvePolicy*
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolvePolicy
  nameWithType: SecurityManager.ResolvePolicy
- uid: System.Security.SecurityManager.ResolvePolicyGroups*
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolvePolicyGroups
  nameWithType: SecurityManager.ResolvePolicyGroups
- uid: System.Security.SecurityManager.ResolveSystemPolicy*
  parent: System.Security.SecurityManager
  isExternal: false
  name: ResolveSystemPolicy
  nameWithType: SecurityManager.ResolveSystemPolicy
- uid: System.Security.SecurityManager.SavePolicy*
  parent: System.Security.SecurityManager
  isExternal: false
  name: SavePolicy
  nameWithType: SecurityManager.SavePolicy
- uid: System.Security.SecurityManager.SavePolicyLevel*
  parent: System.Security.SecurityManager
  isExternal: false
  name: SavePolicyLevel
  nameWithType: SecurityManager.SavePolicyLevel
- uid: System.Security.SecurityManager.SecurityEnabled*
  parent: System.Security.SecurityManager
  isExternal: false
  name: SecurityEnabled
  nameWithType: SecurityManager.SecurityEnabled
