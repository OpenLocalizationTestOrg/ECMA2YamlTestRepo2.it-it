### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.WorkflowRuntime
  id: WorkflowRuntime
  children:
  - System.Workflow.Runtime.WorkflowRuntime.#ctor
  - System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)
  - System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)
  - System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  - System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  - System.Workflow.Runtime.WorkflowRuntime.Dispose
  - System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)
  - System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1
  - System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows
  - System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)
  - System.Workflow.Runtime.WorkflowRuntime.GetService``1
  - System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)
  - System.Workflow.Runtime.WorkflowRuntime.IsStarted
  - System.Workflow.Runtime.WorkflowRuntime.Name
  - System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)
  - System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  - System.Workflow.Runtime.WorkflowRuntime.Started
  - System.Workflow.Runtime.WorkflowRuntime.StartRuntime
  - System.Workflow.Runtime.WorkflowRuntime.Stopped
  - System.Workflow.Runtime.WorkflowRuntime.StopRuntime
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  - System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  langs:
  - csharp
  name: WorkflowRuntime
  nameWithType: WorkflowRuntime
  fullName: System.Workflow.Runtime.WorkflowRuntime
  type: Class
  summary: "Rappresenta l&quot;ambiente di esecuzione configurabile fornito dal motore di runtime del flusso di lavoro per i flussi di lavoro."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]WorkflowRuntime espone la funzionalità richiesta da un&quot;applicazione host e i servizi per configurare e controllare il motore di runtime del flusso di lavoro e ricevere notifica delle modifiche per il motore di runtime del flusso di lavoro e alle relative istanze del flusso di lavoro."
  example:
  - "The following code example demonstrates how to use WorkflowRuntime functionality from a workflow host. It provides examples of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> constructor and the <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>, and <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> methods. The code also shows the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method. It also shows how to set event handlers for the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>, <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>, and <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> events.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class WorkflowRuntime : IDisposable, IServiceProvider
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowRuntime()
  nameWithType: WorkflowRuntime.WorkflowRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> classe."
  remarks: "Il <xref:System.Workflow.Runtime.WorkflowRuntime>viene inizializzato con i valori di proprietà predefinito e contiene i servizi di base predefiniti.</xref:System.Workflow.Runtime.WorkflowRuntime> Per configurare anche il motore di runtime del flusso di lavoro, è possibile aggiungere e rimuovere servizi utilizzando <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>e <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>, ed è possibile impostare <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> Dopo il <xref:System.Workflow.Runtime.WorkflowRuntime>è configurato, chiamare <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>per avviare il motore di runtime del flusso di lavoro e i relativi servizi.</xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> </xref:System.Workflow.Runtime.WorkflowRuntime>       La tabella seguente illustra i valori di proprietà iniziali per un&quot;istanza della <xref:System.Workflow.Runtime.WorkflowRuntime>classe.</xref:System.Workflow.Runtime.WorkflowRuntime>      | Proprietà | Il valore iniziale |   |--------------|-------------------|   | <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>|&quot; WorkflowRuntime &quot;|   | <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>| `false`|       I servizi di base predefiniti sono <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService>e <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>.</xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> </xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>"
  example:
  - "The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. It provides an example of how to use the WorkflowRuntime constructor to create an instance of a <xref:System.Workflow.Runtime.WorkflowRuntime> and access its methods and events.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public WorkflowRuntime ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowRuntime(String)
  nameWithType: WorkflowRuntime.WorkflowRuntime(String)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(String)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> classe utilizzando la sezione specificata del file di configurazione dell&quot;applicazione."
  remarks: "Il <xref:System.Workflow.Runtime.WorkflowRuntime>viene inizializzato in base alle impostazioni nella sezione specificata da `configSectionName` nel file di configurazione dell&quot;applicazione.</xref:System.Workflow.Runtime.WorkflowRuntime> `configSectionName`deve corrispondere a un oggetto valido `workflowSettings` sezione di un file di configurazione.       Quando il motore di runtime del flusso di lavoro viene configurato tramite un file di configurazione dell&quot;applicazione, carica e crea istanze di classi dei tipi elencati nel `Services` sezione del file di configurazione. Quando il motore di runtime del flusso di lavoro costruisce queste classi, cerca costruttori di classi con le firme seguenti nell&quot;ordine seguente: 1.  Service(WorkflowRuntime runtime, NameValueCollection Parameters) 2.  Service(WorkflowRuntime Runtime) 3.  Service(NameValueCollection Parameters) 4.  Service() tutte le classi che vengono caricate da un file di configurazione del servizio deve implementare almeno una di queste firme del costruttore.       [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>"
  syntax:
    content: public WorkflowRuntime (string configSectionName);
    parameters:
    - id: configSectionName
      type: System.String
      description: "Il nome di un oggetto valido <xref uid=&quot;langword_csharp_workflowSettings&quot; name=&quot;workflowSettings&quot; href=&quot;&quot;> </xref> sezione nel file di configurazione dell&quot;applicazione."
  overload: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>configSectionName</code>è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Un valido <xref uid=&quot;langword_csharp_workflowSettings&quot; name=&quot;workflowSettings&quot; href=&quot;&quot;> </xref> sezione trovata nel file di configurazione dell&quot;applicazione."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Oggetto <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> esiste già per il dominio applicazione."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)
  id: '#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)'
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowRuntime(WorkflowRuntimeSection)
  nameWithType: WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> classe utilizzando le impostazioni nell&quot;oggetto specificato <xref href=&quot;System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&quot;> </xref>."
  remarks: "Questo costruttore fornisce un meccanismo per configurare il motore di runtime del flusso di lavoro utilizzando una singola chiamata al metodo per gli host che non utilizzano un file di configurazione dell&quot;applicazione. Esistono diversi motivi per cui non si utilizza il file di configurazione dell&quot;applicazione. Un host è possibile eseguire in un ambiente che non consente l&quot;utilizzo di file di configurazione. ad esempio, in ambienti attendibili che non consentono la lettura dal file di configurazione dell&quot;applicazione per motivi di sicurezza. Inoltre, un host può utilizzare un meccanismo di configurazione proprietario; ad esempio, l&quot;host può archiviare le impostazioni di configurazione del motore di runtime del flusso di lavoro in un database SQL.       Il motore di runtime del flusso di lavoro carica e crea istanze di classi dei tipi di contenuto in <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=fullName>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=fullName> Quando il motore di runtime del flusso di lavoro costruisce queste classi, cerca costruttori di classi con le firme seguenti nell&quot;ordine seguente: 1.  Service(WorkflowRuntime runtime, NameValueCollection Parameters) 2.  Service(WorkflowRuntime Runtime) 3.  Service(NameValueCollection Parameters) 4.  Tutte le classi che vengono specificate in del servizio Service() `settings` devono implementare almeno una di queste firme del costruttore."
  syntax:
    content: public WorkflowRuntime (System.Workflow.Runtime.Configuration.WorkflowRuntimeSection settings);
    parameters:
    - id: settings
      type: System.Workflow.Runtime.Configuration.WorkflowRuntimeSection
      description: "A <xref href=&quot;System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&quot;></xref>."
  overload: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>settings</code>è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Oggetto <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> esiste già per il dominio applicazione."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)
  id: AddService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: AddService(Object)
  nameWithType: WorkflowRuntime.AddService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.AddService(Object)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Aggiunge il servizio specificato al motore di runtime del flusso di lavoro."
  remarks: "È possibile configurare il motore di runtime del flusso di lavoro aggiungendo servizi di base. Servizi di base sono quelle che derivano da una qualsiasi delle seguenti classi di base del servizio: la <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>classe, <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>classe, la <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>classe e la <xref:System.Workflow.Runtime.Tracking.TrackingService>classe.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>  Servizi di base possono essere aggiunti solo quando il motore di runtime del flusso di lavoro non è in esecuzione. ovvero, quando <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>è `false`.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> Il <xref:System.Workflow.Runtime.WorkflowRuntime>può essere utilizzato anche come un contenitore di archiviazione per altri servizi che possono essere utilizzati da altri flussi di lavoro o da applicazioni in esecuzione in un host.</xref:System.Workflow.Runtime.WorkflowRuntime> Se si aggiunge un servizio di non di base da cui deriva il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>AddService di classe dopo aver avviato il motore di runtime del flusso di lavoro, chiama il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>metodo implementato dal servizio.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>      > [!NOTE] > AddService impone la restrizione che nessuna due servizi dello stesso <xref:System.Type>può essere aggiunto a <xref:System.Workflow.Runtime.WorkflowRuntime>.</xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Type> Tuttavia, è possibile aggiungere più servizi che derivano dalla stessa classe di base.  Può esistere un solo servizio derivato da ognuna delle seguenti classi base del servizio nel <xref:System.Workflow.Runtime.WorkflowRuntime>: <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>(classe), la <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>classe e la <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>classe</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> </xref:System.Workflow.Runtime.WorkflowRuntime>  Se si aggiungono più servizi derivati da una di queste classi, per i servizi di persistenza di esempio&2;, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>Genera un <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>"
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. It provides example of how to use the AddService method to add an <xref:System.Workflow.Activities.ExternalDataExchangeService> and <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> to the workflow run-time engine.  \n  \n This code example is part of the [Cancelling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public void AddService (object service);
    parameters:
    - id: service
      type: System.Object
      description: "Oggetto che rappresenta il servizio da aggiungere."
  overload: System.Workflow.Runtime.WorkflowRuntime.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>service</code>è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> è stato eliminato."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>service</code>è già registrato con il motore di runtime del flusso di lavoro.       - oppure - <code>service</code> è un servizio di base e il motore di runtime del flusso di lavoro è già in esecuzione (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted*> è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)
  id: CreateWorkflow(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(Type)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Crea una nuova istanza del flusso di lavoro tramite il flusso di lavoro <xref:System.Type>.</xref:System.Type>"
  remarks: "Prima di <xref:System.Workflow.Runtime.WorkflowInstance>viene creata, la convalida viene eseguita su di esso.</xref:System.Workflow.Runtime.WorkflowInstance> Se si verificano errori di convalida, il <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>viene generata un&quot;eccezione.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Ciò vale per gli scenari semplici, ma in un ambiente server, la riconvalida di un flusso di lavoro per ogni attivazione potrebbe essere inutile.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]sulla disabilitazione della convalida, vedere <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>"
  example:
  - "The following code example demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the CreateWorkflow method.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#260](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#260)]\n [!code-vb[WF_Samples#260](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#260)]"
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType);
    parameters:
    - id: workflowType
      type: System.Type
      description: "Il <xref:System.Type>del flusso di lavoro da creare.</xref:System.Type>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "L&quot;istanza del flusso di lavoro creata."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)
  id: CreateWorkflow(System.Xml.XmlReader)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(XmlReader)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Crea un&quot;istanza del flusso di lavoro tramite specificata <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "L&quot;istanza del flusso di lavoro viene creata da un file di definizione del flusso di lavoro XAML a cui fa riferimento il <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>       Prima di <xref:System.Workflow.Runtime.WorkflowInstance>viene creata, la convalida viene eseguita su di esso.</xref:System.Workflow.Runtime.WorkflowInstance> Se si verificano errori di convalida, il <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>viene generata un&quot;eccezione.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Ciò vale per gli scenari semplici, ma in un ambiente server, la riconvalida di un flusso di lavoro per ogni attivazione potrebbe essere inutile.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]sulla disabilitazione della convalida, vedere <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>"
  example:
  - "The following example demonstrates how to create a workflow given a XAML-based workflow definition.  \n  \n```  \nstatic void Main(string[] args)  \n{  \n    using (WorkflowRuntime workflowRuntime = new WorkflowRuntime())  \n    {  \n        AutoResetEvent waitHandle = new AutoResetEvent(false);  \n        workflowRuntime.WorkflowCompleted += delegate(object sender, WorkflowCompletedEventArgs e)  \n        {  \n            waitHandle.Set();  \n        };  \n        workflowRuntime.WorkflowTerminated += delegate(object sender, WorkflowTerminatedEventArgs e)  \n        {  \n            Console.WriteLine(e.Exception.Message);  \n            waitHandle.Set();  \n        };  \n  \n        TypeProvider typeProvider = new TypeProvider(null);  \n        // Add referenced assemblies, if needed  \n        // typeProvider.AddAssembly(...);  \n        workflowRuntime.AddService(typeProvider);  \n  \n        using (XmlReader reader = XmlReader.Create(\"Workflow1.xoml\"))  \n        {  \n            WorkflowInstance instance = workflowRuntime.CreateWorkflow(reader);  \n            instance.Start();  \n        }  \n  \n        waitHandle.WaitOne();  \n    }  \n}  \n```"
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader);
    parameters:
    - id: workflowDefinitionReader
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>che contiene la definizione del flusso di lavoro.</xref:System.Xml.XmlReader>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "L&quot;istanza del flusso di lavoro creata."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowDefinitionReader</code>è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> è stato eliminato."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(Type,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Crea un&quot;istanza del flusso di lavoro tramite il flusso di lavoro <xref:System.Type>e gli argomenti per il flusso di lavoro contenuto nell&quot;oggetto &lt;xref:System.Collections.Generic.Dictionary%602&gt;.</xref:System.Type>"
  remarks: "Prima di <xref:System.Workflow.Runtime.WorkflowInstance>viene creata, la convalida viene eseguita su di esso.</xref:System.Workflow.Runtime.WorkflowInstance> Se si verificano errori di convalida, il <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>viene generata un&quot;eccezione.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Ciò vale per gli scenari semplici, ma in un ambiente server, la riconvalida di un flusso di lavoro per ogni attivazione potrebbe essere inutile.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]sulla disabilitazione della convalida, vedere <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       Per un esempio di passaggio di parametri per `CreateWorkflow`, vedere [esempio Workflow with Parameters](http://go.microsoft.com/fwlink/?LinkId=157403)."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary<string,object> namedArgumentValues);
    parameters:
    - id: workflowType
      type: System.Type
      description: "Il <xref:System.Type>del flusso di lavoro da creare.</xref:System.Type>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "Oggetto &lt;xref:System.Collections.Generic.Dictionary%602&gt; di oggetti con chiave impostata da una stringa che rappresenta gli argomenti per il flusso di lavoro."
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "L&quot;istanza del flusso di lavoro creata."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  id: CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Crea un&quot;istanza del flusso di lavoro utilizzando i parametri specificati."
  remarks: "Prima di <xref:System.Workflow.Runtime.WorkflowInstance>viene creata, la convalida viene eseguita su di esso.</xref:System.Workflow.Runtime.WorkflowInstance> Se si verificano errori di convalida, il <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>viene generata un&quot;eccezione.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Ciò vale per gli scenari semplici, ma in un ambiente server, la riconvalida di un flusso di lavoro per ogni attivazione potrebbe essere inutile.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]sulla disabilitazione della convalida, vedere <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       Il flusso di lavoro `instanceId` per qualsiasi esecuzione dei flussi di lavoro caricati dal <xref:System.Workflow.Runtime.WorkflowRuntime>deve essere univoco.</xref:System.Workflow.Runtime.WorkflowRuntime> Se si passa un `instanceId` per creare un flusso di lavoro e un flusso di lavoro in esecuzione sta già utilizzando quel `instanceId`, un <xref:System.InvalidOperationException>viene generata un&quot;eccezione.</xref:System.InvalidOperationException>       Per un esempio di passaggio di parametri per `CreateWorkflow`, vedere [esempio Workflow with Parameters](http://go.microsoft.com/fwlink/?LinkID=157403)."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary<string,object> namedArgumentValues, Guid instanceId);
    parameters:
    - id: workflowType
      type: System.Type
      description: "Il <xref:System.Type>del flusso di lavoro da creare.</xref:System.Type>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "Oggetto &lt;xref:System.Collections.Generic.Dictionary%602&gt; di oggetti con chiave impostata da una stringa che rappresenta gli argomenti per il flusso di lavoro."
    - id: instanceId
      type: System.Guid
      description: "Il <xref:System.Guid>delle specifiche <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> da creare.</xref:System.Guid>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "L&quot;istanza del flusso di lavoro creata."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Crea un&quot;istanza del flusso di lavoro utilizzando l&quot;oggetto specificato <xref:System.Xml.XmlReader>oggetti e gli argomenti contenuti nell&quot;oggetto specificato &lt;xref:System.Collections.Generic.Dictionary%602&gt;.</xref:System.Xml.XmlReader>"
  remarks: "L&quot;istanza del flusso di lavoro viene creata dalla definizione del flusso di lavoro a cui fa riferimento il <xref:System.Xml.XmlReader>e gli argomenti forniti da `namedArgumentValues`.</xref:System.Xml.XmlReader>       Prima di <xref:System.Workflow.Runtime.WorkflowInstance>viene creata, la convalida viene eseguita su di esso.</xref:System.Workflow.Runtime.WorkflowInstance> Se si verificano errori di convalida, il <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>viene generata un&quot;eccezione.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Ciò vale per gli scenari semplici, ma in un ambiente server, la riconvalida di un flusso di lavoro per ogni attivazione potrebbe essere inutile.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]sulla disabilitazione della convalida, vedere <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       Per un esempio di passaggio di parametri per `CreateWorkflow`, vedere [esempio Workflow with Parameters](http://go.microsoft.com/fwlink/?LinkID=157403).       Per un esempio di utilizzo di regole definite in XML, vedere [IfElse con regole di esempio](http://go.microsoft.com/fwlink/?LinkId=157404)."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary<string,object> namedArgumentValues);
    parameters:
    - id: workflowDefinitionReader
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>che contiene la definizione del flusso di lavoro.</xref:System.Xml.XmlReader>"
    - id: rulesReader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "Oggetto &lt;xref:System.Collections.Generic.Dictionary%602&gt; di oggetti con chiave impostata da una stringa che rappresenta gli argomenti per il flusso di lavoro."
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "L&quot;istanza del flusso di lavoro creata."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowDefinitionReader</code>è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> è stato eliminato."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  id: CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Crea un&quot;istanza del flusso di lavoro utilizzando i parametri specificati."
  remarks: "Prima di <xref:System.Workflow.Runtime.WorkflowInstance>viene creata, la convalida viene eseguita su di esso.</xref:System.Workflow.Runtime.WorkflowInstance> Se si verificano errori di convalida, il <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException>viene generata un&quot;eccezione.</xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> Ciò vale per gli scenari semplici, ma in un ambiente server, la riconvalida di un flusso di lavoro per ogni attivazione potrebbe essere inutile.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]sulla disabilitazione della convalida, vedere <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>       Il flusso di lavoro `instanceId` per qualsiasi esecuzione dei flussi di lavoro caricati dal <xref:System.Workflow.Runtime.WorkflowRuntime>deve essere univoco.</xref:System.Workflow.Runtime.WorkflowRuntime> Se si passa un `instanceId` per creare un flusso di lavoro e un flusso di lavoro in esecuzione sta già utilizzando quel `instanceId`, un <xref:System.InvalidOperationException>viene generata un&quot;eccezione.</xref:System.InvalidOperationException>       Per un esempio di passaggio di parametri per `CreateWorkflow`, vedere [esempio Workflow with Parameters](http://go.microsoft.com/fwlink/?LinkID=157403).       Per un esempio di utilizzo di regole definite in XML, vedere [IfElse con regole di esempio](http://go.microsoft.com/fwlink/?LinkID=157404)."
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary<string,object> namedArgumentValues, Guid instanceId);
    parameters:
    - id: workflowDefinitionReader
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>che contiene la definizione del flusso di lavoro.</xref:System.Xml.XmlReader>"
    - id: rulesReader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
    - id: namedArgumentValues
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "Oggetto &lt;xref:System.Collections.Generic.Dictionary%602&gt; di oggetti con chiave impostata da una stringa che rappresenta gli argomenti per il flusso di lavoro."
    - id: instanceId
      type: System.Guid
      description: "Il <xref:System.Guid>delle specifiche <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> da creare.</xref:System.Guid>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "L&quot;istanza del flusso di lavoro creata."
  overload: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>workflowType</code>è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Dispose
  id: Dispose
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Dispose()
  nameWithType: WorkflowRuntime.Dispose()
  fullName: System.Workflow.Runtime.WorkflowRuntime.Dispose()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Rilascia le risorse usate dal <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>."
  remarks: "Per arrestare <xref:System.Workflow.Runtime.WorkflowRuntime>normalmente, è sufficiente chiamare Dispose dopo aver chiamato <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> </xref:System.Workflow.Runtime.WorkflowRuntime> Infatti, chiamando il metodo Dispose lascia solo il <xref:System.Workflow.Runtime.WorkflowRuntime>in uno stato inutilizzabile.</xref:System.Workflow.Runtime.WorkflowRuntime> Dispose libera le risorse utilizzate dal runtime chiudendo gli handle di file aperti, le connessioni al database e così via, ma non scarica istanze del flusso di lavoro, arrestare i servizi o effettuare una delle altre azioni che <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>does.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>       Dispose deve essere chiamato solo quando l&quot;applicazione host deve liberare le risorse usate dal <xref:System.Workflow.Runtime.WorkflowRuntime>prima che vengano liberate automaticamente dal garbage collector.</xref:System.Workflow.Runtime.WorkflowRuntime> Per informazioni generali su Dispose, vedere [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md) e [implementazione di un metodo Dispose](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to call Dispose on a <xref:System.Workflow.Runtime.WorkflowRuntime> object. In this sample, the Dispose method is called from the FormClosing event handler for the main form of the application; this ensures that the objects created by the runtime are properly cleaned up when the application shuts down. This sample is from the [Speech Application Sample](http://go.microsoft.com/fwlink/?LinkId=157405).  \n  \n [!code-cs[WF_Samples#108](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#108)]\n [!code-vb[WF_Samples#108](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#108)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)
  id: GetAllServices(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetAllServices(Type)
  nameWithType: WorkflowRuntime.GetAllServices(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(Type)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Recupera tutti i servizi che vengono aggiunti al motore di runtime del flusso di lavoro implementati o derivati da specificato <xref:System.Type>.</xref:System.Type>"
  remarks: "Un oggetto vuoto <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>indica che nessun servizio che implementati o derivati dalla classe specificata <xref:System.Type>sono stati aggiunti al motore di runtime del flusso di lavoro.</xref:System.Type> </xref:System.Collections.ObjectModel.ReadOnlyCollection%601>"
  example:
  - "The following example demonstrates how to retrieve all services of a given type from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.  \n  \n [!code-cs[WF_Samples#19](~/add/codesnippet/csharp/wf_snippets/snippets.cs#19)]\n [!code-vb[WF_Samples#19](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#19)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<object> GetAllServices (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il <xref:System.Type>che i servizi devono implementare per essere restituito.</xref:System.Type>"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Object}
      description: "Servizi implementati o derivati da specificato <xref:System.Type>.</xref:System.Type>"
  overload: System.Workflow.Runtime.WorkflowRuntime.GetAllServices*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> è stato eliminato."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1
  id: GetAllServices``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetAllServices()
  nameWithType: WorkflowRuntime.GetAllServices()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<T> GetAllServices<T> ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{T}
      description: "Da aggiungere."
  overload: System.Workflow.Runtime.WorkflowRuntime.GetAllServices<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows
  id: GetLoadedWorkflows
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetLoadedWorkflows()
  nameWithType: WorkflowRuntime.GetLoadedWorkflows()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Ottiene una raccolta che contiene tutte le istanze del flusso di lavoro attualmente caricate in memoria."
  remarks: "Si noti che, a differenza di <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>, questo metodo non genera un <xref:System.InvalidOperationException>Se il runtime non è stato avviato.</xref:System.InvalidOperationException> </xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>"
  example:
  - "The following example demonstrates how to retrieve a collection of loaded workflows from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.  \n  \n [!code-cs[WF_Samples#18](~/add/codesnippet/csharp/wf_snippets/snippets.cs#18)]\n [!code-vb[WF_Samples#18](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#18)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.Runtime.WorkflowInstance> GetLoadedWorkflows ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.Runtime.WorkflowInstance}
      description: "Oggetto <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> oggetto per ogni istanza del flusso di lavoro attualmente caricate in memoria."
  overload: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> è stato eliminato."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: WorkflowRuntime.GetService(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService(Type)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Recupera un servizio dell&quot;oggetto specificato <xref:System.Type>dal motore di runtime del flusso di lavoro.</xref:System.Type>"
  remarks: "GetService genera un <xref:System.InvalidOperationException>se esiste più di un servizio specificato <xref:System.Type>.</xref:System.Type> </xref:System.InvalidOperationException> Pertanto, è necessario utilizzare uno dei metodi di overload di <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A>se è possibile che più servizi del tipo specificato siano presenti in <xref:System.Workflow.Runtime.WorkflowRuntime>.</xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> Ad esempio, il motore di runtime del flusso di lavoro può avere più servizi di rilevamento. Se si richiede un servizio di rilevamento specificando la <xref:System.Workflow.Runtime.Tracking.TrackingService>classe di base, è possibile che venga generata un&quot;eccezione.</xref:System.Workflow.Runtime.Tracking.TrackingService>"
  syntax:
    content: public object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il <xref:System.Type>del servizio da recuperare.</xref:System.Type>"
    return:
      type: System.Object
      description: "Il servizio specificato <xref:System.Type>.</xref:System.Type>"
  overload: System.Workflow.Runtime.WorkflowRuntime.GetService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> è già stato eliminato."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Più di un servizio di tipo <code> serviceType </code> è stato trovato."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService``1
  id: GetService``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetService()
  nameWithType: WorkflowRuntime.GetService()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  syntax:
    content: public T GetService<T> ();
    parameters: []
    return:
      type: T
      description: "Da aggiungere."
  overload: System.Workflow.Runtime.WorkflowRuntime.GetService<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)
  id: GetWorkflow(System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: GetWorkflow(Guid)
  nameWithType: WorkflowRuntime.GetWorkflow(Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Recupera l&quot;istanza del flusso di lavoro che ha specificato <xref:System.Guid>.</xref:System.Guid>"
  remarks: "Se `instanceId` specifica un&quot;istanza del flusso di lavoro che non è attualmente in memoria, l&quot;istanza del flusso di lavoro viene caricato in memoria e pianificata per l&quot;esecuzione. Dopo che un&quot;istanza del flusso di lavoro viene interrotta, ad esempio, è possibile chiamare GetWorkflow per caricare l&quot;istanza del flusso di lavoro in memoria. In questo caso, l&quot;ultimo stato persistente dell&quot;istanza del flusso di lavoro viene caricato in memoria dal servizio di persistenza."
  example:
  - "The following code example demonstrates a `ReloadWorkflow` method that calls the GetWorkflow method. The `ReloadWorkflow` method is part of a larger class that has a `Runtime` property to access all of the methods, properties, and events of the <xref:System.Workflow.Runtime.WorkflowRuntime> class.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkId=157351) sample.  \n  \n> [!NOTE]\n>  In the example, the call to <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> is redundant because both the GetWorkflow and <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> methods use the same internal helper method to load the workflow instance into memory.  \n  \n [!code-cs[WF_Samples#265](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#265)]\n [!code-vb[WF_Samples#265](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#265)]"
  syntax:
    content: public System.Workflow.Runtime.WorkflowInstance GetWorkflow (Guid instanceId);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "Il <xref:System.Guid>di un&quot;istanza del flusso di lavoro.</xref:System.Guid>"
    return:
      type: System.Workflow.Runtime.WorkflowInstance
      description: "Il <xref href=&quot;System.Workflow.Runtime.WorkflowInstance&quot;> </xref> che ha specificato <xref:System.Guid>.</xref:System.Guid>"
  overload: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il runtime del flusso di lavoro non è stato avviato."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.IsStarted
  id: IsStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: IsStarted
  nameWithType: WorkflowRuntime.IsStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.IsStarted
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Ottiene un valore che indica se il motore di runtime del flusso di lavoro è stato avviato."
  remarks: "IsStarted indica che i servizi del motore di runtime del flusso di lavoro sono in esecuzione. IsStarted è `false` fino a quando l&quot;host chiama <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> Rimane `true` fino a quando l&quot;host chiama <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>      > [!NOTE] > Non è possibile aggiungere servizi di base per il motore di runtime del flusso di lavoro in fase di esecuzione. Servizi di base sono servizi che derivano dalla <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>classe, <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService>classe, la <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>classe e la <xref:System.Workflow.Runtime.Tracking.TrackingService>classe.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>"
  example:
  - "The following example demonstrates how to access the IsStarted property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object. In this example, if the runtime is started, a message is printed to the console.  \n  \n [!code-cs[WF_Samples#21](~/add/codesnippet/csharp/wf_snippets/snippets.cs#21)]\n [!code-vb[WF_Samples#21](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#21)]"
  syntax:
    content: public bool IsStarted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il motore di runtime del flusso di lavoro è stato avviato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Runtime.WorkflowRuntime.IsStarted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Name
  id: Name
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Name
  nameWithType: WorkflowRuntime.Name
  fullName: System.Workflow.Runtime.WorkflowRuntime.Name
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Ottiene o imposta il nome associato il <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>."
  remarks: "Impossibile impostare il nome mentre è in esecuzione il motore di runtime del flusso di lavoro (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> è `true`).</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>"
  example:
  - "The following example demonstrates how to access the Name property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object. In this example, the name of the runtime is set to \"Main Runtime\".  \n  \n [!code-cs[WF_Samples#20](~/add/codesnippet/csharp/wf_snippets/snippets.cs#20)]\n [!code-vb[WF_Samples#20](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#20)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Il nome associato a questo <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>."
  overload: System.Workflow.Runtime.WorkflowRuntime.Name*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Tentativo di impostare il nome in un <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> che è stato eliminato si verifica."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Si verifica un tentativo di impostare nome mentre è in esecuzione il motore di runtime del flusso di lavoro."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)
  id: RemoveService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: RemoveService(Object)
  nameWithType: WorkflowRuntime.RemoveService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.RemoveService(Object)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Rimuove il servizio specificato dal motore di runtime del flusso di lavoro."
  remarks: "Non è possibile rimuovere un servizio di base, mentre è in esecuzione il motore di runtime del flusso di lavoro (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> è `true`).</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> Servizi di base sono servizi che derivano dalla <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>classe, <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>classe, <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>classe, o <xref:System.Workflow.Runtime.Tracking.TrackingService>classe.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>  Se `service` deriva il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe RemoveService chiamate di <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>metodo implementato dal `service`.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>"
  example:
  - "In the following example, a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> is added and removed from the <xref:System.Workflow.Runtime.WorkflowRuntime>.  \n  \n [!code-cs[WF_Samples#16](~/add/codesnippet/csharp/wf_snippets/snippets.cs#16)]\n [!code-vb[WF_Samples#16](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#16)]"
  syntax:
    content: public void RemoveService (object service);
    parameters:
    - id: service
      type: System.Object
      description: "Oggetto che rappresenta il servizio da rimuovere."
  overload: System.Workflow.Runtime.WorkflowRuntime.RemoveService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>service</code>è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> è già stato eliminato."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The workflow run-time engine has started (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>) and <code>service</code> is a core service.  \n  \n \\- or -  \n  \n <code>service</code> is not registered with the workflow run-time engine."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  id: ServicesExceptionNotHandled
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: ServicesExceptionNotHandled
  nameWithType: WorkflowRuntime.ServicesExceptionNotHandled
  fullName: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Si verifica quando un servizio derivato dal <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref> classe chiamate <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*>"
  remarks: "Un servizio derivato dalla <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe può chiamare il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>metodo per informare i sottoscrittori all&quot;evento che si è verificata un&quot;eccezione che non è in grado di gestire durante l&quot;esecuzione ServicesExceptionNotHandled.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> È possibile sottoscrivere questo evento per implementare un meccanismo di ripristino.       Questo evento viene generato quando un&quot;istanza del flusso di lavoro non è stato ancora creata dal motore di runtime del flusso di lavoro e si verifica un&quot;eccezione. In questo scenario, l&quot;unico modo per informare un&quot;applicazione host che si è verificata un&quot;eccezione è generare questo evento. Tuttavia, il motore di runtime del flusso di lavoro non chiamare questo direttamente. Al contrario, il motore di runtime del flusso di lavoro offre un&quot;eccezione all&quot;istanza del flusso di lavoro o, se è presente alcuna istanza, viene generata nuovamente al chiamante, che in questo caso è effettivamente il servizio che genera l&quot;evento. Se si crea la propria persistenza o il servizio Utilità di pianificazione, è necessario implementare questo evento tramite la base <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>metodo.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>       Per l&quot;evento ServicesExceptionNotHandled, il mittente contiene il <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowEventArgs>contiene il <xref:System.Guid>dell&quot;istanza del flusso di lavoro che stava utilizzando il servizio e <xref:System.Exception>che non gestita.</xref:System.Exception> </xref:System.Guid> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]gestione degli eventi, vedere [utilizzo degli eventi](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates ServicesExceptionNotHandled with an event handler, a method named `OnExceptionNotHandled`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=157351).  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs> ServicesExceptionNotHandled;
    return:
      type: System.EventHandler{System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Started
  id: Started
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Started
  nameWithType: WorkflowRuntime.Started
  fullName: System.Workflow.Runtime.WorkflowRuntime.Started
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Si verifica quando il motore di runtime del flusso di lavoro viene avviato."
  remarks: "Il <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>metodo genera l&quot;evento avviato dopo la convalida, la configurazione del servizio principale del motore di runtime del flusso di lavoro ha richiamato il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>metodo implementato da ognuno dei servizi che derivano dalla <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe e ha impostato <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>per `true`.</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> Non è possibile garantire l&quot;ordine in cui i servizi che derivano dalla <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe vengono avviati dal motore di runtime del flusso di lavoro e alcuni di questi servizi motore di runtime del flusso di lavoro possono dipendere da funzionalità fornite da altri servizi per completare le attività di avvio.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> Servizi motore di runtime del flusso di lavoro possono eseguire l&quot;override di <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=fullName>metodo per eseguire qualsiasi attività di avvio conclusive che richiedono il supporto di altri servizi del motore di runtime del flusso di lavoro quando viene generato l&quot;evento avviato.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=fullName>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]gestione degli eventi, vedere [utilizzo degli eventi](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "In the following example, an event handler is added to the Started event of the <xref:System.Workflow.Runtime.WorkflowRuntime>. In this example, the handler is an anonymous method that prints a simple message to the console.  \n  \n [!code-cs[WF_Samples#15](~/add/codesnippet/csharp/wf_snippets/snippets.cs#15)]\n [!code-vb[WF_Samples#15](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#15)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs> Started;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowRuntimeEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.StartRuntime
  id: StartRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: StartRuntime()
  nameWithType: WorkflowRuntime.StartRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StartRuntime()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Avvia il motore di runtime del flusso di lavoro e i servizi del motore di runtime del flusso di lavoro."
  remarks: "Questo metodo verifica che un set di servizi di base valido esista e che quindi avvia tutti i servizi che derivano dalla <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>  Deve essere uno e uno solo di ognuno dei servizi di base seguenti: un flusso di lavoro `CommitWorkBatch` servizio derivato dalla <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>classe di base e un servizio dell&quot;utilità di pianificazione derivata dalla <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>classe base.</xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>  Se mancano uno o entrambi questi servizi di base, il motore di runtime del flusso di lavoro fornisce il servizio predefinito appropriato: <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService>del flusso di lavoro `CommitWorkBatch` servizio e <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>per il servizio Utilità di pianificazione.</xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> </xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> Un servizio di persistenza è facoltativo, ma vi può essere presente al massimo un solo servizio di persistenza. Dopo la convalida della configurazione del servizio, StartRuntime chiama <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>su tutti i servizi che derivano dalla <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>  Infine, il motore di runtime del flusso di lavoro imposta <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>e genera il <xref:System.Workflow.Runtime.WorkflowRuntime.Started>evento.</xref:System.Workflow.Runtime.WorkflowRuntime.Started> </xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>       Impossibile aggiungere o rimuovere servizi di base dopo l&quot;avvio del motore di runtime del flusso di lavoro. Servizi di base sono servizi che derivano dalla <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>classe, <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>classe, <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>classe, o <xref:System.Workflow.Runtime.Tracking.TrackingService>classe.</xref:System.Workflow.Runtime.Tracking.TrackingService> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> </xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> </xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>  Se si chiama StartRuntime mentre è in esecuzione il motore di runtime del flusso di lavoro, viene eseguita alcuna azione."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code calls the StartRuntime after the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> creates a <xref:System.Workflow.Runtime.WorkflowRuntime> instance and after it calls <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> to add services to the runtime. It also calls StartRuntime before any other processing occurs.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public void StartRuntime ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.StartRuntime*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> è stato eliminato."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È presente più di un flusso di lavoro servizio <xref uid=&quot;langword_csharp_CommitWorkBatch&quot; name=&quot;CommitWorkBatch&quot; href=&quot;&quot;> </xref> servizio registrato con questo <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>.       oppure è presente più di un servizio dell&quot;utilità di pianificazione registrato con questo <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>.       oppure è presente più di un servizio di persistenza registrato con questo <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.Stopped
  id: Stopped
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: Stopped
  nameWithType: WorkflowRuntime.Stopped
  fullName: System.Workflow.Runtime.WorkflowRuntime.Stopped
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Si verifica quando il motore di runtime del flusso di lavoro è stato arrestato."
  remarks: "Il <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>metodo genera l&quot;evento di arresto dopo aver richiamato il <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>metodo implementato da ognuno dei servizi che derivano dalla <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>classe.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> </xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>  Non è garantito l&quot;ordine in cui questi servizi motore di runtime del flusso di lavoro vengono arrestati e alcuni di questi servizi possono dover mantenere alcune funzionalità che dipendono da altri servizi fino a quando non troppo vengono arrestati. Tali servizi possono eseguire l&quot;override di <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=fullName>metodo per eseguire qualsiasi logica di arresto rimanente quando viene generato l&quot;evento di arresto.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=fullName>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]gestione degli eventi, vedere [utilizzo degli eventi](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "In the following example, an event handler is added to the Stopped event of the <xref:System.Workflow.Runtime.WorkflowRuntime>. In this example, the handler is an anonymous method that prints a simple message to the console.  \n  \n [!code-cs[WF_Samples#14](~/add/codesnippet/csharp/wf_snippets/snippets.cs#14)]\n [!code-vb[WF_Samples#14](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#14)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs> Stopped;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowRuntimeEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.StopRuntime
  id: StopRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: StopRuntime()
  nameWithType: WorkflowRuntime.StopRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StopRuntime()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Arresta il motore di runtime del flusso di lavoro e i servizi in fase di esecuzione."
  remarks: "Questo metodo fa sì che il motore di runtime del flusso di lavoro arrestare tutti i servizi che derivano da scaricare ognuna delle istanze del flusso di lavoro di <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>, impostare <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>a `false`e generare il <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped>evento.</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> </xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>       Per arrestare <xref:System.Workflow.Runtime.WorkflowRuntime>normalmente, chiamare StopRuntime prima di chiamare <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>.</xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]il <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>metodo.</xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>"
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. StopRuntime is called after the host has completed all other processing associated with the runtime.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#259](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#259)]\n [!code-vb[WF_Samples#259](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#259)]"
  syntax:
    content: public void StopRuntime ();
    parameters: []
  overload: System.Workflow.Runtime.WorkflowRuntime.StopRuntime*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref> è già stato eliminato."
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  id: WorkflowAborted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowAborted
  nameWithType: WorkflowRuntime.WorkflowAborted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Si verifica quando un&quot;istanza del flusso di lavoro viene interrotta."
  remarks: "WorkflowAborted si verifica dopo che tutti lavoro in sospeso per il flusso di lavoro viene cancellata l&quot;istanza, ma prima del flusso di lavoro istanza venga invalidata in memoria. È possibile interrompere un&quot;istanza del flusso di lavoro chiamando <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=fullName>.</xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=fullName>       Per questo evento, il mittente contiene il <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowEventArgs>contiene il <xref:System.Workflow.Runtime.WorkflowInstance>associato all&quot;evento.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]gestione degli eventi, vedere [utilizzo degli eventi](http://go.microsoft.com/fwlink/?LinkId=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowAborted with an event handler, a method named `OnWorkflowAborted`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#141](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#141)]\n [!code-vb[WF_Samples#141](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#141)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowAborted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  id: WorkflowCompleted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowCompleted
  nameWithType: WorkflowRuntime.WorkflowCompleted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Si verifica quando un&quot;istanza del flusso di lavoro è stata completata."
  remarks: "WorkflowCompleted viene generato dopo che l&quot;istanza del flusso di lavoro è stata completata ma prima che l&quot;istanza venga invalidata in memoria.       Per il <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>evento, il mittente contiene il <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowCompletedEventArgs>contiene il <xref:System.Workflow.Runtime.WorkflowInstance>e i relativi parametri di output.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowCompletedEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]gestione degli eventi, vedere [utilizzo degli eventi](http://go.microsoft.com/fwlink/?LinkId=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowCompleted with an event handler, a method named `OnWorkflowCompleted`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkId=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowCompletedEventArgs> WorkflowCompleted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowCompletedEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  id: WorkflowCreated
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowCreated
  nameWithType: WorkflowRuntime.WorkflowCreated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Si verifica quando viene creata un&quot;istanza del flusso di lavoro."
  remarks: "Il motore di runtime del flusso di lavoro genera l&quot;evento WorkflowCreated dopo che l&quot;istanza del flusso di lavoro è stata completamente costruita ma prima che vengano elaborate le attività. Per questo evento, il mittente contiene il <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowEventArgs>contiene il <xref:System.Workflow.Runtime.WorkflowInstance>associato all&quot;evento.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]gestione degli eventi, vedere [utilizzo degli eventi](http://go.microsoft.com/fwlink/?LinkId=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowCreated with an event handler, a method named `OnWorkflowCreated`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=15735).  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowCreated;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  id: WorkflowIdled
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowIdled
  nameWithType: WorkflowRuntime.WorkflowIdled
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Si verifica quando un&quot;istanza del flusso di lavoro entra nello stato inattivo."
  remarks: "Il motore di runtime del flusso di lavoro genera l&quot;evento WorkflowIdled quando l&quot;istanza del flusso di lavoro entra in uno stato inattivo; ad esempio, quando il flusso di lavoro è in attesa di un <xref:System.Workflow.Activities.DelayActivity>attività venga completata.</xref:System.Workflow.Activities.DelayActivity>       Per questo evento, il mittente contiene il <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowEventArgs>contiene il <xref:System.Workflow.Runtime.WorkflowInstance>associato all&quot;evento.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowIdled with an event handler, a method named `OnWorkflowIdled`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#258](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#258)]\n [!code-vb[WF_Samples#258](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#258)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowIdled;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  id: WorkflowLoaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowLoaded
  nameWithType: WorkflowRuntime.WorkflowLoaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Si verifica quando l&quot;istanza del flusso di lavoro viene caricata in memoria."
  remarks: "WorkflowLoaded si verifica dopo che il servizio di persistenza ha ripristinato l&quot;istanza del flusso di lavoro, ma prima il flusso di lavoro viene iniziato dal motore di runtime eseguire qualsiasi attività.       Per l&quot;evento WorkflowLoaded, il mittente contiene il <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowEventArgs>contiene il <xref:System.Workflow.Runtime.WorkflowInstance>associato all&quot;evento.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]gestione degli eventi, vedere [utilizzo degli eventi](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowLoaded with an event handler, a method named `OnWorkflowLoad`.  \n  \n This code example is part of the [Custom Persistence Service](http://go.microsoft.com/fwlink/?LinkID=157351) sample.  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowLoaded;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  id: WorkflowPersisted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowPersisted
  nameWithType: WorkflowRuntime.WorkflowPersisted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Si verifica quando lo stato di un&quot;istanza del flusso di lavoro è persistente."
  remarks: "L&quot;istanza del flusso di lavoro può essere persistente per diversi motivi. Ad esempio, l&quot;host può chiamare <xref:System.Workflow.Runtime.WorkflowInstance.UnLoad%2A?displayProperty=fullName>su un&quot;istanza del flusso di lavoro o il flusso di lavoro motore di runtime può rendere persistente un&quot;istanza del flusso di lavoro perché l&quot;istanza è inattiva o perché un ambito atomico è stata completata.</xref:System.Workflow.Runtime.WorkflowInstance.UnLoad%2A?displayProperty=fullName> Se è presente in un servizio di persistenza di <xref:System.Workflow.Runtime.WorkflowRuntime>, WorkflowPersisted viene generato dal runtime dopo che lo stato dell&quot;istanza del flusso di lavoro viene salvato in memoria.</xref:System.Workflow.Runtime.WorkflowRuntime> Se un servizio di persistenza non è presente, viene comunque generato l&quot;evento, ma non viene salvato lo stato dell&quot;istanza. Se l&quot;evento WorkflowPersisted si verifica perché l&quot;istanza del flusso di lavoro è stato scaricato, è seguito da un <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>evento.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded>       Per l&quot;evento WorkflowPersisted, il mittente contiene il <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowEventArgs>contiene il <xref:System.Workflow.Runtime.WorkflowInstance>associato all&quot;evento.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]gestione degli eventi, vedere [utilizzo degli eventi](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowPersisted with an event handler, a method named `OnWorkflowPersisted`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=15735).  \n  \n [!code-cs[WF_Samples#279](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#279)]\n [!code-vb[WF_Samples#279](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#279)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowPersisted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  id: WorkflowResumed
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowResumed
  nameWithType: WorkflowRuntime.WorkflowResumed
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Si verifica quando l&quot;esecuzione di un&quot;istanza del flusso di lavoro viene ripreso dopo una sospensione."
  remarks: "Il motore di runtime del flusso di lavoro genera l&quot;evento WorkflowResumed subito prima dell&quot;istanza del flusso di lavoro è pianificato. In genere l&quot;evento a causa di una chiamata esplicita a <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName>.</xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=fullName> WorkflowResumed Tuttavia, il motore di runtime del flusso di lavoro può sospendere temporaneamente un&quot;istanza per eseguire un&quot;operazione, ad esempio, per applicare una modifica del flusso di lavoro. In questo caso, l&quot;evento WorkflowResumed viene generato quando il runtime riprende l&quot;esecuzione dell&quot;istanza del flusso di lavoro dopo l&quot;operazione.       Per l&quot;evento WorkflowResumed, il mittente contiene il <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowEventArgs>contiene il <xref:System.Workflow.Runtime.WorkflowInstance>associato all&quot;evento.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]gestione degli eventi, vedere [utilizzo degli eventi](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowResumed with an event handler, a method named `OnWorkflowResume`.  \n  \n This code example is part of the [Suspend and Terminate Sample](http://go.microsoft.com/fwlink/?LinkId=157402).  \n  \n [!code-cs[WF_Samples#171](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#171)]\n [!code-vb[WF_Samples#171](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#171)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowResumed;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  id: WorkflowStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowStarted
  nameWithType: WorkflowRuntime.WorkflowStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Si verifica quando un&quot;istanza del flusso di lavoro è stata avviata."
  remarks: "Il motore di runtime del flusso di lavoro genera l&quot;evento di WorkflowStarted dopo che l&quot;istanza del flusso di lavoro viene avviata la pianificazione dell&quot;attività radice per l&quot;esecuzione. Per questo evento, il mittente contiene il <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowEventArgs>contiene il <xref:System.Workflow.Runtime.WorkflowInstance>associato all&quot;evento.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]gestione degli eventi, vedere [utilizzo degli eventi](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowStarted with an event handler, a method named `OnWorkflowStarted`.  \n  \n This code example is part of the [Host Communication Sample](http://go.microsoft.com/fwlink/?LinkId=157406).  \n  \n [!code-cs[WF_Samples#297](~/add/codesnippet/csharp/wf_snippets/snippets38.cs#297)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowStarted;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  id: WorkflowSuspended
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowSuspended
  nameWithType: WorkflowRuntime.WorkflowSuspended
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Si verifica quando un&quot;istanza del flusso di lavoro viene sospesa."
  remarks: "L&quot;istanza del flusso di lavoro può essere sospesa dall&quot;host tramite una chiamata al <xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A>(metodo), da un <xref:System.Workflow.ComponentModel.SuspendActivity>, attività o implicitamente dal motore di runtime del flusso di lavoro.</xref:System.Workflow.ComponentModel.SuspendActivity> </xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> Ad esempio, il motore di runtime del flusso di lavoro sospende temporaneamente l&quot;istanza quando applica le modifiche dinamiche all&quot;istanza.       Per l&quot;evento WorkflowSuspended, il mittente contiene il <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs>contiene il <xref:System.Workflow.Runtime.WorkflowInstance>e una stringa che descrive il motivo per l&quot;istanza è stata sospesa.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]gestione degli eventi, vedere [utilizzo degli eventi](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowSuspended with an event handler, a method named `OnWorkflowSuspended`.  \n  \n This code example is part of the [Suspend and Terminate Sample](http://go.microsoft.com/fwlink/?LinkID=157402).  \n  \n [!code-cs[WF_Samples#170](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#170)]\n [!code-vb[WF_Samples#170](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#170)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowSuspendedEventArgs> WorkflowSuspended;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowSuspendedEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  id: WorkflowTerminated
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowTerminated
  nameWithType: WorkflowRuntime.WorkflowTerminated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Si verifica quando un&quot;istanza del flusso di lavoro viene terminata."
  remarks: "Il flusso di lavoro può essere terminata dall&quot;host tramite una chiamata al <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A>(metodo), da un <xref:System.Workflow.ComponentModel.TerminateActivity>, attività o dal motore di runtime del flusso di lavoro quando si verifica un&quot;eccezione non gestita.</xref:System.Workflow.ComponentModel.TerminateActivity> </xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> Il motore di runtime del flusso di lavoro genera l&quot;evento WorkflowTerminated dopo che l&quot;istanza del flusso di lavoro viene terminata, ma prima che venga invalidata in memoria.       Per il <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>evento, il mittente contiene il <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>contiene il <xref:System.Workflow.Runtime.WorkflowInstance>e informazioni relative al motivo l&quot;istanza è stata terminata nel <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=fullName>proprietà.</xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=fullName> </xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]gestione degli eventi, vedere [utilizzo degli eventi](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> with an event handler, a method named `OnWorkflowCompleted`.  \n  \n This code example is part of the [Canceling a Workflow](http://go.microsoft.com/fwlink/?LinkID=157346) sample.  \n  \n [!code-cs[WF_Samples#260](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#260)]\n [!code-vb[WF_Samples#260](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#260)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowTerminatedEventArgs> WorkflowTerminated;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowTerminatedEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  id: WorkflowUnloaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  langs:
  - csharp
  name: WorkflowUnloaded
  nameWithType: WorkflowRuntime.WorkflowUnloaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "Si verifica quando l&quot;istanza del flusso di lavoro viene scaricata dalla memoria."
  remarks: "Un&quot;istanza del flusso di lavoro può essere scaricata dalla memoria mediante una chiamata esplicita a <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A>, o implicitamente dal motore di runtime del flusso di lavoro in base alla relativa semantica.</xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> Ad esempio, il motore di runtime del flusso di lavoro viene scaricata un&quot;istanza del flusso di lavoro se l&quot;istanza diventa inattiva e il runtime ha un <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>aggiunto per il quale <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A>è `true`.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A> </xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>       Il motore di runtime del flusso di lavoro genera l&quot;evento WorkflowUnloaded dopo che lo stato dell&quot;istanza del flusso di lavoro è stato reso persistente ma prima che l&quot;istanza venga invalidata in memoria. Pertanto, un <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>evento precede l&quot;evento WorkflowUnloaded.</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted>       Per il <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnLoaded>evento, il mittente contiene il <xref:System.Workflow.Runtime.WorkflowRuntime>e <xref:System.Workflow.Runtime.WorkflowEventArgs>contiene il <xref:System.Workflow.Runtime.WorkflowInstance>associato all&quot;evento.</xref:System.Workflow.Runtime.WorkflowInstance> </xref:System.Workflow.Runtime.WorkflowEventArgs> </xref:System.Workflow.Runtime.WorkflowRuntime> </xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnLoaded>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]gestione degli eventi, vedere [utilizzo degli eventi](http://go.microsoft.com/fwlink/?LinkID=157352)."
  example:
  - "The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host. The code associates the WorkflowUnloaded with an event handler, a method named `OnWorkflowUnload`.  \n  \n This code example is part of the [Custom Persistence Service Sample](http://go.microsoft.com/fwlink/?LinkID=157351).  \n  \n [!code-cs[WF_Samples#271](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#271)]\n [!code-vb[WF_Samples#271](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#271)]"
  syntax:
    content: public event EventHandler<System.Workflow.Runtime.WorkflowEventArgs> WorkflowUnloaded;
    return:
      type: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime()
  nameWithType: WorkflowRuntime.WorkflowRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime()
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime(String)
  nameWithType: WorkflowRuntime.WorkflowRuntime(String)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime(WorkflowRuntimeSection)
  nameWithType: WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowRuntime(WorkflowRuntimeSection)
- uid: System.Workflow.Runtime.Configuration.WorkflowRuntimeSection
  parent: System.Workflow.Runtime.Configuration
  isExternal: false
  name: WorkflowRuntimeSection
  nameWithType: WorkflowRuntimeSection
  fullName: System.Workflow.Runtime.Configuration.WorkflowRuntimeSection
- uid: System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: AddService(Object)
  nameWithType: WorkflowRuntime.AddService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.AddService(Object)
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(Type)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type)
- uid: System.Workflow.Runtime.WorkflowInstance
  parent: System.Workflow.Runtime
  isExternal: false
  name: WorkflowInstance
  nameWithType: WorkflowInstance
  fullName: System.Workflow.Runtime.WorkflowInstance
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(XmlReader)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(Type,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>)
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,Object>
  nameWithType: Dictionary<String,Object>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(Type,Dictionary<String,Object>,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>)
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  nameWithType: WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(XmlReader,XmlReader,Dictionary<String,Object>,Guid)
- uid: System.Workflow.Runtime.WorkflowRuntime.Dispose
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Dispose()
  nameWithType: WorkflowRuntime.Dispose()
  fullName: System.Workflow.Runtime.WorkflowRuntime.Dispose()
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices(Type)
  nameWithType: WorkflowRuntime.GetAllServices(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices(Type)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Object}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Object>
  nameWithType: ReadOnlyCollection<Object>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Object>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices()
  nameWithType: WorkflowRuntime.GetAllServices()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetAllServices()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{T}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetLoadedWorkflows()
  nameWithType: WorkflowRuntime.GetLoadedWorkflows()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.Runtime.WorkflowInstance}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<WorkflowInstance>
  nameWithType: ReadOnlyCollection<WorkflowInstance>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Workflow.Runtime.WorkflowInstance>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Workflow.Runtime.WorkflowInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowInstance
    name: WorkflowInstance
    nameWithType: WorkflowInstance
    fullName: WorkflowInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService(Type)
  nameWithType: WorkflowRuntime.GetService(Type)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService(Type)
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService``1
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService()
  nameWithType: WorkflowRuntime.GetService()
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetService()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetWorkflow(Guid)
  nameWithType: WorkflowRuntime.GetWorkflow(Guid)
  fullName: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(Guid)
- uid: System.Workflow.Runtime.WorkflowRuntime.IsStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: IsStarted
  nameWithType: WorkflowRuntime.IsStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.IsStarted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.WorkflowRuntime.Name
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Name
  nameWithType: WorkflowRuntime.Name
  fullName: System.Workflow.Runtime.WorkflowRuntime.Name
- uid: System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: RemoveService(Object)
  nameWithType: WorkflowRuntime.RemoveService(Object)
  fullName: System.Workflow.Runtime.WorkflowRuntime.RemoveService(Object)
- uid: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: ServicesExceptionNotHandled
  nameWithType: WorkflowRuntime.ServicesExceptionNotHandled
  fullName: System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled
- uid: System.EventHandler{System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ServicesExceptionNotHandledEventArgs>
  nameWithType: EventHandler<ServicesExceptionNotHandledEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs
    name: ServicesExceptionNotHandledEventArgs
    nameWithType: ServicesExceptionNotHandledEventArgs
    fullName: ServicesExceptionNotHandledEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.Started
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Started
  nameWithType: WorkflowRuntime.Started
  fullName: System.Workflow.Runtime.WorkflowRuntime.Started
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowRuntimeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowRuntimeEventArgs>
  nameWithType: EventHandler<WorkflowRuntimeEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowRuntimeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowRuntimeEventArgs
    name: WorkflowRuntimeEventArgs
    nameWithType: WorkflowRuntimeEventArgs
    fullName: WorkflowRuntimeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.StartRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StartRuntime()
  nameWithType: WorkflowRuntime.StartRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StartRuntime()
- uid: System.Workflow.Runtime.WorkflowRuntime.Stopped
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Stopped
  nameWithType: WorkflowRuntime.Stopped
  fullName: System.Workflow.Runtime.WorkflowRuntime.Stopped
- uid: System.Workflow.Runtime.WorkflowRuntime.StopRuntime
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StopRuntime()
  nameWithType: WorkflowRuntime.StopRuntime()
  fullName: System.Workflow.Runtime.WorkflowRuntime.StopRuntime()
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowAborted
  nameWithType: WorkflowRuntime.WorkflowAborted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowEventArgs>
  nameWithType: EventHandler<WorkflowEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowEventArgs
    name: WorkflowEventArgs
    nameWithType: WorkflowEventArgs
    fullName: WorkflowEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowCompleted
  nameWithType: WorkflowRuntime.WorkflowCompleted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowCompletedEventArgs>
  nameWithType: EventHandler<WorkflowCompletedEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowCompletedEventArgs
    name: WorkflowCompletedEventArgs
    nameWithType: WorkflowCompletedEventArgs
    fullName: WorkflowCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowCreated
  nameWithType: WorkflowRuntime.WorkflowCreated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowIdled
  nameWithType: WorkflowRuntime.WorkflowIdled
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowLoaded
  nameWithType: WorkflowRuntime.WorkflowLoaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowPersisted
  nameWithType: WorkflowRuntime.WorkflowPersisted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowResumed
  nameWithType: WorkflowRuntime.WorkflowResumed
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowStarted
  nameWithType: WorkflowRuntime.WorkflowStarted
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowSuspended
  nameWithType: WorkflowRuntime.WorkflowSuspended
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowSuspendedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowSuspendedEventArgs>
  nameWithType: EventHandler<WorkflowSuspendedEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowSuspendedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowSuspendedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowSuspendedEventArgs
    name: WorkflowSuspendedEventArgs
    nameWithType: WorkflowSuspendedEventArgs
    fullName: WorkflowSuspendedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowTerminated
  nameWithType: WorkflowRuntime.WorkflowTerminated
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated
- uid: System.EventHandler{System.Workflow.Runtime.WorkflowTerminatedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<WorkflowTerminatedEventArgs>
  nameWithType: EventHandler<WorkflowTerminatedEventArgs>
  fullName: System.EventHandler<System.Workflow.Runtime.WorkflowTerminatedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.Runtime.WorkflowTerminatedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.Runtime.WorkflowTerminatedEventArgs
    name: WorkflowTerminatedEventArgs
    nameWithType: WorkflowTerminatedEventArgs
    fullName: WorkflowTerminatedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowUnloaded
  nameWithType: WorkflowRuntime.WorkflowUnloaded
  fullName: System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded
- uid: System.Workflow.Runtime.WorkflowRuntime.#ctor*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: WorkflowRuntime
  nameWithType: WorkflowRuntime.WorkflowRuntime
- uid: System.Workflow.Runtime.WorkflowRuntime.AddService*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: AddService
  nameWithType: WorkflowRuntime.AddService
- uid: System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: CreateWorkflow
  nameWithType: WorkflowRuntime.CreateWorkflow
- uid: System.Workflow.Runtime.WorkflowRuntime.Dispose*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Dispose
  nameWithType: WorkflowRuntime.Dispose
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices
  nameWithType: WorkflowRuntime.GetAllServices
- uid: System.Workflow.Runtime.WorkflowRuntime.GetAllServices<T>*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetAllServices<T>
  nameWithType: WorkflowRuntime.GetAllServices<T>
- uid: System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetLoadedWorkflows
  nameWithType: WorkflowRuntime.GetLoadedWorkflows
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService
  nameWithType: WorkflowRuntime.GetService
- uid: System.Workflow.Runtime.WorkflowRuntime.GetService<T>*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetService<T>
  nameWithType: WorkflowRuntime.GetService<T>
- uid: System.Workflow.Runtime.WorkflowRuntime.GetWorkflow*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: GetWorkflow
  nameWithType: WorkflowRuntime.GetWorkflow
- uid: System.Workflow.Runtime.WorkflowRuntime.IsStarted*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: IsStarted
  nameWithType: WorkflowRuntime.IsStarted
- uid: System.Workflow.Runtime.WorkflowRuntime.Name*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: Name
  nameWithType: WorkflowRuntime.Name
- uid: System.Workflow.Runtime.WorkflowRuntime.RemoveService*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: RemoveService
  nameWithType: WorkflowRuntime.RemoveService
- uid: System.Workflow.Runtime.WorkflowRuntime.StartRuntime*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StartRuntime
  nameWithType: WorkflowRuntime.StartRuntime
- uid: System.Workflow.Runtime.WorkflowRuntime.StopRuntime*
  parent: System.Workflow.Runtime.WorkflowRuntime
  isExternal: false
  name: StopRuntime
  nameWithType: WorkflowRuntime.StopRuntime
