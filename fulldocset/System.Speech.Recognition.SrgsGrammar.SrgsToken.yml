### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken
  id: SrgsToken
  children:
  - System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)
  - System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
  - System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
  - System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
  langs:
  - csharp
  name: SrgsToken
  nameWithType: SrgsToken
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken
  type: Class
  summary: "Rappresenta una parola o frase breve che può essere riconosciuta."
  remarks: "Tramite i membri della classe SrgsToken, è possibile specificare tre forme di una parola: il <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>form, il <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>form e un oggetto personalizzato <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>per word.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>       Se più parole vengono archiviate in un singolo oggetto SrgsToken, ognuno viene considerato come un token diverso internamente e nel risultato.       Questa classe rappresenta il `token` elemento definito del World Wide Web Consortium (W3C) [vocale riconoscimento grammatica specifica (SRGS) versione 1.0.](http://go.microsoft.com/fwlink/?LinkId=201761). Per informazioni sul SRGS `token` elemento e i dettagli relativi al supporto per Speech, vedere [token elemento](http://msdn.microsoft.com/en-us/3a9e8d64-7bd4-4188-a6f4-dbf28ea71632)."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{DebuggerDisplayString ()}")]

      public class SrgsToken : System.Speech.Recognition.SrgsGrammar.SrgsElement
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Speech.Recognition.SrgsGrammar.SrgsElement
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  langs:
  - csharp
  name: SrgsToken(String)
  nameWithType: SrgsToken.SrgsToken(String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.SrgsToken(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsToken&quot;> </xref> e specifica il testo venga riconosciuta."
  remarks: "Crea un <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>i cui <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>proprietà viene impostata inizialmente il valore di `text` parametro.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>"
  syntax:
    content: public SrgsToken (string text);
    parameters:
    - id: text
      type: System.String
      description: "Il testo della nuova <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsToken&quot;> </xref> istanza della classe."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>text</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>text</code>è vuoto."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
  id: Display
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  langs:
  - csharp
  name: Display
  nameWithType: SrgsToken.Display
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Ottiene o imposta il formato di visualizzazione del testo da leggere."
  remarks: "Sebbene in genere rappresentano lo stesso valore, il modulo di visualizzazione potrebbe essere diverso da <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>form per una parola o frase in un <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> </xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A> Ad esempio, il modulo di visualizzazione può essere un acronimo, ad esempio &quot;USA&quot;, mentre il testo che verrà letta e a cui il <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>si applica, è &quot;Stati Uniti d&quot;America&quot;.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>"
  syntax:
    content: public string Display { get; set; }
    return:
      type: System.String
      description: "Una rappresentazione del token che deve essere visualizzata."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Viene effettuato un tentativo di impostare su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Viene effettuato un tentativo di assegnare una stringa vuota alla visualizzazione."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
  id: Pronunciation
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  langs:
  - csharp
  name: Pronunciation
  nameWithType: SrgsToken.Pronunciation
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Ottiene o imposta la stringa che definisce la pronuncia per il token."
  remarks: "Telefoni sono lettere o simboli che descrivono i suoni di riconoscimento vocale. Speech supporta tre alfabeto fonetico per specificare la pronuncia personalizzata: il Universal Phone impostare (UPS), il set di API riconoscimento vocale (SAPI) telefono e all&quot;alfabeto fonetico internazionale (IPA). I telefoni in pronuncia specificati devono corrispondere l&quot;alfabeto fonetico specificato <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A> Vedere [dizionari e caratteri dell&quot;alfabeto fonetico](http://msdn.microsoft.com/en-us/435e3c6f-6834-4e5a-b0f6-c17b2275dc51) per ulteriori informazioni.       Indica il telefono specificato in pronuncia come il contenuto di <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>deve risultare significativi per il riconoscimento ha esito positivo.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>  Il motore di riconoscimento vocale utilizza la pronuncia specificata in pronuncia per associare input vocale e restituisce la stringa contenuta <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>nel risultato del riconoscimento.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>       Se il telefono non è delimitati da spazi o la stringa specificata contiene un numero di telefono non riconosciuto, il motore di riconoscimento non riconosce la pronuncia specificata come una pronuncia valida della parola contenuta da <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>       Pronuncia specificata in pronuncia hanno la precedenza su pronunce specificati in dizionari associate a una grammatica o di un motore di riconoscimento. Inoltre, la pronuncia nella proprietà pronuncia si applica solo a singola occorrenza della parola o una frase contenuta da <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>"
  example:
  - "The grammar in the following example contains slang words and also has an uncommon word: \"whatchamacallit\". Adding a custom, inline pronunciation using the Pronunciation property of the <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> class can improve the accuracy of recognition for the word \"whatchamacallit\" as well as for the entire phrase that contains it. The example uses phones from the Microsoft Universal Phone Set (UPS) to define the custom pronunciations.  \n  \n```  \nusing System;  \nusing System.Speech.Recognition;  \nusing System.Speech.Recognition.SrgsGrammar;  \n  \nnamespace SampleRecognition  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n  \n    // Initialize an instance of the in-process recognizer.  \n    {  \n      using (SpeechRecognitionEngine recognizer =  \n         new SpeechRecognitionEngine(new System.Globalization.CultureInfo(\"en-US\")))  \n      {  \n  \n        // Build the SrgsOneOf objects with alternative choices for the slang phrase.  \n        SrgsOneOf gimme = new SrgsOneOf(  \n          new string[] { \"give me\", \"gimme\", \"hand me\", \"ha'me\" });  \n        SrgsOneOf the = new SrgsOneOf(new string[] { \"the\", \"duh\" });  \n  \n        // Build the one-of element that contains the pronunciation.  \n        SrgsItem thing = new SrgsItem(\"thingamajig\");  \n        SrgsItem whatcha = new SrgsItem();  \n        SrgsToken callit = new SrgsToken(\"whatchamacallit\");  \n        callit.Pronunciation = \"W AE T CH AE M AE K AA L IH T\";  \n        whatcha.Add(callit);  \n        SrgsOneOf what = new SrgsOneOf(new SrgsItem[] {thing, whatcha});  \n  \n        // Create the rule from the SrgsOneOf objects.  \n        SrgsRule slangRule = new SrgsRule(\"slang\", gimme, the, what);  \n  \n        // Build an SrgsDocument object from the rule and set the phonetic alphabet.  \n        SrgsDocument tokenPron = new SrgsDocument(slangRule);  \n        tokenPron.PhoneticAlphabet = SrgsPhoneticAlphabet.Ups;  \n  \n        // Create a Grammar object from the SrgsDocument and load it to the recognizer.  \n        Grammar g_Slang = new Grammar(tokenPron);  \n        g_Slang.Name = (\"Slang Pronunciation\");  \n        recognizer.LoadGrammarAsync(g_Slang);  \n  \n        // Configure recognizer input.  \n        recognizer.SetInputToDefaultAudioDevice();  \n  \n        // Attach a handler for the SpeechRecognized event.  \n        recognizer.SpeechRecognized +=   \n          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  \n  \n        // Start asynchronous recognition.  \n        recognizer.RecognizeAsync();  \n        Console.WriteLine(\"Starting asynchronous recognition...\");  \n  \n        // Keep the console window open.  \n        Console.ReadLine();  \n      }  \n    }  \n  \n    // Handle the SpeechRecognized event.  \n    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n    {  \n      Console.WriteLine(\"Recognized phrase: \" + e.Result.Text);  \n      Console.WriteLine(\"Confidence: \" + e.Result.Confidence);  \n      Console.WriteLine(\"  Word summary: \");  \n      foreach (RecognizedWordUnit word in e.Result.Words)  \n      {  \n        Console.WriteLine(  \n          \"    Lexical form ({1})\" +  \n          \" Pronunciation ({0})\" +  \n          \" Confidence ({2})\",  \n          word.Pronunciation, word.LexicalForm, word.Confidence);  \n      }  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public string Pronunciation { get; set; }
    return:
      type: System.String
      description: "Restituisce una stringa contenente i telefoni dell&quot;alfabeto fonetico specificato <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet*>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet*>"
  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Viene effettuato un tentativo di impostare pronuncia <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Viene effettuato un tentativo di assegnare una stringa vuota per la pronuncia."
  platform:
  - net462
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
  id: Text
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  langs:
  - csharp
  name: Text
  nameWithType: SrgsToken.Text
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition.SrgsGrammar
  summary: "Ottiene o imposta la forma scritta della parola che deve essere pronunciata."
  remarks: "Sebbene in genere rappresentano lo stesso valore, il formato di testo potrebbe essere diverso da <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>form per una parola o frase in un <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken> </xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A> Ad esempio, il <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>modulo può essere un acronimo, ad esempio &quot;USA&quot;, mentre il testo che verrà letta e a cui il <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>si applica, è &quot;Stati Uniti d&quot;America&quot;.</xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>       Il valore predefinito per la proprietà Text è una stringa vuota, &quot;&quot;."
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "Il testo contenuto all&quot;interno di <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsToken&quot;> </xref> istanza della classe."
  overload: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Viene effettuato un tentativo di impostare testo <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Viene effettuato un tentativo di assegnare una stringa vuota al testo."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Viene effettuato un tentativo di assegnare una stringa che contiene un segno di virgolette (&quot;) al testo."
  platform:
  - net462
references:
- uid: System.Speech.Recognition.SrgsGrammar.SrgsElement
  isExternal: false
  name: System.Speech.Recognition.SrgsGrammar.SrgsElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: SrgsToken(String)
  nameWithType: SrgsToken.SrgsToken(String)
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.SrgsToken(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Display
  nameWithType: SrgsToken.Display
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Pronunciation
  nameWithType: SrgsToken.Pronunciation
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Text
  nameWithType: SrgsToken.Text
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: SrgsToken
  nameWithType: SrgsToken.SrgsToken
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Display*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Display
  nameWithType: SrgsToken.Display
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Pronunciation
  nameWithType: SrgsToken.Pronunciation
- uid: System.Speech.Recognition.SrgsGrammar.SrgsToken.Text*
  parent: System.Speech.Recognition.SrgsGrammar.SrgsToken
  isExternal: false
  name: Text
  nameWithType: SrgsToken.Text
