### YamlMime:ManagedReference
items:
- uid: System.Configuration.Provider.ProviderBase
  id: ProviderBase
  children:
  - System.Configuration.Provider.ProviderBase.#ctor
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  langs:
  - csharp
  name: ProviderBase
  nameWithType: ProviderBase
  fullName: System.Configuration.Provider.ProviderBase
  type: Class
  summary: "Fornisce un&quot;implementazione di base per il modello di provider estendibile."
  remarks: "Il modello di provider deve incapsulare tutti o parte delle funzionalità di più funzionalità di ASP.NET, ad esempio l&quot;appartenenza, profili e la configurazione protetta. Consente allo sviluppatore di creare classi di supporto che forniscono più implementazioni della funzionalità incapsulata. Inoltre, gli sviluppatori possono scrivere nuove funzionalità utilizzando il modello di provider. Può trattarsi di un metodo efficace per supportare più implementazioni di funzionalità di una funzionalità senza duplicazione del codice della funzione o riscrivere il livello di applicazione, se il metodo di implementazione deve essere modificato.       La classe ProviderBase è semplice, contenente solo alcuni metodi di base e le proprietà comuni a tutti i provider. I provider di funzionalità specifiche (ad esempio <xref:System.Web.Security.MembershipProvider>) ereditare ProviderBase e stabilire i metodi e proprietà che deve supportare il provider specifico dell&quot;implementazione di tale funzione.</xref:System.Web.Security.MembershipProvider> Il provider specifico dell&quot;implementazione (ad esempio <xref:System.Web.Security.SqlMembershipProvider>) a sua volta eredita da un provider di specifiche funzionalità (in questo caso, <xref:System.Web.Security.MembershipProvider>).</xref:System.Web.Security.MembershipProvider> </xref:System.Web.Security.SqlMembershipProvider>       L&quot;aspetto più importante del modello di provider è che l&quot;implementazione (ad esempio, se i dati sono persistenti in un file di testo o in un database) sia indipendente dal codice dell&quot;applicazione. Il tipo di provider specifico dell&quot;implementazione per la funzionalità specificata è definito in un file di configurazione. Il provider a livello di funzionalità, quindi legge il tipo dal file di configurazione e opera come una factory per il codice di funzionalità. Lo sviluppatore dell&quot;applicazione può quindi utilizzare le classi della funzione nel codice dell&quot;applicazione. Il tipo di implementazione può essere lo swapping nel file di configurazione, eliminando la necessità di riscrivere il codice per adattare la metodologia di implementazione diversa.       I provider inclusi in ASP.NET sono principalmente astrazioni di implementazioni di persistenza di dati per caratteristiche quali profili o l&quot;appartenenza. Tuttavia, questo modello applicabile a qualsiasi altro tipo di funzionalità che può essere astratto e implementato in diversi modi."
  example:
  - For an example of how to use the ProviderBase class, see [Profile Provider Implementation Example](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract class ProviderBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.#ctor
  id: '#ctor'
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: ProviderBase()
  nameWithType: ProviderBase.ProviderBase()
  fullName: System.Configuration.Provider.ProviderBase.ProviderBase()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Configuration.Provider.ProviderBase&quot;> </xref> classe."
  syntax:
    content: protected ProviderBase ();
    parameters: []
  overload: System.Configuration.Provider.ProviderBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.Description
  id: Description
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: Description
  nameWithType: ProviderBase.Description
  fullName: System.Configuration.Provider.ProviderBase.Description
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Ottiene una descrizione breve e descrittiva adatte per la visualizzazione in strumenti di amministrazione o altre interfacce utente (UI)."
  remarks: "Se un provider configurato non fornisce una descrizione, il valore di <xref:System.Configuration.Provider.ProviderBase.Name%2A>proprietà viene restituita come valore predefinito.</xref:System.Configuration.Provider.ProviderBase.Name%2A>"
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "Una breve descrizione di facile comprensione adatta per la visualizzazione in strumenti di amministrazione o altre interfacce utente."
  overload: System.Configuration.Provider.ProviderBase.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: ProviderBase.Initialize(String,NameValueCollection)
  fullName: System.Configuration.Provider.ProviderBase.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Inizializza il provider."
  remarks: "L&quot;implementazione della classe base traccia internamente il numero di volte in cui il provider `Initialize` metodo è stato chiamato. Se un provider viene inizializzato più volte, una `InvalidOperationException` viene generata un&quot;eccezione indicante che il provider è già inizializzato.       Poiché la maggior parte delle funzionalità provider chiamata inizializzare prima di eseguire l&quot;inizializzazione specifica del provider, questo metodo è una posizione centrale per la prevenzione inizializzato due volte."
  example:
  - For an example of how to use Initialize, see [Profile Provider Implementation Example](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public virtual void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "Il nome descrittivo del provider."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "Raccolta delle coppie nome/valore che rappresenta gli attributi specifici del provider specificati nella configurazione per questo provider."
  overload: System.Configuration.Provider.ProviderBase.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il nome del provider è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nome del provider ha una lunghezza pari a zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Viene effettuato un tentativo di chiamare Initialize su un provider dopo che il provider è già stato inizializzato."
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.Name
  id: Name
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: Name
  nameWithType: ProviderBase.Name
  fullName: System.Configuration.Provider.ProviderBase.Name
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Ottiene il nome descrittivo utilizzato per fare riferimento al provider durante la configurazione."
  remarks: 'Il modello consigliato per questa stringa è: [*Provider Creator*] [*tipo di implementazione*] [*funzionalità*] Provider. Sebbene il <xref:System.Configuration.Provider.ProviderBase.Description%2A>proprietà offre inoltre una descrizione, la proprietà nome viene utilizzata come identificatore per il provider.</xref:System.Configuration.Provider.ProviderBase.Description%2A>'
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "Il nome descrittivo utilizzato per fare riferimento al provider durante la configurazione."
  overload: System.Configuration.Provider.ProviderBase.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Configuration.Provider.ProviderBase.#ctor
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: ProviderBase()
  nameWithType: ProviderBase.ProviderBase()
  fullName: System.Configuration.Provider.ProviderBase.ProviderBase()
- uid: System.Configuration.Provider.ProviderBase.Description
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Description
  nameWithType: ProviderBase.Description
  fullName: System.Configuration.Provider.ProviderBase.Description
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: ProviderBase.Initialize(String,NameValueCollection)
  fullName: System.Configuration.Provider.ProviderBase.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Configuration.Provider.ProviderBase.Name
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Name
  nameWithType: ProviderBase.Name
  fullName: System.Configuration.Provider.ProviderBase.Name
- uid: System.Configuration.Provider.ProviderBase.#ctor*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: ProviderBase
  nameWithType: ProviderBase.ProviderBase
- uid: System.Configuration.Provider.ProviderBase.Description*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Description
  nameWithType: ProviderBase.Description
- uid: System.Configuration.Provider.ProviderBase.Initialize*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Initialize
  nameWithType: ProviderBase.Initialize
- uid: System.Configuration.Provider.ProviderBase.Name*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Name
  nameWithType: ProviderBase.Name
