### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.OptionalReliableSession
  id: OptionalReliableSession
  children:
  - System.ServiceModel.OptionalReliableSession.#ctor
  - System.ServiceModel.OptionalReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)
  - System.ServiceModel.OptionalReliableSession.Enabled
  langs:
  - csharp
  name: OptionalReliableSession
  nameWithType: OptionalReliableSession
  fullName: System.ServiceModel.OptionalReliableSession
  type: Class
  summary: "Consente di accedere agevolmente se una sessione affidabile è abilitato quando si utilizza una delle associazioni predefinite in cui è facoltativo."
  remarks: "La possibilità di attivare una sessione affidabile è disponibile per tre delle associazioni fornite dal sistema. Una sessione affidabile è:: facoltativa (disattivata per impostazione predefinita) con <xref:System.ServiceModel.NetTcpBinding>e <xref:System.ServiceModel.WSHttpBinding>e - necessario (e pertanto always on) con <xref:System.ServiceModel.WSDualHttpBinding>.</xref:System.ServiceModel.WSDualHttpBinding> </xref:System.ServiceModel.WSHttpBinding> </xref:System.ServiceModel.NetTcpBinding>"
  example:
  - "The following example shows how to create a new reliable session, access and change the default values of that session.  \n  \n [!code-vb[S_UEOptionalReliableSession#0](~/add/codesnippet/visualbasic/t-system.servicemodel.op_2_1.vb)]\n [!code-cs[S_UEOptionalReliableSession#0](~/add/codesnippet/csharp/t-system.servicemodel.op_2_1.cs)]"
  syntax:
    content: 'public class OptionalReliableSession : System.ServiceModel.ReliableSession'
  inheritance:
  - System.Object
  - System.ServiceModel.ReliableSession
  implements: []
  inheritedMembers:
  - System.ServiceModel.ReliableSession.InactivityTimeout
  - System.ServiceModel.ReliableSession.Ordered
  platform:
  - net462
- uid: System.ServiceModel.OptionalReliableSession.#ctor
  id: '#ctor'
  parent: System.ServiceModel.OptionalReliableSession
  langs:
  - csharp
  name: OptionalReliableSession()
  nameWithType: OptionalReliableSession.OptionalReliableSession()
  fullName: System.ServiceModel.OptionalReliableSession.OptionalReliableSession()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.OptionalReliableSession&quot;> </xref> classe."
  syntax:
    content: public OptionalReliableSession ();
    parameters: []
  overload: System.ServiceModel.OptionalReliableSession.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.OptionalReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)
  id: '#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)'
  parent: System.ServiceModel.OptionalReliableSession
  langs:
  - csharp
  name: OptionalReliableSession(ReliableSessionBindingElement)
  nameWithType: OptionalReliableSession.OptionalReliableSession(ReliableSessionBindingElement)
  fullName: System.ServiceModel.OptionalReliableSession.OptionalReliableSession(ReliableSessionBindingElement)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.OptionalReliableSession&quot;> </xref> classe da un elemento di associazione di sessione affidabile."
  syntax:
    content: public OptionalReliableSession (System.ServiceModel.Channels.ReliableSessionBindingElement reliableSessionBindingElement);
    parameters:
    - id: reliableSessionBindingElement
      type: System.ServiceModel.Channels.ReliableSessionBindingElement
      description: "Il <xref href=&quot;System.ServiceModel.Channels.ReliableSessionBindingElement&quot;> </xref> il cui valore della proprietà viene utilizzato per inizializzare la sessione affidabile."
  overload: System.ServiceModel.OptionalReliableSession.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>reliableSessionBindingElement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.OptionalReliableSession.Enabled
  id: Enabled
  parent: System.ServiceModel.OptionalReliableSession
  langs:
  - csharp
  name: Enabled
  nameWithType: OptionalReliableSession.Enabled
  fullName: System.ServiceModel.OptionalReliableSession.Enabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ottiene o imposta un valore che indica se la sessione affidabile è abilitata."
  remarks: "La possibilità di attivare una sessione affidabile è disponibile per tre delle associazioni fornite dal sistema. Una sessione affidabile è:: facoltativa (disattivata per impostazione predefinita) e <xref:System.ServiceModel.NetTcpBinding> <xref:System.ServiceModel.WSHttpBinding>.</xref:System.ServiceModel.WSHttpBinding> </xref:System.ServiceModel.NetTcpBinding>      -Required (e pertanto sempre attiva) con <xref:System.ServiceModel.WSDualHttpBinding>.</xref:System.ServiceModel.WSDualHttpBinding>"
  example:
  - "The following example shows how to create a new reliable session, access and change the default values of that session.  \n  \n [!code-vb[S_UEOptionalReliableSession#0](~/add/codesnippet/visualbasic/p-system.servicemodel.op_3_1.vb)]\n [!code-cs[S_UEOptionalReliableSession#0](~/add/codesnippet/csharp/p-system.servicemodel.op_3_1.cs)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la sessione affidabile è abilitata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito dipende dall&quot;associazione in uso."
  overload: System.ServiceModel.OptionalReliableSession.Enabled*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.ReliableSession
  isExternal: false
  name: System.ServiceModel.ReliableSession
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.OptionalReliableSession.#ctor
  parent: System.ServiceModel.OptionalReliableSession
  isExternal: false
  name: OptionalReliableSession()
  nameWithType: OptionalReliableSession.OptionalReliableSession()
  fullName: System.ServiceModel.OptionalReliableSession.OptionalReliableSession()
- uid: System.ServiceModel.OptionalReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)
  parent: System.ServiceModel.OptionalReliableSession
  isExternal: false
  name: OptionalReliableSession(ReliableSessionBindingElement)
  nameWithType: OptionalReliableSession.OptionalReliableSession(ReliableSessionBindingElement)
  fullName: System.ServiceModel.OptionalReliableSession.OptionalReliableSession(ReliableSessionBindingElement)
- uid: System.ServiceModel.Channels.ReliableSessionBindingElement
  parent: System.ServiceModel.Channels
  isExternal: false
  name: ReliableSessionBindingElement
  nameWithType: ReliableSessionBindingElement
  fullName: System.ServiceModel.Channels.ReliableSessionBindingElement
- uid: System.ServiceModel.OptionalReliableSession.Enabled
  parent: System.ServiceModel.OptionalReliableSession
  isExternal: false
  name: Enabled
  nameWithType: OptionalReliableSession.Enabled
  fullName: System.ServiceModel.OptionalReliableSession.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.OptionalReliableSession.#ctor*
  parent: System.ServiceModel.OptionalReliableSession
  isExternal: false
  name: OptionalReliableSession
  nameWithType: OptionalReliableSession.OptionalReliableSession
- uid: System.ServiceModel.OptionalReliableSession.Enabled*
  parent: System.ServiceModel.OptionalReliableSession
  isExternal: false
  name: Enabled
  nameWithType: OptionalReliableSession.Enabled
