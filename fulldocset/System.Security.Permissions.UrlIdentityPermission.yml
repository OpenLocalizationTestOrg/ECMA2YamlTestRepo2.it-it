### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.UrlIdentityPermission
  id: UrlIdentityPermission
  children:
  - System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)
  - System.Security.Permissions.UrlIdentityPermission.Copy
  - System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.UrlIdentityPermission.ToXml
  - System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)
  - System.Security.Permissions.UrlIdentityPermission.Url
  langs:
  - csharp
  name: UrlIdentityPermission
  nameWithType: UrlIdentityPermission
  fullName: System.Security.Permissions.UrlIdentityPermission
  type: Class
  summary: "Definisce l&quot;autorizzazione di identità per l&quot;URL da cui ha origine il codice. Questa classe non può essere ereditata."
  remarks: "The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file. For example, http://www.fourthcoffee.com/process/grind.htm is a complete URL.  \n  \n URLs can be matched exactly or by a wildcard in the final position, for example: http://www.fourthcoffee.com/process/*. URLs can also contain a wildcard (\"\\*\") prefix at the dot delimiter. For example, the URL name string http://www.fourthcoffee.com/process/grind.htm/ is a subset of http://\\*.fourthcoffee.com/process/grind.htm/ and http://\\*.com/process/grind.htm/.  \n  \n> [!IMPORTANT]\n>  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used.  \n>   \n>  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. That is, a demand for an identity always succeeds, regardless of the identity of the assembly, if the assembly has been granted full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \n  \n In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \n  \n> [!NOTE]\n>  In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!NOTE]\n>  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class UrlIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: UrlIdentityPermission(PermissionState)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;> </xref> classe con l&quot;oggetto specificato <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  remarks: "Consente di creare un con restrizioni (`None`) o `Unrestricted` autorizzazione.      > [!NOTE] > Versioni in .NET Framework 1.0 e 1.1, le autorizzazioni di identità non possono avere un <xref:System.Security.Permissions.PermissionState>valore dello stato di autorizzazione.</xref:System.Security.Permissions.PermissionState> A partire da .NET Framework versione 2.0, le autorizzazioni di identità possono avere qualsiasi valore di stato di autorizzazione. Ciò significa che nelle versioni 2.0 e versioni successive, le autorizzazioni di identità hanno lo stesso comportamento delle autorizzazioni che implementano il <xref:System.Security.Permissions.IUnrestrictedPermission>interfaccia.</xref:System.Security.Permissions.IUnrestrictedPermission> Vale a dire, una richiesta per un&quot;identità sempre ha esito positivo, indipendentemente dall&quot;identità dell&quot;assembly, se l&quot;assembly è stata concessa l&quot;attendibilità totale.       Nelle versioni di .NET Framework 1.0 e 1.1, le richieste per le autorizzazioni di identità sono valide, anche quando l&quot;assembly chiamante sia completamente attendibile. Vale a dire, anche se l&quot;assembly chiamante dispone di attendibilità, una richiesta per un&quot;autorizzazione di identità ha esito negativo se l&quot;assembly non soddisfa i criteri richiesti. A partire da .NET Framework versione 2.0, le richieste di autorizzazioni di identità sono effettive se l&quot;assembly chiamante dispone di attendibilità totale. Ciò assicura la coerenza per tutte le autorizzazioni, eliminando il trattamento delle autorizzazioni di identità come un caso speciale."
  example:
  - "The following example shows the use of the UrlIdentityPermission constructor.  \n  \n [!code-cpp[System.Security.Permissions.UrlIdentityPermission#7](~/add/codesnippet/cpp/d852dbe8-5170-4e24-980e-_1.cpp)]\n [!code-cs[System.Security.Permissions.UrlIdentityPermission#7](~/add/codesnippet/csharp/d852dbe8-5170-4e24-980e-_1.cs)]\n [!code-vb[System.Security.Permissions.UrlIdentityPermission#7](~/add/codesnippet/visualbasic/d852dbe8-5170-4e24-980e-_1.vb)]"
  syntax:
    content: public UrlIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Uno del <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> valori."
  overload: System.Security.Permissions.UrlIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> state </code> parametro non è un valore valido di <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: UrlIdentityPermission(String)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(String)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;> </xref> classe per rappresentare l&quot;identità dell&quot;URL descritta da <code> site </code>."
  remarks: "The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and the file, for example: http://www.fourthcoffee.com/process/grind.htm/.  \n  \n URLs can be matched exactly or by a wildcard in the final position, for example: http://www.fourthcoffee.com/process/*. URLs can also contain a wildcard (\"\\*\") prefix at the dot delimiter. For example, the URL name string http://www.fourthcoffee.com/process/grind.htm/ is a subset of http://\\*.fourthcoffee.com/process/grind.htm/ and http://\\*.com/process/grind.htm/.  \n  \n> [!NOTE]\n>  Starting with the .NET Framework version 2.0, for performance reasons, an invalid URL does not cause an argument exception at the time the new class instance is created.  The argument exception will occur when one of the set operations (Union, Intersect, or IsSubsetOf) is executed.  A demand on the permission causes <xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> to be called by the security infrastructure. The demand will fail because of the argument exception, resulting in a <xref:System.Security.SecurityException> being thrown. In this case, the original <xref:System.ArgumentException> exception will not be seen."
  example:
  - "The following example shows the use of the UrlIdentityPermission constructor.  \n  \n [!code-cpp[System.Security.Permissions.UrlIdentityPermission#8](~/add/codesnippet/cpp/m-system.security.permis_0_1.cpp)]\n [!code-cs[System.Security.Permissions.UrlIdentityPermission#8](~/add/codesnippet/csharp/m-system.security.permis_0_1.cs)]\n [!code-vb[System.Security.Permissions.UrlIdentityPermission#8](~/add/codesnippet/visualbasic/m-system.security.permis_0_1.vb)]"
  syntax:
    content: public UrlIdentityPermission (string site);
    parameters:
    - id: site
      type: System.String
      description: "Un&quot;espressione di URL o un carattere jolly."
  overload: System.Security.Permissions.UrlIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>site</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "La lunghezza di <code> site </code> parametro è uguale a zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "L&quot;URL, directory o parte di sito la <code> site </code> parametro non è valido."
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: UrlIdentityPermission.Copy()
  fullName: System.Security.Permissions.UrlIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea e restituisce una copia identica dell&quot;autorizzazione corrente."
  remarks: "Una copia di un&quot;autorizzazione rappresenta lo stesso accesso alle risorse dell&quot;autorizzazione originale."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Una copia dell&quot;autorizzazione corrente."
  overload: System.Security.Permissions.UrlIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: UrlIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.UrlIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ricostruisce un&quot;autorizzazione con uno stato specificato da una codifica XML."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "La codifica XML da usare per ricostruire l&quot;autorizzazione."
  overload: System.Security.Permissions.UrlIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> esd </code> parametro non è un elemento di autorizzazione valido.       - o - <code> esd </code> il numero di versione del parametro non è valido."
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: UrlIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea e restituisce un&quot;autorizzazione che rappresenta l&quot;intersezione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata."
  remarks: "L&quot;intersezione delle due autorizzazioni è un&quot;autorizzazione che descrive l&quot;accesso per l&quot;URL che descrivono in comune. Solo una richiesta che supera entrambe le autorizzazioni originali passerà l&quot;intersezione. Ad esempio, l&quot;intersezione di un&quot;autorizzazione che rappresenta l&quot;accesso a http://www.fourthcoffee.com/process/grind.htm e un&quot;autorizzazione che rappresenta l&quot;accesso a http://www.fourthcoffee.com/* è un&quot;autorizzazione che rappresenta l&quot;accesso a http://www.fourthcoffee.com/process/grind.htm.       <xref:System.Security.Permissions.UrlIdentityPermission>supporta set di operazioni (<xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>, Intersect, e <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) solo quando l&quot;autorizzazione corrente è uguale all&quot;oggetto di autorizzazione specificata o quando una delle autorizzazioni viene utilizzato il carattere jolly (&quot;*&quot;).</xref:System.Security.Permissions.UrlIdentityPermission.Union%2A> </xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> </xref:System.Security.Permissions.UrlIdentityPermission>"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da intersecare con l&quot;autorizzazione corrente. Deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Security.IPermission
      description: "Nuova autorizzazione che rappresenta l&quot;intersezione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata. La nuova autorizzazione è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se l&quot;intersezione è vuota."
  overload: System.Security.Permissions.UrlIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> target </code> parametro non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e non è dello stesso tipo dell&quot;autorizzazione corrente.       - oppure - proprietà l&quot;Url non è un URL valido."
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: UrlIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Determina se l&quot;autorizzazione corrente è un subset dell&quot;autorizzazione specificata."
  remarks: "Se l&quot;autorizzazione corrente identifica l&quot;accesso a un URL che è interamente contenuto l&quot;autorizzazione specificata, l&quot;autorizzazione corrente è un subset dell&quot;autorizzazione specificata. Ad esempio, un&quot;autorizzazione che rappresenta l&quot;accesso a http://www.fourthcoffee.com/process/grind.htm è un subset di un&quot;autorizzazione che rappresenta l&quot;accesso a http://www.fourthcoffee.com/*. Se questo metodo restituisce `true`, l&quot;autorizzazione corrente non rappresenta un accesso alla risorsa protetta rispetto a quello dell&quot;autorizzazione specificata.       <xref:System.Security.Permissions.UrlIdentityPermission>supporta set di operazioni (IsSubsetOf, <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>, e <xref:System.Security.Permissions.UrlIdentityPermission.Union%2A>) solo quando l&quot;autorizzazione corrente è uguale all&quot;autorizzazione specificata o quando una delle autorizzazioni viene utilizzato il carattere jolly (&quot;*&quot;).</xref:System.Security.Permissions.UrlIdentityPermission.Union%2A> </xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A> </xref:System.Security.Permissions.UrlIdentityPermission>"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da testare per la relazione del subset. Questa autorizzazione deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;autorizzazione corrente è un subset dell&quot;autorizzazione specificata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> target </code> parametro non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e non è dello stesso tipo dell&quot;autorizzazione corrente.       - oppure - proprietà l&quot;Url non è un URL valido."
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: UrlIdentityPermission.ToXml()
  fullName: System.Security.Permissions.UrlIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea una codifica XML dell&quot;autorizzazione e del relativo stato corrente."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Codifica XML dell&quot;autorizzazione, che include le informazioni sullo stato."
  overload: System.Security.Permissions.UrlIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: UrlIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea un&quot;autorizzazione che rappresenta l&quot;unione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata."
  remarks: "Il risultato di una chiamata al metodo di unione è un&quot;autorizzazione che rappresenta l&quot;accesso all&quot;URL come rappresentato dall&quot;autorizzazione corrente, nonché l&quot;accesso all&quot;URL come rappresentato dall&quot;autorizzazione specificata.       Di <xref:System.Security.Permissions.UrlIdentityPermission>classe supporta le operazioni set <xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A>, <xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A>, unione e) solo quando l&quot;autorizzazione corrente è uguale all&quot;autorizzazione specificata oppure quando una delle autorizzazioni viene utilizzato il carattere jolly (&quot;*&quot;) e uno è un subset di altra.</xref:System.Security.Permissions.UrlIdentityPermission.Intersect%2A> </xref:System.Security.Permissions.UrlIdentityPermission.IsSubsetOf%2A> </xref:System.Security.Permissions.UrlIdentityPermission>"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da combinare con l&quot;autorizzazione corrente. Deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Security.IPermission
      description: "Nuova autorizzazione che rappresenta l&quot;unione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata."
  overload: System.Security.Permissions.UrlIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> target </code> parametro non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e non è dello stesso tipo dell&quot;autorizzazione corrente.       - o - <xref:System.Security.Permissions.UrlIdentityPermission.Url*>proprietà non è un URL valido.</xref:System.Security.Permissions.UrlIdentityPermission.Url*>       - oppure - le due autorizzazioni non sono uguali e uno non è un subset di altra."
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermission.Url
  id: Url
  parent: System.Security.Permissions.UrlIdentityPermission
  langs:
  - csharp
  name: Url
  nameWithType: UrlIdentityPermission.Url
  fullName: System.Security.Permissions.UrlIdentityPermission.Url
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ottiene o imposta un URL che rappresenta l&quot;identità del codice Internet."
  remarks: "Viene considerato l&quot;URL completo, incluso il protocollo HTTP, HTTPS, FTP e il file, ad esempio: http://www.fourthcoffee.com/process/grind.htm/.       URL può corrispondere esattamente o a un carattere jolly nella posizione finale, ad esempio: http://www.fourthcoffee.com/process/ *."
  syntax:
    content: public string Url { get; set; }
    return:
      type: System.String
      description: "Un URL che rappresenta l&quot;identità del codice Internet."
  overload: System.Security.Permissions.UrlIdentityPermission.Url*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Impossibile recuperare l&quot;URL perché contiene un&quot;identità ambigua."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: UrlIdentityPermission(PermissionState)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor(System.String)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: UrlIdentityPermission(String)
  nameWithType: UrlIdentityPermission.UrlIdentityPermission(String)
  fullName: System.Security.Permissions.UrlIdentityPermission.UrlIdentityPermission(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.UrlIdentityPermission.Copy
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: UrlIdentityPermission.Copy()
  fullName: System.Security.Permissions.UrlIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.UrlIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: UrlIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.UrlIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.UrlIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: UrlIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: UrlIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.UrlIdentityPermission.ToXml
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: UrlIdentityPermission.ToXml()
  fullName: System.Security.Permissions.UrlIdentityPermission.ToXml()
- uid: System.Security.Permissions.UrlIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: UrlIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.UrlIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.UrlIdentityPermission.Url
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Url
  nameWithType: UrlIdentityPermission.Url
  fullName: System.Security.Permissions.UrlIdentityPermission.Url
- uid: System.Security.Permissions.UrlIdentityPermission.#ctor*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: UrlIdentityPermission
  nameWithType: UrlIdentityPermission.UrlIdentityPermission
- uid: System.Security.Permissions.UrlIdentityPermission.Copy*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: UrlIdentityPermission.Copy
- uid: System.Security.Permissions.UrlIdentityPermission.FromXml*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: UrlIdentityPermission.FromXml
- uid: System.Security.Permissions.UrlIdentityPermission.Intersect*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: UrlIdentityPermission.Intersect
- uid: System.Security.Permissions.UrlIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: UrlIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.UrlIdentityPermission.ToXml*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: UrlIdentityPermission.ToXml
- uid: System.Security.Permissions.UrlIdentityPermission.Union*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Union
  nameWithType: UrlIdentityPermission.Union
- uid: System.Security.Permissions.UrlIdentityPermission.Url*
  parent: System.Security.Permissions.UrlIdentityPermission
  isExternal: false
  name: Url
  nameWithType: UrlIdentityPermission.Url
