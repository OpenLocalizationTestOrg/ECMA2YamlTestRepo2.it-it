### YamlMime:ManagedReference
items:
- uid: System.Web.VirtualPathUtility
  id: VirtualPathUtility
  children:
  - System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)
  - System.Web.VirtualPathUtility.Combine(System.String,System.String)
  - System.Web.VirtualPathUtility.GetDirectory(System.String)
  - System.Web.VirtualPathUtility.GetExtension(System.String)
  - System.Web.VirtualPathUtility.GetFileName(System.String)
  - System.Web.VirtualPathUtility.IsAbsolute(System.String)
  - System.Web.VirtualPathUtility.IsAppRelative(System.String)
  - System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)
  - System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)
  - System.Web.VirtualPathUtility.ToAbsolute(System.String)
  - System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)
  - System.Web.VirtualPathUtility.ToAppRelative(System.String)
  - System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)
  langs:
  - csharp
  name: VirtualPathUtility
  nameWithType: VirtualPathUtility
  fullName: System.Web.VirtualPathUtility
  type: Class
  summary: "Fornisce metodi di utilità per le operazioni comuni percorso virtuale."
  remarks: "The VirtualPathUtility class provides utility methods for common operations involving virtual paths. For ASP.NET server controls and server code, virtual paths using the Web application root operator, the tilde (~), commonly are used instead of relative and absolute paths. For more information, see [ASP.NET Web Project Paths](~/add/includes/ajax-current-ext-md.md).  \n  \n Use the VirtualPathUtility class when you need to convert application-relative paths to absolute virtual paths, as might be the case in developing a custom Web service handler.  \n  \n An absolute virtual path starts with the literal slash mark (/). A relative virtual path is relative to the application root directory, if it is just a tilde (~) or starts with the tilde and a double backslash (~\\\\\\\\) or the tilde and a slash mark (~/). Making a virtual path relative makes the path independent of the application.  \n  \n The virtual directory for the application can be obtained from the <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> and <xref:System.Web.HttpRequest.ApplicationPath%2A> properties.  \n  \n> [!NOTE]\n>  The VirtualPathUtility class is not intended for security or canonicalization purposes. For more information about Web application security, see [Overview of Web Application Security Threats](~/add/includes/ajax-current-ext-md.md). For generic URL processing functionality, see <xref:System.Uri>."
  example:
  - "The following code example demonstrates how to use the VirtualPathUtility class and some of its methods. First, the <xref:System.Web.HttpRequest.FilePath%2A> property generates the virtual path to the Web page. The <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, and <xref:System.Web.VirtualPathUtility.GetDirectory%2A> methods return information about the virtual path. Next, the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property generates a virtual path of the current request, which might be different from the <xref:System.Web.HttpRequest.FilePath%2A> property, if a <xref:System.Web.HttpResponse.Redirect%2A> method was called. The <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, and <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> methods return information about the virtual path.  \n  \n [!code-vb[System.Web.VirtualPathUtility#1](~/add/codesnippet/visualbasic/t-system.web.virtualpath_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#1](~/add/codesnippet/csharp/t-system.web.virtualpath_1.aspx)]"
  syntax:
    content: public static class VirtualPathUtility
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)
  id: AppendTrailingSlash(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: AppendTrailingSlash(String)
  nameWithType: VirtualPathUtility.AppendTrailingSlash(String)
  fullName: System.Web.VirtualPathUtility.AppendTrailingSlash(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge la barra (/) alla fine del percorso virtuale, se non ne esiste già."
  remarks: "Se è presente la barra (/) alla fine del percorso virtuale, è possibile che il percorso virtuale non viene modificato."
  syntax:
    content: public static string AppendTrailingSlash (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il percorso virtuale per aggiungere la barra dei comandi per."
    return:
      type: System.String
      description: "Il percorso virtuale modificato."
  overload: System.Web.VirtualPathUtility.AppendTrailingSlash*
  exceptions: []
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.Combine(System.String,System.String)
  id: Combine(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: Combine(String,String)
  nameWithType: VirtualPathUtility.Combine(String,String)
  fullName: System.Web.VirtualPathUtility.Combine(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Combina un percorso di base e un percorso relativo."
  remarks: "Metodo TheCombine restituisce il valore di <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>proprietà se il percorso relativo è esattamente una tilde (~).</xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>       Usa il metodo di combinare la <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>valore di proprietà anziché il percorso di base, se il percorso relativo inizia con una tilde e una barra (~ /); in caso contrario, il metodo combinare utilizza il percorso di base.</xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>"
  syntax:
    content: public static string Combine (string basePath, string relativePath);
    parameters:
    - id: basePath
      type: System.String
      description: "Il percorso di base."
    - id: relativePath
      type: System.String
      description: "Il percorso relativo."
    return:
      type: System.String
      description: "The combined <code>basePath</code> and <code>relativePath</code>."
  overload: System.Web.VirtualPathUtility.Combine*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>relativePath</code>è un percorso fisico.       - oppure - <code>relativePath</code> include uno o più punti."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>relativePath</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o una stringa vuota.       - oppure - <code>basePath</code> è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.GetDirectory(System.String)
  id: GetDirectory(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: GetDirectory(String)
  nameWithType: VirtualPathUtility.GetDirectory(String)
  fullName: System.Web.VirtualPathUtility.GetDirectory(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Restituisce la parte di directory di un percorso virtuale."
  remarks: "Se `virtualPath` non contiene una radice; vale a dire l&quot;operatore radice (tilde [~]) non è uguale, non inizia con una tilde (~), ad esempio una tilde e una barra (~ /) o una tilde e una doppia barra rovesciata (~ / /), o non inizia con una barra (/), un <xref:System.ArgumentException>viene generata un&quot;eccezione.</xref:System.ArgumentException>       Se il percorso virtuale che viene passato al metodo GetDirectory è `&quot;/images/image1.gif&quot;`, la directory restituita è `&quot;/images&quot;`."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.VirtualPathUtility.GetFileName%2A>, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, and GetDirectory methods.  \n  \n [!code-vb[System.Web.VirtualPathUtility#2](~/add/codesnippet/visualbasic/m-system.web.virtualpath_3_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#2](~/add/codesnippet/csharp/m-system.web.virtualpath_3_1.aspx)]"
  syntax:
    content: public static string GetDirectory (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Percorso virtuale."
    return:
      type: System.String
      description: "La directory a cui fa riferimento il percorso virtuale."
  overload: System.Web.VirtualPathUtility.GetDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code> is not rooted.  \n  \n \\- or -  \n  \n <code>virtualPath</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.GetExtension(System.String)
  id: GetExtension(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: GetExtension(String)
  nameWithType: VirtualPathUtility.GetExtension(String)
  fullName: System.Web.VirtualPathUtility.GetExtension(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Recupera l&quot;estensione del file di cui fa riferimento il percorso virtuale."
  remarks: "Se è il percorso virtuale che viene passato al metodo GetExtension `&quot;/images/image1.gif&quot;`, l&quot;estensione restituita è `&quot;.gif&quot;`."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.VirtualPathUtility.GetFileName%2A>, GetExtension, and <xref:System.Web.VirtualPathUtility.GetDirectory%2A> methods.  \n  \n [!code-vb[System.Web.VirtualPathUtility#2](~/add/codesnippet/visualbasic/m-system.web.virtualpath_0_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#2](~/add/codesnippet/csharp/m-system.web.virtualpath_0_1.aspx)]"
  syntax:
    content: public static string GetExtension (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Percorso virtuale."
    return:
      type: System.String
      description: "Stringa letterale estensione del nome file, incluso il punto (.), <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, o una stringa vuota (&quot;&quot;)."
  overload: System.Web.VirtualPathUtility.GetExtension*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code>contiene uno o più caratteri non validi, come definito in <xref:System.IO.Path.InvalidPathChars>."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.GetFileName(System.String)
  id: GetFileName(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: GetFileName(String)
  nameWithType: VirtualPathUtility.GetFileName(String)
  fullName: System.Web.VirtualPathUtility.GetFileName(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Recupera il nome del file del file di cui fa riferimento il percorso virtuale."
  remarks: "Se il percorso virtuale che viene passato al metodo GetFileName è `&quot;/images/image1.gif&quot;`, il nome del file restituito `&quot;image1.gif&quot;`."
  example:
  - "The following code example demonstrates how to use the GetFileName, <xref:System.Web.VirtualPathUtility.GetExtension%2A>, and <xref:System.Web.VirtualPathUtility.GetDirectory%2A> methods.  \n  \n [!code-vb[System.Web.VirtualPathUtility#2](~/add/codesnippet/visualbasic/m-system.web.virtualpath_5_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#2](~/add/codesnippet/csharp/m-system.web.virtualpath_5_1.aspx)]"
  syntax:
    content: public static string GetFileName (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Percorso virtuale."
    return:
      type: System.String
      description: "Il nome del file letterale dopo l&quot;ultimo carattere directory <code> virtualPath </code>; in caso contrario, nome dell&quot;ultima directory se l&quot;ultimo carattere di <code> virtualPath </code> è un carattere separatore di directory o nel volume."
  overload: System.Web.VirtualPathUtility.GetFileName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code>contiene uno o più caratteri non validi, come definito in <xref:System.IO.Path.InvalidPathChars>."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.IsAbsolute(System.String)
  id: IsAbsolute(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: IsAbsolute(String)
  nameWithType: VirtualPathUtility.IsAbsolute(String)
  fullName: System.Web.VirtualPathUtility.IsAbsolute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Restituisce un valore booleano che indica se il percorso virtuale specificato è assoluto; vale a dire inizia con una barra (/)."
  remarks: "Un percorso virtuale è assoluto se inizia con una barra (/). Ad esempio, la <xref:System.Web.HttpRequest.Path%2A>proprietà restituisce un percorso virtuale assoluto.</xref:System.Web.HttpRequest.Path%2A>"
  example:
  - "The following code example demonstrates how to use the IsAbsolute, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, and <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> methods.  \n  \n [!code-vb[System.Web.VirtualPathUtility#3](~/add/codesnippet/visualbasic/m-system.web.virtualpath_2_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#3](~/add/codesnippet/csharp/m-system.web.virtualpath_2_1.aspx)]"
  syntax:
    content: public static bool IsAbsolute (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il percorso virtuale da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> virtualPath </code> è un percorso assoluto e non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o una stringa vuota (&quot;&quot;); otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.VirtualPathUtility.IsAbsolute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.IsAppRelative(System.String)
  id: IsAppRelative(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: IsAppRelative(String)
  nameWithType: VirtualPathUtility.IsAppRelative(String)
  fullName: System.Web.VirtualPathUtility.IsAppRelative(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Restituisce un valore booleano che indica se il percorso virtuale specificato è relativo all&quot;applicazione."
  remarks: "Il percorso virtuale può essere solo l&quot;operatore radice (tilde [~]) o può iniziare con l&quot;operatore radice. Se `virtualPath` è `null`, un <xref:System.ArgumentNullException>viene generata l&quot;eccezione.</xref:System.ArgumentNullException> Se `virtualPath` è una stringa vuota (&quot;&quot;), il metodo IsAppRelative restituisce `false`.      > [!NOTE]  >   `&quot;~` `filename` `&quot;` non è un percorso virtuale valido e restituisce `false` per il metodo IsAppRelative."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, IsAppRelative, and <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> methods.  \n  \n [!code-vb[System.Web.VirtualPathUtility#3](~/add/codesnippet/visualbasic/m-system.web.virtualpath_4_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#3](~/add/codesnippet/csharp/m-system.web.virtualpath_4_1.aspx)]"
  syntax:
    content: public static bool IsAppRelative (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il percorso virtuale da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> virtualPath </code> relativo all&quot;applicazione; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.VirtualPathUtility.IsAppRelative*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)
  id: MakeRelative(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: MakeRelative(String,String)
  nameWithType: VirtualPathUtility.MakeRelative(String,String)
  fullName: System.Web.VirtualPathUtility.MakeRelative(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Restituisce il percorso virtuale relativo da un percorso virtuale che contiene l&quot;operatore radice (tilde [~]) a un altro."
  remarks: "Se il `fromPath` e `toPath` i parametri non sono contiene una radice; vale a dire diverso operatore radice (tilde [~]), non inizia con una tilde (~), ad esempio una tilde e una barra (~ /) o una tilde e una doppia barra rovesciata (~ / /), o non inizia con una barra (/), un <xref:System.ArgumentException>viene generata un&quot;eccezione.</xref:System.ArgumentException>       I parametri di stringa di query e i punti di ancoraggio HTML utilizzati nell&quot;URI non vengono utilizzati per determinare il percorso relativo.       Se `fromPath` è `&quot;/directory1/file1.aspx&quot;` e `toPath` è `&quot;/directory2/file2.aspx&quot;`, il metodo MakeRelative restituisce `&quot;../directory2/file2.aspx&quot;`."
  syntax:
    content: public static string MakeRelative (string fromPath, string toPath);
    parameters:
    - id: fromPath
      type: System.String
      description: "Il percorso virtuale inizio per il percorso virtuale relativo da restituire."
    - id: toPath
      type: System.String
      description: "Il percorso virtuale finale per restituire il percorso virtuale relativo."
    return:
      type: System.String
      description: "Il percorso virtuale relativo da <code> fromPath </code> a <code> toPath </code>."
  overload: System.Web.VirtualPathUtility.MakeRelative*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>fromPath</code> is not rooted.  \n  \n \\- or -  \n  \n <code>toPath</code> is not rooted."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)
  id: RemoveTrailingSlash(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: RemoveTrailingSlash(String)
  nameWithType: VirtualPathUtility.RemoveTrailingSlash(String)
  fullName: System.Web.VirtualPathUtility.RemoveTrailingSlash(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Rimuove una barra finale (/) da un percorso virtuale."
  remarks: "Il metodo RemoveTrailingSlash rimuove una barra (/) alla fine del percorso virtuale. Se il percorso virtuale è già la directory radice (`&quot;/&quot;`), viene eseguita alcuna azione. Se il percorso virtuale è `null` o una stringa vuota (&quot;&quot;), il metodo RemoveTrailingSlash restituisce `null`."
  syntax:
    content: public static string RemoveTrailingSlash (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il percorso virtuale per qualsiasi barra finale da rimuovere."
    return:
      type: System.String
      description: "Un percorso virtuale senza una barra finale, se il percorso virtuale non è già la directory radice (&quot;/&quot;); in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.VirtualPathUtility.RemoveTrailingSlash*
  exceptions: []
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.ToAbsolute(System.String)
  id: ToAbsolute(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: ToAbsolute(String)
  nameWithType: VirtualPathUtility.ToAbsolute(String)
  fullName: System.Web.VirtualPathUtility.ToAbsolute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Converte un percorso virtuale in un percorso assoluto dell&quot;applicazione."
  remarks: "Un percorso assoluto dell&quot;applicazione è quello in cui è utilizzato al percorso dell&quot;applicazione anziché l&quot;operatore radice (tilde [~]).       Se `virtualPath` è:: assoluto, il metodo ToAbsolute restituisce tale percorso invariato.      -Applicazione relativo, il metodo ToAbsolute aggiunge il percorso della directory virtuale dell&quot;applicazione corrente all&quot;inizio del `virtualPath`. Ad esempio, accessibile dal percorso della directory virtuale dell&quot;applicazione corrente il <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>proprietà.</xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>      -Non radice, il metodo ToAbsolute genera un <xref:System.ArgumentOutOfRangeException>eccezione.</xref:System.ArgumentOutOfRangeException>"
  syntax:
    content: public static string ToAbsolute (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il percorso virtuale per convertire in un percorso relativo all&quot;applicazione."
    return:
      type: System.String
      description: "Rappresentazione di percorso assoluto del percorso virtuale specificato."
  overload: System.Web.VirtualPathUtility.ToAbsolute*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>virtualPath</code>non contiene una radice."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Un doppio punto (.) viene utilizzato per uscire dalla directory principale."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)
  id: ToAbsolute(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: ToAbsolute(String,String)
  nameWithType: VirtualPathUtility.ToAbsolute(String,String)
  fullName: System.Web.VirtualPathUtility.ToAbsolute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Converte un percorso virtuale in un percorso assoluto dell&quot;applicazione utilizzando il percorso dell&quot;applicazione specificato."
  remarks: "L&quot;overload ToAbsolute del <xref:System.Web.VirtualPathUtility.ToAbsolute%2A>metodo utilizza il percorso dell&quot;applicazione fornito anziché il percorso dell&quot;applicazione corrente</xref:System.Web.VirtualPathUtility.ToAbsolute%2A>       Se `virtualPath` è:: assoluto, il metodo ToAbsolute restituisce il percorso virtuale senza modifiche.      -Applicazione relativo, il metodo ToAbsolute aggiunge `applicationPath` all&quot;inizio del percorso virtuale.      -Non radice, il metodo ToAbsolute genera un <xref:System.ArgumentOutOfRangeException>eccezione.</xref:System.ArgumentOutOfRangeException>"
  syntax:
    content: public static string ToAbsolute (string virtualPath, string applicationPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il percorso virtuale per convertire in un percorso relativo all&quot;applicazione."
    - id: applicationPath
      type: System.String
      description: "Il percorso dell&quot;applicazione da utilizzare per convertire `virtualPath` in un percorso relativo."
    return:
      type: System.String
      description: "La rappresentazione del percorso virtuale assoluto di <code> virtualPath </code>."
  overload: System.Web.VirtualPathUtility.ToAbsolute*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>applicationPath</code>non contiene una radice."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Un doppio punto (.) viene utilizzato nel percorso dell&quot;applicazione per uscire dalla directory principale."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.ToAppRelative(System.String)
  id: ToAppRelative(System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: ToAppRelative(String)
  nameWithType: VirtualPathUtility.ToAppRelative(String)
  fullName: System.Web.VirtualPathUtility.ToAppRelative(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Converte un percorso relativo dell&quot;applicazione utilizzando il percorso virtuale dell&quot;applicazione in un percorso virtuale di <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath*>proprietà.</xref:System.Web.HttpRuntime.AppDomainAppVirtualPath*>"
  remarks: "Se il percorso virtuale per l&quot;applicazione è `&quot;myapp&quot;` e il percorso virtuale `&quot;/myApp/sub/default.asp&quot;` viene passato al metodo ToAppRelative, il percorso relativo dell&quot;applicazione risultante è `&quot;~/sub/default.aspx&quot;`.       Se `virtualPath` non inizia con il percorso dell&quot;applicazione corrente, il metodo restituisce il percorso virtuale invariata di ToAppRelative.       Se `virtualPath` corrisponde al percorso dell&quot;applicazione, l&quot;operatore radice (la tilde [~]), viene restituito. Ad esempio, accessibile dal percorso della directory virtuale dell&quot;applicazione corrente il <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>proprietà.</xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>, <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>, and <xref:System.Web.VirtualPathUtility.ToAppRelative%2A> methods.  \n  \n [!code-vb[System.Web.VirtualPathUtility#3](~/add/codesnippet/visualbasic/m-system.web.virtualpath_1_1.aspx)]\n [!code-cs[System.Web.VirtualPathUtility#3](~/add/codesnippet/csharp/m-system.web.virtualpath_1_1.aspx)]"
  syntax:
    content: public static string ToAppRelative (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il percorso virtuale per convertire in un percorso relativo all&quot;applicazione."
    return:
      type: System.String
      description: "La rappresentazione di percorso relativo all&quot;applicazione di <code> virtualPath </code>."
  overload: System.Web.VirtualPathUtility.ToAppRelative*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)
  id: ToAppRelative(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  langs:
  - csharp
  name: ToAppRelative(String,String)
  nameWithType: VirtualPathUtility.ToAppRelative(String,String)
  fullName: System.Web.VirtualPathUtility.ToAppRelative(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Converte un percorso virtuale in un percorso relativo dell&quot;applicazione utilizzando un percorso specificato."
  remarks: "Il metodo di overload ToAppRelative il <xref:System.Web.VirtualPathUtility.ToAppRelative%2A>metodo utilizza `applicationPath` anziché il percorso dell&quot;applicazione corrente</xref:System.Web.VirtualPathUtility.ToAppRelative%2A> Se `virtualPath` non inizia con `applicationPath`, il metodo ToAppRelative restituisce tale percorso invariato."
  syntax:
    content: public static string ToAppRelative (string virtualPath, string applicationPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il percorso virtuale per convertire in un percorso relativo all&quot;applicazione."
    - id: applicationPath
      type: System.String
      description: "Il percorso dell&quot;applicazione da utilizzare per convertire `virtualPath` in un percorso relativo."
    return:
      type: System.String
      description: "La rappresentazione di percorso relativo all&quot;applicazione di <code> virtualPath </code>."
  overload: System.Web.VirtualPathUtility.ToAppRelative*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: AppendTrailingSlash(String)
  nameWithType: VirtualPathUtility.AppendTrailingSlash(String)
  fullName: System.Web.VirtualPathUtility.AppendTrailingSlash(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.VirtualPathUtility.Combine(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: Combine(String,String)
  nameWithType: VirtualPathUtility.Combine(String,String)
  fullName: System.Web.VirtualPathUtility.Combine(String,String)
- uid: System.Web.VirtualPathUtility.GetDirectory(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: GetDirectory(String)
  nameWithType: VirtualPathUtility.GetDirectory(String)
  fullName: System.Web.VirtualPathUtility.GetDirectory(String)
- uid: System.Web.VirtualPathUtility.GetExtension(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: GetExtension(String)
  nameWithType: VirtualPathUtility.GetExtension(String)
  fullName: System.Web.VirtualPathUtility.GetExtension(String)
- uid: System.Web.VirtualPathUtility.GetFileName(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: GetFileName(String)
  nameWithType: VirtualPathUtility.GetFileName(String)
  fullName: System.Web.VirtualPathUtility.GetFileName(String)
- uid: System.Web.VirtualPathUtility.IsAbsolute(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: IsAbsolute(String)
  nameWithType: VirtualPathUtility.IsAbsolute(String)
  fullName: System.Web.VirtualPathUtility.IsAbsolute(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.VirtualPathUtility.IsAppRelative(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: IsAppRelative(String)
  nameWithType: VirtualPathUtility.IsAppRelative(String)
  fullName: System.Web.VirtualPathUtility.IsAppRelative(String)
- uid: System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: MakeRelative(String,String)
  nameWithType: VirtualPathUtility.MakeRelative(String,String)
  fullName: System.Web.VirtualPathUtility.MakeRelative(String,String)
- uid: System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: RemoveTrailingSlash(String)
  nameWithType: VirtualPathUtility.RemoveTrailingSlash(String)
  fullName: System.Web.VirtualPathUtility.RemoveTrailingSlash(String)
- uid: System.Web.VirtualPathUtility.ToAbsolute(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: ToAbsolute(String)
  nameWithType: VirtualPathUtility.ToAbsolute(String)
  fullName: System.Web.VirtualPathUtility.ToAbsolute(String)
- uid: System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: ToAbsolute(String,String)
  nameWithType: VirtualPathUtility.ToAbsolute(String,String)
  fullName: System.Web.VirtualPathUtility.ToAbsolute(String,String)
- uid: System.Web.VirtualPathUtility.ToAppRelative(System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: ToAppRelative(String)
  nameWithType: VirtualPathUtility.ToAppRelative(String)
  fullName: System.Web.VirtualPathUtility.ToAppRelative(String)
- uid: System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: ToAppRelative(String,String)
  nameWithType: VirtualPathUtility.ToAppRelative(String,String)
  fullName: System.Web.VirtualPathUtility.ToAppRelative(String,String)
- uid: System.Web.VirtualPathUtility.AppendTrailingSlash*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: AppendTrailingSlash
  nameWithType: VirtualPathUtility.AppendTrailingSlash
- uid: System.Web.VirtualPathUtility.Combine*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: Combine
  nameWithType: VirtualPathUtility.Combine
- uid: System.Web.VirtualPathUtility.GetDirectory*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: GetDirectory
  nameWithType: VirtualPathUtility.GetDirectory
- uid: System.Web.VirtualPathUtility.GetExtension*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: GetExtension
  nameWithType: VirtualPathUtility.GetExtension
- uid: System.Web.VirtualPathUtility.GetFileName*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: GetFileName
  nameWithType: VirtualPathUtility.GetFileName
- uid: System.Web.VirtualPathUtility.IsAbsolute*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: IsAbsolute
  nameWithType: VirtualPathUtility.IsAbsolute
- uid: System.Web.VirtualPathUtility.IsAppRelative*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: IsAppRelative
  nameWithType: VirtualPathUtility.IsAppRelative
- uid: System.Web.VirtualPathUtility.MakeRelative*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: MakeRelative
  nameWithType: VirtualPathUtility.MakeRelative
- uid: System.Web.VirtualPathUtility.RemoveTrailingSlash*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: RemoveTrailingSlash
  nameWithType: VirtualPathUtility.RemoveTrailingSlash
- uid: System.Web.VirtualPathUtility.ToAbsolute*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: ToAbsolute
  nameWithType: VirtualPathUtility.ToAbsolute
- uid: System.Web.VirtualPathUtility.ToAppRelative*
  parent: System.Web.VirtualPathUtility
  isExternal: false
  name: ToAppRelative
  nameWithType: VirtualPathUtility.ToAppRelative
