### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.HttpWebClientProtocol
  id: HttpWebClientProtocol
  children:
  - System.Web.Services.Protocols.HttpWebClientProtocol.#ctor
  - System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  - System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  - System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  - System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  - System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  - System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  - System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  - System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  langs:
  - csharp
  name: HttpWebClientProtocol
  nameWithType: HttpWebClientProtocol
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol
  type: Class
  summary: "Rappresenta la classe base per tutti i proxy client del servizio Web XML che utilizzano il protocollo di trasporto HTTP."
  remarks: "Le proprietà di questa classe vengono utilizzate per controllare il comportamento dell&quot;oggetto della richiesta HTTP utilizzato per trasmettere la richiesta di servizio Web XML e la risposta. La mappa di proprietà per proprietà rilevate <xref:System.Net.HttpWebRequest>.</xref:System.Net.HttpWebRequest>       Per comunicare con un servizio Web XML tramite HTTP, è necessario creare una classe proxy che derivano direttamente o indirettamente da HttpWebClientProtocol per il servizio Web XML. Anziché creare manualmente la classe proxy, è possibile utilizzare lo strumento Wsdl.exe per creare una classe proxy per una descrizione del servizio del servizio Web XML specificato.       Poiché HttpWebClientProtocol è la classe base per tutte le classi proxy, le proprietà sono per le classi del proxy. Queste proprietà sono utili per controllare il comportamento della richiesta di trasporto sottostante. Ad esempio, utilizzare il <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A>proprietà per chiamare i servizi Web XML attraverso un firewall.</xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> Molte di queste proprietà vengono utilizzati per inizializzare il <xref:System.Net.HttpWebRequest>che effettua la richiesta Web.</xref:System.Net.HttpWebRequest>       <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, e <xref:System.Web.Services.Protocols.HttpPostClientProtocol>derivano direttamente o indirettamente da HttpWebClientProtocol per fornire supporto per SOAP, HTTP-GET e HTTP-POST rispettivamente.</xref:System.Web.Services.Protocols.HttpPostClientProtocol> </xref:System.Web.Services.Protocols.HttpGetClientProtocol></xref:System.Web.Services.Protocols.SoapHttpClientProtocol>"
  example:
  - "The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form allows the server to automatically redirect the client to other sites. It also sets client authentication credentials, proxy settings, the request encoding and the time out for the request before calling the XML Web service method.  \n  \n [!code-cs[Classic HttpWebClientProtocol Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_9_1.aspx)]\n [!code-vb[Classic HttpWebClientProtocol Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_9_1.aspx)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class HttpWebClientProtocol : System.Web.Services.Protocols.WebClientProtocol
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Web.Services.Protocols.WebClientProtocol
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Web.Services.Protocols.WebClientProtocol.Abort
  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  - System.Web.Services.Protocols.WebClientProtocol.Credentials
  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  - System.Web.Services.Protocols.WebClientProtocol.Timeout
  - System.Web.Services.Protocols.WebClientProtocol.Url
  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: HttpWebClientProtocol()
  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol()
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.HttpWebClientProtocol()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.Services.Protocols.HttpWebClientProtocol&quot;> </xref> classe."
  syntax:
    content: protected HttpWebClientProtocol ();
    parameters: []
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  id: AllowAutoRedirect
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: AllowAutoRedirect
  nameWithType: HttpWebClientProtocol.AllowAutoRedirect
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Ottiene o imposta se il client segue automaticamente i reindirizzamenti di server."
  remarks: "Se un client invia le informazioni di autenticazione, ad esempio un nome utente e una password, non si desidera attivare il server per il reindirizzamento, poiché ciò può compromettere la sicurezza.       Oggetto <xref:System.Net.WebException>viene generata se la proprietà AllowAutoRedirect `false` e il server Web tenta di reindirizzare la richiesta.</xref:System.Net.WebException> Il <xref:System.Net.WebException.Response%2A>proprietà contiene un <xref:System.Net.HttpWebResponse>oggetto, in cui sia il <xref:System.Net.HttpWebResponse.StatusCode%2A>e <xref:System.Net.HttpWebResponse.Headers%2A>riflettono i dettagli relativi al tentativo di reindirizzamento.</xref:System.Net.HttpWebResponse.Headers%2A> </xref:System.Net.HttpWebResponse.StatusCode%2A> </xref:System.Net.HttpWebResponse> </xref:System.Net.WebException.Response%2A> Il <xref:System.Net.HttpWebResponse.StatusCode%2A>contiene proprietà un <xref:System.Net.HttpStatusCode>equivalente a uno dei codici di stato di reindirizzamento HTTP (301, 302 e 307) e il `Location` intestazione all&quot;interno di <xref:System.Net.HttpWebResponse.Headers%2A>punti di raccolta per l&quot;URI della richiesta ha tentato di essere reindirizzati a.</xref:System.Net.HttpWebResponse.Headers%2A> </xref:System.Net.HttpStatusCode> </xref:System.Net.HttpWebResponse.StatusCode%2A>"
  syntax:
    content: public bool AllowAutoRedirect { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per reindirizzare automaticamente il client per seguire i reindirizzamenti server; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect*
  exceptions:
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "La proprietà AllowAutoRedirect <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> e il server Web tenta di reindirizzare la richiesta."
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  id: CancelAsync(System.Object)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: CancelAsync(Object)
  nameWithType: HttpWebClientProtocol.CancelAsync(Object)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Annulla una chiamata asincrona a un metodo di servizio Web XML, a meno che la chiamata è già stata completata."
  syntax:
    content: protected void CancelAsync (object userState);
    parameters:
    - id: userState
      type: System.Object
      description: "L&quot;oggetto fornito nell&quot;ultimo parametro per la chiamata asincrona del <xref uid=&quot;langword_csharp_Begin&quot; name=&quot;Begin&quot; href=&quot;&quot;> </xref> metodo."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  id: ClientCertificates
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: HttpWebClientProtocol.ClientCertificates
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Ottiene la raccolta dei certificati client."
  remarks: "Questa proprietà consente a un client passare uno o più certificati client, noto anche come certificati Authenticode x.&509; v.&3;, quando si chiama un metodo di servizio Web XML. Se il metodo del servizio Web XML è stato configurato per utilizzare i certificati client, un certificato client può essere utilizzato come meccanismo di autenticazione di un client. Per informazioni dettagliate sulla configurazione dei certificati client, vedere la documentazione di Internet Information Services (IIS)."
  example:
  - "The following code example demonstrates how to load in a client certificate from a file and then add it to the ClientCertificates property for calling an XML Web service method that uses client certificates for authentication.  \n  \n [!code-cs[HttpWebClientProtocol.ClientCertificates#1](~/add/codesnippet/csharp/p-system.web.services.pr_6_1.aspx)]\n [!code-vb[HttpWebClientProtocol.ClientCertificates#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_6_1.aspx)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "Un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> che rappresenta i certificati client."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  id: CookieContainer
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: CookieContainer
  nameWithType: HttpWebClientProtocol.CookieContainer
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Ottiene o imposta la raccolta di cookie."
  remarks: "Se un metodo di servizio Web XML utilizza lo stato della sessione, un cookie viene passato nuovamente nelle intestazioni di risposta al client di servizi Web XML che identifica in modo univoco la sessione per il client del servizio Web XML. Affinché un servizio Web XML mantenere lo stato della sessione per un client, il client deve memorizzare il cookie. I client ricevono il cookie HTTP creando una nuova istanza della <xref:System.Net.CookieContainer>e l&quot;assegnazione che alla proprietà CookieContainer della classe proxy prima di chiamare il Web XML metodo del servizio.</xref:System.Net.CookieContainer> Se si desidera mantenere lo stato di sessione anche quando l&quot;istanza della classe proxy esce dall&quot;ambito, il client deve memorizzare il cookie HTTP tra le chiamate al servizio Web XML. Ad esempio, un client Web Form possa memorizzare i cookie HTTP salvando il <xref:System.Net.CookieContainer>nello stato di sessione.</xref:System.Net.CookieContainer> Poiché non tutti i servizi Web XML utilizzano lo stato della sessione e pertanto i client non viene sempre richiesto di utilizzare la proprietà CookieContainer di un proxy client, la documentazione per il servizio Web XML deve indicare se lo stato della sessione viene utilizzato."
  example:
  - "The following code example is a Web Forms client of an XML Web service that uses session state. The client stores the HTTP cookie that uniquely identifies the session by storing it in the client's session state.  \n  \n [!code-vb[HttpWebClientProtocol.CookieContainer#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_14_1.aspx)]\n [!code-cs[HttpWebClientProtocol.CookieContainer#1](~/add/codesnippet/csharp/p-system.web.services.pr_14_1.aspx)]"
  syntax:
    content: public System.Net.CookieContainer CookieContainer { get; set; }
    return:
      type: System.Net.CookieContainer
      description: "Oggetto <xref:System.Net.CookieContainer>che rappresenta i cookie per un client di servizi Web.</xref:System.Net.CookieContainer>"
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  id: EnableDecompression
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: EnableDecompression
  nameWithType: HttpWebClientProtocol.EnableDecompression
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Ottiene o imposta un valore che indica se la decompressione è abilitata per questo <xref href=&quot;System.Web.Services.Protocols.HttpWebClientProtocol&quot;> </xref>."
  syntax:
    content: public bool EnableDecompression { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la decompressione è abilitata per questo <xref href=&quot;System.Web.Services.Protocols.HttpWebClientProtocol&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  id: GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GenerateXmlMappings(Type,ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Ottiene il <xref href=&quot;System.Xml.Serialization.XmlMembersMapping&quot;> </xref> per ogni servizio Web XML i metodi esposti dal tipo specificato e archivia i mapping specificato <xref href=&quot;System.Collections.ArrayList&quot;> </xref>."
  syntax:
    content: public static bool GenerateXmlMappings (Type type, System.Collections.ArrayList mappings);
    parameters:
    - id: type
      type: System.Type
      description: "Il <xref:System.Type>che espone i metodi del servizio Web XML.</xref:System.Type>"
    - id: mappings
      type: System.Collections.ArrayList
      description: "Oggetto <xref href=&quot;System.Collections.ArrayList&quot;> </xref> utilizzato per archiviare i mapping."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>type</code> can be assigned to a <xref href=&quot;System.Web.Services.Protocols.SoapHttpClientProtocol&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  id: GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GenerateXmlMappings(Type[],ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Ottiene il <xref href=&quot;System.Xml.Serialization.XmlMembersMapping&quot;> </xref> per ogni servizio Web XML i metodi esposti dai tipi specificati e archivia i mapping specificato <xref href=&quot;System.Collections.ArrayList&quot;> </xref>, nonché come in un <xref href=&quot;System.Collections.Hashtable&quot;> </xref> che questo metodo restituisce."
  syntax:
    content: public static System.Collections.Hashtable GenerateXmlMappings (Type[] types, System.Collections.ArrayList mappings);
    parameters:
    - id: types
      type: System.Type[]
      description: "Matrice di tipo <xref:System.Type>che contiene i tipi che espongono i metodi del servizio Web XML.</xref:System.Type>"
    - id: mappings
      type: System.Collections.ArrayList
      description: "Oggetto <xref href=&quot;System.Collections.ArrayList&quot;> </xref> utilizzato per archiviare i mapping."
    return:
      type: System.Collections.Hashtable
      description: "Oggetto <xref href=&quot;System.Collections.Hashtable&quot;> </xref> che contiene il <xref href=&quot;System.Xml.Serialization.XmlMembersMapping&quot;> </xref> per ogni metodo di servizio Web XML esposto dai tipi specificati. I tipi contenuti nelle <code> types </code> vengono utilizzati come chiavi."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  id: GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GetWebRequest(Uri)
  nameWithType: HttpWebClientProtocol.GetWebRequest(Uri)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(Uri)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Crea un <xref:System.Net.WebRequest>per l&quot;URI specificato.</xref:System.Net.WebRequest>"
  syntax:
    content: protected override System.Net.WebRequest GetWebRequest (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "<xref:System.Uri>Per la creazione di <xref:System.Net.WebRequest>.</xref:System.Net.WebRequest> </xref:System.Uri>"
    return:
      type: System.Net.WebRequest
      description: "Creato <xref:System.Net.WebRequest>.</xref:System.Net.WebRequest>"
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <code>uri</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  id: GetWebResponse(System.Net.WebRequest)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GetWebResponse(WebRequest)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Restituisce una risposta da una richiesta sincrona a un metodo del servizio Web XML."
  syntax:
    content: protected override System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "Il <xref:System.Net.WebRequest>da cui ottenere la risposta.</xref:System.Net.WebRequest>"
    return:
      type: System.Net.WebResponse
      description: "Una risposta da una richiesta sincrona a un metodo di servizio Web XML."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  id: GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GetWebResponse(WebRequest,IAsyncResult)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Restituisce una risposta da una richiesta asincrona a un metodo del servizio Web XML."
  syntax:
    content: protected override System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "Il <xref:System.Net.WebRequest>da cui ottenere la risposta.</xref:System.Net.WebRequest>"
    - id: result
      type: System.IAsyncResult
      description: "Il <xref:System.IAsyncResult>per passare a <xref:System.Net.HttpWebRequest.EndGetResponse*>quando la risposta è stata completata.</xref:System.Net.HttpWebRequest.EndGetResponse*> </xref:System.IAsyncResult>"
    return:
      type: System.Net.WebResponse
      description: "Una risposta da una richiesta asincrona a un metodo di servizio Web XML."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  id: Proxy
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: Proxy
  nameWithType: HttpWebClientProtocol.Proxy
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Ottiene o imposta informazioni sul proxy per l&quot;esecuzione di una richiesta di servizio Web XML attraverso un firewall."
  remarks: "Utilizzare la proprietà Proxy se un client deve utilizzare impostazioni proxy diverse da quelle del sistema. Utilizzare la <xref:System.Net.WebProxy>classe per impostare le impostazioni del proxy, perché implementa <xref:System.Net.IWebProxy>.</xref:System.Net.IWebProxy> </xref:System.Net.WebProxy>       In un file di configurazione, è possono impostare le impostazioni proxy predefinite. Per informazioni dettagliate, vedere [configurazione di applicazioni Internet](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example sets the following proxy settings prior to invoking the `Math` XML Web service: the proxy server to http://proxyserver, the proxy port to 80 and the bypass to the proxy server for local addresses.  \n  \n [!code-cpp[Classic HttpWebClientProtocol.Proxy Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_56_1.cpp)]\n [!code-vb[Classic HttpWebClientProtocol.Proxy Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_56_1.vb)]\n [!code-cs[Classic HttpWebClientProtocol.Proxy Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_56_1.cs)]"
  syntax:
    content: public System.Net.IWebProxy Proxy { get; set; }
    return:
      type: System.Net.IWebProxy
      description: "Un <xref:System.Net.IWebProxy>che contiene le informazioni sul proxy per eseguire le richieste attraverso un firewall.</xref:System.Net.IWebProxy> Il valore predefinito è le impostazioni del proxy del sistema operativo."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  id: UnsafeAuthenticatedConnectionSharing
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Ottiene o imposta un valore che indica se è attivata la condivisione di connessione quando il client utilizza l&quot;autenticazione NTLM per connettersi al server Web che ospita il servizio Web XML."
  remarks: "Questa proprietà imposta il valore della <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A>proprietà del <xref:System.Net.HttpWebRequest>utilizzato per comunicare con il server Web.</xref:System.Net.HttpWebRequest> </xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A>"
  syntax:
    content: public bool UnsafeAuthenticatedConnectionSharing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è abilitata la condivisione di connessione. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  id: UserAgent
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: UserAgent
  nameWithType: HttpWebClientProtocol.UserAgent
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Ottiene o imposta il valore per l&quot;intestazione agente utente che viene inviato con ogni richiesta."
  remarks: "La stringa agente utente consente a un server Web identificare il client."
  example:
  - >-
    [!code-cs[HttpWebClientProtocol_UserAgent#1](~/add/codesnippet/csharp/p-system.web.services.pr_74_1.cs)]
     [!code-vb[HttpWebClientProtocol_UserAgent#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_74_1.vb)]
     [!code-cpp[HttpWebClientProtocol_UserAgent#1](~/add/codesnippet/cpp/p-system.web.services.pr_74_1.cpp)]
  syntax:
    content: public string UserAgent { get; set; }
    return:
      type: System.String
      description: "Il valore dell&quot;intestazione agente utente protocollo HTTP. Il valore predefinito è &quot;MS protocollo Client di servizi Web <code> number </code> &quot;, dove <code> number </code> è la versione di common language runtime (ad esempio, 1.0.3705.0)."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: System.Web.Services.Protocols.WebClientProtocol
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: HttpWebClientProtocol()
  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol()
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.HttpWebClientProtocol()
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: AllowAutoRedirect
  nameWithType: HttpWebClientProtocol.AllowAutoRedirect
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CancelAsync(Object)
  nameWithType: HttpWebClientProtocol.CancelAsync(Object)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: ClientCertificates
  nameWithType: HttpWebClientProtocol.ClientCertificates
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CookieContainer
  nameWithType: HttpWebClientProtocol.CookieContainer
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
- uid: System.Net.CookieContainer
  parent: System.Net
  isExternal: true
  name: CookieContainer
  nameWithType: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: EnableDecompression
  nameWithType: HttpWebClientProtocol.EnableDecompression
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GenerateXmlMappings(Type,ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GenerateXmlMappings(Type[],ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebRequest(Uri)
  nameWithType: HttpWebClientProtocol.GetWebRequest(Uri)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(Uri)
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebResponse(WebRequest)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebResponse(WebRequest,IAsyncResult)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: Proxy
  nameWithType: HttpWebClientProtocol.Proxy
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UserAgent
  nameWithType: HttpWebClientProtocol.UserAgent
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: HttpWebClientProtocol
  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: AllowAutoRedirect
  nameWithType: HttpWebClientProtocol.AllowAutoRedirect
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CancelAsync
  nameWithType: HttpWebClientProtocol.CancelAsync
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: ClientCertificates
  nameWithType: HttpWebClientProtocol.ClientCertificates
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CookieContainer
  nameWithType: HttpWebClientProtocol.CookieContainer
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: EnableDecompression
  nameWithType: HttpWebClientProtocol.EnableDecompression
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GenerateXmlMappings
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebRequest
  nameWithType: HttpWebClientProtocol.GetWebRequest
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebResponse
  nameWithType: HttpWebClientProtocol.GetWebResponse
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: Proxy
  nameWithType: HttpWebClientProtocol.Proxy
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UserAgent
  nameWithType: HttpWebClientProtocol.UserAgent
