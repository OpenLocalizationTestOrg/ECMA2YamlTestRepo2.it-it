### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeTypeReference
  id: CodeTypeReference
  children:
  - System.CodeDom.CodeTypeReference.#ctor
  - System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)
  - System.CodeDom.CodeTypeReference.#ctor(System.String)
  - System.CodeDom.CodeTypeReference.#ctor(System.Type)
  - System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)
  - System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])
  - System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)
  - System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)
  - System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)
  - System.CodeDom.CodeTypeReference.ArrayElementType
  - System.CodeDom.CodeTypeReference.ArrayRank
  - System.CodeDom.CodeTypeReference.BaseType
  - System.CodeDom.CodeTypeReference.Options
  - System.CodeDom.CodeTypeReference.TypeArguments
  langs:
  - csharp
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
  type: Class
  summary: "Rappresenta un riferimento a un tipo."
  remarks: "Un oggetto CodeTypeReference viene usato per rappresentare un tipo per gli oggetti CodeDOM. Quando i tipi CodeDOM hanno un `Type` proprietà è di tipo CodeTypeReference. Ad esempio, il <xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=fullName>proprietà è un CodeTypeReference che rappresenta un tipo di dati.</xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=fullName>       Un CodeTypeReference può essere inizializzato con un <xref:System.Type>oggetto o una stringa.</xref:System.Type> In genere è preferibile utilizzare un <xref:System.Type>a tale scopo, sebbene non sia sempre possibile.</xref:System.Type> Se l&quot;inizializzazione di un&quot;istanza di questa classe con una stringa, è consigliabile utilizzare sempre il nome completo del tipo, ad esempio &quot;System&quot; invece di &quot;Console&quot;, perché non tutti i linguaggi supportano l&quot;importazione di spazi dei nomi. Passando un oggetto di tipo per una matrice o utilizzando uno dei costruttori che accettano come parametro di priorità, è possono specificare i tipi di matrice.       Il <xref:System.CodeDom.CodeTypeReference.BaseType%2A>proprietà specifica il nome del tipo di riferimento.</xref:System.CodeDom.CodeTypeReference.BaseType%2A> Per i riferimenti ai tipi di matrice, il <xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A>proprietà indica il tipo degli elementi della matrice e <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A>proprietà indica il numero di dimensioni della matrice.</xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> </xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A>"
  example:
  - "The following example demonstrates use of a CodeTypeReference to represent a reference to a type.  \n  \n [!code-cs[CodeTypeOfExample#2](~/add/codesnippet/csharp/t-system.codedom.codetyp_1_1.cs)]\n [!code-vb[CodeTypeOfExample#2](~/add/codesnippet/visualbasic/t-system.codedom.codetyp_1_1.vb)]\n [!code-cpp[CodeTypeOfExample#2](~/add/codesnippet/cpp/t-system.codedom.codetyp_1_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeTypeReference : System.CodeDom.CodeObject
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference()
  nameWithType: CodeTypeReference.CodeTypeReference()
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> classe."
  remarks: "Questo costruttore crea un oggetto vuoto <xref:System.CodeDom.CodeTypeReference>oggetto.</xref:System.CodeDom.CodeTypeReference>  Se si utilizza questo costruttore, impostare le proprietà per stabilire il riferimento al tipo."
  syntax:
    content: public CodeTypeReference ();
    parameters: []
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)
  id: '#ctor(System.CodeDom.CodeTypeParameter)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(CodeTypeParameter)
  nameWithType: CodeTypeReference.CodeTypeReference(CodeTypeParameter)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(CodeTypeParameter)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> classe utilizzando il parametro di tipo di codice specificato."
  syntax:
    content: public CodeTypeReference (System.CodeDom.CodeTypeParameter typeParameter);
    parameters:
    - id: typeParameter
      type: System.CodeDom.CodeTypeParameter
      description: "Oggetto <xref href=&quot;System.CodeDom.CodeTypeParameter&quot;> </xref> che rappresenta il tipo del parametro di tipo."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(String)
  nameWithType: CodeTypeReference.CodeTypeReference(String)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> classe utilizzando il nome del tipo specificato."
  remarks: "Se il `typeName` parametro fa riferimento a un tipo generico, è necessario seguire le convenzioni della sintassi per i tipi generici. Ad esempio, la firma di reflection per una <xref:System.Collections.Generic.Dictionary%602>tipo, in cui `K` è una stringa e `V` è un <xref:System.Collections.Generic.List%601>di numeri interi, è rappresentato da reflection come segue (con le informazioni sull&quot;assembly rimosse): `System.Collections.Generic.Dictionary`2[[System.String], [Collections`1[[System.Int32]]]]`.</xref:System.Collections.Generic.List%601> </xref:System.Collections.Generic.Dictionary%602>      > [!NOTE] > È necessario utilizzare le parentesi quadre ([]) e non in c# le parentesi angolari (<>) per delimitare i parametri generici.       Per evitare la possibilità di commettere un specificando la sintassi, utilizzare il costruttore che accetta un tipo come parametro anziché una stringa."
  syntax:
    content: public CodeTypeReference (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Il nome del tipo di riferimento."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(Type)
  nameWithType: CodeTypeReference.CodeTypeReference(Type)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> classe utilizzando il tipo specificato."
  syntax:
    content: public CodeTypeReference (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Il <xref:System.Type>per riferimento.</xref:System.Type>"
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)
  id: '#ctor(System.CodeDom.CodeTypeReference,System.Int32)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(CodeTypeReference,Int32)
  nameWithType: CodeTypeReference.CodeTypeReference(CodeTypeReference,Int32)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(CodeTypeReference,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> classe utilizzando il tipo di matrice specificato e un numero di dimensioni."
  remarks: "Questo costruttore può essere utilizzato per costruire le matrici di matrici annidando <xref:System.CodeDom.CodeTypeReference>oggetti.</xref:System.CodeDom.CodeTypeReference>"
  syntax:
    content: public CodeTypeReference (System.CodeDom.CodeTypeReference arrayType, int rank);
    parameters:
    - id: arrayType
      type: System.CodeDom.CodeTypeReference
      description: "Oggetto <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> che indica il tipo della matrice."
    - id: rank
      type: System.Int32
      description: "Il numero di dimensioni della matrice."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])
  id: '#ctor(System.String,System.CodeDom.CodeTypeReference[])'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(String,CodeTypeReference[])
  nameWithType: CodeTypeReference.CodeTypeReference(String,CodeTypeReference[])
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String,CodeTypeReference[])
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> classe usando gli argomenti il nome e tipo del tipo specificato."
  syntax:
    content: public CodeTypeReference (string typeName, System.CodeDom.CodeTypeReference[] typeArguments);
    parameters:
    - id: typeName
      type: System.String
      description: "Il nome del tipo di riferimento."
    - id: typeArguments
      type: System.CodeDom.CodeTypeReference[]
      description: "Matrice di <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> valori."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)
  id: '#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(String,CodeTypeReferenceOptions)
  nameWithType: CodeTypeReference.CodeTypeReference(String,CodeTypeReferenceOptions)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String,CodeTypeReferenceOptions)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> classe utilizzando il nome del tipo specificato e l&quot;opzione di riferimento al tipo di codice."
  syntax:
    content: public CodeTypeReference (string typeName, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);
    parameters:
    - id: typeName
      type: System.String
      description: "Il nome del tipo di riferimento."
    - id: codeTypeReferenceOption
      type: System.CodeDom.CodeTypeReferenceOptions
      description: "L&quot;opzione di riferimento di tipo codice, tra il <xref href=&quot;System.CodeDom.CodeTypeReferenceOptions&quot;> </xref> valori."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(String,Int32)
  nameWithType: CodeTypeReference.CodeTypeReference(String,Int32)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> classe utilizzando il nome del tipo matrice specificata e il numero di dimensioni."
  syntax:
    content: public CodeTypeReference (string baseType, int rank);
    parameters:
    - id: baseType
      type: System.String
      description: "Il nome del tipo di elementi della matrice."
    - id: rank
      type: System.Int32
      description: "Il numero di dimensioni della matrice."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)
  id: '#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)'
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: CodeTypeReference(Type,CodeTypeReferenceOptions)
  nameWithType: CodeTypeReference.CodeTypeReference(Type,CodeTypeReferenceOptions)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(Type,CodeTypeReferenceOptions)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> classe utilizzando il tipo specificato e di riferimento al tipo di codice."
  syntax:
    content: public CodeTypeReference (Type type, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);
    parameters:
    - id: type
      type: System.Type
      description: "Il <xref:System.Type>per riferimento.</xref:System.Type>"
    - id: codeTypeReferenceOption
      type: System.CodeDom.CodeTypeReferenceOptions
      description: "L&quot;opzione di riferimento di tipo codice, tra il <xref href=&quot;System.CodeDom.CodeTypeReferenceOptions&quot;> </xref> valori."
  overload: System.CodeDom.CodeTypeReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.ArrayElementType
  id: ArrayElementType
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: ArrayElementType
  nameWithType: CodeTypeReference.ArrayElementType
  fullName: System.CodeDom.CodeTypeReference.ArrayElementType
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Ottiene o imposta il tipo degli elementi nella matrice."
  remarks: "Viene ignorato a meno che il <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A>proprietà è maggiore o uguale a 1.</xref:System.CodeDom.CodeTypeReference.ArrayRank%2A>"
  syntax:
    content: public System.CodeDom.CodeTypeReference ArrayElementType { get; set; }
    return:
      type: System.CodeDom.CodeTypeReference
      description: "Oggetto <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> che indica il tipo degli elementi della matrice."
  overload: System.CodeDom.CodeTypeReference.ArrayElementType*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.ArrayRank
  id: ArrayRank
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: ArrayRank
  nameWithType: CodeTypeReference.ArrayRank
  fullName: System.CodeDom.CodeTypeReference.ArrayRank
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Ottiene o imposta il rango della matrice."
  syntax:
    content: public int ArrayRank { get; set; }
    return:
      type: System.Int32
      description: "Il numero di dimensioni della matrice."
  overload: System.CodeDom.CodeTypeReference.ArrayRank*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.BaseType
  id: BaseType
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: BaseType
  nameWithType: CodeTypeReference.BaseType
  fullName: System.CodeDom.CodeTypeReference.BaseType
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Ottiene o imposta il nome del tipo a cui fa riferimento."
  remarks: "Questa proprietà contiene il nome del tipo a meno che non è un tipo di matrice, nel qual caso è il tipo di elemento di matrice.      > [!NOTE] > Il nome della proprietà può essere fuorviante. Questa proprietà contiene solo il nome del tipo con elementi della matrice o rimuovere argomenti di tipo generico, non il tipo di base o padre come potrebbe essere previsto. Ad esempio, il valore della proprietà BaseType per `System.Collections.Generic.Dictionary`2[[System.String], [Collections`1[[System.Int32]]]]` è `System.Collections.Generic.Dictionary`2`.      ## Representation of Generic Types    The information in this section is intended for CodeDom provider developers and only applies to CLS-compliant languages. The return value can contain generic types. Generic types are formatted with the name of the type followed by a grave accent (&quot;`&quot;) seguito da un numero di argomenti di tipo generico. Gli argomenti di tipo generico, vedere il <xref:System.CodeDom.CodeTypeReferenceCollection>restituito dal <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>proprietà.</xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> </xref:System.CodeDom.CodeTypeReferenceCollection> I valori restituiti da proprietà BaseType e associato <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>contengono lo stesso contenuto come valore del tipo restituito tramite reflection.</xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>       Ad esempio, un <xref:System.Collections.Generic.Dictionary%602>costruito in `K` è una stringa e `V` un <xref:System.Collections.Generic.List%601>costruito di interi è rappresentato da reflection come segue (con le informazioni sull&quot;assembly rimosse): ```   System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]   ``` in modo ricorsivo la proprietà BaseType il <xref:System.CodeDom.CodeTypeReference>per <xref:System.Collections.Generic.Dictionary%602>analisi restituisce le stesse stringhe con la precedente rappresentazione reflection:-proprietà BaseType per l&quot;elemento padre <xref:System.CodeDom.CodeTypeReference>restituisce quanto segue: <CodeContentPlaceHolder>1</CodeContentPlaceHolder> -proprietà BaseType per il primo oggetto nella raccolta <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> <xref:System.CodeDom.CodeTypeReference>restituisce quanto segue : <CodeContentPlaceHolder>2</CodeContentPlaceHolder> -proprietà BaseType per il secondo <xref:System.CodeDom.CodeTypeReference>oggetto il <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>insieme restituisce quanto segue: <CodeContentPlaceHolder>3</CodeContentPlaceHolder> : il <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>proprietà il <xref:System.CodeDom.CodeTypeReference>dell&quot;oggetto per `System.Collections.Generic.List`1&quot; non restituisce i seguenti: ```       System.Int32       ``` il numero di argomenti di tipo deve essere utilizzato durante l&quot;analisi associato <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>valori.</xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> </xref:System.CodeDom.CodeTypeReference> </xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> </xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> </xref:System.CodeDom.CodeTypeReference>  </xref:System.CodeDom.CodeTypeReference></xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> </xref:System.CodeDom.CodeTypeReference> </xref:System.Collections.Generic.Dictionary%602> </xref:System.CodeDom.CodeTypeReference> </xref:System.Collections.Generic.List%601> </xref:System.Collections.Generic.Dictionary%602> La tecnica diffusa consiste nel rimuovere il numero di argomenti di tipo dal codice generato, ma la procedura consigliata è specifica del compilatore.  È importante notare che il numero di argomenti di tipo può trovarsi all&quot;interno di un nome di tipo annidato, nel qual caso è seguito da un segno più (&quot;+&quot;).      > [!NOTE] > Durante la creazione di un oggetto generico <xref:System.CodeDom.CodeTypeReference>la procedura consigliata consiste nello specificare gli argomenti di tipo come <xref:System.CodeDom.CodeTypeReference>oggetti o utilizzare il costruttore che accetta un <xref:System.Type>.</xref:System.Type> </xref:System.CodeDom.CodeTypeReference> </xref:System.CodeDom.CodeTypeReference> Utilizzare il costruttore che crea un <xref:System.CodeDom.CodeTypeReference>da una stringa può provocare errori di argomento di tipo non rilevabili.</xref:System.CodeDom.CodeTypeReference>"
  syntax:
    content: public string BaseType { get; set; }
    return:
      type: System.String
      description: "Il nome del tipo a cui fa riferimento."
  overload: System.CodeDom.CodeTypeReference.BaseType*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.Options
  id: Options
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: Options
  nameWithType: CodeTypeReference.Options
  fullName: System.CodeDom.CodeTypeReference.Options
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Ottiene o imposta l&quot;opzione di riferimento di tipo di codice."
  syntax:
    content: public System.CodeDom.CodeTypeReferenceOptions Options { get; set; }
    return:
      type: System.CodeDom.CodeTypeReferenceOptions
      description: "Combinazione bit per bit di <xref href=&quot;System.CodeDom.CodeTypeReferenceOptions&quot;> </xref> valori."
  overload: System.CodeDom.CodeTypeReference.Options*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeTypeReference.TypeArguments
  id: TypeArguments
  parent: System.CodeDom.CodeTypeReference
  langs:
  - csharp
  name: TypeArguments
  nameWithType: CodeTypeReference.TypeArguments
  fullName: System.CodeDom.CodeTypeReference.TypeArguments
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Ottiene gli argomenti di tipo per il riferimento di tipo generico corrente."
  remarks: "La proprietà TypeArguments è una raccolta di riferimenti al tipo con cui sostituire i riferimenti ai parametri del tipo del tipo generico corrente. La raccolta contiene tutti gli argomenti di tipo per tutti i tipi annidati. Per un esempio, vedere il <xref:System.CodeDom.CodeTypeReference.BaseType%2A>proprietà.</xref:System.CodeDom.CodeTypeReference.BaseType%2A>"
  syntax:
    content: public System.CodeDom.CodeTypeReferenceCollection TypeArguments { get; }
    return:
      type: System.CodeDom.CodeTypeReferenceCollection
      description: "Oggetto <xref href=&quot;System.CodeDom.CodeTypeReferenceCollection&quot;> </xref> contenente gli argomenti di tipo per l&quot;oggetto corrente <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> oggetto."
  overload: System.CodeDom.CodeTypeReference.TypeArguments*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeObject
  isExternal: false
  name: System.CodeDom.CodeObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.CodeDom.CodeTypeReference.#ctor
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference()
  nameWithType: CodeTypeReference.CodeTypeReference()
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference()
- uid: System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(CodeTypeParameter)
  nameWithType: CodeTypeReference.CodeTypeReference(CodeTypeParameter)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(CodeTypeParameter)
- uid: System.CodeDom.CodeTypeParameter
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeParameter
  nameWithType: CodeTypeParameter
  fullName: System.CodeDom.CodeTypeParameter
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(String)
  nameWithType: CodeTypeReference.CodeTypeReference(String)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeTypeReference.#ctor(System.Type)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(Type)
  nameWithType: CodeTypeReference.CodeTypeReference(Type)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(CodeTypeReference,Int32)
  nameWithType: CodeTypeReference.CodeTypeReference(CodeTypeReference,Int32)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(CodeTypeReference,Int32)
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(String,CodeTypeReference[])
  nameWithType: CodeTypeReference.CodeTypeReference(String,CodeTypeReference[])
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String,CodeTypeReference[])
- uid: System.CodeDom.CodeTypeReference[]
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference[]
  spec.csharp:
  - uid: System.CodeDom.CodeTypeReference
    name: CodeTypeReference
    nameWithType: CodeTypeReference
    fullName: CodeTypeReference[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(String,CodeTypeReferenceOptions)
  nameWithType: CodeTypeReference.CodeTypeReference(String,CodeTypeReferenceOptions)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String,CodeTypeReferenceOptions)
- uid: System.CodeDom.CodeTypeReferenceOptions
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReferenceOptions
  nameWithType: CodeTypeReferenceOptions
  fullName: System.CodeDom.CodeTypeReferenceOptions
- uid: System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(String,Int32)
  nameWithType: CodeTypeReference.CodeTypeReference(String,Int32)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(String,Int32)
- uid: System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference(Type,CodeTypeReferenceOptions)
  nameWithType: CodeTypeReference.CodeTypeReference(Type,CodeTypeReferenceOptions)
  fullName: System.CodeDom.CodeTypeReference.CodeTypeReference(Type,CodeTypeReferenceOptions)
- uid: System.CodeDom.CodeTypeReference.ArrayElementType
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: ArrayElementType
  nameWithType: CodeTypeReference.ArrayElementType
  fullName: System.CodeDom.CodeTypeReference.ArrayElementType
- uid: System.CodeDom.CodeTypeReference.ArrayRank
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: ArrayRank
  nameWithType: CodeTypeReference.ArrayRank
  fullName: System.CodeDom.CodeTypeReference.ArrayRank
- uid: System.CodeDom.CodeTypeReference.BaseType
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: BaseType
  nameWithType: CodeTypeReference.BaseType
  fullName: System.CodeDom.CodeTypeReference.BaseType
- uid: System.CodeDom.CodeTypeReference.Options
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: Options
  nameWithType: CodeTypeReference.Options
  fullName: System.CodeDom.CodeTypeReference.Options
- uid: System.CodeDom.CodeTypeReference.TypeArguments
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: TypeArguments
  nameWithType: CodeTypeReference.TypeArguments
  fullName: System.CodeDom.CodeTypeReference.TypeArguments
- uid: System.CodeDom.CodeTypeReferenceCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReferenceCollection
  nameWithType: CodeTypeReferenceCollection
  fullName: System.CodeDom.CodeTypeReferenceCollection
- uid: System.CodeDom.CodeTypeReference.#ctor*
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference.CodeTypeReference
- uid: System.CodeDom.CodeTypeReference.ArrayElementType*
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: ArrayElementType
  nameWithType: CodeTypeReference.ArrayElementType
- uid: System.CodeDom.CodeTypeReference.ArrayRank*
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: ArrayRank
  nameWithType: CodeTypeReference.ArrayRank
- uid: System.CodeDom.CodeTypeReference.BaseType*
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: BaseType
  nameWithType: CodeTypeReference.BaseType
- uid: System.CodeDom.CodeTypeReference.Options*
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: Options
  nameWithType: CodeTypeReference.Options
- uid: System.CodeDom.CodeTypeReference.TypeArguments*
  parent: System.CodeDom.CodeTypeReference
  isExternal: false
  name: TypeArguments
  nameWithType: CodeTypeReference.TypeArguments
