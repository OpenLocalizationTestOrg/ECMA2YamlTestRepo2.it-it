### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Effects.ShaderEffect
  id: ShaderEffect
  children:
  - System.Windows.Media.Effects.ShaderEffect.#ctor
  - System.Windows.Media.Effects.ShaderEffect.Clone
  - System.Windows.Media.Effects.ShaderEffect.CloneCore(System.Windows.Freezable)
  - System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue
  - System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore
  - System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex
  - System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Effects.ShaderEffect.PaddingBottom
  - System.Windows.Media.Effects.ShaderEffect.PaddingLeft
  - System.Windows.Media.Effects.ShaderEffect.PaddingRight
  - System.Windows.Media.Effects.ShaderEffect.PaddingTop
  - System.Windows.Media.Effects.ShaderEffect.PixelShader
  - System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)
  - System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty
  - System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)
  - System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)
  - System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)
  - System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)
  - System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(System.Windows.DependencyProperty)
  langs:
  - csharp
  name: ShaderEffect
  nameWithType: ShaderEffect
  fullName: System.Windows.Media.Effects.ShaderEffect
  type: Class
  summary: "Fornisce un effetto bitmap personalizzato usando un <xref href=&quot;System.Windows.Media.Effects.PixelShader&quot;> </xref>."
  remarks: "Derivare dalla classe ShaderEffect per implementare un effetto personalizzato basato su un singolo pixel shader.       La procedura seguente viene illustrato come creare un effetto personalizzato.      1.  Carica un <xref:System.Windows.Media.Effects.PixelShader>da bytecode di alto livello Shading Language (HLSL) precompilato.</xref:System.Windows.Media.Effects.PixelShader>      2.  Definire le proprietà di dipendenza che rappresentano i parametri dell&quot;effetto e <xref:System.Windows.Media.Brush>-basato su input superficie di attacco.</xref:System.Windows.Media.Brush> Utilizzare uno del <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A>overload per associare i dati di input con registrare i numeri di cui vengono fatto riferimento nel bytecode HLSL.</xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A>       Il numero di campionatori è limitato a 4.       Le restrizioni seguenti si applicano quando si utilizza uno shader PS 3.0.      -Quando viene assegnato uno shader PS 3.0, il numero di campionatori aumenta a 8. Assegnare lo shader PS 3.0 prima degli altri shader per abilitare la registrazione 8 campionatori.      -Il limite di registro costante dello shader completo 224 per float viene utilizzato. Per ulteriori informazioni, vedere [ps_3_0](http://go.microsoft.com/fwlink/?LinkId=166292).      -I seguenti tipi di dati sono supportati negli shader PS 3.0 solo. Se queste vengono utilizzate le versioni precedenti dello shader, viene generata un&quot;eccezione.          - `int` e tipi convertibili in `int`: `uint`, `byte`, `sbyte`, `long`, `ulong`, `short`, `ushort`, `char`           -    `bool` : se un valido PS 3.0 shader viene caricato in un computer che non dispone di supporto hardware per PS 3.0, lo shader viene ignorato. Se lo shader non è valido, viene generata alcuna eccezione.      -Se un computer ha più di una scheda video, il comportamento è determinato dalla scheda video meno potente. Ad esempio, se il computer dispone di due schede video, uno dei quali supporta PS 3.0 e uno dei quali non, il comportamento è lo stesso come se il computer non supporta PS 3.0.      -Se un computer supporta il rendering PS 3.0 nell&quot;hardware, ma viene assegnato uno shader PS 3.0 non valido, il <xref:System.Windows.Media.Effects.PixelShader.InvalidPixelShaderEncountered>viene generato l&quot;evento.</xref:System.Windows.Media.Effects.PixelShader.InvalidPixelShaderEncountered> Un esempio di uno shader PS 3.0 non valido è uno compilato con la `ps_3_sw` flag. La classe ShaderEffect accetta solo shader PS 3.0 che vengono compilati con il `ps_3_0` flag passato a fxc.exe. Per ulteriori informazioni, vedere [strumento compilatore](http://go.microsoft.com/fwlink/?LinkId=166293).      > [!NOTE] > Shader PS 2.0 eseguire durante il rendering nel software. Tuttavia, anche se PS 3.0 è supportata dall&quot;hardware del sistema, gli shader PS 3.0 non vengono eseguiti durante il rendering software."
  example:
  - "The following code example shows how to derive from the ShaderEffect class.  \n  \n [!code-cs[System.Windows.Media.Effects.ShaderEffect#1](~/add/codesnippet/csharp/ShaderEffectDemo/ThresholdEffect.cs#1)]  \n  \n The following code example shows a shader that corresponds to the previous ShaderEffect class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following XAML shows how to use the custom shader effect.  \n  \n [!code-xml[System.Windows.Media.Effects.ShaderEffect#1000](~/add/codesnippet/xaml/ShaderEffectDemo/Window1.xaml#1000)]"
  syntax:
    content: 'public abstract class ShaderEffect : System.Windows.Media.Effects.Effect'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Effects.Effect
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Effects.Effect.EffectMapping
  - System.Windows.Media.Effects.Effect.ImplicitInput
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: ShaderEffect()
  nameWithType: ShaderEffect.ShaderEffect()
  fullName: System.Windows.Media.Effects.ShaderEffect.ShaderEffect()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Media.Effects.ShaderEffect&quot;> </xref> classe."
  syntax:
    content: protected ShaderEffect ();
    parameters: []
  overload: System.Windows.Media.Effects.ShaderEffect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.Clone
  id: Clone
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: Clone()
  nameWithType: ShaderEffect.Clone()
  fullName: System.Windows.Media.Effects.ShaderEffect.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Crea un clone modificabile di questo <xref href=&quot;System.Windows.Media.Effects.ShaderEffect&quot;> </xref> oggetto, eseguendo copie complete dei valori dell&quot;oggetto. Quando si copiano le proprietà di dipendenza di questo oggetto, questo metodo copia risorsa riferimenti e i data binding (che potrebbe non risolvere più), ma non le animazioni né i relativi valori correnti."
  remarks: "Il metodo Clone può essere utilizzato per produrre copie modificabili di bloccata <xref:System.Windows.Freezable>oggetti.</xref:System.Windows.Freezable> Per comodità, questo metodo nasconde ereditato <xref:System.Windows.Freezable.Clone%2A>metodo per fornire un&quot;implementazione fortemente tipizzata.</xref:System.Windows.Freezable.Clone%2A>"
  syntax:
    content: public System.Windows.Media.Effects.ShaderEffect Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.ShaderEffect
      description: "Un clone modificabile di questa istanza. Il clone restituito è effettivamente una copia completa dell&quot;oggetto corrente. Il clone <xref:System.Windows.Freezable.IsFrozen*>proprietà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Freezable.IsFrozen*>"
  overload: System.Windows.Media.Effects.ShaderEffect.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCore(System.Windows.Freezable)
  id: CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: CloneCore(Freezable)
  nameWithType: ShaderEffect.CloneCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.CloneCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Rende l&quot;istanza un clone (copia completa) dell&quot;oggetto specificato <xref href=&quot;System.Windows.Freezable&quot;> </xref> utilizzando i valori di proprietà di base (non animati)."
  syntax:
    content: protected override void CloneCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "Oggetto da clonare."
  overload: System.Windows.Media.Effects.ShaderEffect.CloneCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: ShaderEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Crea un clone modificabile di questo <xref href=&quot;System.Windows.Media.Effects.ShaderEffect&quot;> </xref> oggetto, eseguendo copie complete dei valori correnti di tale oggetto. I riferimenti alle risorse, data binding e le animazioni non vengono copiate, ma vengono copiati i relativi valori correnti."
  remarks: "Questo metodo viene utilizzato per produrre copie modificabili di bloccata <xref:System.Windows.Freezable>oggetti (o qualsiasi <xref:System.Windows.Freezable>oggetto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Per comodità, questo metodo nasconde la versione ereditata con un&quot;implementazione fortemente tipizzata.       Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Effects.ShaderEffect CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.ShaderEffect
      description: "Un clone modificabile dell&quot;oggetto corrente. L&quot;oggetto clonato <> </> *> proprietà sarà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> anche se l&quot;origine <> </> *> proprietà <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(System.Windows.Freezable)
  id: CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: CloneCurrentValueCore(Freezable)
  nameWithType: ShaderEffect.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Rende l&quot;istanza un clone modificabile (copia completa) dell&quot;oggetto specificato <xref href=&quot;System.Windows.Freezable&quot;> </xref> utilizzando i valori di proprietà correnti."
  syntax:
    content: protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "Il <xref href=&quot;System.Windows.Freezable&quot;> </xref> da clonare."
  overload: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: ShaderEffect.CreateInstanceCore()
  fullName: System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Crea una nuova istanza di <xref href=&quot;System.Windows.Freezable&quot;> </xref> classe derivata."
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "Nuova istanza."
  overload: System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex
  id: DdxUvDdyUvRegisterIndex
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: DdxUvDdyUvRegisterIndex
  nameWithType: ShaderEffect.DdxUvDdyUvRegisterIndex
  fullName: System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Ottiene o imposta un valore che indica il registro dello shader da usare per la derivazione parziale delle coordinate di trama rispetto alle dimensioni dello schermo."
  remarks: "Utilizzare la proprietà DdxUvDdyUvRegisterIndex per specificare il registro dello shader contenente la derivazione parziale della trama coordinate rispetto alle dimensioni dello schermo. Ad esempio, se DdxUvDdyUvRegisterIndex è impostato su 4, viene utilizzato il registro c4 dello shader. Registro c4 contiene quattro campi float. Il codice di alto livello Shading Language (HLSL) seguente viene illustrato come utilizzare questo registro. Il `nextPixelUV` valore rappresenta il pixel successivo a destra.      ```   float4 ddxUvDdyUv : register(c4);   SamplerState  sampler : register(S0);   ...   float2 nextPixelUV;   nextPixelUV.u = ddxUvDdyUv.x + u;   nextPixelUV.v = ddxUvDdyUv.y + v;      tex2D(sampler, nextPixelUV);   ```La tabella seguente illustra la modalità di riempimento del registro per DdxUvDdyUvRegisterIndex.      | Registrare costante | Valori derivati |   |-----------------------|----------------------|   | x component|ddx(u) |   | y component|ddx(v) |   | component|ddy(u) z |   | component|ddy(v) w |       Le coordinate di trama vengono indicate come `(u, v)`. `ddx(u)`è la costante derivata parziale del componente di coordinate di trama `u` rispetto alla coordinata x spazio sullo schermo. `ddy(u)`è il derivato parziale di coordinate di trama `u` rispetto alla coordinata y spazio sullo schermo. Analogamente, `ddx(v)` e `ddy(v)` sono i valori derivati lo spazio della schermata corrispondenti per il componente di coordinate di trama `v`.      > [!NOTE] > HLSL fornisce le istruzioni ddx e ddy per calcolare tali valori, ma queste istruzioni non sono disponibili in tutti i componenti hardware PixelShader 2.0.       È possibile pensare a queste costanti nel modo seguente. Se si esegue 1 pixel a destra nello spazio sullo schermo (nella direzione x), quindi `ddx(u)` è la quantità che `u` modifiche nello spazio della trama e `ddx(v)` è la quantità che `v` modifiche nello spazio della trama. Se l&quot;effetto è allineato all&quot;asse quando ne viene eseguito il rendering, `ddx(v)` è 0. Se l&quot;effetto viene ruotato quando ne viene eseguito il rendering, `ddx(v)` è diverso da zero."
  syntax:
    content: protected int DdxUvDdyUvRegisterIndex { get; set; }
    return:
      type: System.Int32
      description: "L&quot;indice del registro che contiene la derivazione parziale."
  overload: System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di impostare la proprietà DdxUvDdyUvRegisterIndex più di una volta o dopo l&quot;elaborazione iniziale dell&quot;effetto."
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(System.Windows.Freezable)
  id: GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: GetAsFrozenCore(Freezable)
  nameWithType: ShaderEffect.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Rende l&quot;istanza un clone bloccato dell&quot;oggetto specificato <xref href=&quot;System.Windows.Freezable&quot;> </xref> utilizzando i valori di proprietà di base (non animati)."
  syntax:
    content: protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "L&quot;istanza da copiare."
  overload: System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: ShaderEffect.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Rende l&quot;istanza corrente di un clone bloccato dell&quot;oggetto specificato <xref href=&quot;System.Windows.Freezable&quot;> </xref>. Se l&quot;oggetto ha proprietà di dipendenza animate, i valori animati correnti vengono copiati."
  syntax:
    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "Il <xref href=&quot;System.Windows.Freezable&quot;> </xref> da copiare e bloccare."
  overload: System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingBottom
  id: PaddingBottom
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PaddingBottom
  nameWithType: ShaderEffect.PaddingBottom
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingBottom
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Ottiene o imposta un valore che indica che trama generata dall&quot;effetto è maggiore di rispettiva trama immessa lungo il bordo inferiore."
  syntax:
    content: protected double PaddingBottom { get; set; }
    return:
      type: System.Double
      description: "Riempimento lungo il bordo inferiore dell&quot;effetto."
  overload: System.Windows.Media.Effects.ShaderEffect.PaddingBottom*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore specificato è minore di 0."
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingLeft
  id: PaddingLeft
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PaddingLeft
  nameWithType: ShaderEffect.PaddingLeft
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingLeft
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Ottiene o imposta un valore che indica che trama generata dall&quot;effetto è maggiore di rispettiva trama immessa lungo il bordo sinistro."
  syntax:
    content: protected double PaddingLeft { get; set; }
    return:
      type: System.Double
      description: "Riempimento lungo il bordo sinistro dell&quot;effetto."
  overload: System.Windows.Media.Effects.ShaderEffect.PaddingLeft*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore specificato è minore di 0."
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingRight
  id: PaddingRight
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PaddingRight
  nameWithType: ShaderEffect.PaddingRight
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingRight
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Ottiene o imposta un valore che indica che trama generata dall&quot;effetto è maggiore di rispettiva trama immessa lungo il bordo destro."
  syntax:
    content: protected double PaddingRight { get; set; }
    return:
      type: System.Double
      description: "Riempimento lungo il bordo destro dell&quot;effetto."
  overload: System.Windows.Media.Effects.ShaderEffect.PaddingRight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore specificato è minore di 0."
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingTop
  id: PaddingTop
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PaddingTop
  nameWithType: ShaderEffect.PaddingTop
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingTop
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Ottiene o imposta un valore che indica che trama generata dall&quot;effetto è maggiore di rispettiva trama immessa lungo il bordo superiore."
  syntax:
    content: protected double PaddingTop { get; set; }
    return:
      type: System.Double
      description: "Riempimento lungo il bordo superiore dell&quot;effetto."
  overload: System.Windows.Media.Effects.ShaderEffect.PaddingTop*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore specificato è minore di 0."
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShader
  id: PixelShader
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PixelShader
  nameWithType: ShaderEffect.PixelShader
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShader
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Ottiene o imposta il <xref href=&quot;System.Windows.Media.Effects.PixelShader&quot;> </xref> da utilizzare per l&quot;effetto."
  remarks: "<a name=&quot;dependencyPropertyInfo_PixelShader&quot;></a># # Informazioni proprietà di dipendenza | | |   |-|-|   | Campo dell&quot;identificatore | <xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty>|   | Impostare le proprietà dei metadati su `true`| None |</xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty>"
  syntax:
    content: protected System.Windows.Media.Effects.PixelShader PixelShader { get; set; }
    return:
      type: System.Windows.Media.Effects.PixelShader
      description: "Il <xref href=&quot;System.Windows.Media.Effects.PixelShader&quot;> </xref> per l&quot;effetto."
  overload: System.Windows.Media.Effects.ShaderEffect.PixelShader*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)
  id: PixelShaderConstantCallback(System.Int32)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PixelShaderConstantCallback(Int32)
  nameWithType: ShaderEffect.PixelShaderConstantCallback(Int32)
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Associa un valore di proprietà di dipendenza registro costante float di un pixel shader."
  remarks: "Utilizzare il metodo PixelShaderConstantCallback quando si registra una proprietà di dipendenza per una costante dello shader. Il metodo PixelShaderConstantCallback costruisce una <xref:System.Windows.PropertyChangedCallback>delegato che, quando richiamata, crea un&quot;associazione tra la proprietà di dipendenza e il registro costante dello shader specificato da `floatRegisterIndex`.</xref:System.Windows.PropertyChangedCallback>"
  syntax:
    content: protected static System.Windows.PropertyChangedCallback PixelShaderConstantCallback (int floatRegisterIndex);
    parameters:
    - id: floatRegisterIndex
      type: System.Int32
      description: "L&quot;indice del registro dello shader associato alla proprietà di dipendenza."
    return:
      type: System.Windows.PropertyChangedCallback
      description: "Oggetto <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> delegato che associa una proprietà di dipendenza e il registro costante dello shader specificato da <code> floatRegisterIndex </code>."
  overload: System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La proprietà di dipendenza è un tipo sconosciuto."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>floatRegisterIndex</code>è maggiore o uguale a 32, o <code>floatRegisterIndex</code> è minore di 0."
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty
  id: PixelShaderProperty
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PixelShaderProperty
  nameWithType: ShaderEffect.PixelShaderProperty
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Identifica la <xref:System.Windows.Media.Effects.ShaderEffect.PixelShader*>proprietà di dipendenza.</xref:System.Windows.Media.Effects.ShaderEffect.PixelShader*>"
  syntax:
    content: protected static readonly System.Windows.DependencyProperty PixelShaderProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)
  id: PixelShaderSamplerCallback(System.Int32)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PixelShaderSamplerCallback(Int32)
  nameWithType: ShaderEffect.PixelShaderSamplerCallback(Int32)
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Associa un valore di proprietà di dipendenza sampler del pixel shader."
  remarks: "Utilizzare il metodo PixelShaderSamplerCallback quando si registra un <xref:System.Windows.Media.Brush>-con valori di proprietà di dipendenza per un campionatore dello shader.</xref:System.Windows.Media.Brush> Il metodo PixelShaderSamplerCallback costruisce una <xref:System.Windows.PropertyChangedCallback>delegato che, quando richiamata, crea un&quot;associazione tra la proprietà di dipendenza e il registro del campionatore dello shader specificato da `samplerRegisterIndex`.</xref:System.Windows.PropertyChangedCallback>"
  syntax:
    content: protected static System.Windows.PropertyChangedCallback PixelShaderSamplerCallback (int samplerRegisterIndex);
    parameters:
    - id: samplerRegisterIndex
      type: System.Int32
      description: "L&quot;indice del campionatore dello shader associato alla proprietà di dipendenza."
    return:
      type: System.Windows.PropertyChangedCallback
      description: "Oggetto <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> delegato che associa una proprietà di dipendenza e il registro del campionatore dello shader specificato da <code> samplerRegisterIndex </code>."
  overload: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)
  id: PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: PixelShaderSamplerCallback(Int32,SamplingMode)
  nameWithType: ShaderEffect.PixelShaderSamplerCallback(Int32,SamplingMode)
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(Int32,SamplingMode)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Associa un valore di proprietà di dipendenza sampler del pixel shader e un <xref href=&quot;System.Windows.Media.Effects.SamplingMode&quot;> </xref>."
  remarks: "Utilizzare il <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A>metodo quando si registra un <xref:System.Windows.Media.Brush>-con valori di proprietà di dipendenza per un campionatore dello shader.</xref:System.Windows.Media.Brush> </xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A> Il <xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A>metodo costruisce una <xref:System.Windows.PropertyChangedCallback>delegato che, quando richiamata, crea un&quot;associazione tra la proprietà di dipendenza e il registro del campionatore dello shader specificato da `samplerRegisterIndex`.</xref:System.Windows.PropertyChangedCallback> </xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A>"
  syntax:
    content: protected static System.Windows.PropertyChangedCallback PixelShaderSamplerCallback (int samplerRegisterIndex, System.Windows.Media.Effects.SamplingMode samplingMode);
    parameters:
    - id: samplerRegisterIndex
      type: System.Int32
      description: "L&quot;indice del campionatore dello shader associato alla proprietà di dipendenza."
    - id: samplingMode
      type: System.Windows.Media.Effects.SamplingMode
      description: "Il <xref href=&quot;System.Windows.Media.Effects.SamplingMode&quot;> </xref> per campionatore dello shader."
    return:
      type: System.Windows.PropertyChangedCallback
      description: "Oggetto <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> delegato che associa una proprietà di dipendenza e il registro del campionatore dello shader specificato da <code> samplerRegisterIndex </code>."
  overload: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)
  id: RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: RegisterPixelShaderSamplerProperty(String,Type,Int32)
  nameWithType: ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32)
  fullName: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Associa una proprietà di dipendenza a un registro del campionatore dello shader."
  syntax:
    content: protected static System.Windows.DependencyProperty RegisterPixelShaderSamplerProperty (string dpName, Type ownerType, int samplerRegisterIndex);
    parameters:
    - id: dpName
      type: System.String
      description: "Il nome della proprietà di dipendenza."
    - id: ownerType
      type: System.Type
      description: "Il tipo di effetto che dispone della proprietà di dipendenza."
    - id: samplerRegisterIndex
      type: System.Int32
      description: "L&quot;indice del campionatore dello shader associato alla proprietà di dipendenza."
    return:
      type: System.Windows.DependencyProperty
      description: "Una proprietà di dipendenza associata al campionatore dello shader specificato da <code> samplerRegisterIndex </code>."
  overload: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)
  id: RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: RegisterPixelShaderSamplerProperty(String,Type,Int32,SamplingMode)
  nameWithType: ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32,SamplingMode)
  fullName: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32,SamplingMode)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Associa una proprietà di dipendenza a un registro del campionatore dello shader e un <xref href=&quot;System.Windows.Media.Effects.SamplingMode&quot;> </xref>."
  syntax:
    content: protected static System.Windows.DependencyProperty RegisterPixelShaderSamplerProperty (string dpName, Type ownerType, int samplerRegisterIndex, System.Windows.Media.Effects.SamplingMode samplingMode);
    parameters:
    - id: dpName
      type: System.String
      description: "Il nome della proprietà di dipendenza."
    - id: ownerType
      type: System.Type
      description: "Il tipo di effetto che dispone della proprietà di dipendenza."
    - id: samplerRegisterIndex
      type: System.Int32
      description: "L&quot;indice del campionatore dello shader associato alla proprietà di dipendenza."
    - id: samplingMode
      type: System.Windows.Media.Effects.SamplingMode
      description: "Il <xref href=&quot;System.Windows.Media.Effects.SamplingMode&quot;> </xref> per campionatore dello shader."
    return:
      type: System.Windows.DependencyProperty
      description: "Una proprietà di dipendenza associata al campionatore dello shader specificato da <code> samplerRegisterIndex </code>."
  overload: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(System.Windows.DependencyProperty)
  id: UpdateShaderValue(System.Windows.DependencyProperty)
  parent: System.Windows.Media.Effects.ShaderEffect
  langs:
  - csharp
  name: UpdateShaderValue(DependencyProperty)
  nameWithType: ShaderEffect.UpdateShaderValue(DependencyProperty)
  fullName: System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(DependencyProperty)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "Notifica all&quot;effetto che la costante di shader o il campionatore corrispondente alla proprietà di dipendenza specificata deve essere aggiornato."
  syntax:
    content: protected void UpdateShaderValue (System.Windows.DependencyProperty dp);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "La proprietà di dipendenza da aggiornare."
  overload: System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Effects.Effect
  isExternal: false
  name: System.Windows.Media.Effects.Effect
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Media.Effects.ShaderEffect.#ctor
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: ShaderEffect()
  nameWithType: ShaderEffect.ShaderEffect()
  fullName: System.Windows.Media.Effects.ShaderEffect.ShaderEffect()
- uid: System.Windows.Media.Effects.ShaderEffect.Clone
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: Clone()
  nameWithType: ShaderEffect.Clone()
  fullName: System.Windows.Media.Effects.ShaderEffect.Clone()
- uid: System.Windows.Media.Effects.ShaderEffect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: ShaderEffect
  nameWithType: ShaderEffect
  fullName: System.Windows.Media.Effects.ShaderEffect
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CloneCore(Freezable)
  nameWithType: ShaderEffect.CloneCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.CloneCore(Freezable)
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: ShaderEffect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue()
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CloneCurrentValueCore(Freezable)
  nameWithType: ShaderEffect.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(Freezable)
- uid: System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: ShaderEffect.CreateInstanceCore()
  fullName: System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore()
- uid: System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: DdxUvDdyUvRegisterIndex
  nameWithType: ShaderEffect.DdxUvDdyUvRegisterIndex
  fullName: System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: GetAsFrozenCore(Freezable)
  nameWithType: ShaderEffect.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(Freezable)
- uid: System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: ShaderEffect.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(Freezable)
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingBottom
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingBottom
  nameWithType: ShaderEffect.PaddingBottom
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingBottom
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingLeft
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingLeft
  nameWithType: ShaderEffect.PaddingLeft
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingLeft
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingRight
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingRight
  nameWithType: ShaderEffect.PaddingRight
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingRight
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingTop
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingTop
  nameWithType: ShaderEffect.PaddingTop
  fullName: System.Windows.Media.Effects.ShaderEffect.PaddingTop
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShader
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShader
  nameWithType: ShaderEffect.PixelShader
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShader
- uid: System.Windows.Media.Effects.PixelShader
  parent: System.Windows.Media.Effects
  isExternal: false
  name: PixelShader
  nameWithType: PixelShader
  fullName: System.Windows.Media.Effects.PixelShader
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShaderConstantCallback(Int32)
  nameWithType: ShaderEffect.PixelShaderConstantCallback(Int32)
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(Int32)
- uid: System.Windows.PropertyChangedCallback
  parent: System.Windows
  isExternal: false
  name: PropertyChangedCallback
  nameWithType: PropertyChangedCallback
  fullName: System.Windows.PropertyChangedCallback
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShaderProperty
  nameWithType: ShaderEffect.PixelShaderProperty
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShaderSamplerCallback(Int32)
  nameWithType: ShaderEffect.PixelShaderSamplerCallback(Int32)
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(Int32)
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShaderSamplerCallback(Int32,SamplingMode)
  nameWithType: ShaderEffect.PixelShaderSamplerCallback(Int32,SamplingMode)
  fullName: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(Int32,SamplingMode)
- uid: System.Windows.Media.Effects.SamplingMode
  parent: System.Windows.Media.Effects
  isExternal: false
  name: SamplingMode
  nameWithType: SamplingMode
  fullName: System.Windows.Media.Effects.SamplingMode
- uid: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: RegisterPixelShaderSamplerProperty(String,Type,Int32)
  nameWithType: ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32)
  fullName: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: RegisterPixelShaderSamplerProperty(String,Type,Int32,SamplingMode)
  nameWithType: ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32,SamplingMode)
  fullName: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(String,Type,Int32,SamplingMode)
- uid: System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(System.Windows.DependencyProperty)
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: UpdateShaderValue(DependencyProperty)
  nameWithType: ShaderEffect.UpdateShaderValue(DependencyProperty)
  fullName: System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(DependencyProperty)
- uid: System.Windows.Media.Effects.ShaderEffect.#ctor*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: ShaderEffect
  nameWithType: ShaderEffect.ShaderEffect
- uid: System.Windows.Media.Effects.ShaderEffect.Clone*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: Clone
  nameWithType: ShaderEffect.Clone
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCore*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CloneCore
  nameWithType: ShaderEffect.CloneCore
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CloneCurrentValue
  nameWithType: ShaderEffect.CloneCurrentValue
- uid: System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CloneCurrentValueCore
  nameWithType: ShaderEffect.CloneCurrentValueCore
- uid: System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: CreateInstanceCore
  nameWithType: ShaderEffect.CreateInstanceCore
- uid: System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: DdxUvDdyUvRegisterIndex
  nameWithType: ShaderEffect.DdxUvDdyUvRegisterIndex
- uid: System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: GetAsFrozenCore
  nameWithType: ShaderEffect.GetAsFrozenCore
- uid: System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: GetCurrentValueAsFrozenCore
  nameWithType: ShaderEffect.GetCurrentValueAsFrozenCore
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingBottom*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingBottom
  nameWithType: ShaderEffect.PaddingBottom
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingLeft*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingLeft
  nameWithType: ShaderEffect.PaddingLeft
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingRight*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingRight
  nameWithType: ShaderEffect.PaddingRight
- uid: System.Windows.Media.Effects.ShaderEffect.PaddingTop*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PaddingTop
  nameWithType: ShaderEffect.PaddingTop
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShader*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShader
  nameWithType: ShaderEffect.PixelShader
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShaderConstantCallback
  nameWithType: ShaderEffect.PixelShaderConstantCallback
- uid: System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: PixelShaderSamplerCallback
  nameWithType: ShaderEffect.PixelShaderSamplerCallback
- uid: System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: RegisterPixelShaderSamplerProperty
  nameWithType: ShaderEffect.RegisterPixelShaderSamplerProperty
- uid: System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue*
  parent: System.Windows.Media.Effects.ShaderEffect
  isExternal: false
  name: UpdateShaderValue
  nameWithType: ShaderEffect.UpdateShaderValue
