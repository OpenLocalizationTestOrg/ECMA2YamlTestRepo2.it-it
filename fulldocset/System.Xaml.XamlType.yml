### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlType
  id: XamlType
  children:
  - System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)
  - System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlType.AllowedContentTypes
  - System.Xaml.XamlType.BaseType
  - System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  - System.Xaml.XamlType.ConstructionRequiresArguments
  - System.Xaml.XamlType.ContentProperty
  - System.Xaml.XamlType.ContentWrappers
  - System.Xaml.XamlType.DeferringLoader
  - System.Xaml.XamlType.Equals(System.Object)
  - System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  - System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  - System.Xaml.XamlType.GetAllAttachableMembers
  - System.Xaml.XamlType.GetAllMembers
  - System.Xaml.XamlType.GetAttachableMember(System.String)
  - System.Xaml.XamlType.GetHashCode
  - System.Xaml.XamlType.GetMember(System.String)
  - System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  - System.Xaml.XamlType.GetXamlNamespaces
  - System.Xaml.XamlType.Invoker
  - System.Xaml.XamlType.IsAmbient
  - System.Xaml.XamlType.IsArray
  - System.Xaml.XamlType.IsCollection
  - System.Xaml.XamlType.IsConstructible
  - System.Xaml.XamlType.IsDictionary
  - System.Xaml.XamlType.IsGeneric
  - System.Xaml.XamlType.IsMarkupExtension
  - System.Xaml.XamlType.IsNameScope
  - System.Xaml.XamlType.IsNameValid
  - System.Xaml.XamlType.IsNullable
  - System.Xaml.XamlType.IsPublic
  - System.Xaml.XamlType.IsUnknown
  - System.Xaml.XamlType.IsUsableDuringInitialization
  - System.Xaml.XamlType.IsWhitespaceSignificantCollection
  - System.Xaml.XamlType.IsXData
  - System.Xaml.XamlType.ItemType
  - System.Xaml.XamlType.KeyType
  - System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  - System.Xaml.XamlType.LookupAllAttachableMembers
  - System.Xaml.XamlType.LookupAllMembers
  - System.Xaml.XamlType.LookupAllowedContentTypes
  - System.Xaml.XamlType.LookupAttachableMember(System.String)
  - System.Xaml.XamlType.LookupBaseType
  - System.Xaml.XamlType.LookupCollectionKind
  - System.Xaml.XamlType.LookupConstructionRequiresArguments
  - System.Xaml.XamlType.LookupContentProperty
  - System.Xaml.XamlType.LookupContentWrappers
  - System.Xaml.XamlType.LookupCustomAttributeProvider
  - System.Xaml.XamlType.LookupDeferringLoader
  - System.Xaml.XamlType.LookupInvoker
  - System.Xaml.XamlType.LookupIsAmbient
  - System.Xaml.XamlType.LookupIsConstructible
  - System.Xaml.XamlType.LookupIsMarkupExtension
  - System.Xaml.XamlType.LookupIsNameScope
  - System.Xaml.XamlType.LookupIsNullable
  - System.Xaml.XamlType.LookupIsPublic
  - System.Xaml.XamlType.LookupIsUnknown
  - System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  - System.Xaml.XamlType.LookupIsXData
  - System.Xaml.XamlType.LookupItemType
  - System.Xaml.XamlType.LookupKeyType
  - System.Xaml.XamlType.LookupMarkupExtensionReturnType
  - System.Xaml.XamlType.LookupMember(System.String,System.Boolean)
  - System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  - System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  - System.Xaml.XamlType.LookupSetTypeConverterHandler
  - System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  - System.Xaml.XamlType.LookupTypeConverter
  - System.Xaml.XamlType.LookupUnderlyingType
  - System.Xaml.XamlType.LookupUsableDuringInitialization
  - System.Xaml.XamlType.LookupValueSerializer
  - System.Xaml.XamlType.MarkupExtensionReturnType
  - System.Xaml.XamlType.Name
  - System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  - System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  - System.Xaml.XamlType.PreferredXamlNamespace
  - System.Xaml.XamlType.SchemaContext
  - System.Xaml.XamlType.ToString
  - System.Xaml.XamlType.TrimSurroundingWhitespace
  - System.Xaml.XamlType.TypeArguments
  - System.Xaml.XamlType.TypeConverter
  - System.Xaml.XamlType.UnderlyingType
  - System.Xaml.XamlType.ValueSerializer
  langs:
  - csharp
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
  type: Class
  summary: "Vengono fornite informazioni sui tipi XAML come parte dell&quot;intero sistema XAML implementati nei servizi XAML di .NET Framework."
  remarks: "Molte API nella classe XamlType forniscono informazioni sui tipi XAML, in cui il concetto che si riferiscono è simile a particolari sezioni della specifica XAML [MS-XAML].       XamlType è ampiamente utilizzato nell&quot;API di servizi XAML di .NET Framework per reporting di informazioni su un tipo XAML. XamlType segnala le informazioni che occorre conoscere un tipo XAML per operare con un&quot;istanza o per accedere ai relativi membri da un flusso del nodo XAML o una rappresentazione XAML simile. La creazione di report è simile alla modalità <xref:System.Type>in CLR sistema di tipi, insieme alle classi di reflection, ad esempio <xref:System.Reflection.MemberInfo>, forniscono informazioni su un tipo CLR e il relativo utilizzo.</xref:System.Reflection.MemberInfo> </xref:System.Type>       Per estendere il sistema di tipi XAML, è possibile derivare da XamlType. A tale scopo, è inoltre necessario implementare un <xref:System.Xaml.Schema.XamlTypeInvoker>.</xref:System.Xaml.Schema.XamlTypeInvoker> Il <xref:System.Xaml.Schema.XamlTypeInvoker>consente al sistema di tipo XAML generalizzato di lavorare con il sistema di tipi di backup specificato come parte del comportamento della chiamata.</xref:System.Xaml.Schema.XamlTypeInvoker> Personalizzato specifico <xref:System.Xaml.Schema.XamlTypeInvoker>fornisce un modo per ridurre le dipendenze nel sistema di tipi CLR, utilizzato dal comportamento predefinito XamlType.</xref:System.Xaml.Schema.XamlTypeInvoker>"
  syntax:
    content: 'public class XamlType : IEquatable<System.Xaml.XamlType>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Xaml.XamlType>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Type,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(Type,XamlSchemaContext)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Xaml.XamlType&quot;> </xref> classe in base alle informazioni sul tipo CLR sottostante."
  syntax:
    content: public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: underlyingType
      type: System.Type
      description: "CLR sottostante <xref:System.Type>per il tipo XAML da costruire.</xref:System.Type>"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Contesto dello schema XAML per lettori o writer XAML."
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>underlyingType</code> or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Xaml.XamlType&quot;> </xref> classe basata su un nome di stringa per il tipo."
  remarks: "Si tratta di un costruttore protetto. Nessuna classe pubblica derivata corrente esiste che utilizzano questo percorso specifico per la costruzione. I consumer dell&quot;oggetto esistente <xref:System.Xaml.XamlType>, è necessario usare firme del costruttore (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, o <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) per inizializzare un <xref:System.Xaml.XamlType>oggetto.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> </xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29> </xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29> </xref:System.Xaml.XamlType>"
  syntax:
    content: protected XamlType (string typeName, System.Collections.Generic.IList<System.Xaml.XamlType> typeArguments, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: typeName
      type: System.String
      description: "Il nome del tipo da creare."
    - id: typeArguments
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Gli argomenti tipo per un <xref href=&quot;System.Xaml.XamlType&quot;> </xref> che rappresenta un tipo generico. Può essere (e spesso è) <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, che indica che il tipo rappresentato non è un tipo generico."
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Contesto dello schema XAML per i reader XAML e writer XAML."
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>typeName</code> or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)
  id: '#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Xaml.XamlType&quot;> </xref> classe in base alle informazioni sul tipo sottostante e un <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> implementazione."
  syntax:
    content: public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);
    parameters:
    - id: underlyingType
      type: System.Type
      description: "Il tipo sottostante per il tipo XAML da costruire."
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Contesto dello schema XAML per il lettore XAML."
    - id: invoker
      type: System.Xaml.Schema.XamlTypeInvoker
      description: "Il <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> implementazione che gestisce la reflection di runtime chiama contro il <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>underlyingType</code> or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Xaml.XamlType&quot;> </xref> classe basata sullo spazio dei nomi XAML e un nome di stringa per il tipo. Questo costruttore è esclusivamente per l&quot;analisi e registrazione dei nodi XAML degli utilizzi dei tipi noti non è necessario il supporto nel sistema di tipi di supporto e contesto dello schema XAML."
  remarks: "Utilizzare questo costruttore è solo per i tipi &quot;sconosciuti&quot; in cui non è disponibile un tipo XAML che esegue il mapping a un sistema di tipo sottostante. Questo costruttore non può produrre un risultato in cui <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=fullName>è `true`.</xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=fullName> Al contrario, la logica di reflector predefinita segnala il tipo sottostante come <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=fullName>.</xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=fullName> Tuttavia, questo comportamento può cambiare perché il <xref:System.Xaml.XamlType.LookupIsUnknown%2A>eseguire l&quot;override.</xref:System.Xaml.XamlType.LookupIsUnknown%2A>"
  syntax:
    content: public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList<System.Xaml.XamlType> typeArguments, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: unknownTypeNamespace
      type: System.String
      description: "Lo spazio dei nomi XAML per il tipo, sotto forma di stringa."
    - id: unknownTypeName
      type: System.String
      description: "Il nome del tipo disponibili `unknownTypeNamespace` spazio dei nomi XAML."
    - id: typeArguments
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Gli argomenti tipo per un <xref href=&quot;System.Xaml.XamlType&quot;> </xref> che rappresenta un tipo generico. Può essere (e spesso è) <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, che indica che il tipo rappresentato non è un tipo generico."
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Contesto dello schema XAML per lettori o writer XAML."
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>unknownTypeNamespace</code>, <code>unknownTypeName</code>, or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.AllowedContentTypes
  id: AllowedContentTypes
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: AllowedContentTypes
  nameWithType: XamlType.AllowedContentTypes
  fullName: System.Xaml.XamlType.AllowedContentTypes
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene una raccolta di sola lettura di tipi che possono essere utilizzati come il <xref:System.Xaml.XamlType.ContentProperty*>valore per questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Xaml.XamlType.ContentProperty*>"
  remarks: "I tipi che è possibile assegnare un tipo di contenuto specifico (ad esempio, può essere assegnato a un tipo di base che è un tipo di contenuto consentito) sono considerati non più tipi per scopi di AllowedContentTypes.       Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> AllowedContentTypes { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Una raccolta di sola lettura di possibili tipi di contenuto."
  overload: System.Xaml.XamlType.AllowedContentTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.BaseType
  id: BaseType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: BaseType
  nameWithType: XamlType.BaseType
  fullName: System.Xaml.XamlType.BaseType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene il <xref href=&quot;System.Xaml.XamlType&quot;> </xref> per il tipo di base immediato di questo tipo XAML. Determinazione di questo valore è basata sul tipo sottostante di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> e contesto dello schema."
  remarks: "Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupBaseType%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupBaseType%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupBaseType%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupBaseType%2A> Per impostazione predefinita, BaseType restituisce una costante interna che rappresenta un <xref:System.Object>Se <xref:System.Xaml.XamlType.UnderlyingType%2A>è `null`.</xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Object>      > [!IMPORTANT] > <xref:System.Xaml.XamlType.LookupBaseType%2A>è virtuale e pertanto può essere sottoposto a override.</xref:System.Xaml.XamlType.LookupBaseType%2A> La sostituzione con un possibile (per finalità dannose o in caso contrario) per modificare le informazioni di tipo restituito su un tipo XAML in modo che non si allinei nel modo previsto con le informazioni sul sistema di tipo del tipo CLR sottostante. Per eventuali controlli critici per la sicurezza di accesso e le operazioni di assegnazione, utilizzare invece il tipo CLR sottostante."
  syntax:
    content: public System.Xaml.XamlType BaseType { get; }
    return:
      type: System.Xaml.XamlType
      description: "Il <xref href=&quot;System.Xaml.XamlType&quot;> </xref> per il tipo di base immediato di questo tipo XAML."
  overload: System.Xaml.XamlType.BaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  id: CanAssignTo(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: CanAssignTo(XamlType)
  nameWithType: XamlType.CanAssignTo(XamlType)
  fullName: System.Xaml.XamlType.CanAssignTo(XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un valore che indica se un&quot;istanza di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> è stato specificato <xref href=&quot;System.Xaml.XamlType&quot;> </xref> nel relativo elenco di tipi assegnabili."
  remarks: "Anche se il tipo assegnabile non dispone di tutte le funzionalità del tipo di riferimento, è possibile utilizzarlo per l&quot;assegnazione. Ad esempio, è possibile utilizzare l&quot;assegnazione le corrispondenze di tipo per i valori di una proprietà. Il concetto dei tipi assegnabili in XAML è simile al concetto di upcast nel sistema di tipi CLR. In un sistema di tipi CLR, ad esempio, ogni tipo ha un <xref:System.Object>nell&quot;elenco dei tipi assegnabili.</xref:System.Object>       Se uno dei due <xref:System.Xaml.XamlType>istanze utilizzate per il confronto dispone <xref:System.Xaml.XamlType.IsUnknown%2A>uguale a `true`, questo metodo è una modalità speciale sconosciuto che restituisce `true` se i due <xref:System.Xaml.XamlType>istanze sono equivalenti.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.IsUnknown%2A> </xref:System.Xaml.XamlType>       L&quot;implementazione predefinita utilizza CLR <xref:System.Type>da <xref:System.Xaml.XamlType.UnderlyingType%2A>per questo <xref:System.Xaml.XamlType>e l&quot;input <xref:System.Xaml.XamlType>e chiama <xref:System.Type.IsAssignableFrom%2A>.</xref:System.Type.IsAssignableFrom%2A> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Type> Eseguire l&quot;override di questo metodo se si desidera una determinazione dei tipi assegnabili diversa.       Il passaggio di un valore null `xamlType` non viene generata un&quot;eccezione e restituisce sempre `false`.      > [!IMPORTANT] > CanAssignTo è virtuale e pertanto può essere sottoposto a override. La sostituzione con un possibile (per finalità dannose o in caso contrario) per modificare l&quot;assegnabilità di un tipo XAML in modo che non si allinei nel modo previsto con il comportamento di cast di tipo del tipo CLR sottostante. Per eventuali controlli critici per la sicurezza di accesso e le operazioni di assegnazione, utilizzare invece il tipo CLR sottostante."
  syntax:
    content: public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);
    parameters:
    - id: xamlType
      type: System.Xaml.XamlType
      description: "Il tipo da confrontare con l&quot;oggetto corrente <xref href=&quot;System.Xaml.XamlType&quot;> </xref> ."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> xamlType </code> è nell&quot;elenco dei tipi assegnabili; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.CanAssignTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ConstructionRequiresArguments
  id: ConstructionRequiresArguments
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ConstructionRequiresArguments
  nameWithType: XamlType.ConstructionRequiresArguments
  fullName: System.Xaml.XamlType.ConstructionRequiresArguments
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> deve avere argomenti (vincoli generici tramite <xref uid=&quot;langword_csharp_x:TypeArguments&quot; name=&quot;x:TypeArguments&quot; href=&quot;&quot;> </xref>, testo di inizializzazione o altre tecniche XAML) per costruire un&quot;istanza valida del tipo."
  remarks: "Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A>"
  syntax:
    content: public bool ConstructionRequiresArguments { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la costruzione di un&quot;istanza richiede un valore dell&quot;argomento; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.ConstructionRequiresArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ContentProperty
  id: ContentProperty
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ContentProperty
  nameWithType: XamlType.ContentProperty
  fullName: System.Xaml.XamlType.ContentProperty
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene il <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> informazioni per la proprietà di contenuto di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Quando si utilizza l&quot;associazione o il supporto del sistema di tipi CLR, la proprietà di contenuto XAML può essere specificata in un tipo applicando <xref:System.Windows.Markup.ContentPropertyAttribute>alla definizione del tipo.</xref:System.Windows.Markup.ContentPropertyAttribute>       Questa proprietà consente di allineare al `[content property]` informazione nella specifica [MS-XAML].       Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupContentProperty%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupContentProperty%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupContentProperty%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupContentProperty%2A>"
  syntax:
    content: public System.Xaml.XamlMember ContentProperty { get; }
    return:
      type: System.Xaml.XamlMember
      description: "<xref href=&quot;System.Xaml.XamlMember&quot;></xref>informazioni per la proprietà di contenuto di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>. Potrebbe essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non esiste alcuna proprietà di contenuto."
  overload: System.Xaml.XamlType.ContentProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ContentWrappers
  id: ContentWrappers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ContentWrappers
  nameWithType: XamlType.ContentWrappers
  fullName: System.Xaml.XamlType.ContentWrappers
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene i tipi che consentono di eseguire il wrapping di contenuto per una proprietà di contenuto quando non è una corrispondenza di tipo strict, ad esempio le stringhe in un oggetto fortemente tipizzato <xref uid=&quot;langword_csharp_Collection&lt;T&gt;&quot; name=&quot;Collection&lt;T&gt;&quot; href=&quot;&quot;> </xref>."
  remarks: "Se esistono wrapper per tenere conto di corrispondenza di tipo estendere, questa proprietà è `null`.       I tipi che restituiscono come <xref:System.Xaml.XamlType.CanAssignTo%2A>per un tipo di contenuto specifico non sono considerati più tipi per scopi di ContentWrappers.</xref:System.Xaml.XamlType.CanAssignTo%2A>       Nell&quot;associazione CLR per <xref:System.Xaml>e <xref:System.Xaml.XamlType>, il tipo di wrapper del contenuto XAML può essere specificato in un tipo come un <xref:System.Windows.Markup.ContentWrapperAttribute>.</xref:System.Windows.Markup.ContentWrapperAttribute> </xref:System.Xaml.XamlType> </xref:System.Xaml>       Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupContentWrappers%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupContentWrappers%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupContentWrappers%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupContentWrappers%2A>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> ContentWrappers { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Una raccolta di sola lettura dei tipi possibili wrapper del contenuto. in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Vedere la sezione Osservazioni."
  overload: System.Xaml.XamlType.ContentWrappers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.DeferringLoader
  id: DeferringLoader
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: DeferringLoader
  nameWithType: XamlType.DeferringLoader
  fullName: System.Xaml.XamlType.DeferringLoader
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene il &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; che rappresenta il posticipata il comportamento di conversione per questo tipo di caricamento."
  remarks: "Il comportamento dei modelli XAML in WPF è un esempio di comportamento di caricamento posticipato.       Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupDeferringLoader%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupDeferringLoader%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupDeferringLoader%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupDeferringLoader%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> DeferringLoader { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "Il &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; con <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref> vincolo che rappresenta il comportamento di caricamento posticipato per questo tipo."
  overload: System.Xaml.XamlType.DeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: XamlType.Equals(Object)
  fullName: System.Xaml.XamlType.Equals(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Indica se l&quot;oggetto corrente è uguale a un altro oggetto."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto da confrontare con questo oggetto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto corrente è uguale al <code> obj </code> parametro; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  id: Equals(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Equals(XamlType)
  nameWithType: XamlType.Equals(XamlType)
  fullName: System.Xaml.XamlType.Equals(XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Indica se l&quot;oggetto corrente è uguale a un altro oggetto dello stesso tipo."
  syntax:
    content: public bool Equals (System.Xaml.XamlType other);
    parameters:
    - id: other
      type: System.Xaml.XamlType
      description: "Oggetto da confrontare con questo oggetto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto corrente è uguale al <code> other </code> parametro; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  id: GetAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAliasedProperty(XamlDirective)
  nameWithType: XamlType.GetAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.GetAliasedProperty(XamlDirective)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce il membro XAML che è associato un alias a una direttiva XAML da questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questo metodo possono richiamare <xref:System.Xaml.XamlType.LookupAliasedProperty%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAliasedProperty%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupAliasedProperty%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupAliasedProperty%2A>"
  syntax:
    content: public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);
    parameters:
    - id: directive
      type: System.Xaml.XamlDirective
      description: "La direttiva per cui trovare il membro con alias."
    return:
      type: System.Xaml.XamlMember
      description: "Il membro con alias, se trovato; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.GetAliasedProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAllAttachableMembers
  id: GetAllAttachableMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAllAttachableMembers()
  nameWithType: XamlType.GetAllAttachableMembers()
  fullName: System.Xaml.XamlType.GetAllAttachableMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce una raccolta che contiene tutte le proprietà associabili esposte dall&quot;oggetto <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Ogni <xref:System.Xaml.XamlMember>nella raccolta restituita deve contenere valori che supportano il concetto che il <xref:System.Xaml.XamlMember>è un membro associabile.</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember> Ad esempio, i membri devono restituire `true` per <xref:System.Xaml.XamlMember.IsAttachable%2A>, un tipo per <xref:System.Xaml.XamlMember.TargetType%2A>e così via.</xref:System.Xaml.XamlMember.TargetType%2A> </xref:System.Xaml.XamlMember.IsAttachable%2A>       Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questo metodo possono richiamare <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>"
  syntax:
    content: public System.Collections.Generic.ICollection<System.Xaml.XamlMember> GetAllAttachableMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Xaml.XamlMember}
      description: "Una raccolta che contiene zero o più <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> valori."
  overload: System.Xaml.XamlType.GetAllAttachableMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAllMembers
  id: GetAllMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAllMembers()
  nameWithType: XamlType.GetAllMembers()
  fullName: System.Xaml.XamlType.GetAllMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce una raccolta che contiene tutti i membri esposti da questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Le chiamate a questo metodo possono richiamare <xref:System.Xaml.XamlType.LookupAllMembers%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAllMembers%2A>"
  syntax:
    content: public System.Collections.Generic.ICollection<System.Xaml.XamlMember> GetAllMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Xaml.XamlMember}
      description: "Una raccolta che contiene zero o più <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> valori."
  overload: System.Xaml.XamlType.GetAllMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAttachableMember(System.String)
  id: GetAttachableMember(System.String)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAttachableMember(String)
  nameWithType: XamlType.GetAttachableMember(String)
  fullName: System.Xaml.XamlType.GetAttachableMember(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> che rappresenta uno specifico membro associabile denominato di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Le chiamate a questo metodo possono richiamare <xref:System.Xaml.XamlType.LookupAttachableMember%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupAttachableMember%2A>      > [!IMPORTANT] > <xref:System.Xaml.XamlType.LookupAttachableMember%2A>è virtuale e pertanto può essere sottoposto a override.</xref:System.Xaml.XamlType.LookupAttachableMember%2A> La sostituzione con un possibile (per finalità dannose o in caso contrario) per modificare i membri di un tipo XAML riportati in modo che non si allineino nel modo previsto con il <xref:System.ComponentModel.TypeDescriptor> `Get*` informazioni sul tipo CLR sottostante.</xref:System.ComponentModel.TypeDescriptor> Per eventuali controlli critici per la sicurezza del membro reporting, utilizzare invece il tipo CLR sottostante."
  syntax:
    content: public System.Xaml.XamlMember GetAttachableMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del membro associabile da ottenere nel `ownerTypeName.MemberName` form."
    return:
      type: System.Xaml.XamlMember
      description: "Oggetto <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> oggetto per il membro associabile richiesto; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>se non esiste alcun membro associabile con tale nome."
  overload: System.Xaml.XamlType.GetAttachableMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetHashCode
  id: GetHashCode
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: XamlType.GetHashCode()
  fullName: System.Xaml.XamlType.GetHashCode()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce il codice hash per questo oggetto."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash di un numero intero."
  overload: System.Xaml.XamlType.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetMember(System.String)
  id: GetMember(System.String)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetMember(String)
  nameWithType: XamlType.GetMember(String)
  fullName: System.Xaml.XamlType.GetMember(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> per uno specifico membro da questo denominato <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Il valore per `name` deve essere non qualificato. Nomi completi di tipo che indicano un membro associato devono essere inviati a <xref:System.Xaml.XamlType.GetAttachableMember%2A>invece.</xref:System.Xaml.XamlType.GetAttachableMember%2A> Membro non devono essere utilizzati; i nomi con prefisso un prefisso è legato all&quot;utilizzo e di sistema di tipi XAML non è possibile conoscere il contesto di tale utilizzo e la modalità con cui viene eseguito il mapping di prefisso.       Le chiamate a questo metodo possono richiamare <xref:System.Xaml.XamlType.LookupMember%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupMember%2A>      > [!IMPORTANT] > <xref:System.Xaml.XamlType.LookupMember%2A>è virtuale e pertanto può essere sottoposto a override.</xref:System.Xaml.XamlType.LookupMember%2A> La sostituzione con un possibile (per finalità dannose o in caso contrario) per modificare i membri di un tipo XAML riportati in modo che non si allineino nel modo previsto con il <xref:System.ComponentModel.TypeDescriptor> `Get*` informazioni sul tipo CLR sottostante.</xref:System.ComponentModel.TypeDescriptor> Per eventuali controlli critici per la sicurezza del membro reporting, utilizzare invece il tipo CLR sottostante."
  syntax:
    content: public System.Xaml.XamlMember GetMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del membro da ottenere (come una stringa)."
    return:
      type: System.Xaml.XamlMember
      description: "Il <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> informazioni per il membro, se tale membro è stato trovato; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  id: GetPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetPositionalParameters(Int32)
  nameWithType: XamlType.GetPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.GetPositionalParameters(Int32)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Per i tipi di estensione di markup, restituisce i tipi di parametri posizionali sono supportati in un utilizzo dell&quot;estensione di markup specifico per questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Questa API è pertinente solo se questa <xref:System.Xaml.XamlType>rappresenta un&quot;estensione di markup (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> è `true`).</xref:System.Xaml.XamlType.IsMarkupExtension%2A> </xref:System.Xaml.XamlType>       L&quot;input `parameterCount` non è per richiedere il tipo di un parametro posizionale specifico. È di specificare il grado di un utilizzo dell&quot;estensione di markup. Utilizzo dell&quot;estensione di markup spesso è più &quot;firme&quot; e Usa i parametri diversi grado (conteggio) di parametri posizionali per distinguere. Tuttavia, è possibile configurare un contesto dello schema per consentire gradi duplicati e utilizzare i tipi di parametri posizionali per elementi di differenziazione. Per ulteriori informazioni, vedere <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A> Per un grado specifico (conteggio), le posizioni dei parametri e tipi possono variare. Per ottenere il tipo di utilizzo dell&quot;estensione di markup di un grado specifico posizionale, chiamare prima GetPositionalParameters che specifica il conteggio del grado. Ottenere quindi l&quot;elemento nella posizione specificata dalla raccolta restituita.       Le chiamate a questo metodo possono richiamare <xref:System.Xaml.XamlType.LookupPositionalParameters%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupPositionalParameters%2A>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> GetPositionalParameters (int parameterCount);
    parameters:
    - id: parameterCount
      type: System.Int32
      description: "Conteggio (grado) della modalità sintassi o un costruttore specifico che si desiderano informazioni."
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Un elenco di <xref href=&quot;System.Xaml.XamlType&quot;> </xref> valori, in cui ogni <xref href=&quot;System.Xaml.XamlType&quot;> </xref> è il tipo per tale posizione nella sintassi. Quando si fornisce l&quot;input per l&quot;estensione di markup, è necessario specificare i tipi nello stesso ordine."
  overload: System.Xaml.XamlType.GetPositionalParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetXamlNamespaces
  id: GetXamlNamespaces
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetXamlNamespaces()
  nameWithType: XamlType.GetXamlNamespaces()
  fullName: System.Xaml.XamlType.GetXamlNamespaces()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un elenco di identificatori di stringa degli spazi dei nomi XAML che il tipo è incluso in."
  remarks: "Gli identificatori di spazio dei nomi XAML tipico sono stringhe in formato URI.       L&quot;implementazione predefinita controlla le operazioni seguenti, nell&quot;ordine: lo spazio dei nomi XAML fornito nella costruzione di strutture (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> solo la firma); e gli spazi dei nomi che sono disponibili nel contesto dello schema.</xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> Se si tratta di ogni `null`, viene generato un nuovo elenco che contiene una singola stringa vuota. È possibile eseguire l&quot;override di questo metodo per modificare la metodologia di ricerca."
  syntax:
    content: public virtual System.Collections.Generic.IList<string> GetXamlNamespaces ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "Un elenco di valori stringa, dove ogni stringa è l&quot;identificatore URI per uno spazio dei nomi XAML."
  overload: System.Xaml.XamlType.GetXamlNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Invoker
  id: Invoker
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Invoker
  nameWithType: XamlType.Invoker
  fullName: System.Xaml.XamlType.Invoker
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene il <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> implementazione che è associata a questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, la chiamata Invoker possibile richiamare <xref:System.Xaml.XamlType.LookupInvoker%2A>o un override del metodo specifico.</xref:System.Xaml.XamlType.LookupInvoker%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupInvoker%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupInvoker%2A>       Se un <xref:System.Xaml.XamlType.LookupInvoker%2A>override restituisce `null`, o se l&quot;implementazione predefinita restituisce `null` insufficiente <xref:System.Xaml.XamlType.UnderlyingType%2A>per questo <xref:System.Xaml.XamlType>quindi Invoker restituisce <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName>.</xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Xaml.XamlType.LookupInvoker%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }
    return:
      type: System.Xaml.Schema.XamlTypeInvoker
      description: "Il <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> implementazione che è associata a questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.Invoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsAmbient
  id: IsAmbient
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsAmbient
  nameWithType: XamlType.IsAmbient
  fullName: System.Xaml.XamlType.IsAmbient
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo di ambiente, secondo la definizione XAML."
  remarks: "Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsAmbient%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsAmbient%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupIsAmbient%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupIsAmbient%2A>"
  syntax:
    content: public bool IsAmbient { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo di ambiente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsArray
  id: IsArray
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsArray
  nameWithType: XamlType.IsArray
  fullName: System.Xaml.XamlType.IsArray
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta una matrice."
  remarks: "Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupCollectionKind%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupCollectionKind%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupCollectionKind%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: public bool IsArray { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta una matrice; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsArray*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsCollection
  id: IsCollection
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsCollection
  nameWithType: XamlType.IsCollection
  fullName: System.Xaml.XamlType.IsCollection
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta una raccolta."
  remarks: "Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupCollectionKind%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupCollectionKind%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupCollectionKind%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: public bool IsCollection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta una raccolta; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsConstructible
  id: IsConstructible
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsConstructible
  nameWithType: XamlType.IsConstructible
  fullName: System.Xaml.XamlType.IsConstructible
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo che può essere costruito, secondo la definizione XAML."
  remarks: "Questa proprietà consente di allineare al `[is default constructible]` informazione nella specifica [MS-XAML].       Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsConstructible%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsConstructible%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupIsConstructible%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupIsConstructible%2A>"
  syntax:
    content: public bool IsConstructible { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo che può essere costruito; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsConstructible*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsDictionary
  id: IsDictionary
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsDictionary
  nameWithType: XamlType.IsDictionary
  fullName: System.Xaml.XamlType.IsDictionary
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un dizionario, secondo la definizione XAML."
  remarks: "Questa proprietà consente di allineare al `[is dictionary]` informazione nella specifica [MS-XAML].       Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupCollectionKind%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupCollectionKind%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupCollectionKind%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: public bool IsDictionary { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un dizionario; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsGeneric
  id: IsGeneric
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsGeneric
  nameWithType: XamlType.IsGeneric
  fullName: System.Xaml.XamlType.IsGeneric
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo generico."
  remarks: "Questa proprietà è una proprietà di supporto che verifica la presenza di un valore null di <xref:System.Xaml.XamlType.TypeArguments%2A>.</xref:System.Xaml.XamlType.TypeArguments%2A> Non vi è alcuna specifica `Lookup` metodo relativi a IsGeneric."
  syntax:
    content: public bool IsGeneric { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo generico; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsGeneric*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsMarkupExtension
  id: IsMarkupExtension
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsMarkupExtension
  nameWithType: XamlType.IsMarkupExtension
  fullName: System.Xaml.XamlType.IsMarkupExtension
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un&quot;estensione di markup."
  remarks: "In termini di specifica di XAML, questo tipo deve essere assegnabile a `x:MarkupExtension` per restituire `true` per IsMarkupExtension.       Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A>"
  syntax:
    content: public bool IsMarkupExtension { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un&quot;estensione di markup; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsMarkupExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsNameScope
  id: IsNameScope
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsNameScope
  nameWithType: XamlType.IsNameScope
  fullName: System.Xaml.XamlType.IsNameScope
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un namescope XAML, secondo la definizione XAML."
  remarks: "Un namescope XAML applica l&quot;univocità del nome della proprietà o le proprietà utilizzate per `x:Name`  /  `[name property]`. Se è IsNameScope `true`, un meccanismo per imporre l&quot;univocità deve esistere e deve restituire dalla prospettiva di questo tipo che possiede un namescope XAML. Ambito dei nomi XAML si estende al contenuto del tipo quindi finché non viene rilevato un altro tipo di proprietario namescope XAML.       Questa proprietà consente di allineare al `[is name scope]` informazione nella specifica [MS-XAML].       Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsNameScope%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsNameScope%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public bool IsNameScope { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un namescope XAML; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsNameScope*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsNameValid
  id: IsNameValid
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsNameValid
  nameWithType: XamlType.IsNameValid
  fullName: System.Xaml.XamlType.IsNameValid
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> viene inizializzato utilizzando un oggetto valido <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> stringa come relativo <xref:System.Xaml.XamlType.Name*>.</xref:System.Xaml.XamlType.Name*>"
  syntax:
    content: public bool IsNameValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> viene inizializzato utilizzando un oggetto valido <xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;> </xref> stringa; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsNameValid*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsNullable
  id: IsNullable
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsNullable
  nameWithType: XamlType.IsNullable
  fullName: System.Xaml.XamlType.IsNullable
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo nullable, secondo la definizione XAML."
  remarks: "Questa proprietà consente di allineare al `[is nullable]` informazione nella specifica [MS-XAML].       Se non si utilizza la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsNullable%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsNullable%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public bool IsNullable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo nullable; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsPublic
  id: IsPublic
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsPublic
  nameWithType: XamlType.IsPublic
  fullName: System.Xaml.XamlType.IsPublic
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo pubblico nel sistema di tipi rilevanti."
  remarks: "Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsPublic%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsPublic%2A> </xref:System.Xaml.XamlType>      > [!IMPORTANT] > <xref:System.Xaml.XamlType.LookupIsPublic%2A>è virtuale e pertanto può essere sottoposto a override.</xref:System.Xaml.XamlType.LookupIsPublic%2A> La sostituzione con un possibile (per finalità dannose o in caso contrario) per modificare le informazioni di accesso segnalate su un tipo XAML in modo che non si allinei nel modo previsto con le informazioni di sistema e di accesso di tipo del tipo CLR sottostante. Per eventuali controlli critici per la sicurezza di accesso e le operazioni di assegnazione, utilizzare invece il tipo CLR sottostante."
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo pubblico; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsUnknown
  id: IsUnknown
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsUnknown
  nameWithType: XamlType.IsUnknown
  fullName: System.Xaml.XamlType.IsUnknown
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo che non può essere risolto nel sistema di tipi sottostante."
  remarks: "Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsUnknown%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsUnknown%2A> </xref:System.Xaml.XamlType>       Per un percorso di caricamento che coinvolge <xref:System.Xaml.XamlObjectWriter>, <xref:System.Xaml.XamlType>con `true` per IsUnknown non può essere scritto in un oggetto grafico.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlObjectWriter> Nelle implementazioni predefinite in <xref:System.Xaml>, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=fullName>chiamata genera un <xref:System.Xaml.XamlObjectWriterException>quando pertinente <xref:System.Xaml.XamlType>report `true` per IsUnknown.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlObjectWriterException> </xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=fullName> </xref:System.Xaml> Non è necessario passare un <xref:System.Xaml.XamlType>con IsUnknown come `true` a meno che non si è pronti a gestire le eccezioni da <xref:System.Xaml.XamlObjectWriter>, o in altri modi per regolare il <xref:System.Xaml.XamlObjectWriter>comportamento o flusso di nodi XAML prima di scrivere l&quot;oggetto grafico.</xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlObjectWriter> </xref:System.Xaml.XamlType>"
  syntax:
    content: public bool IsUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo non risolvibile; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsUsableDuringInitialization
  id: IsUsableDuringInitialization
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsUsableDuringInitialization
  nameWithType: XamlType.IsUsableDuringInitialization
  fullName: System.Xaml.XamlType.IsUsableDuringInitialization
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> viene compilato dall&quot;alto in basso durante l&quot;inizializzazione XAML."
  remarks: "Dall&quot;alto in basso è una metafora che offre un&quot;approssimazione di comportamento del processore XAML durante la creazione dell&quot;oggetto grafico. Al momento della compilazione dall&quot;alto verso un tipo viene creata un&quot;istanza, a collegato al padre e quindi impostate le proprietà. Costruzione dall&quot;alto in basso evita di richiamare i gestori di proprietà modificata più volte. Tale gestione si riflette l&quot;oggetto grafico e di conseguenza, Elimina il più chiamate del gestore e fornisce un&quot;ottimizzazione delle prestazioni per l&quot;avvio dell&quot;oggetto grafico.       Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A>"
  syntax:
    content: public bool IsUsableDuringInitialization { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> viene compilata dall&quot;alto in basso durante l&quot;inizializzazione XAML; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsUsableDuringInitialization*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection
  id: IsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsWhitespaceSignificantCollection
  nameWithType: XamlType.IsWhitespaceSignificantCollection
  fullName: System.Xaml.XamlType.IsWhitespaceSignificantCollection
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta una raccolta significativa di spazi vuoti, secondo la definizione XML."
  remarks: "Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>"
  syntax:
    content: public bool IsWhitespaceSignificantCollection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta una raccolta significativa di spazi vuoti; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.IsWhitespaceSignificantCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsXData
  id: IsXData
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsXData
  nameWithType: XamlType.IsXData
  fullName: System.Xaml.XamlType.IsXData
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta XML <xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;> </xref>, secondo la definizione XAML."
  remarks: "Questa proprietà consente di allineare al `[is xdata]` informazione nella specifica [MS-XAML].       Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsXData%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsXData%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupIsXData%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupIsXData%2A>"
  syntax:
    content: public bool IsXData { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if this <xref href=&quot;System.Xaml.XamlType&quot;></xref> represents <xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlType.IsXData*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ItemType
  id: ItemType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ItemType
  nameWithType: XamlType.ItemType
  fullName: System.Xaml.XamlType.ItemType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che fornisce le informazioni sul tipo per il <xref uid=&quot;langword_csharp_Items&quot; name=&quot;Items&quot; href=&quot;&quot;> </xref> proprietà di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Questa proprietà è pertinente solo se questa <xref:System.Xaml.XamlType>rappresenta una raccolta (<xref:System.Xaml.XamlType.IsCollection%2A> è `true`).</xref:System.Xaml.XamlType.IsCollection%2A> </xref:System.Xaml.XamlType> Il `Items` proprietà è di qualsiasi proprietà che contiene gli elementi in tale tipo di raccolta o una matrice.       Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupItemType%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupItemType%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupItemType%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupItemType%2A>"
  syntax:
    content: public System.Xaml.XamlType ItemType { get; }
    return:
      type: System.Xaml.XamlType
      description: "Oggetto <xref href=&quot;System.Xaml.XamlType&quot;> </xref> oggetto per il tipo degli elementi nella raccolta; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>se l&quot;oggetto <xref href=&quot;System.Xaml.XamlType&quot;> </xref> non rappresenta una raccolta."
  overload: System.Xaml.XamlType.ItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.KeyType
  id: KeyType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: KeyType
  nameWithType: XamlType.KeyType
  fullName: System.Xaml.XamlType.KeyType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che fornisce le informazioni sul tipo per le proprietà di questa chiave <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, se il <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un dizionario."
  remarks: "Questa proprietà è pertinente solo se questa <xref:System.Xaml.XamlType>rappresenta un dizionario (<xref:System.Xaml.XamlType.IsDictionary%2A> è `true`).</xref:System.Xaml.XamlType.IsDictionary%2A> </xref:System.Xaml.XamlType>       Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupKeyType%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupKeyType%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupKeyType%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupKeyType%2A>"
  syntax:
    content: public System.Xaml.XamlType KeyType { get; }
    return:
      type: System.Xaml.XamlType
      description: "Oggetto <xref href=&quot;System.Xaml.XamlType&quot;> </xref> oggetto per il tipo di chiave per l&quot;utilizzo di dizionario, in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> non rappresenta un dizionario."
  overload: System.Xaml.XamlType.KeyType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  id: LookupAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAliasedProperty(XamlDirective)
  nameWithType: XamlType.LookupAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.LookupAliasedProperty(XamlDirective)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce il membro XAML che è associato un alias a una direttiva XAML da questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Questo metodo può essere richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.</xref:System.Xaml.XamlType.GetAliasedProperty%2A>       L&quot;implementazione predefinita può restituire risultati per le seguenti direttive XAML: `Key`; `Name`; `Uid`; and `xml:lang`. I valori di questi dipendono dalla reflection sottostante e possono comunque restituire `null` se non viene trovata alcuna proprietà con alias.       Eseguire l&quot;override di questo metodo se non si basa sulla reflection CLR interna predefinita e utilizza i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipi XAML o le informazioni sullo schema di un tipo."
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);
    parameters:
    - id: directive
      type: System.Xaml.XamlDirective
      description: "La direttiva per cui trovare il membro con alias."
    return:
      type: System.Xaml.XamlMember
      description: "Il membro con alias, se trovato; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupAliasedProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAllAttachableMembers
  id: LookupAllAttachableMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAllAttachableMembers()
  nameWithType: XamlType.LookupAllAttachableMembers()
  fullName: System.Xaml.XamlType.LookupAllAttachableMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un set enumerabile che contiene tutte le proprietà associabili esposte dall&quot;oggetto <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Questo metodo può essere richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.</xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>       Anche se <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>restituisce una raccolta generica, questo `Lookup` metodo restituisce un set enumerabile generico.</xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>       L&quot;implementazione predefinita utilizza la reflection CLR interna. Quando <xref:System.Xaml.XamlType.UnderlyingType%2A>è `null`, l&quot;implementazione predefinita è possibile utilizzare <xref:System.Xaml.XamlType.BaseType%2A>, se disponibile.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.UnderlyingType%2A> Questo comportamento chiama in modo ricorsivo LookupAllAttachableMembers per tentare di trovare un tipo di base valido e restituisce `null` se non esiste alcun tipo di base valido.       Eseguire l&quot;override di questo metodo se non si basa sulla reflection CLR interna predefinita e utilizza i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipi XAML o informazioni sullo schema di un tipo. Un valore restituito null deve essere riservato per i casi in cui non è possibile determinare le informazioni a causa di mancanza di supporto dei tipi di sistema o di reflection. Se un tipo è valido e reflection o altre tecniche disponibili, ma un tipo non dispone di membri associabili, è necessario restituire un oggetto vuoto <xref:System.Collections.Generic.IEnumerable%601>impostato.</xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.Xaml.XamlMember> LookupAllAttachableMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
      description: "Set enumerabile che contiene zero o più <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> valori; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupAllAttachableMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAllMembers
  id: LookupAllMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAllMembers()
  nameWithType: XamlType.LookupAllMembers()
  fullName: System.Xaml.XamlType.LookupAllMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un set enumerabile che contiene tutti i membri esposti da questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Questo metodo può essere richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlType.GetAllMembers%2A>.</xref:System.Xaml.XamlType.GetAllMembers%2A>       Anche se <xref:System.Xaml.XamlType.GetAllMembers%2A>restituisce una raccolta generica, questo `Lookup` metodo restituisce un set enumerabile generico.</xref:System.Xaml.XamlType.GetAllMembers%2A>       L&quot;implementazione predefinita utilizza la reflection CLR interna. Per i casi in cui <xref:System.Xaml.XamlType.UnderlyingType%2A>è `null`, l&quot;implementazione predefinita è possibile utilizzare <xref:System.Xaml.XamlType.BaseType%2A>, se disponibile.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.UnderlyingType%2A> Questo comportamento chiama in modo ricorsivo LookupAllMembers per tentare di trovare un tipo di base valido e restituisce `null` se non esiste alcun tipo di base valido.       Eseguire l&quot;override di questo metodo se non si basa sulla reflection CLR interna predefinita e utilizza i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipi XAML o informazioni sullo schema di un tipo. Un valore restituito null deve essere riservato per i casi in cui non è possibile determinare le informazioni a causa di mancanza di supporto dei tipi di sistema o di reflection. Se un tipo valido, la reflection o altre tecniche disponibili; Se un tipo non dispone di membri, è necessario restituire un oggetto vuoto <xref:System.Collections.Generic.IEnumerable%601>impostato.</xref:System.Collections.Generic.IEnumerable%601>       Valori restituiti per LookupAllMembers e <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>deve essere si escludono a vicenda.</xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> Se si dispone di una situazione in cui una proprietà di sistema di tipo sottostante può supportare un utilizzo dell&quot;istanza standard, nonché un utilizzo associabile, tale membro deve essere segnalato come due diversi <xref:System.Xaml.XamlMember>valori, con un valore che appare nell&quot;elenco associabile e un&quot;altra nell&quot;elenco dei membri standard.</xref:System.Xaml.XamlMember>"
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.Xaml.XamlMember> LookupAllMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
      description: "Set enumerabile che contiene zero o più <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> valori."
  overload: System.Xaml.XamlType.LookupAllMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAllowedContentTypes
  id: LookupAllowedContentTypes
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAllowedContentTypes()
  nameWithType: XamlType.LookupAllowedContentTypes()
  fullName: System.Xaml.XamlType.LookupAllowedContentTypes()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un elenco di tipi che possono essere utilizzati come il <xref:System.Xaml.XamlType.ContentProperty*>valore per questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Xaml.XamlType.ContentProperty*>"
  remarks: "Questo metodo può essere richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</xref:System.Xaml.XamlType.AllowedContentTypes%2A>       Tipi che restituiscono come <xref:System.Xaml.XamlType.CanAssignTo%2A>per un tipo di contenuto specifico non sono considerati più tipi per scopi di <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.</xref:System.Xaml.XamlType.AllowedContentTypes%2A> </xref:System.Xaml.XamlType.CanAssignTo%2A>       L&quot;implementazione predefinita è possibile utilizzare altre proprietà di <xref:System.Xaml.XamlType>(<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, o <xref:System.Xaml.XamlType.ItemType%2A>) per ottenere un risultato.</xref:System.Xaml.XamlType.ItemType%2A> </xref:System.Xaml.XamlType.ContentProperty%2A> </xref:System.Xaml.XamlType.ContentWrappers%2A> </xref:System.Xaml.XamlType> Il `Lookup` esegue l&quot;override per l&quot;elenco di proprietà precedente può essere richiamato anche questo aspetto.       Eseguire l&quot;override di questo metodo se non si basa sulla reflection CLR interna predefinita e utilizza i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipi XAML o informazioni sullo schema di un tipo."
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlType> LookupAllowedContentTypes ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Un elenco di possibili tipi di contenuto."
  overload: System.Xaml.XamlType.LookupAllowedContentTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAttachableMember(System.String)
  id: LookupAttachableMember(System.String)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAttachableMember(String)
  nameWithType: XamlType.LookupAttachableMember(String)
  fullName: System.Xaml.XamlType.LookupAttachableMember(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> per uno specifico oggetto associabile denominato da questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Questo metodo può essere richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlType.GetAttachableMember%2A>.</xref:System.Xaml.XamlType.GetAttachableMember%2A>       L&quot;implementazione predefinita utilizza la reflection CLR interna. Quando <xref:System.Xaml.XamlType.UnderlyingType%2A>è `null`, l&quot;implementazione predefinita è possibile utilizzare <xref:System.Xaml.XamlType.BaseType%2A>, se disponibile.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.UnderlyingType%2A> Questo comportamento chiama in modo ricorsivo LookupAttachableMember per tentare di trovare un tipo di base valido e restituisce `null` se non esiste alcun tipo di base valido.       Eseguire l&quot;override di questo metodo se non si basa sulla reflection CLR interna predefinita e utilizza i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipi XAML o informazioni sullo schema di un tipo.      > [!IMPORTANT] > LookupAttachableMember è virtuale e pertanto può essere sottoposto a override. La sostituzione con un possibile (per finalità dannose o in caso contrario) per modificare i membri di un tipo XAML riportati in modo che non si allineino nel modo previsto con il <xref:System.ComponentModel.TypeDescriptor> `Get*` informazioni sul tipo CLR sottostante.</xref:System.ComponentModel.TypeDescriptor> Per eventuali controlli critici per la sicurezza del membro reporting, utilizzare invece il tipo CLR sottostante."
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del membro associabile da ottenere nel `ownerTypeName.MemberName` form."
    return:
      type: System.Xaml.XamlMember
      description: "Oggetto <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> oggetto per il membro associabile richiesto; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>se non esiste alcun membro associabile con tale nome."
  overload: System.Xaml.XamlType.LookupAttachableMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupBaseType
  id: LookupBaseType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupBaseType()
  nameWithType: XamlType.LookupBaseType()
  fullName: System.Xaml.XamlType.LookupBaseType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce il <xref href=&quot;System.Xaml.XamlType&quot;> </xref> per il tipo di base immediato di questo tipo XAML. Determinazione di questo valore è basata sul tipo sottostante di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> e contesto dello schema."
  remarks: "Questo metodo può essere richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlType.BaseType%2A>.</xref:System.Xaml.XamlType.BaseType%2A>       L&quot;implementazione predefinita potrebbe restituire una costante interna che rappresenta il <xref:System.Object>Se <xref:System.Xaml.XamlType.UnderlyingType%2A>è `null`.</xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Object>       Eseguire l&quot;override di questo metodo se non si basa sulla reflection CLR interna predefinita e utilizza i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipi XAML o informazioni sullo schema di un tipo.      > [!IMPORTANT] > LookupBaseType è virtuale e pertanto può essere sottoposto a override. La sostituzione con un possibile (per finalità dannose o in caso contrario) per modificare le informazioni di tipo restituito su un tipo XAML in modo che non si allinei nel modo previsto con le informazioni sul sistema di tipo del tipo CLR sottostante. Per eventuali controlli critici per la sicurezza di accesso e le operazioni di assegnazione, utilizzare invece il tipo CLR sottostante."
  syntax:
    content: protected virtual System.Xaml.XamlType LookupBaseType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "Il <xref href=&quot;System.Xaml.XamlType&quot;> </xref> per il tipo di base immediato di questo tipo XAML."
  overload: System.Xaml.XamlType.LookupBaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupCollectionKind
  id: LookupCollectionKind
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupCollectionKind()
  nameWithType: XamlType.LookupCollectionKind()
  fullName: System.Xaml.XamlType.LookupCollectionKind()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un valore del <xref href=&quot;System.Xaml.Schema.XamlCollectionKind&quot;> </xref> tipo di enumerazione che dichiara che insieme specifico questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> utilizza."
  remarks: "Questo metodo viene richiamato da un metodo interno privato (non `CollectionKind` o `GetCollectionKind` API esista nel <xref:System.Xaml.XamlType>).</xref:System.Xaml.XamlType>       L&quot;implementazione predefinita utilizza la reflection CLR interna. Per i casi in cui <xref:System.Xaml.XamlType.UnderlyingType%2A>è `null`, l&quot;implementazione predefinita è possibile utilizzare <xref:System.Xaml.XamlType.BaseType%2A>, se disponibile.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.UnderlyingType%2A> Questo comportamento è indirettamente chiama in modo ricorsivo LookupCollectionKind per tentare di trovare un tipo di base valido; Restituisce <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>Se non esiste alcun tipo di base valido.</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> In generale, l&quot;implementazione predefinita tenta di individuare il `Add` metodo del tipo sottostante mediante reflection. Se viene trovato, il <xref:System.Reflection.MethodInfo>del `Add` metodo è informazioni sufficienti per determinare quale <xref:System.Xaml.Schema.XamlCollectionKind>valore deve essere restituito.</xref:System.Xaml.Schema.XamlCollectionKind> </xref:System.Reflection.MethodInfo> In caso contrario, restituisce <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>.</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>       Eseguire l&quot;override di questo metodo se non si basa sulla reflection CLR interna predefinita e utilizza i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipi XAML o informazioni sullo schema di un tipo."
  syntax:
    content: protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlCollectionKind
      description: "Il valore di <xref href=&quot;System.Xaml.Schema.XamlCollectionKind&quot;> </xref> enumerazione."
  overload: System.Xaml.XamlType.LookupCollectionKind*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments
  id: LookupConstructionRequiresArguments
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupConstructionRequiresArguments()
  nameWithType: XamlType.LookupConstructionRequiresArguments()
  fullName: System.Xaml.XamlType.LookupConstructionRequiresArguments()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> deve avere argomenti (vincoli generici tramite <xref uid=&quot;langword_csharp_x:TypeArguments&quot; name=&quot;x:TypeArguments&quot; href=&quot;&quot;> </xref>, testo di inizializzazione o altre tecniche XAML) per costruire un&quot;istanza valida del tipo."
  remarks: "Questo metodo può essere richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>       L&quot;implementazione predefinita restituisce `false` sistema di tipi per tipi considerati i tipi di valore in CLR. Per altri tipi valore, la reflection CLR <xref:System.Reflection.ConstructorInfo>viene utilizzato per determinare se esiste un costruttore predefinito.</xref:System.Reflection.ConstructorInfo>       Eseguire l&quot;override di questo metodo se non si basa sulla reflection CLR interna predefinita e utilizza i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipi XAML o informazioni sullo schema di un tipo."
  syntax:
    content: protected virtual bool LookupConstructionRequiresArguments ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la costruzione di un&quot;istanza richiede un valore dell&quot;argomento; in caso contrario, false."
  overload: System.Xaml.XamlType.LookupConstructionRequiresArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupContentProperty
  id: LookupContentProperty
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupContentProperty()
  nameWithType: XamlType.LookupContentProperty()
  fullName: System.Xaml.XamlType.LookupContentProperty()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> informazioni per la proprietà di contenuto di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Questo metodo può essere richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlType.ContentProperty%2A>.</xref:System.Xaml.XamlType.ContentProperty%2A>       L&quot;implementazione predefinita cerca <xref:System.Windows.Markup.ContentPropertyAttribute>sulla definizione di tipo.</xref:System.Windows.Markup.ContentPropertyAttribute> È inoltre possibile verificare <xref:System.Xaml.XamlType.BaseType%2A>per l&quot;attributo se viene trovato alcun attributo sul tipo sottostante immediato.</xref:System.Xaml.XamlType.BaseType%2A> Se questi controlli non in grado di individuare un tipo di contenuto, l&quot;implementazione predefinita restituisce `null`.       Eseguire l&quot;override di questo metodo se non si basa sulla reflection CLR interna predefinita e utilizza i metadati o altre tecniche per la segnalazione di informazioni sul sistema di tipi XAML o informazioni sullo schema di un tipo."
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupContentProperty ();
    parameters: []
    return:
      type: System.Xaml.XamlMember
      description: "<xref href=&quot;System.Xaml.XamlMember&quot;></xref>informazioni per la proprietà di contenuto di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>. May be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlType.LookupContentProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupContentWrappers
  id: LookupContentWrappers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupContentWrappers()
  nameWithType: XamlType.LookupContentWrappers()
  fullName: System.Xaml.XamlType.LookupContentWrappers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un elenco di <xref href=&quot;System.Xaml.XamlType&quot;> </xref> valori che rappresentano i wrapper del contenuto per questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Wrapper del contenuto è una classe che rappresenta il tipo di raccolta del contenuto quando i tipi che sono utilizzati in tale raccolta non sono contigui al sistema di tipi. I tipi di elementi della raccolta per il wrapper del contenuto devono essere limitati in qualche modo oltre <xref:System.Object>o un oggetto neutro equivalente.</xref:System.Object> Tuttavia, questa limitazione viene applicata solo per la progettazione o scopo delle proprietà che utilizzano quel tipo e non dal sistema dei tipi. Un tipo può essere presente più di un wrapper del contenuto.       Per un esempio di classe e uno scenario di implementazione di XAML di WPF, vedere <xref:System.Windows.Documents.InlineCollection>.</xref:System.Windows.Documents.InlineCollection>"
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlType> LookupContentWrappers ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Un elenco di <xref href=&quot;System.Xaml.XamlType&quot;> </xref> valori che rappresentano i wrapper del contenuto per questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupContentWrappers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupCustomAttributeProvider
  id: LookupCustomAttributeProvider
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupCustomAttributeProvider()
  nameWithType: XamlType.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlType.LookupCustomAttributeProvider()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Quando viene implementato in una classe derivata, restituisce un <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> implementazione."
  remarks: "Eseguire l&quot;override di questo metodo per fornire la reflection interna con una modalità alternativa per ottenere i valori di attributo CLR. In assenza di una sostituzione, il riflettore interno utilizza normale logica di reflection di CLR.       L&quot;implementazione predefinita restituisce `null`."
  syntax:
    content: protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();
    parameters: []
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "Un <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> implementazione."
  overload: System.Xaml.XamlType.LookupCustomAttributeProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupDeferringLoader
  id: LookupDeferringLoader
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupDeferringLoader()
  nameWithType: XamlType.LookupDeferringLoader()
  fullName: System.Xaml.XamlType.LookupDeferringLoader()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; oggetto, che viene utilizzato per il caricamento posticipato di oggetti XAML dichiarati."
  remarks: "Questo metodo può essere richiamato quando un chiamante ottiene un valore da <xref:System.Xaml.XamlType.DeferringLoader%2A>.</xref:System.Xaml.XamlType.DeferringLoader%2A> Eseguire l&quot;override di questo metodo se si desidera <xref:System.Xaml.XamlType.DeferringLoader%2A>restituisca un valore diverso da quello abilitato dalla reflection interna predefinita e vengono inoltre fornite personalizzato <xref:System.Xaml.Schema.XamlTypeInvoker>informazioni.</xref:System.Xaml.Schema.XamlTypeInvoker> </xref:System.Xaml.XamlType.DeferringLoader%2A>       L&quot;implementazione predefinita restituisce un oggetto in base alla lettura <xref:System.Windows.Markup.XamlDeferLoadAttribute>.</xref:System.Windows.Markup.XamlDeferLoadAttribute> È inoltre possibile verificare <xref:System.Xaml.XamlType.BaseType%2A>per l&quot;attributo se viene trovato alcun attributo sul tipo sottostante immediato.</xref:System.Xaml.XamlType.BaseType%2A> Se è disponibile un valore, questo metodo restituisce `null`."
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> LookupDeferringLoader ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "Oggetto &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; che ha un <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref> vincolo per il tipo generico."
  overload: System.Xaml.XamlType.LookupDeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupInvoker
  id: LookupInvoker
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupInvoker()
  nameWithType: XamlType.LookupInvoker()
  fullName: System.Xaml.XamlType.LookupInvoker()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> che è associata a questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.Invoker%2A>.</xref:System.Xaml.XamlType.Invoker%2A>       L&quot;implementazione predefinita non richiede che un <xref:System.Xaml.XamlType>essere costruito utilizzando uno dei costruttori che passa un <xref:System.Xaml.Schema.XamlTypeInvoker>.</xref:System.Xaml.Schema.XamlTypeInvoker> iniziale</xref:System.Xaml.XamlType> Tuttavia, un <xref:System.Xaml.XamlType.UnderlyingType%2A>devono essere presenti per il <xref:System.Xaml.XamlType>; in caso contrario, l&quot;implementazione predefinita restituisce `null`.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.UnderlyingType%2A>       Eseguire l&quot;override di questo metodo se si crea anche una classe derivata da <xref:System.Xaml.Schema.XamlTypeInvoker>e si desidera restituire la classe derivata.</xref:System.Xaml.Schema.XamlTypeInvoker> Se si restituisce `null`, <xref:System.Xaml.XamlType.Invoker%2A>restituisce <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName>ai chiamanti.</xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName> </xref:System.Xaml.XamlType.Invoker%2A>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlTypeInvoker
      description: "Il <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref> informazioni per questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupInvoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsAmbient
  id: LookupIsAmbient
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsAmbient()
  nameWithType: XamlType.LookupIsAmbient()
  fullName: System.Xaml.XamlType.LookupIsAmbient()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo di ambiente, secondo la definizione XAML."
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.IsAmbient%2A>.</xref:System.Xaml.XamlType.IsAmbient%2A>       L&quot;implementazione predefinita utilizza la reflection di CLR nel <xref:System.Xaml.XamlType.UnderlyingType%2A>e controllare i tipi di base.</xref:System.Xaml.XamlType.UnderlyingType%2A> Questa implementazione verifica la presenza di <xref:System.Windows.Markup.AmbientAttribute>che viene applicato alla definizione del tipo pertinenti a livello di classe e restituisce `true` in questo caso.</xref:System.Windows.Markup.AmbientAttribute> Restituiscono tutti gli altri casi `false`.       Eseguire l&quot;override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsAmbient%2A>per restituire un valore diverso da quello abilitato dalla reflection interna predefinita.</xref:System.Xaml.XamlType.IsAmbient%2A>"
  syntax:
    content: protected virtual bool LookupIsAmbient ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo di ambiente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsConstructible
  id: LookupIsConstructible
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsConstructible()
  nameWithType: XamlType.LookupIsConstructible()
  fullName: System.Xaml.XamlType.LookupIsConstructible()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo che può essere costruito, secondo la definizione XAML."
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.IsConstructible%2A>.</xref:System.Xaml.XamlType.IsConstructible%2A>       L&quot;implementazione predefinita utilizza la reflection di CLR in <xref:System.Xaml.XamlType.UnderlyingType%2A>.</xref:System.Xaml.XamlType.UnderlyingType%2A> Il tipo deve essere concreti non annidata e chiuso. L&quot;implementazione predefinita controlla se il tipo è un tipo di valore e la restituzione di <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.</xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A> Un valore null <xref:System.Xaml.XamlType.UnderlyingType%2A>, questo metodo restituisce `true`.</xref:System.Xaml.XamlType.UnderlyingType%2A>       Eseguire l&quot;override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsConstructible%2A>per restituire un valore diverso da quello abilitato dalla reflection interna predefinita.</xref:System.Xaml.XamlType.IsConstructible%2A>"
  syntax:
    content: protected virtual bool LookupIsConstructible ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo che può essere costruito; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsConstructible*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsMarkupExtension
  id: LookupIsMarkupExtension
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsMarkupExtension()
  nameWithType: XamlType.LookupIsMarkupExtension()
  fullName: System.Xaml.XamlType.LookupIsMarkupExtension()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un&quot;estensione di markup."
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</xref:System.Xaml.XamlType.IsMarkupExtension%2A>       L&quot;implementazione predefinita è costituita solo da questa chiamata: `return CanAssignTo(XamlLanguage.MarkupExtension);` eseguire l&quot;Override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsMarkupExtension%2A>per utilizzare una logica diversa.</xref:System.Xaml.XamlType.IsMarkupExtension%2A>       In termini di specifica di XAML, questo tipo deve essere assegnabile a `x:MarkupExtension` per restituire `true` per <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.</xref:System.Xaml.XamlType.IsMarkupExtension%2A>"
  syntax:
    content: protected virtual bool LookupIsMarkupExtension ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un&quot;estensione di markup; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsMarkupExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsNameScope
  id: LookupIsNameScope
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsNameScope()
  nameWithType: XamlType.LookupIsNameScope()
  fullName: System.Xaml.XamlType.LookupIsNameScope()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un namescope XAML, secondo la definizione XAML."
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.IsNameScope%2A>.</xref:System.Xaml.XamlType.IsNameScope%2A>       L&quot;implementazione predefinita esegue una <xref:System.Xaml.XamlType.CanAssignTo%2A>chiamata indirettamente rispetto al tipo <xref:System.Windows.Markup.INameScope>.</xref:System.Windows.Markup.INameScope> </xref:System.Xaml.XamlType.CanAssignTo%2A> <xref:System.Windows.Markup.INameScope>è un&quot;interfaccia definita nell&quot;assembly WindowsBase.</xref:System.Windows.Markup.INameScope> Questa tecnica per l&quot;identificazione di namescope XAML viene utilizzata sia da WPF e [!INCLUDE[TLA#tla_workflow](~/add/includes/tlasharptla-workflow-md.md)] le implementazioni di XAML.       Eseguire l&quot;override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsNameScope%2A>per utilizzare una logica diversa.</xref:System.Xaml.XamlType.IsNameScope%2A>       Un namescope XAML applica l&quot;univocità del nome della proprietà o le proprietà utilizzati per `x:Name`  /  `[name property]`. Se <xref:System.Xaml.XamlType.IsNameScope%2A>è `true`, quindi un meccanismo per imporre l&quot;univocità deve esistere e deve restituire dalla prospettiva di questo tipo che possiede un namescope XAML.</xref:System.Xaml.XamlType.IsNameScope%2A> Ambito dei nomi XAML si estende al contenuto del tipo quindi finché non viene rilevato un altro tipo di proprietario namescope XAML."
  syntax:
    content: protected virtual bool LookupIsNameScope ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un namescope XAML; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsNameScope*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsNullable
  id: LookupIsNullable
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsNullable()
  nameWithType: XamlType.LookupIsNullable()
  fullName: System.Xaml.XamlType.LookupIsNullable()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo nullable, secondo la definizione XAML."
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.IsNullable%2A>.</xref:System.Xaml.XamlType.IsNullable%2A>       L&quot;implementazione predefinita esegue una determinazione basata sul concetto che ammette valori null della libreria principale CLR, confrontato <xref:System.Xaml.XamlType.UnderlyingType%2A>.</xref:System.Xaml.XamlType.UnderlyingType%2A> Un valore null <xref:System.Xaml.XamlType.UnderlyingType%2A>, restituisce `true`.</xref:System.Xaml.XamlType.UnderlyingType%2A>       Eseguire l&quot;override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsNullable%2A>per utilizzare una logica diversa.</xref:System.Xaml.XamlType.IsNullable%2A>"
  syntax:
    content: protected virtual bool LookupIsNullable ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo nullable; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsPublic
  id: LookupIsPublic
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsPublic()
  nameWithType: XamlType.LookupIsPublic()
  fullName: System.Xaml.XamlType.LookupIsPublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo pubblico nel sistema di tipi rilevanti."
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.IsPublic%2A>.</xref:System.Xaml.XamlType.IsPublic%2A>       L&quot;implementazione predefinita utilizza la reflection di CLR per <xref:System.Xaml.XamlType.UnderlyingType%2A>.</xref:System.Xaml.XamlType.UnderlyingType%2A> null Un valore null <xref:System.Xaml.XamlType.UnderlyingType%2A>, restituisce `true`.</xref:System.Xaml.XamlType.UnderlyingType%2A>       Eseguire l&quot;override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsPublic%2A>per utilizzare una logica diversa.</xref:System.Xaml.XamlType.IsPublic%2A>      > [!IMPORTANT] > LookupIsPublic è virtuale e pertanto può essere sottoposto a override. La sostituzione con un possibile (per finalità dannose o in caso contrario) per modificare le informazioni di accesso segnalate su un tipo XAML in modo che non si allinei nel modo previsto con le informazioni di sistema o di accesso di tipo del tipo CLR sottostante. Per eventuali controlli critici per la sicurezza di accesso e le operazioni di assegnazione, utilizzare invece il tipo CLR sottostante."
  syntax:
    content: protected virtual bool LookupIsPublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo pubblico; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsUnknown
  id: LookupIsUnknown
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsUnknown()
  nameWithType: XamlType.LookupIsUnknown()
  fullName: System.Xaml.XamlType.LookupIsUnknown()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo che non può essere risolto nel sistema di tipi sottostante."
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.IsUnknown%2A>.</xref:System.Xaml.XamlType.IsUnknown%2A>       L&quot;implementazione predefinita può usare la reflection di CLR. Un valore null <xref:System.Xaml.XamlType.UnderlyingType%2A>, restituisce `true`.</xref:System.Xaml.XamlType.UnderlyingType%2A>       Eseguire l&quot;override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsUnknown%2A>per utilizzare una logica diversa.</xref:System.Xaml.XamlType.IsUnknown%2A>"
  syntax:
    content: protected virtual bool LookupIsUnknown ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo nonresolvable; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  id: LookupIsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsWhitespaceSignificantCollection()
  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection()
  fullName: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta una raccolta significativa di spazi vuoti, secondo la definizione XML."
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.</xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>       L&quot;implementazione predefinita restituisce un valore basato sulla lettura <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>.</xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute> È inoltre possibile verificare il <xref:System.Xaml.XamlType.BaseType%2A>per l&quot;attributo se viene trovato alcun attributo sul tipo sottostante immediato.</xref:System.Xaml.XamlType.BaseType%2A> Se un valore non è disponibile, restituisce `false`.       Eseguire l&quot;override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>per utilizzare una logica diversa.</xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>"
  syntax:
    content: protected virtual bool LookupIsWhitespaceSignificantCollection ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta una raccolta significativa di spazi vuoti; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsXData
  id: LookupIsXData
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsXData()
  nameWithType: XamlType.LookupIsXData()
  fullName: System.Xaml.XamlType.LookupIsXData()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta XML <xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;> </xref>, secondo la definizione XAML."
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.IsXData%2A>.</xref:System.Xaml.XamlType.IsXData%2A>       L&quot;implementazione predefinita esegue una <xref:System.Xaml.XamlType.CanAssignTo%2A>chiamata indirettamente rispetto al tipo <xref:System.Xml.Serialization.IXmlSerializable>.</xref:System.Xml.Serialization.IXmlSerializable> </xref:System.Xaml.XamlType.CanAssignTo%2A>       Eseguire l&quot;override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsXData%2A>per utilizzare una logica diversa.</xref:System.Xaml.XamlType.IsXData%2A>"
  syntax:
    content: protected virtual bool LookupIsXData ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if this <xref href=&quot;System.Xaml.XamlType&quot;></xref> represents <xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlType.LookupIsXData*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupItemType
  id: LookupItemType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupItemType()
  nameWithType: XamlType.LookupItemType()
  fullName: System.Xaml.XamlType.LookupItemType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un valore che fornisce le informazioni sul tipo per il <xref uid=&quot;langword_csharp_Items&quot; name=&quot;Items&quot; href=&quot;&quot;> </xref> proprietà di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.ItemType%2A>.</xref:System.Xaml.XamlType.ItemType%2A>       L&quot;implementazione predefinita è possibile utilizzare i concetti di reflection di CLR, ad esempio il controllo per un `Add` metodo <xref:System.Reflection.MethodInfo>e utilizzando il <xref:System.Reflection.ParameterInfo>; verifica <xref:System.Xaml.XamlType.IsArray%2A>; e il controllo <xref:System.Xaml.XamlType.BaseType%2A>e tenta la stessa logica.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Xaml.XamlType.IsArray%2A> </xref:System.Reflection.ParameterInfo> </xref:System.Reflection.MethodInfo>       Eseguire l&quot;override di questo metodo se si desidera <xref:System.Xaml.XamlType.ItemType%2A>per utilizzare una logica diversa.</xref:System.Xaml.XamlType.ItemType%2A> I casi in <xref:System.Xaml.XamlType.LookupCollectionKind%2A>restituisce <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>deve restituire `null`.</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> </xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupItemType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "Oggetto <xref href=&quot;System.Xaml.XamlType&quot;> </xref> oggetto per il tipo degli elementi nella raccolta; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se <xref href=&quot;System.Xaml.XamlType&quot;> </xref> non rappresenta una raccolta."
  overload: System.Xaml.XamlType.LookupItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupKeyType
  id: LookupKeyType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupKeyType()
  nameWithType: XamlType.LookupKeyType()
  fullName: System.Xaml.XamlType.LookupKeyType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un valore che fornisce le informazioni sul tipo per le proprietà di questa chiave <xref href=&quot;System.Xaml.XamlType&quot;> </xref>, se il <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un dizionario."
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.KeyType%2A>.</xref:System.Xaml.XamlType.KeyType%2A>       L&quot;implementazione predefinita è possibile utilizzare i concetti di reflection di CLR, ad esempio il controllo per un `Add` metodo <xref:System.Reflection.MethodInfo>e l&quot;utilizzo di <xref:System.Reflection.ParameterInfo>; e il controllo <xref:System.Xaml.XamlType.BaseType%2A>e tenta la stessa logica.</xref:System.Xaml.XamlType.BaseType%2A> </xref:System.Reflection.ParameterInfo> </xref:System.Reflection.MethodInfo>       Eseguire l&quot;override di questo metodo se si desidera <xref:System.Xaml.XamlType.KeyType%2A>per utilizzare una logica diversa.</xref:System.Xaml.XamlType.KeyType%2A> I casi in <xref:System.Xaml.XamlType.LookupCollectionKind%2A>non restituisce <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>deve restituire `null`.</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName> </xref:System.Xaml.XamlType.LookupCollectionKind%2A>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupKeyType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref> oggetto per il tipo di chiave per l&quot;utilizzo di dizionario, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se <xref href=&quot;System.Xaml.XamlType&quot;> </xref> non rappresenta un dizionario."
  overload: System.Xaml.XamlType.LookupKeyType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType
  id: LookupMarkupExtensionReturnType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupMarkupExtensionReturnType()
  nameWithType: XamlType.LookupMarkupExtensionReturnType()
  fullName: System.Xaml.XamlType.LookupMarkupExtensionReturnType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un valore che fornisce le informazioni sul tipo per l&quot;oggetto restituito <xref uid=&quot;langword_csharp_ProvideValue&quot; name=&quot;ProvideValue&quot; href=&quot;&quot;> </xref> di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>se rappresenta un&quot;estensione di markup."
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.</xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>       L&quot;implementazione predefinita restituisce un <xref:System.Xaml.XamlType>in base alla lettura <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>.</xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> </xref:System.Xaml.XamlType> È inoltre possibile verificare <xref:System.Xaml.XamlType.BaseType%2A>per l&quot;attributo se viene trovato alcun attributo sul tipo sottostante immediato.</xref:System.Xaml.XamlType.BaseType%2A> Se un valore non è disponibile, restituisce `null`.       Eseguire l&quot;override di questo metodo se si desidera <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>per utilizzare una logica diversa.</xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "Oggetto <xref href=&quot;System.Xaml.XamlType&quot;> </xref> oggetto per il tipo restituito per l&quot;utilizzo dell&quot;estensione di markup; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>se l&quot;oggetto <xref href=&quot;System.Xaml.XamlType&quot;> </xref> non rappresenta un&quot;estensione di markup."
  overload: System.Xaml.XamlType.LookupMarkupExtensionReturnType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupMember(System.String,System.Boolean)
  id: LookupMember(System.String,System.Boolean)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupMember(String,Boolean)
  nameWithType: XamlType.LookupMember(String,Boolean)
  fullName: System.Xaml.XamlType.LookupMember(String,Boolean)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce il <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> per uno specifico membro da questo denominato <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.GetMember%2A>.</xref:System.Xaml.XamlType.GetMember%2A>       L&quot;implementazione predefinita restituisce un <xref:System.Xaml.XamlType>basata sulla reflection CLR interna e valutazione rispetto al contesto dello schema.</xref:System.Xaml.XamlType>       Eseguire l&quot;override di questo metodo se si desidera <xref:System.Xaml.XamlType.GetMember%2A>per utilizzare una logica diversa.</xref:System.Xaml.XamlType.GetMember%2A>      > [!IMPORTANT] > LookupMember è virtuale e pertanto può essere sottoposto a override. La sostituzione con un possibile (per finalità dannose o in caso contrario) per modificare i membri di un tipo XAML riportati in modo che non si allineino nel modo previsto con il <xref:System.ComponentModel.TypeDescriptor> `Get*` informazioni sul tipo CLR sottostante.</xref:System.ComponentModel.TypeDescriptor> Per eventuali controlli critici per la sicurezza del membro reporting, utilizzare invece il tipo CLR sottostante."
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del membro da ottenere (come una stringa)."
    - id: skipReadOnlyCheck
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per restituire un membro anche se tale membro ha un <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> valore per &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A?displayProperty=fullName&gt;; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> da non restituire un &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A?displayProperty=fullName&gt; membro. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Xaml.XamlMember
      description: "Il <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> informazioni per il membro, se un membro è stato trovato; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  id: LookupPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupPositionalParameters(Int32)
  nameWithType: XamlType.LookupPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.LookupPositionalParameters(Int32)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Per i tipi di estensione di markup, restituisce i tipi di parametri posizionali sono supportati in un utilizzo dell&quot;estensione di markup specifico per questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</xref:System.Xaml.XamlType.GetPositionalParameters%2A>       L&quot;implementazione predefinita utilizza informazioni di reflection interna basate sulla ricerca di costruttori e controllo del grado. Eseguire l&quot;override di questo metodo se si desidera <xref:System.Xaml.XamlType.GetPositionalParameters%2A>per utilizzare una logica diversa.</xref:System.Xaml.XamlType.GetPositionalParameters%2A>       Questa API è pertinente solo se questa <xref:System.Xaml.XamlType>rappresenta un&quot;estensione di markup (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> è `true`).</xref:System.Xaml.XamlType.IsMarkupExtension%2A> </xref:System.Xaml.XamlType>       L&quot;input `parameterCount` non è per richiedere il tipo di un parametro posizionale specifico. È di specificare il grado di un utilizzo dell&quot;estensione di markup. Utilizzo dell&quot;estensione di markup spesso è più firme e Usa i parametri diversi grado (conteggio) di parametri posizionali per distinguere. Tuttavia, è possibile configurare un contesto dello schema per consentire gradi duplicati e utilizzare i tipi di parametri posizionali per elementi di differenziazione. Per ulteriori informazioni, vedere <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>.</xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A> Per un conteggio di grado specifico, le posizioni dei parametri e tipi possono variare. Per ottenere il tipo di utilizzo dell&quot;estensione di markup di un grado specifico posizionale, chiamare prima <xref:System.Xaml.XamlType.GetPositionalParameters%2A>con il conteggio del grado.</xref:System.Xaml.XamlType.GetPositionalParameters%2A> Ottenere quindi l&quot;elemento nella posizione specificata dalla raccolta restituita."
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlType> LookupPositionalParameters (int parameterCount);
    parameters:
    - id: parameterCount
      type: System.Int32
      description: "Conteggio (grado) della modalità sintassi o un costruttore specifico che si desiderano informazioni."
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Un elenco di <xref href=&quot;System.Xaml.XamlType&quot;> </xref> valori in cui ognuno di tali <xref href=&quot;System.Xaml.XamlType&quot;> </xref> è il tipo per tale posizione nella sintassi. Quando si fornisce l&quot;input per l&quot;estensione di markup, è necessario specificare i tipi nello stesso ordine."
  overload: System.Xaml.XamlType.LookupPositionalParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  id: LookupSetMarkupExtensionHandler
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupSetMarkupExtensionHandler()
  nameWithType: XamlType.LookupSetMarkupExtensionHandler()
  fullName: System.Xaml.XamlType.LookupSetMarkupExtensionHandler()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un callback del gestore da utilizzare per le operazioni di impostazione delle estensioni di markup."
  remarks: "L&quot;implementazione predefinita restituisce un valore basato sulla lettura <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>.</xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> È inoltre possibile verificare <xref:System.Xaml.XamlType.BaseType%2A>per l&quot;attributo se viene trovato alcun attributo sul tipo sottostante immediato.</xref:System.Xaml.XamlType.BaseType%2A> Se un valore non è disponibile, restituisce `null`."
  syntax:
    content: protected virtual EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs> LookupSetMarkupExtensionHandler ();
    parameters: []
    return:
      type: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}
      description: "Un callback del gestore da utilizzare per le operazioni di impostazione delle estensioni di markup."
  overload: System.Xaml.XamlType.LookupSetMarkupExtensionHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler
  id: LookupSetTypeConverterHandler
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupSetTypeConverterHandler()
  nameWithType: XamlType.LookupSetTypeConverterHandler()
  fullName: System.Xaml.XamlType.LookupSetTypeConverterHandler()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un gestore da utilizzare per i casi di impostazione del convertitore."
  remarks: "L&quot;implementazione predefinita restituisce un valore basato sulla lettura <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>.</xref:System.Windows.Markup.XamlSetTypeConverterAttribute> È inoltre possibile verificare <xref:System.Xaml.XamlType.BaseType%2A>per l&quot;attributo se viene trovato alcun attributo sul tipo sottostante immediato.</xref:System.Xaml.XamlType.BaseType%2A> Se un valore non è disponibile, restituisce `null`."
  syntax:
    content: protected virtual EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs> LookupSetTypeConverterHandler ();
    parameters: []
    return:
      type: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}
      description: "Gestore da utilizzare per i casi di impostazione del convertitore."
  overload: System.Xaml.XamlType.LookupSetTypeConverterHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  id: LookupTrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupTrimSurroundingWhitespace()
  nameWithType: XamlType.LookupTrimSurroundingWhitespace()
  fullName: System.Xaml.XamlType.LookupTrimSurroundingWhitespace()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> deve essere serializzato utilizzando una modalità che rimuove spazio vuoto circostante."
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.</xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>       L&quot;implementazione predefinita restituisce un valore basato sulla lettura <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>.</xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute> È inoltre possibile verificare <xref:System.Xaml.XamlType.BaseType%2A>per l&quot;attributo se viene trovato alcun attributo sul tipo sottostante immediato.</xref:System.Xaml.XamlType.BaseType%2A> Se un valore non è disponibile, restituisce `false`."
  syntax:
    content: protected virtual bool LookupTrimSurroundingWhitespace ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> deve essere serializzato in una modalità che rimuove spazio vuoto circostante; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupTrimSurroundingWhitespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupTypeConverter
  id: LookupTypeConverter
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupTypeConverter()
  nameWithType: XamlType.LookupTypeConverter()
  fullName: System.Xaml.XamlType.LookupTypeConverter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; che ha un <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> vincolo, che rappresenta il comportamento di conversione del tipo per i valori di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.TypeConverter%2A>.</xref:System.Xaml.XamlType.TypeConverter%2A>       L&quot;implementazione predefinita restituisce un valore basato sulla lettura <xref:System.ComponentModel.TypeConverterAttribute>.</xref:System.ComponentModel.TypeConverterAttribute> Inoltre è possibile verificare l&quot;implementazione predefinita <xref:System.Xaml.XamlType.BaseType%2A>per l&quot;attributo se viene trovato alcun attributo sul tipo sottostante immediato.</xref:System.Xaml.XamlType.BaseType%2A> Include anche una logica speciale per una conversione predefinita di enumerazioni, tipi di valore comuni e generics. Se un valore non è disponibile, restituisce `null`.       Eseguire l&quot;override di questo metodo se si desidera <xref:System.Xaml.XamlType.TypeConverter%2A>per utilizzare una logica diversa.</xref:System.Xaml.XamlType.TypeConverter%2A>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> LookupTypeConverter ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "Oggetto &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; con <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> vincolo che rappresenta il comportamento di conversione del tipo per i valori di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupUnderlyingType
  id: LookupUnderlyingType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupUnderlyingType()
  nameWithType: XamlType.LookupUnderlyingType()
  fullName: System.Xaml.XamlType.LookupUnderlyingType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce l&quot;oggetto CLR <xref:System.Type>sottostante l&quot;oggetto <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Type>"
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.UnderlyingType%2A>.</xref:System.Xaml.XamlType.UnderlyingType%2A>       L&quot;implementazione predefinita restituisce un campo interno. Tale campo viene inizializzato in genere durante la costruzione e il relativo valore è basato sul quale costruttore è stato chiamato e le informazioni fornite.       Eseguire l&quot;override di questo metodo se si desidera <xref:System.Xaml.XamlType.UnderlyingType%2A>per utilizzare una logica diversa.</xref:System.Xaml.XamlType.UnderlyingType%2A>"
  syntax:
    content: protected virtual Type LookupUnderlyingType ();
    parameters: []
    return:
      type: System.Type
      description: "CLR <xref:System.Type>sottostante l&quot;oggetto <xref href=&quot;System.Xaml.XamlType&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Xaml.XamlType.LookupUnderlyingType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupUsableDuringInitialization
  id: LookupUsableDuringInitialization
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupUsableDuringInitialization()
  nameWithType: XamlType.LookupUsableDuringInitialization()
  fullName: System.Xaml.XamlType.LookupUsableDuringInitialization()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> viene compilato dall&quot;alto in basso durante l&quot;inizializzazione XAML."
  remarks: "Dall&quot;alto in basso è una metafora che offre un&quot;approssimazione di comportamento del processore XAML durante la creazione dell&quot;oggetto grafico. Quando compilato dall&quot;alto in basso, viene creata un&quot;istanza di un tipo associato al padre, e impostate le proprietà. Costruzione dall&quot;alto in basso evita di richiamare i gestori di proprietà modificata più volte. Tale gestione si riflette l&quot;oggetto grafico e di conseguenza, Elimina il più chiamate del gestore e fornisce un&quot;ottimizzazione delle prestazioni per l&quot;avvio dell&quot;oggetto grafico.       Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>       L&quot;implementazione predefinita restituisce un valore basato sulla lettura <xref:System.Windows.Markup.UsableDuringInitializationAttribute>.</xref:System.Windows.Markup.UsableDuringInitializationAttribute> È inoltre possibile verificare <xref:System.Xaml.XamlType.BaseType%2A>per l&quot;attributo se viene trovato alcun attributo sul tipo sottostante immediato.</xref:System.Xaml.XamlType.BaseType%2A> Se un valore non è disponibile, restituisce `false`.       Eseguire l&quot;override di questo metodo se si desidera <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>per utilizzare una logica diversa.</xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>"
  syntax:
    content: protected virtual bool LookupUsableDuringInitialization ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> viene compilata dall&quot;alto in basso durante l&quot;inizializzazione XAML; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.LookupUsableDuringInitialization*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupValueSerializer
  id: LookupValueSerializer
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupValueSerializer()
  nameWithType: XamlType.LookupValueSerializer()
  fullName: System.Xaml.XamlType.LookupValueSerializer()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; che ha un <xref:System.Windows.Markup.ValueSerializer>vincolo, che rappresenta il comportamento di serializzazione per i valori di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  remarks: "Questo metodo può essere richiamato da chiamate a <xref:System.Xaml.XamlType.ValueSerializer%2A>.</xref:System.Xaml.XamlType.ValueSerializer%2A>       L&quot;implementazione predefinita restituisce un valore basato sulla lettura <xref:System.Windows.Markup.ValueSerializerAttribute>.</xref:System.Windows.Markup.ValueSerializerAttribute> È inoltre possibile verificare <xref:System.Xaml.XamlType.BaseType%2A>per l&quot;attributo se viene trovato alcun attributo sul tipo sottostante immediato.</xref:System.Xaml.XamlType.BaseType%2A> Include anche una logica speciale per la serializzazione predefinita di enumerazioni, tipi di valore comuni o generics. Se un valore non è disponibile, restituisce `null`.       Eseguire l&quot;override di questo metodo se si desidera <xref:System.Xaml.XamlType.ValueSerializer%2A>per utilizzare una logica diversa.</xref:System.Xaml.XamlType.ValueSerializer%2A>"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> LookupValueSerializer ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "Oggetto &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; con <xref:System.Windows.Markup.ValueSerializer>vincolo che rappresenta il comportamento di serializzazione per i valori di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  overload: System.Xaml.XamlType.LookupValueSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.MarkupExtensionReturnType
  id: MarkupExtensionReturnType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: MarkupExtensionReturnType
  nameWithType: XamlType.MarkupExtensionReturnType
  fullName: System.Xaml.XamlType.MarkupExtensionReturnType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che fornisce le informazioni sul tipo per l&quot;oggetto restituito <xref uid=&quot;langword_csharp_ProvideValue&quot; name=&quot;ProvideValue&quot; href=&quot;&quot;> </xref> di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>se rappresenta un&quot;estensione di markup."
  remarks: "Questa proprietà è pertinente solo se questa <xref:System.Xaml.XamlType>rappresenta un&quot;estensione di markup (`x:MarkupExtension` è nell&quot;elenco dei tipi assegnabili).</xref:System.Xaml.XamlType>       Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A>"
  syntax:
    content: public System.Xaml.XamlType MarkupExtensionReturnType { get; }
    return:
      type: System.Xaml.XamlType
      description: "Oggetto <xref href=&quot;System.Xaml.XamlType&quot;> </xref> oggetto per il tipo restituito per l&quot;utilizzo dell&quot;estensione di markup; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>se l&quot;oggetto <xref href=&quot;System.Xaml.XamlType&quot;> </xref> non rappresenta un&quot;estensione di markup."
  overload: System.Xaml.XamlType.MarkupExtensionReturnType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Name
  id: Name
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Name
  nameWithType: XamlType.Name
  fullName: System.Xaml.XamlType.Name
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene il nome di stringa del tipo che questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta."
  remarks: "In genere, questa proprietà ottiene il nome dello schema costruito (per il <xref:System.Xaml.XamlType.%23ctor%2A>firma), o il nome del <xref:System.Type>, se viene costruito utilizzando il costruttore pertinente del sistema di tipi CLR.</xref:System.Type> </xref:System.Xaml.XamlType.%23ctor%2A>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Nome della stringa di questo tipo XAML."
  overload: System.Xaml.XamlType.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  id: op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: op_Equality(XamlType,XamlType)
  nameWithType: XamlType.op_Equality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Equality(XamlType,XamlType)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Determina se due specificate <xref href=&quot;System.Xaml.XamlType&quot;> </xref> oggetti hanno lo stesso valore."
  syntax:
    content: public static bool op_Equality (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);
    parameters:
    - id: xamlType1
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlType2
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore di <code> xamlType1 </code> corrisponde al valore di <code> xamlType2 </code>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  id: op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: op_Inequality(XamlType,XamlType)
  nameWithType: XamlType.op_Inequality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Inequality(XamlType,XamlType)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Determina se due specificate <xref href=&quot;System.Xaml.XamlType&quot;> </xref> oggetti hanno valori diversi."
  syntax:
    content: public static bool op_Inequality (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);
    parameters:
    - id: xamlType1
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlType2
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore di <code> xamlType1 </code> è diverso dal valore di <code> xamlType2 </code>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.PreferredXamlNamespace
  id: PreferredXamlNamespace
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: PreferredXamlNamespace
  nameWithType: XamlType.PreferredXamlNamespace
  fullName: System.Xaml.XamlType.PreferredXamlNamespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene lo spazio dei nomi XAML solo per questo spazio dei nomi XAML primario <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Questa implementazione fornisce lo stesso valore di una chiamata <xref:System.Xaml.XamlType.GetXamlNamespaces%2A>e quindi ottenendo la prima stringa del valore dal set enumerabile restituito.</xref:System.Xaml.XamlType.GetXamlNamespaces%2A>"
  syntax:
    content: public string PreferredXamlNamespace { get; }
    return:
      type: System.String
      description: "L&quot;identificatore come stringa, di spazio dei nomi XAML primario per questo tipo XAML."
  overload: System.Xaml.XamlType.PreferredXamlNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.SchemaContext
  id: SchemaContext
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: SchemaContext
  nameWithType: XamlType.SchemaContext
  fullName: System.Xaml.XamlType.SchemaContext
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene l&quot;attiva <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> per l&quot;elaborazione di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "<xref:System.Xaml.XamlSchemaContext>è una voce di parametro obbligatorio quando si crea un <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType></xref:System.Xaml.XamlSchemaContext>"
  syntax:
    content: public System.Xaml.XamlSchemaContext SchemaContext { get; }
    return:
      type: System.Xaml.XamlSchemaContext
      description: "Attiva <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> per l&quot;elaborazione di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.SchemaContext*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ToString
  id: ToString
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ToString()
  nameWithType: XamlType.ToString()
  fullName: System.Xaml.XamlType.ToString()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce una rappresentazione di stringa di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "L&quot; <xref:System.Xaml.XamlType>implementazione di <xref:System.Object.ToString%2A>restituisce la <xref:System.Xaml.XamlType.Name%2A>proprietà di <xref:System.Xaml.XamlType>.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.Name%2A> </xref:System.Object.ToString%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Una rappresentazione di stringa del <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.TrimSurroundingWhitespace
  id: TrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: TrimSurroundingWhitespace
  nameWithType: XamlType.TrimSurroundingWhitespace
  fullName: System.Xaml.XamlType.TrimSurroundingWhitespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> è il comportamento per la serializzazione che rimuove lo spazio vuoto circostante nel contenuto di gestione degli spazi vuoti."
  remarks: "Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>"
  syntax:
    content: public bool TrimSurroundingWhitespace { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo che utilizza gli spazi vuoti tagliare; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlType.TrimSurroundingWhitespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.TypeArguments
  id: TypeArguments
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: TypeArguments
  nameWithType: XamlType.TypeArguments
  fullName: System.Xaml.XamlType.TypeArguments
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un elenco di argomenti di tipo per i casi in cui questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref> rappresenta un tipo generico."
  remarks: "Esistono alcuni scenari per un <xref:System.Xaml.XamlType>in cui la chiamata il parametro TypeArguments restituisce un elenco in cui i tipi sono ancora aperti.</xref:System.Xaml.XamlType> In questo caso, uno o più restituito <xref:System.Xaml.XamlType>valori sono associati valori di segnaposto per <xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName>, ad esempio `T`, per rappresentare che il tipo generico è ancora aperto.</xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName> </xref:System.Xaml.XamlType> Questo scenario può verificarsi se viene visualizzato un <xref:System.Xaml.XamlType>da una chiamata a <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, anziché da un&quot;implementazione del lettore XAML.</xref:System.Xaml.XamlSchemaContext.GetXamlType%2A> </xref:System.Xaml.XamlType>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> TypeArguments { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "Un elenco dei tipi di argomento di tipo. in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>se l&quot;oggetto <xref href=&quot;System.Xaml.XamlType&quot;> </xref> non rappresenta un tipo generico."
  overload: System.Xaml.XamlType.TypeArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.TypeConverter
  id: TypeConverter
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: TypeConverter
  nameWithType: XamlType.TypeConverter
  fullName: System.Xaml.XamlType.TypeConverter
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; con <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> che rappresenta il comportamento di conversione per i valori di questo oggetto di tipo di vincolo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  remarks: "Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupTypeConverter%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupTypeConverter%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupTypeConverter%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupTypeConverter%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> TypeConverter { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "Oggetto &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; con <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> che rappresenta il comportamento di conversione per i valori di questo oggetto di tipo di vincolo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.XamlType.TypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.UnderlyingType
  id: UnderlyingType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: UnderlyingType
  nameWithType: XamlType.UnderlyingType
  fullName: System.Xaml.XamlType.UnderlyingType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene il CLR <xref:System.Type>sottostante l&quot;oggetto <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Type>"
  syntax:
    content: public Type UnderlyingType { get; }
    return:
      type: System.Type
      description: "CLR <xref:System.Type>sottostante l&quot;oggetto <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Type>"
  overload: System.Xaml.XamlType.UnderlyingType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ValueSerializer
  id: ValueSerializer
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ValueSerializer
  nameWithType: XamlType.ValueSerializer
  fullName: System.Xaml.XamlType.ValueSerializer
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene un &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; con <xref:System.Windows.Markup.ValueSerializer>vincolo che rappresenta il comportamento di serializzazione per i valori di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  remarks: "Se non si utilizzano la tecnica di reflection CLR interna predefinita per un <xref:System.Xaml.XamlType>, le chiamate a questa proprietà possono richiamare <xref:System.Xaml.XamlType.LookupValueSerializer%2A>esegue l&quot;override in <xref:System.Xaml.XamlType>classi derivate.</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.LookupValueSerializer%2A> </xref:System.Xaml.XamlType> Per ulteriori informazioni sui valori restituiti e altri comportamenti, vedere la documentazione relativa a <xref:System.Xaml.XamlType.LookupValueSerializer%2A>su questo tipo.</xref:System.Xaml.XamlType.LookupValueSerializer%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> ValueSerializer { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "Oggetto &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt; con <xref:System.Windows.Markup.ValueSerializer>vincolo che rappresenta il comportamento di serializzazione per i valori di questo <xref href=&quot;System.Xaml.XamlType&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Markup.ValueSerializer>"
  overload: System.Xaml.XamlType.ValueSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(Type,XamlSchemaContext)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{System.Xaml.XamlType}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<XamlType>
  nameWithType: IList<XamlType>
  fullName: System.Collections.Generic.IList<System.Xaml.XamlType>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Xaml.XamlType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: XamlType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
- uid: System.Xaml.Schema.XamlTypeInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker
- uid: System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
- uid: System.Xaml.XamlType.AllowedContentTypes
  parent: System.Xaml.XamlType
  isExternal: false
  name: AllowedContentTypes
  nameWithType: XamlType.AllowedContentTypes
  fullName: System.Xaml.XamlType.AllowedContentTypes
- uid: System.Xaml.XamlType.BaseType
  parent: System.Xaml.XamlType
  isExternal: false
  name: BaseType
  nameWithType: XamlType.BaseType
  fullName: System.Xaml.XamlType.BaseType
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: CanAssignTo(XamlType)
  nameWithType: XamlType.CanAssignTo(XamlType)
  fullName: System.Xaml.XamlType.CanAssignTo(XamlType)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlType.ConstructionRequiresArguments
  parent: System.Xaml.XamlType
  isExternal: false
  name: ConstructionRequiresArguments
  nameWithType: XamlType.ConstructionRequiresArguments
  fullName: System.Xaml.XamlType.ConstructionRequiresArguments
- uid: System.Xaml.XamlType.ContentProperty
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentProperty
  nameWithType: XamlType.ContentProperty
  fullName: System.Xaml.XamlType.ContentProperty
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlType.ContentWrappers
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentWrappers
  nameWithType: XamlType.ContentWrappers
  fullName: System.Xaml.XamlType.ContentWrappers
- uid: System.Xaml.XamlType.DeferringLoader
  parent: System.Xaml.XamlType
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlType.DeferringLoader
  fullName: System.Xaml.XamlType.DeferringLoader
- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<XamlDeferringLoader>
  nameWithType: XamlValueConverter<XamlDeferringLoader>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Xaml.XamlDeferringLoader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlDeferringLoader
    name: XamlDeferringLoader
    nameWithType: XamlDeferringLoader
    fullName: XamlDeferringLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.Equals(System.Object)
  parent: System.Xaml.XamlType
  isExternal: false
  name: Equals(Object)
  nameWithType: XamlType.Equals(Object)
  fullName: System.Xaml.XamlType.Equals(Object)
- uid: System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: Equals(XamlType)
  nameWithType: XamlType.Equals(XamlType)
  fullName: System.Xaml.XamlType.Equals(XamlType)
- uid: System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAliasedProperty(XamlDirective)
  nameWithType: XamlType.GetAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.GetAliasedProperty(XamlDirective)
- uid: System.Xaml.XamlDirective
  parent: System.Xaml
  isExternal: false
  name: XamlDirective
  nameWithType: XamlDirective
  fullName: System.Xaml.XamlDirective
- uid: System.Xaml.XamlType.GetAllAttachableMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllAttachableMembers()
  nameWithType: XamlType.GetAllAttachableMembers()
  fullName: System.Xaml.XamlType.GetAllAttachableMembers()
- uid: System.Collections.Generic.ICollection{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<XamlMember>
  nameWithType: ICollection<XamlMember>
  fullName: System.Collections.Generic.ICollection<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.GetAllMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllMembers()
  nameWithType: XamlType.GetAllMembers()
  fullName: System.Xaml.XamlType.GetAllMembers()
- uid: System.Xaml.XamlType.GetAttachableMember(System.String)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAttachableMember(String)
  nameWithType: XamlType.GetAttachableMember(String)
  fullName: System.Xaml.XamlType.GetAttachableMember(String)
- uid: System.Xaml.XamlType.GetHashCode
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetHashCode()
  nameWithType: XamlType.GetHashCode()
  fullName: System.Xaml.XamlType.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlType.GetMember(System.String)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetMember(String)
  nameWithType: XamlType.GetMember(String)
  fullName: System.Xaml.XamlType.GetMember(String)
- uid: System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetPositionalParameters(Int32)
  nameWithType: XamlType.GetPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.GetPositionalParameters(Int32)
- uid: System.Xaml.XamlType.GetXamlNamespaces
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetXamlNamespaces()
  nameWithType: XamlType.GetXamlNamespaces()
  fullName: System.Xaml.XamlType.GetXamlNamespaces()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.Invoker
  parent: System.Xaml.XamlType
  isExternal: false
  name: Invoker
  nameWithType: XamlType.Invoker
  fullName: System.Xaml.XamlType.Invoker
- uid: System.Xaml.XamlType.IsAmbient
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsAmbient
  nameWithType: XamlType.IsAmbient
  fullName: System.Xaml.XamlType.IsAmbient
- uid: System.Xaml.XamlType.IsArray
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsArray
  nameWithType: XamlType.IsArray
  fullName: System.Xaml.XamlType.IsArray
- uid: System.Xaml.XamlType.IsCollection
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsCollection
  nameWithType: XamlType.IsCollection
  fullName: System.Xaml.XamlType.IsCollection
- uid: System.Xaml.XamlType.IsConstructible
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsConstructible
  nameWithType: XamlType.IsConstructible
  fullName: System.Xaml.XamlType.IsConstructible
- uid: System.Xaml.XamlType.IsDictionary
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsDictionary
  nameWithType: XamlType.IsDictionary
  fullName: System.Xaml.XamlType.IsDictionary
- uid: System.Xaml.XamlType.IsGeneric
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsGeneric
  nameWithType: XamlType.IsGeneric
  fullName: System.Xaml.XamlType.IsGeneric
- uid: System.Xaml.XamlType.IsMarkupExtension
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsMarkupExtension
  nameWithType: XamlType.IsMarkupExtension
  fullName: System.Xaml.XamlType.IsMarkupExtension
- uid: System.Xaml.XamlType.IsNameScope
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameScope
  nameWithType: XamlType.IsNameScope
  fullName: System.Xaml.XamlType.IsNameScope
- uid: System.Xaml.XamlType.IsNameValid
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameValid
  nameWithType: XamlType.IsNameValid
  fullName: System.Xaml.XamlType.IsNameValid
- uid: System.Xaml.XamlType.IsNullable
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNullable
  nameWithType: XamlType.IsNullable
  fullName: System.Xaml.XamlType.IsNullable
- uid: System.Xaml.XamlType.IsPublic
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsPublic
  nameWithType: XamlType.IsPublic
  fullName: System.Xaml.XamlType.IsPublic
- uid: System.Xaml.XamlType.IsUnknown
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUnknown
  nameWithType: XamlType.IsUnknown
  fullName: System.Xaml.XamlType.IsUnknown
- uid: System.Xaml.XamlType.IsUsableDuringInitialization
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUsableDuringInitialization
  nameWithType: XamlType.IsUsableDuringInitialization
  fullName: System.Xaml.XamlType.IsUsableDuringInitialization
- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsWhitespaceSignificantCollection
  nameWithType: XamlType.IsWhitespaceSignificantCollection
  fullName: System.Xaml.XamlType.IsWhitespaceSignificantCollection
- uid: System.Xaml.XamlType.IsXData
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsXData
  nameWithType: XamlType.IsXData
  fullName: System.Xaml.XamlType.IsXData
- uid: System.Xaml.XamlType.ItemType
  parent: System.Xaml.XamlType
  isExternal: false
  name: ItemType
  nameWithType: XamlType.ItemType
  fullName: System.Xaml.XamlType.ItemType
- uid: System.Xaml.XamlType.KeyType
  parent: System.Xaml.XamlType
  isExternal: false
  name: KeyType
  nameWithType: XamlType.KeyType
  fullName: System.Xaml.XamlType.KeyType
- uid: System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAliasedProperty(XamlDirective)
  nameWithType: XamlType.LookupAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.LookupAliasedProperty(XamlDirective)
- uid: System.Xaml.XamlType.LookupAllAttachableMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllAttachableMembers()
  nameWithType: XamlType.LookupAllAttachableMembers()
  fullName: System.Xaml.XamlType.LookupAllAttachableMembers()
- uid: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<XamlMember>
  nameWithType: IEnumerable<XamlMember>
  fullName: System.Collections.Generic.IEnumerable<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupAllMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllMembers()
  nameWithType: XamlType.LookupAllMembers()
  fullName: System.Xaml.XamlType.LookupAllMembers()
- uid: System.Xaml.XamlType.LookupAllowedContentTypes
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllowedContentTypes()
  nameWithType: XamlType.LookupAllowedContentTypes()
  fullName: System.Xaml.XamlType.LookupAllowedContentTypes()
- uid: System.Xaml.XamlType.LookupAttachableMember(System.String)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAttachableMember(String)
  nameWithType: XamlType.LookupAttachableMember(String)
  fullName: System.Xaml.XamlType.LookupAttachableMember(String)
- uid: System.Xaml.XamlType.LookupBaseType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupBaseType()
  nameWithType: XamlType.LookupBaseType()
  fullName: System.Xaml.XamlType.LookupBaseType()
- uid: System.Xaml.XamlType.LookupCollectionKind
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCollectionKind()
  nameWithType: XamlType.LookupCollectionKind()
  fullName: System.Xaml.XamlType.LookupCollectionKind()
- uid: System.Xaml.Schema.XamlCollectionKind
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlCollectionKind
  nameWithType: XamlCollectionKind
  fullName: System.Xaml.Schema.XamlCollectionKind
- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupConstructionRequiresArguments()
  nameWithType: XamlType.LookupConstructionRequiresArguments()
  fullName: System.Xaml.XamlType.LookupConstructionRequiresArguments()
- uid: System.Xaml.XamlType.LookupContentProperty
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentProperty()
  nameWithType: XamlType.LookupContentProperty()
  fullName: System.Xaml.XamlType.LookupContentProperty()
- uid: System.Xaml.XamlType.LookupContentWrappers
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentWrappers()
  nameWithType: XamlType.LookupContentWrappers()
  fullName: System.Xaml.XamlType.LookupContentWrappers()
- uid: System.Xaml.XamlType.LookupCustomAttributeProvider
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCustomAttributeProvider()
  nameWithType: XamlType.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlType.LookupCustomAttributeProvider()
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Xaml.XamlType.LookupDeferringLoader
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupDeferringLoader()
  nameWithType: XamlType.LookupDeferringLoader()
  fullName: System.Xaml.XamlType.LookupDeferringLoader()
- uid: System.Xaml.XamlType.LookupInvoker
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupInvoker()
  nameWithType: XamlType.LookupInvoker()
  fullName: System.Xaml.XamlType.LookupInvoker()
- uid: System.Xaml.XamlType.LookupIsAmbient
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsAmbient()
  nameWithType: XamlType.LookupIsAmbient()
  fullName: System.Xaml.XamlType.LookupIsAmbient()
- uid: System.Xaml.XamlType.LookupIsConstructible
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsConstructible()
  nameWithType: XamlType.LookupIsConstructible()
  fullName: System.Xaml.XamlType.LookupIsConstructible()
- uid: System.Xaml.XamlType.LookupIsMarkupExtension
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsMarkupExtension()
  nameWithType: XamlType.LookupIsMarkupExtension()
  fullName: System.Xaml.XamlType.LookupIsMarkupExtension()
- uid: System.Xaml.XamlType.LookupIsNameScope
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNameScope()
  nameWithType: XamlType.LookupIsNameScope()
  fullName: System.Xaml.XamlType.LookupIsNameScope()
- uid: System.Xaml.XamlType.LookupIsNullable
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNullable()
  nameWithType: XamlType.LookupIsNullable()
  fullName: System.Xaml.XamlType.LookupIsNullable()
- uid: System.Xaml.XamlType.LookupIsPublic
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsPublic()
  nameWithType: XamlType.LookupIsPublic()
  fullName: System.Xaml.XamlType.LookupIsPublic()
- uid: System.Xaml.XamlType.LookupIsUnknown
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsUnknown()
  nameWithType: XamlType.LookupIsUnknown()
  fullName: System.Xaml.XamlType.LookupIsUnknown()
- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsWhitespaceSignificantCollection()
  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection()
  fullName: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection()
- uid: System.Xaml.XamlType.LookupIsXData
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsXData()
  nameWithType: XamlType.LookupIsXData()
  fullName: System.Xaml.XamlType.LookupIsXData()
- uid: System.Xaml.XamlType.LookupItemType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupItemType()
  nameWithType: XamlType.LookupItemType()
  fullName: System.Xaml.XamlType.LookupItemType()
- uid: System.Xaml.XamlType.LookupKeyType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupKeyType()
  nameWithType: XamlType.LookupKeyType()
  fullName: System.Xaml.XamlType.LookupKeyType()
- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMarkupExtensionReturnType()
  nameWithType: XamlType.LookupMarkupExtensionReturnType()
  fullName: System.Xaml.XamlType.LookupMarkupExtensionReturnType()
- uid: System.Xaml.XamlType.LookupMember(System.String,System.Boolean)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMember(String,Boolean)
  nameWithType: XamlType.LookupMember(String,Boolean)
  fullName: System.Xaml.XamlType.LookupMember(String,Boolean)
- uid: System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupPositionalParameters(Int32)
  nameWithType: XamlType.LookupPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.LookupPositionalParameters(Int32)
- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetMarkupExtensionHandler()
  nameWithType: XamlType.LookupSetMarkupExtensionHandler()
  fullName: System.Xaml.XamlType.LookupSetMarkupExtensionHandler()
- uid: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<XamlSetMarkupExtensionEventArgs>
  nameWithType: EventHandler<XamlSetMarkupExtensionEventArgs>
  fullName: System.EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.XamlSetMarkupExtensionEventArgs
    name: XamlSetMarkupExtensionEventArgs
    nameWithType: XamlSetMarkupExtensionEventArgs
    fullName: XamlSetMarkupExtensionEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetTypeConverterHandler()
  nameWithType: XamlType.LookupSetTypeConverterHandler()
  fullName: System.Xaml.XamlType.LookupSetTypeConverterHandler()
- uid: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<XamlSetTypeConverterEventArgs>
  nameWithType: EventHandler<XamlSetTypeConverterEventArgs>
  fullName: System.EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.XamlSetTypeConverterEventArgs
    name: XamlSetTypeConverterEventArgs
    nameWithType: XamlSetTypeConverterEventArgs
    fullName: XamlSetTypeConverterEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTrimSurroundingWhitespace()
  nameWithType: XamlType.LookupTrimSurroundingWhitespace()
  fullName: System.Xaml.XamlType.LookupTrimSurroundingWhitespace()
- uid: System.Xaml.XamlType.LookupTypeConverter
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTypeConverter()
  nameWithType: XamlType.LookupTypeConverter()
  fullName: System.Xaml.XamlType.LookupTypeConverter()
- uid: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<TypeConverter>
  nameWithType: XamlValueConverter<TypeConverter>
  fullName: System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.ComponentModel.TypeConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.TypeConverter
    name: TypeConverter
    nameWithType: TypeConverter
    fullName: TypeConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupUnderlyingType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUnderlyingType()
  nameWithType: XamlType.LookupUnderlyingType()
  fullName: System.Xaml.XamlType.LookupUnderlyingType()
- uid: System.Xaml.XamlType.LookupUsableDuringInitialization
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUsableDuringInitialization()
  nameWithType: XamlType.LookupUsableDuringInitialization()
  fullName: System.Xaml.XamlType.LookupUsableDuringInitialization()
- uid: System.Xaml.XamlType.LookupValueSerializer
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupValueSerializer()
  nameWithType: XamlType.LookupValueSerializer()
  fullName: System.Xaml.XamlType.LookupValueSerializer()
- uid: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<ValueSerializer>
  nameWithType: XamlValueConverter<ValueSerializer>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Windows.Markup.ValueSerializer>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.ValueSerializer
    name: ValueSerializer
    nameWithType: ValueSerializer
    fullName: ValueSerializer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.MarkupExtensionReturnType
  parent: System.Xaml.XamlType
  isExternal: false
  name: MarkupExtensionReturnType
  nameWithType: XamlType.MarkupExtensionReturnType
  fullName: System.Xaml.XamlType.MarkupExtensionReturnType
- uid: System.Xaml.XamlType.Name
  parent: System.Xaml.XamlType
  isExternal: false
  name: Name
  nameWithType: XamlType.Name
  fullName: System.Xaml.XamlType.Name
- uid: System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Equality(XamlType,XamlType)
  nameWithType: XamlType.op_Equality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Equality(XamlType,XamlType)
- uid: System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Inequality(XamlType,XamlType)
  nameWithType: XamlType.op_Inequality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Inequality(XamlType,XamlType)
- uid: System.Xaml.XamlType.PreferredXamlNamespace
  parent: System.Xaml.XamlType
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlType.PreferredXamlNamespace
  fullName: System.Xaml.XamlType.PreferredXamlNamespace
- uid: System.Xaml.XamlType.SchemaContext
  parent: System.Xaml.XamlType
  isExternal: false
  name: SchemaContext
  nameWithType: XamlType.SchemaContext
  fullName: System.Xaml.XamlType.SchemaContext
- uid: System.Xaml.XamlType.ToString
  parent: System.Xaml.XamlType
  isExternal: false
  name: ToString()
  nameWithType: XamlType.ToString()
  fullName: System.Xaml.XamlType.ToString()
- uid: System.Xaml.XamlType.TrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  isExternal: false
  name: TrimSurroundingWhitespace
  nameWithType: XamlType.TrimSurroundingWhitespace
  fullName: System.Xaml.XamlType.TrimSurroundingWhitespace
- uid: System.Xaml.XamlType.TypeArguments
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeArguments
  nameWithType: XamlType.TypeArguments
  fullName: System.Xaml.XamlType.TypeArguments
- uid: System.Xaml.XamlType.TypeConverter
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeConverter
  nameWithType: XamlType.TypeConverter
  fullName: System.Xaml.XamlType.TypeConverter
- uid: System.Xaml.XamlType.UnderlyingType
  parent: System.Xaml.XamlType
  isExternal: false
  name: UnderlyingType
  nameWithType: XamlType.UnderlyingType
  fullName: System.Xaml.XamlType.UnderlyingType
- uid: System.Xaml.XamlType.ValueSerializer
  parent: System.Xaml.XamlType
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlType.ValueSerializer
  fullName: System.Xaml.XamlType.ValueSerializer
- uid: System.Xaml.XamlType.#ctor*
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType
  nameWithType: XamlType.XamlType
- uid: System.Xaml.XamlType.AllowedContentTypes*
  parent: System.Xaml.XamlType
  isExternal: false
  name: AllowedContentTypes
  nameWithType: XamlType.AllowedContentTypes
- uid: System.Xaml.XamlType.BaseType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: BaseType
  nameWithType: XamlType.BaseType
- uid: System.Xaml.XamlType.CanAssignTo*
  parent: System.Xaml.XamlType
  isExternal: false
  name: CanAssignTo
  nameWithType: XamlType.CanAssignTo
- uid: System.Xaml.XamlType.ConstructionRequiresArguments*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ConstructionRequiresArguments
  nameWithType: XamlType.ConstructionRequiresArguments
- uid: System.Xaml.XamlType.ContentProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentProperty
  nameWithType: XamlType.ContentProperty
- uid: System.Xaml.XamlType.ContentWrappers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentWrappers
  nameWithType: XamlType.ContentWrappers
- uid: System.Xaml.XamlType.DeferringLoader*
  parent: System.Xaml.XamlType
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlType.DeferringLoader
- uid: System.Xaml.XamlType.Equals*
  parent: System.Xaml.XamlType
  isExternal: false
  name: Equals
  nameWithType: XamlType.Equals
- uid: System.Xaml.XamlType.GetAliasedProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAliasedProperty
  nameWithType: XamlType.GetAliasedProperty
- uid: System.Xaml.XamlType.GetAllAttachableMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllAttachableMembers
  nameWithType: XamlType.GetAllAttachableMembers
- uid: System.Xaml.XamlType.GetAllMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllMembers
  nameWithType: XamlType.GetAllMembers
- uid: System.Xaml.XamlType.GetAttachableMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAttachableMember
  nameWithType: XamlType.GetAttachableMember
- uid: System.Xaml.XamlType.GetHashCode*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetHashCode
  nameWithType: XamlType.GetHashCode
- uid: System.Xaml.XamlType.GetMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetMember
  nameWithType: XamlType.GetMember
- uid: System.Xaml.XamlType.GetPositionalParameters*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetPositionalParameters
  nameWithType: XamlType.GetPositionalParameters
- uid: System.Xaml.XamlType.GetXamlNamespaces*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetXamlNamespaces
  nameWithType: XamlType.GetXamlNamespaces
- uid: System.Xaml.XamlType.Invoker*
  parent: System.Xaml.XamlType
  isExternal: false
  name: Invoker
  nameWithType: XamlType.Invoker
- uid: System.Xaml.XamlType.IsAmbient*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsAmbient
  nameWithType: XamlType.IsAmbient
- uid: System.Xaml.XamlType.IsArray*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsArray
  nameWithType: XamlType.IsArray
- uid: System.Xaml.XamlType.IsCollection*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsCollection
  nameWithType: XamlType.IsCollection
- uid: System.Xaml.XamlType.IsConstructible*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsConstructible
  nameWithType: XamlType.IsConstructible
- uid: System.Xaml.XamlType.IsDictionary*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsDictionary
  nameWithType: XamlType.IsDictionary
- uid: System.Xaml.XamlType.IsGeneric*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsGeneric
  nameWithType: XamlType.IsGeneric
- uid: System.Xaml.XamlType.IsMarkupExtension*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsMarkupExtension
  nameWithType: XamlType.IsMarkupExtension
- uid: System.Xaml.XamlType.IsNameScope*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameScope
  nameWithType: XamlType.IsNameScope
- uid: System.Xaml.XamlType.IsNameValid*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameValid
  nameWithType: XamlType.IsNameValid
- uid: System.Xaml.XamlType.IsNullable*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNullable
  nameWithType: XamlType.IsNullable
- uid: System.Xaml.XamlType.IsPublic*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsPublic
  nameWithType: XamlType.IsPublic
- uid: System.Xaml.XamlType.IsUnknown*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUnknown
  nameWithType: XamlType.IsUnknown
- uid: System.Xaml.XamlType.IsUsableDuringInitialization*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUsableDuringInitialization
  nameWithType: XamlType.IsUsableDuringInitialization
- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsWhitespaceSignificantCollection
  nameWithType: XamlType.IsWhitespaceSignificantCollection
- uid: System.Xaml.XamlType.IsXData*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsXData
  nameWithType: XamlType.IsXData
- uid: System.Xaml.XamlType.ItemType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ItemType
  nameWithType: XamlType.ItemType
- uid: System.Xaml.XamlType.KeyType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: KeyType
  nameWithType: XamlType.KeyType
- uid: System.Xaml.XamlType.LookupAliasedProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAliasedProperty
  nameWithType: XamlType.LookupAliasedProperty
- uid: System.Xaml.XamlType.LookupAllAttachableMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllAttachableMembers
  nameWithType: XamlType.LookupAllAttachableMembers
- uid: System.Xaml.XamlType.LookupAllMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllMembers
  nameWithType: XamlType.LookupAllMembers
- uid: System.Xaml.XamlType.LookupAllowedContentTypes*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllowedContentTypes
  nameWithType: XamlType.LookupAllowedContentTypes
- uid: System.Xaml.XamlType.LookupAttachableMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAttachableMember
  nameWithType: XamlType.LookupAttachableMember
- uid: System.Xaml.XamlType.LookupBaseType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupBaseType
  nameWithType: XamlType.LookupBaseType
- uid: System.Xaml.XamlType.LookupCollectionKind*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCollectionKind
  nameWithType: XamlType.LookupCollectionKind
- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupConstructionRequiresArguments
  nameWithType: XamlType.LookupConstructionRequiresArguments
- uid: System.Xaml.XamlType.LookupContentProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentProperty
  nameWithType: XamlType.LookupContentProperty
- uid: System.Xaml.XamlType.LookupContentWrappers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentWrappers
  nameWithType: XamlType.LookupContentWrappers
- uid: System.Xaml.XamlType.LookupCustomAttributeProvider*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCustomAttributeProvider
  nameWithType: XamlType.LookupCustomAttributeProvider
- uid: System.Xaml.XamlType.LookupDeferringLoader*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupDeferringLoader
  nameWithType: XamlType.LookupDeferringLoader
- uid: System.Xaml.XamlType.LookupInvoker*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupInvoker
  nameWithType: XamlType.LookupInvoker
- uid: System.Xaml.XamlType.LookupIsAmbient*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsAmbient
  nameWithType: XamlType.LookupIsAmbient
- uid: System.Xaml.XamlType.LookupIsConstructible*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsConstructible
  nameWithType: XamlType.LookupIsConstructible
- uid: System.Xaml.XamlType.LookupIsMarkupExtension*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsMarkupExtension
  nameWithType: XamlType.LookupIsMarkupExtension
- uid: System.Xaml.XamlType.LookupIsNameScope*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNameScope
  nameWithType: XamlType.LookupIsNameScope
- uid: System.Xaml.XamlType.LookupIsNullable*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNullable
  nameWithType: XamlType.LookupIsNullable
- uid: System.Xaml.XamlType.LookupIsPublic*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsPublic
  nameWithType: XamlType.LookupIsPublic
- uid: System.Xaml.XamlType.LookupIsUnknown*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsUnknown
  nameWithType: XamlType.LookupIsUnknown
- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsWhitespaceSignificantCollection
  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection
- uid: System.Xaml.XamlType.LookupIsXData*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsXData
  nameWithType: XamlType.LookupIsXData
- uid: System.Xaml.XamlType.LookupItemType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupItemType
  nameWithType: XamlType.LookupItemType
- uid: System.Xaml.XamlType.LookupKeyType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupKeyType
  nameWithType: XamlType.LookupKeyType
- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMarkupExtensionReturnType
  nameWithType: XamlType.LookupMarkupExtensionReturnType
- uid: System.Xaml.XamlType.LookupMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMember
  nameWithType: XamlType.LookupMember
- uid: System.Xaml.XamlType.LookupPositionalParameters*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupPositionalParameters
  nameWithType: XamlType.LookupPositionalParameters
- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetMarkupExtensionHandler
  nameWithType: XamlType.LookupSetMarkupExtensionHandler
- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetTypeConverterHandler
  nameWithType: XamlType.LookupSetTypeConverterHandler
- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTrimSurroundingWhitespace
  nameWithType: XamlType.LookupTrimSurroundingWhitespace
- uid: System.Xaml.XamlType.LookupTypeConverter*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTypeConverter
  nameWithType: XamlType.LookupTypeConverter
- uid: System.Xaml.XamlType.LookupUnderlyingType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUnderlyingType
  nameWithType: XamlType.LookupUnderlyingType
- uid: System.Xaml.XamlType.LookupUsableDuringInitialization*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUsableDuringInitialization
  nameWithType: XamlType.LookupUsableDuringInitialization
- uid: System.Xaml.XamlType.LookupValueSerializer*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupValueSerializer
  nameWithType: XamlType.LookupValueSerializer
- uid: System.Xaml.XamlType.MarkupExtensionReturnType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: MarkupExtensionReturnType
  nameWithType: XamlType.MarkupExtensionReturnType
- uid: System.Xaml.XamlType.Name*
  parent: System.Xaml.XamlType
  isExternal: false
  name: Name
  nameWithType: XamlType.Name
- uid: System.Xaml.XamlType.op_Equality*
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Equality
  nameWithType: XamlType.op_Equality
- uid: System.Xaml.XamlType.op_Inequality*
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Inequality
  nameWithType: XamlType.op_Inequality
- uid: System.Xaml.XamlType.PreferredXamlNamespace*
  parent: System.Xaml.XamlType
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlType.PreferredXamlNamespace
- uid: System.Xaml.XamlType.SchemaContext*
  parent: System.Xaml.XamlType
  isExternal: false
  name: SchemaContext
  nameWithType: XamlType.SchemaContext
- uid: System.Xaml.XamlType.ToString*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ToString
  nameWithType: XamlType.ToString
- uid: System.Xaml.XamlType.TrimSurroundingWhitespace*
  parent: System.Xaml.XamlType
  isExternal: false
  name: TrimSurroundingWhitespace
  nameWithType: XamlType.TrimSurroundingWhitespace
- uid: System.Xaml.XamlType.TypeArguments*
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeArguments
  nameWithType: XamlType.TypeArguments
- uid: System.Xaml.XamlType.TypeConverter*
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeConverter
  nameWithType: XamlType.TypeConverter
- uid: System.Xaml.XamlType.UnderlyingType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: UnderlyingType
  nameWithType: XamlType.UnderlyingType
- uid: System.Xaml.XamlType.ValueSerializer*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlType.ValueSerializer
