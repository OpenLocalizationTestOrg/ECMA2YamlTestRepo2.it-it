### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignerTransaction
  id: DesignerTransaction
  children:
  - System.ComponentModel.Design.DesignerTransaction.#ctor
  - System.ComponentModel.Design.DesignerTransaction.#ctor(System.String)
  - System.ComponentModel.Design.DesignerTransaction.Cancel
  - System.ComponentModel.Design.DesignerTransaction.Canceled
  - System.ComponentModel.Design.DesignerTransaction.Commit
  - System.ComponentModel.Design.DesignerTransaction.Committed
  - System.ComponentModel.Design.DesignerTransaction.Description
  - System.ComponentModel.Design.DesignerTransaction.Dispose(System.Boolean)
  - System.ComponentModel.Design.DesignerTransaction.Finalize
  - System.ComponentModel.Design.DesignerTransaction.OnCancel
  - System.ComponentModel.Design.DesignerTransaction.OnCommit
  - System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose
  langs:
  - csharp
  name: DesignerTransaction
  nameWithType: DesignerTransaction
  fullName: System.ComponentModel.Design.DesignerTransaction
  type: Class
  summary: "Fornisce un modo per raggruppare una serie di azioni in fase di progettazione per migliorare le prestazioni e consentire la maggior parte dei tipi di modifiche da annullare."
  remarks: "Le transazioni possono tenere traccia delle azioni che possono essere annullate in un secondo momento. Le modifiche apportate durante una transazione possono essere annullate annullando una transazione, che tenterà automaticamente di invertire ogni modifica impostando tutte le proprietà modificate al valore prima della modifica. Le transazioni possono inoltre migliorare le prestazioni durante una serie di operazioni rinviando gli aggiornamenti della visualizzazione fino al completamento della transazione.       Quando una transazione è in corso, alcuni componenti viene rinviata fino al completamento della transazione in attesa di elaborazione di <xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening>e <xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed>eventi.</xref:System.ComponentModel.Design.IDesignerHost.TransactionClosed> </xref:System.ComponentModel.Design.IDesignerHost.TransactionOpening> Finestra Proprietà, ad esempio, non aggiornare la visualizzazione dopo l&quot;apertura di una transazione fino a quando la transazione è chiuso.       Per utilizzare le transazioni per operazioni reversibili o più, è necessario creare un DesignerTransaction per ogni operazione o una serie di operazioni che devono essere reversibile. Prestare attenzione a non eseguire operazioni all&quot;esterno le transazioni che potrebbero impedire il completamento una sequenza di eventi di annullamento.       È possibile ottenere un nuovo DesignerTransaction chiamando il <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>metodo di un <xref:System.ComponentModel.Design.IDesignerHost>.</xref:System.ComponentModel.Design.IDesignerHost> </xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A> Assicurarsi di ottenere ogni DesignerTransaction dalla scheda attiva <xref:System.ComponentModel.Design.IDesignerHost>per garantire una corretta integrazione con la transazione della finestra di progettazione al meccanismo di elaborazione, anziché creare un nuovo DesignerTransaction direttamente.</xref:System.ComponentModel.Design.IDesignerHost>       Per eseguire un&quot;azione all&quot;interno di una transazione, è innanzitutto necessario creare una transazione. È necessario chiamare il <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>metodo prima che si verifica una modifica o un set di modifiche e <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>metodo dopo una modifica o un set di modifiche.</xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> </xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A> Infine, completare e chiudere la transazione chiamando il <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A>metodo.</xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A>      > [!NOTE] > Quando si apportano modifiche ai valori delle proprietà, utilizzare il <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>metodo di un <xref:System.ComponentModel.PropertyDescriptor>, che chiama i metodi di modifica del componente del <xref:System.ComponentModel.Design.IComponentChangeService>e crea un DesignerTransaction che rappresenta la modifica automaticamente.</xref:System.ComponentModel.Design.IComponentChangeService> </xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>       Per eseguire una transazione, completare i passaggi seguenti: 1.  Chiamare <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>per ottenere un DesignerTransaction che può essere utilizzato per controllare la transazione.</xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A>      2.  All&quot;interno di un `try` blocco, per ogni azione che si desidera tenere traccia con un DesignerTransaction, chiamata di <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>(metodo), apportare la modifica o le modifiche, quindi chiamare il <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>metodo per segnalare che la modifica o le modifiche apportate.</xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A> </xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>      3.  Per completare la transazione, chiamare <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A>dall&quot;interno un `finally` blocco.</xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A>       In c#, è possibile utilizzare il `using` istruzione piuttosto che un `try/finally` blocco, come illustrato nell&quot;esempio seguente.      ```   using (host.CreateTransaction() {   // Insert your code here.   }   ```Per annullare e tentare di ripristinare una transazione prima che sia stato eseguito il commit, chiamare il <xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A>metodo.</xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A> Quando il <xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A>metodo viene richiamato, le operazioni tiene traccia di DesignerTransaction vengono annullate per tentare di eseguire il rollback delle modifiche.</xref:System.ComponentModel.Design.DesignerTransaction.Cancel%2A> Per annullare le operazioni che si sono verificati nell&quot;ambito di transazioni precedenti, è necessario utilizzare il comando di annullamento fornito dall&quot;ambiente di sviluppo."
  example:
  - "The following code example program demonstrates how to create a DesignerTransaction from a designer. To run this sample, compile the source code into a class library. You must add a reference to the System.Design assembly. In a new project, add a reference to the compiled DLL and add the component in the library to the **Toolbox**.  \n  \n There is extensive support for this feature in Visual Studio.  \n  \n Also see [Walkthrough: Automatically Populating the Toolbox with Custom Components](http://msdn.microsoft.com/library/fw694kde\\(v=vs.110\\).aspx).  \n  \n The designer can optionally display notifications about designer transaction events. If you add an instance of the `DTComponent` to a form while in design mode, a message box appears asking whether you would like to receive designer transaction event notifications. You may toggle these notifications using the shortcut menu that appears when you right-click an instance of the `DTComponent`. Transactions are created when you change values using the Properties window. You can also have the designer perform a transaction by clicking **Perform Example Transaction** on the shortcut menu for the component.  \n  \n [!code-cpp[DesignerTransaction Sample#1](~/add/codesnippet/cpp/t-system.componentmodel._6_1.cpp)]\n [!code-vb[DesignerTransaction Sample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._6_1.vb)]\n [!code-cs[DesignerTransaction Sample#1](~/add/codesnippet/csharp/t-system.componentmodel._6_1.cs)]"
  syntax:
    content: 'public abstract class DesignerTransaction : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: DesignerTransaction()
  nameWithType: DesignerTransaction.DesignerTransaction()
  fullName: System.ComponentModel.Design.DesignerTransaction.DesignerTransaction()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;> </xref> classe senza descrizione."
  syntax:
    content: protected DesignerTransaction ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: DesignerTransaction(String)
  nameWithType: DesignerTransaction.DesignerTransaction(String)
  fullName: System.ComponentModel.Design.DesignerTransaction.DesignerTransaction(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;> </xref> classe utilizzando la descrizione della transazione specificata."
  remarks: "Questo costruttore inizializza la transazione con la descrizione specificata."
  syntax:
    content: protected DesignerTransaction (string description);
    parameters:
    - id: description
      type: System.String
      description: "Descrizione per questa transazione."
  overload: System.ComponentModel.Design.DesignerTransaction.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Cancel
  id: Cancel
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Cancel()
  nameWithType: DesignerTransaction.Cancel()
  fullName: System.ComponentModel.Design.DesignerTransaction.Cancel()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Annulla la transazione e prova a ripristinare le modifiche apportate dagli eventi della transazione."
  syntax:
    content: public void Cancel ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Canceled
  id: Canceled
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Canceled
  nameWithType: DesignerTransaction.Canceled
  fullName: System.ComponentModel.Design.DesignerTransaction.Canceled
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Ottiene un valore che indica se la transazione è stata annullata."
  remarks: "Quando una transazione della finestra di progettazione viene annullata, il meccanismo di elaborazione delle transazioni tenta di eseguire il rollback delle modifiche apportate finora nella transazione. Se l&quot;esito è positivo è dipendente da fattori quali il tipo di ogni operazione, se altre operazioni abbiano interferito con lo stato del codice coinvolto e se una sequenza di operazioni previsto non è stato completato."
  syntax:
    content: public bool Canceled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la transazione è stata annullata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.DesignerTransaction.Canceled*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Commit
  id: Commit
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Commit()
  nameWithType: DesignerTransaction.Commit()
  fullName: System.ComponentModel.Design.DesignerTransaction.Commit()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Il commit della transazione."
  remarks: "Quando una transazione della finestra di progettazione viene eseguito il commit, la transazione viene considerata completa e non rilevare altre modifiche.       Una volta che una transazione è stato eseguito il commit, ulteriormente le chiamate a questo metodo non eseguire alcuna operazione. Chiamare sempre questo metodo dopo la creazione di una transazione per garantire che la transazione venga chiusa correttamente."
  syntax:
    content: public void Commit ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.Commit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Committed
  id: Committed
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Committed
  nameWithType: DesignerTransaction.Committed
  fullName: System.ComponentModel.Design.DesignerTransaction.Committed
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Ottiene un valore che indica se è stato eseguito il commit della transazione."
  remarks: "Quando una transazione della finestra di progettazione viene eseguito il commit, la transazione viene considerata completa e non rilevare altre modifiche."
  syntax:
    content: public bool Committed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la transazione è stata salvata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.DesignerTransaction.Committed*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Description
  id: Description
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Description
  nameWithType: DesignerTransaction.Description
  fullName: System.ComponentModel.Design.DesignerTransaction.Description
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Ottiene una descrizione per la transazione."
  remarks: "Una transazione può avere una descrizione che si rivela utile per identificare la natura dell&quot;operazione o operazioni."
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "Descrizione per la transazione."
  overload: System.ComponentModel.Design.DesignerTransaction.Description*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DesignerTransaction.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignerTransaction.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Rilascia le risorse non gestite usate dal <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;> </xref> e facoltativamente rilascia le risorse gestite."
  remarks: "Questo metodo viene chiamato dal metodo pubblico `Dispose()` (metodo) e <xref:System.Object.Finalize%2A>metodo.</xref:System.Object.Finalize%2A> `Dispose()`richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`. <xref:System.Object.Finalize%2A>richiama `Dispose` con `disposing` impostato su `false`.</xref:System.Object.Finalize%2A>       Quando il `disposing` parametro `true`, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.ComponentModel.Design.DesignerTransaction>riferimenti.</xref:System.ComponentModel.Design.DesignerTransaction> Questo metodo richiama il `Dispose()` metodo di ciascun oggetto cui viene fatto riferimento."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.ComponentModel.Design.DesignerTransaction.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.Finalize
  id: Finalize
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: Finalize()
  nameWithType: DesignerTransaction.Finalize()
  fullName: System.ComponentModel.Design.DesignerTransaction.Finalize()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Rilascia le risorse associate all&quot;oggetto. Questa sostituzione il commit della transazione se non è già stato eseguito il commit."
  remarks: "Questo metodo esegue l&quot;override <xref:System.Object.Finalize%2A?displayProperty=fullName>e pulisce le risorse chiamando `Dispose(false)`.</xref:System.Object.Finalize%2A?displayProperty=fullName> Eseguire l&quot;override `Dispose(Boolean)` per personalizzare la pulizia.       Il codice dell&quot;applicazione non deve chiamare questo metodo. un oggetto `Finalize` metodo viene richiamato automaticamente durante l&quot;operazione di garbage collection, a meno che la finalizzazione del garbage collector non è stata disabilitata da una chiamata al <xref:System.GC.SuppressFinalize%2A?displayProperty=fullName>metodo.</xref:System.GC.SuppressFinalize%2A?displayProperty=fullName>       Per ulteriori informazioni, vedere [metodi Finalize e distruttori](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70), [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md), e [si esegue l&quot;override del metodo Finalize](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)."
  syntax:
    content: ~DesignerTransaction ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.OnCancel
  id: OnCancel
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: OnCancel()
  nameWithType: DesignerTransaction.OnCancel()
  fullName: System.ComponentModel.Design.DesignerTransaction.OnCancel()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Genera il <xref uid=&quot;langword_csharp_Cancel&quot; name=&quot;Cancel&quot; href=&quot;&quot;> </xref> evento."
  remarks: "Quando una transazione della finestra di progettazione viene annullata, il meccanismo di elaborazione delle transazioni tenta di eseguire il rollback delle modifiche apportate finora nella transazione. Se l&quot;esito è positivo è dipendente da fattori quali il tipo di ogni operazione, se altre operazioni abbiano interferito con lo stato del codice coinvolto e se una sequenza di operazioni previsto non è stato completato."
  syntax:
    content: protected abstract void OnCancel ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.OnCancel*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.OnCommit
  id: OnCommit
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: OnCommit()
  nameWithType: DesignerTransaction.OnCommit()
  fullName: System.ComponentModel.Design.DesignerTransaction.OnCommit()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Esegue l&quot;effettiva operazione di commit di una transazione."
  remarks: "Quando una transazione della finestra di progettazione viene eseguito il commit, la transazione viene considerata completa e non rilevare altre modifiche."
  syntax:
    content: protected abstract void OnCommit ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.OnCommit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.ComponentModel.Design.DesignerTransaction
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: DesignerTransaction.System.IDisposable.Dispose()
  fullName: System.ComponentModel.Design.DesignerTransaction.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Rilascia tutte le risorse usate dal <xref href=&quot;System.ComponentModel.Design.DesignerTransaction&quot;> </xref>."
  remarks: "Quando viene eliminata una transazione, viene eseguito il commit."
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Design.DesignerTransaction.#ctor
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: DesignerTransaction()
  nameWithType: DesignerTransaction.DesignerTransaction()
  fullName: System.ComponentModel.Design.DesignerTransaction.DesignerTransaction()
- uid: System.ComponentModel.Design.DesignerTransaction.#ctor(System.String)
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: DesignerTransaction(String)
  nameWithType: DesignerTransaction.DesignerTransaction(String)
  fullName: System.ComponentModel.Design.DesignerTransaction.DesignerTransaction(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.DesignerTransaction.Cancel
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Cancel()
  nameWithType: DesignerTransaction.Cancel()
  fullName: System.ComponentModel.Design.DesignerTransaction.Cancel()
- uid: System.ComponentModel.Design.DesignerTransaction.Canceled
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Canceled
  nameWithType: DesignerTransaction.Canceled
  fullName: System.ComponentModel.Design.DesignerTransaction.Canceled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignerTransaction.Commit
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Commit()
  nameWithType: DesignerTransaction.Commit()
  fullName: System.ComponentModel.Design.DesignerTransaction.Commit()
- uid: System.ComponentModel.Design.DesignerTransaction.Committed
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Committed
  nameWithType: DesignerTransaction.Committed
  fullName: System.ComponentModel.Design.DesignerTransaction.Committed
- uid: System.ComponentModel.Design.DesignerTransaction.Description
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Description
  nameWithType: DesignerTransaction.Description
  fullName: System.ComponentModel.Design.DesignerTransaction.Description
- uid: System.ComponentModel.Design.DesignerTransaction.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DesignerTransaction.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignerTransaction.Dispose(Boolean)
- uid: System.ComponentModel.Design.DesignerTransaction.Finalize
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Finalize()
  nameWithType: DesignerTransaction.Finalize()
  fullName: System.ComponentModel.Design.DesignerTransaction.Finalize()
- uid: System.ComponentModel.Design.DesignerTransaction.OnCancel
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: OnCancel()
  nameWithType: DesignerTransaction.OnCancel()
  fullName: System.ComponentModel.Design.DesignerTransaction.OnCancel()
- uid: System.ComponentModel.Design.DesignerTransaction.OnCommit
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: OnCommit()
  nameWithType: DesignerTransaction.OnCommit()
  fullName: System.ComponentModel.Design.DesignerTransaction.OnCommit()
- uid: System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: DesignerTransaction.System.IDisposable.Dispose()
  fullName: System.ComponentModel.Design.DesignerTransaction.System.IDisposable.Dispose()
- uid: System.ComponentModel.Design.DesignerTransaction.#ctor*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: DesignerTransaction
  nameWithType: DesignerTransaction.DesignerTransaction
- uid: System.ComponentModel.Design.DesignerTransaction.Cancel*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Cancel
  nameWithType: DesignerTransaction.Cancel
- uid: System.ComponentModel.Design.DesignerTransaction.Canceled*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Canceled
  nameWithType: DesignerTransaction.Canceled
- uid: System.ComponentModel.Design.DesignerTransaction.Commit*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Commit
  nameWithType: DesignerTransaction.Commit
- uid: System.ComponentModel.Design.DesignerTransaction.Committed*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Committed
  nameWithType: DesignerTransaction.Committed
- uid: System.ComponentModel.Design.DesignerTransaction.Description*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Description
  nameWithType: DesignerTransaction.Description
- uid: System.ComponentModel.Design.DesignerTransaction.Dispose*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Dispose
  nameWithType: DesignerTransaction.Dispose
- uid: System.ComponentModel.Design.DesignerTransaction.Finalize*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: Finalize
  nameWithType: DesignerTransaction.Finalize
- uid: System.ComponentModel.Design.DesignerTransaction.OnCancel*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: OnCancel
  nameWithType: DesignerTransaction.OnCancel
- uid: System.ComponentModel.Design.DesignerTransaction.OnCommit*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: OnCommit
  nameWithType: DesignerTransaction.OnCommit
- uid: System.ComponentModel.Design.DesignerTransaction.System#IDisposable#Dispose*
  parent: System.ComponentModel.Design.DesignerTransaction
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: DesignerTransaction.System.IDisposable.Dispose
