### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ErrObject
  id: ErrObject
  children:
  - Microsoft.VisualBasic.ErrObject.Clear
  - Microsoft.VisualBasic.ErrObject.Description
  - Microsoft.VisualBasic.ErrObject.Erl
  - Microsoft.VisualBasic.ErrObject.GetException
  - Microsoft.VisualBasic.ErrObject.HelpContext
  - Microsoft.VisualBasic.ErrObject.HelpFile
  - Microsoft.VisualBasic.ErrObject.LastDllError
  - Microsoft.VisualBasic.ErrObject.Number
  - Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)
  - Microsoft.VisualBasic.ErrObject.Source
  langs:
  - csharp
  name: ErrObject
  nameWithType: ErrObject
  fullName: Microsoft.VisualBasic.ErrObject
  type: Class
  summary: "Il <xref uid=&quot;langword_csharp_ErrObject&quot; name=&quot;ErrObject&quot; href=&quot;&quot;> </xref> modulo contiene le proprietà e le procedure utilizzate per identificare e gestire gli errori in fase di esecuzione tramite il <xref uid=&quot;langword_csharp_Err&quot; name=&quot;Err&quot; href=&quot;&quot;> </xref> oggetto."
  remarks: "Il `ErrObject` modulo supporta la `Err` oggetto. Per ulteriori informazioni, vedere <xref:Microsoft.VisualBasic.Information.Err%2A>.</xref:Microsoft.VisualBasic.Information.Err%2A>"
  example:
  - "This example uses the properties of the `Err` object in constructing an error-message dialog box. Notice what happens when you use the `Clear` method first: When you then generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.  \n  \n```  \nDim Msg As String  \n' If an error occurs, construct an error message.  \nOn Error Resume Next   ' Defer error handling.  \nErr.Clear  \nErr.Raise(6)   ' Generate an \"Overflow\" error.  \n' Check for error, then show message.  \nIf Err.Number <> 0 Then  \n    Msg = \"Error # \" & Str(Err.Number) & \" was generated by \" _  \n        & Err.Source & ControlChars.CrLf & Err.Description  \n    MsgBox(Msg, MsgBoxStyle.Information, \"Error\")  \nEnd If  \n```"
  syntax:
    content: public sealed class ErrObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Clear
  id: Clear
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Clear()
  nameWithType: ErrObject.Clear()
  fullName: Microsoft.VisualBasic.ErrObject.Clear()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Cancella tutte le impostazioni delle proprietà di <xref uid=&quot;langword_csharp_Err&quot; name=&quot;Err&quot; href=&quot;&quot;> </xref> oggetto."
  remarks: "Utilizzare `Clear` cancellare in modo esplicito il `Err` oggetto dopo la gestione di un errore, ad esempio quando si usa posticipata gestione degli errori con `On Error Resume Next`. Il `Clear` metodo viene chiamato automaticamente quando si esegue una delle istruzioni seguenti:-qualsiasi tipo di `Resume` istruzione - `Exit Sub`, `Exit Function`, o `Exit Property` - qualsiasi `On Error` informativa - qualsiasi `Try...Catch...Finally` istruzione > [!NOTE] > il `On Error Resume Next` costrutto può essere preferibile `On Error GoTo` la gestione degli errori generati durante l&quot;accesso ad altri oggetti. Controllo `Err` dopo ogni interazione con un oggetto, Elimina l&quot;ambiguità sulle oggetto ha effettuato l&quot;accesso di codice: È possibile essere certi che l&quot;oggetto inserito il codice di errore in `Err.Number`, nonché quale oggetto ha generato l&quot;errore (l&quot;oggetto specificato `Err.Source`)."
  example:
  - "This example uses the `Err` object's `Clear` method to reset the numeric properties of the `Err` object to zero and its string properties to zero-length strings. Without the call to `Clear`, the second call to `MsgBox` would display the same error message.  \n  \n [!code-vb[VbVbalrErrorHandling#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._141_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: Microsoft.VisualBasic.ErrObject.Clear*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Description
  id: Description
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Description
  nameWithType: ErrObject.Description
  fullName: Microsoft.VisualBasic.ErrObject.Description
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce o imposta un <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> espressione contenente una stringa descrittiva associata a un errore. Lettura/scrittura."
  remarks: "Il `Description` l&quot;impostazione della proprietà è costituito da una breve descrizione dell&quot;errore. Utilizzare questa proprietà per avvisare l&quot;utente di un errore che non è possibile o non si desidera gestire. Quando si genera un errore definito dall&quot;utente, assegnare una breve descrizione del messaggio di errore per il `Description` proprietà. Se il `Description` proprietà non è compilata e il valore della <xref:Microsoft.VisualBasic.ErrObject.Number%2A>proprietà corrisponde a un errore di runtime di Visual Basic, quindi la stringa restituita dal <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A>funzione è impostata `Description` proprietà quando viene generato l&quot;errore.</xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> </xref:Microsoft.VisualBasic.ErrObject.Number%2A>"
  example:
  - "This example assigns a user-defined message to the `Description` property of the `Err` object.  \n  \n [!code-vb[VbVbalrErrorHandling#5](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._68_1.vb)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "Restituisce o imposta un <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> espressione contenente una stringa descrittiva associata a un errore. Lettura/scrittura."
  overload: Microsoft.VisualBasic.ErrObject.Description*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Erl
  id: Erl
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Erl
  nameWithType: ErrObject.Erl
  fullName: Microsoft.VisualBasic.ErrObject.Erl
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un intero che indica il numero di riga dell&quot;ultima istruzione eseguita. Sola lettura."
  remarks: "Se Visual Basic rilevati numeri di riga, viene restituito 0."
  example:
  - "This example uses the `Erl` property to indicate the line number.  \n  \n```  \n10:     On Error Resume Next  \n20:     Err.Raise(60000)  \n' Returns 20.  \n30:     MsgBox(Erl())  \n```"
  syntax:
    content: public int Erl { get; }
    return:
      type: System.Int32
      description: "Restituisce un intero che indica il numero di riga dell&quot;ultima istruzione eseguita. Sola lettura."
  overload: Microsoft.VisualBasic.ErrObject.Erl*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.GetException
  id: GetException
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: GetException()
  nameWithType: ErrObject.GetException()
  fullName: Microsoft.VisualBasic.ErrObject.GetException()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce l&quot;eccezione che rappresenta l&quot;errore che si sono verificati."
  remarks: "Il `GetException` è disponibile solo dalla funzione di `Err` classe dell&quot;oggetto. Funziona con il `Exception` proprietà del `Err` oggetto per visualizzare l&quot;errore che si è verificato."
  example:
  - "The following code displays the message assigned to the exception in the `Err` object:  \n  \n [!code-vb[VbVbalrCatRef#66](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._226_1.vb)]"
  syntax:
    content: public Exception GetException ();
    parameters: []
    return:
      type: System.Exception
      description: "Restituisce l&quot;eccezione che rappresenta l&quot;errore che si sono verificati."
  overload: Microsoft.VisualBasic.ErrObject.GetException*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.HelpContext
  id: HelpContext
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: HelpContext
  nameWithType: ErrObject.HelpContext
  fullName: Microsoft.VisualBasic.ErrObject.HelpContext
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce o imposta un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> contenente l&quot;ID del contesto per un argomento in un file della Guida. Lettura/scrittura."
  remarks: "Il `HelpContext` proprietà viene utilizzata per visualizzare la Guida sensibile al contesto per un&quot;applicazione. Se viene specificato un file della Guida `HelpFile`, `HelpContext` proprietà viene utilizzata per visualizzare automaticamente i file della Guida identificato. Se entrambi i `HelpFile` e `HelpContext` le proprietà sono vuote, il valore della <xref:Microsoft.VisualBasic.ErrObject.Number%2A>proprietà è selezionata.</xref:Microsoft.VisualBasic.ErrObject.Number%2A> Se il valore di `Number` proprietà corrisponde a un valore di errore di run-time Visual Basic, quindi viene utilizzato l&quot;ID del contesto della Guida di Visual Basic per l&quot;errore. Se il valore di `Number` proprietà non corrisponde a un errore di Visual Basic, viene visualizzata la schermata di contenuto per il file della Guida di Visual Basic.      > [!NOTE] > È consigliabile scrivere routine nell&quot;applicazione per gestire gli errori tipici. Durante la programmazione con un oggetto, è possibile utilizzare il relativo file della Guida per migliorare la qualità, la gestione degli errori o per visualizzare un messaggio significativo per l&quot;utente se l&quot;errore non è reversibile."
  example:
  - "This example uses the `HelpContext` property of the `Err` object to show the Visual Basic Help topic for the `Overflow` error.  \n  \n [!code-vb[VbVbalrErrorHandling#7](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._34_1.vb)]"
  syntax:
    content: public int HelpContext { get; set; }
    return:
      type: System.Int32
      description: "Restituisce o imposta un <xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref> contenente l&quot;ID del contesto per un argomento in un file della Guida. Lettura/scrittura."
  overload: Microsoft.VisualBasic.ErrObject.HelpContext*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.HelpFile
  id: HelpFile
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: HelpFile
  nameWithType: ErrObject.HelpFile
  fullName: Microsoft.VisualBasic.ErrObject.HelpFile
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce o imposta un <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> espressione contenente il percorso completo di un file della Guida. Lettura/scrittura."
  remarks: "Se è specificato un file della Guida di `HelpFile` proprietà, viene automaticamente chiamato quando l&quot;utente preme il tasto Guida (o il tasto F1) nella finestra di dialogo del messaggio di errore. Se il `HelpContext` proprietà contiene un contesto valido ID per il file specificato, questo argomento viene visualizzato automaticamente. Se non `HelpFile` viene specificato, viene visualizzato il file della Guida di Visual Basic.      > [!NOTE] > È consigliabile scrivere routine nell&quot;applicazione per gestire gli errori tipici. Durante la programmazione con un oggetto, è possibile utilizzare il relativo file della Guida per migliorare la qualità, la gestione degli errori o per visualizzare un messaggio significativo per l&quot;utente se l&quot;errore non è reversibile."
  example:
  - "This example uses the `HelpFile` property of the `Err` object to start the Help system. By default, the `HelpFile` property contains the name of the Visual Basic Help file.  \n  \n [!code-vb[VbVbalrErrorHandling#7](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._70_1.vb)]"
  syntax:
    content: public string HelpFile { get; set; }
    return:
      type: System.String
      description: "Restituisce o imposta un <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> espressione contenente il percorso completo di un file della Guida. Lettura/scrittura."
  overload: Microsoft.VisualBasic.ErrObject.HelpFile*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.LastDllError
  id: LastDllError
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: LastDllError
  nameWithType: ErrObject.LastDllError
  fullName: Microsoft.VisualBasic.ErrObject.LastDllError
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce un codice di errore di sistema generato da una chiamata a una libreria di collegamento dinamico (DLL). Sola lettura."
  remarks: "La proprietà Err si applica solo alle chiamate a DLL eseguite dal codice Visual Basic. Quando viene effettuata una chiamata di questo tipo, la funzione chiamata restituisce in genere un codice che indica l&quot;esito positivo o negativo e la proprietà Err viene riempita. Consultare la documentazione per le funzioni della DLL determinare i valori restituiti che indicano l&quot;esito positivo o negativo. Ogni volta che viene restituito il codice di errore, l&quot;applicazione Visual Basic deve controllare immediatamente la proprietà Err. Quando la proprietà Err è impostata, viene generata alcuna eccezione.      > [!NOTE] > Err la proprietà è protetta da <xref:System.Security.Permissions.SecurityAction>, che consente di impedire l&quot;accesso al codice non attendibile.</xref:System.Security.Permissions.SecurityAction> Tuttavia, <xref:System.Security.Permissions.SecurityAction>richiede solo il chiamante immediato <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A>autorizzazione.</xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> </xref:System.Security.Permissions.SecurityAction> Se il codice può essere chiamato da codice parzialmente attendibile, l&quot;esposizione del valore di Err senza convalida costituisce un rischio per la sicurezza.   >> Per le principali limitazioni sull&quot;utilizzo di <xref:System.Security.Permissions.SecurityAction>membro, vedere [richiedono e</xref:System.Security.Permissions.SecurityAction> LinkDemand](http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5). Per ulteriori informazioni sulle autorizzazioni, vedere <xref:System.Security.Permissions.SecurityPermission>e [le autorizzazioni di accesso di codice](http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675).</xref:System.Security.Permissions.SecurityPermission>       Nota per smart device che questa proprietà restituisce sempre zero."
  example:
  - "The following example shows how you can use the `LastDllError` property after calling a function in the Windows API. The `PrintWindowCoordinates` procedure takes a handle to a window and calls the `GetWindowRect` function. `GetWindowRect` fills the RECT data structure with the lengths of the sides of the rectangle that make up the window. If you pass an invalid handle, an error occurs, and the error number is available through the `LastDllError` property.  \n  \n [!code-vb[VbVbalrErrorHandling#8](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._45_1.vb)]  \n[!code-vb[VbVbalrErrorHandling#9](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._45_2.vb)]  \n[!code-vb[VbVbalrErrorHandling#10](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._45_3.vb)]  \n  \n [!code-vb[VbVbalrErrorHandling#11](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._45_4.vb)]"
  syntax:
    content: public int LastDllError { get; }
    return:
      type: System.Int32
      description: "Restituisce un codice di errore di sistema generato da una chiamata a una libreria di collegamento dinamico (DLL). Sola lettura."
  overload: Microsoft.VisualBasic.ErrObject.LastDllError*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Number
  id: Number
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Number
  nameWithType: ErrObject.Number
  fullName: Microsoft.VisualBasic.ErrObject.Number
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce o imposta un valore numerico che specifica un errore. Lettura/scrittura."
  remarks: "Tutti i `Raise` argomenti tranne che `Number` sono facoltativi. Se si omettono gli argomenti facoltativi e le impostazioni delle proprietà di `Err` oggetto contiene i valori che non sono stati cancellati, tali valori verranno utilizzati come valori per l&quot;errore.       Poiché il `Err` oggetto fornisce informazioni più complete rispetto a quando si generano errori con il `Error` istruzione `Raise` è utile per la generazione di errori durante la scrittura di moduli di classe. Ad esempio, con la `Raise` metodo, l&quot;origine che ha generato l&quot;errore può essere specificato nel `Source` proprietà, la Guida in linea per l&quot;errore è possibile fare riferimento e così via.       Quando viene restituito un errore definito dall&quot;utente da un oggetto, impostare `Err.Number` aggiungendo il numero selezionato come un codice di errore per il `VbObjectError` costante. Ad esempio, utilizzare il codice seguente per restituire il numero 1051 come codice di errore: [!code-vb [VbVbalrErrorHandling #13](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._83_1.vb)]"
  example:
  - "This example illustrates a typical use of the `Number` property in an error-handling routine.  \n  \n [!code-vb[VbVbalrErrorHandling#12](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._83_2.vb)]  \n  \n This example uses the `Err` object's `Raise` method to generate an original error within a function written in Visual Basic. The calling function can catch the error and report it to the user. Notice that procedure `CallingProcedure` contrasts the type of information that you can derive from an `Err` object with the information that you can derive from an `Exception` object.  \n  \n [!code-vb[VbVbalrErrorHandling#14](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._83_3.vb)]"
  syntax:
    content: public int Number { get; set; }
    return:
      type: System.Int32
      description: "Restituisce o imposta un valore numerico che specifica un errore. Lettura/scrittura."
  overload: Microsoft.VisualBasic.ErrObject.Number*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Number</code>è maggiore di 65535."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)
  id: Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Raise(Int32,Object,Object,Object,Object)
  nameWithType: ErrObject.Raise(Int32,Object,Object,Object,Object)
  fullName: Microsoft.VisualBasic.ErrObject.Raise(Int32,Object,Object,Object,Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Genera un errore in fase di esecuzione. può essere utilizzato anziché il <xref uid=&quot;langword_csharp_Error&quot; name=&quot;Error&quot; href=&quot;&quot;> </xref> istruzione."
  remarks: "Tutti i `Raise` argomenti tranne che `Number` sono facoltativi. Se si omettono gli argomenti facoltativi e le impostazioni delle proprietà di `Err` oggetto contiene i valori che non sono stati cancellati, tali valori verranno utilizzati come valori per l&quot;errore.       Poiché il `Err` oggetto fornisce informazioni più complete rispetto a quando si generano errori con il `Error` istruzione `Raise` è utile per la generazione di errori durante la scrittura di moduli di classe. Ad esempio, con la `Raise` metodo, l&quot;origine che ha generato l&quot;errore può essere specificato nel `Source` proprietà, la Guida in linea per l&quot;errore è possibile fare riferimento e così via."
  example:
  - "This example uses the `Err` object's `Raise` method to generate an error within a function written in Visual Basic. The calling function can catch the error and report it to the user with a message box.  \n  \n [!code-vb[VbVbalrErrorHandling#14](~/add/codesnippet/visualbasic/b1f4ec6f-36d3-4787-9987-_1.vb)]"
  syntax:
    content: public void Raise (int Number, object Source = null, object Description = null, object HelpFile = null, object HelpContext = null);
    parameters:
    - id: Number
      type: System.Int32
      description: "Obbligatorio. <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;></xref>intero che identifica la natura dell&quot;errore. Gli errori di Visual Basic sono compreso nell&quot;intervallo da 0 a 65535. l&quot;intervallo da 0 a 512 è riservato per gli errori di sistema. l&quot;intervallo 513 e 65535 è disponibile per gli errori definiti dall&quot;utente. Quando si imposta la <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> proprietà per il proprio codice di errore in un modulo di classe, si aggiunge il numero di codice di errore per il <xref uid=&quot;langword_csharp_vbObjectError&quot; name=&quot;vbObjectError&quot; href=&quot;&quot;> </xref> costante. Ad esempio, per generare il numero di errore 513, assegnare `vbObjectError + 513` per il <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> proprietà."
    - id: Source
      type: System.Object
      description: "Facoltativa. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>nome dell&quot;oggetto o applicazione che ha generato l&quot;errore di espressione. Quando si imposta questa proprietà per un oggetto, utilizzare il formato `project`.`class`. Se `Source` viene omesso, viene utilizzato l&quot;ID del processo del progetto corrente di Visual Basic."
    - id: Description
      type: System.Object
      description: "Facoltativa. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>espressione che descrive l&quot;errore. Se non viene specificato, il valore di <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> viene esaminata la proprietà. Se è possibile eseguirne il mapping a un errore di runtime di Visual Basic del codice, la stringa restituita dal <xref uid=&quot;langword_csharp_Error&quot; name=&quot;Error&quot; href=&quot;&quot;> </xref> funzione viene utilizzata come il <xref uid=&quot;langword_csharp_Description&quot; name=&quot;Description&quot; href=&quot;&quot;> </xref> proprietà. Se non si verificano errori di Visual Basic corrispondente il <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> viene utilizzata la proprietà, il messaggio &quot;errore definito dall&quot;applicazione o definito dall&quot;oggetto&quot;."
    - id: HelpFile
      type: System.Object
      description: "Facoltativa. Il percorso completo del file della Guida in cui è possibile trovare informazioni sull&quot;errore. Se non viene specificato, Visual Basic utilizza l&quot;unità completo, un percorso e nome file del file della Guida di Visual Basic."
    - id: HelpContext
      type: System.Object
      description: "Facoltativa. L&quot;ID del contesto che identifica un argomento di `HelpFile` che fornisce informazioni di errore. Se omesso, l&quot;ID del contesto della Guida di Visual Basic-file per l&quot;errore corrispondente il <xref uid=&quot;langword_csharp_Number&quot; name=&quot;Number&quot; href=&quot;&quot;> </xref> proprietà viene utilizzata, se presente."
  overload: Microsoft.VisualBasic.ErrObject.Raise*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ErrObject.Source
  id: Source
  parent: Microsoft.VisualBasic.ErrObject
  langs:
  - csharp
  name: Source
  nameWithType: ErrObject.Source
  fullName: Microsoft.VisualBasic.ErrObject.Source
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Restituisce o imposta un <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> espressione che specifica il nome dell&quot;applicazione che ha generato l&quot;errore o dell&quot;oggetto. Lettura/scrittura."
  remarks: "Il `Source` proprietà specifica un `String` espressione che rappresenta l&quot;oggetto che ha generato l&quot;errore; l&quot;espressione è in genere il nome dell&quot;oggetto classe o l&quot;ID del processo. Utilizzare il `Source` proprietà per fornire informazioni quando il codice è in grado di gestire un errore generato in un oggetto a cui si accede. Ad esempio, se si accede a Microsoft Excel e viene generato un `Division by zero` errore, Microsoft Excel imposta `Err.Number` al relativo codice di errore per tale errore e imposta `Source` per &quot;Application&quot;.       Quando l&quot;applicazione genera un errore dal codice, `Source` è l&quot;ID livello di codice. del applicazione All&quot;interno di una classe, `Source` deve contenere un nome con il formato *progetto*.* classe*. Quando si verifica un errore imprevisto nel codice, il `Source` proprietà viene impostato automaticamente. Per gli errori in un modulo, `Source` contiene il nome del progetto."
  example:
  - "This example demonstrates the use of the `Source` property in a typical error-handling routine. When an error is raised from `Class1`, the string `\"Class1\"` is assigned to the `Source` property of the `Err` object. This string is then displayed in an informative message indicating the source and number of the error.  \n  \n [!code-vb[VbVbalrErrorHandling#15](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._39_1.vb)]"
  syntax:
    content: public string Source { get; set; }
    return:
      type: System.String
      description: "Restituisce o imposta un <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> espressione che specifica il nome dell&quot;applicazione che ha generato l&quot;errore o dell&quot;oggetto. Lettura/scrittura."
  overload: Microsoft.VisualBasic.ErrObject.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.VisualBasic.ErrObject.Clear
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Clear()
  nameWithType: ErrObject.Clear()
  fullName: Microsoft.VisualBasic.ErrObject.Clear()
- uid: Microsoft.VisualBasic.ErrObject.Description
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Description
  nameWithType: ErrObject.Description
  fullName: Microsoft.VisualBasic.ErrObject.Description
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.ErrObject.Erl
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Erl
  nameWithType: ErrObject.Erl
  fullName: Microsoft.VisualBasic.ErrObject.Erl
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.ErrObject.GetException
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: GetException()
  nameWithType: ErrObject.GetException()
  fullName: Microsoft.VisualBasic.ErrObject.GetException()
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.VisualBasic.ErrObject.HelpContext
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: HelpContext
  nameWithType: ErrObject.HelpContext
  fullName: Microsoft.VisualBasic.ErrObject.HelpContext
- uid: Microsoft.VisualBasic.ErrObject.HelpFile
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: HelpFile
  nameWithType: ErrObject.HelpFile
  fullName: Microsoft.VisualBasic.ErrObject.HelpFile
- uid: Microsoft.VisualBasic.ErrObject.LastDllError
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: LastDllError
  nameWithType: ErrObject.LastDllError
  fullName: Microsoft.VisualBasic.ErrObject.LastDllError
- uid: Microsoft.VisualBasic.ErrObject.Number
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Number
  nameWithType: ErrObject.Number
  fullName: Microsoft.VisualBasic.ErrObject.Number
- uid: Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Raise(Int32,Object,Object,Object,Object)
  nameWithType: ErrObject.Raise(Int32,Object,Object,Object,Object)
  fullName: Microsoft.VisualBasic.ErrObject.Raise(Int32,Object,Object,Object,Object)
- uid: Microsoft.VisualBasic.ErrObject.Source
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Source
  nameWithType: ErrObject.Source
  fullName: Microsoft.VisualBasic.ErrObject.Source
- uid: Microsoft.VisualBasic.ErrObject.Clear*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Clear
  nameWithType: ErrObject.Clear
- uid: Microsoft.VisualBasic.ErrObject.Description*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Description
  nameWithType: ErrObject.Description
- uid: Microsoft.VisualBasic.ErrObject.Erl*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Erl
  nameWithType: ErrObject.Erl
- uid: Microsoft.VisualBasic.ErrObject.GetException*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: GetException
  nameWithType: ErrObject.GetException
- uid: Microsoft.VisualBasic.ErrObject.HelpContext*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: HelpContext
  nameWithType: ErrObject.HelpContext
- uid: Microsoft.VisualBasic.ErrObject.HelpFile*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: HelpFile
  nameWithType: ErrObject.HelpFile
- uid: Microsoft.VisualBasic.ErrObject.LastDllError*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: LastDllError
  nameWithType: ErrObject.LastDllError
- uid: Microsoft.VisualBasic.ErrObject.Number*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Number
  nameWithType: ErrObject.Number
- uid: Microsoft.VisualBasic.ErrObject.Raise*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Raise
  nameWithType: ErrObject.Raise
- uid: Microsoft.VisualBasic.ErrObject.Source*
  parent: Microsoft.VisualBasic.ErrObject
  isExternal: false
  name: Source
  nameWithType: ErrObject.Source
