### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SqlDataSourceView
  id: SqlDataSourceView
  children:
  - System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  - System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  - System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  - System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  - System.Web.UI.WebControls.SqlDataSourceView.CanPage
  - System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.WebControls.SqlDataSourceView.CanSort
  - System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  - System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  - System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Deleted
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Deleting
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  - System.Web.UI.WebControls.SqlDataSourceView.Filtering
  - System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  - System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Inserted
  - System.Web.UI.WebControls.SqlDataSourceView.Inserting
  - System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  - System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  - System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  - System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  - System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  - System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  - System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Selected
  - System.Web.UI.WebControls.SqlDataSourceView.Selecting
  - System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  - System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  - System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Updated
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Updating
  langs:
  - csharp
  name: SqlDataSourceView
  nameWithType: SqlDataSourceView
  fullName: System.Web.UI.WebControls.SqlDataSourceView
  type: Class
  summary: "Supporta il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllare e fornisce un&quot;interfaccia per i controlli con associazione a dati per eseguire operazioni sui dati SQL su database relazionali."
  remarks: "La classe SqlDataSourceView è progettata principalmente per essere utilizzato dai controlli con associazione a dati e non come oggetto programmabile nel codice della pagina.       Controlli origine dati ASP.NET contengono uno o più elenchi di dati, rappresentati da oggetti vista origine dati. La classe SqlDataSourceView estende il <xref:System.Web.UI.DataSourceView>, definisce le funzionalità del <xref:System.Web.UI.WebControls.SqlDataSource>controllo con la quale è associato e implementa la funzionalità dati di base per il controllo origine dati.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.DataSourceView> La classe SqlDataSourceView implementa le funzionalità per il <xref:System.Web.UI.WebControls.SqlDataSource>controllare, tra cui la <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>, e <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>operazioni, ordinamento, filtro e la gestione delle impostazioni che vengono mantenute nella visualizzazione stato.</xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.SqlDataSource>       Anche se l&quot;oggetto SqlDataSourceView non è direttamente esposto agli sviluppatori di pagine per il <xref:System.Web.UI.WebControls.SqlDataSource>controllo, molte delle sue proprietà sono.</xref:System.Web.UI.WebControls.SqlDataSource> L&quot;operazione più semplice che esegue una vista origine dati è il recupero dei dati dal database sottostante utilizzando il <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>metodo che recupera un <xref:System.Collections.IEnumerable>raccolta di elementi di dati.</xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> La classe SqlDataSourceView implementa il recupero dei dati dai database relazionali tramite query SQL. Le query SQL possono essere parametrizzate per maggiore flessibilità e sicurezza. I metodi di recupero di dati seguenti, proprietà ed eventi implementati dal SqlDataSourceView ed esposti direttamente dal relativo <xref:System.Web.UI.WebControls.SqlDataSource>controllo agli sviluppatori di pagina e ad altri chiamanti:: il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>proprietà - il <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>proprietà - il <xref:System.Web.UI.WebControls.SqlDataSource.Selecting>evento - il <xref:System.Web.UI.WebControls.SqlDataSource.Selected>oggetto SqlDataSourceView l&quot;evento supporta l&quot;aggiornamento dei dati in un database relazionale utilizzando i comandi SQL.</xref:System.Web.UI.WebControls.SqlDataSource.Selected> </xref:System.Web.UI.WebControls.SqlDataSource.Selecting> </xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> I comandi SQL possono essere parametri per una maggiore flessibilità e sicurezza. Controlli con associazione a dati, ad esempio il <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, può essere configurato per eseguire automaticamente gli aggiornamenti mediante SqlDataSourceView, a differenza di altri controlli.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> I metodi di aggiornamento seguenti, proprietà ed eventi implementati dal SqlDataSourceView ed esposti direttamente dal relativo <xref:System.Web.UI.WebControls.SqlDataSource>controllo agli sviluppatori di pagina e ad altri chiamanti:: il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>proprietà - il <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>proprietà - il <xref:System.Web.UI.WebControls.SqlDataSource.Updating>evento - il <xref:System.Web.UI.WebControls.SqlDataSource.Updated>SqlDataSourceView l&quot;evento supporta l&quot;inserimento di nuove righe di dati in un database relazionale.</xref:System.Web.UI.WebControls.SqlDataSource.Updated> </xref:System.Web.UI.WebControls.SqlDataSource.Updating> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> I comandi SQL specificati nella <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>proprietà può essere parametrizzata per maggiore flessibilità e sicurezza.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> Controlli con associazione a dati, ad esempio il <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, può essere configurato per l&quot;esecuzione degli inserimenti tramite automaticamente SqlDataSourceView, a differenza di altri controlli.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Inserimento riportati di seguito metodi, proprietà e gli eventi vengono implementati dal SqlDataSourceView ed esposti direttamente dal relativo <xref:System.Web.UI.WebControls.SqlDataSource>controllo agli sviluppatori di pagina e ad altri chiamanti:: il <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>proprietà - il <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>proprietà - il <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>evento - il <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>evento SqlDataSourceView l&quot;oggetto anche supporta l&quot;eliminazione dei dati da un database relazionale.</xref:System.Web.UI.WebControls.SqlDataSource.Inserted> </xref:System.Web.UI.WebControls.SqlDataSource.Inserting> </xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> Come con altri comandi, comandi che vengono specificate in SQL la <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>proprietà può essere parametrizzata per maggiore flessibilità e sicurezza.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> Controlli con associazione a dati, ad esempio il <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, può essere configurato per eseguire eliminazioni automaticamente utilizzando SqlDataSourceView, a differenza di altri controlli.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Eliminazione riportati di seguito metodi, proprietà e gli eventi vengono implementati dal SqlDataSourceView ed esposti direttamente dal relativo <xref:System.Web.UI.WebControls.SqlDataSource>controllo agli sviluppatori di pagina e ad altri chiamanti:: il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>- proprietà il <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>- proprietà il <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>evento - il <xref:System.Web.UI.WebControls.SqlDataSource.Deleted>il recupero dei dati di evento è più potente, quando la clausola che viene utilizzata per filtrare i dati durante il recupero dei dati è dinamica.</xref:System.Web.UI.WebControls.SqlDataSource.Deleted> </xref:System.Web.UI.WebControls.SqlDataSource.Deleting> </xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource> In altre parole, una query SQL con un valore statico dove clausola non è così flessibile e potente di una query SQL in cui i valori nella clausola WHERE vengono associati ai valori che possono essere modificati, ad esempio i valori vengono visualizzati nei controlli in una pagina Web Form. Invece di ricompilare un SQL query e l&quot;impostazione di <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>proprietà ogni caricamento della pagina, è possibile utilizzare il <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>e <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>le proprietà per applicare i filtri dinamici per il recupero dei dati.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Queste proprietà vengono implementate dal SqlDataSourceView ed esposti direttamente dal relativo <xref:System.Web.UI.WebControls.SqlDataSource>controllo per i controlli associati a dati e ad altri chiamanti.</xref:System.Web.UI.WebControls.SqlDataSource>       È possibile ordinare i dati recuperati con il <xref:System.Web.UI.WebControls.SqlDataSource>controllo aggiungendo una clausola ORDER BY, provocando il database per eseguire l&quot;ordinamento per l&quot;utente quando si recuperano dati oppure ordinando i dati in memoria dopo averli recuperati.</xref:System.Web.UI.WebControls.SqlDataSource> È possibile fornire un&quot;espressione di ordinamento per il SqlDataSourceView impostando il <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>proprietà del <xref:System.Web.UI.DataSourceSelectArguments>oggetto passato per il <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>(metodo).</xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> La sintassi per la <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>proprietà corrisponde alla sintassi per un <xref:System.Data.DataView.Sort%2A?displayProperty=fullName>proprietà.</xref:System.Data.DataView.Sort%2A?displayProperty=fullName> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> Se si utilizza una stored procedure per recuperare i dati, è inoltre possibile utilizzare il <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>proprietà per specificare un parametro che viene utilizzato specificamente per l&quot;ordinamento dei risultati di una chiamata alla stored procedure.</xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>       Quando più di un utente può modificare il database contemporaneamente, è la possibilità di conflitto di concorrenza. Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo dispone di controlli di concorrenza tramite la <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=fullName>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource> La funzionalità è implementata nel <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=fullName>proprietà.</xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=fullName>       Come molti altri controlli server Web, implementa la SqlDataSourceView il <xref:System.Web.UI.IStateManager>interfaccia e utilizza lo stato per tenere traccia di stato nelle richieste di pagine di visualizzazione.</xref:System.Web.UI.IStateManager> Le implementazioni del <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A>e proprietà e <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>, e <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A>vengono forniti metodi per abilitare la traccia dello stato di visualizzazione per il controllo.</xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A> Per ulteriori informazioni, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  implements:
  - System.Web.UI.IStateManager
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  id: '#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)'
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SqlDataSourceView(SqlDataSource,String,HttpContext)
  nameWithType: SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> classe impostando specificato <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo come il proprietario della vista corrente."
  remarks: "Viene chiamato il costruttore SqlDataSourceView dal <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>per restituire una nuova istanza di una vista origine dati con l&quot;oggetto specificato `name` parametro.</xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo è associato a un solo <xref:System.Web.UI.WebControls.SqlDataSourceView>la visualizzazione di nomi degli oggetti in qualsiasi momento e sempre `Table`, nonostante questa limitazione di denominazione venga imposta dal <xref:System.Web.UI.WebControls.SqlDataSource>controllo, non il <xref:System.Web.UI.WebControls.SqlDataSourceView>.</xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSource> È possibile eseguire l&quot;override di <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>metodo per supportare visualizzazioni con una convenzione di denominazione diversa.</xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>       Il <xref:System.Web.HttpContext>oggetto che viene passato per il `context` parametro viene utilizzato dalla vista origine dati per accedere agli oggetti parametro, ad esempio il <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>e <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> </xref:System.Web.HttpContext>"
  syntax:
    content: public SqlDataSourceView (System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.SqlDataSource
      description: "Il controllo origine dati con cui il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> associata."
    - id: name
      type: System.String
      description: "Un nome univoco per la vista origine dati, all&quot;interno dell&quot;ambito del controllo origine dati che ne è proprietario."
    - id: context
      type: System.Web.HttpContext
      description: "Corrente <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  id: CancelSelectOnNullParameter
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se un&quot;operazione di recupero di dati è stata annullata quando dei parametri che è contenuto nel <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*>restituisce raccolta <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*>"
  remarks: "Il valore di <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>proprietà viene archiviata nello stato di visualizzazione.</xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>"
  syntax:
    content: public bool CancelSelectOnNullParameter { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se un&quot;operazione di recupero di dati viene annullata se un parametro contenuto nel <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*>valutati insieme a <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*> Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> oggetto associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo supporta l&quot;operazione di eliminazione."
  remarks: "La proprietà restituisce CanDelete `true` se il <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>proprietà è impostata.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> Un&quot;operazione di eliminazione potrebbe comunque non riuscire se tutte le proprietà di dati non vengono impostate o non sono impostate correttamente."
  syntax:
    content: public override bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se l&quot;operazione è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> oggetto associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo supporta l&quot;operazione di inserimento."
  remarks: "La proprietà restituisce CanInsert `true` se il <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>proprietà è impostata.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> Un&quot;operazione di inserimento potrebbe comunque non riuscire se tutte le proprietà di dati non vengono impostate o non sono impostate correttamente."
  syntax:
    content: public override bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se l&quot;operazione è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> oggetto associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo supporta il paging dei dati recuperati."
  remarks: "Il <xref:System.Web.UI.WebControls.SqlDataSourceView>l&quot;oggetto non supporta il paging.</xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: public override bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>in tutti i casi."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> oggetto associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo supporta il recupero del numero totale di righe di dati, oltre al set di dati."
  remarks: "Il <xref:System.Web.UI.WebControls.SqlDataSourceView>l&quot;oggetto non supporta il recupero del numero di riga.</xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: public override bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>in tutti i casi."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> oggetto associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo supporta una visualizzazione ordinata dei dati recuperati."
  remarks: "La proprietà restituisce CanSort `true`, se corrente <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>proprietà è impostata sul <xref:System.Web.UI.WebControls.SqlDataSourceMode>valore e <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>proprietà è impostata.</xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>"
  syntax:
    content: public override bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se è supportato l&quot;ordinamento. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> oggetto associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo supporta l&quot;operazione di aggiornamento."
  remarks: "La proprietà restituisce CanUpdate `true` se il <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>proprietà è impostata.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> Un&quot;operazione di eliminazione potrebbe comunque non riuscire se tutte le proprietà di dati non vengono impostate o non sono impostate correttamente."
  syntax:
    content: public override bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se l&quot;operazione è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  id: ConflictDetection
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il valore che indica come il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo esegue aggiornamenti ed eliminazioni quando i dati in una riga sottostante del database le modifiche apportate durante la fase dell&quot;operazione."
  remarks: "La proprietà ConflictDetection determina se i parametri per i valori vecchi e nuovi vengono applicati per la `Update` metodo. Ad esempio, se il comando specificato dal <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>proprietà restituisce un <xref:System.Data.DataSet>oggetto con le colonne `Name` e `Number`, e la proprietà ConflictDetection è impostata sul <xref:System.Web.UI.ConflictOptions>valore, i parametri vengono creati per `Name` e `Number` per l&quot;operazione di aggiornamento.</xref:System.Web.UI.ConflictOptions> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Se è impostata la proprietà ConflictDetection il <xref:System.Web.UI.ConflictOptions>valore, i parametri vengono creati per `Name`, `Number`, `original_Name`, e `original_Number`.</xref:System.Web.UI.ConflictOptions> (Il nome esatto dei parametri per i valori originali dipende il <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>.)</xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> Quindi, <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto determina se il metodo specificato nella <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>proprietà presenta parametri corrispondenti.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView>       Controllo della concorrenza è una tecnica utilizzata per controllare la modalità di lettura e modifica nell&quot;archivio quando più client accedono e modificano gli stessi dati dati dagli archivi dati. Ad esempio, un client legge i dati e visualizza all&quot;utente, mentre un altro client legge gli stessi dati e presenta a un altro utente. Se entrambi gli utenti di aggiornano i dati e inviano per l&quot;archiviazione dei dati, potrebbero verificarsi risultati imprevisti, poiché entrambi i client potrebbero fornire valori diversi per gli stessi dati. Questa viene considerata un conflitto. Impostando la proprietà ConflictDetection sul <xref:System.Web.UI.ConflictOptions>valore, l&quot;operazione di aggiornamento può confrontare i valori vecchi e nuovi per l&quot;origine dei dati per rilevare i conflitti e gestirli come richiesto.</xref:System.Web.UI.ConflictOptions>       Il valore della ConflictDetection proprietà è archiviato nella vista stato."
  syntax:
    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }
    return:
      type: System.Web.UI.ConflictOptions
      description: "Uno del <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valori. Il valore predefinito è il <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valore."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore selezionato non è uno del <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valori."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Delete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Esegue un&quot;operazione di eliminazione utilizzando la <> </> *> stringa SQL, tutti i parametri vengono specificati nel <> </> *> raccolta e i valori siano <code> keys </code> e <code> oldValues </code> raccolte."
  remarks: "Le chiamate al metodo elimina il <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>, passando il `keys` e `oldValues` parametri.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>"
  syntax:
    content: public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>oggetto o una riga dei valori di chiave per la <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*>operazione di eliminazione.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*> </xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>che contiene i valori di riga vengono valutati solo se il <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*>è impostata sul <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valore.</xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> </xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "Un valore che rappresenta il numero di righe eliminate dal database sottostante."
  overload: System.Web.UI.WebControls.SqlDataSourceView.Delete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*>proprietà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  id: DeleteCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta la stringa SQL che il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> utilizzato per eliminare dati dal database sottostante."
  remarks: "Poiché i prodotti del database utilizzano tipi diversi di SQL, la sintassi della stringa SQL dipende dal provider ADO.NET attualmente in uso, è identificato dal <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>       Se la stringa SQL è una query con parametri o un comando, anche il segnaposto del parametro dipenderà dal provider ADO.NET in uso. Ad esempio, se il provider è il <xref:System.Data.SqlClient?displayProperty=fullName>, ovvero il provider predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource>(classe), il segnaposto del parametro è `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Tuttavia, se il provider sia impostato il <xref:System.Data.Odbc?displayProperty=fullName>o <xref:System.Data.OleDb?displayProperty=fullName>, il segnaposto del parametro è `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Per ulteriori informazioni su comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md).       DeleteCommand può essere una stringa SQL o il nome di una stored procedure, se il database sottostante supporta le stored procedure.       Il valore di DeleteCommand proprietà è archiviato nella vista stato."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database Orders table. Data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> renders a **Delete** button automatically when the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true` and automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when the **Delete** button is clicked. Finally, because this example deletes data, an event handler is added to attempt to back up the database to disk before the delete operation is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_947_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_947_1.aspx)]"
  syntax:
    content: public string DeleteCommand { get; set; }
    return:
      type: System.String
      description: "Stringa SQL il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> viene utilizzato per eliminare i dati."
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  id: DeleteCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se il testo di <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>proprietà è un&quot;istruzione SQL o il nome di una stored procedure.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>"
  remarks: "Il valore della DeleteCommandType proprietà è archiviato nella vista stato."
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Uno del <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valori. Il valore predefinito è il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valore."
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore selezionato non è uno del <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valori."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Deleted
  nameWithType: SqlDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica quando un&quot;operazione di eliminazione è stata completata."
  remarks: "Gestire l&quot;evento Deleted per esaminare i valori dei parametri di output dopo un&quot;operazione di eliminazione è stata completata. I parametri di output sono disponibili le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>oggetto associato all&quot;evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene la raccolta di parametri che contiene i parametri usati dal <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>proprietà.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>"
  remarks: "Se il <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>proprietà contiene una query SQL con parametri, la raccolta DeleteParameters contiene qualsiasi <xref:System.Web.UI.WebControls.Parameter>oggetti che corrispondono ai segnaposti del parametro nella stringa SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>       I nomi dei parametri possono essere influenzati dal <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>proprietà; in particolare, se il nome identifica una chiave primaria, ad esempio una chiave specificata utilizzando il `DataKeyNames` proprietà di un controllo con associazione a dati o di eliminare e aggiornare gli scenari in cui il <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>è impostata sul <xref:System.Web.UI.ConflictOptions>valore e un set di `oldValues` viene passato al metodo di dati corrispondente.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> In questo caso, la stringa di formato viene applicata a ogni nome di parametro nel `oldValues` insieme.       A seconda del provider ADO.NET, l&quot;ordine dei parametri nella raccolta DeleteParameters potrebbe essere importante. Il <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>associano i parametri nella raccolta in base all&quot;ordine in cui compaiono nella query SQL con parametri.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> Il <xref:System.Data.SqlClient?displayProperty=fullName>provider, ovvero il provider ADO.NET predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource>di controllo, associa i parametri nella raccolta abbinando il nome del parametro e un segnaposto nella query SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Per ulteriori informazioni su comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database. Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control. You must explicitly declare the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property and call the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when using data-bound controls, such as the <xref:System.Web.UI.WebControls.DropDownList> (unlike controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method on a data source control). In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> event handler, which explicitly calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1005_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1005_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> che contiene i parametri utilizzati per la <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>proprietà.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Deleting
  nameWithType: SqlDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica prima di un&quot;operazione di eliminazione."
  remarks: "Gestire l&quot;evento di eliminazione per eseguire operazioni di inizializzazione aggiuntive che sono specifiche dell&quot;applicazione, per convalidare i valori dei parametri, o per modificare il parametro dei valori prima di <xref:System.Web.UI.WebControls.SqlDataSource>controllo esegue l&quot;operazione di eliminazione.</xref:System.Web.UI.WebControls.SqlDataSource>       La connessione all&quot;origine dati sottostante non è ancora aperta quando viene chiamato il delegato del gestore eventi. Pertanto, è possibile annullare il <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>operazione chiamando direttamente il <xref:System.Data.Common.DbCommand.Cancel%2A>metodo il <xref:System.Data.Common.DbCommand>oggetto esposto dal <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>oggetto.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> È possibile, tuttavia, annullare l&quot;operazione impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>a `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event that is raised before a delete operation occurs. Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the delete operation is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_97_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_97_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Esegue un&quot;operazione di eliminazione utilizzando la <> </> *> stringa SQL, tutti i parametri vengono specificati nel <> </> *> raccolta e i valori siano <code> keys </code> e <code> oldValues </code> raccolte."
  remarks: "Il <xref:System.Web.UI.WebControls.SqlDataSourceView>implementa ereditato <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>metodo per eliminare i dati da un database.</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView> Gli autori di controllo con associazione a dati e gli sviluppatori di pagine non chiamano il metodo ExecuteDelete direttamente. Utilizzare invece esposti pubblicamente <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>metodo.</xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>       I valori contenuti nel `keys` raccolta vengono valutate e uniti ai valori che sono contenuti il <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>insieme.</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> Se il <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>è impostata sul <xref:System.Web.UI.ConflictOptions>valore, i valori contenuti nel `oldValues` raccolta formattati con il <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>proprietà e vengono unite anche.</xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>       Prima di eseguita l&quot;operazione di eliminazione, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting>evento.</xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> È possibile gestire questo evento per esaminare i valori dei parametri ed eseguire eventuali pre-elaborazione prima di un&quot;operazione di eliminazione.       Per eseguire un&quot;operazione di eliminazione, il <xref:System.Web.UI.WebControls.SqlDataSourceView>Compila un <xref:System.Data.Common.DbCommand>utilizzando il <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>testo e i relativi <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>proprietà, quindi viene eseguita la <xref:System.Data.Common.DbCommand>oggetto nel database sottostante.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> Al termine dell&quot;operazione di eliminazione, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted>evento.</xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> È possibile gestire questo evento per esaminare i valori restituiti e i codici di errore ed eseguire la post-elaborazione."
  syntax:
    content: protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>oggetto o una riga dei valori di chiave per l&quot;operazione ExecuteDelete da eliminare.</xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>che contiene i valori di riga vengono valutati solo se il <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*>è impostata sul <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valore.</xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> </xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "Un valore che rappresenta il numero di righe eliminate dal database sottostante."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current user does not have the correct permissions to access to the database.  \n  \n \\- or -  \n  \n The instance of the control is an <xref href=\"System.Web.UI.WebControls.AccessDataSource\"></xref> control and access is denied to the path specified for the <xref:System.Web.UI.WebControls.AccessDataSource.DataFile*> property."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n A design-time relative path was not mapped correctly by the designer before using an instance of the <xref href=\"System.Web.UI.WebControls.AccessDataSource\"></xref> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: SqlDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Esegue un&quot;operazione insert usando il <> </> *> stringa SQL, tutti i parametri vengono specificati nel <> </> *> raccolta e i valori siano <code> values </code> insieme."
  remarks: "Il <xref:System.Web.UI.WebControls.SqlDataSourceView>implementa ereditato <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>metodo per inserire dati in un database.</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView> Gli autori di controllo con associazione a dati e gli sviluppatori di pagine non chiamano il metodo ExecuteInsert direttamente. Utilizzare invece esposti pubblicamente <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>metodo.</xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>       Prima di eseguita l&quot;operazione di inserimento, la <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting>evento.</xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> È possibile gestire questo evento per esaminare i valori dei parametri ed eseguire eventuali pre-elaborazione prima di un&quot;istruzione insert.       Per eseguire un&quot;operazione di inserimento, il <xref:System.Web.UI.WebControls.SqlDataSourceView>Compila un <xref:System.Data.Common.DbCommand>utilizzando il <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>testo e i relativi <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>proprietà, quindi viene eseguita la <xref:System.Data.Common.DbCommand>oggetto nel database sottostante.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> Al termine, l&quot;inserimento di <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted>evento.</xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> È possibile gestire questo evento per esaminare i valori restituiti e i codici di errore ed eseguire la post-elaborazione."
  syntax:
    content: protected override int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>di valori utilizzati con il <> </> *> proprietà per eseguire l&quot;operazione di inserimento del database.</xref:System.Collections.IDictionary> Se esistono parametri associati alla query o se il <> </> *> proprietà non è una query SQL con parametri, passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Un valore che rappresenta il numero di righe inserite nel database sottostante."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> non è possibile stabilire una connessione con l&quot;origine dati sottostante."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "L&quot;utente corrente non dispone delle autorizzazioni corrette per accedere al database."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>proprietà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Recupera i dati dal database sottostante utilizzando il <> </> *> stringa SQL e i parametri che sono nel <> </> *> insieme."
  remarks: "La <xref:System.Web.UI.WebControls.SqlDataSourceView>classe implementa il metodo ExecuteSelect ereditato per recuperare dati da un database.</xref:System.Web.UI.WebControls.SqlDataSourceView> Gli autori di controllo con associazione a dati e gli sviluppatori di pagine non chiamano il metodo ExecuteSelect direttamente. Utilizzare invece esposti pubblicamente <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>metodo.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>       Prima di eseguita il recupero di dati, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting>evento.</xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> È possibile gestire questo evento per esaminare i valori dei parametri ed eseguire eventuali pre-elaborazione prima del recupero dati.       Per eseguire l&quot;operazione, il <xref:System.Web.UI.WebControls.SqlDataSourceView>Compila un <xref:System.Data.Common.DbCommand>utilizzando il <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>testo e i relativi <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>, che viene eseguito nel database sottostante.</xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> Al termine dell&quot;operazione, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSource.Selected>evento.</xref:System.Web.UI.WebControls.SqlDataSource.Selected> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> È possibile gestire questo evento per esaminare i valori restituiti, i codici di errore ed eseguire la post-elaborazione.       Il metodo ExecuteSelect restituisce un <xref:System.Data.DataView>oggetto se di <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>è impostato su <xref:System.Web.UI.WebControls.SqlDataSourceMode>, o un <xref:System.Data.IDataReader>oggetto se <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>è impostata su <xref:System.Web.UI.WebControls.SqlDataSourceMode>.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.IDataReader> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.DataView> Chiudi il <xref:System.Data.IDataReader>al termine della lettura dei dati dell&quot;oggetto.</xref:System.Data.IDataReader>       Se il <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>è impostato su <xref:System.Web.UI.WebControls.SqlDataSourceMode>e la memorizzazione nella cache è abilitata, il <xref:System.Web.UI.WebControls.SqlDataSourceView>Recupera i dati e Salva i dati nella cache durante l&quot;operazione.</xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> La cache viene creata, annullata o aggiornata in base al comportamento di memorizzazione nella cache specificato dalla combinazione del <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>e <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>      > [!IMPORTANT] > Quando si utilizza la rappresentazione del client con l&quot;autenticazione di Windows, i dati viene memorizzato nella cache quando il primo utente accede ai dati. Se un altro utente richiede gli stessi dati, i dati vengono recuperati dalla cache. I dati non vengono recuperati eseguendo un&quot;altra chiamata al database per verificare l&quot;accesso dell&quot;utente ai dati. Se si prevede che più utenti per accedere ai dati e si desidera che ogni recupero di dati da verificare con configurazioni di protezione del database, non utilizzare la memorizzazione nella cache.       Se il <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>è impostato su <xref:System.Web.UI.WebControls.SqlDataSourceMode>e <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>è stata specificata, viene valutato insieme a eventuali fornito <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>e il filtro risultante viene applicato all&quot;elenco di dati durante l&quot;operazione di recupero di dati.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>"
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "Oggetto <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> oggetto usato per richiedere operazioni sui dati oltre il recupero dei dati di base."
    return:
      type: System.Collections.IEnumerable
      description: "Un <xref:System.Collections.IEnumerable>elenco di righe di dati.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <code>arguments</code> passed to the ExecuteSelect method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.  \n  \n \\- or -  \n  \n Caching is enabled but the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode*> property of the data source is not set to <xref href=\"System.Web.UI.WebControls.SqlDataSourceMode\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*> property is set but <xref:System.Data.SqlClient.SqlCommand.CommandType*> is not set to <xref href=\"System.Data.CommandType\"></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The data source cannot create a database connection.  \n  \n \\- or -  \n  \n Caching is enabled but the internal cache and command types do not match."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Esegue un&quot;operazione di aggiornamento usando il <> </> *> stringa SQL, i parametri in di <> </> *> raccolta e i valori siano <code> keys </code>, <code> values </code>, e <code> oldValues </code> raccolte."
  remarks: "La <xref:System.Web.UI.WebControls.SqlDataSourceView>classe implementa il metodo ExecuteUpdate ereditato per aggiornare i dati in un database.</xref:System.Web.UI.WebControls.SqlDataSourceView> Gli autori di controllo con associazione a dati e gli sviluppatori di pagine non chiamano il metodo ExecuteUpdate direttamente. Utilizzare invece esposti pubblicamente <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>metodo.</xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>       I valori contenuti nel `keys` e `values` raccolte vengono valutate e unite ai valori contenuti di <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>insieme.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> Se il <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>è impostata su <xref:System.Web.UI.ConflictOptions>, i valori contenuti nel `oldValues` raccolta formattati con il <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>nonché uniti.</xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>       Prima di eseguita l&quot;operazione di aggiornamento, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating>evento.</xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> È possibile gestire questo evento per esaminare i valori dei parametri ed eseguire eventuali pre-elaborazione prima dell&quot;aggiornamento.       Per eseguire l&quot;operazione, il <xref:System.Web.UI.WebControls.SqlDataSourceView>Compila un <xref:System.Data.Common.DbCommand>utilizzando il <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>testo e i relativi <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>proprietà, quindi viene eseguita la <xref:System.Data.Common.DbCommand>oggetto nel database sottostante.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView> Al termine dell&quot;operazione, il <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A>metodo viene chiamato per generare il <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated>evento.</xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> È possibile gestire questo evento per esaminare i valori restituiti e i codici di errore ed eseguire la post-elaborazione."
  syntax:
    content: protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>di chiavi primarie da utilizzare con il <> </> *> proprietà per eseguire l&quot;operazione di aggiornamento del database.</xref:System.Collections.IDictionary> Se non sono presenti chiavi associate alla query o se il <> </> *> proprietà non è una query SQL con parametri, passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: values
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>di valori da utilizzare con il <> </> *> proprietà per eseguire l&quot;operazione di aggiornamento del database.</xref:System.Collections.IDictionary> Se esistono parametri associati alla query o se il <> </> *> non è un database SQL con parametri di query, passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>che rappresenta i valori originali nel database.</xref:System.Collections.IDictionary> Se esistono parametri associati alla query o se il <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>proprietà non è una query SQL con parametri, passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
    return:
      type: System.Int32
      description: "Un valore che rappresenta il numero di righe aggiornate nel database sottostante."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "L&quot;utente corrente non dispone delle autorizzazioni corrette per accedere al database."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>proprietà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  id: FilterExpression
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un&quot;espressione di filtro che viene applicato quando il <xref:System.Web.UI.WebControls.SqlDataSourceView.Select*>metodo viene chiamato.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select*>"
  remarks: "La sintassi utilizzata per la proprietà FilterExpression è una sintassi di tipo stringa di formato. È possibile includere parametri nella proprietà FilterExpression. Se il tipo del parametro di stringa o carattere, racchiudere il parametro tra virgolette singole. Virgolette non sono necessari, se il parametro è un tipo numerico.       Il <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>insieme contiene i parametri vengono valutati per i segnaposto che si trovano nella <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>       Il <xref:System.Web.UI.WebControls.SqlDataSource>controllo supporta il filtraggio dei dati solo quando in `DataSet` modalità.</xref:System.Web.UI.WebControls.SqlDataSource>       Il valore della FilterExpression proprietà è archiviato nella vista stato.      > [!IMPORTANT] > È necessario convalidare qualsiasi valore di parametro di filtro che riceve dal client. Il runtime semplicemente sostituisce il valore del parametro nell&quot;espressione di filtro e si applica al <xref:System.Data.DataView>oggetto restituito dal <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metodo.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Se si utilizza il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>proprietà come misura di sicurezza per limitare il numero di elementi che vengono restituiti, è necessario convalidare i valori dei parametri prima dell&quot;esecuzione del filtraggio.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties. The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. In this example, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1180_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1180_1.aspx)]"
  syntax:
    content: public string FilterExpression { get; set; }
    return:
      type: System.String
      description: "Stringa che rappresenta un&quot;espressione di filtro applicata quando vengono recuperati utilizzando il <xref:System.Web.UI.WebControls.SqlDataSource.Select*>metodo.</xref:System.Web.UI.WebControls.SqlDataSource.Select*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "È stata impostata la proprietà FilterExpression quando il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> è il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceMode&quot;> </xref> modalità."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  id: Filtering
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Filtering
  nameWithType: SqlDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica prima che un&quot;operazione di filtro."
  remarks: "Gestire l&quot;evento di filtro per eseguire le operazioni di convalida sui valori dei parametri di filtro prima di <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto esegue un&quot;operazione di filtro.</xref:System.Web.UI.WebControls.SqlDataSourceView> È possibile annullare il <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>metodo impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs>oggetto `true`.</xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> L&quot;evento viene generato solo se il <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>proprietà è impostata.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>      > [!IMPORTANT] > È necessario convalidare qualsiasi valore di parametro di filtro che riceve dal client. Il runtime semplicemente sostituisce il valore del parametro nell&quot;espressione di filtro e si applica al <xref:System.Data.DataView>oggetto restituito dal <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metodo.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Se si utilizza il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>proprietà come misura di sicurezza per limitare il numero di elementi che vengono restituiti, è necessario convalidare i valori dei parametri prima dell&quot;esecuzione del filtraggio.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  id: FilterParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene una raccolta di parametri associati a tutti i segnaposto nel parametro di <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>stringa.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>"
  remarks: "I parametri nella raccolta FilterParameters sono associati ai parametri specificati nella <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> I segnaposto di parametri che vengono specificati nel <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>vengono valutate dall&quot;ordine e associati agli oggetti parametro nella raccolta FilterParameters quando il <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>metodo viene chiamato.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>      > [!IMPORTANT] > È necessario convalidare qualsiasi valore di parametro di filtro che riceve dal client. Il runtime semplicemente sostituisce il valore del parametro nell&quot;espressione di filtro e si applica al <xref:System.Data.DataView>oggetto restituito dal <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>metodo.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Se si utilizza il <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>proprietà come misura di sicurezza per limitare il numero di elementi che vengono restituiti, è necessario convalidare i valori dei parametri prima dell&quot;esecuzione del filtraggio.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties. The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_165_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_165_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> che contiene un set di parametri associati ai segnaposto di parametro, vedere il <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>proprietà.</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  id: Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Insert(IDictionary)
  nameWithType: SqlDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Insert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Esegue un&quot;operazione insert usando il <> </> *> stringa SQL, tutti i parametri vengono specificati nel <> </> *> raccolta e i valori siano <code> values </code> insieme."
  remarks: "Le chiamate del metodo Insert di <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>, passando il `values` parametro.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>"
  syntax:
    content: public int Insert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>dei parametri per il <> </> *> proprietà da utilizzare per eseguire l&quot;operazione di inserimento del database.</xref:System.Collections.IDictionary> Se esistono parametri associati alla query o se il <> </> *> non è un database SQL con parametri di query, passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "Un valore che rappresenta il numero di righe inserite nel database sottostante."
  overload: System.Web.UI.WebControls.SqlDataSourceView.Insert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> non è possibile stabilire una connessione con l&quot;origine dati sottostante."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>proprietà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  id: InsertCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta la stringa SQL che il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> oggetto utilizzato per inserire dati nel database sottostante."
  remarks: "Poiché i prodotti del database utilizzano tipi diversi di SQL, la sintassi della stringa SQL dipende dal provider ADO.NET attualmente in uso, è identificato dal <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se la stringa SQL è una query con parametri o un comando, anche il segnaposto del parametro dipenderà dal provider ADO.NET in uso. Ad esempio, se il provider è il <xref:System.Data.SqlClient?displayProperty=fullName>, ovvero il provider predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource>(classe), il segnaposto del parametro è `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Tuttavia, se il provider sia impostato il <xref:System.Data.Odbc?displayProperty=fullName>o <xref:System.Data.OleDb?displayProperty=fullName>, il segnaposto del parametro è `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Per ulteriori informazioni su comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md).       La proprietà InsertCommand può essere una stringa SQL o il nome di una stored procedure, se l&quot;origine dati supporta le stored procedure.       Il valore di InsertCommand proprietà è archiviato nella vista stato."
  example:
  - "This section contains two code examples. The first code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control. The second code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control. The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1299_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1299_1.aspx)]  \n  \n The following code example demonstrates how to retrieve data from SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1299_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1299_2.aspx)]"
  syntax:
    content: public string InsertCommand { get; set; }
    return:
      type: System.String
      description: "Stringa SQL il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> viene utilizzato per inserire dati."
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  id: InsertCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se il testo di <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>proprietà è un&quot;istruzione SQL o il nome di una stored procedure.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>"
  remarks: "Il valore della InsertCommandType proprietà è archiviato nella vista stato."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The <xref:System.Web.UI.WebControls.GridView> control displays a set of data and the <xref:System.Web.UI.WebControls.DetailsView> control displays the details for a particular row. If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. The stored procedure name is set in the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property and is identified as a stored procedure by setting the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_733_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_733_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Uno del <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valori. Il valore è il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valore."
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore selezionato non è uno del <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valori."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Inserted
  nameWithType: SqlDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica quando viene completata un&quot;operazione di inserimento."
  remarks: "Gestire l&quot;evento Inserted per esaminare i valori dei parametri di output dopo un&quot;operazione di inserimento è stata completata. I parametri di output sono disponibili le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>oggetto associato all&quot;evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control. The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView>. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface that is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_39_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_39_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Inserting
  nameWithType: SqlDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica prima che un&quot;operazione di inserimento."
  remarks: "Gestire l&quot;evento di inserimento per eseguire operazioni di inizializzazione aggiuntive che sono specifiche dell&quot;applicazione, per convalidare i valori dei parametri, o per modificare il parametro dei valori prima di <xref:System.Web.UI.WebControls.SqlDataSource>controllo esegue l&quot;operazione di inserimento.</xref:System.Web.UI.WebControls.SqlDataSource>       La connessione all&quot;origine dati sottostante non è ancora aperta quando viene chiamato il delegato del gestore eventi. Pertanto, è possibile annullare l&quot;operazione di database chiamando direttamente il <xref:System.Data.Common.DbCommand.Cancel%2A>metodo sul <xref:System.Data.Common.DbCommand>oggetto esposto dal <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>oggetto.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> È possibile, tuttavia, annullare l&quot;operazione di database impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>per `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control. The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object, and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_104_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_104_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene la raccolta di parametri che contiene i parametri usati dal <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>proprietà.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>"
  remarks: "Se il <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>proprietà contiene una query SQL con parametri, la raccolta InsertParameters contiene qualsiasi <xref:System.Web.UI.WebControls.Parameter>oggetti che corrispondono ai segnaposti del parametro nella stringa SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>       A seconda del provider ADO.NET, l&quot;ordine dei parametri nella raccolta InsertParameters potrebbe essere importante. Il <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>associano i parametri nella raccolta in base all&quot;ordine in cui i parametri vengono visualizzati nella query SQL con parametri.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> Il <xref:System.Data.SqlClient?displayProperty=fullName>provider, ovvero il provider ADO.NET predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource>di controllo, associa i parametri nella raccolta abbinando il nome del parametro con un alias di segnaposto nella query SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Per ulteriori informazioni su comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page. The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_530_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_530_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> che contiene i parametri utilizzati per la <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>proprietà.</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> oggetto Salva le modifiche apportate allo stato di visualizzazione."
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se la vista origine dati è contrassegnata per il salvataggio dello stato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: SqlDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ripristina lo stato di visualizzazione precedentemente salvato per la vista origine dati."
  remarks: "Questo metodo viene utilizzato principalmente per la [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] dell&quot;infrastruttura e non deve essere utilizzato direttamente dal codice.  Tuttavia, gli sviluppatori di controlli possono eseguire l&quot;override questo metodo per specificare come un controllo server personalizzato ripristina lo stato di visualizzazione. Per ulteriori informazioni, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](~/add/includes/ajax-current-ext-md.md).       Il metodo LoadViewState Ripristina le informazioni sullo stato di visualizzazione per il <xref:System.Web.UI.WebControls.SqlDataSourceView>oggetto da una richiesta di pagina precedente salvata dal <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>metodo.</xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Oggetto che rappresenta il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> ripristinare lo stato."
  overload: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  id: OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta una stringa di formato da applicare ai nomi di tutti i parametri vengono passati al <> </> *> o <> </> *> metodo."
  remarks: "La stringa di formato OldValuesParameterFormatString viene applicata alle chiavi primarie solo, ad esempio quelle che sono identificati dal `DataKeyNames` proprietà del controllo con associazione a dati o eliminare e aggiornare gli scenari in cui il <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>è impostata sul <xref:System.Web.UI.ConflictOptions>valore e un set di `oldValues` viene passato al metodo di dati corrispondente.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> In questo caso, la stringa di formato viene applicata a ogni nome di parametro nel `oldValues` insieme. Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=fullName>.</xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=fullName>       Il valore della proprietà è OldValuesParameterFormatString archiviati nella visualizzazione stato."
  syntax:
    content: public string OldValuesParameterFormatString { get; set; }
    return:
      type: System.String
      description: "Stringa che rappresenta una stringa di formato applicata ai nomi di qualsiasi <code> oldValues </code> i parametri passati al <> </> *> o <> </> *> metodi. Il valore predefinito è &quot;{0}&quot;."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnDeleted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Deleted&quot;> </xref> evento dopo il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo ha completato un&quot;operazione di eliminazione."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnDeleted consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnDeleted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnDeleting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Deleting&quot;> </xref> evento prima di <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo tenta un&quot;operazione di eliminazione."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnDeleting consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  example:
  - "The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event, which is raised before a <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operation occurs. Because this example deletes data from the Northwind database, an OnDeleting handler is added to attempt to back up the database to disk before the delete is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/359c75a9-ee0e-4d55-bdc1-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/359c75a9-ee0e-4d55-bdc1-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  id: OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnFiltering(SqlDataSourceFilteringEventArgs)
  nameWithType: SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Filtering&quot;> </xref> evento prima di <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo consente di filtrare i risultati di un&quot;operazione select."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnFiltering consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnFiltering (System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnInserted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Inserted&quot;> </xref> evento dopo il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo ha completato un&quot;operazione di inserimento."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnInserted consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the OnInserted event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/81209d4c-52a2-4147-b8d8-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/81209d4c-52a2-4147-b8d8-_1.aspx)]"
  syntax:
    content: protected virtual void OnInserted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnInserting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Inserting&quot;> </xref> evento prima di <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo tenta un&quot;operazione di inserimento."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnInserting consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the OnInserting event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/ff2f58f9-1a94-4cce-ae83-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/ff2f58f9-1a94-4cce-ae83-_1.aspx)]"
  syntax:
    content: protected virtual void OnInserting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnInserting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnSelected(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Selected&quot;> </xref> evento dopo il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo ha completato un&quot;operazione di recupero di dati."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnSelected consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnSelected (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  id: OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnSelecting(SqlDataSourceSelectingEventArgs)
  nameWithType: SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Selecting&quot;> </xref> evento prima di <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo tenta un&quot;operazione di recupero di dati."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnSelecting consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnSelecting (System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnUpdated(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Updated&quot;> </xref> evento dopo il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo ha completato un&quot;operazione di aggiornamento."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo su aggiornato consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  example:
  - "The following code example demonstrates how to display and update data retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control. After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an e-mail message notification is sent.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/9236d411-d01f-4dc8-b1eb-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/9236d411-d01f-4dc8-b1eb-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdated (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnUpdating(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Updating&quot;> </xref> evento prima di <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controllo tenta un&quot;operazione di aggiornamento."
  remarks: "Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Il metodo OnUpdating consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  example:
  - "The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/29c8c16e-94d1-48d3-be46-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/29c8c16e-94d1-48d3-be46-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdating (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  id: ParameterPrefix
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene la stringa che è utilizzata come prefisso un segnaposto per il parametro in una query SQL con parametri."
  remarks: "Comandi e query SQL possono essere con parametri, che contengono i segnaposto per i valori associati alla query in fase di esecuzione. A seconda del provider ADO.NET che è impostato per il <xref:System.Web.UI.WebControls.SqlDataSource>controllo, che è identificato dal <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>proprietà, i parametri vengono valutati da alias o tramite il relativo ordinamento nel <xref:System.Web.UI.WebControls.ParameterCollection>oggetto.</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> </xref:System.Web.UI.WebControls.SqlDataSource>       Se il <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>non è impostata o è impostata sul <xref:System.Data.SqlClient?displayProperty=fullName>, i parametri vengono valutati da alias e la proprietà ParameterPrefix viene utilizzata per aggiungere un prefisso di parametro per il <xref:System.Web.UI.WebControls.Parameter.Name%2A>proprietà di ogni <xref:System.Web.UI.WebControls.Parameter>dell&quot;oggetto un <xref:System.Web.UI.WebControls.ParameterCollection>durante un&quot;operazione di modifica di dati o il recupero dei dati.</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.Parameter.Name%2A> </xref:System.Data.SqlClient?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se il <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>è impostata sul <xref:System.Data.OleDb?displayProperty=fullName>o <xref:System.Data.Odbc?displayProperty=fullName>, i parametri vengono valutati per l&quot;ordine e il ParameterPrefix e <xref:System.Web.UI.WebControls.Parameter.Name%2A>vengono ignorate.</xref:System.Web.UI.WebControls.Parameter.Name%2A> </xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>       Se si estende il <xref:System.Web.UI.WebControls.SqlDataSourceView>(classe), è possibile eseguire l&quot;override della proprietà di ParameterPrefix per fornire un prefisso diverso di `&quot;@&quot;` stringa, se necessario.</xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: protected virtual string ParameterPrefix { get; }
    return:
      type: System.String
      description: "Il &quot;@&quot; stringa."
  overload: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  id: RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Confronta le funzionalità richieste per un <> </> *> operazione con quelle supportate dalla visualizzazione e viene chiamato dal <> </> *> metodo."
  remarks: "Il metodo RaiseUnsupportedCapabilityError viene utilizzato dalla vista origine dati per esaminare tutte le funzionalità richieste da un controllo con associazione a dati, rappresentata dal <xref:System.Web.UI.DataSourceSelectArguments>oggetto passato al <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>(metodo) e per confrontare le funzionalità supportate dalla vista origine dati.</xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> Per le funzionalità che sono rappresentate dal <xref:System.Web.UI.DataSourceSelectArguments>dell&quot;oggetto e non sono supportate dalla vista origine dati, un <xref:System.NotSupportedException>viene generata l&quot;eccezione.</xref:System.NotSupportedException> </xref:System.Web.UI.DataSourceSelectArguments>"
  syntax:
    content: protected override void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);
    parameters:
    - id: capability
      type: System.Web.UI.DataSourceCapabilities
      description: "Uno del <xref href=&quot;System.Web.UI.DataSourceCapabilities&quot;> </xref> valori che viene confrontato con le funzionalità che supporta la visualizzazione."
  overload: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "L&quot;origine dati non sono selezionati <code> capability </code> abilitato."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: SqlDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Salva le modifiche apportate allo stato di visualizzazione per il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> controllo dal momento in cui è stata eseguita il postback della pagina server."
  remarks: "Il metodo SaveViewState viene utilizzato principalmente dagli sviluppatori di controlli.       Lo stato di visualizzazione è costituito da tutti i valori delle proprietà per un controllo server. Questi valori vengono inseriti automaticamente nella <xref:System.Web.UI.Control.ViewState%2A>proprietà per il controllo server, che è un&quot;istanza della <xref:System.Web.UI.StateBag>classe.</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> Il <xref:System.Web.UI.Control.ViewState%2A>valore per il controllo server viene quindi inserito in un oggetto stringa dopo il salvataggio dello stato fase del ciclo di vita del controllo server.</xref:System.Web.UI.Control.ViewState%2A>       Quando viene salvato lo stato di visualizzazione, l&quot;oggetto stringa che è stata resa persistente dopo il salvataggio dello stato fase del ciclo di vita del controllo server viene restituito al client come una variabile che viene archiviata in un elemento HTML `Hidden` elemento. Quando si creano controlli server personalizzati, è possibile migliorare l&quot;efficienza eseguendo l&quot;override del metodo SaveViewState e modificando il `ViewState` proprietà del controllo server. Per ulteriori informazioni, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "L&quot;oggetto che contiene le modifiche per il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> stato visualizzazione; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se non è alcuno stato di visualizzazione associato all&quot;oggetto."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Recupera i dati dal database sottostante utilizzando il <> </> *> stringa SQL e i parametri che sono nel <> </> *> insieme."
  remarks: "Le chiamate del metodo Select di <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>, passando il `selectArgs` parametro.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>       Il <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>metodo restituisce un <xref:System.Data.DataView>oggetto, se il <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>è impostata sul <xref:System.Web.UI.WebControls.SqlDataSourceMode>valore o restituisce un <xref:System.Data.IDataReader>oggetto, se il <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>è impostata sul <xref:System.Web.UI.WebControls.SqlDataSourceMode>valore.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.IDataReader> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.DataView> </xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> Chiudi il <xref:System.Data.IDataReader>al termine della lettura dei dati dell&quot;oggetto.</xref:System.Data.IDataReader>"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "Oggetto <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> utilizzato per operazioni di richiesta dei dati oltre il recupero dei dati di base."
    return:
      type: System.Collections.IEnumerable
      description: "Un <xref:System.Collections.IEnumerable>elenco di righe di dati.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.Select*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il <code> selectArgs </code> passato selezionare metodo specificare che l&quot;origine dati deve eseguire alcune operazioni aggiuntive durante il recupero dei dati per consentire lo spostamento o l&quot;ordinamento dei dati recuperati, ma il controllo origine dati non supporta la funzionalità richiesta."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> non è possibile stabilire una connessione con l&quot;origine dati sottostante."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  id: SelectCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta la stringa SQL che il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> oggetto utilizzato per recuperare dati dal database sottostante."
  remarks: "Poiché i prodotti del database utilizzano tipi diversi di SQL, la sintassi della stringa SQL dipende dal provider ADO.NET attualmente in uso, è identificato dal <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se la stringa SQL è una query con parametri o un comando, anche il segnaposto del parametro dipenderà dal provider ADO.NET in uso. Ad esempio, se il provider è il <xref:System.Data.SqlClient?displayProperty=fullName>, ovvero il provider predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource>(classe), il segnaposto del parametro è `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Tuttavia, se il provider sia impostato il <xref:System.Data.Odbc?displayProperty=fullName>o <xref:System.Data.OleDb?displayProperty=fullName>, il segnaposto del parametro è `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Per ulteriori informazioni su comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md).       La proprietà SelectCommand può essere una stringa SQL o il nome di una stored procedure, se l&quot;origine dati supporta le stored procedure.      > [!IMPORTANT] > È più sicuro per utilizzare una stored procedure di un&quot;istruzione SQL per la proprietà SelectCommand.       Il valore di SelectCommand proprietà è archiviato nella vista stato."
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The second code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The <xref:System.Web.UI.WebControls.Button> and <xref:System.Web.UI.WebControls.TextBox> controls are provided as a simple interface to update the address for the selected user in the <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_519_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_519_1.aspx)]  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property can be an SQL query or the name of a stored procedure, if the data source supports stored procedures.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_519_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_519_2.aspx)]"
  syntax:
    content: public string SelectCommand { get; set; }
    return:
      type: System.String
      description: "Stringa SQL il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> viene utilizzato per recuperare i dati."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  id: SelectCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se il testo di <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>proprietà è una query SQL o il nome di una stored procedure.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>"
  remarks: "Il valore della SelectCommandType proprietà è archiviato nella vista stato."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_934_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_934_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Uno del <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valori. Il valore predefinito è il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valore."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore selezionato non è uno del <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valori."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selected
  id: Selected
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Selected
  nameWithType: SqlDataSourceView.Selected
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica quando un&quot;operazione di recupero di dati è stata completata."
  remarks: "Gestire l&quot;evento selezionati per esaminare i valori dei parametri di output dopo un&quot;operazione di recupero di dati è stata completata. I parametri di output sono disponibili le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>oggetto associato all&quot;evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Selecting
  nameWithType: SqlDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica prima che un&quot;operazione di recupero di dati."
  remarks: "Gestire l&quot;evento di selezione per eseguire operazioni di inizializzazione aggiuntive che sono specifiche dell&quot;applicazione, per convalidare i valori dei parametri, o per modificare il parametro dei valori prima di <xref:System.Web.UI.WebControls.SqlDataSource>controllo esegue l&quot;operazione di recupero di dati.</xref:System.Web.UI.WebControls.SqlDataSource>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene la raccolta di parametri che contiene i parametri usati dal <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>proprietà.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>"
  remarks: "Se il <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>proprietà contiene una query SQL con parametri, la raccolta SelectParameters contiene qualsiasi <xref:System.Web.UI.WebControls.Parameter>oggetti che corrispondono ai segnaposti del parametro nella stringa SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>       A seconda del provider ADO.NET, l&quot;ordine dei parametri nella raccolta SelectParameters potrebbe essere importante. Il <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>associano i parametri nella raccolta in base all&quot;ordine in cui i parametri vengono visualizzati nella query SQL con parametri.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> Il <xref:System.Data.SqlClient?displayProperty=fullName>provider, ovvero il provider ADO.NET predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource>di controllo, associa i parametri nella raccolta abbinando il nome del parametro con un alias di segnaposto nella query SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Per ulteriori informazioni su comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server by setting the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to an SQL query. The SQL query is parameterized and the placeholder in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property is matched to the <xref:System.Web.UI.WebControls.ControlParameter> object that is added to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection. In this way, the <xref:System.Web.UI.WebControls.DropDownList> control, to which the <xref:System.Web.UI.WebControls.ControlParameter> is bound, acts as a filter for what is displayed in the <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n> [!NOTE]\n>  Because the parameter is used in a WHERE clause, the use of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property in this code example is functionally equivalent to using both the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_723_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_723_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> che contiene i parametri utilizzati per la <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>proprietà.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  id: SortParameterName
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il nome di un parametro di stored procedure utilizzata per ordinare i dati recuperati quando il recupero dei dati viene eseguita mediante una stored procedure."
  remarks: "La proprietà SortParameterName viene valutata solo quando il comando SQL che è contenuta la <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>proprietà è il nome di una stored procedure.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> In questo caso, se è impostata la proprietà SortParameterName, contiene il nome di un parametro che viene utilizzato per ordinare i risultati della stored procedure.       Se il <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>è impostata, viene anteposta alla proprietà SortParameterName.</xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>       Il valore della SortParameterName è archiviato nella vista stato."
  syntax:
    content: public string SortParameterName { get; set; }
    return:
      type: System.String
      description: "Il nome di un parametro di stored procedure utilizzato per ordinare i dati recuperati quando il recupero dei dati viene eseguita mediante una stored procedure."
  overload: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Per una descrizione di questo membro, vedere <xref:System.Web.UI.IStateManager.IsTrackingViewState*>.</xref:System.Web.UI.IStateManager.IsTrackingViewState*>"
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.SqlDataSourceView>esegue il cast dell&quot;istanza per il <xref:System.Web.UI.IStateManager>interfaccia.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se la vista origine dati è contrassegnata per il salvataggio dello stato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.Web.UI.IStateManager.LoadViewState%28System.Object%29?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.SqlDataSourceView>esegue il cast dell&quot;istanza per il <xref:System.Web.UI.IStateManager>interfaccia.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Oggetto che rappresenta il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> ripristinare lo stato."
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Per una descrizione di questo membro, vedere <xref href=&quot;System.Web.UI.IStateManager.SaveViewState&quot;> </xref>."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.SqlDataSourceView>esegue il cast dell&quot;istanza per il <xref:System.Web.UI.IStateManager>interfaccia.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "L&quot;oggetto che contiene le modifiche per il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> stato visualizzazione; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se non è alcuno stato di visualizzazione associato all&quot;oggetto."
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Per una descrizione di questo membro, vedere <xref:System.Web.UI.IStateManager.TrackViewState*>.</xref:System.Web.UI.IStateManager.TrackViewState*>"
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia un membro. E può essere utilizzato solo quando il <xref:System.Web.UI.WebControls.SqlDataSourceView>esegue il cast dell&quot;istanza per il <xref:System.Web.UI.IStateManager>interfaccia.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: SqlDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> oggetto per rilevare le modifiche allo stato di visualizzazione in modo che possano essere archiviate nel <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> oggetto per il controllo e mantenute nelle richieste della stessa pagina."
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Esegue un&quot;operazione di aggiornamento usando il <> </> *> stringa SQL, i parametri in di <> </> *> raccolta e i valori siano <code> keys </code>, <code> values </code>, e <code> oldValues </code> raccolte."
  remarks: "Le chiamate al metodo Update di <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A>, passando il `keys`, `values`, e `oldValues` parametri.</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=fullName>.</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the Update method explicitly.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/0d500e90-6fd2-4112-8e56-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/0d500e90-6fd2-4112-8e56-_1.aspx)]"
  syntax:
    content: public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>di chiavi primarie da utilizzare con il <> </> *> proprietà per eseguire l&quot;operazione di aggiornamento del database.</xref:System.Collections.IDictionary> Se non sono presenti chiavi associate alla query o se il <> </> *> non è un database SQL con parametri di query, passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: values
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>di valori da utilizzare con il <> </> *> proprietà per eseguire l&quot;operazione di aggiornamento del database.</xref:System.Collections.IDictionary> Se esistono parametri associati alla query o se il <> </> *> non è un database SQL con parametri di query, passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>che rappresenta i valori originali nel database.</xref:System.Collections.IDictionary> Se esistono parametri associati alla query o se il <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>non è un database SQL con parametri di query, passare <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
    return:
      type: System.Int32
      description: "Un valore che rappresenta il numero di righe aggiornate nel database sottostante."
  overload: System.Web.UI.WebControls.SqlDataSourceView.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> non è possibile stabilire una connessione con l&quot;origine dati sottostante."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Il <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>proprietà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  id: UpdateCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta la stringa SQL che il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> oggetto utilizzato per aggiornare i dati nel database sottostante."
  remarks: "Poiché i prodotti del database utilizzano tipi diversi di SQL, la sintassi della stringa SQL dipende dal provider ADO.NET attualmente in uso, è identificato dal <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>proprietà.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se la stringa SQL è una query con parametri o un comando, anche il segnaposto del parametro dipenderà dal provider ADO.NET in uso. Ad esempio, se il provider è il <xref:System.Data.SqlClient?displayProperty=fullName>, ovvero il provider predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource>(classe), il segnaposto del parametro è `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Tuttavia, se il provider sia impostato il <xref:System.Data.Odbc?displayProperty=fullName>o <xref:System.Data.OleDb?displayProperty=fullName>, il segnaposto del parametro è `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Per ulteriori informazioni su comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md).       La proprietà UpdateCommand può essere una stringa SQL o il nome di una stored procedure, se l&quot;origine dati supporta le stored procedure.       Il valore di UpdateCommand proprietà è archiviato nella vista stato."
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a Microsoft SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The second code example demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> control automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection, inferring the parameters from the <xref:System.Web.UI.WebControls.BoundField> objects, and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method when the **Update** link on the editable <xref:System.Web.UI.WebControls.GridView> control is selected. This example also includes some post-processing—after a record is updated, an e-mail message notification is sent.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1335_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1335_1.aspx)]  \n  \n The following code example, which is functionally identical to the preceding code example, demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the ADO.NET provider for ODBC, the <xref:System.Data.Odbc?displayProperty=fullName>, and the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN).  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1335_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1335_2.aspx)]"
  syntax:
    content: public string UpdateCommand { get; set; }
    return:
      type: System.String
      description: "Stringa di un database SQL di <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> viene utilizzato per aggiornare i dati."
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  id: UpdateCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se il testo di <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>proprietà è un&quot;istruzione SQL o il nome di una stored procedure.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
  remarks: "Il valore della UpdateCommandType proprietà è archiviato nella vista stato."
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Uno del <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valori. Il valore predefinito è il <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valore."
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore selezionato non è uno del <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valori."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updated
  id: Updated
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Updated
  nameWithType: SqlDataSourceView.Updated
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica quando un&quot;operazione di aggiornamento è stata completata."
  remarks: "Gestire l&quot;evento aggiornato per esaminare i valori dei parametri di output dopo un&quot;operazione di aggiornamento è stata completata. I parametri di output sono disponibili le <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>oggetto associato all&quot;evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to display and update data that is retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control. After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an e-mail message notification is sent.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_139_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_139_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene la raccolta di parametri che contiene i parametri usati dal <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>proprietà.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
  remarks: "Se il <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>proprietà contiene una query SQL con parametri, la raccolta UpdateParameters contiene qualsiasi <xref:System.Web.UI.WebControls.Parameter>oggetti che corrispondono ai segnaposti del parametro che nella stringa SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>       I nomi dei parametri possono essere influenzati dal <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>proprietà; in particolare, se il nome identifica una chiave primaria, ad esempio una chiave specificata utilizzando il `DataKeyNames` proprietà o a eliminare e aggiornare gli scenari in cui il <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>è impostata sul <xref:System.Web.UI.ConflictOptions>valore e un set di `oldValues` vengono passati al metodo di dati corrispondente.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> In questo caso, la stringa di formato viene applicata a ogni nome di parametro nel `oldValues` insieme.       A seconda del provider ADO.NET, l&quot;ordine dei parametri nella raccolta UpdateParameters potrebbe essere importante. Il <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>associano i parametri nella raccolta in base all&quot;ordine in cui i parametri vengono visualizzati nella query SQL con parametri.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> Il <xref:System.Data.SqlClient?displayProperty=fullName>provider, ovvero il provider ADO.NET predefinito per il <xref:System.Web.UI.WebControls.SqlDataSource>di controllo, associa i parametri nella raccolta abbinando il nome del parametro con un alias di segnaposto nella query SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Per ulteriori informazioni su comandi e query SQL con parametri, vedere [utilizzo dei parametri con il controllo SqlDataSource](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement, and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method explicitly.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1249_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1249_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> che contiene i parametri utilizzati per la <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>proprietà.</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updating
  id: Updating
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Updating
  nameWithType: SqlDataSourceView.Updating
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica prima che un&quot;operazione di aggiornamento."
  remarks: "Gestire l&quot;evento di aggiornamento per eseguire operazioni di inizializzazione aggiuntive che sono specifiche dell&quot;applicazione, per convalidare i valori dei parametri, o per modificare il parametro dei valori prima di <xref:System.Web.UI.WebControls.SqlDataSource>controllo esegue l&quot;operazione di aggiornamento.</xref:System.Web.UI.WebControls.SqlDataSource>       La connessione all&quot;origine dati sottostante non è ancora aperta quando viene chiamato il delegato del gestore eventi. Pertanto, è possibile annullare l&quot;operazione chiamando direttamente il <xref:System.Data.Common.DbCommand.Cancel%2A>metodo il <xref:System.Data.Common.DbCommand>oggetto esposto dal <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>oggetto.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> È possibile, tuttavia, annullare l&quot;operazione di database impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>proprietà del <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>per `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_45_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_45_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceView
  isExternal: false
  name: System.Web.UI.DataSourceView
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SqlDataSourceView(SqlDataSource,String,HttpContext)
  nameWithType: SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
- uid: System.Web.UI.WebControls.SqlDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSource
  nameWithType: SqlDataSource
  fullName: System.Web.UI.WebControls.SqlDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanPage
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanSort
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
- uid: System.Web.UI.ConflictOptions
  parent: System.Web.UI
  isExternal: false
  name: ConflictOptions
  nameWithType: ConflictOptions
  fullName: System.Web.UI.ConflictOptions
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Delete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Delete(IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceCommandType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandType
  nameWithType: SqlDataSourceCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Deleted
  nameWithType: SqlDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleted
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceStatusEventHandler
  nameWithType: SqlDataSourceStatusEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Deleting
  nameWithType: SqlDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleting
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandEventHandler
  nameWithType: SqlDataSourceCommandEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: SqlDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Filtering
  nameWithType: SqlDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Filtering
- uid: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceFilteringEventHandler
  nameWithType: SqlDataSourceFilteringEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Insert(IDictionary)
  nameWithType: SqlDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Insert(IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Inserted
  nameWithType: SqlDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserted
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Inserting
  nameWithType: SqlDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserting
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: SqlDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceStatusEventArgs
  nameWithType: SqlDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandEventArgs
  nameWithType: SqlDataSourceCommandEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnFiltering(SqlDataSourceFilteringEventArgs)
  nameWithType: SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceFilteringEventArgs
  nameWithType: SqlDataSourceFilteringEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelected(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelecting(SqlDataSourceSelectingEventArgs)
  nameWithType: SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceSelectingEventArgs
  nameWithType: SqlDataSourceSelectingEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdated(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdating(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
- uid: System.Web.UI.DataSourceCapabilities
  parent: System.Web.UI
  isExternal: false
  name: DataSourceCapabilities
  nameWithType: DataSourceCapabilities
  fullName: System.Web.UI.DataSourceCapabilities
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SaveViewState()
  nameWithType: SqlDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selected
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Selected
  nameWithType: SqlDataSourceView.Selected
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selected
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Selecting
  nameWithType: SqlDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selecting
- uid: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceSelectingEventHandler
  nameWithType: SqlDataSourceSelectingEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: TrackViewState()
  nameWithType: SqlDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updated
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Updated
  nameWithType: SqlDataSourceView.Updated
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updated
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updating
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Updating
  nameWithType: SqlDataSourceView.Updating
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updating
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SqlDataSourceView
  nameWithType: SqlDataSourceView.SqlDataSourceView
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Delete
  nameWithType: SqlDataSourceView.Delete
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: SqlDataSourceView.ExecuteDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: SqlDataSourceView.ExecuteInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: SqlDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: SqlDataSourceView.ExecuteUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Insert
  nameWithType: SqlDataSourceView.Insert
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: LoadViewState
  nameWithType: SqlDataSourceView.LoadViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleted
  nameWithType: SqlDataSourceView.OnDeleted
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleting
  nameWithType: SqlDataSourceView.OnDeleting
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnFiltering
  nameWithType: SqlDataSourceView.OnFiltering
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserted
  nameWithType: SqlDataSourceView.OnInserted
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserting
  nameWithType: SqlDataSourceView.OnInserting
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelected
  nameWithType: SqlDataSourceView.OnSelected
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelecting
  nameWithType: SqlDataSourceView.OnSelecting
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdated
  nameWithType: SqlDataSourceView.OnUpdated
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdating
  nameWithType: SqlDataSourceView.OnUpdating
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SaveViewState
  nameWithType: SqlDataSourceView.SaveViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Select
  nameWithType: SqlDataSourceView.Select
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: TrackViewState
  nameWithType: SqlDataSourceView.TrackViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Update
  nameWithType: SqlDataSourceView.Update
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
