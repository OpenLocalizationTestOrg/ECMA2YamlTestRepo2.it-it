### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.BitVector32
  id: BitVector32
  children:
  - System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  - System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  - System.Collections.Specialized.BitVector32.CreateMask
  - System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  - System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  - System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Data
  - System.Collections.Specialized.BitVector32.Equals(System.Object)
  - System.Collections.Specialized.BitVector32.GetHashCode
  - System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Item(System.Int32)
  - System.Collections.Specialized.BitVector32.ToString
  - System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  langs:
  - csharp
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
  type: Struct
  summary: "Fornisce una struttura semplice che memorizza valori Boolean e small integer in 32 bit di memoria."
  remarks: "BitVector32 è più efficiente <xref:System.Collections.BitArray>per valori Boolean e small integer utilizzati internamente.</xref:System.Collections.BitArray> Oggetto <xref:System.Collections.BitArray>può crescere all&quot;infinito, in base alle necessità, ma presenta l&quot;overhead di prestazioni e di memoria che richiede un&quot;istanza della classe.</xref:System.Collections.BitArray> Al contrario, un BitVector32 utilizza solo 32 bit.       Impostare una struttura BitVector32 per contenere sezioni di valori interi piccoli o flag di bit di valori booleani, ma non entrambi. Una <xref:System.Collections.Specialized.BitVector32.Section>finestra nel BitVector32 di è composto da più piccolo numero di bit consecutivi che può contenere il valore massimo specificato nella <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</xref:System.Collections.Specialized.BitVector32.CreateSection%2A> </xref:System.Collections.Specialized.BitVector32.Section> Ad esempio, una sezione con un valore massimo pari a 1 è composta da un solo bit, mentre una sezione con un valore massimo pari a 5 è composto da tre bit. È possibile creare un <xref:System.Collections.Specialized.BitVector32.Section>con un valore massimo di 1 da utilizzare come un valore booleano, consentendo di archiviare i numeri interi e valori booleani nella stessa BitVector32.</xref:System.Collections.Specialized.BitVector32.Section>       Alcuni membri possono essere utilizzati per un BitVector32 impostato come sezioni, mentre gli altri membri possono essere utilizzati per tale tipo è impostato come flag di bit. Ad esempio, il <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName>proprietà è l&quot;indicizzatore per un BitVector32 impostato come sezioni, e <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName>proprietà è l&quot;indicizzatore per un BitVector32 impostato come flag di bit.</xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName> </xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName> <xref:System.Collections.Specialized.BitVector32.CreateMask%2A>Crea una serie di maschera che può essere usato per accedere ai singoli bit in un BitVector32 impostato come flag di bit.</xref:System.Collections.Specialized.BitVector32.CreateMask%2A>       Utilizzo di una maschera su una BitVector32 impostato come sezioni potrebbero provocare risultati imprevisti."
  example:
  - "The following code example uses a BitVector32 as a collection of bit flags.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/csharp/t-system.collections.spe_10_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/visualbasic/t-system.collections.spe_10_1.vb)]\n [!code-cpp[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/cpp/t-system.collections.spe_10_1.cpp)]  \n  \n The following code example uses a BitVector32 as a collection of sections.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/cpp/t-system.collections.spe_10_2.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/csharp/t-system.collections.spe_10_2.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/visualbasic/t-system.collections.spe_10_2.vb)]"
  syntax:
    content: public struct BitVector32
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  id: '#ctor(System.Collections.Specialized.BitVector32)'
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: BitVector32(BitVector32)
  nameWithType: BitVector32.BitVector32(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(BitVector32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> struttura che contiene i dati rappresentati in un oggetto esistente <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> struttura."
  remarks: "Questo costruttore è un&quot;operazione o (1)."
  syntax:
    content: public BitVector32 (System.Collections.Specialized.BitVector32 value);
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: "Oggetto <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> struttura che contiene i dati da copiare."
  overload: System.Collections.Specialized.BitVector32.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: BitVector32(Int32)
  nameWithType: BitVector32.BitVector32(Int32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> struttura che contiene i dati rappresentati in un numero intero."
  remarks: "Questo costruttore è un&quot;operazione o (1)."
  syntax:
    content: public BitVector32 (int data);
    parameters:
    - id: data
      type: System.Int32
      description: "Valore intero che rappresenta i dati del nuovo <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateMask
  id: CreateMask
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateMask()
  nameWithType: BitVector32.CreateMask()
  fullName: System.Collections.Specialized.BitVector32.CreateMask()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Crea la prima in una serie di maschera che può essere utilizzato per recuperare i singoli bit un <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> impostato come flag di bit."
  remarks: "Utilizzare `CreateMask()` per creare la prima maschera in una serie e `CreateMask(int)` per tutte le maschere successive.       È possibile creare più maschere per fare riferimento allo stesso flag di bit.       La maschera risultante isola solo un flag di bit in <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> È possibile combinare le maschere mediante un&quot;operazione OR bit per bit per creare una maschera che isola più flag di bit in <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32>       Utilizzo di una maschera su una <xref:System.Collections.Specialized.BitVector32>impostato come sezioni potrebbero provocare risultati imprevisti.</xref:System.Collections.Specialized.BitVector32>       Questo metodo è un&quot;operazione o (1)."
  example:
  - "The following code example shows how to create and use masks.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/csharp/m-system.collections.spe_3_1.cs)]\n [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/cpp/m-system.collections.spe_3_1.cpp)]\n [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/visualbasic/m-system.collections.spe_3_1.vb)]"
  syntax:
    content: public static int CreateMask ();
    parameters: []
    return:
      type: System.Int32
      description: "Maschera che isola il primo flag di bit di <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.CreateMask*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  id: CreateMask(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateMask(Int32)
  nameWithType: BitVector32.CreateMask(Int32)
  fullName: System.Collections.Specialized.BitVector32.CreateMask(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Crea una maschera aggiuntiva successiva alla maschera specificata in una serie di maschera che può essere utilizzato per recuperare i singoli bit un <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> impostato come flag di bit."
  remarks: "Utilizzare `CreateMask()` per creare la prima maschera in una serie e `CreateMask(int)` per tutte le maschere successive.       È possibile creare più maschere per fare riferimento allo stesso flag di bit.       La maschera risultante isola solo un flag di bit in <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> È possibile combinare le maschere mediante un&quot;operazione OR bit per bit per creare una maschera che isola più flag di bit in <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32>       Utilizzo di una maschera su una <xref:System.Collections.Specialized.BitVector32>impostato come sezioni potrebbero provocare risultati imprevisti.</xref:System.Collections.Specialized.BitVector32>       Questo metodo è un&quot;operazione o (1)."
  example:
  - "The following code example shows how to create and use masks.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/csharp/m-system.collections.spe_5_1.cs)]\n [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/cpp/m-system.collections.spe_5_1.cpp)]\n [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/visualbasic/m-system.collections.spe_5_1.vb)]"
  syntax:
    content: public static int CreateMask (int previous);
    parameters:
    - id: previous
      type: System.Int32
      description: "La maschera che indica il flag di bit precedente."
    return:
      type: System.Int32
      description: "Maschera che isola il bit di flag dopo quella che <code> previous </code> punta nella <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.CreateMask*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>previous</code>indica l&quot;ultimo flag di bit di <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  id: CreateSection(System.Int16)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateSection(Int16)
  nameWithType: BitVector32.CreateSection(Int16)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Crea il primo <xref:System.Collections.Specialized.BitVector32.Section>in una serie di sezioni che contengono small integer.</xref:System.Collections.Specialized.BitVector32.Section>"
  remarks: "A <xref:System.Collections.Specialized.BitVector32.Section>è una finestra all&quot;interno di <xref:System.Collections.Specialized.BitVector32>ed è composto il più piccolo numero di bit consecutivi che può contenere il valore massimo specificato in CreateSection.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32.Section> Ad esempio, una sezione con un valore massimo pari a 1 è composta da un solo bit, mentre una sezione con un valore massimo pari a 5 è composto da tre bit. È possibile creare una <xref:System.Collections.Specialized.BitVector32.Section>con un valore massimo di 1 come valore booleano, consentendo di archivio integer e Boolean nella stessa <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32.Section>       Se già sezioni di <xref:System.Collections.Specialized.BitVector32>, tali sezioni sono ancora accessibili; sovrapposizione sezioni può tuttavia comportare risultati imprevisti.</xref:System.Collections.Specialized.BitVector32>       Questo metodo è un&quot;operazione o (1)."
  example:
  - "The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of sections.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/cpp/m-system.collections.spe_18_1.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/csharp/m-system.collections.spe_18_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/visualbasic/m-system.collections.spe_18_1.vb)]"
  syntax:
    content: public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue);
    parameters:
    - id: maxValue
      type: System.Int16
      description: "Intero con segno a 16 bit che specifica il valore massimo per il nuovo <xref:System.Collections.Specialized.BitVector32.Section>.</xref:System.Collections.Specialized.BitVector32.Section>"
    return:
      type: System.Collections.Specialized.BitVector32.Section
      description: "Oggetto <xref:System.Collections.Specialized.BitVector32.Section>che può contenere un numero compreso tra zero e <code> maxValue </code>.</xref:System.Collections.Specialized.BitVector32.Section>"
  overload: System.Collections.Specialized.BitVector32.CreateSection*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>maxValue</code>è minore di 1."
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  id: CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateSection(Int16,BitVector32+Section)
  nameWithType: BitVector32.CreateSection(Int16,BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16,BitVector32+Section)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  syntax:
    content: public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue, System.Collections.Specialized.BitVector32.Section previous);
    parameters:
    - id: maxValue
      type: System.Int16
      description: "Da aggiungere."
    - id: previous
      type: System.Collections.Specialized.BitVector32.Section
      description: "Da aggiungere."
    return:
      type: System.Collections.Specialized.BitVector32.Section
      description: "Da aggiungere."
  overload: System.Collections.Specialized.BitVector32.CreateSection*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Data
  id: Data
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Data
  nameWithType: BitVector32.Data
  fullName: System.Collections.Specialized.BitVector32.Data
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Ottiene il valore della <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> come numero intero."
  remarks: "Per accedere al valore di singole sezioni o flag di bit, utilizzare il <xref:System.Collections.Specialized.BitVector32.Item%2A>proprietà.</xref:System.Collections.Specialized.BitVector32.Item%2A>       Il recupero del valore di questa proprietà è un&quot;operazione o (1)."
  syntax:
    content: public int Data { get; }
    return:
      type: System.Int32
      description: "Il valore di <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> come numero intero."
  overload: System.Collections.Specialized.BitVector32.Data*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: BitVector32.Equals(Object)
  fullName: System.Collections.Specialized.BitVector32.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Determina se l&quot;oggetto specificato è uguale al <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "L&quot;oggetto `o` viene considerato uguale al <xref:System.Collections.Specialized.BitVector32>Se il tipo di `o` è compatibile con il <xref:System.Collections.Specialized.BitVector32>tipo e se il valore di `o` è uguale al valore di <xref:System.Collections.Specialized.BitVector32.Data%2A>.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32>       Questo metodo è un&quot;operazione o (1)."
  example:
  - "The following code example compares a <xref:System.Collections.Specialized.BitVector32> with another <xref:System.Collections.Specialized.BitVector32> and with an <xref:System.Int32>.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/cpp/m-system.collections.spe_34_1.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/csharp/m-system.collections.spe_34_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/visualbasic/m-system.collections.spe_34_1.vb)]"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Oggetto da confrontare con l&quot;oggetto corrente <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto specificato è uguale al <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.GetHashCode
  id: GetHashCode
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: BitVector32.GetHashCode()
  fullName: System.Collections.Specialized.BitVector32.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Funge da funzione hash per il <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "Il codice hash di una <xref:System.Collections.Specialized.BitVector32>è in base al valore di <xref:System.Collections.Specialized.BitVector32.Data%2A>.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32> Due istanze di <xref:System.Collections.Specialized.BitVector32>con lo stesso valore per <xref:System.Collections.Specialized.BitVector32.Data%2A>genererà inoltre lo stesso codice hash.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32>       Questo metodo è un&quot;operazione o (1)."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash per il <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  id: Item(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Item(BitVector32+Section)
  nameWithType: BitVector32.Item(BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.Item(BitVector32+Section)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  syntax:
    content: public int this[System.Collections.Specialized.BitVector32.Section section] { get; set; }
    parameters:
    - id: section
      type: System.Collections.Specialized.BitVector32.Section
      description: "Da aggiungere."
    return:
      type: System.Int32
      description: "Da aggiungere."
  overload: System.Collections.Specialized.BitVector32.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: BitVector32.Item(Int32)
  fullName: System.Collections.Specialized.BitVector32.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Ottiene o imposta lo stato del flag di bit indicato dalla maschera specificata."
  remarks: "La proprietà Item [sezione] è l&quot;indicizzatore per un <xref:System.Collections.Specialized.BitVector32>che è impostato come sezioni e la proprietà Item [int] è l&quot;indicizzatore per un <xref:System.Collections.Specialized.BitVector32>impostato come flag di bit.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32>       Utilizzo di questa proprietà su un <xref:System.Collections.Specialized.BitVector32>impostato come sezioni potrebbero provocare risultati imprevisti.</xref:System.Collections.Specialized.BitVector32>       Nel linguaggio c# viene utilizzata la parola chiave per definire gli indicizzatori anziché implementare la proprietà dell&quot;elemento. Visual Basic implementa elemento come una proprietà predefinita, che fornisce la stessa funzionalità di indicizzazione.       Il recupero del valore di questa proprietà è un&quot;operazione o (1). l&quot;impostazione della proprietà è un&quot;operazione o (1)."
  syntax:
    content: public bool this[int bit] { get; set; }
    parameters:
    - id: bit
      type: System.Int32
      description: "Maschera che indica il bit per ottenere o impostare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il flag di bit specificato è attivato (1); in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.ToString
  id: ToString
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: ToString()
  nameWithType: BitVector32.ToString()
  fullName: System.Collections.Specialized.BitVector32.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Restituisce una stringa che rappresenta l&quot;oggetto corrente <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "Questo metodo esegue l&quot;override <xref:System.Object.ToString%2A?displayProperty=fullName>.</xref:System.Object.ToString%2A?displayProperty=fullName>       Questo metodo è un&quot;operazione o (1)."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Stringa che rappresenta l&quot;oggetto corrente <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  id: ToString(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: ToString(BitVector32)
  nameWithType: BitVector32.ToString(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.ToString(BitVector32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Restituisce una stringa che rappresenta l&quot;oggetto specificato <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "Questo metodo è un&quot;operazione o (1)."
  syntax:
    content: public static string ToString (System.Collections.Specialized.BitVector32 value);
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: "Il <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> per rappresentare."
    return:
      type: System.String
      description: "Stringa che rappresenta l&quot;oggetto specificato <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32(BitVector32)
  nameWithType: BitVector32.BitVector32(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(BitVector32)
- uid: System.Collections.Specialized.BitVector32
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32(Int32)
  nameWithType: BitVector32.BitVector32(Int32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.BitVector32.CreateMask
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask()
  nameWithType: BitVector32.CreateMask()
  fullName: System.Collections.Specialized.BitVector32.CreateMask()
- uid: System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask(Int32)
  nameWithType: BitVector32.CreateMask(Int32)
  fullName: System.Collections.Specialized.BitVector32.CreateMask(Int32)
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection(Int16)
  nameWithType: BitVector32.CreateSection(Int16)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16)
- uid: System.Collections.Specialized.BitVector32.Section
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32+Section
  nameWithType: BitVector32+Section
  fullName: System.Collections.Specialized.BitVector32+Section
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection(Int16,BitVector32+Section)
  nameWithType: BitVector32.CreateSection(Int16,BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16,BitVector32+Section)
- uid: System.Collections.Specialized.BitVector32.Data
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Data
  nameWithType: BitVector32.Data
  fullName: System.Collections.Specialized.BitVector32.Data
- uid: System.Collections.Specialized.BitVector32.Equals(System.Object)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Equals(Object)
  nameWithType: BitVector32.Equals(Object)
  fullName: System.Collections.Specialized.BitVector32.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Specialized.BitVector32.GetHashCode
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: GetHashCode()
  nameWithType: BitVector32.GetHashCode()
  fullName: System.Collections.Specialized.BitVector32.GetHashCode()
- uid: System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item(BitVector32+Section)
  nameWithType: BitVector32.Item(BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.Item(BitVector32+Section)
- uid: System.Collections.Specialized.BitVector32.Item(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item(Int32)
  nameWithType: BitVector32.Item(Int32)
  fullName: System.Collections.Specialized.BitVector32.Item(Int32)
- uid: System.Collections.Specialized.BitVector32.ToString
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString()
  nameWithType: BitVector32.ToString()
  fullName: System.Collections.Specialized.BitVector32.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString(BitVector32)
  nameWithType: BitVector32.ToString(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.ToString(BitVector32)
- uid: System.Collections.Specialized.BitVector32.#ctor*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32
  nameWithType: BitVector32.BitVector32
- uid: System.Collections.Specialized.BitVector32.CreateMask*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask
  nameWithType: BitVector32.CreateMask
- uid: System.Collections.Specialized.BitVector32.CreateSection*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection
  nameWithType: BitVector32.CreateSection
- uid: System.Collections.Specialized.BitVector32.Data*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Data
  nameWithType: BitVector32.Data
- uid: System.Collections.Specialized.BitVector32.Equals*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Equals
  nameWithType: BitVector32.Equals
- uid: System.Collections.Specialized.BitVector32.GetHashCode*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: GetHashCode
  nameWithType: BitVector32.GetHashCode
- uid: System.Collections.Specialized.BitVector32.Item*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item
  nameWithType: BitVector32.Item
- uid: System.Collections.Specialized.BitVector32.ToString*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString
  nameWithType: BitVector32.ToString
