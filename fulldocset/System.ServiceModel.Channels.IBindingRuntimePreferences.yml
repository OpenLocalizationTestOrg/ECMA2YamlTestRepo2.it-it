### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.IBindingRuntimePreferences
  id: IBindingRuntimePreferences
  children:
  - System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  langs:
  - csharp
  name: IBindingRuntimePreferences
  nameWithType: IBindingRuntimePreferences
  fullName: System.ServiceModel.Channels.IBindingRuntimePreferences
  type: Interface
  summary: "Definisce il contratto facoltativo che un&quot;associazione può implementare per specificare se le richieste in entrata vengono gestite in modo sincrono o asincrono dal servizio."
  remarks: "In alcuni casi potrebbe essere più efficiente per un&quot;associazione elaborare i messaggi con sincroni <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>o <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>metodi.</xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> </xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> Oggetto <xref:System.ServiceModel.Channels.Binding>classe può implementare facoltativamente IBindingRuntimePreferences per indicare ai chiamanti che si tratta di Preferiti.</xref:System.ServiceModel.Channels.Binding>       Se un&quot;associazione non implementa IBindingRuntimePreferences, il [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] livello Service Model Runtime Usa impostazione predefinita, le versioni asincrone del `Receive` e `Request` metodi. Se un&quot;associazione implementa IBindingRuntimePreferences, il [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] livello Service Model Runtime controlla il valore di <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>e utilizza quello per determinare se chiamare le versioni sincrone di questi metodi (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> o <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) o le versioni asincrone (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> e <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29>o <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A>e <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>.</xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> </xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> </xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> </xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> </xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> </xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> </xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> Se IBindingRuntimePreferences viene implementato dall&quot;associazione e restituisce `true` dal <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>proprietà, è consigliabile utilizzare sincroni <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>e <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>metodi per ricevere messaggi dal canale.</xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> </xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> </xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> Se l&quot;associazione non implementa IBindingRuntimePreferences o restituisce `false` dal <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>proprietà, è consigliabile utilizzare asincrona <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A>e <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29>o <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A>e <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>metodi.</xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> </xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> </xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> </xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> </xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>       Indipendentemente dal valore restituito dal <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>proprietà, tutte le associazioni devono fornire comunque implementazioni valide di entrambe le versioni sincrone e asincrone del `Receive` metodi per i tipi di canale specifici implementati.</xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> Per ulteriori informazioni sull&quot;implementazione di canali personalizzati, vedere [sviluppo canali](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows the implementation of a binding that implements the IBindingRuntimePreferences interface. This code is taken from the [Chunking Channel](~/add/includes/ajax-current-ext-md.md) sample:  \n  \n [!code-cs[S_UE_ChunkingChannel#0](~/add/codesnippet/csharp/t-system.servicemodel.ch_5_1.cs)]"
  syntax:
    content: public interface IBindingRuntimePreferences
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  id: ReceiveSynchronously
  parent: System.ServiceModel.Channels.IBindingRuntimePreferences
  langs:
  - csharp
  name: ReceiveSynchronously
  nameWithType: IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Ottiene un valore che indica se le richieste in ingresso possono essere gestite più efficientemente in modo sincrono o asincrono."
  remarks: "Le associazioni standard (fornita dal sistema) fornite da [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] hanno implementato questa interfaccia e in alcuni casi è possibile eseguire l&quot;override sul valore predefinito per elaborare i messaggi in arrivo in modo sincrono."
  example:
  - '[!code-cs[S_UE_ChunkingChannel#1](~/add/codesnippet/csharp/p-system.servicemodel.ch_0_1.cs)]'
  syntax:
    content: public bool ReceiveSynchronously { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se le richieste possono essere gestite più efficientemente in modo sincrono; in caso contrario<xref uid=&quot;langword_csharp_ false&quot; name=&quot; false&quot; href=&quot;&quot;></xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, per gestire le richieste in modo asincrono."
  overload: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
  parent: System.ServiceModel.Channels.IBindingRuntimePreferences
  isExternal: false
  name: ReceiveSynchronously
  nameWithType: IBindingRuntimePreferences.ReceiveSynchronously
  fullName: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously*
  parent: System.ServiceModel.Channels.IBindingRuntimePreferences
  isExternal: false
  name: ReceiveSynchronously
  nameWithType: IBindingRuntimePreferences.ReceiveSynchronously
