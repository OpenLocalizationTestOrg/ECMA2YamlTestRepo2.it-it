### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.FileSystemSecurity
  id: FileSystemSecurity
  children:
  - System.Security.AccessControl.FileSystemSecurity.AccessRightType
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  - System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  langs:
  - csharp
  name: FileSystemSecurity
  nameWithType: FileSystemSecurity
  fullName: System.Security.AccessControl.FileSystemSecurity
  type: Class
  summary: "Rappresenta il controllo di accesso e controllo di sicurezza per un file o directory."
  remarks: "La classe FileSystemSecurity è la classe base per il <xref:System.Security.AccessControl.FileSecurity>e <xref:System.Security.AccessControl.DirectorySecurity>classi.</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>  Queste classi rappresentano tutti i diritti di accesso per un file di sistema o una directory e definiscono come vengono controllati i tentativi di accesso.       La classe FileSystemSecurity rappresenta i diritti di accesso e controllo come un set di regole. Ogni regola di accesso è rappresentato da un <xref:System.Security.AccessControl.FileSystemAccessRule>dell&quot;oggetto, mentre ogni regola è rappresentata da un <xref:System.Security.AccessControl.FileSystemAuditRule>oggetto.</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       La classe FileSystemSecurity è un&quot;astrazione del sistema di sicurezza file di Microsoft Windows sottostante. In questo sistema, ogni file o directory include un elenco di controllo di accesso discrezionale (DACL), che controlla l&quot;accesso al file o directory, e un elenco di controllo di accesso di sistema (SACL), che specifica i tentativi di accesso da controllare.  Il <xref:System.Security.AccessControl.FileSystemAccessRule>e <xref:System.Security.AccessControl.FileSystemAuditRule>classi sono astrazioni delle voci di controllo di accesso (ACE) che comprendono DACL e SACL.</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       La classe FileSystemSecurity nasconde molti dettagli degli elenchi DACL e SACL; non è necessario preoccuparsi ACE ordinamento o DACL null.       Per rendere persistenti le informazioni di elenco (ACL) di controllo di accesso nuove o modificate in un file, utilizzare il <xref:System.IO.File.SetAccessControl%2A>o <xref:System.IO.FileInfo.SetAccessControl%2A>metodo.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Per mantenere informazioni ACL nuove o modificate in una directory, utilizzare il <xref:System.IO.Directory.SetAccessControl%2A>o <xref:System.IO.FileInfo.SetAccessControl%2A>metodo.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Per recuperare informazioni ACL da un file, utilizzare il <xref:System.IO.File.GetAccessControl%2A>o <xref:System.IO.FileInfo.GetAccessControl%2A>metodo.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Per recuperare informazioni ACL da una directory, utilizzare il <xref:System.IO.Directory.GetAccessControl%2A>o <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metodo.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/t-system.security.access_6_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/t-system.security.access_6_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/t-system.security.access_6_1.cpp)]"
  syntax:
    content: 'public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  id: AccessRightType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Ottiene l&quot;enumerazione di <xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;> </xref> classe viene utilizzato per rappresentare i diritti di accesso."
  remarks: "Le classi che derivano dalla <xref:System.Security.AccessControl.FileSystemSecurity>classe override della proprietà AccessRightType e restituire il tipo utilizzato per rappresentare i diritti di accesso.</xref:System.Security.AccessControl.FileSystemSecurity> Quando si utilizzano matrici o raccolte che contengono più tipi di oggetti di sicurezza, è possibile utilizzare questa proprietà per determinare il tipo di enumerazione appropriata da utilizzare con ogni oggetto di sicurezza."
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: "Oggetto <xref:System.Type>oggetto che rappresenta il <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> enumerazione.</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> classe che rappresenta una nuova regola di controllo di accesso per l&quot;utente specificato, con i diritti di accesso specificato, il controllo di accesso e i flag."
  remarks: "Il metodo consigliato per creare regole di controllo di accesso consiste nell&quot;utilizzare i costruttori di <xref:System.Security.AccessControl.FileSystemAccessRule>classe.</xref:System.Security.AccessControl.FileSystemAccessRule>       Il tipo restituito del metodo AccessRuleFactory è la classe base, <xref:System.Security.AccessControl.AccessRule>, ma il valore restituito può essere il cast per la classe derivata.</xref:System.Security.AccessControl.AccessRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "Un <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> oggetto che rappresenta un account utente."
    - id: accessMask
      type: System.Int32
      description: "Valore intero che specifica un tipo di accesso."
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la regola di accesso è stata ereditata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Uno del <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> valori che specificano come propagare le maschere di accesso agli oggetti figlio."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Uno del <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> valori che specificano come propagare le voci di controllo di accesso (ACE) per gli oggetti figlio."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Uno del <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> valori che specifica se l&quot;accesso è consentito o negato."
    return:
      type: System.Security.AccessControl.AccessRule
      description: "Un nuovo <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> oggetto che rappresenta una nuova regola di controllo di accesso per l&quot;utente specificato, con i diritti di accesso specificato, il controllo di accesso e i flag."
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>type</code> parameters specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - o - <code> accessMask </code> parametro è uguale a zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> identityReference </code> parametro non è di tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>, né di un tipo, ad esempio <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> che può essere convertito nel tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  id: AccessRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Ottiene l&quot;enumerazione di <xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;> </xref> classe viene utilizzato per rappresentare le regole di accesso."
  remarks: "Le classi che derivano dalla <xref:System.Security.AccessControl.FileSystemSecurity>classe override della proprietà AccessRuleType e restituiscono il tipo utilizzato per rappresentare le regole di accesso.</xref:System.Security.AccessControl.FileSystemSecurity> Quando si utilizzano matrici o raccolte che contengono più tipi di oggetti di sicurezza, è possibile utilizzare questa proprietà per determinare il tipo di regola di accesso corretto da utilizzare con ogni oggetto di sicurezza."
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "Oggetto <xref:System.Type>oggetto che rappresenta il <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> classe</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AddAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Aggiunge l&quot;autorizzazione di elenco (ACL) di controllo di accesso specificato per il file o directory corrente."
  remarks: "Il metodo AddAccessRule aggiunge una nuova regola all&quot;elenco di regole contenute all&quot;interno di un <xref:System.Security.AccessControl.FileSystemSecurity>oggetto.</xref:System.Security.AccessControl.FileSystemSecurity>       Se per la regola specificata esiste già un elenco di controllo di accesso (ACL), il metodo AddAccessRule aggiunge comunque la regola, con una sola eccezione: un <xref:System.Security.AccessControl.FileSystemAccessRule>oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType>valore di enumerazione sostituisce un oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType>valore di enumerazione.</xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule>       Per mantenere informazioni ACL nuove o modificate in un file, utilizzare il <xref:System.IO.File.SetAccessControl%2A>o <xref:System.IO.FileInfo.SetAccessControl%2A>metodo.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Per mantenere informazioni ACL nuove o modificate in una directory, utilizzare il <xref:System.IO.Directory.SetAccessControl%2A>o <xref:System.IO.FileInfo.SetAccessControl%2A>metodo.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Per recuperare informazioni ACL da un file, utilizzare il <xref:System.IO.File.GetAccessControl%2A>o <xref:System.IO.FileInfo.GetAccessControl%2A>metodo.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Per recuperare informazioni ACL da una directory, utilizzare il <xref:System.IO.Directory.GetAccessControl%2A>o <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metodo.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       Quando si aggiunge una regola di accesso senza impostare il <xref:System.Security.AccessControl.FileSystemRights>flag, il <xref:System.Security.AccessControl.FileSystemRights>flag verrà aggiunto automaticamente alla regola.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Se si rimuove la regola in un secondo momento senza specificare il <xref:System.Security.AccessControl.FileSystemRights>flag, il flag verrà rimosso automaticamente.</xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/92a71f8c-d81d-4955-8014-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/92a71f8c-d81d-4955-8014-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/92a71f8c-d81d-4955-8014-_1.cpp)]"
  syntax:
    content: public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "Oggetto <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> oggetto che rappresenta un&quot;autorizzazione (ACL) per aggiungere a un file o directory."
  overload: System.Security.AccessControl.FileSystemSecurity.AddAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AddAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Aggiunge la regola di controllo specificato per il file o directory corrente."
  remarks: "Il metodo AddAuditRule aggiunge una nuova regola di controllo all&quot;elenco di regole contenute all&quot;interno di un <xref:System.Security.AccessControl.FileSystemSecurity>oggetto.</xref:System.Security.AccessControl.FileSystemSecurity>       Se per la regola specificata esiste già una regola di controllo, il metodo AddAuditRule sarà comunque in grado di aggiungere la regola."
  example:
  - "The following code example uses the AddAuditRule method to add an audit rule to a file and uses the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method to remove the audit rule from the file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/a9a5c9f6-a8bf-4ad9-9027-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/a9a5c9f6-a8bf-4ad9-9027-_1.cs)]"
  syntax:
    content: public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "Oggetto <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> oggetto che rappresenta una regola di controllo per aggiungere a un file o directory."
  overload: System.Security.AccessControl.FileSystemSecurity.AddAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> classe che rappresenta la regola di controllo specificato per l&quot;utente specificato."
  remarks: "Il metodo consigliato per creare regole di controllo consiste nell&quot;utilizzare i costruttori di <xref:System.Security.AccessControl.FileSystemAuditRule>classe.</xref:System.Security.AccessControl.FileSystemAuditRule>       Il tipo restituito del metodo AuditRuleFactory è la classe base, <xref:System.Security.AccessControl.AuditRule>, ma il valore restituito può essere il cast per la classe derivata.</xref:System.Security.AccessControl.AuditRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "Un <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> oggetto che rappresenta un account utente."
    - id: accessMask
      type: System.Int32
      description: "Valore intero che specifica un tipo di accesso."
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la regola di accesso è stata ereditata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Uno del <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> valori che specificano come propagare le maschere di accesso agli oggetti figlio."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Uno del <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> valori che specificano come propagare le voci di controllo di accesso (ACE) per gli oggetti figlio."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Uno del <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> valori che specifica il tipo di controllo da eseguire."
    return:
      type: System.Security.AccessControl.AuditRule
      description: "Un nuovo <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> oggetto che rappresenta la regola di controllo specificato per l&quot;utente specificato."
  overload: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - o - <code> accessMask </code> proprietà è zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> identityReference </code> è una proprietà non è di tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>, né di un tipo, ad esempio <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> che può essere convertito nel tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  id: AuditRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Ottiene il tipo di <xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;> </xref> classe viene utilizzato per rappresentare le regole di controllo."
  remarks: "Le classi che derivano dalla <xref:System.Security.AccessControl.FileSystemSecurity>classe override della proprietà AuditRuleType e restituire il tipo utilizzato per rappresentare i diritti di controllo.</xref:System.Security.AccessControl.FileSystemSecurity> Quando si utilizzano matrici o raccolte che contengono più tipi di oggetti di sicurezza, è possibile utilizzare questa proprietà per determinare il tipo di regola di controllo appropriata da utilizzare con ogni oggetto di sicurezza."
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "Oggetto <xref:System.Type>oggetto che rappresenta il <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> classe</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Rimuove tutte corrispondenti consentiranno o negare le autorizzazioni di elenco (ACL) dal file corrente o dalla directory di controllo di accesso."
  remarks: "Il metodo RemoveAccessRule rimuove tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType>regole di accesso o tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType>le regole di accesso dall&quot;oggetto corrente <xref:System.Security.AccessControl.FileSystemSecurity>oggetto.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Ad esempio, è possibile utilizzare questo metodo per rimuovere tutti <xref:System.Security.AccessControl.AccessControlType>regole di accesso per un utente passando un <xref:System.Security.AccessControl.FileSystemAccessRule>oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType>valore, il <xref:System.Security.AccessControl.FileSystemRights>valore e un account utente.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule> </xref:System.Security.AccessControl.AccessControlType>  Quando si esegue questa operazione, il metodo RemoveAccessRule rimuove le regole di negazione che specificano il <xref:System.Security.AccessControl.FileSystemRights>valore o <xref:System.Security.AccessControl.FileSystemRights>valore.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>       Per rendere persistenti le informazioni di elenco (ACL) di controllo di accesso nuove o modificate in un file, utilizzare il <xref:System.IO.File.SetAccessControl%2A>o <xref:System.IO.FileInfo.SetAccessControl%2A>metodo.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Per mantenere informazioni ACL nuove o modificate in una directory, utilizzare il <xref:System.IO.Directory.SetAccessControl%2A>o <xref:System.IO.FileInfo.SetAccessControl%2A>metodo.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Per recuperare informazioni ACL da un file, utilizzare il <xref:System.IO.File.GetAccessControl%2A>o <xref:System.IO.FileInfo.GetAccessControl%2A>metodo.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Per recuperare informazioni ACL da una directory, utilizzare il <xref:System.IO.Directory.GetAccessControl%2A>o <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metodo.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       Quando si aggiunge una regola di accesso senza impostare il <xref:System.Security.AccessControl.FileSystemRights>flag, il <xref:System.Security.AccessControl.FileSystemRights>flag verrà aggiunto automaticamente alla regola.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Se si rimuove la regola in un secondo momento senza specificare il <xref:System.Security.AccessControl.FileSystemRights>flag, il flag verrà rimosso automaticamente.</xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/8c37102e-50e1-48e9-baeb-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/8c37102e-50e1-48e9-baeb-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/8c37102e-50e1-48e9-baeb-_1.cpp)]"
  syntax:
    content: public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "Oggetto <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> oggetto che rappresenta un&quot;autorizzazione (ACL) da rimuovere da un file o directory."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la regola di accesso è stato rimosso. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRuleAll(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Rimuove tutte le autorizzazioni elenco (ACL) per l&quot;utente specificato il file o directory corrente."
  remarks: "Il metodo RemoveAccessRuleAll rimuove tutte le autorizzazioni elenco (ACL) per l&quot;utente specificato.  Il metodo ignora tutti i valori di <xref:System.Security.AccessControl.FileSystemAccessRule>oggetto tranne l&quot;account utente.</xref:System.Security.AccessControl.FileSystemAccessRule>       Per mantenere informazioni ACL nuove o modificate in un file, utilizzare il <xref:System.IO.File.SetAccessControl%2A>o <xref:System.IO.FileInfo.SetAccessControl%2A>metodo.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Per mantenere informazioni ACL nuove o modificate in una directory, utilizzare il <xref:System.IO.Directory.SetAccessControl%2A>o <xref:System.IO.FileInfo.SetAccessControl%2A>metodo.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Per recuperare informazioni ACL da un file, utilizzare il <xref:System.IO.File.GetAccessControl%2A>o <xref:System.IO.FileInfo.GetAccessControl%2A>metodo.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Per recuperare informazioni ACL da una directory, utilizzare il <xref:System.IO.Directory.GetAccessControl%2A>o <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metodo.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       Quando si aggiunge una regola di accesso senza impostare il <xref:System.Security.AccessControl.FileSystemRights>flag, il <xref:System.Security.AccessControl.FileSystemRights>flag verrà aggiunto automaticamente alla regola.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Se si rimuove la regola in un secondo momento senza specificare il <xref:System.Security.AccessControl.FileSystemRights>flag, il flag verrà rimosso automaticamente.</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "Oggetto <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> oggetto che specifica un utente il cui accesso (ACL) di elencare le autorizzazioni di controllo deve essere rimosso da un file o directory."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Rimuove una singola corrispondenza consentire o negare l&quot;autorizzazione di elenco (ACL) di controllo di accesso dal file corrente o dalla directory."
  remarks: "Il metodo RemoveAccessRuleSpecific rimuove l&quot;oggetto specificato <xref:System.Security.AccessControl.AccessControlType>accedere regola o il corrispondente specificata <xref:System.Security.AccessControl.AccessControlType>regola di accesso dall&quot;oggetto corrente <xref:System.Security.AccessControl.FileSystemSecurity>oggetto.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Ad esempio, è possibile utilizzare questo metodo per rimuovere un oggetto specificato <xref:System.Security.AccessControl.AccessControlType>regola di accesso per un utente passando un <xref:System.Security.AccessControl.FileSystemAccessRule>oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType>valore, il <xref:System.Security.AccessControl.FileSystemRights>valore e un account utente.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule> </xref:System.Security.AccessControl.AccessControlType>  Quando si esegue questa operazione, il metodo RemoveAccessRuleSpecific rimuove solo la regola di negazione che specifica il <xref:System.Security.AccessControl.FileSystemRights>valore.</xref:System.Security.AccessControl.FileSystemRights>  Non rimuove le regole di negazione che specificano il <xref:System.Security.AccessControl.FileSystemRights>valore.</xref:System.Security.AccessControl.FileSystemRights>       Per rendere persistenti le informazioni di elenco (ACL) di controllo di accesso nuove o modificate in un file, utilizzare il <xref:System.IO.File.SetAccessControl%2A>o <xref:System.IO.FileInfo.SetAccessControl%2A>metodo.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Per mantenere informazioni ACL nuove o modificate in una directory, utilizzare il <xref:System.IO.Directory.SetAccessControl%2A>o <xref:System.IO.FileInfo.SetAccessControl%2A>metodo.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Per recuperare informazioni ACL da un file, utilizzare il <xref:System.IO.File.GetAccessControl%2A>o <xref:System.IO.FileInfo.GetAccessControl%2A>metodo.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Per recuperare informazioni ACL da una directory, utilizzare il <xref:System.IO.Directory.GetAccessControl%2A>o <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metodo.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       Quando si aggiunge una regola di accesso senza impostare il <xref:System.Security.AccessControl.FileSystemRights>flag, il <xref:System.Security.AccessControl.FileSystemRights>flag verrà aggiunto automaticamente alla regola.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Se si rimuove la regola in un secondo momento senza specificare il <xref:System.Security.AccessControl.FileSystemRights>flag, il flag verrà rimosso automaticamente.</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "Oggetto <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> oggetto che specifica un utente il cui accesso (ACL) di elencare le autorizzazioni di controllo deve essere rimosso da un file o directory."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Rimuove tutti i corrispondenti consentono o negare le regole di controllo dal file corrente o dalla directory."
  remarks: "Il metodo RemoveAuditRule rimuove tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType>regole di controllo o tutti i corrispondenti <xref:System.Security.AccessControl.AccessControlType>audit regole corrente <xref:System.Security.AccessControl.FileSystemSecurity>oggetto.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Ad esempio, è possibile utilizzare questo metodo per rimuovere tutti <xref:System.Security.AccessControl.AccessControlType>controllare le regole per un utente passando un <xref:System.Security.AccessControl.FileSystemAuditRule>oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType>valore, il <xref:System.Security.AccessControl.AuditFlags>valore e un account utente.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  Quando si esegue questa operazione, il metodo RemoveAuditRule rimuove le regole di negazione che specificano il <xref:System.Security.AccessControl.AuditFlags>valore o <xref:System.Security.AccessControl.AuditFlags>valore.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> method to add an audit rule to a file and uses the RemoveAuditRule method to remove the audit rule from the file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/e76c77df-35cd-4fcd-bf24-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/e76c77df-35cd-4fcd-bf24-_1.cs)]"
  syntax:
    content: public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "Oggetto <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> oggetto che rappresenta una regola di controllo per rimuovere un file o directory."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la regola di controllo è stato rimosso. in caso contrario,<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Rimuove tutte le regole di controllo per l&quot;utente specificato il file o directory corrente."
  remarks: "Il metodo RemoveAuditRuleAll rimuove tutte le regole di controllo per l&quot;utente specificato.  Ignora tutti i valori di <xref:System.Security.AccessControl.FileSystemAuditRule>oggetto tranne l&quot;account utente.</xref:System.Security.AccessControl.FileSystemAuditRule>"
  syntax:
    content: public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "Oggetto <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> oggetto che specifica l&quot;utente le cui regole di controllo devono essere rimosso da un file o directory."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Rimuove una singola corrispondenza consente o impedisce di regola di controllo dal file corrente o dalla directory."
  remarks: "Il metodo RemoveAuditRuleSpecific rimuove il corrispondente specificata <xref:System.Security.AccessControl.AccessControlType>controllo regola o il corrispondente specificata <xref:System.Security.AccessControl.AccessControlType>regola di controllo dall&quot;oggetto corrente <xref:System.Security.AccessControl.FileSystemSecurity>oggetto.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Ad esempio, è possibile utilizzare questo metodo per rimuovere un oggetto specificato <xref:System.Security.AccessControl.AccessControlType>regola di controllo per un utente passando un <xref:System.Security.AccessControl.FileSystemAuditRule>oggetto creato utilizzando il <xref:System.Security.AccessControl.AccessControlType>valore, il <xref:System.Security.AccessControl.AuditFlags>valore e un account utente.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  Quando si esegue questa operazione, il metodo RemoveAuditRuleSpecific rimuove solo una regola che specifica il <xref:System.Security.AccessControl.AuditFlags>valore.</xref:System.Security.AccessControl.AuditFlags>  Non rimuove le regole di negazione che specificano il <xref:System.Security.AccessControl.AuditFlags>valore.</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "Oggetto <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> oggetto che rappresenta una regola di controllo per rimuovere un file o directory."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: ResetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Aggiunge l&quot;autorizzazione di elenco (ACL) di controllo di accesso specificato per il file o directory corrente e rimuove tutte le autorizzazioni ACL corrispondenti."
  remarks: "Il metodo ResetAccessRule aggiunge la regola di elenco (ACL) di controllo di accesso specificato o lo sovrascrive qualsiasi regola ACL identica corrispondente il `rule` parametro.  Ad esempio, se il `rule` parametro specifica un <xref:System.Security.AccessControl.FileSystemRights>valore e il metodo ResetAccessRule individua una regola ACL identica che specifica il <xref:System.Security.AccessControl.FileSystemRights>valore, la regola identica verrà sovrascritta.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Se il metodo ResetAccessRule consente di trovare una regola ACL identica che specifica il <xref:System.Security.AccessControl.FileSystemRights>valore, la regola identica anche verrà sovrascritta.</xref:System.Security.AccessControl.FileSystemRights>       Per mantenere informazioni ACL nuove o modificate in un file, utilizzare il <xref:System.IO.File.SetAccessControl%2A>o <xref:System.IO.FileInfo.SetAccessControl%2A>metodo.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Per mantenere informazioni ACL nuove o modificate in una directory, utilizzare il <xref:System.IO.Directory.SetAccessControl%2A>o <xref:System.IO.FileInfo.SetAccessControl%2A>metodo.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Per recuperare informazioni ACL da un file, utilizzare il <xref:System.IO.File.GetAccessControl%2A>o <xref:System.IO.FileInfo.GetAccessControl%2A>metodo.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Per recuperare informazioni ACL da una directory, utilizzare il <xref:System.IO.Directory.GetAccessControl%2A>o <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metodo.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  syntax:
    content: public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "Oggetto <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> oggetto che rappresenta un&quot;autorizzazione (ACL) per aggiungere a un file o directory."
  overload: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: SetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Imposta l&quot;autorizzazione di elenco (ACL) di controllo di accesso specificato per il file o directory corrente."
  remarks: "Il metodo SetAccessRule aggiunge la regola di elenco (ACL) di controllo di accesso specificato o sovrascrive qualsiasi regola ACL identica corrispondente il <xref:System.Security.AccessControl.FileSystemRights>valore il `rule` parametro.</xref:System.Security.AccessControl.FileSystemRights>  Ad esempio, se il `rule` parametro specifica un <xref:System.Security.AccessControl.FileSystemRights>valore e il metodo SetAccessRule individua una regola ACL identica che specifica il <xref:System.Security.AccessControl.FileSystemRights>valore, la regola identica verrà sovrascritta.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Se il metodo SetAccessRule consente di trovare una regola ACL identica che specifica il <xref:System.Security.AccessControl.FileSystemRights>valore, la regola identica non verrà sovrascritta.</xref:System.Security.AccessControl.FileSystemRights>       Per mantenere informazioni ACL nuove o modificate in un file, utilizzare il <xref:System.IO.File.SetAccessControl%2A>o <xref:System.IO.FileInfo.SetAccessControl%2A>metodo.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Per mantenere informazioni ACL nuove o modificate in una directory, utilizzare il <xref:System.IO.Directory.SetAccessControl%2A>o <xref:System.IO.FileInfo.SetAccessControl%2A>metodo.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Per recuperare informazioni ACL da un file, utilizzare il <xref:System.IO.File.GetAccessControl%2A>o <xref:System.IO.FileInfo.GetAccessControl%2A>metodo.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Per recuperare informazioni ACL da una directory, utilizzare il <xref:System.IO.Directory.GetAccessControl%2A>o <xref:System.IO.DirectoryInfo.GetAccessControl%2A>metodo.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  syntax:
    content: public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "Oggetto <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> oggetto che rappresenta un&quot;autorizzazione (ACL) da impostare per un file o directory."
  overload: System.Security.AccessControl.FileSystemSecurity.SetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: SetAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Imposta la regola di controllo specificato per il file o directory corrente."
  remarks: "Il metodo SetAuditRule aggiunge la regola di controllo specificata o sovrascrive qualsiasi regola di controllo identica corrispondente il <xref:System.Security.AccessControl.FileSystemRights>valore il `rule` parametro.</xref:System.Security.AccessControl.FileSystemRights>  Ad esempio, se il `rule` parametro specifica un <xref:System.Security.AccessControl.FileSystemRights>valore e il metodo SetAuditRule individua una regola di controllo identica che specifica il <xref:System.Security.AccessControl.FileSystemRights>valore, la regola identica verrà sovrascritta.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Se il metodo SetAuditRule individua una regola di controllo identica che specifica il <xref:System.Security.AccessControl.FileSystemRights>valore, la regola identica non verrà sovrascritta.</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "Oggetto <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> oggetto che rappresenta una regola di controllo da impostare per un file o directory."
  overload: System.Security.AccessControl.FileSystemSecurity.SetAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.NativeObjectSecurity
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemAccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemAccessRule
  nameWithType: FileSystemAccessRule
  fullName: System.Security.AccessControl.FileSystemAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemAuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemAuditRule
  nameWithType: FileSystemAuditRule
  fullName: System.Security.AccessControl.FileSystemAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleAll(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleAll(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: ResetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: FileSystemSecurity.AccessRuleFactory
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: FileSystemSecurity.AddAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: FileSystemSecurity.AddAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: FileSystemSecurity.AuditRuleFactory
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: FileSystemSecurity.RemoveAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleAll
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: FileSystemSecurity.RemoveAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: FileSystemSecurity.ResetAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: FileSystemSecurity.SetAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: FileSystemSecurity.SetAuditRule
