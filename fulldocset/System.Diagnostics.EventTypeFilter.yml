### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.EventTypeFilter
  id: EventTypeFilter
  children:
  - System.Diagnostics.EventTypeFilter.#ctor(System.Diagnostics.SourceLevels)
  - System.Diagnostics.EventTypeFilter.EventType
  - System.Diagnostics.EventTypeFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])
  langs:
  - csharp
  name: EventTypeFilter
  nameWithType: EventTypeFilter
  fullName: System.Diagnostics.EventTypeFilter
  type: Class
  summary: "Indica se un listener deve analizzare in base al tipo di evento."
  remarks: "One of several different types of filters can be assigned to a trace listener through the <xref:System.Diagnostics.TraceListener.Filter%2A> property to provide a layer of screening beyond that provided by the <xref:System.Diagnostics.TraceSwitch>. The filter can be used to control the event types that are produced by the listener.  \n  \n This class filters events based on the value of the <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property.  This property can be set by code or in a configuration file to specify the event type of messages that should be traced by the listener. The value of the property indicates the threshold at which to begin tracing. Event types at and above the specified level are traced. The <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> method, called by listeners  to determine if an event should be traced, uses the value of the <xref:System.Diagnostics.EventTypeFilter.EventType%2A> property.  \n  \n To set the event type at which to begin tracing, edit the configuration file that corresponds to the name of your application. Within this file, you can add a listener, set its filter type, and specify the event type to trace. The configuration file should be formatted as follows.  \n  \n```  \n<configuration>  \n  <system.diagnostics>  \n    <sharedListeners>  \n      <add name=\"Console\" type=\"System.Diagnostics.ConsoleTraceListener\">  \n        <filter type=\"System.Diagnostics.EventTypeFilter\"   \n          initializeData=\"Warning\" />  \n      </add>  \n    </sharedListeners>  \n  </system.diagnostics>  \n</configuration>  \n```  \n  \n For more information about how to initialize data for an EventTypeFilter, see [\\&lt;filter\\&gt;](../Topic/%3Cfilter%3E%20Element%20for%20%3Cadd%3E%20for%20%3CsharedListeners%3E.md)."
  syntax:
    content: 'public class EventTypeFilter : System.Diagnostics.TraceFilter'
  inheritance:
  - System.Object
  - System.Diagnostics.TraceFilter
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.EventTypeFilter.#ctor(System.Diagnostics.SourceLevels)
  id: '#ctor(System.Diagnostics.SourceLevels)'
  parent: System.Diagnostics.EventTypeFilter
  langs:
  - csharp
  name: EventTypeFilter(SourceLevels)
  nameWithType: EventTypeFilter.EventTypeFilter(SourceLevels)
  fullName: System.Diagnostics.EventTypeFilter.EventTypeFilter(SourceLevels)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Diagnostics.EventTypeFilter&quot;> </xref> classe."
  remarks: "Il valore di `level` parametro viene utilizzato per inizializzare il <xref:System.Diagnostics.EventTypeFilter.EventType%2A>proprietà.</xref:System.Diagnostics.EventTypeFilter.EventType%2A>"
  syntax:
    content: public EventTypeFilter (System.Diagnostics.SourceLevels level);
    parameters:
    - id: level
      type: System.Diagnostics.SourceLevels
      description: "Combinazione bit per bit di <xref href=&quot;System.Diagnostics.SourceLevels&quot;> </xref> valori che specifica il tipo di evento di traccia dei messaggi."
  overload: System.Diagnostics.EventTypeFilter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventTypeFilter.EventType
  id: EventType
  parent: System.Diagnostics.EventTypeFilter
  langs:
  - csharp
  name: EventType
  nameWithType: EventTypeFilter.EventType
  fullName: System.Diagnostics.EventTypeFilter.EventType
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ottiene o imposta il tipo di evento dei messaggi di traccia."
  remarks: "La proprietà EventType indica il livello in corrispondenza del quale tracciare."
  syntax:
    content: public System.Diagnostics.SourceLevels EventType { get; set; }
    return:
      type: System.Diagnostics.SourceLevels
      description: "Combinazione bit per bit di <xref href=&quot;System.Diagnostics.SourceLevels&quot;> </xref> valori."
  overload: System.Diagnostics.EventTypeFilter.EventType*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventTypeFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])
  id: ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])
  parent: System.Diagnostics.EventTypeFilter
  langs:
  - csharp
  name: ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])
  nameWithType: EventTypeFilter.ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])
  fullName: System.Diagnostics.EventTypeFilter.ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Determina se il listener di traccia deve analizzare l&quot;evento."
  remarks: "Se il valore di `eventType` parametro è maggiore o uguale al valore del <xref:System.Diagnostics.EventTypeFilter.EventType%2A>proprietà, il metodo restituisce `true`.</xref:System.Diagnostics.EventTypeFilter.EventType%2A>"
  syntax:
    content: public override bool ShouldTrace (System.Diagnostics.TraceEventCache cache, string source, System.Diagnostics.TraceEventType eventType, int id, string formatOrMessage, object[] args, object data1, object[] data);
    parameters:
    - id: cache
      type: System.Diagnostics.TraceEventCache
      description: "Oggetto <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> che rappresenta la cache di informazioni per l&quot;evento di traccia."
    - id: source
      type: System.String
      description: "Il nome dell&quot;origine."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Uno del <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valori."
    - id: id
      type: System.Int32
      description: "Un numero di identificazione di traccia."
    - id: formatOrMessage
      type: System.String
      description: "Il formato da utilizzare per la scrittura di una matrice di argomenti o un messaggio da scrivere."
    - id: args
      type: System.Object[]
      description: "Matrice di oggetti argomento."
    - id: data1
      type: System.Object
      description: "Un oggetto dati di traccia."
    - id: data
      type: System.Object[]
      description: "Matrice di oggetti di dati di traccia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la traccia deve essere prodotta; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.EventTypeFilter.ShouldTrace*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TraceFilter
  isExternal: false
  name: System.Diagnostics.TraceFilter
- uid: System.Diagnostics.EventTypeFilter.#ctor(System.Diagnostics.SourceLevels)
  parent: System.Diagnostics.EventTypeFilter
  isExternal: false
  name: EventTypeFilter(SourceLevels)
  nameWithType: EventTypeFilter.EventTypeFilter(SourceLevels)
  fullName: System.Diagnostics.EventTypeFilter.EventTypeFilter(SourceLevels)
- uid: System.Diagnostics.SourceLevels
  parent: System.Diagnostics
  isExternal: false
  name: SourceLevels
  nameWithType: SourceLevels
  fullName: System.Diagnostics.SourceLevels
- uid: System.Diagnostics.EventTypeFilter.EventType
  parent: System.Diagnostics.EventTypeFilter
  isExternal: false
  name: EventType
  nameWithType: EventTypeFilter.EventType
  fullName: System.Diagnostics.EventTypeFilter.EventType
- uid: System.Diagnostics.EventTypeFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])
  parent: System.Diagnostics.EventTypeFilter
  isExternal: false
  name: ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])
  nameWithType: EventTypeFilter.ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])
  fullName: System.Diagnostics.EventTypeFilter.ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.EventTypeFilter.#ctor*
  parent: System.Diagnostics.EventTypeFilter
  isExternal: false
  name: EventTypeFilter
  nameWithType: EventTypeFilter.EventTypeFilter
- uid: System.Diagnostics.EventTypeFilter.EventType*
  parent: System.Diagnostics.EventTypeFilter
  isExternal: false
  name: EventType
  nameWithType: EventTypeFilter.EventType
- uid: System.Diagnostics.EventTypeFilter.ShouldTrace*
  parent: System.Diagnostics.EventTypeFilter
  isExternal: false
  name: ShouldTrace
  nameWithType: EventTypeFilter.ShouldTrace
