### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.ObjectCache
  id: ObjectCache
  children:
  - System.Runtime.Caching.ObjectCache.#ctor
  - System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  - System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)
  - System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  - System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  - System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)
  - System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  - System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)
  - System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)
  - System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
  - System.Runtime.Caching.ObjectCache.Get(System.String,System.String)
  - System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)
  - System.Runtime.Caching.ObjectCache.GetCount(System.String)
  - System.Runtime.Caching.ObjectCache.GetEnumerator
  - System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)
  - System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])
  - System.Runtime.Caching.ObjectCache.Host
  - System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
  - System.Runtime.Caching.ObjectCache.Item(System.String)
  - System.Runtime.Caching.ObjectCache.Name
  - System.Runtime.Caching.ObjectCache.NoSlidingExpiration
  - System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)
  - System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  - System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)
  - System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  - System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  - System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: ObjectCache
  nameWithType: ObjectCache
  fullName: System.Runtime.Caching.ObjectCache
  type: Class
  summary: "Rappresenta una cache degli oggetti e fornisce i metodi di base e le proprietà per l&quot;accesso a cache oggetti."
  remarks: "Il tipo ObjectCache è il tipo principale per la cache di oggetti in memoria. Per sviluppare un&quot;implementazione personalizzata della cache, si deriva dalla classe ObjectCache.      > [!NOTE] > ObjectCache la classe è una novità di come il [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)].       Incorporata <xref:System.Runtime.Caching.MemoryCache>classe deriva dalla classe ObjectCache.</xref:System.Runtime.Caching.MemoryCache> La <xref:System.Runtime.Caching.MemoryCache>classe è l&quot;implementazione di cache oggetto concreto solo nel [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] che deriva dalla classe ObjectCache.</xref:System.Runtime.Caching.MemoryCache>"
  syntax:
    content: 'public abstract class ObjectCache : System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.#ctor
  id: '#ctor'
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: ObjectCache()
  nameWithType: ObjectCache.ObjectCache()
  fullName: System.Runtime.Caching.ObjectCache.ObjectCache()
  type: Constructor
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Chiamato dai costruttori nelle classi derivate per inizializzare il <xref href=&quot;System.Runtime.Caching.ObjectCache&quot;> </xref> classe."
  syntax:
    content: protected ObjectCache ();
    parameters: []
  overload: System.Runtime.Caching.ObjectCache.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  id: Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Add(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.Add(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.Add(CacheItem,CacheItemPolicy)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Quando sottoposto a override in una classe derivata, tenta di inserire una voce della cache nella cache come una <xref href=&quot;System.Runtime.Caching.CacheItem&quot;> </xref> istanza e aggiunge i dettagli sulla modalità con cui deve essere eliminata la voce."
  remarks: "Il <xref:System.Runtime.Caching.ObjectCache.Add%2A>overload del metodo sono virtuali (non astratti) sulla <xref:System.Runtime.Caching.ObjectCache>classe, poiché il <xref:System.Runtime.Caching.ObjectCache.Add%2A>metodo chiama internamente <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> </xref:System.Runtime.Caching.ObjectCache.Add%2A> </xref:System.Runtime.Caching.ObjectCache> </xref:System.Runtime.Caching.ObjectCache.Add%2A> In questo modo si riduce il numero di overload del metodo che deve fornire un implementatore della cache. Se un&quot;implementazione della cache non richiede alcun comportamento speciale per il <xref:System.Runtime.Caching.ObjectCache.Add%2A>(metodo), è sufficiente implementare il <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>overload del metodo.</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> </xref:System.Runtime.Caching.ObjectCache.Add%2A>"
  syntax:
    content: public virtual bool Add (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);
    parameters:
    - id: item
      type: System.Runtime.Caching.CacheItem
      description: "Oggetto da aggiungere."
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "Oggetto che contiene i dettagli sull&quot;eliminazione della voce della cache. Questo oggetto fornisce più opzioni per l&quot;eliminazione di una semplice scadenza assoluta."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;inserimento ha avuto esito positivo, o <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se è presente un già una voce nella cache con la stessa chiave <code> item </code>."
  overload: System.Runtime.Caching.ObjectCache.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)
  id: Add(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Add(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.Add(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.Add(String,Object,DateTimeOffset,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Quando sottoposto a override in una classe derivata, inserisce una voce della cache nella cache senza sovrascrivere qualsiasi voce della cache esistente."
  remarks: "Il <xref:System.Runtime.Caching.ObjectCache.Add%2A>overload del metodo sono virtuali (non astratti) sulla <xref:System.Runtime.Caching.ObjectCache>classe, poiché il <xref:System.Runtime.Caching.ObjectCache.Add%2A>metodo chiama internamente <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> </xref:System.Runtime.Caching.ObjectCache.Add%2A> </xref:System.Runtime.Caching.ObjectCache> </xref:System.Runtime.Caching.ObjectCache.Add%2A> In questo modo si riduce il numero di overload del metodo che deve fornire un implementatore della cache. Se un&quot;implementazione della cache non richiede alcun comportamento speciale per il <xref:System.Runtime.Caching.ObjectCache.Add%2A>(metodo), è sufficiente implementare il <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>overload del metodo.</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> </xref:System.Runtime.Caching.ObjectCache.Add%2A>"
  syntax:
    content: public virtual bool Add (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "Identificatore univoco della voce della cache."
    - id: value
      type: System.Object
      description: "Oggetto da inserire."
    - id: absoluteExpiration
      type: System.DateTimeOffset
      description: "La data e ora fisse in cui scadrà la voce della cache. Questo parametro è obbligatorio quando il <xref:System.Runtime.Caching.ObjectCache.Add*>metodo viene chiamato.</xref:System.Runtime.Caching.ObjectCache.Add*>"
    - id: regionName
      type: System.String
      description: "Facoltativa. Area denominata nella cache a cui è possibile aggiungere la voce della cache, se le aree vengono implementate. Poiché le aree non sono implementate in [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;inserimento ha avuto esito positivo, o <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se è presente un già una voce nella cache con la stessa chiave <code> key </code>."
  overload: System.Runtime.Caching.ObjectCache.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  id: Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Add(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.Add(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.Add(String,Object,CacheItemPolicy,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Quando sottoposto a override in una classe derivata, inserisce una voce della cache nella cache, specificando le informazioni sulla modalità di eliminazione la voce."
  remarks: "Il <xref:System.Runtime.Caching.ObjectCache.Add%2A>overload del metodo sono virtuali (non astratti) sulla <xref:System.Runtime.Caching.ObjectCache>classe, poiché il <xref:System.Runtime.Caching.ObjectCache.Add%2A>metodo chiama internamente <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>.</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> </xref:System.Runtime.Caching.ObjectCache.Add%2A> </xref:System.Runtime.Caching.ObjectCache> </xref:System.Runtime.Caching.ObjectCache.Add%2A> In questo modo si riduce il numero di overload del metodo che deve fornire un implementatore della cache. Se un&quot;implementazione della cache non richiede alcun comportamento speciale per il <xref:System.Runtime.Caching.ObjectCache.Add%2A>(metodo), è sufficiente implementare il <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>overload del metodo.</xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> </xref:System.Runtime.Caching.ObjectCache.Add%2A>"
  syntax:
    content: public virtual bool Add (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "Identificatore univoco della voce della cache."
    - id: value
      type: System.Object
      description: "Oggetto da inserire."
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "Oggetto che contiene i dettagli sull&quot;eliminazione della voce della cache. Questo oggetto fornisce più opzioni per l&quot;eliminazione di una semplice scadenza assoluta."
    - id: regionName
      type: System.String
      description: "Facoltativa. Area denominata nella cache a cui è possibile aggiungere la voce della cache, se le aree vengono implementate. Il valore predefinito per il parametro facoltativo è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il tentativo di inserimento ha esito positivo, o <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se è presente un già una voce nella cache con la stessa chiave come <code> key </code>."
  overload: System.Runtime.Caching.ObjectCache.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  id: AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: AddOrGetExisting(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.AddOrGetExisting(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(CacheItem,CacheItemPolicy)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Quando sottoposto a override in una classe derivata, inserisce l&quot;oggetto specificato <xref href=&quot;System.Runtime.Caching.CacheItem&quot;> </xref> oggetto nella cache, specificando le informazioni sulla modalità di eliminazione la voce."
  syntax:
    content: public abstract System.Runtime.Caching.CacheItem AddOrGetExisting (System.Runtime.Caching.CacheItem value, System.Runtime.Caching.CacheItemPolicy policy);
    parameters:
    - id: value
      type: System.Runtime.Caching.CacheItem
      description: "Oggetto da inserire."
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "Oggetto che contiene i dettagli sull&quot;eliminazione della voce della cache. Questo oggetto fornisce più opzioni per l&quot;eliminazione di una semplice scadenza assoluta."
    return:
      type: System.Runtime.Caching.CacheItem
      description: "Se esiste una voce della cache con la stessa chiave, la voce della cache specificata. in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Caching.ObjectCache.AddOrGetExisting*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)
  id: AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: AddOrGetExisting(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.AddOrGetExisting(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(String,Object,DateTimeOffset,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Quando sottoposto a override in una classe derivata, inserisce una voce della cache nella cache, utilizzando una chiave, un oggetto per la voce della cache, un valore di scadenza assoluta e un&quot;area facoltativa per aggiungere la cache."
  remarks: "Questo overload del metodo AddOrGetExisting restituisce un valore di oggetto, non un <xref:System.Runtime.Caching.CacheItem>oggetto.</xref:System.Runtime.Caching.CacheItem>"
  syntax:
    content: public abstract object AddOrGetExisting (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "Identificatore univoco della voce della cache."
    - id: value
      type: System.Object
      description: "Oggetto da inserire."
    - id: absoluteExpiration
      type: System.DateTimeOffset
      description: "La data e ora fisse in cui scadrà la voce della cache."
    - id: regionName
      type: System.String
      description: "Facoltativa. Area denominata nella cache a cui è possibile aggiungere la voce della cache, se le aree vengono implementate. Il valore predefinito per il parametro facoltativo è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Se esiste una voce della cache con la stessa chiave, il valore della voce della cache specificata. in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Caching.ObjectCache.AddOrGetExisting*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  id: AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: AddOrGetExisting(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.AddOrGetExisting(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(String,Object,CacheItemPolicy,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Quando sottoposto a override in una classe derivata, inserisce una voce della cache nella cache, specificando una chiave e un valore per la voce della cache e informazioni sulla modalità di eliminazione la voce."
  remarks: "Il metodo AddOrGetExisting restituisce un valore di oggetto, non un <xref:System.Runtime.Caching.CacheItem>oggetto.</xref:System.Runtime.Caching.CacheItem>"
  syntax:
    content: public abstract object AddOrGetExisting (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "Identificatore univoco della voce della cache."
    - id: value
      type: System.Object
      description: "Oggetto da inserire."
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "Oggetto che contiene i dettagli sull&quot;eliminazione della voce della cache. Questo oggetto fornisce più opzioni per l&quot;eliminazione di una semplice scadenza assoluta."
    - id: regionName
      type: System.String
      description: "Facoltativa. Area denominata nella cache a cui è possibile aggiungere la voce della cache, se le aree vengono implementate. Il valore predefinito per il parametro facoltativo è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Se esiste una voce della cache con la stessa chiave, il valore della voce della cache specificata. in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Caching.ObjectCache.AddOrGetExisting*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)
  id: Contains(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Contains(String,String)
  nameWithType: ObjectCache.Contains(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Contains(String,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Quando sottoposto a override in una classe derivata, controlla se la voce della cache esiste già nella cache."
  syntax:
    content: public abstract bool Contains (string key, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "Identificatore univoco della voce della cache."
    - id: regionName
      type: System.String
      description: "Facoltativa. Area denominata nella cache in cui è possibile trovare la cache, se le aree vengono implementate. Il valore predefinito per il parametro facoltativo è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la cache contiene una voce della cache con lo stesso valore di chiave <code> key </code>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Caching.ObjectCache.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)
  id: CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  nameWithType: ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  fullName: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Quando sottoposto a override in una classe derivata, crea un <xref href=&quot;System.Runtime.Caching.CacheEntryChangeMonitor&quot;> </xref> oggetto che consente di generare eventi in risposta alle modifiche apportate alle voci della cache specificate."
  remarks: "Quando un oggetto derivato <xref:System.Runtime.Caching.ObjectCache>classe esegue l&quot;override del metodo di base CreateCacheEntryChangeMonitor, l&quot;implementazione della cache è necessario creare un <xref:System.Runtime.Caching.CacheEntryChangeMonitor>oggetto.</xref:System.Runtime.Caching.CacheEntryChangeMonitor> </xref:System.Runtime.Caching.ObjectCache> Questo monitoraggio delle modifiche specializzato notifica ai chiamanti quando sono presenti modifiche alle voci della cache specificate nel `keys` parametro. Ad esempio, se un elemento monitorato nel `keys` parametro viene aggiornato o rimosso dalla cache, il monitoraggio delle modifiche creato da questo metodo genera un evento.       Se un&quot;implementazione della cache supporta le aree della cache denominata, è possibile specificare un valore stringa come il `regionName` parametro. In caso contrario, il parametro di valore predefinito è `null`.      > [!NOTE] > Non tutte le implementazioni di cache supportano i monitoraggi di modifica voce della cache. Per determinare se supporta l&quot;implementazione di cache <xref:System.Runtime.Caching.CacheEntryChangeMonitor>degli oggetti, vedere la documentazione per l&quot;implementazione della cache specifica.</xref:System.Runtime.Caching.CacheEntryChangeMonitor>"
  syntax:
    content: public abstract System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor (System.Collections.Generic.IEnumerable<string> keys, string regionName = null);
    parameters:
    - id: keys
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Gli identificatori univoci per le voci della cache per il monitoraggio."
    - id: regionName
      type: System.String
      description: "Facoltativa. Area denominata nella cache in cui le chiavi della cache nel `keys` parametro esiste, se le aree vengono implementate. Il valore predefinito per il parametro facoltativo è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Runtime.Caching.CacheEntryChangeMonitor
      description: "Monitoraggio delle modifiche che monitora le voci della cache nella cache."
  overload: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
  id: DefaultCacheCapabilities
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: DefaultCacheCapabilities
  nameWithType: ObjectCache.DefaultCacheCapabilities
  fullName: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Quando sottoposto a override in una classe derivata, ottiene una descrizione delle funzionalità che fornisce un&quot;implementazione della cache."
  syntax:
    content: public abstract System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities { get; }
    return:
      type: System.Runtime.Caching.DefaultCacheCapabilities
      description: "Combinazione bit per bit di flag che indicano le funzionalità predefinite di un&quot;implementazione della cache."
  overload: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Get(System.String,System.String)
  id: Get(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Get(String,String)
  nameWithType: ObjectCache.Get(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Get(String,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Quando sottoposto a override in una classe derivata, ottiene la voce della cache specificata dalla cache come oggetto."
  syntax:
    content: public abstract object Get (string key, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "Identificatore univoco della voce della cache da ottenere."
    - id: regionName
      type: System.String
      description: "Facoltativa. Area denominata nella cache a cui è stata aggiunta la voce della cache, se le aree vengono implementate. Il valore predefinito per il parametro facoltativo è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "La voce della cache identificata da <code> key </code>."
  overload: System.Runtime.Caching.ObjectCache.Get*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)
  id: GetCacheItem(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetCacheItem(String,String)
  nameWithType: ObjectCache.GetCacheItem(String,String)
  fullName: System.Runtime.Caching.ObjectCache.GetCacheItem(String,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Quando sottoposto a override in una classe derivata, ottiene la voce della cache specificata dalla cache come una <xref href=&quot;System.Runtime.Caching.CacheItem&quot;> </xref> istanza."
  remarks: "Questo overload del metodo esiste perché alcune implementazioni della cache potrebbero estendere la <xref:System.Runtime.Caching.CacheItem>classe.</xref:System.Runtime.Caching.CacheItem> In tal caso, il <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29>overload del metodo non restituirà necessariamente tutte le informazioni sui dati memorizzati nella cache.</xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> Tuttavia, l&quot;overload del metodo GetCacheItem consente alle cache personalizzate restituire solo il valore di cache.       Il metodo GetCacheItem è come il <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29>metodo, ad eccezione del fatto che il metodo GetCacheItem restituisce la voce della cache come una <xref:System.Runtime.Caching.CacheItem>istanza.</xref:System.Runtime.Caching.CacheItem> </xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29>"
  syntax:
    content: public abstract System.Runtime.Caching.CacheItem GetCacheItem (string key, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "Identificatore univoco della voce della cache da ottenere."
    - id: regionName
      type: System.String
      description: "Facoltativa. Area denominata nella cache a cui è stata aggiunta la cache, se le aree vengono implementate. Poiché le aree non sono implementate in [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Runtime.Caching.CacheItem
      description: "La voce della cache identificata da <code> key </code>."
  overload: System.Runtime.Caching.ObjectCache.GetCacheItem*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetCount(System.String)
  id: GetCount(System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetCount(String)
  nameWithType: ObjectCache.GetCount(String)
  fullName: System.Runtime.Caching.ObjectCache.GetCount(String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Quando sottoposto a override in una classe derivata, ottiene il numero totale di voci della cache nella cache."
  syntax:
    content: public abstract long GetCount (string regionName = null);
    parameters:
    - id: regionName
      type: System.String
      description: "Facoltativa. Area denominata nella cache per il quale deve essere calcolato il conteggio della voce della cache, se le aree vengono implementate. Il valore predefinito per il parametro facoltativo è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int64
      description: "Il numero di voci della cache nella cache. Se <code> regionName </code> non <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, il conteggio indica il numero di voci nell&quot;area della cache specificata."
  overload: System.Runtime.Caching.ObjectCache.GetCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetEnumerator
  id: GetEnumerator
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ObjectCache.GetEnumerator()
  fullName: System.Runtime.Caching.ObjectCache.GetEnumerator()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Quando sottoposto a override in una classe derivata, crea un enumeratore che può essere utilizzato per scorrere una raccolta di voci della cache."
  remarks: "I responsabili dell&quot;implementazione della cache può eseguire l&quot;override ed estendere questo metodo per fornire un sistema personalizzato di scorre una raccolta di voci della cache.      > [!NOTE] > Restituisce un enumeratore, in genere è un&quot;operazione più dispendiosa rispetto alla restituzione della voce della cache intera.       Questo metodo viene chiamato dalle implementazioni esplicite dell&quot;interfaccia che la <xref:System.Runtime.Caching.ObjectCache>classe dispone per il <xref:System.Collections.IEnumerable.GetEnumerator%2A>e <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>metodi.</xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> </xref:System.Collections.IEnumerable.GetEnumerator%2A> </xref:System.Runtime.Caching.ObjectCache>"
  syntax:
    content: protected abstract System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "Oggetto enumeratore che consente di accedere alle voci della cache nella cache."
  overload: System.Runtime.Caching.ObjectCache.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)
  id: GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetValues(IEnumerable<String>,String)
  nameWithType: ObjectCache.GetValues(IEnumerable<String>,String)
  fullName: System.Runtime.Caching.ObjectCache.GetValues(IEnumerable<String>,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Quando sottoposto a override in una classe derivata, ottiene un set di voci della cache corrispondenti alle chiavi specificate."
  remarks: "L&quot;overload del metodo GetValues è un&quot;ottimizzazione delle prestazioni per le cache distribuite che supportano il recupero di più voci nella cache dalla cache durante una singola chiamata di rete.       Anche se un chiamante può passare uno o più chiavi per il metodo, non è possibile garantire che tutte le chiavi rappresentano le voci nella cache. Pertanto, il dizionario restituito potrebbe contenere elementi minore rispetto al numero di chiavi che sono stati passati al metodo."
  syntax:
    content: public abstract System.Collections.Generic.IDictionary<string,object> GetValues (System.Collections.Generic.IEnumerable<string> keys, string regionName = null);
    parameters:
    - id: keys
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Una raccolta di identificatori univoci delle voci della cache da ottenere."
    - id: regionName
      type: System.String
      description: "Facoltativa. Area denominata nella cache a cui sono stati aggiunti i movimenti cache, se le aree vengono implementate. Il valore predefinito per il parametro facoltativo è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "Un dizionario di coppie chiave/valore che rappresentano le voci della cache."
  overload: System.Runtime.Caching.ObjectCache.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])
  id: GetValues(System.String,System.String[])
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: GetValues(String,String[])
  nameWithType: ObjectCache.GetValues(String,String[])
  fullName: System.Runtime.Caching.ObjectCache.GetValues(String,String[])
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Ottiene un set di voci della cache corrispondenti alle chiavi specificate."
  remarks: "L&quot;overload del metodo GetValues è ad esempio il <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29>overload del metodo, ma consente di passare l&quot;area denominata tramite sintassi del parametro facoltativo che è supportata dai linguaggi gestiti, ad esempio c#.</xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29>       Questo metodo è un metodo virtuale perché il <xref:System.Runtime.Caching.ObjectCache>classe fornisce un&quot;implementazione predefinita che passa il `params` matrice il <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29>overload del metodo.</xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29> </xref:System.Runtime.Caching.ObjectCache>"
  syntax:
    content: public virtual System.Collections.Generic.IDictionary<string,object> GetValues (string regionName, string[] keys);
    parameters:
    - id: regionName
      type: System.String
      description: "Facoltativa. Area denominata nella cache a cui sono stati aggiunti i movimenti cache, se le aree vengono implementate. Poiché le aree non sono implementate in [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: keys
      type: System.String[]
      description: "Una raccolta di identificatori univoci delle voci della cache da ottenere."
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "Un dizionario di coppie chiave/valore che rappresentano le voci della cache."
  overload: System.Runtime.Caching.ObjectCache.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Host
  id: Host
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Host
  nameWithType: ObjectCache.Host
  fullName: System.Runtime.Caching.ObjectCache.Host
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Ottiene o imposta un riferimento a un ambiente di hosting gestito che è disponibile per <xref href=&quot;System.Runtime.Caching.ObjectCache&quot;> </xref> implementazioni e che può fornire servizi di specifica dell&quot;host a <xref href=&quot;System.Runtime.Caching.ObjectCache&quot;> </xref> implementazioni."
  remarks: "La proprietà dell&quot;Host deve essere utilizzato da [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] ambienti host e dalle implementazioni di cache che implementano il comportamento che dipende da .NET Framework ospitare l&quot;ambiente.       Nella tabella seguente elenca il set di servizi di ambiente host che potrebbero essere disponibili per un ambiente host gestito e che sono disponibili per <xref:System.Runtime.Caching.ObjectCache>implementazioni tramite la proprietà dell&quot;Host: | Servizio | Descrizione |   |-------------|-----------------|   | <xref:System.Runtime.Caching.Hosting.IApplicationIdentifier>| Consente agli ambienti host agli identificatori di dominio di applicazione che potrebbero essere necessari per un&quot;implementazione della cache per le funzionalità quali l&quot;identificazione dei contatori delle prestazioni. |   | <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>| Consente di fornire un sistema di notifica di modifica di file personalizzati, anziché quello fornito in ambienti host il [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. |   | <xref:System.Runtime.Caching.Hosting.IMemoryCacheManager>| Consente l&quot;utilizzo della memoria cache di cache implementazioni report all&quot;ambiente host.</xref:System.Runtime.Caching.Hosting.IMemoryCacheManager> </xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> </xref:System.Runtime.Caching.Hosting.IApplicationIdentifier> </xref:System.Runtime.Caching.ObjectCache> In questo modo, gli ambienti host gestire l&quot;utilizzo della memoria tra più implementazioni della cache. |      > [!NOTE] > I chiamanti del valore di questa proprietà richiedono autorizzazioni di sicurezza di accesso di codice senza restrizioni."
  syntax:
    content: public static IServiceProvider Host { get; set; }
    return:
      type: System.IServiceProvider
      description: "Un riferimento a un ambiente host gestito in grado di riconoscere cache."
  overload: System.Runtime.Caching.ObjectCache.Host*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "È il valore assegnato alla proprietà <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di impostare il valore della proprietà più di una volta."
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
  id: InfiniteAbsoluteExpiration
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: InfiniteAbsoluteExpiration
  nameWithType: ObjectCache.InfiniteAbsoluteExpiration
  fullName: System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
  type: Field
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Ottiene un valore che indica che una voce della cache non dispone di alcuna scadenza assoluta."
  remarks: "Una voce della cache che viene inserita nella cache con il valore di campo InfiniteAbsoluteExpiration impostato come valore di scadenza non deve mai scadere basato su un punto assoluto nel tempo. Tuttavia, una voce della cache con questa impostazione può essere rimossa dalla cache per altri motivi che dipendono da un&quot;implementazione specifica della cache, ad esempio una rimozione di eventi di monitoraggio delle modifiche dovuta a pressione della memoria."
  syntax:
    content: public static readonly DateTimeOffset InfiniteAbsoluteExpiration;
    return:
      type: System.DateTimeOffset
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Item(System.String)
  id: Item(System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Item(String)
  nameWithType: ObjectCache.Item(String)
  fullName: System.Runtime.Caching.ObjectCache.Item(String)
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Ottiene o imposta l&quot;indicizzatore predefinito per il <xref href=&quot;System.Runtime.Caching.ObjectCache&quot;> </xref> classe."
  remarks: "Il comportamento della funzione di accesso set della proprietà non è ad esempio il <xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29>metodo.</xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29> Internamente, un&quot;implementazione della cache è stato possibile impostare la scadenza assoluta del valore specificato per il <xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration>metodo.</xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration> Tuttavia questo comportamento è in definitiva dall&quot;implementazione della cache.       Il comportamento della funzione di accesso get è simile alla chiamata di <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29>(metodo) e l&quot;utilizzo di `null` per il nome dell&quot;area.</xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29>"
  syntax:
    content: public abstract object this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: "Un identificatore univoco per una voce della cache nella cache."
    return:
      type: System.Object
      description: "Una chiave che funge da indicizzatore nell&quot;istanza di cache."
  overload: System.Runtime.Caching.ObjectCache.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Name
  id: Name
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Name
  nameWithType: ObjectCache.Name
  fullName: System.Runtime.Caching.ObjectCache.Name
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Ottiene il nome di uno specifico <xref href=&quot;System.Runtime.Caching.ObjectCache&quot;> </xref> istanza."
  remarks: "Alcune implementazioni della cache potrebbero supportare più istanze della cache che è in esecuzione in una singola applicazione. Questa proprietà consente i responsabili dell&quot;implementazione della cache di restituire un nome che identifica un&quot;istanza di cache specifica."
  syntax:
    content: public abstract string Name { get; }
    return:
      type: System.String
      description: "Il nome di un&quot;istanza di cache specifica."
  overload: System.Runtime.Caching.ObjectCache.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.NoSlidingExpiration
  id: NoSlidingExpiration
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: NoSlidingExpiration
  nameWithType: ObjectCache.NoSlidingExpiration
  fullName: System.Runtime.Caching.ObjectCache.NoSlidingExpiration
  type: Field
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Indica che una voce della cache non dispone di alcuna scadenza variabile."
  remarks: "Scadenza che dipende dalla durata o un intervallo di tempo definito è detta anche la scadenza variabile. In genere, un&quot;implementazione della cache che rimuove gli elementi che si basano su una scadenza variabile rimuoverà un elemento che non vengono visualizzato nella finestra di tempo specificata.       Una voce della cache che viene inserita nella cache con il valore di campo NoSlidingExpiration impostato come valore di scadenza non deve mai essere eliminata a causa di inattività in una finestra temporale scorrevole. Tuttavia, un elemento della cache può essere rimossa se ha una scadenza assoluta o se si verifica un altro evento di rimozione, tale modifica monitoraggio pressione una o memoria."
  syntax:
    content: public static readonly TimeSpan NoSlidingExpiration;
    return:
      type: System.TimeSpan
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)
  id: Remove(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Remove(String,String)
  nameWithType: ObjectCache.Remove(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Remove(String,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Quando sottoposto a override in una classe derivata, rimuove la voce della cache dalla cache."
  remarks: "Se si esegue l&quot;override questo metodo in un&quot;implementazione della cache personalizzato, se è presente una voce della cache nella cache che corrisponde a `key`, deve essere restituito il valore dell&quot;elemento rimosso. Se non è stato rimosso dalla cache, il metodo deve restituire `null`.      > [!NOTE] > Alcune implementazioni di cache distribuita potrebbero non supportare la possibilità di restituire il valore è stato rimosso dalla cache. È possibile perché l&quot;implementazione della cache non supporta la restituzione del valore di un elemento della cache rimossa. È anche possibile che il marshalling dell&quot;oggetto come valore restituito è troppo costoso. In questi casi, possono restituire le implementazioni della cache `null`."
  syntax:
    content: public abstract object Remove (string key, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "Identificatore univoco della voce della cache."
    - id: regionName
      type: System.String
      description: "Facoltativa. Area denominata nella cache a cui è stata aggiunta la voce della cache, se le aree vengono implementate. Il valore predefinito per il parametro facoltativo è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Oggetto che rappresenta il valore della voce della cache rimossa che è stata specificata la chiave, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se la voce specificata non è stata trovata."
  overload: System.Runtime.Caching.ObjectCache.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  id: Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Set(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.Set(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.Set(CacheItem,CacheItemPolicy)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Quando sottoposto a override in una classe derivata, inserisce una voce della cache nella cache come una <xref href=&quot;System.Runtime.Caching.CacheItem&quot;> </xref> istanza, specificando le informazioni sulla modalità di eliminazione la voce."
  remarks: "Se la chiave per `item` non esiste, `item` viene inserito come una nuova voce di cache. Se un elemento con una chiave corrispondente `item` esiste, il valore da `item` viene utilizzato per aggiornare o sovrascrivere il valore della voce della cache esistente."
  syntax:
    content: public abstract void Set (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);
    parameters:
    - id: item
      type: System.Runtime.Caching.CacheItem
      description: "L&quot;elemento della cache da aggiungere."
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "Oggetto che contiene i dettagli sull&quot;eliminazione della voce della cache. Questo oggetto fornisce più opzioni per l&quot;eliminazione di una semplice scadenza assoluta."
  overload: System.Runtime.Caching.ObjectCache.Set*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)
  id: Set(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Set(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.Set(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.Set(String,Object,DateTimeOffset,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Quando sottoposto a override in una classe derivata, inserisce una voce della cache nella cache, che specifica i dettagli della scadenza basati sul tempo."
  remarks: "Se un elemento che corrisponde a `key` non esiste nella cache, `value` e `key` consentono di inserire in una nuova voce di cache. Se un elemento con una chiave corrispondente `item` esiste, la voce della cache viene aggiornata o sovrascritta tramite `value`."
  syntax:
    content: public abstract void Set (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "Identificatore univoco della voce della cache."
    - id: value
      type: System.Object
      description: "Oggetto da inserire."
    - id: absoluteExpiration
      type: System.DateTimeOffset
      description: "La data e ora fisse in cui scadrà la voce della cache."
    - id: regionName
      type: System.String
      description: "Facoltativa. Area denominata nella cache a cui è possibile aggiungere la voce della cache, se le aree vengono implementate. Il valore predefinito per il parametro facoltativo è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Caching.ObjectCache.Set*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  id: Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: Set(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.Set(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.Set(String,Object,CacheItemPolicy,String)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Quando sottoposto a override in una classe derivata, inserisce una voce della cache nella cache."
  remarks: "Overload di questo metodo consente di fornire ulteriori dettagli di eliminazione o la scadenza rispetto a quelle disponibili in basati sull&quot;ora di scadenza assoluta.       Se un elemento che corrisponde a `key` non esiste nella cache, `value` e `key` consentono di inserire in una nuova voce di cache. Se un elemento con una chiave corrispondente `item` esiste, la voce della cache viene aggiornata o sovrascritta tramite `value`."
  syntax:
    content: public abstract void Set (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);
    parameters:
    - id: key
      type: System.String
      description: "Identificatore univoco della voce della cache."
    - id: value
      type: System.Object
      description: "Oggetto da inserire."
    - id: policy
      type: System.Runtime.Caching.CacheItemPolicy
      description: "Oggetto che contiene i dettagli sull&quot;eliminazione della voce della cache. Questo oggetto fornisce più opzioni per l&quot;eliminazione di una semplice scadenza assoluta."
    - id: regionName
      type: System.String
      description: "Facoltativa. Area denominata nella cache a cui è possibile aggiungere la voce della cache, se le aree vengono implementate. Il valore predefinito per il parametro facoltativo è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Caching.ObjectCache.Set*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  isEii: true
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: System.Collections.Generic.IEnumerable()
  nameWithType: ObjectCache.System.Collections.Generic.IEnumerable()
  fullName: System.Runtime.Caching.ObjectCache.System.Collections.Generic.IEnumerable()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  syntax:
    content: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> IEnumerable<KeyValuePair<string,object>>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "Da aggiungere."
  overload: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Runtime.Caching.ObjectCache
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ObjectCache.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Runtime.Caching.ObjectCache.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Supporta l&quot;iterazione in una raccolta generica."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando un oggetto derivato <xref:System.Runtime.Caching.ObjectCache>esegue il cast dell&quot;istanza di un <xref:System.Collections.IEnumerable>interfaccia.</xref:System.Collections.IEnumerable> </xref:System.Runtime.Caching.ObjectCache>       Gli sviluppatori possono utilizzare questo metodo per scorrere una raccolta generica di voci della cache.       Questa è l&quot;impostazione predefinita <xref:System.Collections.IEnumerable.GetEnumerator%2A>implementazione che chiama internamente il <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A>metodo.</xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A> </xref:System.Collections.IEnumerable.GetEnumerator%2A>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Oggetto enumeratore che fornisce accesso agli elementi nella cache."
  overload: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Runtime.Caching.ObjectCache.#ctor
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: ObjectCache()
  nameWithType: ObjectCache.ObjectCache()
  fullName: System.Runtime.Caching.ObjectCache.ObjectCache()
- uid: System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Add(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.Add(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.Add(CacheItem,CacheItemPolicy)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Caching.CacheItem
  parent: System.Runtime.Caching
  isExternal: false
  name: CacheItem
  nameWithType: CacheItem
  fullName: System.Runtime.Caching.CacheItem
- uid: System.Runtime.Caching.CacheItemPolicy
  parent: System.Runtime.Caching
  isExternal: false
  name: CacheItemPolicy
  nameWithType: CacheItemPolicy
  fullName: System.Runtime.Caching.CacheItemPolicy
- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Add(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.Add(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.Add(String,Object,DateTimeOffset,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Add(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.Add(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.Add(String,Object,CacheItemPolicy,String)
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: AddOrGetExisting(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.AddOrGetExisting(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(CacheItem,CacheItemPolicy)
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: AddOrGetExisting(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.AddOrGetExisting(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(String,Object,DateTimeOffset,String)
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: AddOrGetExisting(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.AddOrGetExisting(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.AddOrGetExisting(String,Object,CacheItemPolicy,String)
- uid: System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Contains(String,String)
  nameWithType: ObjectCache.Contains(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Contains(String,String)
- uid: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  nameWithType: ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
  fullName: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(IEnumerable<String>,String)
- uid: System.Runtime.Caching.CacheEntryChangeMonitor
  parent: System.Runtime.Caching
  isExternal: false
  name: CacheEntryChangeMonitor
  nameWithType: CacheEntryChangeMonitor
  fullName: System.Runtime.Caching.CacheEntryChangeMonitor
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: DefaultCacheCapabilities
  nameWithType: ObjectCache.DefaultCacheCapabilities
  fullName: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities
- uid: System.Runtime.Caching.DefaultCacheCapabilities
  parent: System.Runtime.Caching
  isExternal: false
  name: DefaultCacheCapabilities
  nameWithType: DefaultCacheCapabilities
  fullName: System.Runtime.Caching.DefaultCacheCapabilities
- uid: System.Runtime.Caching.ObjectCache.Get(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Get(String,String)
  nameWithType: ObjectCache.Get(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Get(String,String)
- uid: System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetCacheItem(String,String)
  nameWithType: ObjectCache.GetCacheItem(String,String)
  fullName: System.Runtime.Caching.ObjectCache.GetCacheItem(String,String)
- uid: System.Runtime.Caching.ObjectCache.GetCount(System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetCount(String)
  nameWithType: ObjectCache.GetCount(String)
  fullName: System.Runtime.Caching.ObjectCache.GetCount(String)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Runtime.Caching.ObjectCache.GetEnumerator
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetEnumerator()
  nameWithType: ObjectCache.GetEnumerator()
  fullName: System.Runtime.Caching.ObjectCache.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<KeyValuePair<String,Object>>
  nameWithType: IEnumerator<KeyValuePair<String,Object>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetValues(IEnumerable<String>,String)
  nameWithType: ObjectCache.GetValues(IEnumerable<String>,String)
  fullName: System.Runtime.Caching.ObjectCache.GetValues(IEnumerable<String>,String)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetValues(String,String[])
  nameWithType: ObjectCache.GetValues(String,String[])
  fullName: System.Runtime.Caching.ObjectCache.GetValues(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Caching.ObjectCache.Host
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Host
  nameWithType: ObjectCache.Host
  fullName: System.Runtime.Caching.ObjectCache.Host
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: InfiniteAbsoluteExpiration
  nameWithType: ObjectCache.InfiniteAbsoluteExpiration
  fullName: System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration
- uid: System.Runtime.Caching.ObjectCache.Item(System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Item(String)
  nameWithType: ObjectCache.Item(String)
  fullName: System.Runtime.Caching.ObjectCache.Item(String)
- uid: System.Runtime.Caching.ObjectCache.Name
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Name
  nameWithType: ObjectCache.Name
  fullName: System.Runtime.Caching.ObjectCache.Name
- uid: System.Runtime.Caching.ObjectCache.NoSlidingExpiration
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: NoSlidingExpiration
  nameWithType: ObjectCache.NoSlidingExpiration
  fullName: System.Runtime.Caching.ObjectCache.NoSlidingExpiration
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Remove(String,String)
  nameWithType: ObjectCache.Remove(String,String)
  fullName: System.Runtime.Caching.ObjectCache.Remove(String,String)
- uid: System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Set(CacheItem,CacheItemPolicy)
  nameWithType: ObjectCache.Set(CacheItem,CacheItemPolicy)
  fullName: System.Runtime.Caching.ObjectCache.Set(CacheItem,CacheItemPolicy)
- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Set(String,Object,DateTimeOffset,String)
  nameWithType: ObjectCache.Set(String,Object,DateTimeOffset,String)
  fullName: System.Runtime.Caching.ObjectCache.Set(String,Object,DateTimeOffset,String)
- uid: System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Set(String,Object,CacheItemPolicy,String)
  nameWithType: ObjectCache.Set(String,Object,CacheItemPolicy,String)
  fullName: System.Runtime.Caching.ObjectCache.Set(String,Object,CacheItemPolicy,String)
- uid: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: System.Collections.Generic.IEnumerable()
  nameWithType: ObjectCache.System.Collections.Generic.IEnumerable()
  fullName: System.Runtime.Caching.ObjectCache.System.Collections.Generic.IEnumerable()
- uid: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ObjectCache.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Runtime.Caching.ObjectCache.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Runtime.Caching.ObjectCache.#ctor*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: ObjectCache
  nameWithType: ObjectCache.ObjectCache
- uid: System.Runtime.Caching.ObjectCache.Add*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Add
  nameWithType: ObjectCache.Add
- uid: System.Runtime.Caching.ObjectCache.AddOrGetExisting*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: AddOrGetExisting
  nameWithType: ObjectCache.AddOrGetExisting
- uid: System.Runtime.Caching.ObjectCache.Contains*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Contains
  nameWithType: ObjectCache.Contains
- uid: System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: CreateCacheEntryChangeMonitor
  nameWithType: ObjectCache.CreateCacheEntryChangeMonitor
- uid: System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: DefaultCacheCapabilities
  nameWithType: ObjectCache.DefaultCacheCapabilities
- uid: System.Runtime.Caching.ObjectCache.Get*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Get
  nameWithType: ObjectCache.Get
- uid: System.Runtime.Caching.ObjectCache.GetCacheItem*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetCacheItem
  nameWithType: ObjectCache.GetCacheItem
- uid: System.Runtime.Caching.ObjectCache.GetCount*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetCount
  nameWithType: ObjectCache.GetCount
- uid: System.Runtime.Caching.ObjectCache.GetEnumerator*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetEnumerator
  nameWithType: ObjectCache.GetEnumerator
- uid: System.Runtime.Caching.ObjectCache.GetValues*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: GetValues
  nameWithType: ObjectCache.GetValues
- uid: System.Runtime.Caching.ObjectCache.Host*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Host
  nameWithType: ObjectCache.Host
- uid: System.Runtime.Caching.ObjectCache.Item*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Item
  nameWithType: ObjectCache.Item
- uid: System.Runtime.Caching.ObjectCache.Name*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Name
  nameWithType: ObjectCache.Name
- uid: System.Runtime.Caching.ObjectCache.Remove*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Remove
  nameWithType: ObjectCache.Remove
- uid: System.Runtime.Caching.ObjectCache.Set*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: Set
  nameWithType: ObjectCache.Set
- uid: System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable<System#Collections#Generic#KeyValuePair<System#String,System#Object>>#GetEnumerator*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
  nameWithType: ObjectCache.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
- uid: System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Runtime.Caching.ObjectCache
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ObjectCache.System.Collections.IEnumerable.GetEnumerator
