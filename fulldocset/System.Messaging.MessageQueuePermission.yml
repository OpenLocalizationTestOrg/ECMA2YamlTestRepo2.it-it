### YamlMime:ManagedReference
items:
- uid: System.Messaging.MessageQueuePermission
  id: MessageQueuePermission
  children:
  - System.Messaging.MessageQueuePermission.#ctor
  - System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionEntry[])
  - System.Messaging.MessageQueuePermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)
  - System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)
  - System.Messaging.MessageQueuePermission.Copy
  - System.Messaging.MessageQueuePermission.FromXml(System.Security.SecurityElement)
  - System.Messaging.MessageQueuePermission.Intersect(System.Security.IPermission)
  - System.Messaging.MessageQueuePermission.IsSubsetOf(System.Security.IPermission)
  - System.Messaging.MessageQueuePermission.IsUnrestricted
  - System.Messaging.MessageQueuePermission.PermissionEntries
  - System.Messaging.MessageQueuePermission.ToXml
  - System.Messaging.MessageQueuePermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: MessageQueuePermission
  nameWithType: MessageQueuePermission
  fullName: System.Messaging.MessageQueuePermission
  type: Class
  summary: "Consente il controllo delle autorizzazioni di accesso di codice per la messaggistica."
  remarks: ''
  example:
  - "The following code example creates several instances of MessageQueuePermission and demonstrates the use of the <xref:System.Messaging.MessageQueuePermission.PermissionEntries%2A> property.  \n  \n [!code-cs[MessageQueuePermission#0](~/add/codesnippet/csharp/t-system.messaging.messa_11_1.cs)]"
  syntax:
    content: 'public sealed class MessageQueuePermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Messaging.MessageQueuePermission.#ctor
  id: '#ctor'
  parent: System.Messaging.MessageQueuePermission
  langs:
  - csharp
  name: MessageQueuePermission()
  nameWithType: MessageQueuePermission.MessageQueuePermission()
  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Messaging.MessageQueuePermission&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code example creates a new instance of <xref:System.Messaging.MessageQueuePermission>.  \n  \n [!code-cs[MessageQueuePermission#1](~/add/codesnippet/csharp/m-system.messaging.messa_5_1.cs)]"
  syntax:
    content: public MessageQueuePermission ();
    parameters: []
  overload: System.Messaging.MessageQueuePermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionEntry[])
  id: '#ctor(System.Messaging.MessageQueuePermissionEntry[])'
  parent: System.Messaging.MessageQueuePermission
  langs:
  - csharp
  name: MessageQueuePermission(MessageQueuePermissionEntry[])
  nameWithType: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionEntry[])
  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionEntry[])
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Messaging.MessageQueuePermission&quot;> </xref> classe con le voci del livello di accesso autorizzazione specificata."
  remarks: ''
  example:
  - "The following code example creates a new instance of <xref:System.Messaging.MessageQueuePermission>.  \n  \n [!code-cs[MessageQueuePermission#4](~/add/codesnippet/csharp/05826c34-0343-4cde-b70a-_1.cs)]"
  syntax:
    content: public MessageQueuePermission (System.Messaging.MessageQueuePermissionEntry[] permissionAccessEntries);
    parameters:
    - id: permissionAccessEntries
      type: System.Messaging.MessageQueuePermissionEntry[]
      description: "Matrice di <xref href=&quot;System.Messaging.MessageQueuePermissionEntry&quot;> </xref> oggetti. Il <xref:System.Messaging.MessageQueuePermission.PermissionEntries*>Ã¨ impostata su questo valore.</xref:System.Messaging.MessageQueuePermission.PermissionEntries*>"
  overload: System.Messaging.MessageQueuePermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueuePermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Messaging.MessageQueuePermission
  langs:
  - csharp
  name: MessageQueuePermission(PermissionState)
  nameWithType: MessageQueuePermission.MessageQueuePermission(PermissionState)
  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Messaging.MessageQueuePermission&quot;> </xref> classe con lo stato di autorizzazione specificata."
  remarks: ''
  example:
  - "The following code example creates a new instance of <xref:System.Messaging.MessageQueuePermission>.  \n  \n [!code-cs[MessageQueuePermission#5](~/add/codesnippet/csharp/398c7aba-e1ef-4fb1-a878-_1.cs)]"
  syntax:
    content: public MessageQueuePermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Uno del <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> valori."
  overload: System.Messaging.MessageQueuePermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)
  id: '#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)'
  parent: System.Messaging.MessageQueuePermission
  langs:
  - csharp
  name: MessageQueuePermission(MessageQueuePermissionAccess,String)
  nameWithType: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess,String)
  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess,String)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Messaging.MessageQueuePermission&quot;> </xref> classe con i livelli di accesso specificato e il percorso della coda."
  remarks: ''
  example:
  - "The following code example creates a new instance of <xref:System.Messaging.MessageQueuePermission>.  \n  \n [!code-cs[MessageQueuePermission#2](~/add/codesnippet/csharp/33b0d668-a747-483a-840a-_1.cs)]"
  syntax:
    content: public MessageQueuePermission (System.Messaging.MessageQueuePermissionAccess permissionAccess, string path);
    parameters:
    - id: permissionAccess
      type: System.Messaging.MessageQueuePermissionAccess
      description: "Uno del <xref href=&quot;System.Messaging.MessageQueuePermissionAccess&quot;> </xref> valori."
    - id: path
      type: System.String
      description: "Il percorso della coda a cui fa riferimento il <xref href=&quot;System.Messaging.MessageQueue&quot;> </xref>."
  overload: System.Messaging.MessageQueuePermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)
  id: '#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)'
  parent: System.Messaging.MessageQueuePermission
  langs:
  - csharp
  name: MessageQueuePermission(MessageQueuePermissionAccess,String,String,String)
  nameWithType: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess,String,String,String)
  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess,String,String,String)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Messaging.MessageQueuePermission&quot;> </xref> classe con i livelli di accesso specificato, i computer da usare, descrizione della coda e categoria di coda."
  remarks: ''
  example:
  - "The following code example creates a new instance of <xref:System.Messaging.MessageQueuePermission>.  \n  \n [!code-cs[MessageQueuePermission#3](~/add/codesnippet/csharp/3edb4ca1-e73d-4f2b-9481-_1.cs)]"
  syntax:
    content: public MessageQueuePermission (System.Messaging.MessageQueuePermissionAccess permissionAccess, string machineName, string label, string category);
    parameters:
    - id: permissionAccess
      type: System.Messaging.MessageQueuePermissionAccess
      description: "Uno del <xref href=&quot;System.Messaging.MessageQueuePermissionAccess&quot;> </xref> valori."
    - id: machineName
      type: System.String
      description: "Il nome del computer in cui si trova la coda di Accodamento messaggi."
    - id: label
      type: System.String
      description: "La descrizione della coda."
    - id: category
      type: System.String
      description: "La categoria della coda (identificatore di tipo Message Queuing)."
  overload: System.Messaging.MessageQueuePermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueuePermission.Copy
  id: Copy
  parent: System.Messaging.MessageQueuePermission
  langs:
  - csharp
  name: Copy()
  nameWithType: MessageQueuePermission.Copy()
  fullName: System.Messaging.MessageQueuePermission.Copy()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Crea e restituisce una copia identica dell&quot;oggetto autorizzazione corrente."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Una copia dell&quot;oggetto autorizzazione corrente."
  overload: System.Messaging.MessageQueuePermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueuePermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Messaging.MessageQueuePermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: MessageQueuePermission.FromXml(SecurityElement)
  fullName: System.Messaging.MessageQueuePermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Ricostruisce un oggetto di sicurezza con uno stato specificato da una codifica XML."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "La codifica XML da usare per ricostruire l&quot;oggetto di sicurezza."
  overload: System.Messaging.MessageQueuePermission.FromXml*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueuePermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Messaging.MessageQueuePermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: MessageQueuePermission.Intersect(IPermission)
  fullName: System.Messaging.MessageQueuePermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Restituisce un nuovo oggetto di autorizzazione che rappresenta l&quot;intersezione dell&quot;oggetto autorizzazione corrente e l&quot;oggetto di autorizzazione specificata."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Un oggetto di autorizzazione da intersecare con l&quot;oggetto autorizzazione corrente. Deve essere dello stesso tipo dell&quot;oggetto autorizzazione corrente."
    return:
      type: System.Security.IPermission
      description: "Nuovo oggetto autorizzazione che rappresenta l&quot;intersezione dell&quot;oggetto autorizzazione corrente e l&quot;oggetto di autorizzazione specificata. Nuovo oggetto di autorizzazione Ã¨ un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic) se l&quot;intersezione Ã¨ vuota."
  overload: System.Messaging.MessageQueuePermission.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueuePermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Messaging.MessageQueuePermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: MessageQueuePermission.IsSubsetOf(IPermission)
  fullName: System.Messaging.MessageQueuePermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Restituisce un valore che indica se l&quot;oggetto autorizzazione corrente Ã¨ un subset dell&quot;oggetto di autorizzazione specificato."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Oggetto di autorizzazione da testare per la relazione del subset. L&quot;oggetto deve essere dello stesso tipo dell&quot;oggetto autorizzazione corrente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto autorizzazione corrente Ã¨ un subset dell&quot;oggetto di autorizzazione specificata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.MessageQueuePermission.IsSubsetOf*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueuePermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Messaging.MessageQueuePermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: MessageQueuePermission.IsUnrestricted()
  fullName: System.Messaging.MessageQueuePermission.IsUnrestricted()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Restituisce un valore che indica se l&quot;autorizzazione puÃ² essere rappresentato come illimitato senza la conoscenza della semantica di autorizzazione."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;autorizzazione puÃ² essere rappresentato come senza restrizioni; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.MessageQueuePermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueuePermission.PermissionEntries
  id: PermissionEntries
  parent: System.Messaging.MessageQueuePermission
  langs:
  - csharp
  name: PermissionEntries
  nameWithType: MessageQueuePermission.PermissionEntries
  fullName: System.Messaging.MessageQueuePermission.PermissionEntries
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Ottiene la raccolta di voci di autorizzazione per la richiesta di autorizzazioni."
  remarks: ''
  example:
  - "The following code example creates a new instance of <xref:System.Messaging.MessageQueuePermission> and gets the value of its PermissionEntries property.  \n  \n [!code-cs[MessageQueuePermission#6](~/add/codesnippet/csharp/p-system.messaging.messa_78_1.cs)]"
  syntax:
    content: public System.Messaging.MessageQueuePermissionEntryCollection PermissionEntries { get; }
    return:
      type: System.Messaging.MessageQueuePermissionEntryCollection
      description: "Oggetto <xref href=&quot;System.Messaging.MessageQueuePermissionEntryCollection&quot;> </xref> che contiene le voci di autorizzazione per la richiesta di autorizzazioni."
  overload: System.Messaging.MessageQueuePermission.PermissionEntries*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueuePermission.ToXml
  id: ToXml
  parent: System.Messaging.MessageQueuePermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: MessageQueuePermission.ToXml()
  fullName: System.Messaging.MessageQueuePermission.ToXml()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Crea una codifica XML dell&quot;oggetto di sicurezza e lo stato corrente."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Codifica XML dell&quot;oggetto di sicurezza, inclusi eventuali informazioni sullo stato."
  overload: System.Messaging.MessageQueuePermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueuePermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Messaging.MessageQueuePermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: MessageQueuePermission.Union(IPermission)
  fullName: System.Messaging.MessageQueuePermission.Union(IPermission)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Restituisce un nuovo oggetto di autorizzazione che rappresenta l&quot;unione degli oggetti di autorizzazione corrente e quella specificata."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Un oggetto di autorizzazione da combinare con l&quot;oggetto autorizzazione corrente. Deve essere dello stesso tipo dell&quot;oggetto autorizzazione corrente."
    return:
      type: System.Security.IPermission
      description: "Nuovo oggetto autorizzazione che rappresenta l&quot;unione dell&quot;oggetto autorizzazione corrente e l&quot;oggetto di autorizzazione specificata."
  overload: System.Messaging.MessageQueuePermission.Union*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.Messaging.MessageQueuePermission.#ctor
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: MessageQueuePermission()
  nameWithType: MessageQueuePermission.MessageQueuePermission()
  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission()
- uid: System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionEntry[])
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: MessageQueuePermission(MessageQueuePermissionEntry[])
  nameWithType: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionEntry[])
  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionEntry[])
- uid: System.Messaging.MessageQueuePermissionEntry[]
  parent: System.Messaging
  isExternal: false
  name: MessageQueuePermissionEntry
  nameWithType: MessageQueuePermissionEntry
  fullName: System.Messaging.MessageQueuePermissionEntry[]
  spec.csharp:
  - uid: System.Messaging.MessageQueuePermissionEntry
    name: MessageQueuePermissionEntry
    nameWithType: MessageQueuePermissionEntry
    fullName: MessageQueuePermissionEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Messaging.MessageQueuePermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: MessageQueuePermission(PermissionState)
  nameWithType: MessageQueuePermission.MessageQueuePermission(PermissionState)
  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String)
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: MessageQueuePermission(MessageQueuePermissionAccess,String)
  nameWithType: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess,String)
  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess,String)
- uid: System.Messaging.MessageQueuePermissionAccess
  parent: System.Messaging
  isExternal: false
  name: MessageQueuePermissionAccess
  nameWithType: MessageQueuePermissionAccess
  fullName: System.Messaging.MessageQueuePermissionAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Messaging.MessageQueuePermission.#ctor(System.Messaging.MessageQueuePermissionAccess,System.String,System.String,System.String)
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: MessageQueuePermission(MessageQueuePermissionAccess,String,String,String)
  nameWithType: MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess,String,String,String)
  fullName: System.Messaging.MessageQueuePermission.MessageQueuePermission(MessageQueuePermissionAccess,String,String,String)
- uid: System.Messaging.MessageQueuePermission.Copy
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: Copy()
  nameWithType: MessageQueuePermission.Copy()
  fullName: System.Messaging.MessageQueuePermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Messaging.MessageQueuePermission.FromXml(System.Security.SecurityElement)
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: MessageQueuePermission.FromXml(SecurityElement)
  fullName: System.Messaging.MessageQueuePermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Messaging.MessageQueuePermission.Intersect(System.Security.IPermission)
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: MessageQueuePermission.Intersect(IPermission)
  fullName: System.Messaging.MessageQueuePermission.Intersect(IPermission)
- uid: System.Messaging.MessageQueuePermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: MessageQueuePermission.IsSubsetOf(IPermission)
  fullName: System.Messaging.MessageQueuePermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.MessageQueuePermission.IsUnrestricted
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: MessageQueuePermission.IsUnrestricted()
  fullName: System.Messaging.MessageQueuePermission.IsUnrestricted()
- uid: System.Messaging.MessageQueuePermission.PermissionEntries
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: PermissionEntries
  nameWithType: MessageQueuePermission.PermissionEntries
  fullName: System.Messaging.MessageQueuePermission.PermissionEntries
- uid: System.Messaging.MessageQueuePermissionEntryCollection
  parent: System.Messaging
  isExternal: false
  name: MessageQueuePermissionEntryCollection
  nameWithType: MessageQueuePermissionEntryCollection
  fullName: System.Messaging.MessageQueuePermissionEntryCollection
- uid: System.Messaging.MessageQueuePermission.ToXml
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: ToXml()
  nameWithType: MessageQueuePermission.ToXml()
  fullName: System.Messaging.MessageQueuePermission.ToXml()
- uid: System.Messaging.MessageQueuePermission.Union(System.Security.IPermission)
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: MessageQueuePermission.Union(IPermission)
  fullName: System.Messaging.MessageQueuePermission.Union(IPermission)
- uid: System.Messaging.MessageQueuePermission.#ctor*
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: MessageQueuePermission
  nameWithType: MessageQueuePermission.MessageQueuePermission
- uid: System.Messaging.MessageQueuePermission.Copy*
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: Copy
  nameWithType: MessageQueuePermission.Copy
- uid: System.Messaging.MessageQueuePermission.FromXml*
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: FromXml
  nameWithType: MessageQueuePermission.FromXml
- uid: System.Messaging.MessageQueuePermission.Intersect*
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: Intersect
  nameWithType: MessageQueuePermission.Intersect
- uid: System.Messaging.MessageQueuePermission.IsSubsetOf*
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: MessageQueuePermission.IsSubsetOf
- uid: System.Messaging.MessageQueuePermission.IsUnrestricted*
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: MessageQueuePermission.IsUnrestricted
- uid: System.Messaging.MessageQueuePermission.PermissionEntries*
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: PermissionEntries
  nameWithType: MessageQueuePermission.PermissionEntries
- uid: System.Messaging.MessageQueuePermission.ToXml*
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: ToXml
  nameWithType: MessageQueuePermission.ToXml
- uid: System.Messaging.MessageQueuePermission.Union*
  parent: System.Messaging.MessageQueuePermission
  isExternal: false
  name: Union
  nameWithType: MessageQueuePermission.Union
