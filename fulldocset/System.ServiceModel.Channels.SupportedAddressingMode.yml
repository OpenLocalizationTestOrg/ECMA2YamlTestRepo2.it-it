### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.SupportedAddressingMode
  id: SupportedAddressingMode
  children:
  - System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  - System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  - System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  langs:
  - csharp
  name: SupportedAddressingMode
  nameWithType: SupportedAddressingMode
  fullName: System.ServiceModel.Channels.SupportedAddressingMode
  type: Enum
  summary: "Specifica se un servizio supporta l&quot;invio di risposte a indirizzi anonimi, solo per solo indirizzi non anonimi o a entrambi."
  remarks: "Questa enumerazione viene utilizzata per specificare le funzionalità di un server che, a sua volta, impone un requisito nei relativi client.       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]presenta una serie di controlli di indirizzamento per specificare dove devono essere inviati i messaggi. Ad esempio, è logico <xref:System.ServiceModel.Channels.MessageHeaders.To%2A>indirizzo per la destinazione del messaggio, fisico (&quot;Via&quot;), indirizzo, utilizzato dal trasporto, in cui è in ascolto un servizio, e <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A>indirizzo dell&quot;endpoint che fornisce l&quot;indirizzo dell&quot;endpoint client.</xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> </xref:System.ServiceModel.Channels.MessageHeaders.To%2A>       Nel caso più semplice, quando due parti scambiano messaggi solo tra loro, non è necessario specificare questi indirizzi separatamente. Tuttavia, poiché gli scambi possono interessare altre destinazioni di messaggio, è necessario essere in grado di specificare quando gli indirizzi devono essere forniti in modo esplicito. Anche tra due sole parti questa possibilità è talvolta necessaria, come HTTP duale in cui il server deve creare la propria richiesta HTTP. I tipi di relazioni seguenti vengono definiti dall&quot;enumerazione SupportedAddressingMode per acquisire questi modelli di messaggistica:-indirizzi anonimi sono la forma più elementare di indirizzamento. L&quot;indirizzamento anonimo viene utilizzato quando è presente un percorso predefinito per una risposta. TCP è un trasporto di comunicazione bidirezionale e la risposta a un messaggio TCP può essere inviata nuovamente a altro lato del socket che ha inviato il messaggio originale. Analogamente, il modello request / reply HTTP invia risposte attraverso il canale di risposta HTTP. Nessuna di queste risposte richiede la specifica in cui si intende i messaggi di risposta. Quando un server richiede risposte anonime dal client, utilizza il valore dell&quot;enumerazione anonimo. Il [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] fornita dal sistema <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding>e <xref:System.ServiceModel.WSHttpBinding>associazioni utilizzano sempre indirizzi anonimi.</xref:System.ServiceModel.WSHttpBinding> </xref:System.ServiceModel.BasicHttpBinding> </xref:System.ServiceModel.NetTcpBinding>      -Gli indirizzi non anonimi vengono utilizzati durante l&quot;invio della risposta richiede la creazione di un nuovo canale per la comunicazione. Il [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] fornita dal sistema <xref:System.ServiceModel.WSDualHttpBinding>associazione utilizza un indirizzo non anonime.</xref:System.ServiceModel.WSDualHttpBinding> Http duale, il client crea una richiesta HTTP per inviare un messaggio e quindi il server deve creare la propria richiesta HTTP per inviare una risposta. Poiché il server sta iniziando l&quot;invio, deve disporre di un endpoint specifico per stabilire la connessione. È necessario fornire l&quot;indirizzo di un endpoint di server per la risposta. Analogamente, se un servizio deve rispondere a un messaggio unidirezionale ricevuto, richiede inoltre un non anonimi di indirizzi perché non è presente alcun canale di supporto disponibile per la comunicazione. Se il server invia un messaggio, è necessaria un&quot;operazione completamente distinta da quella utilizzata per inviare il primo messaggio.      -Mista è una terza forma di indirizzamento che combina indirizzi anonimo e non anonimi a seconda del messaggio viene inviato. Un esempio tipico della modalità di indirizzamento mista è l&quot;utilizzo di un computer dedicato per l&quot;elaborazione dei messaggi di errore o di riconoscimento. Se la sequenza di scambio standard per le risposte HTTP o TCP, le risposte utilizzano l&quot;indirizzamento anonimo, ma gli errori di utilizzare l&quot;indirizzamento non anonimo. Mentre [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] non fornisce Mixed addressing funzionalità in una delle associazioni standard, è possibile scrivere un canale che consenta al servizio di inviare risposte direttamente sul canale (quando l&quot;indirizzo di risposta anonimo) o su un canale separato (quando l&quot;indirizzo di risposta non anonimi). In tal caso, l&quot;elemento di associazione del canale viene utilizzato per setSupportedAddressingMode Mixed."
  syntax:
    content: public enum SupportedAddressingMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  id: Anonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: Anonymous
  nameWithType: SupportedAddressingMode.Anonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Il server supporta solo indirizzi anonimi e i client devono fornire un indirizzo di risposta anonimo."
  syntax:
    content: Anonymous
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  id: Mixed
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: Mixed
  nameWithType: SupportedAddressingMode.Mixed
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Il server supporta indirizzi anonimi e non anonimi e i client possono scegliere di utilizzare uno o entrambi."
  syntax:
    content: Mixed
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  id: NonAnonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: NonAnonymous
  nameWithType: SupportedAddressingMode.NonAnonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Il server supporta solo indirizzi non anonimi e i client devono fornire un indirizzo di risposta non anonimo."
  syntax:
    content: NonAnonymous
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: Anonymous
  nameWithType: SupportedAddressingMode.Anonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
- uid: System.ServiceModel.Channels.SupportedAddressingMode
  parent: System.ServiceModel.Channels
  isExternal: false
  name: SupportedAddressingMode
  nameWithType: SupportedAddressingMode
  fullName: System.ServiceModel.Channels.SupportedAddressingMode
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: Mixed
  nameWithType: SupportedAddressingMode.Mixed
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
- uid: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: NonAnonymous
  nameWithType: SupportedAddressingMode.NonAnonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
