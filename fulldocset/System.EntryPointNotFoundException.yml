### YamlMime:ManagedReference
items:
- uid: System.EntryPointNotFoundException
  id: EntryPointNotFoundException
  children:
  - System.EntryPointNotFoundException.#ctor
  - System.EntryPointNotFoundException.#ctor(System.String)
  - System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.EntryPointNotFoundException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: EntryPointNotFoundException
  nameWithType: EntryPointNotFoundException
  fullName: System.EntryPointNotFoundException
  type: Class
  summary: "Eccezione generata quando un tentativo di caricare una classe ha esito negativo a causa della mancanza di un metodo di inserimento."
  remarks: "Quando in common language runtime è in grado di caricare un assembly, perché non è possibile identificare il punto di ingresso dell&quot;assembly, viene generata un&quot;eccezione EntryPointNotFoundException.  Questa eccezione può essere generata nelle seguenti condizioni:-common language runtime non è in grado di individuare un punto di ingresso dell&quot;applicazione (in genere un `Main` metodo) in un assembly eseguibile. Il punto di ingresso dell&quot;applicazione deve essere globale o `static` metodo che dispone di alcun parametro o una matrice di stringhe solo come parametro. Può restituire il punto di ingresso `void`, o può restituire un <xref:System.Int32>o <xref:System.UInt32>codice di uscita.</xref:System.UInt32> </xref:System.Int32> Un assembly dell&quot;applicazione non è possibile definire più di un punto di ingresso.      -La chiamata a una funzione in una DLL di Windows non può essere risolto perché non è possibile trovare la funzione. Nell&quot;esempio seguente, viene generata un&quot;eccezione EntryPointNotFoundException perché User32.dll non comprende una funzione denominata `GetMyNumber`.           [!code-cs[System.EntryPointNotFoundException.Class#1](~/add/codesnippet/csharp/t-system.entrypointnotfo_1.cs)][!code-vb[System.EntryPointNotFoundException.Class#1](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_1.vb) ] -la chiamata a una funzione in una DLL di Windows non può essere risolta perché il nome utilizzato nella chiamata al metodo non corrispondono a un nome trovato nell&quot;assembly.       Spesso, ciò si verifica perché il <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=fullName>campo viene impostato in modo implicito o esplicito su `true`, il metodo chiamato include uno o più parametri di stringa e include una versione Unicode e ANSI e il nome utilizzato nella chiamata al metodo non corrisponde al nome di questa versione ANSI o Unicode.</xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=fullName> Nell&quot;esempio seguente viene illustrato questo concetto mediante il tentativo di chiamare Windows `MessageBox` funzione User32. dll. Poiché la prima definizione del metodo specifica <xref:System.Runtime.InteropServices.CharSet?displayProperty=fullName>per il marshalling delle stringhe, common language runtime cerca la versione a caratteri wide della funzione, `MessageBoxW`, anziché il nome utilizzato nella chiamata al metodo, `MessageBox`.</xref:System.Runtime.InteropServices.CharSet?displayProperty=fullName>  La seconda definizione di metodo risolve il problema chiamando la `MessageBoxW` anziché il `MessageBox` (funzione).           [!code-vb[System.EntryPointNotFoundException.Class#2](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_2.vb)][!code-cs[System.EntryPointNotFoundException.Class#2](~/add/codesnippet/csharp/t-system.entrypointnotfo_2.cs) ] -si sta tentando di chiamare una funzione in una libreria a collegamento dinamico con il relativo nome semplice, anziché il relativo nome decorato.       In genere, il compilatore C++ genera un nome decorato per le funzioni DLL. Ad esempio, il codice C++ seguente definisce una funzione denominata `Double` in una libreria denominata TestDll.dll.           [!code-cpp[System.EntryPointNotFoundException.Class#6](~/add/codesnippet/cpp/testdll/testdll.cpp#6) ] quando il codice nell&quot;esempio seguente tenta di chiamare la funzione, viene generata un&quot;eccezione di EntryPointNotFoundException perché il `Double` funzione non è stata trovata.           [!code-cs[System.EntryPointNotFoundException.Class#7](~/add/codesnippet/csharp/t-system.entrypointnotfo_4.cs)][!code-vb[System.EntryPointNotFoundException.Class#7](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_4.vb) ] , tuttavia, se la funzione viene chiamata utilizzando il relativo nome decorato (in questo caso, `?Double@@YAHH@Z`), la chiamata di funzione ha esito positivo, come illustrato nell&quot;esempio seguente.                 [!code-cs[System.EntryPointNotFoundException.Class#8](~/add/codesnippet/csharp/t-system.entrypointnotfo_5.cs)][!code-vb[System.EntryPointNotFoundException.Class#8](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_5.vb) ] è possibile trovare i nomi decorati delle funzioni esportate da una DLL mediante un&quot;utilità come Dumpbin.exe.            -Si sta tentando di chiamare un metodo in un assembly gestito come se fosse una DLL non gestita. Per vedere un esempio pratico, compilare l&quot;esempio seguente a un assembly denominato StringUtilities.dll.           [!code-cs[System.EntryPointNotFoundException.Class#3](~/add/codesnippet/csharp/t-system.entrypointnotfo_6.cs)][!code-vb[System.EntryPointNotFoundException.Class#3](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_6.vb) ] quindi compilare ed eseguire l&quot;esempio seguente, che tenta di chiamare il `StringUtilities.SayGoodMorning` metodo nella libreria di collegamento dinamico StringUtilities.dll come se fosse il codice non gestito.       Il risultato è una EntryPointNotFoundException (eccezione).           [!code-cs[System.EntryPointNotFoundException.Class#4](~/add/codesnippet/csharp/t-system.entrypointnotfo_7.cs)][!code-vb[System.EntryPointNotFoundException.Class#4](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_7.vb) ] per eliminare l&quot;eccezione, aggiungere un riferimento all&quot;assembly gestito e accedere la `StringUtilities.SayGoodMorning` metodo nello stesso modo in cui si accede qualsiasi altro metodo nel codice gestito, come nell&quot;esempio seguente.                 [!code-cs[System.EntryPointNotFoundException.Class#5](~/add/codesnippet/csharp/t-system.entrypointnotfo_8.cs)][!code-vb[System.EntryPointNotFoundException.Class#5](~/add/codesnippet/visualbasic/t-system.entrypointnotfo_8.vb) ] -si sta tentando di chiamare un metodo in una DLL COM come se fosse una DLL di Windows.       Per accedere a una DLL COM, selezionare il **Aggiungi riferimento** opzione in Visual Studio per aggiungere un riferimento al progetto e quindi selezionare la libreria dei tipi dal **COM** scheda.       Per un elenco di valori di proprietà iniziali per un&quot;istanza di EntryPointNotFoundException, vedere la <xref:System.EntryPointNotFoundException.%23ctor%2A>costruttori.</xref:System.EntryPointNotFoundException.%23ctor%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class EntryPointNotFoundException : TypeLoadException
  inheritance:
  - System.TypeLoadException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor
  id: '#ctor'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException()
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException()
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> classe."
  remarks: "Questo costruttore inizializza la <xref:System.Exception.Message%2A>proprietà della nuova istanza di un messaggio fornito dal sistema che descrive l&quot;errore, ad esempio &quot;Voce non è stato trovato punto&quot;.</xref:System.Exception.Message%2A> Questo messaggio prende in considerazione le impostazioni cultura correnti.       Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un&quot;istanza di <xref:System.EntryPointNotFoundException>.</xref:System.EntryPointNotFoundException>      | Proprietà | Valore |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Un riferimento null (`Nothing` in Visual Basic). |   | <xref:System.TypeLoadException.Message%2A>| La stringa di messaggio di errore localizzato. |</xref:System.TypeLoadException.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public EntryPointNotFoundException ();
    parameters: []
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException(String)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> classe con un messaggio di errore specificato."
  remarks: "Il contenuto di `message` deve essere facilmente comprensibile. Il chiamante del costruttore è necessario per garantire che la stringa sia stata localizzata per la lingua corrente.       Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un&quot;istanza di <xref:System.EntryPointNotFoundException>.</xref:System.EntryPointNotFoundException>      | Proprietà | Valore |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Un riferimento null (`Nothing` in Visual Basic). |   | <xref:System.TypeLoadException.Message%2A>| La stringa di messaggio di errore. |</xref:System.TypeLoadException.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public EntryPointNotFoundException (string message);
    parameters:
    - id: message
      type: System.String
      description: "Il messaggio di errore che spiega il motivo dell&quot;eccezione."
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException(SerializationInfo,StreamingContext)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> classe con dati serializzati."
  remarks: "Questo costruttore viene chiamato durante la deserializzazione per ricostituire l&quot;oggetto eccezione trasmesso su un flusso."
  syntax:
    content: protected EntryPointNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Oggetto che contiene i dati oggetto serializzati."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Informazioni contestuali sull&quot;origine o destinazione."
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EntryPointNotFoundException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.EntryPointNotFoundException
  langs:
  - csharp
  name: EntryPointNotFoundException(String,Exception)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.EntryPointNotFoundException&quot;> </xref> classe con un messaggio di errore specificato e un riferimento all&quot;eccezione interna che è la causa dell&quot;eccezione corrente."
  remarks: "Un&quot;eccezione generata come risultato diretto di un&quot;eccezione precedente deve includere un riferimento all&quot;eccezione precedente nella <xref:System.Exception.InnerException%2A>proprietà.</xref:System.Exception.InnerException%2A> La <xref:System.Exception.InnerException%2A>proprietà restituisce lo stesso valore passato al costruttore o un riferimento null (`Nothing` in Visual Basic) se la <xref:System.Exception.InnerException%2A>proprietà non fornisce il valore di eccezione interna al costruttore.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       Nella tabella seguente vengono illustrati i valori di proprietà iniziali per un&quot;istanza di <xref:System.EntryPointNotFoundException>.</xref:System.EntryPointNotFoundException>      | Proprietà | Valore |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Il riferimento all&quot;eccezione interna. |   | <xref:System.TypeLoadException.Message%2A>| La stringa di messaggio di errore. |</xref:System.TypeLoadException.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public EntryPointNotFoundException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: "Il messaggio di errore che spiega il motivo dell&quot;eccezione."
    - id: inner
      type: System.Exception
      description: "Eccezione che è la causa dell&quot;eccezione corrente. Se il `inner` parametro non è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic), l&quot;eccezione corrente viene generata in un <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> blocco che gestisce l&quot;eccezione interna."
  overload: System.EntryPointNotFoundException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.TypeLoadException
  isExternal: false
  name: System.TypeLoadException
- uid: System.EntryPointNotFoundException.#ctor
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException()
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException()
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException()
- uid: System.EntryPointNotFoundException.#ctor(System.String)
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException(String)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException(SerializationInfo,StreamingContext)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.EntryPointNotFoundException.#ctor(System.String,System.Exception)
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException(String,Exception)
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
  fullName: System.EntryPointNotFoundException.EntryPointNotFoundException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.EntryPointNotFoundException.#ctor*
  parent: System.EntryPointNotFoundException
  isExternal: false
  name: EntryPointNotFoundException
  nameWithType: EntryPointNotFoundException.EntryPointNotFoundException
