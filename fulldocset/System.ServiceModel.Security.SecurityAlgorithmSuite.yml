### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite
  id: SecurityAlgorithmSuite
  children:
  - System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.Default
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)
  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  langs:
  - csharp
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite
  type: Class
  summary: "Specifica le proprietà degli algoritmi. Si tratta di un <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref> classe."
  remarks: "Le istanze di questa classe vengono utilizzate per specificare le caratteristiche di crittografia degli algoritmi utilizzati durante la protezione dei messaggi.       Questa classe viene utilizzata dalle classi derivate per creare un&quot;istanza di suite di algoritmi di sicurezza e contiene proprietà che descrivono gli algoritmi di sicurezza. Ad esempio, il `wsBasicHttp` associazione utilizza una classe derivata interna per specificare le proprietà degli algoritmi di sicurezza."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.SecurityAlgorithmSuiteConverter))]

      public abstract class SecurityAlgorithmSuite
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: SecurityAlgorithmSuite()
  nameWithType: SecurityAlgorithmSuite.SecurityAlgorithmSuite()
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.SecurityAlgorithmSuite()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref> classe."
  remarks: "Le istanze di questa classe è costituiti da proprietà statiche e proprietà di sola lettura, pertanto il costruttore non inizializza alcuna proprietà."
  syntax:
    content: protected SecurityAlgorithmSuite ();
    parameters: []
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
  id: Basic128
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic128
  nameWithType: SecurityAlgorithmSuite.Basic128
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene la suite di algoritmi di Basic128."
  remarks: "Per impostazione predefinita, AES-128 viene utilizzato come l&quot;algoritmo di crittografia."
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Base 128 bit <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
  id: Basic128Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic128Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave e Basic a 128 bit come algoritmo di crittografia del messaggio."
  remarks: "Il <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>restituita è in realtà una sottoclasse interna che esegue l&quot;override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave e Basic a 128 bit come algoritmo di crittografia del messaggio."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
  id: Basic128Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic128Sha256
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene una suite di algoritmi che utilizza SHA256 per il digest della firma e Basic a 128 bit come algoritmo di crittografia del messaggio."
  remarks: "Il <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>restituita è in realtà una sottoclasse interna che esegue l&quot;override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Una suite di algoritmi che utilizza SHA256 per il digest della firma e Basic a 128 bit come algoritmo di crittografia del messaggio."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  id: Basic128Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic128Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave, SHA256 per il digest della firma e Basic a 128 bit come algoritmo di crittografia del messaggio."
  remarks: "Il <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>restituita è in realtà una sottoclasse interna che esegue l&quot;override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic128Sha256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave, SHA256 per il digest della firma e Basic a 128 bit come algoritmo di crittografia del messaggio."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
  id: Basic192
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic192
  nameWithType: SecurityAlgorithmSuite.Basic192
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene una suite di algoritmi che usa Basic a 192 bit come algoritmo di crittografia del messaggio."
  remarks: "Per impostazione predefinita, AES&192; viene utilizzato come l&quot;algoritmo di crittografia."
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Una suite di algoritmi che usa Basic a 192 bit come algoritmo di crittografia del messaggio."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
  id: Basic192Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic192Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave e Basic a 192 bit come algoritmo di crittografia del messaggio."
  remarks: "Il <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>restituita è in realtà una sottoclasse interna che esegue l&quot;override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave e Basic a 192 bit come algoritmo di crittografia del messaggio."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
  id: Basic192Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic192Sha256
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene una suite di algoritmi che utilizza SHA256 per il digest della firma e Basic a 192 bit come algoritmo di crittografia del messaggio."
  remarks: "Il <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>restituita è in realtà una sottoclasse interna che esegue l&quot;override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Una suite di algoritmi che utilizza SHA256 per il digest della firma e Basic a 192 bit come algoritmo di crittografia del messaggio."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  id: Basic192Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic192Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave, SHA256 per il digest della firma e Basic a 192 bit come algoritmo di crittografia del messaggio."
  remarks: "Il <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>restituita è in realtà una sottoclasse interna che esegue l&quot;override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic192Sha256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave, SHA256 per il digest della firma e Basic a 192 bit come algoritmo di crittografia del messaggio."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
  id: Basic256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic256
  nameWithType: SecurityAlgorithmSuite.Basic256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene una suite di algoritmi che usa Basic a 256 bit come algoritmo di crittografia del messaggio."
  remarks: "Per impostazione predefinita, utilizza l&quot;algoritmo di crittografia AES-256."
  example:
  - "The following code shows how to set <xref:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite%2A> to this property.  \n  \n [!code-vb[c_ProgrammingSecurity#8](~/add/codesnippet/visualbasic/p-system.servicemodel.se_4_1.vb)]\n [!code-cs[c_ProgrammingSecurity#8](~/add/codesnippet/csharp/p-system.servicemodel.se_4_1.cs)]"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Una suite di algoritmi che usa Basic a 256 bit come algoritmo di crittografia del messaggio."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
  id: Basic256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave e Basic a 256 bit come algoritmo di crittografia del messaggio."
  remarks: "Il <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>restituita è in realtà una sottoclasse interna che esegue l&quot;override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave e Basic a 256 bit come algoritmo di crittografia del messaggio."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
  id: Basic256Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic256Sha256
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene una suite di algoritmi che utilizza SHA256 per il digest della firma e Basic a 256 bit come algoritmo di crittografia del messaggio."
  remarks: "Il <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>restituita è in realtà una sottoclasse interna che esegue l&quot;override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Una suite di algoritmi che utilizza SHA256 per il digest della firma e Basic a 256 bit come algoritmo di crittografia del messaggio."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  id: Basic256Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Basic256Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave, SHA256 per il digest della firma e Basic a 256 bit come algoritmo di crittografia del messaggio."
  remarks: "Il <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>restituita è in realtà una sottoclasse interna che esegue l&quot;override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Basic256Sha256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave, SHA256 per il digest della firma e Basic a 256 bit come algoritmo di crittografia del messaggio."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Default
  id: Default
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: Default
  nameWithType: SecurityAlgorithmSuite.Default
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Default
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene la suite di algoritmi predefinito."
  remarks: "Il <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>restituita è in realtà una sottoclasse interna che esegue l&quot;override di proprietà che specificano valori predefiniti, nonché i metodi.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite Default { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Il valore predefinito <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref> è <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>, 256 bit Advanced Encryption Standard (AES) che specifica come l&quot;algoritmo di crittografia simmetrica.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*>"
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.Default*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  id: DefaultAsymmetricKeyWrapAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultAsymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene l&quot;algoritmo di incapsulamento della chiave asimmetrico predefinito come stringa."
  remarks: "Quando sottoposto a override, fornisce un valore stringa che verrà utilizzato per il confronto nel <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A>metodo.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultAsymmetricKeyWrapAlgorithm { get; }
    return:
      type: System.String
      description: "L&quot;algoritmo di incapsulamento della chiave asimmetrico predefinito."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  id: DefaultAsymmetricSignatureAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultAsymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene l&quot;algoritmo di firma asimmetrico predefinito come stringa."
  remarks: "Quando sottoposto a override, fornisce un valore stringa che verrà utilizzato per il confronto nel <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A>metodo.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultAsymmetricSignatureAlgorithm { get; }
    return:
      type: System.String
      description: "L&quot;algoritmo di firma asimmetrico predefinito."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  id: DefaultCanonicalizationAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultCanonicalizationAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene l&quot;algoritmo di canonizzazione predefinito come stringa."
  remarks: "Quando sottoposto a override, fornisce un valore stringa che verrà utilizzato per il confronto nel metodo <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultCanonicalizationAlgorithm { get; }
    return:
      type: System.String
      description: "L&quot;algoritmo di canonizzazione predefinito."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  id: DefaultDigestAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultDigestAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultDigestAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene l&quot;algoritmo di digest predefinito come stringa."
  remarks: "Quando sottoposto a override, fornisce un valore stringa che verrà utilizzato per il confronto nel <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A>metodo.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultDigestAlgorithm { get; }
    return:
      type: System.String
      description: "L&quot;algoritmo di digest predefinito."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  id: DefaultEncryptionAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultEncryptionAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene l&quot;algoritmo di crittografia predefinito come stringa."
  remarks: "Quando sottoposto a override, fornisce un valore stringa che verrà utilizzato per il confronto nel <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A>metodo.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported%2A>"
  syntax:
    content: public abstract string DefaultEncryptionAlgorithm { get; }
    return:
      type: System.String
      description: "L&quot;algoritmo di crittografia predefinito."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  id: DefaultEncryptionKeyDerivationLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultEncryptionKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene la lunghezza di derivazione della chiave di crittografia predefinita come una <xref:System.Int32>valore.</xref:System.Int32>"
  remarks: "Il valore restituito varia a seconda della sottoclasse che lo implementa. Per `Basic256` crittografia, restituisce 256."
  syntax:
    content: public abstract int DefaultEncryptionKeyDerivationLength { get; }
    return:
      type: System.Int32
      description: "La lunghezza di derivazione della chiave di crittografia predefinita."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  id: DefaultSignatureKeyDerivationLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultSignatureKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene la lunghezza di derivazione della chiave di firma predefinita come una <xref:System.Int32>valore.</xref:System.Int32>"
  remarks: "Il valore restituito varia a seconda della sottoclasse che lo implementa. Per `Basic256` crittografia, verrà restituito 192."
  syntax:
    content: public abstract int DefaultSignatureKeyDerivationLength { get; }
    return:
      type: System.Int32
      description: "La lunghezza di derivazione della chiave di firma predefinita."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  id: DefaultSymmetricKeyLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultSymmetricKeyLength
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene la lunghezza della chiave simmetrica predefinita come una <xref:System.Int32>valore.</xref:System.Int32>"
  remarks: "Il valore restituito varia a seconda della sottoclasse che lo implementa. Per `Basic256` crittografia, restituisce 256."
  syntax:
    content: public abstract int DefaultSymmetricKeyLength { get; }
    return:
      type: System.Int32
      description: "La lunghezza della chiave simmetrica predefinita."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  id: DefaultSymmetricKeyWrapAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultSymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene l&quot;algoritmo di incapsulamento della chiave simmetrico predefinito come stringa."
  syntax:
    content: public abstract string DefaultSymmetricKeyWrapAlgorithm { get; }
    return:
      type: System.String
      description: "L&quot;algoritmo di incapsulamento della chiave simmetrico predefinito."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  id: DefaultSymmetricSignatureAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: DefaultSymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene l&quot;algoritmo di firma simmetrico predefinito come stringa."
  syntax:
    content: public abstract string DefaultSymmetricSignatureAlgorithm { get; }
    return:
      type: System.String
      description: "L&quot;algoritmo di firma simmetrico predefinito."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)
  id: IsAsymmetricKeyLengthSupported(System.Int32)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsAsymmetricKeyLengthSupported(Int32)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se la lunghezza della chiave particolare è supportato dall&quot;algoritmo asimmetrico."
  remarks: "Lunghezze della chiave tipiche sono 128, 192 e 256 bit."
  syntax:
    content: public abstract bool IsAsymmetricKeyLengthSupported (int length);
    parameters:
    - id: length
      type: System.Int32
      description: "La lunghezza della chiave da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la lunghezza della chiave è supportata dall&quot;algoritmo asimmetrico; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  id: IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsAsymmetricKeyWrapAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se un algoritmo di incapsulamento della chiave asimmetrico viene supportato."
  remarks: '`algorithm`viene confrontato con la stringa restituita da <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm%2A>'
  syntax:
    content: public virtual bool IsAsymmetricKeyWrapAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "L&quot;algoritmo da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;algoritmo di incapsulamento della chiave asimmetrica è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)
  id: IsAsymmetricSignatureAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsAsymmetricSignatureAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se un algoritmo di firma asimmetrico viene supportato."
  remarks: '`algorithm`viene confrontato con la stringa restituita da <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm%2A>'
  syntax:
    content: public virtual bool IsAsymmetricSignatureAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Il nome dell&quot;algoritmo da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;algoritmo di firma asimmetrica è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)
  id: IsCanonicalizationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsCanonicalizationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se un algoritmo di canonizzazione viene supportato."
  remarks: '`algorithm`viene confrontato con la stringa restituita da <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm%2A>'
  syntax:
    content: public virtual bool IsCanonicalizationAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Il nome dell&quot;algoritmo da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;algoritmo di canonizzazione è supportato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)
  id: IsDigestAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsDigestAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se un algoritmo di digest viene supportato."
  remarks: '`algorithm`viene confrontato con la stringa restituita da <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm%2A>'
  syntax:
    content: public virtual bool IsDigestAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Il nome dell&quot;algoritmo da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;algoritmo di digest è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)
  id: IsEncryptionAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsEncryptionAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se un algoritmo di crittografia è supportato."
  remarks: '`algorithm`viene confrontato con la stringa restituita da <xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm%2A>'
  syntax:
    content: public virtual bool IsEncryptionAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Il nome dell&quot;algoritmo da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;algoritmo di crittografia è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  id: IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsEncryptionKeyDerivationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se un algoritmo di derivazione della chiave di crittografia è supportato."
  syntax:
    content: public virtual bool IsEncryptionKeyDerivationAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Il nome dell&quot;algoritmo da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;algoritmo di derivazione della chiave di crittografia è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)
  id: IsSignatureKeyDerivationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsSignatureKeyDerivationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se un algoritmo di derivazione della chiave di firma viene supportato."
  syntax:
    content: public virtual bool IsSignatureKeyDerivationAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Il nome dell&quot;algoritmo da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;algoritmo di derivazione della chiave di firma è supportato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)
  id: IsSymmetricKeyLengthSupported(System.Int32)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsSymmetricKeyLengthSupported(Int32)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Quando sottoposto a override in una classe derivata, indica se una determinata lunghezza della chiave simmetrica è supportata."
  remarks: "Il `length` viene confrontato con un intervallo di valori a seconda della sottoclasse. Ad esempio, nel `TripleDES` sottoclasse, questo metodo verifica che `length` è compreso tra 192 e 256, estremi compresi."
  syntax:
    content: public abstract bool IsSymmetricKeyLengthSupported (int length);
    parameters:
    - id: length
      type: System.Int32
      description: "La lunghezza della chiave da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la lunghezza della chiave simmetrica è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)
  id: IsSymmetricKeyWrapAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsSymmetricKeyWrapAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se un algoritmo di incapsulamento della chiave simmetrico viene supportato."
  syntax:
    content: public virtual bool IsSymmetricKeyWrapAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Il nome dell&quot;algoritmo da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;algoritmo di incapsulamento della chiave simmetrica è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)
  id: IsSymmetricSignatureAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: IsSymmetricSignatureAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indica se un algoritmo di firma simmetrico viene supportato."
  syntax:
    content: public virtual bool IsSymmetricSignatureAlgorithmSupported (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Il nome dell&quot;algoritmo da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;algoritmo di firma simmetrica è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
  id: TripleDes
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: TripleDes
  nameWithType: SecurityAlgorithmSuite.TripleDes
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene la suite di algoritmi Triple Data Encryption Standard (DES)."
  remarks: "Il <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>restituita è in realtà una sottoclasse interna che esegue l&quot;override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDes { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Triple DES <xref href=&quot;System.ServiceModel.Security.SecurityAlgorithmSuite&quot;> </xref>."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
  id: TripleDesRsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: TripleDesRsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesRsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave a 192 bit Triple Data Encryption Standard (DES) come algoritmo di crittografia del messaggio."
  remarks: "Il <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>restituita è in realtà una sottoclasse interna che esegue l&quot;override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesRsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave a 192 bit Triple Data Encryption Standard (DES) come algoritmo di crittografia del messaggio."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
  id: TripleDesSha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: TripleDesSha256
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene una suite di algoritmi che utilizza SHA256 per il digest della firma e 192 bit Triple Data Encryption Standard (DES) come algoritmo di crittografia del messaggio."
  remarks: "Il <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>restituita è in realtà una sottoclasse interna che esegue l&quot;override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Una suite di algoritmi che utilizza SHA256 per il digest della firma e 192 bit Triple Data Encryption Standard (DES) come algoritmo di crittografia del messaggio."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  id: TripleDesSha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  langs:
  - csharp
  name: TripleDesSha256Rsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Ottiene una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave, SHA256 per il digest della firma e 192 bit Triple Data Encryption Standard (DES) come algoritmo di crittografia del messaggio."
  remarks: "Il <xref:System.ServiceModel.Security.SecurityAlgorithmSuite>restituita è in realtà una sottoclasse interna che esegue l&quot;override di alcune delle proprietà che specificano valori predefiniti e di alcuni metodi.</xref:System.ServiceModel.Security.SecurityAlgorithmSuite>"
  syntax:
    content: public static System.ServiceModel.Security.SecurityAlgorithmSuite TripleDesSha256Rsa15 { get; }
    return:
      type: System.ServiceModel.Security.SecurityAlgorithmSuite
      description: "Una suite di algoritmi che utilizza RSA15 come algoritmo di incapsulamento della chiave, SHA256 per il digest della firma e 192 bit Triple Data Encryption Standard (DES) come algoritmo di crittografia del messaggio."
  overload: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: SecurityAlgorithmSuite()
  nameWithType: SecurityAlgorithmSuite.SecurityAlgorithmSuite()
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.SecurityAlgorithmSuite()
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128
  nameWithType: SecurityAlgorithmSuite.Basic128
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Sha256
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192
  nameWithType: SecurityAlgorithmSuite.Basic192
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Sha256
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256
  nameWithType: SecurityAlgorithmSuite.Basic256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Sha256
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Default
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Default
  nameWithType: SecurityAlgorithmSuite.Default
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.Default
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultAsymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultAsymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultCanonicalizationAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultDigestAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultDigestAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultEncryptionAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultEncryptionKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSignatureKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricKeyLength
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyLength
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricKeyLengthSupported(Int32)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricKeyWrapAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricSignatureAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsCanonicalizationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsDigestAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsEncryptionAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsEncryptionKeyDerivationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSignatureKeyDerivationAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricKeyLengthSupported(Int32)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricKeyWrapAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricSignatureAlgorithmSupported(String)
  nameWithType: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDes
  nameWithType: SecurityAlgorithmSuite.TripleDes
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesRsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesRsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesSha256
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesSha256Rsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256Rsa15
  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.#ctor*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: SecurityAlgorithmSuite
  nameWithType: SecurityAlgorithmSuite.SecurityAlgorithmSuite
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128
  nameWithType: SecurityAlgorithmSuite.Basic128
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Sha256
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic128Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic128Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192
  nameWithType: SecurityAlgorithmSuite.Basic192
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Sha256
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic192Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic192Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256
  nameWithType: SecurityAlgorithmSuite.Basic256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Sha256
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Basic256Sha256Rsa15
  nameWithType: SecurityAlgorithmSuite.Basic256Sha256Rsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Default*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: Default
  nameWithType: SecurityAlgorithmSuite.Default
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultAsymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultAsymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultCanonicalizationAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultDigestAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultDigestAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultDigestAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultEncryptionAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultEncryptionKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSignatureKeyDerivationLength
  nameWithType: SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyLength*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricKeyLength
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyLength
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricKeyWrapAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: DefaultSymmetricSignatureAlgorithm
  nameWithType: SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricKeyLengthSupported
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricKeyWrapAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsAsymmetricSignatureAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsCanonicalizationAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsDigestAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsDigestAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsEncryptionAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsEncryptionKeyDerivationAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSignatureKeyDerivationAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricKeyLengthSupported
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricKeyWrapAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: IsSymmetricSignatureAlgorithmSupported
  nameWithType: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDes
  nameWithType: SecurityAlgorithmSuite.TripleDes
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesRsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesRsa15
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesSha256
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256
- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15*
  parent: System.ServiceModel.Security.SecurityAlgorithmSuite
  isExternal: false
  name: TripleDesSha256Rsa15
  nameWithType: SecurityAlgorithmSuite.TripleDesSha256Rsa15
