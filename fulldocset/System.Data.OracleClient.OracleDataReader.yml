### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleDataReader
  id: OracleDataReader
  children:
  - System.Data.OracleClient.OracleDataReader.Close
  - System.Data.OracleClient.OracleDataReader.Depth
  - System.Data.OracleClient.OracleDataReader.FieldCount
  - System.Data.OracleClient.OracleDataReader.GetBoolean(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetByte(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetChar(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetDataTypeName(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetDateTime(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetDecimal(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetDouble(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetEnumerator
  - System.Data.OracleClient.OracleDataReader.GetFieldType(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetFloat(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetGuid(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetInt16(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetInt32(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetInt64(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetName(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleBFile(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleBinary(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleDateTime(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleLob(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleNumber(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleString(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleValue(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetOracleValues(System.Object[])
  - System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)
  - System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.OracleClient.OracleDataReader.GetSchemaTable
  - System.Data.OracleClient.OracleDataReader.GetString(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetTimeSpan(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetValue(System.Int32)
  - System.Data.OracleClient.OracleDataReader.GetValues(System.Object[])
  - System.Data.OracleClient.OracleDataReader.HasRows
  - System.Data.OracleClient.OracleDataReader.IsClosed
  - System.Data.OracleClient.OracleDataReader.IsDBNull(System.Int32)
  - System.Data.OracleClient.OracleDataReader.Item(System.Int32)
  - System.Data.OracleClient.OracleDataReader.Item(System.String)
  - System.Data.OracleClient.OracleDataReader.NextResult
  - System.Data.OracleClient.OracleDataReader.Read
  - System.Data.OracleClient.OracleDataReader.RecordsAffected
  langs:
  - csharp
  name: OracleDataReader
  nameWithType: OracleDataReader
  fullName: System.Data.OracleClient.OracleDataReader
  type: Class
  summary: "Consente di leggere un flusso forward-only di righe di dati da un&quot;origine dati. Questa classe non può essere ereditata."
  remarks: "Per creare un oggetto OracleDataReader, è necessario chiamare il <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>metodo il <xref:System.Data.OracleClient.OracleCommand>, anziché utilizzare direttamente un costruttore dell&quot;oggetto.</xref:System.Data.OracleClient.OracleCommand> </xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       Modifiche apportate a un set di risultati da un altro processo o thread durante la lettura dei dati potrebbero essere visibili all&quot;utente di OracleDataReader.       <xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A>e <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>sono le uniche proprietà che è possibile chiamare dopo la chiusura di OracleDataReader.</xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A></xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A> In alcuni casi, è necessario chiamare <xref:System.Data.OracleClient.OracleDataReader.Close%2A>prima di poter chiamare <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>.</xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A> </xref:System.Data.OracleClient.OracleDataReader.Close%2A>       È possibile aprire più OracleDataReader in qualsiasi momento.       I due esempi di Visual Basic seguenti viene illustrato come utilizzare OracleDataReader per recuperare un oggetto Oracle `REF CURSOR`. Questi esempi vengono utilizzate tabelle definite nello schema Oracle Scott/Tiger e richiedono il seguente package PL/SQL e il corpo del package. È necessario creare per il server per utilizzare gli esempi.       Creare il seguente package Oracle sul server Oracle.      ```   CREATE OR REPLACE PACKAGE CURSPKG AS       TYPE T_CURSOR IS REF CURSOR;       PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,          IO_CURSOR IN OUT T_CURSOR);       PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,          DEPTCURSOR OUT T_CURSOR);   END CURSPKG;   /   ```Creare il seguente corpo package Oracle sul server Oracle.      ```      CREATE OR REPLACE PACKAGE BODY CURSPKG AS        PROCEDURE OPEN_ONE_CURSOR (N_EMPNO IN NUMBER,                                   IO_CURSOR OUT T_CURSOR)        IS            V_CURSOR T_CURSOR;        BEGIN            IF N_EMPNO <> 0 THEN                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO                            AND EMP.EMPNO = N_EMPNO;            ELSE                 OPEN V_CURSOR FOR                 SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME                      FROM EMP, DEPT                      WHERE EMP.DEPTNO = DEPT.DEPTNO;            END IF;            IO_CURSOR := V_CURSOR;        END OPEN_ONE_CURSOR;        PROCEDURE OPEN_TWO_CURSORS (EMPCURSOR OUT T_CURSOR,                                    DEPTCURSOR OUT T_CURSOR)        IS            V_CURSOR1 T_CURSOR;            V_CURSOR2 T_CURSOR;        BEGIN            OPEN V_CURSOR1 FOR SELECT * FROM EMP;            OPEN V_CURSOR2 FOR SELECT * FROM DEPT;            EMPCURSOR  := V_CURSOR1;            DEPTCURSOR := V_CURSOR2;        END OPEN_TWO_CURSORS;    END CURSPKG;   /   ```Questo esempio di Visual Basic viene eseguita una stored procedure PL/SQL archiviati che restituisce un `REF CURSOR` parametro e legge il valore come OracleDataReader.      ```vb#   Private Sub ReadOracleData(ByVal connectionString As String)      Dim connection As New OracleConnection(connectionString)      Dim command As New OracleCommand()      Dim reader As OracleDataReader         connection.Open()      command.Connection = connection      command.CommandText = &quot;CURSPKG.OPEN_ONE_CURSOR&quot;      command.CommandType = CommandType.StoredProcedure      command.Parameters.Add(New OracleParameter(&quot;N_EMPNO&quot;, OracleType.Number)).Value = 7369      command.Parameters.Add(New OracleParameter(&quot;IO_CURSOR&quot;, OracleType.Cursor)).Direction = ParameterDirection.Output         reader = command.ExecuteReader()      While (reader.Read())         &quot; Do something with the values.      End While      reader.Close()      connection.Close()   End Sub   ```Questo esempio di Visual Basic viene eseguita una stored procedure PL/SQL archiviati che restituisce due `REF CURSOR` parametri e legge i valori tramite OracleDataReader.      ```vb#   Private Sub ReadOracleData(ByVal connectionString As String)      Dim dataSet As New DataSet()      Dim connection As New OracleConnection(connectionString)      Dim command As New OracleCommand()      Dim reader As OracleDataReader         connection.Open()      command.Connection = connection      command.CommandText = &quot;CURSPKG.OPEN_TWO_CURSORS&quot;      command.CommandType = CommandType.StoredProcedure      command.Parameters.Add(New OracleParameter(&quot;EMPCURSOR&quot;, OracleType.Cursor)).Direction = ParameterDirection.Output      command.Parameters.Add(New OracleParameter(&quot;DEPTCURSOR&quot;, OracleType.Cursor)).Direction = ParameterDirection.Output         reader = command.ExecuteReader(CommandBehavior.CloseConnection)      While (reader.Read())         &quot; Do something with the values.      End While      reader.NextResult()      While (reader.Read())           &quot; Do something with the values.      End While      reader.Close()      connection.Close()    End Sub   ```Nell&quot;esempio c# viene creata una tabella Oracle e lo carica con i dati. È necessario eseguire questo esempio viene prima di eseguire l&quot;esempio successivo, in cui viene illustrato l&quot;utilizzo di un oggetto OracleDataReader per accedere ai dati tramite le strutture OracleType.      ```c#   public void Setup(string connectionString)   {      OracleConnection connection = new OracleConnection(connectionString);      try      {         connection.Open();         OracleCommand command = connection.CreateCommand();         command.CommandText =&quot;CREATE TABLE OracleTypesTable (MyVarchar2 varchar2(3000),MyNumber number(28,4) PRIMARY KEY,MyDate date, MyRaw raw(255))&quot;;         command.ExecuteNonQuery();         command.CommandText =&quot;INSERT INTO OracleTypesTable VALUES (&quot;test&quot;, 2, to_date(&quot;2000-01-11 12:54:01&quot;,&quot;yyyy-mm-dd hh24:mi:ss&quot;), &quot;0001020304&quot;)&quot;;         command.ExecuteNonQuery();         command.CommandText=&quot;SELECT * FROM OracleTypesTable&quot;;      }      catch(Exception)      {      }      finally      {         connection.Close();      }   }   ```In questo esempio c# utilizza OracleDataReader per accedere ai dati e vengono utilizzati diversi <xref:System.Data.OracleClient.OracleType>strutture per visualizzare i dati.</xref:System.Data.OracleClient.OracleType>      ```c#   public void ReadOracleTypesExample(string connectionString)   {      OracleConnection connection = new OracleConnection(connectionString);      connection.Open();      OracleCommand command = connection.CreateCommand();      try      {         command.CommandText = &quot;SELECT * FROM OracleTypesTable&quot;;         OracleDataReader reader = command.ExecuteReader();         reader.Read();         //Using the Oracle specific getters for each type is faster than         //using GetOracleValue.         //First column, MyVarchar2, is a VARCHAR2 data type in Oracle Server         //and maps to OracleString.         OracleString oraclestring1 = reader.GetOracleString(0);         Console.WriteLine(&quot;OracleString &quot; + oraclestring1.ToString());            //Second column, MyNumber, is a NUMBER data type in Oracle Server         //and maps to OracleNumber.         OracleNumber oraclenumber1 = reader.GetOracleNumber(1);         Console.WriteLine(&quot;OracleNumber &quot; + oraclenumber1.ToString());            //Third column, MyDate, is a DATA data type in Oracle Server         //and maps to OracleDateTime.         OracleDateTime oracledatetime1 = reader.GetOracleDateTime(2);         Console.WriteLine(&quot;OracleDateTime &quot; + oracledatetime1.ToString());            //Fourth column, MyRaw, is a RAW data type in Oracle Server and         //maps to OracleBinary.         OracleBinary oraclebinary1 = reader.GetOracleBinary(3);            //Calling value on a null OracleBinary throws         //OracleNullValueException; therefore, check for a null value.         if (oraclebinary1.IsNull==false)         {            foreach(byte b in oraclebinary1.Value)            {               Console.WriteLine(&quot;byte &quot; + b.ToString());            }         }         reader.Close();      }      catch(Exception e)      {         Console.WriteLine(e.ToString());      }      finally      {         connection.Close();      }   }   ```"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection>, an <xref:System.Data.OracleClient.OracleCommand>, and an OracleDataReader. The example reads through the data, writing it out to the console. Finally, the example closes the OracleDataReader, then the <xref:System.Data.OracleClient.OracleConnection>.  \n  \n [!code-vb[Classic WebData OracleDataReader#1](~/add/codesnippet/visualbasic/t-system.data.oracleclie_9_1.vb)]\n [!code-cs[Classic WebData OracleDataReader#1](~/add/codesnippet/csharp/t-system.data.oracleclie_9_1.cs)]"
  syntax:
    content: 'public sealed class OracleDataReader : System.Data.Common.DbDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements: []
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.Common.DbDataReader.VisibleFieldCount
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.Close
  id: Close
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: OracleDataReader.Close()
  fullName: System.Data.OracleClient.OracleDataReader.Close()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Chiude il <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> oggetto."
  remarks: "Più <xref:System.Data.OracleClient.OracleDataReader>possono essere aperti in qualsiasi momento.</xref:System.Data.OracleClient.OracleDataReader>      > [!CAUTION] > Non chiamare `Close` o `Dispose` in una connessione, un `DataReader`, o qualsiasi altro oggetto gestito di `Finalize` metodo della classe. In un finalizzatore, è necessario rilasciare solo le risorse non gestite che la classe controlla direttamente. Se la classe non dispone di risorse non gestite, non includere un `Finalize` metodo nella definizione della classe. Per ulteriori informazioni, vedere [Garbage Collection](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.OracleClient.OracleDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.Depth
  id: Depth
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: OracleDataReader.Depth
  fullName: System.Data.OracleClient.OracleDataReader.Depth
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un valore che indica il livello di nidificazione della riga corrente."
  remarks: "La tabella più esterna è di livello zero."
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "Il livello di nidificazione della riga corrente."
  overload: System.Data.OracleClient.OracleDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.FieldCount
  id: FieldCount
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: OracleDataReader.FieldCount
  fullName: System.Data.OracleClient.OracleDataReader.FieldCount
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il numero di colonne nella riga corrente."
  remarks: "Include campi nascosti. Utilizzare <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>per escludere campi nascosti.</xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>       Dopo l&quot;esecuzione di una query che non restituisce righe, FieldCount restituisce 0."
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "Se non posizionato in un set di record valido, 0. in caso contrario il numero di colonne nel record corrente. Il valore predefinito è -1."
  overload: System.Data.OracleClient.OracleDataReader.FieldCount*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Non è presente alcuna connessione a un&quot;origine dati."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: OracleDataReader.GetBoolean(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come valore Boolean."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override bool GetBoolean (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Boolean
      description: "Valore booleano che rappresenta il valore della colonna."
  overload: System.Data.OracleClient.OracleDataReader.GetBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: OracleDataReader.GetByte(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come byte."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override byte GetByte (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Byte
      description: "Il valore della colonna specificata come byte."
  overload: System.Data.OracleClient.OracleDataReader.GetByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: OracleDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Legge un flusso di byte dall&quot;offset della colonna specificata nel buffer come una matrice, iniziando in corrispondenza dell&quot;offset del buffer specificato."
  remarks: "GetBytes restituisce il numero di byte disponibili nel campo. Nella maggior parte dei casi si tratta della lunghezza esatta del campo. Tuttavia, il numero restituito può essere inferiore alla lunghezza del campo se `GetBytes` è già stato utilizzato per ottenere i byte del campo. Questo può essere il caso, ad esempio, se il <xref:System.Data.OracleClient.OracleDataReader>viene letta una struttura di dati di grandi dimensioni in un buffer.</xref:System.Data.OracleClient.OracleDataReader> Per ulteriori informazioni, vedere il `SequentialAccess` impostazione <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior>       Se si passa un buffer che è un valore null, GetBytes restituisce la lunghezza del campo espressa in byte."
  syntax:
    content: public override long GetBytes (int i, long fieldOffset, byte[] buffer2, int bufferoffset, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    - id: fieldOffset
      type: System.Int64
      description: "L&quot;indice all&quot;interno del campo in cui verrà avviato l&quot;operazione di lettura."
    - id: buffer2
      type: System.Byte[]
      description: "Buffer in cui leggere il flusso di byte."
    - id: bufferoffset
      type: System.Int32
      description: "L&quot;indice in cui `buffer` per iniziare l&quot;operazione di scrittura."
    - id: length
      type: System.Int32
      description: "Il numero di byte da leggere."
    return:
      type: System.Int64
      description: "Il numero effettivo di byte letti."
  overload: System.Data.OracleClient.OracleDataReader.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: OracleDataReader.GetChar(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come un carattere."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override char GetChar (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Char
      description: "Il valore della colonna specificata come un carattere."
  overload: System.Data.OracleClient.OracleDataReader.GetChar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: OracleDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Legge un flusso di caratteri dall&quot;offset della colonna specificata nel buffer come una matrice, iniziando in corrispondenza dell&quot;offset del buffer specificato."
  remarks: "GetChars restituisce il numero di caratteri disponibili nel campo. Nella maggior parte dei casi si tratta della lunghezza esatta del campo. Tuttavia, il numero restituito può essere inferiore alla lunghezza del campo se `GetChars` è già stato utilizzato per ottenere i caratteri del campo. Questo può essere il caso, ad esempio, se il <xref:System.Data.OracleClient.OracleDataReader>viene letta una struttura di dati di grandi dimensioni in un buffer.</xref:System.Data.OracleClient.OracleDataReader> Per ulteriori informazioni, vedere il `SequentialAccess` impostazione <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior>       Se si passa un buffer che è un valore null. GetChars restituisce la lunghezza del campo in caratteri."
  syntax:
    content: public override long GetChars (int i, long fieldOffset, char[] buffer2, int bufferoffset, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    - id: fieldOffset
      type: System.Int64
      description: "L&quot;indice all&quot;interno della riga in cui iniziare l&quot;operazione di lettura."
    - id: buffer2
      type: System.Char[]
      description: "Buffer in cui copiare i dati."
    - id: bufferoffset
      type: System.Int32
      description: "L&quot;indice in cui `buffer` per iniziare l&quot;operazione di scrittura."
    - id: length
      type: System.Int32
      description: "Il numero di caratteri da leggere."
    return:
      type: System.Int64
      description: "Il numero effettivo di caratteri letti."
  overload: System.Data.OracleClient.OracleDataReader.GetChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: OracleDataReader.GetDataTypeName(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il nome del tipo di dati di origine."
  syntax:
    content: public override string GetDataTypeName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.String
      description: "Il nome del tipo di dati di origine."
  overload: System.Data.OracleClient.OracleDataReader.GetDataTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: OracleDataReader.GetDateTime(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come un <xref uid=&quot;langword_csharp_DateTime&quot; name=&quot;DateTime&quot; href=&quot;&quot;> </xref> oggetto."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override DateTime GetDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.DateTime
      description: "Il valore della colonna specificata come un <xref uid=&quot;langword_csharp_DateTime&quot; name=&quot;DateTime&quot; href=&quot;&quot;> </xref> oggetto."
  overload: System.Data.OracleClient.OracleDataReader.GetDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: OracleDataReader.GetDecimal(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come un <xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;> </xref> oggetto."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override decimal GetDecimal (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Decimal
      description: "Il valore della colonna specificata come un <xref uid=&quot;langword_csharp_Decimal&quot; name=&quot;Decimal&quot; href=&quot;&quot;> </xref> oggetto."
  overload: System.Data.OracleClient.OracleDataReader.GetDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: OracleDataReader.GetDouble(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come numero a virgola mobile e precisione doppia."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override double GetDouble (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Double
      description: "Il valore della colonna specificata come numero a virgola mobile e precisione doppia."
  overload: System.Data.OracleClient.OracleDataReader.GetDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: OracleDataReader.GetEnumerator()
  fullName: System.Data.OracleClient.OracleDataReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Restituisce un <xref:System.Collections.IEnumerator>che può essere utilizzato per scorrere le righe nel lettore di dati.</xref:System.Collections.IEnumerator>"
  remarks: "Sebbene sia possibile utilizzare questo metodo per recuperare un enumeratore esplicito, in linguaggi che supportano un ciclo foreach costrutto, è più semplice da utilizzare il costrutto di ciclo direttamente per scorrere le righe nel lettore di dati."
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Un <xref:System.Collections.IEnumerator>che può essere utilizzato per scorrere le righe nel lettore di dati.</xref:System.Collections.IEnumerator>"
  overload: System.Data.OracleClient.OracleDataReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: OracleDataReader.GetFieldType(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il <xref:System.Type>che rappresenta il tipo di dati dell&quot;oggetto.</xref:System.Type>"
  syntax:
    content: public override Type GetFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Type
      description: "Il <xref:System.Type>che rappresenta il tipo di dati dell&quot;oggetto.</xref:System.Type>"
  overload: System.Data.OracleClient.OracleDataReader.GetFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: OracleDataReader.GetFloat(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come numero a virgola mobile e precisione singola."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override float GetFloat (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Single
      description: "Il valore della colonna specificata come numero a virgola mobile e precisione singola."
  overload: System.Data.OracleClient.OracleDataReader.GetFloat*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: OracleDataReader.GetGuid(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come identificatore univoco globale (GUID)."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override Guid GetGuid (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Guid
      description: "Il valore della colonna specificata come un GUID."
  overload: System.Data.OracleClient.OracleDataReader.GetGuid*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: OracleDataReader.GetInt16(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come un intero con segno a 16 bit."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override short GetInt16 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Int16
      description: "Il valore della colonna specificata come un intero con segno a 16 bit."
  overload: System.Data.OracleClient.OracleDataReader.GetInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: OracleDataReader.GetInt32(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come un intero con segno a 32 bit."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override int GetInt32 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Int32
      description: "Il valore della colonna specificata come un intero con segno a 32 bit."
  overload: System.Data.OracleClient.OracleDataReader.GetInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: OracleDataReader.GetInt64(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come un intero con segno a 64 bit."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override long GetInt64 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Int64
      description: "Il valore della colonna specificata come integer con segno a 64 bit."
  overload: System.Data.OracleClient.OracleDataReader.GetInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: OracleDataReader.GetName(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il nome della colonna specificata."
  syntax:
    content: public override string GetName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.String
      description: "Stringa che rappresenta il nome della colonna specificata."
  overload: System.Data.OracleClient.OracleDataReader.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleBFile(System.Int32)
  id: GetOracleBFile(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleBFile(Int32)
  nameWithType: OracleDataReader.GetOracleBFile(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleBFile(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come un <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> oggetto."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public System.Data.OracleClient.OracleBFile GetOracleBFile (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Data.OracleClient.OracleBFile
      description: "Il valore della colonna specificata come un <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> oggetto."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleBFile*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleBinary(System.Int32)
  id: GetOracleBinary(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleBinary(Int32)
  nameWithType: OracleDataReader.GetOracleBinary(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleBinary(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come un <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> oggetto."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public System.Data.OracleClient.OracleBinary GetOracleBinary (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Data.OracleClient.OracleBinary
      description: "Il valore della colonna specificata come un <xref href=&quot;System.Data.OracleClient.OracleBinary&quot;> </xref> oggetto."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleBinary*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleDateTime(System.Int32)
  id: GetOracleDateTime(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleDateTime(Int32)
  nameWithType: OracleDataReader.GetOracleDateTime(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleDateTime(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come un <xref href=&quot;System.Data.OracleClient.OracleDateTime&quot;> </xref> oggetto."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public System.Data.OracleClient.OracleDateTime GetOracleDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Data.OracleClient.OracleDateTime
      description: "Il valore della colonna specificata come un <xref href=&quot;System.Data.OracleClient.OracleDateTime&quot;> </xref> oggetto."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleLob(System.Int32)
  id: GetOracleLob(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleLob(Int32)
  nameWithType: OracleDataReader.GetOracleLob(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleLob(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come un <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> oggetto."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public System.Data.OracleClient.OracleLob GetOracleLob (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Data.OracleClient.OracleLob
      description: "Il valore della colonna specificata come un <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> oggetto."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleLob*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(System.Int32)
  id: GetOracleMonthSpan(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleMonthSpan(Int32)
  nameWithType: OracleDataReader.GetOracleMonthSpan(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come un <xref href=&quot;System.Data.OracleClient.OracleMonthSpan&quot;> </xref> oggetto."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public System.Data.OracleClient.OracleMonthSpan GetOracleMonthSpan (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Data.OracleClient.OracleMonthSpan
      description: "Il valore della colonna specificata come un <xref href=&quot;System.Data.OracleClient.OracleMonthSpan&quot;> </xref> oggetto."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleNumber(System.Int32)
  id: GetOracleNumber(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleNumber(Int32)
  nameWithType: OracleDataReader.GetOracleNumber(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleNumber(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come un <xref href=&quot;System.Data.OracleClient.OracleNumber&quot;> </xref> oggetto."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public System.Data.OracleClient.OracleNumber GetOracleNumber (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Data.OracleClient.OracleNumber
      description: "Il valore della colonna specificata come un <xref href=&quot;System.Data.OracleClient.OracleNumber&quot;> </xref> oggetto."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleNumber*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleString(System.Int32)
  id: GetOracleString(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleString(Int32)
  nameWithType: OracleDataReader.GetOracleString(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleString(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come un <xref href=&quot;System.Data.OracleClient.OracleString&quot;> </xref> oggetto."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public System.Data.OracleClient.OracleString GetOracleString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Data.OracleClient.OracleString
      description: "Il valore della colonna specificata come un <xref href=&quot;System.Data.OracleClient.OracleString&quot;> </xref> oggetto."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(System.Int32)
  id: GetOracleTimeSpan(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleTimeSpan(Int32)
  nameWithType: OracleDataReader.GetOracleTimeSpan(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come un <xref href=&quot;System.Data.OracleClient.OracleTimeSpan&quot;> </xref> oggetto."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public System.Data.OracleClient.OracleTimeSpan GetOracleTimeSpan (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Data.OracleClient.OracleTimeSpan
      description: "Il valore della colonna specificata come un <xref href=&quot;System.Data.OracleClient.OracleTimeSpan&quot;> </xref> oggetto."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleValue(System.Int32)
  id: GetOracleValue(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleValue(Int32)
  nameWithType: OracleDataReader.GetOracleValue(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleValue(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna con l&quot;ordinale specificato nel formato Oracle."
  remarks: "Questo metodo restituisce <xref:System.DBNull>per colonne null del database.</xref:System.DBNull>"
  syntax:
    content: public object GetOracleValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Object
      description: "Il valore di Oracle da restituire."
  overload: System.Data.OracleClient.OracleDataReader.GetOracleValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOracleValues(System.Object[])
  id: GetOracleValues(System.Object[])
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOracleValues(Object[])
  nameWithType: OracleDataReader.GetOracleValues(Object[])
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleValues(Object[])
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene tutte le colonne attributo nella riga corrente nel formato di Oracle."
  remarks: "Per la maggior parte delle applicazioni, il metodo GetOracleValues fornisce un mezzo efficiente per recuperare tutte le colonne, anziché recuperare ciascuna colonna singolarmente.       È possibile passare un <xref:System.Object>matrice che contiene un valore minore rispetto al numero di colonne contenute nella riga risultante.</xref:System.Object> Solo la quantità di dati di <xref:System.Object>contenuti nella matrice vengono copiati nella matrice.</xref:System.Object> È inoltre possibile passare un <xref:System.Object>matrice la cui lunghezza è maggiore del numero di colonne contenute nella riga risultante.</xref:System.Object>       Questo metodo restituisce <xref:System.DBNull>per colonne null del database.</xref:System.DBNull>"
  syntax:
    content: public int GetOracleValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Matrice di tipo <xref:System.Object>in cui copiare le colonne di attributi.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Il numero di istanze di <xref:System.Object>nella matrice.</xref:System.Object>"
  overload: System.Data.OracleClient.OracleDataReader.GetOracleValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: OracleDataReader.GetOrdinal(String)
  fullName: System.Data.OracleClient.OracleDataReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene l&quot;ordinale di colonna, dato il nome della colonna."
  remarks: "GetOrdinal esegue innanzitutto una ricerca con distinzione maiuscole/minuscole. In caso contrario, viene eseguita una ricerca con distinzione tra maiuscole e secondo. Il metodo genera un `IndexOutOfRange` eccezione se non viene trovato l&quot;ordinale della colonna in base zero.       GetOrdinal è senza distinzione kana-width.       Poiché le ricerche basate su valori ordinali sono più efficienti ricerche denominate, non è opportuno chiamare GetOrdinal all&quot;interno di un ciclo. In alternativa, chiamare GetOrdinal solo una volta e quindi assegnare i risultati a una variabile integer per l&quot;utilizzo all&quot;interno del ciclo."
  example:
  - "The following example demonstrates how to use the GetOrdinal method.  \n  \n [Visual Basic]  \n  \n```  \nPublic Sub ReadOracleData(ByVal connectionString As String)  \n  \n    Dim queryString As String = \"SELECT OrderID, CustomerID FROM Orders\"  \n    Dim connection As New OracleConnection(connectionString)  \n    Dim command As New OracleCommand(queryString, connectionString)  \n  \n    connection.Open()  \n  \n    Dim reader As OracleDataReader = command.ExecuteReader()  \n  \n    Dim custIdCol As Integer = reader.GetOrdinal(\"CustomerID\")  \n  \n    Do While reader.Read()  \n        Console.WriteLine(\"CustomerID = {0}\", reader.GetString(custIdCol))  \n    Loop  \n  \n    reader.Close()  \n    connection.Close()  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \npublic void ReadOracleData(string connectionString)  \n{  \n    string queryString = \"SELECT OrderID, CustomerID FROM Orders\";  \n    OracleConnection connection = new OracleConnection(connectionString);  \n    OracleCommand command = new OracleCommand(queryString,connection);  \n  \n    connection.Open();  \n    OracleDataReader reader = command.ExecuteReader();  \n  \n    int custIdCol = reader.GetOrdinal(\"CustomerID\");  \n  \n    while (reader.Read())  \n        Console.WriteLine(\"CustomerID = {0}\", reader.GetString(custIdCol));  \n  \n    reader.Close();  \n    connection.Close();  \n}  \n```"
  syntax:
    content: public override int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome della colonna."
    return:
      type: System.Int32
      description: "Ordinale della colonna in base zero."
  overload: System.Data.OracleClient.OracleDataReader.GetOrdinal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: OracleDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> che è una rappresentazione del tipo di campo specifico del provider sottostante."
  syntax:
    content: public override Type GetProviderSpecificFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "An <xref:System.Int32>.</xref:System.Int32>"
    return:
      type: System.Type
      description: "Ottiene un <xref:System.Object>che è una rappresentazione del tipo di campo specifico del provider sottostante.</xref:System.Object>"
  overload: System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetProviderSpecificValue(Int32)
  nameWithType: OracleDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> che è una rappresentazione del tipo di campo specifico del provider sottostante."
  syntax:
    content: public override object GetProviderSpecificValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "An <xref:System.Int32>.</xref:System.Int32>"
    return:
      type: System.Object
      description: "Ottiene un <xref:System.Object>che è una rappresentazione del tipo di campo specifico del provider sottostante.</xref:System.Object>"
  overload: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetProviderSpecificValues(Object[])
  nameWithType: OracleDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(Object[])
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene una matrice di oggetti che sono una rappresentazione dei valori specifici del provider sottostante."
  remarks: "Per la maggior parte delle applicazioni, il metodo GetProviderSpecificValues fornisce un mezzo efficiente per recuperare tutte le colonne, anziché recuperare ciascuna colonna singolarmente.       È possibile passare un <xref:System.Object>matrice che contiene un valore minore rispetto al numero di colonne contenute nella riga risultante.</xref:System.Object> Solo la quantità di dati di <xref:System.Object>contenuti nella matrice vengono copiati nella matrice.</xref:System.Object> È inoltre possibile passare un <xref:System.Object>matrice la cui lunghezza è maggiore del numero di colonne contenute nella riga risultante.</xref:System.Object>       Questo metodo restituisce <xref:System.DBNull>per colonne null del database.</xref:System.DBNull>"
  syntax:
    content: public override int GetProviderSpecificValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Matrice di <xref:System.Object>.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Il numero di istanze di <xref:System.Object>nella matrice.</xref:System.Object>"
  overload: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: OracleDataReader.GetSchemaTable()
  fullName: System.Data.OracleClient.OracleDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Restituisce un <xref href=&quot;System.Data.DataTable&quot;> </xref> che descrive i metadati della colonna di OracleDataReader."
  remarks: "Metodo GetSchemaTable restituisce i metadati relativi a ogni colonna nell&quot;ordine seguente: | Colonna DataReader | Descrizione |   |-----------------------|-----------------|   | Nome colonna | Il nome di colonna. Questo potrebbe non essere univoco. Se non è possibile determinare il nome della colonna, viene restituito un valore null. Questo nome riflette sempre la denominazione più recente della colonna nel testo del comando o una vista corrente. |   | ColumnOrdinal | Ordinale in base zero della colonna. Questa colonna non può contenere un valore null. |   | ColumnSize | Lunghezza massima possibile di un valore nella colonna. Per le colonne che utilizzano un tipo di dati a lunghezza fissa, questa è la dimensione del tipo di dati. |   | NumericPrecision | Se <xref:System.Data.OracleClient.OracleParameter.DbType%2A>è un tipo di dati numerici, è la precisione massima della colonna.</xref:System.Data.OracleClient.OracleParameter.DbType%2A> La precisione dipende dalla definizione della colonna. `Float`e `Double` sono di tipi di dati Oracle e precisione binaria. |   | NumericScale | Se <xref:System.Data.OracleClient.OracleParameter.DbType%2A>è un tipo di dati numerici, il numero di cifre a destra del separatore decimale.</xref:System.Data.OracleClient.OracleParameter.DbType%2A> `Float`e `Double` tipi di dati in Oracle la scala sono binaria. |   | Tipo di dati | Esegue il mapping al tipo common language runtime di <xref:System.Data.OracleClient.OracleParameter.DbType%2A>. |   | IsLong | `true` se la colonna contiene un Long BLOB (Binary Object) che contiene dati molto lunghi. |   | AllowDBNull | `true` se l&quot;utente può impostare la colonna con un valore null; in caso contrario, `false`.</xref:System.Data.OracleClient.OracleParameter.DbType%2A> Una colonna può contenere valori null, anche se non può essere impostata su un valore null. |   | IsUnique | `true`: Due righe nella tabella di tabella di base restituito in <xref:System.Data.Common.SchemaTableColumn.BaseTableName>-possono avere lo stesso valore in questa colonna.</xref:System.Data.Common.SchemaTableColumn.BaseTableName> **IsUnique** è sicuramente `true` se la colonna costituisce una chiave da sola o se è presente un vincolo di tipo UNIQUE applicato solo a questa colonna. `false`: La colonna può contenere valori duplicati nella tabella di base. Il valore predefinito per questa colonna è false. |   | IsKey | `true`: La colonna fa parte di un set di colonne nel set di righe che, complessivamente, identificare in modo univoco la riga. Il set di colonne con **IsKey** impostato su true deve identificare in modo univoco una riga nel set di righe. Non è necessario che il set di colonne è un set minimo di colonne. Questo set di colonne può essere generato da una chiave primaria della tabella di base, un vincolo unique o un indice univoco. `false`: La colonna non è necessario per identificare in modo univoco la riga. |   | BaseTableName | Il nome della tabella o della vista nell&quot;archivio dati contenente la colonna. Un valore null se non è possibile determinare il nome della tabella di base. Il valore predefinito di questa colonna è un valore null. |   | BaseColumnName | Il nome della colonna nell&quot;archivio dati. Questo potrebbe essere diverso dal nome di colonna restituito nella **ColumnName** se è stato utilizzato un alias di colonna. Un valore null se non è possibile determinare il nome della colonna di base o se la colonna del set di righe è derivata da, ma non identica a, una colonna nei dati di archivio. Il valore predefinito per questa colonna è un valore null. |   | BaseSchemaName | Il nome dello schema nell&quot;archivio dati contenente la colonna. Un valore null se non è possibile determinare il nome dello schema di base. Il valore predefinito per questa colonna è un valore null. |       Viene restituita una riga per ogni colonna nel set di risultati.      > [!NOTE] > Per garantire che le colonne di metadati restituiscono le informazioni corrette, è necessario chiamare <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>con il `behavior` parametro impostato su `KeyInfo`.</xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> In caso contrario, alcune colonne nella tabella dello schema può restituire dati predefiniti, null o non corretto."
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Oggetto <xref href=&quot;System.Data.DataTable&quot;> </xref> che descrive i metadati della colonna."
  overload: System.Data.OracleClient.OracleDataReader.GetSchemaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: OracleDataReader.GetString(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come stringa."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public override string GetString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.String
      description: "Il valore della colonna specificata come stringa."
  overload: System.Data.OracleClient.OracleDataReader.GetString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetTimeSpan(System.Int32)
  id: GetTimeSpan(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetTimeSpan(Int32)
  nameWithType: OracleDataReader.GetTimeSpan(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetTimeSpan(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata come un <xref uid=&quot;langword_csharp_System.TimeSpan&quot; name=&quot;System.TimeSpan&quot; href=&quot;&quot;> </xref>."
  remarks: "Chiamare <xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>per controllare i valori null prima di chiamare questo metodo.</xref:System.Data.OracleClient.OracleDataReader.IsDBNull%2A>"
  syntax:
    content: public TimeSpan GetTimeSpan (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.TimeSpan
      description: "Il valore della colonna specificata come un <xref:System.TimeSpan>.</xref:System.TimeSpan>"
  overload: System.Data.OracleClient.OracleDataReader.GetTimeSpan*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: OracleDataReader.GetValue(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna con l&quot;ordinale specificato nel relativo formato nativo."
  remarks: "Questo metodo restituisce <xref:System.DBNull>per colonne null del database.</xref:System.DBNull> Il valore restituito da questo metodo potrebbe essere il risultato della conversione dal tipo di dati Number di Oracle per il tipo .NET decimale. Se il valore è troppo grande per essere archiviato nel tipo Decimal di .NET, questo metodo genera un <xref:System.Data.OracleClient.OracleException>che rappresenta un&quot;eccezione di overflow.</xref:System.Data.OracleClient.OracleException>"
  syntax:
    content: public override object GetValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Object
      description: "Valore da restituire."
  overload: System.Data.OracleClient.OracleDataReader.GetValue*
  exceptions:
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Il valore è troppo grande per essere archiviato nel tipo Decimal di .NET."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: OracleDataReader.GetValues(Object[])
  fullName: System.Data.OracleClient.OracleDataReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Popola una matrice di oggetti con i valori della colonna della riga corrente."
  remarks: "Per la maggior parte delle applicazioni, il metodo GetValues fornisce un mezzo efficiente per recuperare tutte le colonne, anziché recuperare ciascuna colonna singolarmente.       È possibile passare un <xref:System.Object>matrice che contiene un valore minore rispetto al numero di colonne contenute nella riga risultante.</xref:System.Object> Solo la quantità di dati di <xref:System.Object>contenuti nella matrice vengono copiati nella matrice.</xref:System.Object> È inoltre possibile passare un <xref:System.Object>matrice la cui lunghezza è maggiore del numero di colonne contenute nella riga risultante.</xref:System.Object>       Questo metodo restituisce <xref:System.DBNull>per colonne null del database.</xref:System.DBNull> Il valore restituito nel <xref:System.Object>matrice potrebbe essere il risultato della conversione dal tipo di dati Number di Oracle in un tipo Decimal .NET.</xref:System.Object> Se il valore è troppo grande per essere archiviato nel tipo Decimal di .NET, questo metodo genera un <xref:System.Data.OracleClient.OracleException>che rappresenta un&quot;eccezione di overflow.</xref:System.Data.OracleClient.OracleException>"
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Matrice di tipo <xref:System.Object>in cui copiare le colonne di attributi.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Il numero di istanze di <xref:System.Object>nella matrice.</xref:System.Object>"
  overload: System.Data.OracleClient.OracleDataReader.GetValues*
  exceptions:
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Il valore è troppo grande per essere archiviato nel tipo Decimal di .NET."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.HasRows
  id: HasRows
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: HasRows
  nameWithType: OracleDataReader.HasRows
  fullName: System.Data.OracleClient.OracleDataReader.HasRows
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> contiene uno o più righe."
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> contiene uno o più righe; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleDataReader.HasRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.IsClosed
  id: IsClosed
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: OracleDataReader.IsClosed
  fullName: System.Data.OracleClient.OracleDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Indica se il <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> è chiuso."
  remarks: "IsClosed e <xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>sono le uniche proprietà che è possibile chiamare dopo il <xref:System.Data.OracleClient.OracleDataReader>è chiuso.</xref:System.Data.OracleClient.OracleDataReader> </xref:System.Data.OracleClient.OracleDataReader.RecordsAffected%2A>"
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> è chiuso; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleDataReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: OracleDataReader.IsDBNull(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un valore che indica se la colonna contiene valori inesistenti o mancanti."
  remarks: "Per evitare che venga generato un errore, chiamare questo metodo per verificare i valori di colonna null prima di chiamare l&quot;oggetto tipizzato metodi Get (ad esempio, <xref:System.Data.OracleClient.OracleDataReader.GetByte%2A>, <xref:System.Data.OracleClient.OracleDataReader.GetChar%2A>e così via).</xref:System.Data.OracleClient.OracleDataReader.GetChar%2A> </xref:System.Data.OracleClient.OracleDataReader.GetByte%2A>"
  syntax:
    content: public override bool IsDBNull (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore della colonna specificato è equivalente a <xref href=&quot;System.DBNull&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleDataReader.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: OracleDataReader.Item(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata in formato nativo, dato il numero ordinale di colonna."
  syntax:
    content: public override object this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: "Il numero ordinale di colonna."
    return:
      type: System.Object
      description: "Il valore della colonna specificata nel relativo formato nativo."
  overload: System.Data.OracleClient.OracleDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: OracleDataReader.Item(String)
  fullName: System.Data.OracleClient.OracleDataReader.Item(String)
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore della colonna specificata in formato nativo, dato il nome della colonna."
  syntax:
    content: public override object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Il nome della colonna."
    return:
      type: System.Object
      description: "Il valore della colonna specificata nel relativo formato nativo."
  overload: System.Data.OracleClient.OracleDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "È stata trovata alcuna colonna con il nome specificato."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.NextResult
  id: NextResult
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: OracleDataReader.NextResult()
  fullName: System.Data.OracleClient.OracleDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Sposta il <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> al risultato successivo"
  remarks: "È necessario utilizzare un `REF CURSOR` quando si chiama questo metodo."
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se sono presenti più set di risultati in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.Read
  id: Read
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: OracleDataReader.Read()
  fullName: System.Data.OracleClient.OracleDataReader.Read()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Sposta il <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;> </xref> al record successivo."
  remarks: "La posizione predefinita del <xref:System.Data.OracleClient.OracleDataReader>è prima del primo record.</xref:System.Data.OracleClient.OracleDataReader> Pertanto, è necessario chiamare Read per iniziare ad accedere ai dati.       Più <xref:System.Data.OracleClient.OracleDataReader>possono essere aperti in qualsiasi momento.</xref:System.Data.OracleClient.OracleDataReader>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection>, an <xref:System.Data.OracleClient.OracleCommand>, and an <xref:System.Data.OracleClient.OracleDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.OracleClient.OracleDataReader>, then the <xref:System.Data.OracleClient.OracleConnection>.  \n  \n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.oracleclie_4_1.cs)]\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_4_1.vb)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se sono presenti altre righe. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleDataReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.OracleClient.OracleDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: OracleDataReader.RecordsAffected
  fullName: System.Data.OracleClient.OracleDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il numero di righe modificate, inserite o eliminate dall&quot;esecuzione dell&quot;istruzione SQL."
  remarks: "La proprietà RecordsAffected non viene impostata fino a quando non vengono lette tutte le righe e si chiude il <xref:System.Data.OracleClient.OracleDataReader>.</xref:System.Data.OracleClient.OracleDataReader>       <xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A>e RecordsAffected sono le uniche proprietà che è possibile chiamare dopo il <xref:System.Data.OracleClient.OracleDataReader>è chiuso.</xref:System.Data.OracleClient.OracleDataReader></xref:System.Data.OracleClient.OracleDataReader.IsClosed%2A>"
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "Il numero di righe modificate, inserite o eliminate. -1 per le istruzioni SELECT; 0 se nessuna riga è interessata o l&quot;istruzione non riuscita."
  overload: System.Data.OracleClient.OracleDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.OracleClient.OracleException
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleException
  nameWithType: OracleException
  fullName: System.Data.OracleClient.OracleException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.OracleClient.OracleDataReader.Close
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Close()
  nameWithType: OracleDataReader.Close()
  fullName: System.Data.OracleClient.OracleDataReader.Close()
- uid: System.Data.OracleClient.OracleDataReader.Depth
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Depth
  nameWithType: OracleDataReader.Depth
  fullName: System.Data.OracleClient.OracleDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleDataReader.FieldCount
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: FieldCount
  nameWithType: OracleDataReader.FieldCount
  fullName: System.Data.OracleClient.OracleDataReader.FieldCount
- uid: System.Data.OracleClient.OracleDataReader.GetBoolean(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: OracleDataReader.GetBoolean(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleDataReader.GetByte(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: OracleDataReader.GetByte(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.OracleClient.OracleDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: OracleDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleDataReader.GetChar(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: OracleDataReader.GetChar(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.OracleClient.OracleDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: OracleDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: OracleDataReader.GetDataTypeName(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleDataReader.GetDateTime(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: OracleDataReader.GetDateTime(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.OracleClient.OracleDataReader.GetDecimal(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: OracleDataReader.GetDecimal(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.OracleClient.OracleDataReader.GetDouble(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: OracleDataReader.GetDouble(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.OracleClient.OracleDataReader.GetEnumerator
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: OracleDataReader.GetEnumerator()
  fullName: System.Data.OracleClient.OracleDataReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.OracleClient.OracleDataReader.GetFieldType(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: OracleDataReader.GetFieldType(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.OracleClient.OracleDataReader.GetFloat(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: OracleDataReader.GetFloat(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.OracleClient.OracleDataReader.GetGuid(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: OracleDataReader.GetGuid(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.OracleClient.OracleDataReader.GetInt16(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: OracleDataReader.GetInt16(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.OracleClient.OracleDataReader.GetInt32(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: OracleDataReader.GetInt32(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetInt32(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetInt64(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: OracleDataReader.GetInt64(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetInt64(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetName(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: OracleDataReader.GetName(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetName(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetOracleBFile(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleBFile(Int32)
  nameWithType: OracleDataReader.GetOracleBFile(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleBFile(Int32)
- uid: System.Data.OracleClient.OracleBFile
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleBFile
  nameWithType: OracleBFile
  fullName: System.Data.OracleClient.OracleBFile
- uid: System.Data.OracleClient.OracleDataReader.GetOracleBinary(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleBinary(Int32)
  nameWithType: OracleDataReader.GetOracleBinary(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleBinary(Int32)
- uid: System.Data.OracleClient.OracleBinary
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleBinary
  nameWithType: OracleBinary
  fullName: System.Data.OracleClient.OracleBinary
- uid: System.Data.OracleClient.OracleDataReader.GetOracleDateTime(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleDateTime(Int32)
  nameWithType: OracleDataReader.GetOracleDateTime(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleDateTime(Int32)
- uid: System.Data.OracleClient.OracleDateTime
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleDateTime
  nameWithType: OracleDateTime
  fullName: System.Data.OracleClient.OracleDateTime
- uid: System.Data.OracleClient.OracleDataReader.GetOracleLob(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleLob(Int32)
  nameWithType: OracleDataReader.GetOracleLob(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleLob(Int32)
- uid: System.Data.OracleClient.OracleLob
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
- uid: System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleMonthSpan(Int32)
  nameWithType: OracleDataReader.GetOracleMonthSpan(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan(Int32)
- uid: System.Data.OracleClient.OracleMonthSpan
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleMonthSpan
  nameWithType: OracleMonthSpan
  fullName: System.Data.OracleClient.OracleMonthSpan
- uid: System.Data.OracleClient.OracleDataReader.GetOracleNumber(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleNumber(Int32)
  nameWithType: OracleDataReader.GetOracleNumber(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleNumber(Int32)
- uid: System.Data.OracleClient.OracleNumber
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleNumber
  nameWithType: OracleNumber
  fullName: System.Data.OracleClient.OracleNumber
- uid: System.Data.OracleClient.OracleDataReader.GetOracleString(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleString(Int32)
  nameWithType: OracleDataReader.GetOracleString(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleString(Int32)
- uid: System.Data.OracleClient.OracleString
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleString
  nameWithType: OracleString
  fullName: System.Data.OracleClient.OracleString
- uid: System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleTimeSpan(Int32)
  nameWithType: OracleDataReader.GetOracleTimeSpan(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan(Int32)
- uid: System.Data.OracleClient.OracleTimeSpan
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleTimeSpan
  nameWithType: OracleTimeSpan
  fullName: System.Data.OracleClient.OracleTimeSpan
- uid: System.Data.OracleClient.OracleDataReader.GetOracleValue(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleValue(Int32)
  nameWithType: OracleDataReader.GetOracleValue(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleDataReader.GetOracleValues(System.Object[])
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleValues(Object[])
  nameWithType: OracleDataReader.GetOracleValues(Object[])
  fullName: System.Data.OracleClient.OracleDataReader.GetOracleValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleDataReader.GetOrdinal(System.String)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: OracleDataReader.GetOrdinal(String)
  fullName: System.Data.OracleClient.OracleDataReader.GetOrdinal(String)
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: OracleDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetProviderSpecificValue(Int32)
  nameWithType: OracleDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetProviderSpecificValues(Object[])
  nameWithType: OracleDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues(Object[])
- uid: System.Data.OracleClient.OracleDataReader.GetSchemaTable
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: OracleDataReader.GetSchemaTable()
  fullName: System.Data.OracleClient.OracleDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OracleClient.OracleDataReader.GetString(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: OracleDataReader.GetString(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetString(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetTimeSpan(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetTimeSpan(Int32)
  nameWithType: OracleDataReader.GetTimeSpan(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetTimeSpan(Int32)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Data.OracleClient.OracleDataReader.GetValue(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: OracleDataReader.GetValue(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.GetValue(Int32)
- uid: System.Data.OracleClient.OracleDataReader.GetValues(System.Object[])
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: OracleDataReader.GetValues(Object[])
  fullName: System.Data.OracleClient.OracleDataReader.GetValues(Object[])
- uid: System.Data.OracleClient.OracleDataReader.HasRows
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: HasRows
  nameWithType: OracleDataReader.HasRows
  fullName: System.Data.OracleClient.OracleDataReader.HasRows
- uid: System.Data.OracleClient.OracleDataReader.IsClosed
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: IsClosed
  nameWithType: OracleDataReader.IsClosed
  fullName: System.Data.OracleClient.OracleDataReader.IsClosed
- uid: System.Data.OracleClient.OracleDataReader.IsDBNull(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: OracleDataReader.IsDBNull(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.IsDBNull(Int32)
- uid: System.Data.OracleClient.OracleDataReader.Item(System.Int32)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Item(Int32)
  nameWithType: OracleDataReader.Item(Int32)
  fullName: System.Data.OracleClient.OracleDataReader.Item(Int32)
- uid: System.Data.OracleClient.OracleDataReader.Item(System.String)
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Item(String)
  nameWithType: OracleDataReader.Item(String)
  fullName: System.Data.OracleClient.OracleDataReader.Item(String)
- uid: System.Data.OracleClient.OracleDataReader.NextResult
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: NextResult()
  nameWithType: OracleDataReader.NextResult()
  fullName: System.Data.OracleClient.OracleDataReader.NextResult()
- uid: System.Data.OracleClient.OracleDataReader.Read
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Read()
  nameWithType: OracleDataReader.Read()
  fullName: System.Data.OracleClient.OracleDataReader.Read()
- uid: System.Data.OracleClient.OracleDataReader.RecordsAffected
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: OracleDataReader.RecordsAffected
  fullName: System.Data.OracleClient.OracleDataReader.RecordsAffected
- uid: System.Data.OracleClient.OracleDataReader.Close*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Close
  nameWithType: OracleDataReader.Close
- uid: System.Data.OracleClient.OracleDataReader.Depth*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Depth
  nameWithType: OracleDataReader.Depth
- uid: System.Data.OracleClient.OracleDataReader.FieldCount*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: FieldCount
  nameWithType: OracleDataReader.FieldCount
- uid: System.Data.OracleClient.OracleDataReader.GetBoolean*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetBoolean
  nameWithType: OracleDataReader.GetBoolean
- uid: System.Data.OracleClient.OracleDataReader.GetByte*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetByte
  nameWithType: OracleDataReader.GetByte
- uid: System.Data.OracleClient.OracleDataReader.GetBytes*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetBytes
  nameWithType: OracleDataReader.GetBytes
- uid: System.Data.OracleClient.OracleDataReader.GetChar*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetChar
  nameWithType: OracleDataReader.GetChar
- uid: System.Data.OracleClient.OracleDataReader.GetChars*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetChars
  nameWithType: OracleDataReader.GetChars
- uid: System.Data.OracleClient.OracleDataReader.GetDataTypeName*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: OracleDataReader.GetDataTypeName
- uid: System.Data.OracleClient.OracleDataReader.GetDateTime*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDateTime
  nameWithType: OracleDataReader.GetDateTime
- uid: System.Data.OracleClient.OracleDataReader.GetDecimal*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDecimal
  nameWithType: OracleDataReader.GetDecimal
- uid: System.Data.OracleClient.OracleDataReader.GetDouble*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetDouble
  nameWithType: OracleDataReader.GetDouble
- uid: System.Data.OracleClient.OracleDataReader.GetEnumerator*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetEnumerator
  nameWithType: OracleDataReader.GetEnumerator
- uid: System.Data.OracleClient.OracleDataReader.GetFieldType*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetFieldType
  nameWithType: OracleDataReader.GetFieldType
- uid: System.Data.OracleClient.OracleDataReader.GetFloat*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetFloat
  nameWithType: OracleDataReader.GetFloat
- uid: System.Data.OracleClient.OracleDataReader.GetGuid*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetGuid
  nameWithType: OracleDataReader.GetGuid
- uid: System.Data.OracleClient.OracleDataReader.GetInt16*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetInt16
  nameWithType: OracleDataReader.GetInt16
- uid: System.Data.OracleClient.OracleDataReader.GetInt32*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetInt32
  nameWithType: OracleDataReader.GetInt32
- uid: System.Data.OracleClient.OracleDataReader.GetInt64*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetInt64
  nameWithType: OracleDataReader.GetInt64
- uid: System.Data.OracleClient.OracleDataReader.GetName*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetName
  nameWithType: OracleDataReader.GetName
- uid: System.Data.OracleClient.OracleDataReader.GetOracleBFile*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleBFile
  nameWithType: OracleDataReader.GetOracleBFile
- uid: System.Data.OracleClient.OracleDataReader.GetOracleBinary*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleBinary
  nameWithType: OracleDataReader.GetOracleBinary
- uid: System.Data.OracleClient.OracleDataReader.GetOracleDateTime*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleDateTime
  nameWithType: OracleDataReader.GetOracleDateTime
- uid: System.Data.OracleClient.OracleDataReader.GetOracleLob*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleLob
  nameWithType: OracleDataReader.GetOracleLob
- uid: System.Data.OracleClient.OracleDataReader.GetOracleMonthSpan*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleMonthSpan
  nameWithType: OracleDataReader.GetOracleMonthSpan
- uid: System.Data.OracleClient.OracleDataReader.GetOracleNumber*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleNumber
  nameWithType: OracleDataReader.GetOracleNumber
- uid: System.Data.OracleClient.OracleDataReader.GetOracleString*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleString
  nameWithType: OracleDataReader.GetOracleString
- uid: System.Data.OracleClient.OracleDataReader.GetOracleTimeSpan*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleTimeSpan
  nameWithType: OracleDataReader.GetOracleTimeSpan
- uid: System.Data.OracleClient.OracleDataReader.GetOracleValue*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleValue
  nameWithType: OracleDataReader.GetOracleValue
- uid: System.Data.OracleClient.OracleDataReader.GetOracleValues*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOracleValues
  nameWithType: OracleDataReader.GetOracleValues
- uid: System.Data.OracleClient.OracleDataReader.GetOrdinal*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetOrdinal
  nameWithType: OracleDataReader.GetOrdinal
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificFieldType*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: OracleDataReader.GetProviderSpecificFieldType
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValue*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: OracleDataReader.GetProviderSpecificValue
- uid: System.Data.OracleClient.OracleDataReader.GetProviderSpecificValues*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: OracleDataReader.GetProviderSpecificValues
- uid: System.Data.OracleClient.OracleDataReader.GetSchemaTable*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: OracleDataReader.GetSchemaTable
- uid: System.Data.OracleClient.OracleDataReader.GetString*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetString
  nameWithType: OracleDataReader.GetString
- uid: System.Data.OracleClient.OracleDataReader.GetTimeSpan*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetTimeSpan
  nameWithType: OracleDataReader.GetTimeSpan
- uid: System.Data.OracleClient.OracleDataReader.GetValue*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetValue
  nameWithType: OracleDataReader.GetValue
- uid: System.Data.OracleClient.OracleDataReader.GetValues*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: GetValues
  nameWithType: OracleDataReader.GetValues
- uid: System.Data.OracleClient.OracleDataReader.HasRows*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: HasRows
  nameWithType: OracleDataReader.HasRows
- uid: System.Data.OracleClient.OracleDataReader.IsClosed*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: IsClosed
  nameWithType: OracleDataReader.IsClosed
- uid: System.Data.OracleClient.OracleDataReader.IsDBNull*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: IsDBNull
  nameWithType: OracleDataReader.IsDBNull
- uid: System.Data.OracleClient.OracleDataReader.Item*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Item
  nameWithType: OracleDataReader.Item
- uid: System.Data.OracleClient.OracleDataReader.NextResult*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: NextResult
  nameWithType: OracleDataReader.NextResult
- uid: System.Data.OracleClient.OracleDataReader.Read*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: Read
  nameWithType: OracleDataReader.Read
- uid: System.Data.OracleClient.OracleDataReader.RecordsAffected*
  parent: System.Data.OracleClient.OracleDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: OracleDataReader.RecordsAffected
