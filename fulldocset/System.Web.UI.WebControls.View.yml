### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.View
  id: View
  children:
  - System.Web.UI.WebControls.View.#ctor
  - System.Web.UI.WebControls.View.Activate
  - System.Web.UI.WebControls.View.Deactivate
  - System.Web.UI.WebControls.View.EnableTheming
  - System.Web.UI.WebControls.View.OnActivate(System.EventArgs)
  - System.Web.UI.WebControls.View.OnDeactivate(System.EventArgs)
  - System.Web.UI.WebControls.View.Visible
  langs:
  - csharp
  name: View
  nameWithType: View
  fullName: System.Web.UI.WebControls.View
  type: Class
  summary: "Rappresenta un controllo che funge da contenitore per un gruppo di controlli all&quot;interno di un <xref href=&quot;System.Web.UI.WebControls.MultiView&quot;> </xref> controllo."
  remarks: "In questo argomento:- [Introduzione](#introduction)      -   [sintassi dichiarativa](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # introduzione di visualizzazione controllo è un contenitore per un gruppo di controlli.       Un controllo di visualizzazione deve sempre essere contenuto all&quot;interno di un <xref:System.Web.UI.WebControls.MultiView>controllo.</xref:System.Web.UI.WebControls.MultiView> Controllo di visualizzazione solo una alla volta può essere definito come la visualizzazione attiva all&quot;interno di un <xref:System.Web.UI.WebControls.MultiView>controllo.</xref:System.Web.UI.WebControls.MultiView>       Il <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A>proprietà specifica il controllo View attivo all&quot;interno di <xref:System.Web.UI.WebControls.MultiView.Views%2A>raccolta di un <xref:System.Web.UI.WebControls.MultiView>controllo.</xref:System.Web.UI.WebControls.MultiView> </xref:System.Web.UI.WebControls.MultiView.Views%2A> </xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> Il controllo view attivo viene eseguito il rendering nel client, a condizione che la contiene <xref:System.Web.UI.WebControls.MultiView>controllo è visibile.</xref:System.Web.UI.WebControls.MultiView> Utilizzare il <xref:System.Web.UI.WebControls.View.Visible%2A>proprietà per determinare se un controllo di visualizzazione e i relativi controlli figlio sono visibili nella pagina e viene eseguito il rendering nel client.</xref:System.Web.UI.WebControls.View.Visible%2A>       Un controllo di visualizzazione può contenere i controlli di qualsiasi tipo, inclusi altri <xref:System.Web.UI.WebControls.MultiView>controlli.</xref:System.Web.UI.WebControls.MultiView> Un controllo di visualizzazione non supporta alcuna proprietà di stile. Per applicare stili a un controllo di visualizzazione, aggiungere uno o più <xref:System.Web.UI.WebControls.Panel>controlli al controllo di visualizzazione.</xref:System.Web.UI.WebControls.Panel>       Fornisce la classe di visualizzazione di <xref:System.Web.UI.WebControls.View.Activate>e <xref:System.Web.UI.WebControls.View.Deactivate>eventi.</xref:System.Web.UI.WebControls.View.Deactivate> </xref:System.Web.UI.WebControls.View.Activate> Il <xref:System.Web.UI.WebControls.View.Activate>evento viene generato quando il controllo di visualizzazione corrente diventa la visualizzazione attiva.</xref:System.Web.UI.WebControls.View.Activate> Questo errore si verifica quando il valore della <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A>le modifiche alle proprietà o <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A>metodo viene chiamato per specificare un altro controllo di visualizzazione.</xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> </xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> Ad esempio, se `View1` è attiva la visualizzazione all&quot;interno di un <xref:System.Web.UI.WebControls.MultiView>controllo, quando il <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A>le modifiche alle proprietà per specificare `View2`, il <xref:System.Web.UI.WebControls.View.Activate>evento viene generato per `View2` e <xref:System.Web.UI.WebControls.View.Deactivate>evento viene generato per `View1`.</xref:System.Web.UI.WebControls.View.Deactivate> </xref:System.Web.UI.WebControls.View.Activate> </xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> </xref:System.Web.UI.WebControls.MultiView>       Per consentire agli utenti di spostarsi tra più controlli di visualizzazione all&quot;interno di un <xref:System.Web.UI.WebControls.MultiView>controllo, è possibile aggiungere un <xref:System.Web.UI.WebControls.LinkButton>o <xref:System.Web.UI.WebControls.Button>ogni controllo di visualizzazione.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.MultiView> Impostare il <xref:System.Web.UI.WebControls.LinkButton>o <xref:System.Web.UI.WebControls.Button>del controllo `CommandName` proprietà per l&quot;ID del controllo di visualizzazione a cui passare.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.LinkButton> Per un esempio di codice, vedere <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged>.</xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged>       Per ulteriori informazioni sulla modifica dei controlli di visualizzazione all&quot;interno di un <xref:System.Web.UI.WebControls.MultiView>di controllo, vedere il <xref:System.Web.UI.WebControls.MultiView>argomento.</xref:System.Web.UI.WebControls.MultiView> </xref:System.Web.UI.WebControls.MultiView>      <a name=&quot;declarative_syntax&quot;></a># # Sintassi dichiarativa```   <asp:View       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       OnActivate=&quot;Activate event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDeactivate=&quot;Deactivate event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Visible=&quot;True|False&quot;   />   ```"
  example:
  - "The following code example demonstrates how to create a <xref:System.Web.UI.WebControls.MultiView> control that contains three View controls. The first time the page is loaded, `DefaultView` is set as the active view. Each View control contains link buttons to allow the user to navigate to different views. Note that each View control contains a <xref:System.Web.UI.WebControls.Panel> control to allow styles to be applied.  \n  \n [!code-vb[MultiView Class Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_297_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ParseChildren(false)]

      [System.Web.UI.ToolboxData("<{0}:View runat="server"></{0}:View>")]

      public class View : System.Web.UI.Control
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  platform:
  - net462
- uid: System.Web.UI.WebControls.View.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.View
  langs:
  - csharp
  name: View()
  nameWithType: View.View()
  fullName: System.Web.UI.WebControls.View.View()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.View&quot;> </xref> classe."
  syntax:
    content: public View ();
    parameters: []
  overload: System.Web.UI.WebControls.View.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.View.Activate
  id: Activate
  parent: System.Web.UI.WebControls.View
  langs:
  - csharp
  name: Activate
  nameWithType: View.Activate
  fullName: System.Web.UI.WebControls.View.Activate
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica quando l&quot;oggetto corrente <xref href=&quot;System.Web.UI.WebControls.View&quot;> </xref> controllo diventa la visualizzazione attiva."
  remarks: "Viene generato l&quot;evento di attivazione quando corrente <xref:System.Web.UI.WebControls.View>controllo diventa la visualizzazione attiva.</xref:System.Web.UI.WebControls.View> Questo errore si verifica quando il valore della <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A>le modifiche alle proprietà o <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A>metodo viene chiamato per specificare un diverso <xref:System.Web.UI.WebControls.View>controllo.</xref:System.Web.UI.WebControls.View> </xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> </xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> Ad esempio, se `View1` è attiva la visualizzazione all&quot;interno di un <xref:System.Web.UI.WebControls.MultiView>controllo, quando il <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A>le modifiche alle proprietà per specificare `View2`, viene generato l&quot;evento di attivazione per `View2` e <xref:System.Web.UI.WebControls.View.Deactivate>evento viene generato per `View1`.</xref:System.Web.UI.WebControls.View.Deactivate> </xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> </xref:System.Web.UI.WebControls.MultiView>"
  example:
  - "The following code example demonstrates how to specify and code an event handler for the Activate event of a <xref:System.Web.UI.WebControls.View> control. When the active view changes, a message is displayed to the user specifying the <xref:System.Web.UI.WebControls.View> control that raised the Activate event and the <xref:System.Web.UI.WebControls.View> control that raised the <xref:System.Web.UI.WebControls.View.Deactivate> event.  \n  \n [!code-vb[View.Activate Event Example#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_82_1.aspx)]\n [!code-cs[View.Activate Event Example#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_82_1.aspx)]"
  syntax:
    content: public event EventHandler Activate;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.View.Deactivate
  id: Deactivate
  parent: System.Web.UI.WebControls.View
  langs:
  - csharp
  name: Deactivate
  nameWithType: View.Deactivate
  fullName: System.Web.UI.WebControls.View.Deactivate
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Si verifica quando si attiva corrente <xref href=&quot;System.Web.UI.WebControls.View&quot;> </xref> controllo diventa inattivo."
  remarks: "Viene generato l&quot;evento disattiva quando attivo corrente <xref:System.Web.UI.WebControls.View>controllo diventa inattivo.</xref:System.Web.UI.WebControls.View> A <xref:System.Web.UI.WebControls.View>controllo diventa inattivo quando il valore della <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A>le modifiche alle proprietà o <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A>metodo viene chiamato per specificare un diverso <xref:System.Web.UI.WebControls.View>controllo.</xref:System.Web.UI.WebControls.View> </xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> </xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> </xref:System.Web.UI.WebControls.View> Ad esempio, se `View1` è attiva la visualizzazione all&quot;interno di un <xref:System.Web.UI.WebControls.MultiView>controllo, quando il <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A>le modifiche alle proprietà per specificare `View2`, viene generato l&quot;evento Deactivate per `View1` e <xref:System.Web.UI.WebControls.View.Activate>evento viene generato per `View2`.</xref:System.Web.UI.WebControls.View.Activate> </xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> </xref:System.Web.UI.WebControls.MultiView>"
  example:
  - "The following code example demonstrates how to specify and code an event handler for the Deactivate event of a <xref:System.Web.UI.WebControls.View> control. When the active view changes, a message is displayed to the user specifying the <xref:System.Web.UI.WebControls.View> control that raised the <xref:System.Web.UI.WebControls.View.Activate> event and the <xref:System.Web.UI.WebControls.View> control that raised the Deactivate event.  \n  \n [!code-vb[View.Activate Event Example#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_15_1.aspx)]\n [!code-cs[View.Activate Event Example#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_15_1.aspx)]"
  syntax:
    content: public event EventHandler Deactivate;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.View.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.View
  langs:
  - csharp
  name: EnableTheming
  nameWithType: View.EnableTheming
  fullName: System.Web.UI.WebControls.View.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se i temi si applicano a questo controllo."
  remarks: "La proprietà EnableTheming indica se i temi sono abilitati per il <xref:System.Web.UI.WebControls.View>controllo.</xref:System.Web.UI.WebControls.View> La proprietà EnableTheming determina anche se i temi sono abilitati per i controlli contenuti nel relativo <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>insieme.</xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> Quando la proprietà EnableTheming è `true`, directory dei temi dell&quot;applicazione viene eseguita la ricerca per le interfacce di controllo da applicare. Se è presente alcuna interfaccia per il controllo specifico nella directory dei temi, un&quot;interfaccia non viene applicata. Quando la proprietà EnableTheming è `false`, la directory di tema non viene eseguita la ricerca e il contenuto della <xref:System.Web.UI.Control.SkinID%2A>proprietà non vengono utilizzati.</xref:System.Web.UI.Control.SkinID%2A>       Un controllo è possibile eseguire l&quot;override del valore EnableTheming impostato dal relativo controllo padre, o dalla pagina contenitore. Ad esempio, se un <xref:System.Web.UI.WebControls.View>controllo è impostato su EnableTheming `false`, in modo selettivo, è possibile applicare temi ai controlli figlio contenuti all&quot;interno di <xref:System.Web.UI.WebControls.View>controllo impostando il <xref:System.Web.UI.Control.EnableTheming%2A>proprietà `true` per i singoli controlli figlio.</xref:System.Web.UI.Control.EnableTheming%2A> </xref:System.Web.UI.WebControls.View> </xref:System.Web.UI.WebControls.View>"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per utilizzare i temi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.View.EnableTheming*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.View.OnActivate(System.EventArgs)
  id: OnActivate(System.EventArgs)
  parent: System.Web.UI.WebControls.View
  langs:
  - csharp
  name: OnActivate(EventArgs)
  nameWithType: View.OnActivate(EventArgs)
  fullName: System.Web.UI.WebControls.View.OnActivate(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.View.Activate&quot;> </xref> evento del <xref href=&quot;System.Web.UI.WebControls.View&quot;> </xref> controllo."
  remarks: "Il <xref:System.Web.UI.WebControls.View.Activate>evento viene generato quando l&quot;oggetto corrente <xref:System.Web.UI.WebControls.View>controllo diventa la visualizzazione attiva.</xref:System.Web.UI.WebControls.View> </xref:System.Web.UI.WebControls.View.Activate>"
  syntax:
    content: protected virtual void OnActivate (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.View.OnActivate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.View.OnDeactivate(System.EventArgs)
  id: OnDeactivate(System.EventArgs)
  parent: System.Web.UI.WebControls.View
  langs:
  - csharp
  name: OnDeactivate(EventArgs)
  nameWithType: View.OnDeactivate(EventArgs)
  fullName: System.Web.UI.WebControls.View.OnDeactivate(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.WebControls.View.Deactivate&quot;> </xref> evento del <xref href=&quot;System.Web.UI.WebControls.View&quot;> </xref> controllo."
  remarks: "Il <xref:System.Web.UI.WebControls.View.Deactivate>evento viene generato quando si attiva corrente <xref:System.Web.UI.WebControls.View>controllo diventa inattivo.</xref:System.Web.UI.WebControls.View> </xref:System.Web.UI.WebControls.View.Deactivate>"
  syntax:
    content: protected virtual void OnDeactivate (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.View.OnDeactivate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.View.Visible
  id: Visible
  parent: System.Web.UI.WebControls.View
  langs:
  - csharp
  name: Visible
  nameWithType: View.Visible
  fullName: System.Web.UI.WebControls.View.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.View&quot;> </xref> controllo è visibile."
  remarks: "Utilizzare la proprietà Visible per determinare se l&quot;oggetto corrente <xref:System.Web.UI.WebControls.View>controllo è visibile e viene eseguito il rendering nel client.</xref:System.Web.UI.WebControls.View> Per un <xref:System.Web.UI.WebControls.View>per essere visibile nella pagina rendering di controllo, deve essere la visualizzazione attiva nel contenitore <xref:System.Web.UI.WebControls.MultiView>controllo e la contenente <xref:System.Web.UI.WebControls.MultiView>controllo deve essere visibile.</xref:System.Web.UI.WebControls.MultiView> </xref:System.Web.UI.WebControls.MultiView> </xref:System.Web.UI.WebControls.View> Se la contenente <xref:System.Web.UI.WebControls.MultiView>controllo non è visibile nella pagina, o se il <xref:System.Web.UI.WebControls.View>controllo non è attiva la visualizzazione, il <xref:System.Web.UI.WebControls.View>controllo e i relativi controlli figlio non viene eseguiti.</xref:System.Web.UI.WebControls.View> </xref:System.Web.UI.WebControls.View> </xref:System.Web.UI.WebControls.MultiView>      > [!NOTE] > Visibile la proprietà è impostata internamente in base alla visibilità e la visualizzazione attiva per il controllo contenitore padre. Se si imposta questa proprietà in fase di esecuzione, un <xref:System.InvalidOperationException>viene generata un&quot;eccezione.</xref:System.InvalidOperationException> Se si imposta la proprietà Visible in fase di progettazione, vengono ignorate tutte le modifiche alla proprietà."
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Web.UI.WebControls.View&quot;> </xref> controllo è visibile; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.View.Visible*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È stato effettuato un tentativo di impostare questa proprietà in fase di esecuzione."
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.View.#ctor
  parent: System.Web.UI.WebControls.View
  isExternal: false
  name: View()
  nameWithType: View.View()
  fullName: System.Web.UI.WebControls.View.View()
- uid: System.Web.UI.WebControls.View.Activate
  parent: System.Web.UI.WebControls.View
  isExternal: false
  name: Activate
  nameWithType: View.Activate
  fullName: System.Web.UI.WebControls.View.Activate
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.View.Deactivate
  parent: System.Web.UI.WebControls.View
  isExternal: false
  name: Deactivate
  nameWithType: View.Deactivate
  fullName: System.Web.UI.WebControls.View.Deactivate
- uid: System.Web.UI.WebControls.View.EnableTheming
  parent: System.Web.UI.WebControls.View
  isExternal: false
  name: EnableTheming
  nameWithType: View.EnableTheming
  fullName: System.Web.UI.WebControls.View.EnableTheming
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.View.OnActivate(System.EventArgs)
  parent: System.Web.UI.WebControls.View
  isExternal: false
  name: OnActivate(EventArgs)
  nameWithType: View.OnActivate(EventArgs)
  fullName: System.Web.UI.WebControls.View.OnActivate(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.View.OnDeactivate(System.EventArgs)
  parent: System.Web.UI.WebControls.View
  isExternal: false
  name: OnDeactivate(EventArgs)
  nameWithType: View.OnDeactivate(EventArgs)
  fullName: System.Web.UI.WebControls.View.OnDeactivate(EventArgs)
- uid: System.Web.UI.WebControls.View.Visible
  parent: System.Web.UI.WebControls.View
  isExternal: false
  name: Visible
  nameWithType: View.Visible
  fullName: System.Web.UI.WebControls.View.Visible
- uid: System.Web.UI.WebControls.View.#ctor*
  parent: System.Web.UI.WebControls.View
  isExternal: false
  name: View
  nameWithType: View.View
- uid: System.Web.UI.WebControls.View.EnableTheming*
  parent: System.Web.UI.WebControls.View
  isExternal: false
  name: EnableTheming
  nameWithType: View.EnableTheming
- uid: System.Web.UI.WebControls.View.OnActivate*
  parent: System.Web.UI.WebControls.View
  isExternal: false
  name: OnActivate
  nameWithType: View.OnActivate
- uid: System.Web.UI.WebControls.View.OnDeactivate*
  parent: System.Web.UI.WebControls.View
  isExternal: false
  name: OnDeactivate
  nameWithType: View.OnDeactivate
- uid: System.Web.UI.WebControls.View.Visible*
  parent: System.Web.UI.WebControls.View
  isExternal: false
  name: Visible
  nameWithType: View.Visible
