### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IWebPart
  id: IWebPart
  children:
  - System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
  - System.Web.UI.WebControls.WebParts.IWebPart.Description
  - System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
  - System.Web.UI.WebControls.WebParts.IWebPart.Title
  - System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
  - System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
  langs:
  - csharp
  name: IWebPart
  nameWithType: IWebPart
  fullName: System.Web.UI.WebControls.WebParts.IWebPart
  type: Interface
  summary: "Definisce le proprietà dell&quot;interfaccia utente comune utilizzate da ASP.NET <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlli."
  remarks: "L&quot;interfaccia IWebPart fornisce diverse proprietà orientate all&quot;interfaccia utente che consentono agli utenti di lavorare con <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli.</xref:System.Web.UI.WebControls.WebParts.WebPart> Quando si creano controlli che derivano dalla base <xref:System.Web.UI.WebControls.WebParts.WebPart>(classe), si otterrà un&quot;implementazione di tutte le proprietà nell&quot;interfaccia IWebPart, poiché la <xref:System.Web.UI.WebControls.WebParts.WebPart>classe base implementa questa interfaccia.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>       È possibile utilizzare i controlli utente esistenti, i controlli ASP.NET o controlli personalizzati di server che non ereditano dalla <xref:System.Web.UI.WebControls.WebParts.WebPart>classe come parte di un&quot;applicazione Web part, ed è inoltre possibile usare queste proprietà all&quot;interfaccia utente dichiarate dall&quot;interfaccia IWebPart.</xref:System.Web.UI.WebControls.WebParts.WebPart> Se si inseriscono i controlli server esistenti in un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zona, in fase di esecuzione che viene eseguito il wrapping con un <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>oggetto.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Poiché il <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>classe eredita la <xref:System.Web.UI.WebControls.WebParts.WebPart>classe di base, consente ai controlli server esistenti di agire come true <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli e aggiunge loro le proprietà dell&quot;interfaccia IWebPart.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>       Se si inseriscono i controlli server che non sono <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli le zone, è possibile utilizzare le proprietà di IWebPart in fase di esecuzione e, inoltre, è possibile dichiarare i valori per le proprietà dei controlli server nel markup della pagina (nel formato di persistenza di pagina).</xref:System.Web.UI.WebControls.WebParts.WebPart> Tuttavia, poiché queste proprietà sono disponibili solo per i controlli server in fase di esecuzione, le funzionalità di codifica in fase di progettazione quali IntelliSense non riconoscono IWebPart le proprietà dichiarate sui controlli server. Proprietà dichiarate su questi controlli continuano a funzionare quando si carica la pagina, ma Microsoft Visual Studio non riconosce le proprietà come valida in fase di progettazione. Se si desidera aggiungere le proprietà IWebPart server esistente e migliorare l&quot;esperienza utente in fase di progettazione dei controlli utente, è possibile implementare l&quot;interfaccia IWebPart in un controllo server.       Ad esempio il motivo principale per implementare l&quot;interfaccia IWebPart è per i controlli che non supportano l&quot;utilizzo delle proprietà expando (personalizzato). Le proprietà expando sono stringhe che possono essere aggiunte dinamicamente a una classe come proprietà, tramite il <xref:System.Web.UI.IAttributeAccessor>interfaccia.</xref:System.Web.UI.IAttributeAccessor> I controlli che implementano questa interfaccia, tra cui la <xref:System.Web.UI.WebControls.WebControl>classe e i relativi elementi figlio, possono utilizzare le proprietà expando.</xref:System.Web.UI.WebControls.WebControl> Pertanto, tutti i controlli server ASP.NET, i controlli personalizzati che derivano da tali controlli utente Web, e <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli supportano l&quot;utilizzo di proprietà expando.</xref:System.Web.UI.WebControls.WebParts.WebPart> I controlli personalizzati che ereditano direttamente dalla base <xref:System.Web.UI.Control>classe non supportano le proprietà expando.</xref:System.Web.UI.Control> Pertanto, se si dichiarano di questi controlli all&quot;interno di una <xref:System.Web.UI.WebControls.WebParts.WebPartZone>non sarà in grado di dichiarare le proprietà IWebPart comuni per i controlli, proprietà, ad esempio <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>e <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>.</xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> </xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> Se si desidera utilizzare queste proprietà con tali controlli, è necessario implementare l&quot;interfaccia IWebPart."
  example:
  - "The following code example demonstrates how to implement the IWebPart interface in a user control. This is a simple implementation that shows minimally how to implement the properties.  \n  \n The first part of the code example shows the user control. The user control implements all the properties of the IWebPart interface, plus two additional public properties tied to controls in the user interface. The two custom properties each use the `Personalizable` attribute, which enables the values in those properties to be saved across browser sessions. Note that in the base <xref:System.Web.UI.WebControls.WebParts.WebPart> class implementation, all the properties of the IWebPart interface are implemented as personalizable as well, though they are not in this code example.  \n  \n [!code-cs[WebParts_IWebPart_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_228_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_228_1.ascx)]  \n  \n The second part of the code example shows the Web page that hosts the user control. The page has a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, within which the user control is referenced. Notice that several of the IWebPart interface's property values are set declaratively in the markup for the user control, which enables it to both behave and appear similar to a <xref:System.Web.UI.WebControls.WebParts.WebPart> control at design time and run time. If you load the page in a browser, you can use the UI on the page to demonstrate the ability to programmatically change the values of the implemented IWebPart properties at run time. When you change some of the property values, the changes are not evident on the page, but are visible in the page source (the <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> property), or are stored in the application's state data (the <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> property).  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_228_2.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_228_2.aspx)]"
  syntax:
    content: public interface IWebPart
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
  id: CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: CatalogIconImageUrl
  nameWithType: IWebPart.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene o imposta l&quot;URL di un&quot;immagine che rappresenta un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo in un catalogo di controlli."
  remarks: "Applicazioni Web part offrono spesso un catalogo (o elenco) di controlli che gli utenti possono aggiungere a una pagina. La proprietà CatalogIconImageUrl su un controllo contiene l&quot;URL di un&quot;immagine che rappresenta il controllo quando viene visualizzato in un catalogo."
  example:
  - "The following code example demonstrates declarative and programmatic use of the CatalogIconImageUrl property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the CatalogIconImageUrl property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#8](~/add/codesnippet/csharp/p-system.web.ui.webcontr_305_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#8](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_305_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the CatalogIconImageUrl property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_305_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_305_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the CatalogIconImageUrl property is set declaratively on the control. Note that because there is no catalog of Web Parts controls provided with this example, you cannot see the actual effect of setting this property.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_305_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_305_3.aspx)]"
  syntax:
    content: public string CatalogIconImageUrl { get; set; }
    return:
      type: System.String
      description: "Stringa che rappresenta l&quot;URL di un&quot;immagine utilizzata per rappresentare il controllo in un catalogo. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Description
  id: Description
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: Description
  nameWithType: IWebPart.Description
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Description
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene o imposta una breve frase che riepiloga la funzione, un controllo per l&quot;utilizzo nelle descrizioni comandi e i cataloghi dei <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlli."
  remarks: "Il valore della proprietà descrizione viene in genere utilizzato come una stringa descrittiva per un controllo nei cataloghi che forniscono elenchi di <xref:System.Web.UI.WebControls.WebParts.WebPart>controlli e come descrizione comando nella barra del titolo di un controllo</xref:System.Web.UI.WebControls.WebParts.WebPart> L&quot;utente posiziona il puntatore del mouse sul testo del titolo nella barra del titolo di un controllo, viene visualizzato il contenuto della proprietà in una descrizione comando."
  example:
  - "The following code example demonstrates declarative and programmatic use of the Description property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the Description property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_284_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_284_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the Description property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_284_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_284_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the Description property is set declaratively on the control. Note that you can see the value of this property by positioning your mouse pointer over the title text in the control's title bar, after you have loaded the page in a browser. You can also experiment with changing the property value programmatically at run time by loading the Web page and using the provided user interface (UI) to change the property value.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_284_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_284_3.aspx)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "Una stringa che riepiloga brevemente la funzionalità del controllo. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
  id: Subtitle
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: Subtitle
  nameWithType: IWebPart.Subtitle
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene una stringa concatenata con il <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title*>valore della proprietà per formare un titolo completo per un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo.</xref:System.Web.UI.WebControls.WebParts.IWebPart.Title*>"
  remarks: "La proprietà sottotitolo viene utilizzata per restituire una stringa di sottotitolo predefinito per un <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo che viene aggiunto al titolo del controllo la barra del titolo.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Se si fornisce un valore predefinito per la proprietà sottotitolo in un controllo che implementa il <xref:System.Web.UI.WebControls.WebParts.IWebPart>interfaccia, le Web part viene accodato al valore di controllo impostata automaticamente la <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>proprietà del controllo in fase di esecuzione.</xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> </xref:System.Web.UI.WebControls.WebParts.IWebPart>"
  example:
  - "The following code example demonstrates declarative and programmatic use of the Subtitle property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the Subtitle property. Note that the property is read-only and is meant to be used to provide a default subtitle that is appended to the main title of a control.  \n  \n [!code-cs[WebParts_IWebPart_Overview#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_11_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_11_1.ascx)]  \n  \n The second part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the writable properties from <xref:System.Web.UI.WebControls.WebParts.IWebPart> are set declaratively on the control. After you load the page in a browser, note that the default value of the Subtitle property, which was set in the user control's implementation code, is appended to the title in the control's title bar.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_11_2.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_11_2.aspx)]"
  syntax:
    content: public string Subtitle { get; }
    return:
      type: System.String
      description: "Stringa che funge da sottotitolo per il controllo. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Title
  id: Title
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: Title
  nameWithType: IWebPart.Title
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene o imposta il titolo di un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo."
  remarks: "Il testo del titolo visibile nella barra del titolo di un controllo è impostato la proprietà del titolo.       Se non si specifica un titolo per un controllo, i controlli Web part automaticamente calcola una stringa predefinita da usare come titolo. Per ulteriori informazioni, vedere <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> Inoltre, è possibile fornire un sottotitolo predefinito che viene aggiunto alla stringa del titolo. Per informazioni dettagliate, vedere <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>.</xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>"
  example:
  - "The following code example demonstrates declarative and programmatic use of the Title property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the Title property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#4](~/add/codesnippet/csharp/p-system.web.ui.webcontr_801_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#4](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_801_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the Title property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_801_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_801_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the Title property is set declaratively on the control.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_801_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_801_3.aspx)]"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "Stringa che contiene il titolo del controllo. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
  id: TitleIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: TitleIconImageUrl
  nameWithType: IWebPart.TitleIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene o imposta l&quot;URL di un&quot;immagine utilizzata per rappresentare un controllo Web part nella barra del titolo del controllo."
  remarks: "La proprietà TitleIconImageUrl fornisce un modo per associare un&quot;icona con una <xref:System.Web.UI.WebControls.WebParts.WebPart>controllo.</xref:System.Web.UI.WebControls.WebParts.WebPart> L&quot;icona viene visualizzata nella barra del titolo del controllo. Per garantire l&quot;uniformità tematica, gli sviluppatori di applicazioni desiderano apportare questa icona simile all&quot;immagine che rappresenta il controllo in un catalogo di controlli Web part (l&quot;immagine a cui fa riferimento il <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>proprietà).</xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>       Come viene implementato nel controllo Web part impostato, il TitleIconImageUrl proprietà può essere personalizzata dagli utenti finali di modificare l&quot;immagine o l&quot;icona visualizzata nella barra del titolo di un controllo."
  example:
  - "The following code example demonstrates declarative and programmatic use of the TitleIconImageUrl property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the TitleIconImageUrl property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#6](~/add/codesnippet/csharp/p-system.web.ui.webcontr_309_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#6](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_309_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the TitleIconImageUrl property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_309_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_309_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the TitleIconImageUrl property is set declaratively on the control. Note that if you do not provide the URL to a real image, a placeholder for the icon appears in the title bar.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_309_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_309_3.aspx)]"
  syntax:
    content: public string TitleIconImageUrl { get; set; }
    return:
      type: System.String
      description: "Stringa che rappresenta l&quot;URL di un&quot;immagine. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
  id: TitleUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  langs:
  - csharp
  name: TitleUrl
  nameWithType: IWebPart.TitleUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Ottiene o imposta un URL a informazioni aggiuntive un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo."
  remarks: "Quando si assegna un URL per la proprietà TitleUrl, il titolo del controllo diventa un collegamento. Lo scopo di questa proprietà è di fornire un modo pratico per gli utenti finali di accedere a informazioni aggiuntive su un controllo. Le informazioni aggiuntive possono fornire dati sul copyright, dati di contatto, dettagli sul creatore del controllo o un riepilogo dello scopo del controllo.      > [!NOTE] > In genere, non è necessario utilizzare la proprietà di TitleUrl il collegamento al contenuto della Guida. Il modo migliore per fornire un collegamento alla Guida per un controllo è possibile utilizzare il <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A>proprietà.</xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A>"
  example:
  - "The following code example demonstrates declarative and programmatic use of the TitleUrl property. The complete source code for the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebPart> class overview.  \n  \n The first part of the code example shows how the user control implements the TitleUrl property.  \n  \n [!code-cs[WebParts_IWebPart_Overview#7](~/add/codesnippet/csharp/p-system.web.ui.webcontr_189_1.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#7](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_189_1.ascx)]  \n  \n The second part of the code example demonstrates the method in the user control that programmatically sets the value of the TitleUrl property when a user selects the appropriate property name from the radio buttons on the page, sets a new value in the text box, and then clicks the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPart_Overview#9](~/add/codesnippet/csharp/p-system.web.ui.webcontr_189_2.ascx)]\n [!code-vb[WebParts_IWebPart_Overview#9](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_189_2.ascx)]  \n  \n The third part of the code example shows how the user control that implements the <xref:System.Web.UI.WebControls.WebParts.IWebPart> interface is referenced in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> control, and how the TitleUrl property is set declaratively on the control. Note that if you do not provide a URL to a real page, and then a user clicks the link in the title bar, an error message appears.  \n  \n [!code-vb[WebParts_IWebPart_Overview#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_189_3.aspx)]\n [!code-cs[WebParts_IWebPart_Overview#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_189_3.aspx)]"
  syntax:
    content: public string TitleUrl { get; set; }
    return:
      type: System.String
      description: "Stringa che rappresenta un URL per ulteriori informazioni su un <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controllo. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: IWebPart.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Description
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Description
  nameWithType: IWebPart.Description
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Description
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Subtitle
  nameWithType: IWebPart.Subtitle
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Title
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Title
  nameWithType: IWebPart.Title
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.Title
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: TitleIconImageUrl
  nameWithType: IWebPart.TitleIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: TitleUrl
  nameWithType: IWebPart.TitleUrl
  fullName: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl
- uid: System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: IWebPart.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Description*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Description
  nameWithType: IWebPart.Description
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Subtitle*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Subtitle
  nameWithType: IWebPart.Subtitle
- uid: System.Web.UI.WebControls.WebParts.IWebPart.Title*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: Title
  nameWithType: IWebPart.Title
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: TitleIconImageUrl
  nameWithType: IWebPart.TitleIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl*
  parent: System.Web.UI.WebControls.WebParts.IWebPart
  isExternal: false
  name: TitleUrl
  nameWithType: IWebPart.TitleUrl
