### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.MD5
  id: MD5
  children:
  - System.Security.Cryptography.MD5.#ctor
  - System.Security.Cryptography.MD5.Create
  - System.Security.Cryptography.MD5.Create(System.String)
  langs:
  - csharp
  name: MD5
  nameWithType: MD5
  fullName: System.Security.Cryptography.MD5
  type: Class
  summary: "Rappresenta la classe astratta dalla quale ereditano tutte le implementazioni dell&quot;algoritmo hash MD5."
  remarks: "Hash funzioni mappa stringhe binarie di lunghezza arbitraria a piccole stringhe binarie di lunghezza fissa. Una funzione hash crittografica dispone della proprietà che è impossibile da trovare due input distinti che hash con lo stesso valore. vale a dire gli hash di due set di dati devono corrispondere se corrispondano anche i dati corrispondenti. Piccole modifiche ai dati implica modifiche imprevedibili di grandi dimensioni nell&quot;hash.       La dimensione dell&quot;hash per l&quot;algoritmo MD5 è 128 bit.       Il <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A>metodi della classe MD5 restituiscono l&quot;hash come una matrice di 16 byte.</xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A>  Si noti che alcune implementazioni MD5 producono un hash in formato esadecimale di 32 caratteri.  Per interagire con tali implementazioni, formattare il valore restituito di <xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A>metodi come valore esadecimale.</xref:System.Security.Cryptography.HashAlgorithm.ComputeHash%2A>      > [!NOTE] > Le funzioni hash più recente, ad esempio SHA-256 Secure Hash algoritmi e SHA-512, sono disponibili. È consigliabile utilizzare la <xref:System.Security.Cryptography.SHA256>classe o la <xref:System.Security.Cryptography.SHA512>classe anziché la classe di MD5.</xref:System.Security.Cryptography.SHA512> </xref:System.Security.Cryptography.SHA256> L&quot;impostazione MD5 solo per compatibilità con le applicazioni legacy e i dati."
  example:
  - "The following code example computes the MD5 hash value of a string and returns the hash as a 32-character, hexadecimal-formatted string.  The hash string created by this code example is compatible with any MD5 hash function (on any platform) that creates a 32-character, hexadecimal-formatted hash string.  \n  \n [!code-vb[Security.Cryptography.MD5#1](~/add/codesnippet/visualbasic/t-system.security.crypto_105_1.vb)]\n [!code-cs[Security.Cryptography.MD5#1](~/add/codesnippet/csharp/t-system.security.crypto_105_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class MD5 : System.Security.Cryptography.HashAlgorithm
  inheritance:
  - System.Object
  - System.Security.Cryptography.HashAlgorithm
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform
  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks
  - System.Security.Cryptography.HashAlgorithm.Clear
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)
  - System.Security.Cryptography.HashAlgorithm.Dispose
  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.HashAlgorithm.Hash
  - System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)
  - System.Security.Cryptography.HashAlgorithm.HashFinal
  - System.Security.Cryptography.HashAlgorithm.HashSize
  - System.Security.Cryptography.HashAlgorithm.HashSizeValue
  - System.Security.Cryptography.HashAlgorithm.HashValue
  - System.Security.Cryptography.HashAlgorithm.Initialize
  - System.Security.Cryptography.HashAlgorithm.InputBlockSize
  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize
  - System.Security.Cryptography.HashAlgorithm.State
  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.MD5.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.MD5
  langs:
  - csharp
  name: MD5()
  nameWithType: MD5.MD5()
  fullName: System.Security.Cryptography.MD5.MD5()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza della <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref>."
  remarks: "Per creare un&quot;istanza di <xref:System.Security.Cryptography.MD5>, utilizzare il <xref:System.Security.Cryptography.MD5.Create%2A>(metodo).</xref:System.Security.Cryptography.MD5.Create%2A> </xref:System.Security.Cryptography.MD5>"
  syntax:
    content: protected MD5 ();
    parameters: []
  overload: System.Security.Cryptography.MD5.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.MD5.Create
  id: Create
  parent: System.Security.Cryptography.MD5
  langs:
  - csharp
  name: Create()
  nameWithType: MD5.Create()
  fullName: System.Security.Cryptography.MD5.Create()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Crea un&quot;istanza dell&quot;implementazione predefinita del <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> algoritmo hash."
  syntax:
    content: public static System.Security.Cryptography.MD5 Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.MD5
      description: "Una nuova istanza di <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> algoritmo hash."
  overload: System.Security.Cryptography.MD5.Create*
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "L&quot;algoritmo utilizzato con abilitata la modalità di elaborazione agli standard FIPS (Federal Information), ma non è compatibile con FIPS."
  platform:
  - net462
- uid: System.Security.Cryptography.MD5.Create(System.String)
  id: Create(System.String)
  parent: System.Security.Cryptography.MD5
  langs:
  - csharp
  name: Create(String)
  nameWithType: MD5.Create(String)
  fullName: System.Security.Cryptography.MD5.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Crea un&quot;istanza dell&quot;implementazione specificata del <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> algoritmo hash."
  remarks: 'I valori possibili per `algName` sono: `System.Security.Cryptography.MD5`, `MD5`, `System.Security.Cryptography.MD5CryptoServiceProvider`, e `System.Security.Cryptography.MD5Managed`.'
  syntax:
    content: public static System.Security.Cryptography.MD5 Create (string algName);
    parameters:
    - id: algName
      type: System.String
      description: "Il nome dell&quot;implementazione specifica di <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref> da utilizzare."
    return:
      type: System.Security.Cryptography.MD5
      description: "Una nuova istanza dell&quot;implementazione specificata di <xref href=&quot;System.Security.Cryptography.MD5&quot;> </xref>."
  overload: System.Security.Cryptography.MD5.Create*
  exceptions:
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "L&quot;algoritmo descritto dal <code> algName </code> parametro è stato usato con abilitata la modalità di elaborazione agli standard FIPS (Federal Information), ma non è compatibile con FIPS."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.HashAlgorithm
  isExternal: false
  name: System.Security.Cryptography.HashAlgorithm
- uid: System.Reflection.TargetInvocationException
  isExternal: true
  name: System.Reflection.TargetInvocationException
- uid: System.Security.Cryptography.MD5.#ctor
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: MD5()
  nameWithType: MD5.MD5()
  fullName: System.Security.Cryptography.MD5.MD5()
- uid: System.Security.Cryptography.MD5.Create
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: Create()
  nameWithType: MD5.Create()
  fullName: System.Security.Cryptography.MD5.Create()
- uid: System.Security.Cryptography.MD5
  parent: System.Security.Cryptography
  isExternal: false
  name: MD5
  nameWithType: MD5
  fullName: System.Security.Cryptography.MD5
- uid: System.Security.Cryptography.MD5.Create(System.String)
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: Create(String)
  nameWithType: MD5.Create(String)
  fullName: System.Security.Cryptography.MD5.Create(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.MD5.#ctor*
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: MD5
  nameWithType: MD5.MD5
- uid: System.Security.Cryptography.MD5.Create*
  parent: System.Security.Cryptography.MD5
  isExternal: false
  name: Create
  nameWithType: MD5.Create
