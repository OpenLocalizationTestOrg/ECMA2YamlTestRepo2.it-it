### YamlMime:ManagedReference
items:
- uid: System.Web.UI.PageHandlerFactory
  id: PageHandlerFactory
  children:
  - System.Web.UI.PageHandlerFactory.#ctor
  - System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  - System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  langs:
  - csharp
  name: PageHandlerFactory
  nameWithType: PageHandlerFactory
  fullName: System.Web.UI.PageHandlerFactory
  type: Class
  summary: "Crea istanze di classi che ereditano dal <xref href=&quot;System.Web.UI.Page&quot;> </xref> classe e implementare il <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interfaccia. Le istanze vengono create dinamicamente per gestire le richieste per file ASP.NET. La classe PageHandlerFactory è l&quot;implementazione di factory del gestore predefinito per le pagine ASP.NET."
  remarks: "La classe implementa PageHandlerFactory il <xref:System.Web.IHttpHandlerFactory>interfaccia per fornire il gestore HTTP predefinito per ASP.NET files.</xref:System.Web.IHttpHandlerFactory> Il PageHandlerFactory chiama il sistema di compilazione ASP.NET per compilare, se necessario e restituire il tipo esatto corrispondente all&quot;URL e quindi crea un&quot;istanza di quel tipo. Il tipo di pagina eredita il <xref:System.Web.UI.Page>classe e implementa il <xref:System.Web.IHttpHandler>interfaccia.</xref:System.Web.IHttpHandler> </xref:System.Web.UI.Page>       Per compilare una factory del gestore di pagina personalizzato, implementare il <xref:System.Web.IHttpHandlerFactory>e registrare la classe PageHandlerFactory personalizzata nel file Web. config per l&quot;applicazione nella [httpHandlers Element (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/en-us/24ca01f3-7141-4fdc-acac-71c0733cf6c2) sezione di configurazione.</xref:System.Web.IHttpHandlerFactory>"
  syntax:
    content: public class PageHandlerFactory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.PageHandlerFactory.#ctor
  id: '#ctor'
  parent: System.Web.UI.PageHandlerFactory
  langs:
  - csharp
  name: PageHandlerFactory()
  nameWithType: PageHandlerFactory.PageHandlerFactory()
  fullName: System.Web.UI.PageHandlerFactory.PageHandlerFactory()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.PageHandlerFactory&quot;> </xref> classe."
  remarks: "Il costruttore PageHandlerFactory è il costruttore predefinito e inizializza tutti i campi in base ai valori predefiniti."
  syntax:
    content: protected PageHandlerFactory ();
    parameters: []
  overload: System.Web.UI.PageHandlerFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  id: GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  parent: System.Web.UI.PageHandlerFactory
  langs:
  - csharp
  name: GetHandler(HttpContext,String,String,String)
  nameWithType: PageHandlerFactory.GetHandler(HttpContext,String,String,String)
  fullName: System.Web.UI.PageHandlerFactory.GetHandler(HttpContext,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Restituisce un&quot;istanza di <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interfaccia per elaborare la risorsa richiesta."
  remarks: "Il metodo GetHandler viene chiamato dal runtime di ASP.NET e restituisce un&quot;istanza valida del <xref:System.Web.IHttpHandler>interfaccia o `null`.</xref:System.Web.IHttpHandler>"
  syntax:
    content: public virtual System.Web.IHttpHandler GetHandler (System.Web.HttpContext context, string requestType, string virtualPath, string path);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Un&quot;istanza di <xref href=&quot;System.Web.HttpContext&quot;> </xref> classe che fornisce riferimenti agli oggetti intrinseci del server (ad esempio richiesta, risposta, sessione e Server) utilizzati per rispondere alle richieste HTTP."
    - id: requestType
      type: System.String
      description: "Metodo (GET o POST) utilizzato dal client di trasferimento dati HTTP."
    - id: virtualPath
      type: System.String
      description: "Il percorso virtuale della risorsa richiesta."
    - id: path
      type: System.String
      description: "Il <xref:System.Web.HttpRequest.PhysicalApplicationPath*>proprietà della risorsa richiesta.</xref:System.Web.HttpRequest.PhysicalApplicationPath*>"
    return:
      type: System.Web.IHttpHandler
      description: "Un nuovo <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> che elabora la richiesta; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.PageHandlerFactory.GetHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  id: ReleaseHandler(System.Web.IHttpHandler)
  parent: System.Web.UI.PageHandlerFactory
  langs:
  - csharp
  name: ReleaseHandler(IHttpHandler)
  nameWithType: PageHandlerFactory.ReleaseHandler(IHttpHandler)
  fullName: System.Web.UI.PageHandlerFactory.ReleaseHandler(IHttpHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Attiva una factory per riutilizzare un&quot;istanza esistente di un gestore."
  syntax:
    content: public virtual void ReleaseHandler (System.Web.IHttpHandler handler);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "Il <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> riutilizzare."
  overload: System.Web.UI.PageHandlerFactory.ReleaseHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.PageHandlerFactory.#ctor
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: PageHandlerFactory()
  nameWithType: PageHandlerFactory.PageHandlerFactory()
  fullName: System.Web.UI.PageHandlerFactory.PageHandlerFactory()
- uid: System.Web.UI.PageHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: GetHandler(HttpContext,String,String,String)
  nameWithType: PageHandlerFactory.GetHandler(HttpContext,String,String,String)
  fullName: System.Web.UI.PageHandlerFactory.GetHandler(HttpContext,String,String,String)
- uid: System.Web.IHttpHandler
  parent: System.Web
  isExternal: false
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: ReleaseHandler(IHttpHandler)
  nameWithType: PageHandlerFactory.ReleaseHandler(IHttpHandler)
  fullName: System.Web.UI.PageHandlerFactory.ReleaseHandler(IHttpHandler)
- uid: System.Web.UI.PageHandlerFactory.#ctor*
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: PageHandlerFactory
  nameWithType: PageHandlerFactory.PageHandlerFactory
- uid: System.Web.UI.PageHandlerFactory.GetHandler*
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: GetHandler
  nameWithType: PageHandlerFactory.GetHandler
- uid: System.Web.UI.PageHandlerFactory.ReleaseHandler*
  parent: System.Web.UI.PageHandlerFactory
  isExternal: false
  name: ReleaseHandler
  nameWithType: PageHandlerFactory.ReleaseHandler
