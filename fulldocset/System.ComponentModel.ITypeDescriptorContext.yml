### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ITypeDescriptorContext
  id: ITypeDescriptorContext
  children:
  - System.ComponentModel.ITypeDescriptorContext.Container
  - System.ComponentModel.ITypeDescriptorContext.Instance
  - System.ComponentModel.ITypeDescriptorContext.OnComponentChanged
  - System.ComponentModel.ITypeDescriptorContext.OnComponentChanging
  - System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  langs:
  - csharp
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
  type: Interface
  summary: "Fornisce informazioni contestuali su un componente, ad esempio il contenitore e descrittore di proprietà."
  remarks: "L&quot;interfaccia ITypeDescriptorContext fornisce informazioni contestuali su un componente. ITypeDescriptorContext viene in genere utilizzato in fase di progettazione per fornire informazioni su un contenitore in fase di progettazione. Questa interfaccia viene comunemente utilizzata per la conversione di tipo. Per informazioni dettagliate, vedere <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>      > [!NOTE] > Non fare affidamento sulla presenza di questa interfaccia quando si progetta un convertitore di tipi. Se una determinata interfaccia, una proprietà o un servizio è necessario ma non è disponibile, il convertitore di tipi deve restituire `null` anziché generare un&quot;eccezione. Proprietà di questa interfaccia può restituire `null` in qualsiasi momento, e sarà necessario per l&quot;oggetto."
  example:
  - "The following code example demonstrates how to use the ITypeDescriptorContext interface to support type conversion.  \n  \n [!code-cpp[InstanceDescriptorSample#1](~/add/codesnippet/cpp/t-system.componentmodel._73_1.cpp)]\n [!code-vb[InstanceDescriptorSample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._73_1.vb)]\n [!code-cs[InstanceDescriptorSample#1](~/add/codesnippet/csharp/t-system.componentmodel._73_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ITypeDescriptorContext : IServiceProvider
  implements:
  - System.IServiceProvider
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.Container
  id: Container
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: Container
  nameWithType: ITypeDescriptorContext.Container
  fullName: System.ComponentModel.ITypeDescriptorContext.Container
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il contenitore che rappresenta questo <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref> richiesta."
  remarks: "La proprietà contenitore ottiene il contenitore logico del componente associato al descrittore di tipo."
  syntax:
    content: public System.ComponentModel.IContainer Container { get; }
    return:
      type: System.ComponentModel.IContainer
      description: "Un <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> con il set di oggetti per questo <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non vi è alcun contenitore o se il <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref> utilizza oggetti esterni."
  overload: System.ComponentModel.ITypeDescriptorContext.Container*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.Instance
  id: Instance
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: Instance
  nameWithType: ITypeDescriptorContext.Instance
  fullName: System.ComponentModel.ITypeDescriptorContext.Instance
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene l&quot;oggetto che è connessa a questa richiesta di descrittore di tipo."
  remarks: "La proprietà dell&quot;istanza Ottiene l&quot;oggetto che richiama la <xref:System.ComponentModel.ITypeDescriptorContext>interfaccia.</xref:System.ComponentModel.ITypeDescriptorContext> Ad esempio, se non viene specificato un convertitore di tipi <xref:System.Drawing.Color>che per convertire, l&quot;istanza restituisce l&quot;istanza effettiva del controllo che utilizza <xref:System.Drawing.Color>.</xref:System.Drawing.Color> </xref:System.Drawing.Color> a Successivamente è possibile eseguire una query sul controllo per ulteriori informazioni sui relativi servizi e il relativo <xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>.</xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>"
  syntax:
    content: public object Instance { get; }
    return:
      type: System.Object
      description: "L&quot;oggetto che richiama il metodo di <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se è presente alcun oggetto responsabile della chiamata."
  overload: System.ComponentModel.ITypeDescriptorContext.Instance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged
  id: OnComponentChanged
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: OnComponentChanged()
  nameWithType: ITypeDescriptorContext.OnComponentChanged()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Genera il <xref href=&quot;System.ComponentModel.Design.IComponentChangeService.ComponentChanged&quot;> </xref> evento."
  remarks: "Utilizzare il metodo OnComponentChanged per inviare notifica di un&quot;istanza di un oggetto è stato modificato.       Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: generazione di un evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Il metodo OnComponentChanged consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: public void OnComponentChanged ();
    parameters: []
  overload: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging
  id: OnComponentChanging
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: OnComponentChanging()
  nameWithType: ITypeDescriptorContext.OnComponentChanging()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Genera il <xref href=&quot;System.ComponentModel.Design.IComponentChangeService.ComponentChanging&quot;> </xref> evento."
  remarks: "Utilizzare il metodo OnComponentChanging per inviare la notifica che un&quot;istanza di un oggetto sta per essere modificato. Questo metodo restituisce anche un valore che indica se questo oggetto può essere modificato. Quando `false` viene restituito, non modificare l&quot;oggetto.       Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: generazione di un evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Il metodo OnComponentChanging consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: public bool OnComponentChanging ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo oggetto può essere modificato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  id: PropertyDescriptor
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: PropertyDescriptor
  nameWithType: ITypeDescriptorContext.PropertyDescriptor
  fullName: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> associato all&quot;elemento di contesto specificato."
  syntax:
    content: public System.ComponentModel.PropertyDescriptor PropertyDescriptor { get; }
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "Il <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> che descrive il contesto specificato elemento; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se è presente alcun <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> responsabile della chiamata."
  overload: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ITypeDescriptorContext.Container
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Container
  nameWithType: ITypeDescriptorContext.Container
  fullName: System.ComponentModel.ITypeDescriptorContext.Container
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.ITypeDescriptorContext.Instance
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Instance
  nameWithType: ITypeDescriptorContext.Instance
  fullName: System.ComponentModel.ITypeDescriptorContext.Instance
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanged()
  nameWithType: ITypeDescriptorContext.OnComponentChanged()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged()
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanging()
  nameWithType: ITypeDescriptorContext.OnComponentChanging()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: PropertyDescriptor
  nameWithType: ITypeDescriptorContext.PropertyDescriptor
  fullName: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.ITypeDescriptorContext.Container*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Container
  nameWithType: ITypeDescriptorContext.Container
- uid: System.ComponentModel.ITypeDescriptorContext.Instance*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Instance
  nameWithType: ITypeDescriptorContext.Instance
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanged
  nameWithType: ITypeDescriptorContext.OnComponentChanged
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanging
  nameWithType: ITypeDescriptorContext.OnComponentChanging
- uid: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: PropertyDescriptor
  nameWithType: ITypeDescriptorContext.PropertyDescriptor
