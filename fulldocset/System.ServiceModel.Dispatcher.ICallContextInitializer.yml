### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer
  id: ICallContextInitializer
  children:
  - System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)
  - System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)
  langs:
  - csharp
  name: ICallContextInitializer
  nameWithType: ICallContextInitializer
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer
  type: Interface
  summary: "Definisce i metodi che consentono l&quot;inizializzazione e il riciclo della memoria locale di thread di thread che richiama il codice utente."
  remarks: "Implementare l&quot;interfaccia ICallContextInitializer e aggiungerlo al <xref:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers%2A?displayProperty=fullName>proprietà per inizializzare e pulire la memoria locale di thread per il thread che richiama il codice utente.</xref:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers%2A?displayProperty=fullName> Utilizzo tipico consiste nell&quot;impostare un valore, ad esempio la rappresentazione o modificando la <xref:System.Globalization.CultureInfo?displayProperty=fullName>.</xref:System.Globalization.CultureInfo?displayProperty=fullName> Se si desidera stabilire un contesto personalizzato, questo è il punto di estensione per inizializzare la proprietà di contesto statico, che diventa quindi disponibile agli sviluppatori nel corso dell&quot;operazione."
  syntax:
    content: public interface ICallContextInitializer
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)
  id: AfterInvoke(System.Object)
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  langs:
  - csharp
  name: AfterInvoke(Object)
  nameWithType: ICallContextInitializer.AfterInvoke(Object)
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Implementare per partecipare alla pulizia del thread che ha richiamato l&quot;operazione."
  remarks: "Utilizzare questo metodo per eseguire qualsiasi necessaria pulizia del thread dell&quot;operazione."
  syntax:
    content: public void AfterInvoke (object correlationState);
    parameters:
    - id: correlationState
      type: System.Object
      description: "L&quot;oggetto di correlazione restituito dal <xref:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke*>metodo.</xref:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke*>"
  overload: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)
  id: BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  langs:
  - csharp
  name: BeforeInvoke(InstanceContext,IClientChannel,Message)
  nameWithType: ICallContextInitializer.BeforeInvoke(InstanceContext,IClientChannel,Message)
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(InstanceContext,IClientChannel,Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Da implementare per partecipare all&quot;inizializzazione del thread dell&quot;operazione."
  remarks: "Implementare il metodo BeforeInvoke per inizializzare e pulire la memoria locale di thread per il thread che richiama il codice utente. Utilizzo tipico consiste nell&quot;impostare un valore, ad esempio la rappresentazione o modificando la <xref:System.Globalization.CultureInfo?displayProperty=fullName>.</xref:System.Globalization.CultureInfo?displayProperty=fullName> Se si desidera stabilire un contesto personalizzato, questo è il punto di estensione per inizializzare la proprietà di contesto statico, che diventa quindi disponibile agli sviluppatori nel corso dell&quot;operazione."
  syntax:
    content: public object BeforeInvoke (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.IClientChannel channel, System.ServiceModel.Channels.Message message);
    parameters:
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "L&quot;istanza del servizio per l&quot;operazione."
    - id: channel
      type: System.ServiceModel.IClientChannel
      description: "Il canale del client."
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Il messaggio in arrivo."
    return:
      type: System.Object
      description: "Un oggetto di correlazione passato come parametro del <xref:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke*>metodo.</xref:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke*>"
  overload: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  isExternal: false
  name: AfterInvoke(Object)
  nameWithType: ICallContextInitializer.AfterInvoke(Object)
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  isExternal: false
  name: BeforeInvoke(InstanceContext,IClientChannel,Message)
  nameWithType: ICallContextInitializer.BeforeInvoke(InstanceContext,IClientChannel,Message)
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(InstanceContext,IClientChannel,Message)
- uid: System.ServiceModel.InstanceContext
  parent: System.ServiceModel
  isExternal: true
  name: InstanceContext
  nameWithType: InstanceContext
  fullName: System.ServiceModel.InstanceContext
- uid: System.ServiceModel.IClientChannel
  parent: System.ServiceModel
  isExternal: true
  name: IClientChannel
  nameWithType: IClientChannel
  fullName: System.ServiceModel.IClientChannel
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke*
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  isExternal: false
  name: AfterInvoke
  nameWithType: ICallContextInitializer.AfterInvoke
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke*
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  isExternal: false
  name: BeforeInvoke
  nameWithType: ICallContextInitializer.BeforeInvoke
