### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbDataReader
  id: DbDataReader
  children:
  - System.Data.Common.DbDataReader.#ctor
  - System.Data.Common.DbDataReader.Close
  - System.Data.Common.DbDataReader.Depth
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.FieldCount
  - System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  - System.Data.Common.DbDataReader.GetByte(System.Int32)
  - System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.Common.DbDataReader.GetChar(System.Int32)
  - System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  - System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  - System.Data.Common.DbDataReader.GetDouble(System.Int32)
  - System.Data.Common.DbDataReader.GetEnumerator
  - System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetFloat(System.Int32)
  - System.Data.Common.DbDataReader.GetGuid(System.Int32)
  - System.Data.Common.DbDataReader.GetInt16(System.Int32)
  - System.Data.Common.DbDataReader.GetInt32(System.Int32)
  - System.Data.Common.DbDataReader.GetInt64(System.Int32)
  - System.Data.Common.DbDataReader.GetName(System.Int32)
  - System.Data.Common.DbDataReader.GetOrdinal(System.String)
  - System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.Common.DbDataReader.GetSchemaTable
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetString(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.GetValue(System.Int32)
  - System.Data.Common.DbDataReader.GetValues(System.Object[])
  - System.Data.Common.DbDataReader.HasRows
  - System.Data.Common.DbDataReader.IsClosed
  - System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.Item(System.Int32)
  - System.Data.Common.DbDataReader.Item(System.String)
  - System.Data.Common.DbDataReader.NextResult
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.Read
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.RecordsAffected
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.Common.DbDataReader.VisibleFieldCount
  langs:
  - csharp
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
  type: Class
  summary: "Legge un flusso forward-only di righe da un&quot;origine dati."
  syntax:
    content: 'public abstract class DbDataReader : MarshalByRefObject, IDisposable, System.Collections.IEnumerable, System.Data.IDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.Collections.IEnumerable
  - System.Data.IDataReader
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: DbDataReader()
  nameWithType: DbDataReader.DbDataReader()
  fullName: System.Data.Common.DbDataReader.DbDataReader()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> classe."
  syntax:
    content: protected DbDataReader ();
    parameters: []
  overload: System.Data.Common.DbDataReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Close
  id: Close
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: DbDataReader.Close()
  fullName: System.Data.Common.DbDataReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Chiude il <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> oggetto."
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Data.Common.DbDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Depth
  id: Depth
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: DbDataReader.Depth
  fullName: System.Data.Common.DbDataReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene un valore che indica il livello di nidificazione della riga corrente."
  remarks: "La tabella più esterna è di livello zero."
  syntax:
    content: public abstract int Depth { get; }
    return:
      type: System.Int32
      description: "Il livello di nidificazione della riga corrente."
  overload: System.Data.Common.DbDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Dispose
  id: Dispose
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Dispose()
  nameWithType: DbDataReader.Dispose()
  fullName: System.Data.Common.DbDataReader.Dispose()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Rilascia tutte le risorse usate dall&quot;istanza corrente del <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> classe."
  remarks: "Chiamare `Dispose` quando si è terminato di utilizzare <xref:System.Data.Common.DbDataReader>.</xref:System.Data.Common.DbDataReader> Il `Dispose` metodo lascia la <xref:System.Data.Common.DbDataReader>in uno stato inutilizzabile.</xref:System.Data.Common.DbDataReader> Dopo la chiamata `Dispose`, è necessario rilasciare tutti i riferimenti al <xref:System.Data.Common.DbDataReader>in modo che il garbage collector può recuperare la memoria che di <xref:System.Data.Common.DbDataReader>occupata.</xref:System.Data.Common.DbDataReader> </xref:System.Data.Common.DbDataReader>       Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md) e [implementazione di un metodo Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Chiamare sempre `Dispose` prima di rilasciare l&quot;ultimo riferimento a <xref:System.Data.Common.DbDataReader>.</xref:System.Data.Common.DbDataReader> In caso contrario, le risorse non vengono liberate finché il garbage collector chiama la <xref:System.Data.Common.DbDataReader>dell&quot;oggetto `Finalize` metodo.</xref:System.Data.Common.DbDataReader>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Data.Common.DbDataReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DbDataReader.Dispose(Boolean)
  fullName: System.Data.Common.DbDataReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Rilascia le risorse gestite utilizzate da di <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> e facoltativamente rilascia le risorse non gestite."
  remarks: "Questo metodo chiama <xref:System.Data.SqlClient.SqlDataReader.Close%2A>.</xref:System.Data.SqlClient.SqlDataReader.Close%2A>"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.Data.Common.DbDataReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.FieldCount
  id: FieldCount
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: DbDataReader.FieldCount
  fullName: System.Data.Common.DbDataReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il numero di colonne nella riga corrente."
  remarks: "Include campi nascosti. Utilizzare <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>per escludere campi nascosti.</xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>"
  syntax:
    content: public abstract int FieldCount { get; }
    return:
      type: System.Int32
      description: "Il numero di colonne nella riga corrente."
  overload: System.Data.Common.DbDataReader.FieldCount*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Non è presente alcuna connessione a un&quot;istanza di SQL Server."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: DbDataReader.GetBoolean(Int32)
  fullName: System.Data.Common.DbDataReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il valore della colonna specificata come valore Boolean."
  syntax:
    content: public abstract bool GetBoolean (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Boolean
      description: "Il valore della colonna specificata."
  overload: System.Data.Common.DbDataReader.GetBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: DbDataReader.GetByte(Int32)
  fullName: System.Data.Common.DbDataReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il valore della colonna specificata come byte."
  syntax:
    content: public abstract byte GetByte (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Byte
      description: "Il valore della colonna specificata."
  overload: System.Data.Common.DbDataReader.GetByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Legge un flusso di byte dalla colonna specificata, partendo dalla posizione indicata da <code> dataOffset </code>, del buffer, a partire dalla posizione indicata da <code> bufferOffset </code>."
  syntax:
    content: public abstract long GetBytes (int ordinal, long dataOffset, byte[] buffer, int bufferOffset, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    - id: dataOffset
      type: System.Int64
      description: "L&quot;indice all&quot;interno della riga da cui iniziare l&quot;operazione di lettura."
    - id: buffer
      type: System.Byte[]
      description: "Buffer in cui copiare i dati."
    - id: bufferOffset
      type: System.Int32
      description: "L&quot;indice con il buffer in cui verranno copiati i dati."
    - id: length
      type: System.Int32
      description: "Numero massimo di caratteri da leggere."
    return:
      type: System.Int64
      description: "Il numero effettivo di byte letti."
  overload: System.Data.Common.DbDataReader.GetBytes*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: DbDataReader.GetChar(Int32)
  fullName: System.Data.Common.DbDataReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il valore della colonna specificata come un singolo carattere."
  syntax:
    content: public abstract char GetChar (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Char
      description: "Il valore della colonna specificata."
  overload: System.Data.Common.DbDataReader.GetChar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Legge un flusso di caratteri dalla colonna specificata, partendo dalla posizione indicata da <code> dataOffset </code>, del buffer, a partire dalla posizione indicata da <code> bufferOffset </code>."
  syntax:
    content: public abstract long GetChars (int ordinal, long dataOffset, char[] buffer, int bufferOffset, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    - id: dataOffset
      type: System.Int64
      description: "L&quot;indice all&quot;interno della riga da cui iniziare l&quot;operazione di lettura."
    - id: buffer
      type: System.Char[]
      description: "Buffer in cui copiare i dati."
    - id: bufferOffset
      type: System.Int32
      description: "L&quot;indice con il buffer in cui verranno copiati i dati."
    - id: length
      type: System.Int32
      description: "Numero massimo di caratteri da leggere."
    return:
      type: System.Int64
      description: "Il numero effettivo di caratteri letti."
  overload: System.Data.Common.DbDataReader.GetChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetData(System.Int32)
  id: GetData(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetData(Int32)
  nameWithType: DbDataReader.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Restituisce un <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> oggetto per il numero ordinale di colonna richiesto."
  syntax:
    content: public System.Data.Common.DbDataReader GetData (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Data.Common.DbDataReader
      description: "A <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> object."
  overload: System.Data.Common.DbDataReader.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: DbDataReader.GetDataTypeName(Int32)
  fullName: System.Data.Common.DbDataReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene nome del tipo di dati della colonna specificata."
  remarks: "```  \nprivate static void GetDataTypes(String connectiongString) {       \n   using (SqlConnection conn = new SqlConnection(connectiongString)) {  \n      String queryString = \"Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]\";  \n      using (DbCommand command = new SqlCommand(queryString, conn)) {  \n         conn.Open();               \n         using (DbDataReader reader = command.ExecuteReader()) {  \n            for (Int32 i = 0; i < reader.FieldCount; i++) {  \n               Console.WriteLine(\"ColumnName:{0,-15}DataType:{1,-15}\",reader.GetName(i),reader.GetDataTypeName(i));  \n            }  \n         }  \n      }  \n   }  \n}  \n```"
  syntax:
    content: public abstract string GetDataTypeName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.String
      description: "Stringa che rappresenta il nome del tipo di dati."
  overload: System.Data.Common.DbDataReader.GetDataTypeName*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: DbDataReader.GetDateTime(Int32)
  fullName: System.Data.Common.DbDataReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il valore della colonna specificata come un <xref:System.DateTime>oggetto.</xref:System.DateTime>"
  syntax:
    content: public abstract DateTime GetDateTime (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.DateTime
      description: "Il valore della colonna specificata."
  overload: System.Data.Common.DbDataReader.GetDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  id: GetDbDataReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDbDataReader(Int32)
  nameWithType: DbDataReader.GetDbDataReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetDbDataReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Restituisce un <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> oggetto per l&quot;ordinale di colonna richiesto che possono essere sostituite con un&quot;implementazione specifica del provider."
  syntax:
    content: protected virtual System.Data.Common.DbDataReader GetDbDataReader (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Data.Common.DbDataReader
      description: "A <xref href=&quot;System.Data.Common.DbDataReader&quot;></xref> object."
  overload: System.Data.Common.DbDataReader.GetDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: DbDataReader.GetDecimal(Int32)
  fullName: System.Data.Common.DbDataReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il valore della colonna specificata come un <xref:System.Decimal>oggetto.</xref:System.Decimal>"
  syntax:
    content: public abstract decimal GetDecimal (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Decimal
      description: "Il valore della colonna specificata."
  overload: System.Data.Common.DbDataReader.GetDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: DbDataReader.GetDouble(Int32)
  fullName: System.Data.Common.DbDataReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il valore della colonna specificata come numero a virgola mobile e precisione doppia."
  syntax:
    content: public abstract double GetDouble (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Double
      description: "Il valore della colonna specificata."
  overload: System.Data.Common.DbDataReader.GetDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DbDataReader.GetEnumerator()
  fullName: System.Data.Common.DbDataReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Restituisce un <xref:System.Collections.IEnumerator>che può essere utilizzato per scorrere le righe nel lettore di dati.</xref:System.Collections.IEnumerator>"
  remarks: "Sebbene sia possibile utilizzare questo metodo per recuperare un costruttore esplicito, in linguaggi che supportano un **foreach** costrutto, è più semplice da utilizzare il costrutto di ciclo direttamente per scorrere le righe nel lettore di dati.       Se si implementa questo metodo, deve restituire una nuova istanza della <xref:System.Data.Common.DbEnumerator>o assicurarsi che l&quot;enumeratore restituisce <xref:System.Data.IDataRecord>oggetti.</xref:System.Data.IDataRecord> </xref:System.Data.Common.DbEnumerator>"
  syntax:
    content: public abstract System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Un <xref:System.Collections.IEnumerator>che può essere utilizzato per scorrere le righe nel lettore di dati.</xref:System.Collections.IEnumerator>"
  overload: System.Data.Common.DbDataReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: DbDataReader.GetFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il tipo di dati della colonna specificata."
  syntax:
    content: public abstract Type GetFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Type
      description: "Il tipo di dati della colonna specificata."
  overload: System.Data.Common.DbDataReader.GetFieldType*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  id: GetFieldValue``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldValue(Int32)
  nameWithType: DbDataReader.GetFieldValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  syntax:
    content: public virtual T GetFieldValue<T> (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Da aggiungere."
    return:
      type: T
      description: "Da aggiungere."
  overload: System.Data.Common.DbDataReader.GetFieldValue<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  id: GetFieldValueAsync``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldValueAsync(Int32)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  syntax:
    content: public System.Threading.Tasks.Task<T> GetFieldValueAsync<T> (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Da aggiungere."
    return:
      type: System.Threading.Tasks.Task{T}
      description: "Da aggiungere."
  overload: System.Data.Common.DbDataReader.GetFieldValueAsync<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  id: GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFieldValueAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  syntax:
    content: public virtual System.Threading.Tasks.Task<T> GetFieldValueAsync<T> (int ordinal, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Da aggiungere."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "Da aggiungere."
    return:
      type: System.Threading.Tasks.Task{T}
      description: "Da aggiungere."
  overload: System.Data.Common.DbDataReader.GetFieldValueAsync<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: DbDataReader.GetFloat(Int32)
  fullName: System.Data.Common.DbDataReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il valore della colonna specificata come numero a virgola mobile e precisione singola."
  syntax:
    content: public abstract float GetFloat (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Single
      description: "Il valore della colonna specificata."
  overload: System.Data.Common.DbDataReader.GetFloat*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: DbDataReader.GetGuid(Int32)
  fullName: System.Data.Common.DbDataReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il valore della colonna specificata come identificatore univoco globale (GUID)."
  syntax:
    content: public abstract Guid GetGuid (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Guid
      description: "Il valore della colonna specificata."
  overload: System.Data.Common.DbDataReader.GetGuid*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: DbDataReader.GetInt16(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il valore della colonna specificata come un intero con segno a 16 bit."
  syntax:
    content: public abstract short GetInt16 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Int16
      description: "Il valore della colonna specificata."
  overload: System.Data.Common.DbDataReader.GetInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: DbDataReader.GetInt32(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il valore della colonna specificata come un intero con segno a 32 bit."
  remarks: "```  \nprivate static void GetCredits(String connectiongString) {  \n   using (SqlConnection conn = new SqlConnection(connectiongString)) {  \n      String queryString = \"Select [CourseID],[Title],[Credits] from [MySchool].[dbo].[Course]\";   \n      using (DbCommand command = new SqlCommand(queryString, conn)) {  \n         conn.Open();   \n         using (DbDataReader reader = command.ExecuteReader()) {  \n            while (reader.Read()) {  \n               // Credits column is the integer column, and you can use the GetInt32 method                        \n               // to return a a 32-bit signed integer.                       \n               Console.WriteLine(\"Course:{0,-15} Credits:{1}\",reader[1],reader.GetInt32(2));   \n            }  \n         }  \n      }  \n   }  \n}  \n```"
  syntax:
    content: public abstract int GetInt32 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Int32
      description: "Il valore della colonna specificata."
  overload: System.Data.Common.DbDataReader.GetInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: DbDataReader.GetInt64(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il valore della colonna specificata come un intero con segno a 64 bit."
  syntax:
    content: public abstract long GetInt64 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Int64
      description: "Il valore della colonna specificata."
  overload: System.Data.Common.DbDataReader.GetInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: DbDataReader.GetName(Int32)
  fullName: System.Data.Common.DbDataReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il nome della colonna, dato l&quot;in base zero della colonna ordinale."
  syntax:
    content: public abstract string GetName (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.String
      description: "Il nome della colonna specificata."
  overload: System.Data.Common.DbDataReader.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: DbDataReader.GetOrdinal(String)
  fullName: System.Data.Common.DbDataReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene l&quot;ordinale di colonna dato il nome della colonna."
  syntax:
    content: public abstract int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome della colonna."
    return:
      type: System.Int32
      description: "Ordinale della colonna in base zero."
  overload: System.Data.Common.DbDataReader.GetOrdinal*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Il nome specificato non è un nome di colonna valido."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  id: GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DbDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Restituisce il tipo di campo specifico del provider della colonna specificata."
  syntax:
    content: public virtual Type GetProviderSpecificFieldType (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Type
      description: "Il <xref:System.Type>oggetto che descrive il tipo di dati della colonna specificata.</xref:System.Type>"
  overload: System.Data.Common.DbDataReader.GetProviderSpecificFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  id: GetProviderSpecificValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetProviderSpecificValue(Int32)
  nameWithType: DbDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il valore della colonna specificata come un&quot;istanza di <xref:System.Object>.</xref:System.Object>"
  remarks: "Per determinare il tipo specifico dell&quot;oggetto restituito, utilizzare <xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>.</xref:System.Data.Common.DbDataReader.GetProviderSpecificFieldType%2A>"
  syntax:
    content: public virtual object GetProviderSpecificValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Object
      description: "Il valore della colonna specificata."
  overload: System.Data.Common.DbDataReader.GetProviderSpecificValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  id: GetProviderSpecificValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetProviderSpecificValues(Object[])
  nameWithType: DbDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene tutte le colonne attributo specifiche del provider nella raccolta per la riga corrente."
  syntax:
    content: public virtual int GetProviderSpecificValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Matrice di <xref:System.Object>in cui copiare le colonne di attributi.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Il numero di istanze di <xref:System.Object>nella matrice.</xref:System.Object>"
  overload: System.Data.Common.DbDataReader.GetProviderSpecificValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: DbDataReader.GetSchemaTable()
  fullName: System.Data.Common.DbDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Restituisce un <xref href=&quot;System.Data.DataTable&quot;> </xref> che descrive i metadati della colonna di <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref>."
  syntax:
    content: public virtual System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Oggetto <xref href=&quot;System.Data.DataTable&quot;> </xref> che descrive i metadati della colonna."
  overload: System.Data.Common.DbDataReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> è chiuso."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetStream(System.Int32)
  id: GetStream(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetStream(Int32)
  nameWithType: DbDataReader.GetStream(Int32)
  fullName: System.Data.Common.DbDataReader.GetStream(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Recupera i dati come un <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "GetStream supporta solo il recupero dei valori che possono essere convertiti in matrici di byte.       Per ulteriori informazioni, vedere [supporto del flusso SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.IO.Stream GetStream (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Recupera i dati come un <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    return:
      type: System.IO.Stream
      description: "L&quot;oggetto restituito."
  overload: System.Data.Common.DbDataReader.GetStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione viene interrotta o chiusa durante il recupero di dati.       Il <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> viene chiuso durante il recupero di dati.       Non sono presenti dati pronti per la lettura (ad esempio, il primo <> </> *> non è stato chiamato o ha restituito false).       È stato effettuato un tentativo di leggere una colonna letti in precedenza in modalità sequenziale.       Si è verificato in corso un&quot;operazione asincrona. Questo vale per tutti i Get* metodi durante l&quot;esecuzione in modalità sequenziale, può essere chiamato durante la lettura di un flusso."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Tentativo di leggere una colonna che non esiste."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il tipo restituito non corrisponde a uno dei tipi seguenti: - - binaria - varbinary - tipo definito dall&quot;utente"
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: DbDataReader.GetString(Int32)
  fullName: System.Data.Common.DbDataReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il valore della colonna specificata come un&quot;istanza di <xref:System.String>.</xref:System.String>"
  syntax:
    content: public abstract string GetString (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.String
      description: "Il valore della colonna specificata."
  overload: System.Data.Common.DbDataReader.GetString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  id: GetTextReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetTextReader(Int32)
  nameWithType: DbDataReader.GetTextReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetTextReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Recupera i dati come un <xref:System.IO.TextReader>.</xref:System.IO.TextReader>"
  remarks: "GetTextReader supporta solo il recupero dei valori che possono essere convertiti in matrici di caratteri (stringhe).       Per ulteriori informazioni, vedere [supporto del flusso SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.IO.TextReader GetTextReader (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Recupera i dati come un <xref:System.IO.TextReader>.</xref:System.IO.TextReader>"
    return:
      type: System.IO.TextReader
      description: "L&quot;oggetto restituito."
  overload: System.Data.Common.DbDataReader.GetTextReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione viene interrotta o chiusa durante il recupero di dati.       Il <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> viene chiuso durante il recupero di dati.       Non sono presenti dati pronti per la lettura (ad esempio, il primo <> </> *> non è stato chiamato o ha restituito false).       È stato effettuato un tentativo di leggere una colonna letti in precedenza in modalità sequenziale.       Si è verificato in corso un&quot;operazione asincrona. Questo vale per tutti i Get* metodi durante l&quot;esecuzione in modalità sequenziale, può essere chiamato durante la lettura di un flusso."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Tentativo di leggere una colonna che non esiste."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il tipo restituito non corrisponde a uno dei tipi seguenti: - char, nchar, ntext, nvarchar, text - varchar"
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: DbDataReader.GetValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il valore della colonna specificata come un&quot;istanza di <xref:System.Object>.</xref:System.Object>"
  syntax:
    content: public abstract object GetValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Object
      description: "Il valore della colonna specificata."
  overload: System.Data.Common.DbDataReader.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: DbDataReader.GetValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Popola una matrice di oggetti con i valori della colonna della riga corrente."
  syntax:
    content: public abstract int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Matrice di <xref:System.Object>in cui copiare le colonne di attributi.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Il numero di istanze di <xref:System.Object>nella matrice.</xref:System.Object>"
  overload: System.Data.Common.DbDataReader.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.HasRows
  id: HasRows
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: HasRows
  nameWithType: DbDataReader.HasRows
  fullName: System.Data.Common.DbDataReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene un valore che indica se questo <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> contiene uno o più righe."
  syntax:
    content: public abstract bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> contiene uno o più righe; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.HasRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsClosed
  id: IsClosed
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: DbDataReader.IsClosed
  fullName: System.Data.Common.DbDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> è chiuso."
  syntax:
    content: public abstract bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> è chiuso; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.IsClosed*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Data.SqlClient.SqlDataReader&quot;> </xref> è chiuso."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: DbDataReader.IsDBNull(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene un valore che indica se la colonna contiene valori inesistenti o mancanti."
  remarks: "Chiamare questo metodo per verificare i valori di colonna null prima di chiamare l&quot;oggetto tipizzato metodi get (ad esempio, <xref:System.Data.Common.DbDataReader.GetByte%2A>, <xref:System.Data.Common.DbDataReader.GetChar%2A>e così via) per evitare la generazione di un errore.</xref:System.Data.Common.DbDataReader.GetChar%2A> </xref:System.Data.Common.DbDataReader.GetByte%2A>"
  syntax:
    content: public abstract bool IsDBNull (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la colonna specificata è equivalente a <xref href=&quot;System.DBNull&quot;> </xref>; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  id: IsDBNullAsync(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsDBNullAsync(Int32)
  nameWithType: DbDataReader.IsDBNullAsync(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Versione asincrona di <xref:System.Data.Common.DbDataReader.IsDBNull*>, che ottiene un valore che indica se la colonna contiene valori inesistenti o mancanti.</xref:System.Data.Common.DbDataReader.IsDBNull*>"
  remarks: "Per ulteriori informazioni, vedere [supporto del flusso SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<bool> IsDBNullAsync (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "La colonna in base zero da recuperare."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore della colonna specificato è equivalente a <xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;> </xref> in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.IsDBNullAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione viene interrotta o chiusa durante il recupero di dati.       Il <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> viene chiuso durante il recupero di dati.       Non sono presenti dati pronti per la lettura (ad esempio, il primo <> </> *> non è stato chiamato o ha restituito false).       Tentativo di leggere una colonna in modalità sequenziale letti in precedenza.       Si è verificato in corso un&quot;operazione asincrona. Questo vale per tutti i Get* metodi durante l&quot;esecuzione in modalità sequenziale, può essere chiamato durante la lettura di un flusso."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Tentativo di leggere una colonna che non esiste."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  id: IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: IsDBNullAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.IsDBNullAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Versione asincrona di <xref:System.Data.Common.DbDataReader.IsDBNull*>, che ottiene un valore che indica se la colonna contiene valori inesistenti o mancanti.</xref:System.Data.Common.DbDataReader.IsDBNull*> Facoltativamente, invia una notifica che le operazioni devono essere annullate."
  remarks: "Per ulteriori informazioni, vedere [supporto del flusso SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Threading.Tasks.Task<bool> IsDBNullAsync (int ordinal, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "La colonna in base zero da recuperare."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "L&quot;istruzione di annullamento che propaga una notifica che l&quot;operazione deve essere annullata. Questo non garantisce l&quot;annullamento. Un&quot;impostazione di <xref uid=&quot;langword_csharp_CancellationToken.None&quot; name=&quot;CancellationToken.None&quot; href=&quot;&quot;> </xref> rende il metodo equivalente a <xref:System.Data.Common.DbDataReader.IsDBNullAsync*>.</xref:System.Data.Common.DbDataReader.IsDBNullAsync*> L&quot;attività restituita deve essere contrassegnata come annullata."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore della colonna specificato è equivalente a <xref uid=&quot;langword_csharp_DBNull&quot; name=&quot;DBNull&quot; href=&quot;&quot;> </xref> in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.IsDBNullAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione viene interrotta o chiusa durante il recupero di dati.       Il <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> viene chiuso durante il recupero di dati.       Non sono presenti dati pronti per la lettura (ad esempio, il primo <> </> *> non è stato chiamato o ha restituito false).       Tentativo di leggere una colonna in modalità sequenziale letti in precedenza.       Si è verificato in corso un&quot;operazione asincrona. Questo vale per tutti i Get* metodi durante l&quot;esecuzione in modalità sequenziale, può essere chiamato durante la lettura di un flusso."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Tentativo di leggere una colonna che non esiste."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DbDataReader.Item(Int32)
  fullName: System.Data.Common.DbDataReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il valore della colonna specificata come un&quot;istanza di <xref:System.Object>.</xref:System.Object>"
  syntax:
    content: public abstract object this[int ordinal] { get; }
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Object
      description: "Il valore della colonna specificata."
  overload: System.Data.Common.DbDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: DbDataReader.Item(String)
  fullName: System.Data.Common.DbDataReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il valore della colonna specificata come un&quot;istanza di <xref:System.Object>.</xref:System.Object>"
  syntax:
    content: public abstract object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Il nome della colonna."
    return:
      type: System.Object
      description: "Il valore della colonna specificata."
  overload: System.Data.Common.DbDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "È stata trovata alcuna colonna con il nome specificato."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.NextResult
  id: NextResult
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: DbDataReader.NextResult()
  fullName: System.Data.Common.DbDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Sposta il lettore al risultato successivo durante la lettura dei risultati di un batch di istruzioni."
  remarks: "Questo metodo consente di elaborare più set di risultati restituiti quando un batch viene inviato al provider di dati."
  syntax:
    content: public abstract bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se sono presenti più set di risultati in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.NextResultAsync
  id: NextResultAsync
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: NextResultAsync()
  nameWithType: DbDataReader.NextResultAsync()
  fullName: System.Data.Common.DbDataReader.NextResultAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Versione asincrona di <> </> *>, che sposta il lettore al risultato successivo durante la lettura dei risultati di un batch di istruzioni.       Richiama <> </> *> con proprietà CancellationToken. None."
  remarks: "Per ulteriori informazioni sulla programmazione asincrona, vedere [programmazione asincrona](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<bool> NextResultAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "Attività che rappresenta l&quot;operazione asincrona."
  overload: System.Data.Common.DbDataReader.NextResultAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "Si è verificato un errore durante l&quot;esecuzione del testo del comando."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  id: NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: NextResultAsync(CancellationToken)
  nameWithType: DbDataReader.NextResultAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.NextResultAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Si tratta della versione asincrona di <> </> *>. I provider devono eseguire l&quot;override con un&quot;implementazione appropriata. Il <code> cancellationToken </code> facoltativamente può essere ignorato.       L&quot;implementazione predefinita richiama sincroni <> </> *> (metodo) e restituisce un&quot;attività completata, bloccare il thread chiamante. L&quot;implementazione predefinita restituisce un&quot;attività annullata se passato un già annullata <code> cancellationToken </code>. Le eccezioni generate dalle <xref:System.Data.Common.DbDataReader.NextResult*>verranno comunicati tramite la proprietà di eccezione dell&quot;attività restituita.</xref:System.Data.Common.DbDataReader.NextResult*>       Altri metodi e proprietà dell&quot;oggetto DbDataReader non deve essere richiamata durante l&quot;attività restituita non è ancora completata."
  remarks: "Per ulteriori informazioni sulla programmazione asincrona, vedere [programmazione asincrona](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Threading.Tasks.Task<bool> NextResultAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "L&quot;istruzione di annullamento."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "Attività che rappresenta l&quot;operazione asincrona."
  overload: System.Data.Common.DbDataReader.NextResultAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "Si è verificato un errore durante l&quot;esecuzione del testo del comando."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.Read
  id: Read
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: DbDataReader.Read()
  fullName: System.Data.Common.DbDataReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Sposta il lettore al record successivo in un set di risultati."
  remarks: "La posizione predefinita di un lettore di dati è precedente al primo record. Pertanto, è necessario chiamare Read per iniziare l&quot;accesso ai dati."
  syntax:
    content: public abstract bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se sono presenti altre righe. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DbDataReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.ReadAsync
  id: ReadAsync
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: ReadAsync()
  nameWithType: DbDataReader.ReadAsync()
  fullName: System.Data.Common.DbDataReader.ReadAsync()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Versione asincrona di <> </> *>, che sposta il lettore al record successivo in un set di risultati. Questo metodo richiama <> </> *> con proprietà CancellationToken. None."
  remarks: "Per ulteriori informazioni sulla programmazione asincrona, vedere [programmazione asincrona](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Threading.Tasks.Task<bool> ReadAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "Attività che rappresenta l&quot;operazione asincrona."
  overload: System.Data.Common.DbDataReader.ReadAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "Si è verificato un errore durante l&quot;esecuzione del testo del comando."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  id: ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: ReadAsync(CancellationToken)
  nameWithType: DbDataReader.ReadAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.ReadAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Si tratta della versione asincrona di <> </> *>.  I provider devono eseguire l&quot;override con un&quot;implementazione appropriata. Facoltativamente è possibile ignorare l&quot;elemento cancellationToken.       L&quot;implementazione predefinita richiama sincroni <> </> *> (metodo) e restituisce un&quot;attività completata, bloccare il thread chiamante. L&quot;implementazione predefinita restituisce un&quot;attività annullata se passato un oggetto già annullata cancellationToken.  Le eccezioni generate dalle lettura verranno comunicate tramite la proprietà di eccezione dell&quot;attività restituita.       Non richiamare altri metodi e le proprietà di <xref uid=&quot;langword_csharp_DbDataReader&quot; name=&quot;DbDataReader&quot; href=&quot;&quot;> </xref> oggetto fino al completamento dell&quot;attività restituita."
  remarks: "Per ulteriori informazioni sulla programmazione asincrona, vedere [programmazione asincrona](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Threading.Tasks.Task<bool> ReadAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "L&quot;istruzione di annullamento."
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: "Attività che rappresenta l&quot;operazione asincrona."
  overload: System.Data.Common.DbDataReader.ReadAsync*
  exceptions:
  - type: System.Data.Common.DbException
    commentId: T:System.Data.Common.DbException
    description: "Si è verificato un errore durante l&quot;esecuzione del testo del comando."
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: DbDataReader.RecordsAffected
  fullName: System.Data.Common.DbDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il numero di righe modificate, inserite o eliminate dall&quot;esecuzione dell&quot;istruzione SQL."
  remarks: "Il `RecordsAffected` non è impostata fino a quando non vengono lette tutte le righe e si chiude il `DataReader`."
  syntax:
    content: public abstract int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "Il numero di righe modificate, inserite o eliminate. -1 per le istruzioni SELECT; 0 se nessuna riga è interessata o l&quot;istruzione non riuscita."
  overload: System.Data.Common.DbDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  id: System#Data#IDataRecord#GetData(System.Int32)
  isEii: true
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: System.Data.IDataRecord.GetData(Int32)
  nameWithType: DbDataReader.System.Data.IDataRecord.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.System.Data.IDataRecord.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.Data.IDataRecord.GetData%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Data.Common.DbDataReader>esegue il cast dell&quot;istanza di un <xref:System.Data.IDataRecord>interfaccia.</xref:System.Data.IDataRecord> </xref:System.Data.Common.DbDataReader>"
  syntax:
    content: System.Data.IDataReader IDataRecord.GetData (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Data.IDataReader
      description: "Un&quot;istanza di <xref href=&quot;System.Data.IDataReader&quot;> </xref> da utilizzare quando il campo punta a dati strutturati più remoti."
  overload: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbDataReader.VisibleFieldCount
  id: VisibleFieldCount
  parent: System.Data.Common.DbDataReader
  langs:
  - csharp
  name: VisibleFieldCount
  nameWithType: DbDataReader.VisibleFieldCount
  fullName: System.Data.Common.DbDataReader.VisibleFieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Ottiene il numero di campi di <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref> che non sono nascoste."
  remarks: "Questo valore viene utilizzato per determinare il numero di campi nel <xref:System.Data.Common.DbDataReader>sono visibili.</xref:System.Data.Common.DbDataReader> Ad esempio, un&quot;istruzione SELECT in una chiave primaria parziale restituisce le parti rimanenti della chiave come campi nascosti. I campi nascosti vengono sempre aggiunti dietro i campi visibili."
  syntax:
    content: public virtual int VisibleFieldCount { get; }
    return:
      type: System.Int32
      description: "Il numero di campi non nascosti."
  overload: System.Data.Common.DbDataReader.VisibleFieldCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Common.DbException
  parent: System.Data.Common
  isExternal: false
  name: DbException
  nameWithType: DbException
  fullName: System.Data.Common.DbException
- uid: System.Data.Common.DbDataReader.#ctor
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: DbDataReader()
  nameWithType: DbDataReader.DbDataReader()
  fullName: System.Data.Common.DbDataReader.DbDataReader()
- uid: System.Data.Common.DbDataReader.Close
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Close()
  nameWithType: DbDataReader.Close()
  fullName: System.Data.Common.DbDataReader.Close()
- uid: System.Data.Common.DbDataReader.Depth
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Depth
  nameWithType: DbDataReader.Depth
  fullName: System.Data.Common.DbDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbDataReader.Dispose
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Dispose()
  nameWithType: DbDataReader.Dispose()
  fullName: System.Data.Common.DbDataReader.Dispose()
- uid: System.Data.Common.DbDataReader.Dispose(System.Boolean)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DbDataReader.Dispose(Boolean)
  fullName: System.Data.Common.DbDataReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbDataReader.FieldCount
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: FieldCount
  nameWithType: DbDataReader.FieldCount
  fullName: System.Data.Common.DbDataReader.FieldCount
- uid: System.Data.Common.DbDataReader.GetBoolean(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: DbDataReader.GetBoolean(Int32)
  fullName: System.Data.Common.DbDataReader.GetBoolean(Int32)
- uid: System.Data.Common.DbDataReader.GetByte(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: DbDataReader.GetByte(Int32)
  fullName: System.Data.Common.DbDataReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.Common.DbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbDataReader.GetChar(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: DbDataReader.GetChar(Int32)
  fullName: System.Data.Common.DbDataReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.Common.DbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.Common.DbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbDataReader.GetData(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetData(Int32)
  nameWithType: DbDataReader.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.GetData(Int32)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.Common.DbDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: DbDataReader.GetDataTypeName(Int32)
  fullName: System.Data.Common.DbDataReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbDataReader.GetDateTime(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: DbDataReader.GetDateTime(Int32)
  fullName: System.Data.Common.DbDataReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDbDataReader(Int32)
  nameWithType: DbDataReader.GetDbDataReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetDbDataReader(Int32)
- uid: System.Data.Common.DbDataReader.GetDecimal(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: DbDataReader.GetDecimal(Int32)
  fullName: System.Data.Common.DbDataReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.Common.DbDataReader.GetDouble(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: DbDataReader.GetDouble(Int32)
  fullName: System.Data.Common.DbDataReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.Common.DbDataReader.GetEnumerator
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: DbDataReader.GetEnumerator()
  fullName: System.Data.Common.DbDataReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Common.DbDataReader.GetFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: DbDataReader.GetFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValue(Int32)
  nameWithType: DbDataReader.GetFieldValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValue(Int32)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValueAsync(Int32)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32)
- uid: System.Threading.Tasks.Task{T}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValueAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.GetFieldValueAsync(Int32,CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Data.Common.DbDataReader.GetFloat(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: DbDataReader.GetFloat(Int32)
  fullName: System.Data.Common.DbDataReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.Common.DbDataReader.GetGuid(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: DbDataReader.GetGuid(Int32)
  fullName: System.Data.Common.DbDataReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.Common.DbDataReader.GetInt16(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: DbDataReader.GetInt16(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.Common.DbDataReader.GetInt32(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: DbDataReader.GetInt32(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt32(Int32)
- uid: System.Data.Common.DbDataReader.GetInt64(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: DbDataReader.GetInt64(Int32)
  fullName: System.Data.Common.DbDataReader.GetInt64(Int32)
- uid: System.Data.Common.DbDataReader.GetName(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: DbDataReader.GetName(Int32)
  fullName: System.Data.Common.DbDataReader.GetName(Int32)
- uid: System.Data.Common.DbDataReader.GetOrdinal(System.String)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: DbDataReader.GetOrdinal(String)
  fullName: System.Data.Common.DbDataReader.GetOrdinal(String)
- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificFieldType(Int32)
  nameWithType: DbDataReader.GetProviderSpecificFieldType(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificFieldType(Int32)
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValue(Int32)
  nameWithType: DbDataReader.GetProviderSpecificValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValues(Object[])
  nameWithType: DbDataReader.GetProviderSpecificValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetProviderSpecificValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DbDataReader.GetSchemaTable
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: DbDataReader.GetSchemaTable()
  fullName: System.Data.Common.DbDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Common.DbDataReader.GetStream(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetStream(Int32)
  nameWithType: DbDataReader.GetStream(Int32)
  fullName: System.Data.Common.DbDataReader.GetStream(Int32)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Data.Common.DbDataReader.GetString(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: DbDataReader.GetString(Int32)
  fullName: System.Data.Common.DbDataReader.GetString(Int32)
- uid: System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetTextReader(Int32)
  nameWithType: DbDataReader.GetTextReader(Int32)
  fullName: System.Data.Common.DbDataReader.GetTextReader(Int32)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Data.Common.DbDataReader.GetValue(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: DbDataReader.GetValue(Int32)
  fullName: System.Data.Common.DbDataReader.GetValue(Int32)
- uid: System.Data.Common.DbDataReader.GetValues(System.Object[])
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: DbDataReader.GetValues(Object[])
  fullName: System.Data.Common.DbDataReader.GetValues(Object[])
- uid: System.Data.Common.DbDataReader.HasRows
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: HasRows
  nameWithType: DbDataReader.HasRows
  fullName: System.Data.Common.DbDataReader.HasRows
- uid: System.Data.Common.DbDataReader.IsClosed
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsClosed
  nameWithType: DbDataReader.IsClosed
  fullName: System.Data.Common.DbDataReader.IsClosed
- uid: System.Data.Common.DbDataReader.IsDBNull(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: DbDataReader.IsDBNull(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNull(Int32)
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNullAsync(Int32)
  nameWithType: DbDataReader.IsDBNullAsync(Int32)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32)
- uid: System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNullAsync(Int32,CancellationToken)
  nameWithType: DbDataReader.IsDBNullAsync(Int32,CancellationToken)
  fullName: System.Data.Common.DbDataReader.IsDBNullAsync(Int32,CancellationToken)
- uid: System.Data.Common.DbDataReader.Item(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Item(Int32)
  nameWithType: DbDataReader.Item(Int32)
  fullName: System.Data.Common.DbDataReader.Item(Int32)
- uid: System.Data.Common.DbDataReader.Item(System.String)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Item(String)
  nameWithType: DbDataReader.Item(String)
  fullName: System.Data.Common.DbDataReader.Item(String)
- uid: System.Data.Common.DbDataReader.NextResult
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResult()
  nameWithType: DbDataReader.NextResult()
  fullName: System.Data.Common.DbDataReader.NextResult()
- uid: System.Data.Common.DbDataReader.NextResultAsync
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResultAsync()
  nameWithType: DbDataReader.NextResultAsync()
  fullName: System.Data.Common.DbDataReader.NextResultAsync()
- uid: System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResultAsync(CancellationToken)
  nameWithType: DbDataReader.NextResultAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.NextResultAsync(CancellationToken)
- uid: System.Data.Common.DbDataReader.Read
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Read()
  nameWithType: DbDataReader.Read()
  fullName: System.Data.Common.DbDataReader.Read()
- uid: System.Data.Common.DbDataReader.ReadAsync
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: ReadAsync()
  nameWithType: DbDataReader.ReadAsync()
  fullName: System.Data.Common.DbDataReader.ReadAsync()
- uid: System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: ReadAsync(CancellationToken)
  nameWithType: DbDataReader.ReadAsync(CancellationToken)
  fullName: System.Data.Common.DbDataReader.ReadAsync(CancellationToken)
- uid: System.Data.Common.DbDataReader.RecordsAffected
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DbDataReader.RecordsAffected
  fullName: System.Data.Common.DbDataReader.RecordsAffected
- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.IDataRecord.GetData(Int32)
  nameWithType: DbDataReader.System.Data.IDataRecord.GetData(Int32)
  fullName: System.Data.Common.DbDataReader.System.Data.IDataRecord.GetData(Int32)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.Common.DbDataReader.VisibleFieldCount
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: DbDataReader.VisibleFieldCount
  fullName: System.Data.Common.DbDataReader.VisibleFieldCount
- uid: System.Data.Common.DbDataReader.#ctor*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader.DbDataReader
- uid: System.Data.Common.DbDataReader.Close*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Close
  nameWithType: DbDataReader.Close
- uid: System.Data.Common.DbDataReader.Depth*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Depth
  nameWithType: DbDataReader.Depth
- uid: System.Data.Common.DbDataReader.Dispose*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Dispose
  nameWithType: DbDataReader.Dispose
- uid: System.Data.Common.DbDataReader.FieldCount*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: FieldCount
  nameWithType: DbDataReader.FieldCount
- uid: System.Data.Common.DbDataReader.GetBoolean*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBoolean
  nameWithType: DbDataReader.GetBoolean
- uid: System.Data.Common.DbDataReader.GetByte*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetByte
  nameWithType: DbDataReader.GetByte
- uid: System.Data.Common.DbDataReader.GetBytes*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetBytes
  nameWithType: DbDataReader.GetBytes
- uid: System.Data.Common.DbDataReader.GetChar*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChar
  nameWithType: DbDataReader.GetChar
- uid: System.Data.Common.DbDataReader.GetChars*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetChars
  nameWithType: DbDataReader.GetChars
- uid: System.Data.Common.DbDataReader.GetData*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetData
  nameWithType: DbDataReader.GetData
- uid: System.Data.Common.DbDataReader.GetDataTypeName*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: DbDataReader.GetDataTypeName
- uid: System.Data.Common.DbDataReader.GetDateTime*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDateTime
  nameWithType: DbDataReader.GetDateTime
- uid: System.Data.Common.DbDataReader.GetDbDataReader*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDbDataReader
  nameWithType: DbDataReader.GetDbDataReader
- uid: System.Data.Common.DbDataReader.GetDecimal*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDecimal
  nameWithType: DbDataReader.GetDecimal
- uid: System.Data.Common.DbDataReader.GetDouble*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetDouble
  nameWithType: DbDataReader.GetDouble
- uid: System.Data.Common.DbDataReader.GetEnumerator*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetEnumerator
  nameWithType: DbDataReader.GetEnumerator
- uid: System.Data.Common.DbDataReader.GetFieldType*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldType
  nameWithType: DbDataReader.GetFieldType
- uid: System.Data.Common.DbDataReader.GetFieldValue<T>*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValue<T>
  nameWithType: DbDataReader.GetFieldValue<T>
- uid: System.Data.Common.DbDataReader.GetFieldValueAsync<T>*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFieldValueAsync<T>
  nameWithType: DbDataReader.GetFieldValueAsync<T>
- uid: System.Data.Common.DbDataReader.GetFloat*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetFloat
  nameWithType: DbDataReader.GetFloat
- uid: System.Data.Common.DbDataReader.GetGuid*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetGuid
  nameWithType: DbDataReader.GetGuid
- uid: System.Data.Common.DbDataReader.GetInt16*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt16
  nameWithType: DbDataReader.GetInt16
- uid: System.Data.Common.DbDataReader.GetInt32*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt32
  nameWithType: DbDataReader.GetInt32
- uid: System.Data.Common.DbDataReader.GetInt64*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetInt64
  nameWithType: DbDataReader.GetInt64
- uid: System.Data.Common.DbDataReader.GetName*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetName
  nameWithType: DbDataReader.GetName
- uid: System.Data.Common.DbDataReader.GetOrdinal*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetOrdinal
  nameWithType: DbDataReader.GetOrdinal
- uid: System.Data.Common.DbDataReader.GetProviderSpecificFieldType*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificFieldType
  nameWithType: DbDataReader.GetProviderSpecificFieldType
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValue*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValue
  nameWithType: DbDataReader.GetProviderSpecificValue
- uid: System.Data.Common.DbDataReader.GetProviderSpecificValues*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetProviderSpecificValues
  nameWithType: DbDataReader.GetProviderSpecificValues
- uid: System.Data.Common.DbDataReader.GetSchemaTable*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: DbDataReader.GetSchemaTable
- uid: System.Data.Common.DbDataReader.GetStream*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetStream
  nameWithType: DbDataReader.GetStream
- uid: System.Data.Common.DbDataReader.GetString*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetString
  nameWithType: DbDataReader.GetString
- uid: System.Data.Common.DbDataReader.GetTextReader*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetTextReader
  nameWithType: DbDataReader.GetTextReader
- uid: System.Data.Common.DbDataReader.GetValue*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValue
  nameWithType: DbDataReader.GetValue
- uid: System.Data.Common.DbDataReader.GetValues*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: GetValues
  nameWithType: DbDataReader.GetValues
- uid: System.Data.Common.DbDataReader.HasRows*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: HasRows
  nameWithType: DbDataReader.HasRows
- uid: System.Data.Common.DbDataReader.IsClosed*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsClosed
  nameWithType: DbDataReader.IsClosed
- uid: System.Data.Common.DbDataReader.IsDBNull*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNull
  nameWithType: DbDataReader.IsDBNull
- uid: System.Data.Common.DbDataReader.IsDBNullAsync*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: IsDBNullAsync
  nameWithType: DbDataReader.IsDBNullAsync
- uid: System.Data.Common.DbDataReader.Item*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Item
  nameWithType: DbDataReader.Item
- uid: System.Data.Common.DbDataReader.NextResult*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResult
  nameWithType: DbDataReader.NextResult
- uid: System.Data.Common.DbDataReader.NextResultAsync*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: NextResultAsync
  nameWithType: DbDataReader.NextResultAsync
- uid: System.Data.Common.DbDataReader.Read*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: Read
  nameWithType: DbDataReader.Read
- uid: System.Data.Common.DbDataReader.ReadAsync*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: ReadAsync
  nameWithType: DbDataReader.ReadAsync
- uid: System.Data.Common.DbDataReader.RecordsAffected*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: DbDataReader.RecordsAffected
- uid: System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.IDataRecord.GetData
  nameWithType: DbDataReader.System.Data.IDataRecord.GetData
- uid: System.Data.Common.DbDataReader.VisibleFieldCount*
  parent: System.Data.Common.DbDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: DbDataReader.VisibleFieldCount
