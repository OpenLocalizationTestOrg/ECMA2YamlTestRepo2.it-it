### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.IComNativeDescriptorHandler
  id: IComNativeDescriptorHandler
  children:
  - System.ComponentModel.IComNativeDescriptorHandler.GetAttributes(System.Object)
  - System.ComponentModel.IComNativeDescriptorHandler.GetClassName(System.Object)
  - System.ComponentModel.IComNativeDescriptorHandler.GetConverter(System.Object)
  - System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent(System.Object)
  - System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty(System.Object)
  - System.ComponentModel.IComNativeDescriptorHandler.GetEditor(System.Object,System.Type)
  - System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object)
  - System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object,System.Attribute[])
  - System.ComponentModel.IComNativeDescriptorHandler.GetName(System.Object)
  - System.ComponentModel.IComNativeDescriptorHandler.GetProperties(System.Object,System.Attribute[])
  - System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.Int32,System.Boolean@)
  - System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.String,System.Boolean@)
  langs:
  - csharp
  name: IComNativeDescriptorHandler
  nameWithType: IComNativeDescriptorHandler
  fullName: System.ComponentModel.IComNativeDescriptorHandler
  type: Interface
  summary: "Fornisce un livello di primo livello di mapping tra un oggetto COM e un <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>."
  remarks: >-
    > [!NOTE]

    >  This API is now obsolete. Add a <xref:System.ComponentModel.TypeDescriptionProvider> to handle a <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> instead.
  syntax:
    content: >-
      [System.Obsolete("This interface has been deprecated. Add a TypeDescriptionProvider to handle type TypeDescriptor.ComObjectType instead.  http://go.microsoft.com/fwlink/?linkid=14202")]

      public interface IComNativeDescriptorHandler
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetAttributes(System.Object)
  id: GetAttributes(System.Object)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  langs:
  - csharp
  name: GetAttributes(Object)
  nameWithType: IComNativeDescriptorHandler.GetAttributes(Object)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetAttributes(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene gli attributi per il componente specificato."
  remarks: >-
    > [!NOTE]

    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.
  syntax:
    content: public System.ComponentModel.AttributeCollection GetAttributes (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Il componente per cui ottenere attributi."
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Una raccolta di attributi per <code> component </code>."
  overload: System.ComponentModel.IComNativeDescriptorHandler.GetAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetClassName(System.Object)
  id: GetClassName(System.Object)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  langs:
  - csharp
  name: GetClassName(Object)
  nameWithType: IComNativeDescriptorHandler.GetClassName(Object)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetClassName(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il nome della classe per il componente specificato."
  remarks: >-
    > [!NOTE]

    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.
  syntax:
    content: public string GetClassName (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Componente per cui ottenere il nome della classe."
    return:
      type: System.String
      description: "Il nome della classe che corrisponde a <code> component </code>."
  overload: System.ComponentModel.IComNativeDescriptorHandler.GetClassName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetConverter(System.Object)
  id: GetConverter(System.Object)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  langs:
  - csharp
  name: GetConverter(Object)
  nameWithType: IComNativeDescriptorHandler.GetConverter(Object)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetConverter(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il convertitore di tipi per il componente specificato."
  remarks: >-
    > [!NOTE]

    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.
  syntax:
    content: public System.ComponentModel.TypeConverter GetConverter (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Componente per cui ottenere il <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> per."
    return:
      type: System.ComponentModel.TypeConverter
      description: "The <xref href=&quot;System.ComponentModel.TypeConverter&quot;></xref> for <code>component</code>."
  overload: System.ComponentModel.IComNativeDescriptorHandler.GetConverter*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent(System.Object)
  id: GetDefaultEvent(System.Object)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  langs:
  - csharp
  name: GetDefaultEvent(Object)
  nameWithType: IComNativeDescriptorHandler.GetDefaultEvent(Object)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene l&quot;evento predefinito per il componente specificato."
  remarks: >-
    > [!NOTE]

    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.
  syntax:
    content: public System.ComponentModel.EventDescriptor GetDefaultEvent (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Ottenere l&quot;evento predefinito per il componente."
    return:
      type: System.ComponentModel.EventDescriptor
      description: "Un <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> che rappresenta <code> component </code>dell&quot;evento predefinito."
  overload: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty(System.Object)
  id: GetDefaultProperty(System.Object)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  langs:
  - csharp
  name: GetDefaultProperty(Object)
  nameWithType: IComNativeDescriptorHandler.GetDefaultProperty(Object)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene la proprietà predefinita per il componente specificato."
  remarks: >-
    > [!NOTE]

    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.
  syntax:
    content: public System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Componente per cui ottenere la proprietà predefinita."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "Oggetto <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> che rappresenta <code> component </code>della proprietà predefinito."
  overload: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetEditor(System.Object,System.Type)
  id: GetEditor(System.Object,System.Type)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  langs:
  - csharp
  name: GetEditor(Object,Type)
  nameWithType: IComNativeDescriptorHandler.GetEditor(Object,Type)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetEditor(Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene l&quot;editor per il componente specificato."
  remarks: >-
    > [!NOTE]

    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.
  syntax:
    content: public object GetEditor (object component, Type baseEditorType);
    parameters:
    - id: component
      type: System.Object
      description: "Il componente per ottenere l&quot;editor."
    - id: baseEditorType
      type: System.Type
      description: "Il tipo di base dell&quot;editor per `component`."
    return:
      type: System.Object
      description: "L&quot;editor per <code> component </code>."
  overload: System.ComponentModel.IComNativeDescriptorHandler.GetEditor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object)
  id: GetEvents(System.Object)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  langs:
  - csharp
  name: GetEvents(Object)
  nameWithType: IComNativeDescriptorHandler.GetEvents(Object)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetEvents(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene gli eventi per il componente specificato."
  remarks: >-
    > [!NOTE]

    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.
  syntax:
    content: public System.ComponentModel.EventDescriptorCollection GetEvents (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Il componente per ottenere gli eventi."
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "Una raccolta di descrittori di eventi per <code> component </code>."
  overload: System.ComponentModel.IComNativeDescriptorHandler.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object,System.Attribute[])
  id: GetEvents(System.Object,System.Attribute[])
  parent: System.ComponentModel.IComNativeDescriptorHandler
  langs:
  - csharp
  name: GetEvents(Object,Attribute[])
  nameWithType: IComNativeDescriptorHandler.GetEvents(Object,Attribute[])
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetEvents(Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene gli eventi con gli attributi specificati per il componente specificato."
  remarks: >-
    > [!NOTE]

    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.
  syntax:
    content: public System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes);
    parameters:
    - id: component
      type: System.Object
      description: "Il componente per ottenere gli eventi."
    - id: attributes
      type: System.Attribute[]
      description: "Gli attributi utilizzati per filtrare gli eventi."
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "Una raccolta di descrittori di eventi per <code> component </code>."
  overload: System.ComponentModel.IComNativeDescriptorHandler.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetName(System.Object)
  id: GetName(System.Object)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  langs:
  - csharp
  name: GetName(Object)
  nameWithType: IComNativeDescriptorHandler.GetName(Object)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetName(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il nome del componente specificato."
  remarks: >-
    > [!NOTE]

    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.
  syntax:
    content: public string GetName (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Per ottenere il nome del componente."
    return:
      type: System.String
      description: "The name of <code>component</code>."
  overload: System.ComponentModel.IComNativeDescriptorHandler.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetProperties(System.Object,System.Attribute[])
  id: GetProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.IComNativeDescriptorHandler
  langs:
  - csharp
  name: GetProperties(Object,Attribute[])
  nameWithType: IComNativeDescriptorHandler.GetProperties(Object,Attribute[])
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetProperties(Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene le proprietà con gli attributi specificati per il componente specificato."
  remarks: >-
    > [!NOTE]

    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes);
    parameters:
    - id: component
      type: System.Object
      description: "Il componente per ottenere gli eventi."
    - id: attributes
      type: System.Attribute[]
      description: "Gli attributi utilizzati per filtrare le proprietà."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Una raccolta di descrittori di proprietà per <code> component </code>."
  overload: System.ComponentModel.IComNativeDescriptorHandler.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.Int32,System.Boolean@)
  id: GetPropertyValue(System.Object,System.Int32,System.Boolean@)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  langs:
  - csharp
  name: GetPropertyValue(Object,Int32,Boolean)
  nameWithType: IComNativeDescriptorHandler.GetPropertyValue(Object,Int32,Boolean)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(Object,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il valore della proprietà che contiene l&quot;identificatore di invio specificato."
  remarks: >-
    > [!NOTE]

    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.
  syntax:
    content: public object GetPropertyValue (object component, int dispid, ref bool success);
    parameters:
    - id: component
      type: System.Object
      description: "L&quot;oggetto a cui appartiene la proprietà."
    - id: dispid
      type: System.Int32
      description: "L&quot;identificatore di invio."
    - id: success
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>, passato per riferimento, che indica se la proprietà è stata recuperata.</xref:System.Boolean>"
    return:
      type: System.Object
      description: "Il valore della proprietà con l&quot;identificatore di distribuzione specificato."
  overload: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.String,System.Boolean@)
  id: GetPropertyValue(System.Object,System.String,System.Boolean@)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  langs:
  - csharp
  name: GetPropertyValue(Object,String,Boolean)
  nameWithType: IComNativeDescriptorHandler.GetPropertyValue(Object,String,Boolean)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(Object,String,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il valore della proprietà che contiene il nome specificato."
  remarks: >-
    > [!NOTE]

    >  This API is now obsolete. The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.
  syntax:
    content: public object GetPropertyValue (object component, string propertyName, ref bool success);
    parameters:
    - id: component
      type: System.Object
      description: "L&quot;oggetto a cui appartiene la proprietà."
    - id: propertyName
      type: System.String
      description: "Il nome della proprietà."
    - id: success
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>, passato per riferimento, che indica se la proprietà è stata recuperata.</xref:System.Boolean>"
    return:
      type: System.Object
      description: "Il valore della proprietà che ha il nome specificato."
  overload: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetAttributes(System.Object)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetAttributes(Object)
  nameWithType: IComNativeDescriptorHandler.GetAttributes(Object)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetAttributes(Object)
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetClassName(System.Object)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetClassName(Object)
  nameWithType: IComNativeDescriptorHandler.GetClassName(Object)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetClassName(Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetConverter(System.Object)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetConverter(Object)
  nameWithType: IComNativeDescriptorHandler.GetConverter(Object)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetConverter(Object)
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent(System.Object)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetDefaultEvent(Object)
  nameWithType: IComNativeDescriptorHandler.GetDefaultEvent(Object)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent(Object)
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty(System.Object)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetDefaultProperty(Object)
  nameWithType: IComNativeDescriptorHandler.GetDefaultProperty(Object)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty(Object)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetEditor(System.Object,System.Type)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetEditor(Object,Type)
  nameWithType: IComNativeDescriptorHandler.GetEditor(Object,Type)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetEditor(Object,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetEvents(Object)
  nameWithType: IComNativeDescriptorHandler.GetEvents(Object)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetEvents(Object)
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptorCollection
  nameWithType: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object,System.Attribute[])
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetEvents(Object,Attribute[])
  nameWithType: IComNativeDescriptorHandler.GetEvents(Object,Attribute[])
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetEvents(Object,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetName(System.Object)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetName(Object)
  nameWithType: IComNativeDescriptorHandler.GetName(Object)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetName(Object)
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetProperties(System.Object,System.Attribute[])
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetProperties(Object,Attribute[])
  nameWithType: IComNativeDescriptorHandler.GetProperties(Object,Attribute[])
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetProperties(Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.Int32,System.Boolean@)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetPropertyValue(Object,Int32,Boolean)
  nameWithType: IComNativeDescriptorHandler.GetPropertyValue(Object,Int32,Boolean)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(Object,Int32,Boolean)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.String,System.Boolean@)
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetPropertyValue(Object,String,Boolean)
  nameWithType: IComNativeDescriptorHandler.GetPropertyValue(Object,String,Boolean)
  fullName: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(Object,String,Boolean)
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetAttributes*
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetAttributes
  nameWithType: IComNativeDescriptorHandler.GetAttributes
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetClassName*
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetClassName
  nameWithType: IComNativeDescriptorHandler.GetClassName
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetConverter*
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetConverter
  nameWithType: IComNativeDescriptorHandler.GetConverter
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent*
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetDefaultEvent
  nameWithType: IComNativeDescriptorHandler.GetDefaultEvent
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty*
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetDefaultProperty
  nameWithType: IComNativeDescriptorHandler.GetDefaultProperty
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetEditor*
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetEditor
  nameWithType: IComNativeDescriptorHandler.GetEditor
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetEvents*
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetEvents
  nameWithType: IComNativeDescriptorHandler.GetEvents
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetName*
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetName
  nameWithType: IComNativeDescriptorHandler.GetName
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetProperties*
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetProperties
  nameWithType: IComNativeDescriptorHandler.GetProperties
- uid: System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue*
  parent: System.ComponentModel.IComNativeDescriptorHandler
  isExternal: false
  name: GetPropertyValue
  nameWithType: IComNativeDescriptorHandler.GetPropertyValue
