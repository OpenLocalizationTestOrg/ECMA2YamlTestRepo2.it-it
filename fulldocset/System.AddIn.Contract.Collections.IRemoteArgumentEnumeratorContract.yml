### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  id: IRemoteArgumentEnumeratorContract
  children:
  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent
  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext
  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset
  langs:
  - csharp
  name: IRemoteArgumentEnumeratorContract
  nameWithType: IRemoteArgumentEnumeratorContract
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  type: Interface
  summary: "Enumera gli elementi di una raccolta di <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> oggetti."
  remarks: "È possibile utilizzare enumeratori per leggere i dati nella raccolta, ma non possono essere utilizzati per modificare la raccolta sottostante.       Inizialmente l&quot;enumeratore è posizionato prima del primo elemento nella raccolta. In questa posizione, il valore restituito di <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>non è definito.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> Pertanto, è necessario chiamare <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>per passare l&quot;enumeratore al primo elemento della raccolta prima di chiamare <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> </xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>       <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>Restituisce lo stesso oggetto finché non <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>viene chiamato.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A></xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>Imposta il valore restituito di <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>all&quot;elemento successivo.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A></xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>       Se <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>raggiunge la fine della raccolta, l&quot;enumeratore è posizionato dopo l&quot;ultimo elemento nella raccolta e <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>restituisce `false`.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> </xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> Quando l&quot;enumeratore si trova in questa posizione, le chiamate successive a <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>restituire anche `false`.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> Se l&quot;ultima chiamata a <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>restituito `false`, il valore restituito di <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>non è definito.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> </xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>       Un enumeratore rimane valido fino a quando la raccolta rimane invariata. Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l&quot;enumeratore viene invalidato e il relativo comportamento sarà indefinito."
  syntax:
    content: 'public interface IRemoteArgumentEnumeratorContract : System.AddIn.Contract.IContract'
  implements:
  - System.AddIn.Contract.IContract
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent
  id: GetCurrent
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  langs:
  - csharp
  name: GetCurrent()
  nameWithType: IRemoteArgumentEnumeratorContract.GetCurrent()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Restituisce il <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nella raccolta in corrispondenza della posizione corrente dell&quot;enumeratore."
  remarks: "Il valore restituito di GetCurrent non è definito in una delle seguenti condizioni:-l&quot;enumeratore è posizionato prima del primo elemento nella raccolta, subito dopo la creazione dell&quot;enumeratore o <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>viene chiamato.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>deve essere chiamato per passare l&quot;enumeratore al primo elemento della raccolta prima di chiamare GetCurrent.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>      -L&quot;ultima chiamata a <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>restituito `false`, che indica la fine della raccolta.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>      -L&quot;enumeratore viene invalidato a causa di modifiche apportate nella raccolta, ad esempio aggiunta, modifica o eliminazione di elementi.       GetCurrent restituisce lo stesso oggetto finché non <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>viene chiamato.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A> <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>Imposta il valore restituito di GetCurrent all&quot;elemento successivo.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>"
  syntax:
    content: public System.AddIn.Contract.RemoteArgument GetCurrent ();
    parameters: []
    return:
      type: System.AddIn.Contract.RemoteArgument
      description: "Il <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> nella raccolta in corrispondenza della posizione corrente dell&quot;enumeratore."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext
  id: MoveNext
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  langs:
  - csharp
  name: MoveNext()
  nameWithType: IRemoteArgumentEnumeratorContract.MoveNext()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Sposta l&quot;enumeratore all&quot;elemento successivo della raccolta."
  remarks: "Dopo la creazione di un enumeratore o dopo il <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>metodo viene chiamato, l&quot;enumeratore è posizionato davanti al primo elemento della raccolta.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A> La prima chiamata al metodo MoveNext sposta l&quot;enumeratore al primo elemento della raccolta.       Se MoveNext raggiunge la fine della raccolta, l&quot;enumeratore è posizionato dopo l&quot;ultimo elemento nella raccolta e restituisce MoveNext `false`. Quando l&quot;enumeratore si trova in questa posizione, le successive chiamate a MoveNext restituiscono `false` fino a quando non <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>viene chiamato.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>       Un enumeratore rimane valido fino a quando la raccolta rimane invariata. Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l&quot;enumeratore viene invalidato e la successiva chiamata a MoveNext o <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>Genera un <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset%2A>"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;enumeratore è avanzato all&quot;elemento successivo; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se l&quot;enumeratore ha superato la fine della raccolta."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La raccolta è stata modificata dopo la creazione dell&quot;enumeratore."
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset
  id: Reset
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  langs:
  - csharp
  name: Reset()
  nameWithType: IRemoteArgumentEnumeratorContract.Reset()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Imposta l&quot;enumeratore sulla propria posizione iniziale, ovvero prima del primo elemento nella raccolta."
  remarks: "Dopo la chiamata di ripristino, il valore di <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A>non è definito.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent%2A> Chiamare il <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>per spostare l&quot;enumeratore al primo elemento della raccolta.</xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>       Un enumeratore rimane valido fino a quando la raccolta rimane invariata. Se vengono apportate modifiche alla raccolta, ad esempio aggiungendo, modificando o eliminando elementi, l&quot;enumeratore viene invalidato e la successiva chiamata al <xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>o reimpostazione genera un <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext%2A>"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La raccolta è stata modificata dopo la creazione dell&quot;enumeratore."
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: GetCurrent()
  nameWithType: IRemoteArgumentEnumeratorContract.GetCurrent()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent()
- uid: System.AddIn.Contract.RemoteArgument
  parent: System.AddIn.Contract
  isExternal: false
  name: RemoteArgument
  nameWithType: RemoteArgument
  fullName: System.AddIn.Contract.RemoteArgument
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: MoveNext()
  nameWithType: IRemoteArgumentEnumeratorContract.MoveNext()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: Reset()
  nameWithType: IRemoteArgumentEnumeratorContract.Reset()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset()
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.GetCurrent*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: GetCurrent
  nameWithType: IRemoteArgumentEnumeratorContract.GetCurrent
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.MoveNext*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: MoveNext
  nameWithType: IRemoteArgumentEnumeratorContract.MoveNext
- uid: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract.Reset*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract
  isExternal: false
  name: Reset
  nameWithType: IRemoteArgumentEnumeratorContract.Reset
