### YamlMime:ManagedReference
items:
- uid: System.Windows.Interop.BrowserInteropHelper
  id: BrowserInteropHelper
  children:
  - System.Windows.Interop.BrowserInteropHelper.ClientSite
  - System.Windows.Interop.BrowserInteropHelper.HostScript
  - System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  - System.Windows.Interop.BrowserInteropHelper.Source
  langs:
  - csharp
  name: BrowserInteropHelper
  nameWithType: BrowserInteropHelper
  fullName: System.Windows.Interop.BrowserInteropHelper
  type: Class
  summary: "Una classe helper che fornisce informazioni sull&quot;ambiente dal browser in cui un [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] è ospitata l&quot;applicazione."
  syntax:
    content: public static class BrowserInteropHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.ClientSite
  id: ClientSite
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: ClientSite
  nameWithType: BrowserInteropHelper.ClientSite
  fullName: System.Windows.Interop.BrowserInteropHelper.ClientSite
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Restituisce un riferimento a un oggetto che può essere utilizzato per accedere al browser host tramite le interfacce del contenitore OLE (ad esempio, IOleClientSite::GetContainer();)."
  syntax:
    content: public static object ClientSite { get; }
    return:
      type: System.Object
      description: "Oggetto che può essere convertito in <xref:Microsoft.VisualStudio.OLE.Interop.IOleClientSite>.</xref:Microsoft.VisualStudio.OLE.Interop.IOleClientSite>"
  overload: System.Windows.Interop.BrowserInteropHelper.ClientSite*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.HostScript
  id: HostScript
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: HostScript
  nameWithType: BrowserInteropHelper.HostScript
  fullName: System.Windows.Interop.BrowserInteropHelper.HostScript
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Ottiene un oggetto script che fornisce accesso all&quot;oggetto finestra HTML, uno script personalizzato funzioni e variabili globali per la pagina HTML, se il [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] è ospitato in un frame."
  remarks: "Con l&quot;oggetto restituito HostScript, si può accedere alle proprietà, metodi ed eventi dell&quot;oggetto finestra HTML, chiamare direttamente una funzione di script o accedere a una variabile globale. La sintassi per accedere a questi elementi viene utilizzata la notazione del punto.       Per ulteriori informazioni sull&quot;oggetto finestra, vedere [oggetto finestra](http://go.microsoft.com/fwlink/?LinkId=160274) nella documentazione di HTML dinamico (DHTML).       La proprietà restituisce HostScript `null` se il frame viene eseguito da un percorso tra domini.       Questa funzionalità può essere disattivata per Internet Explorer, impostando il **ScriptInteropDisallow** valore del Registro di sistema. Per ulteriori informazioni, vedere [sicurezza (WPF)](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to retrieve the HostScript object and close the browser window.  \n  \n [!code-xml[XbapBrowserInterop#1](~/add/codesnippet/xaml/wpfbrowserapplication1/page1.xaml#1)]  \n[!code-cs[XbapBrowserInterop#10](~/add/codesnippet/csharp/wpfbrowserapplication1/page1.xaml.cs#10)]\n[!code-vb[XbapBrowserInterop#10](~/add/codesnippet/visualbasic/wpfbrowserapplication1vb/page1.xaml.vb#10)]"
  syntax:
    content: public static dynamic HostScript { get; }
    return:
      type: System.Object
      description: "Un oggetto script che fornisce accesso all&quot;oggetto finestra HTML, uno script personalizzato funzioni e variabili globali per la pagina HTML, se il [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] è ospitato in un frame; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Interop.BrowserInteropHelper.HostScript*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  id: IsBrowserHosted
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: IsBrowserHosted
  nameWithType: BrowserInteropHelper.IsBrowserHosted
  fullName: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Ottiene un valore che specifica se l&quot;oggetto corrente [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] applicazione è ospitata da browser."
  remarks: "Oggetto <xref:System.Windows.Controls.Page>può essere indipendente dall&quot;host e, di conseguenza, può essere caricato in diversi tipi di host, inclusi un <xref:System.Windows.Controls.Frame>, <xref:System.Windows.Navigation.NavigationWindow>, o un browser.</xref:System.Windows.Navigation.NavigationWindow> </xref:System.Windows.Controls.Frame> </xref:System.Windows.Controls.Page> Questa situazione può verificarsi quando si dispone di un assembly della libreria che contiene una o più pagine, e che è esplorabile e a cui fa riferimento più autonomo ([!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)]) ospitare applicazioni."
  example:
  - "The following example demonstrates how to use IsBrowserHosted to determine if a <xref:System.Windows.Controls.Page> is hosted in a browser.  \n  \n [!code-cs[HOWTOBrowserInteropHelperSnippets#IsBrowserHostedCODE](~/add/codesnippet/csharp/BrowserInteropHelperSnippet/Page1.xaml.cs#isbrowserhostedcode)]\n [!code-vb[HOWTOBrowserInteropHelperSnippets#IsBrowserHostedCODE](~/add/codesnippet/visualbasic/browserinterophelpersnippet/page1.xaml.vb#isbrowserhostedcode)]"
  syntax:
    content: public static bool IsBrowserHosted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;applicazione è ospitata da browser; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.BrowserInteropHelper.Source
  id: Source
  parent: System.Windows.Interop.BrowserInteropHelper
  langs:
  - csharp
  name: Source
  nameWithType: BrowserInteropHelper.Source
  fullName: System.Windows.Interop.BrowserInteropHelper.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Ottiene il [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] per il percorso da cui un [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] applicazione è stata avviata."
  remarks: "La proprietà di origine contiene solo un <xref:System.Uri>per [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] applicazioni.</xref:System.Uri> Per un esempio della proprietà di origine, vedere <xref:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted%2A>.</xref:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted%2A>"
  syntax:
    content: public static Uri Source { get; }
    return:
      type: System.Uri
      description: "Il <xref:System.Uri>per il percorso da cui un [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] applicazione è stato avviato; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Uri>"
  overload: System.Windows.Interop.BrowserInteropHelper.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Interop.BrowserInteropHelper.ClientSite
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: ClientSite
  nameWithType: BrowserInteropHelper.ClientSite
  fullName: System.Windows.Interop.BrowserInteropHelper.ClientSite
- uid: System.Windows.Interop.BrowserInteropHelper.HostScript
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: HostScript
  nameWithType: BrowserInteropHelper.HostScript
  fullName: System.Windows.Interop.BrowserInteropHelper.HostScript
- uid: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: IsBrowserHosted
  nameWithType: BrowserInteropHelper.IsBrowserHosted
  fullName: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Interop.BrowserInteropHelper.Source
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: Source
  nameWithType: BrowserInteropHelper.Source
  fullName: System.Windows.Interop.BrowserInteropHelper.Source
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.Interop.BrowserInteropHelper.ClientSite*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: ClientSite
  nameWithType: BrowserInteropHelper.ClientSite
- uid: System.Windows.Interop.BrowserInteropHelper.HostScript*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: HostScript
  nameWithType: BrowserInteropHelper.HostScript
- uid: System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: IsBrowserHosted
  nameWithType: BrowserInteropHelper.IsBrowserHosted
- uid: System.Windows.Interop.BrowserInteropHelper.Source*
  parent: System.Windows.Interop.BrowserInteropHelper
  isExternal: false
  name: Source
  nameWithType: BrowserInteropHelper.Source
