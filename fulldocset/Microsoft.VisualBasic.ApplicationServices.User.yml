### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ApplicationServices.User
  id: User
  children:
  - Microsoft.VisualBasic.ApplicationServices.User.#ctor
  - Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  - Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  - Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  - Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  - Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  - Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  - Microsoft.VisualBasic.ApplicationServices.User.Name
  langs:
  - csharp
  name: User
  nameWithType: User
  fullName: Microsoft.VisualBasic.ApplicationServices.User
  type: Class
  summary: "Fornisce l&quot;accesso alle informazioni sull&quot;utente corrente."
  remarks: "Le proprietà e metodi esposti dal `My.User` oggetto fornire accesso alle informazioni sull&quot;utente corrente. Il significato di &quot;utente corrente&quot; differisce leggermente tra le applicazioni di Windows e Web. In un&quot;applicazione Windows, l&quot;utente corrente è l&quot;utente che esegue l&quot;applicazione. In un&quot;applicazione Web, l&quot;utente corrente è l&quot;utente che accede all&quot;applicazione.       Il `My.User` proprietà fornisce inoltre l&quot;accesso per il <xref:System.Security.Principal.IPrincipal>per l&quot;utente corrente.</xref:System.Security.Principal.IPrincipal> Un oggetto entità rappresenta il contesto di sicurezza dell&quot;utente, tra cui identità dell&quot;utente e eventuali ruoli a cui appartiene l&quot;utente.       Per le applicazioni di Windows, questa proprietà fornisce la stessa funzionalità come la <xref:System.Threading.Thread.CurrentPrincipal%2A>proprietà.</xref:System.Threading.Thread.CurrentPrincipal%2A> Per le applicazioni Web, questa proprietà fornisce la stessa funzionalità come la <xref:System.Web.HttpContext.User%2A>proprietà dell&quot;oggetto restituito dal <xref:System.Web.HttpContext.Current%2A>proprietà.</xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext.User%2A>      > [!NOTE] > Per applicazioni Windows, solo i progetti compilati **applicazione Windows** modello inizializzare il `My.User` oggetto per impostazione predefinita. In tutti gli altri tipi di progetto di Windows, è necessario inizializzare il `My.User` oggetto chiamando il <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A>metodo in modo esplicito o assegnando un valore per <xref:System.Threading.Thread.CurrentPrincipal%2A>.</xref:System.Threading.Thread.CurrentPrincipal%2A> </xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A>      > [!NOTE] > Il `My.User` oggetto non è possibile segnalare informazioni relative all&quot;utente di Windows corrente quando viene eseguito in Windows 95 e Windows 98, poiché questi sistemi operativi non supportano il concetto di un utente connesso. È necessario implementare l&quot;autenticazione personalizzata per utilizzare il `My.User` oggetto in questi sistemi operativi."
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public class User
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: User()
  nameWithType: User.User()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.User()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Inizializza una nuova istanza di <xref href=&quot;Microsoft.VisualBasic.ApplicationServices.User&quot;> </xref> classe."
  remarks: "Le proprietà e metodi esposti dal `My.User` oggetto forniscono accesso a informazioni sull&quot;utente corrente."
  syntax:
    content: public User ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.User.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  id: CurrentPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Ottiene o imposta l&quot;entità corrente (per la sicurezza basata sui ruoli)."
  remarks: "È possibile impostare il `My.User.CurrentPrincipal` proprietà a un oggetto che implementa il <xref:System.Security.Principal.IPrincipal>interfaccia per abilitare l&quot;autenticazione personalizzata.</xref:System.Security.Principal.IPrincipal>       Nella maggior parte dei tipi di progetto, questa proprietà ottiene e imposta l&quot;entità del thread corrente. In un&quot;applicazione ASP.NET, questa proprietà ottiene e imposta le informazioni di sicurezza per l&quot;identità dell&quot;utente della richiesta HTTP corrente.       Si tratta di un membro avanzato. non è visibile in IntelliSense a meno che non si fa clic su di **tutti** scheda.      ## Disponibilità per il tipo di progetto | | |   |-|-|   | Tipo di progetto | Disponibile |   | Applicazione di Windows | **Yes**|   | Libreria di classi | **Yes**|   | Applicazione console | **Yes**|   | Libreria di controlli Windows | **Yes**|   | Libreria di controlli Web | **Yes**|   | Servizio Windows | **Yes**|   | Sito Web | **Yes**|"
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "Oggetto <xref:System.Security.Principal.IPrincipal>valore che rappresenta il contesto di sicurezza.</xref:System.Security.Principal.IPrincipal>"
  overload: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante non dispone dell&quot;autorizzazione necessaria per impostare l&quot;entità."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  id: InitializeWithWindowsUser
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: InitializeWithWindowsUser()
  nameWithType: User.InitializeWithWindowsUser()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Imposta l&quot;entità del thread corrente per l&quot;utente di Windows che ha avviato l&quot;applicazione."
  remarks: "È possibile utilizzare il `My.User.InitializeWithWindowsUser` per impostare l&quot;entità del thread corrente per l&quot;utente di Windows che ha avviato l&quot;applicazione. Per impostazione predefinita, il modello di applicazione Visual Basic in un&quot;applicazione Windows chiama questo metodo all&quot;avvio. In altri tipi di progetto, è necessario impostare l&quot;entità corrente del thread chiamando questo metodo in modo esplicito o assegnando un valore per <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>       Nei progetti di Windows, il `My.User` oggetto si basa sull&quot;entità corrente del thread; pertanto, questo metodo può modificare le informazioni `My.User` restituisce. In un&quot;applicazione ASP.NET, il `My.User` oggetto si basa sull&quot;identità dell&quot;utente della richiesta HTTP corrente e non è interessato da questo metodo.      > [!NOTE] > Il comportamento esatto del `My.User` oggetto dipende dal tipo di applicazione e il sistema operativo in cui viene eseguita l&quot;applicazione. Per ulteriori informazioni, vedere il <xref:Microsoft.VisualBasic.ApplicationServices.User>Cenni preliminari sulla classe.</xref:Microsoft.VisualBasic.ApplicationServices.User>       Si tratta di un membro avanzato. non è visibile in IntelliSense a meno che non si fa clic su di **tutti** scheda.      ## Disponibilità per il tipo di progetto | | |   |-|-|   | Tipo di progetto | Disponibile |   | Applicazione di Windows | **Yes**|   | Libreria di classi | **Yes**|   | Applicazione console | **Yes**|   | Libreria di controlli Windows | **Yes**|   | Libreria di controlli Web | **Yes**|   | Servizio Windows | **Yes**|   | Sito Web | **Yes**|"
  syntax:
    content: public void InitializeWithWindowsUser ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  id: InternalPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Ottiene o imposta l&quot;oggetto principale che rappresenta l&quot;utente corrente."
  remarks: "Nel <xref:Microsoft.VisualBasic.ApplicationServices.User>dell&quot;oggetto, questa proprietà esegue il wrapping di <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>proprietà.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:Microsoft.VisualBasic.ApplicationServices.User> Eseguire l&quot;override di questo metodo in una classe derivata per fornire un comportamento diverso. Ad esempio, il <xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=fullName>proprietà esegue l&quot;override di questa proprietà.</xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual System.Security.Principal.IPrincipal InternalPrincipal { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "Un <xref:System.Security.Principal.IPrincipal>che rappresenta l&quot;utente corrente.</xref:System.Security.Principal.IPrincipal>"
  overload: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  id: IsAuthenticated
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Ottiene un valore che indica se l&quot;utente è stata autenticata."
  remarks: "Il `My.User.IsAuthenticated` proprietà consente al codice determinare se è stato autenticato l&quot;utente corrente.      > [!NOTE] > Il comportamento esatto di `My.User` oggetto dipende dal tipo di applicazione e il sistema operativo in cui viene eseguita l&quot;applicazione. Per ulteriori informazioni, vedere il <xref:Microsoft.VisualBasic.ApplicationServices.User>Cenni preliminari sulla classe.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Disponibilità per il tipo di progetto | | |   |-|-|   | Tipo di progetto | Disponibile |   | Applicazione di Windows | **Yes**|   | Libreria di classi | **Yes**|   | Applicazione console | **Yes**|   | Libreria di controlli Windows | **Yes**|   | Libreria di controlli Web | **Yes**|   | Servizio Windows | **Yes**|   | Sito Web | **Yes**|"
  example:
  - "This example verifies that the user has been authenticated before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#2](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#2)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se l&quot;utente è stato autenticato; in caso contrario, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  id: IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsInRole(BuiltInRole)
  nameWithType: User.IsInRole(BuiltInRole)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(BuiltInRole)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Determina se l&quot;utente corrente appartiene al ruolo specificato."
  remarks: "Il `My.User.IsInRole` metodo consente il codice per determinare se l&quot;utente corrente è un membro del ruolo specificato.       L&quot;overload di `My.User.IsInRole` metodo che accetta una stringa di accedere facilmente al <xref:System.Security.Principal.IPrincipal.IsInRole%2A>metodo per l&quot;entità corrente.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>       L&quot;overload del metodo di `My.User.IsInRole` metodo che accetta un `BuiltInRole` enumerazione si comporta in modo diverso, a seconda di entità corrente. In caso di un&quot;entità utente di Windows (<xref:System.Security.Principal.WindowsPrincipal>), questa funzione converte `role` all&quot;equivalente <xref:System.Security.Principal.WindowsBuiltInRole>enumerazione e restituisce il risultato della chiamata <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> </xref:System.Security.Principal.WindowsBuiltInRole> </xref:System.Security.Principal.WindowsPrincipal> Se l&quot;entità corrente è un&quot;altra entità, questa funzione passa il nome del valore di enumerazione `role` per l&quot;entità <xref:System.Security.Principal.IPrincipal.IsInRole%2A>metodo.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>      > [!NOTE] > Il comportamento esatto del `My.User` oggetto dipende dal tipo di applicazione e il sistema operativo in cui viene eseguita l&quot;applicazione. Per ulteriori informazioni, vedere il <xref:Microsoft.VisualBasic.ApplicationServices.User>Cenni preliminari sulla classe.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Disponibilità per il tipo di progetto | | |   |-|-|   | Tipo di progetto | Disponibile |   | Applicazione di Windows | **Yes**|   | Libreria di classi | **Yes**|   | Applicazione console | **Yes**|   | Libreria di controlli Windows | **Yes**|   | Libreria di controlli Web | **Yes**|   | Servizio Windows | **Yes**|   | Sito Web | **Yes**|"
  example:
  - "This example checks if the user is an administrator before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#1](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#1)]"
  syntax:
    content: public bool IsInRole (Microsoft.VisualBasic.ApplicationServices.BuiltInRole role);
    parameters:
    - id: role
      type: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
      description: "Il ruolo predefinito di Windows per cui si desidera controllare l&quot;appartenenza."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se l&quot;utente corrente è un membro del ruolo specificato. in caso contrario, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsInRole(String)
  nameWithType: User.IsInRole(String)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Determina se l&quot;utente corrente appartiene al ruolo specificato."
  remarks: "Il `My.User.IsInRole` metodo consente il codice per determinare se l&quot;utente corrente è un membro del ruolo specificato.       L&quot;overload di `My.User.IsInRole` metodo che accetta una stringa di accedere facilmente al <xref:System.Security.Principal.IPrincipal.IsInRole%2A>metodo per l&quot;entità corrente.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>       L&quot;overload del metodo di `My.User.IsInRole` metodo che accetta un `BuiltInRole` enumerazione si comporta in modo diverso, a seconda di entità corrente. In caso di un&quot;entità utente di Windows (<xref:System.Security.Principal.WindowsPrincipal>), questa funzione converte `role` all&quot;equivalente <xref:System.Security.Principal.WindowsBuiltInRole>enumerazione e restituisce il risultato della chiamata <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> </xref:System.Security.Principal.WindowsBuiltInRole> </xref:System.Security.Principal.WindowsPrincipal> Se l&quot;entità corrente è un&quot;altra entità, questa funzione passa il nome del valore di enumerazione `role` per l&quot;entità <xref:System.Security.Principal.IPrincipal.IsInRole%2A>metodo.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>      > [!NOTE] > Il comportamento esatto del `My.User` oggetto dipende dal tipo di applicazione e il sistema operativo in cui viene eseguita l&quot;applicazione. Per ulteriori informazioni, vedere il <xref:Microsoft.VisualBasic.ApplicationServices.User>Cenni preliminari sulla classe.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Disponibilità per il tipo di progetto | | |   |-|-|   | Tipo di progetto | Disponibile |   | Applicazione di Windows | **Yes**|   | Libreria di classi | **Yes**|   | Applicazione console | **Yes**|   | Libreria di controlli Windows | **Yes**|   | Libreria di controlli Web | **Yes**|   | Servizio Windows | **Yes**|   | Sito Web | **Yes**|"
  example:
  - "This example checks if the user is an administrator before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#1](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#1)]"
  syntax:
    content: public bool IsInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "Il nome del ruolo per cui si desidera controllare l&quot;appartenenza."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se l&quot;utente corrente è un membro del ruolo specificato. in caso contrario, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name
  id: Name
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: Name
  nameWithType: User.Name
  fullName: Microsoft.VisualBasic.ApplicationServices.User.Name
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Ottiene il nome dell&quot;utente corrente."
  remarks: "You can use the `My.User` object to get information about the current user.  \n  \n The principal that authenticates the user also controls the format of the user name. By default, an application uses Windows authentication, and the user name has the format DOMAIN\\USERNAME. A custom implementation of the principal does not necessarily use the same format.  \n  \n> [!NOTE]\n>  The `My.User.Name` property returns an empty string when run under Windows 95 and Windows 98 because those operating systems do not recognize user names.  \n  \n> [!NOTE]\n>  The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs. For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.  \n  \n## Availability by Project Type  \n  \n|||  \n|-|-|  \n|Project type|Available|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|**Yes**|  \n|Windows Service|**Yes**|  \n|Web Site|**Yes**|"
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Il nome dell&quot;utente corrente."
  overload: Microsoft.VisualBasic.ApplicationServices.User.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: User()
  nameWithType: User.User()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.User()
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InitializeWithWindowsUser()
  nameWithType: User.InitializeWithWindowsUser()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser()
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole(BuiltInRole)
  nameWithType: User.IsInRole(BuiltInRole)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(BuiltInRole)
- uid: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: BuiltInRole
  nameWithType: BuiltInRole
  fullName: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole(String)
  nameWithType: User.IsInRole(String)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: Name
  nameWithType: User.Name
  fullName: Microsoft.VisualBasic.ApplicationServices.User.Name
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: User
  nameWithType: User.User
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InitializeWithWindowsUser
  nameWithType: User.InitializeWithWindowsUser
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole
  nameWithType: User.IsInRole
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: Name
  nameWithType: User.Name
