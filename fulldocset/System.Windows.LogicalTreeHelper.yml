### YamlMime:ManagedReference
items:
- uid: System.Windows.LogicalTreeHelper
  id: LogicalTreeHelper
  children:
  - System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)
  - System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)
  - System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  - System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  langs:
  - csharp
  name: LogicalTreeHelper
  nameWithType: LogicalTreeHelper
  fullName: System.Windows.LogicalTreeHelper
  type: Class
  summary: "Fornisce metodi helper statici per eseguire query sugli oggetti nell&quot;albero logico."
  remarks: "La classe vengono restituiti fornisce metodi che è possibile utilizzare per restituire le raccolte figlio di oggetti o oggetti specifici dall&quot;interno dei nodi secondari dell&quot;albero logico. Tuttavia, la maggior parte delle operazioni eseguite in genere albero oggetto vengono esposte anche da metodi o proprietà o <xref:System.Windows.FrameworkElement> <xref:System.Windows.FrameworkContentElement>.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> simili Ad esempio, provare le operazioni seguenti: - anziché chiamare il metodo statico <xref:System.Windows.LogicalTreeHelper.GetChildren%2A>metodo, che restituisce un enumeratore per il figlio logico di oggetti, utilizzare l&quot;insieme dedicato esposto nel modello di contenuto per l&quot;oggetto.</xref:System.Windows.LogicalTreeHelper.GetChildren%2A> Quasi tutti gli oggetti che supportano un modello di contenuto espongono alcune proprietà che contiene la raccolta di oggetti figlio e fornisce il supporto dell&quot;interfaccia direttamente in tale raccolta.      : Invece di chiamare il metodo statico <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>per ottenere un oggetto figlio specificandone il nome, chiamata di <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName>o <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName>metodo per oggetti specifici.</xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName> </xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName> </xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>       Vengono restituiti sono particolarmente utile per gli scenari di analisi in cui si trovano verso l&quot;alto o verso il basso l&quot;albero logico in modo ricorsivo più livelli e si desidera utilizzare un approccio coerente per esaminare i vari oggetti padre o figlio. In questo caso, è possibile accedere a una combinazione di modelli di contenuto e utilizzando il modello di contenuto più API specifiche che potrebbero essere troppo complesse."
  syntax:
    content: public static class LogicalTreeHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)
  id: BringIntoView(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: BringIntoView(DependencyObject)
  nameWithType: LogicalTreeHelper.BringIntoView(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.BringIntoView(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Tenta di visualizzare l&quot;elemento dell&quot;interfaccia utente richiesto e genera il <xref href=&quot;System.Windows.FrameworkElement.RequestBringIntoView&quot;> </xref> evento sulla destinazione per i risultati del report."
  remarks: "È in genere è più conveniente chiamare i metodi di istanza <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=fullName>o <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=fullName>invece di questo metodo statico dell&quot;utilità.</xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=fullName> </xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=fullName> Il comportamento dei metodi di istanza è equivalente al comportamento del metodo statico.       Anche se il `current` elemento dell&quot;interfaccia utente fornito è stato un <xref:System.Windows.FrameworkContentElement>, l&quot;evento risultante è ancora <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>evento, con il tipo di origine <xref:System.Windows.FrameworkContentElement>identificabili controllando i dati dell&quot;evento dell&quot;evento.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement>"
  syntax:
    content: public static void BringIntoView (System.Windows.DependencyObject current);
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "Elemento dell&quot;interfaccia utente da visualizzare."
  overload: System.Windows.LogicalTreeHelper.BringIntoView*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  id: FindLogicalNode(System.Windows.DependencyObject,System.String)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: FindLogicalNode(DependencyObject,String)
  nameWithType: LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
  fullName: System.Windows.LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Tenta di trovare e restituire un oggetto che ha il nome specificato. La ricerca inizia dall&quot;oggetto specificato e continua con i nodi secondari dell&quot;albero logico."
  remarks: "I metodi <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName>e <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName>sono apparentemente simili a FindLogicalNode, ma una logica diversa per agire:-la direzione di ricerca per FindLogicalNode è verso gli oggetti figlio (verso il basso l&quot;albero); la direzione di ricerca per il `FindName` metodi è verso oggetti padre (l&quot;alto nell&quot;albero).</xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=fullName>      -La `FindName` metodi vengono gestiti con il concetto di un namescope XAML. Utilizzando `FindName` si è certi che solo un oggetto di tale nome esiste, perché gli ambiti dei nomi XAML impone l&quot;univocità. Al contrario, FindLogicalNode Ignora namescope XAML e potrebbe attraversare i limiti del namescope XAML durante la ricerca. Di conseguenza, non c&quot;è garanzia di univocità del `elementName` nome quando si superano i limiti. Per ulteriori informazioni sui NameScope XAML, vedere [NameScope XAML WPF](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Windows.DependencyObject FindLogicalNode (System.Windows.DependencyObject logicalTreeNode, string elementName);
    parameters:
    - id: logicalTreeNode
      type: System.Windows.DependencyObject
      description: "Per avviare la ricerca dall&quot;oggetto. Questo oggetto deve essere un <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> o <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref>."
    - id: elementName
      type: System.String
      description: "Il nome dell&quot;oggetto da trovare."
    return:
      type: System.Windows.DependencyObject
      description: "L&quot;oggetto con il nome corrispondente, se presente. Restituisce <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se è stato trovato alcun nome corrispondente nell&quot;albero logico."
  overload: System.Windows.LogicalTreeHelper.FindLogicalNode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  id: GetChildren(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetChildren(DependencyObject)
  nameWithType: LogicalTreeHelper.GetChildren(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Restituisce la raccolta di oggetti figlio diretti dell&quot;oggetto specificato, elaborando l&quot;albero logico."
  remarks: "Utilizzare questo metodo di firma e nell&quot;helper principalmente quando si è certi se `current` è un <xref:System.Windows.FrameworkElement>o <xref:System.Windows.FrameworkContentElement>e indica se la classe dell&quot;oggetto supporta la propria raccolta di modello di contenuto.</xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement> Se è possibile determinare il tipo dell&quot;oggetto a cui che si esegue una query, controllare la proprietà di contenuto specifica che si è certi esistente su quel tipo. Ad esempio, se si è certi che l&quot;oggetto esegue la query è un <xref:System.Windows.Controls.ItemsControl>, controllare il <xref:System.Windows.Controls.ItemsControl.Items%2A>proprietà da ottenere una raccolta fortemente tipizzata, che dispone del supporto di interfaccia di raccolta e probabilmente più utile di un enumeratore.</xref:System.Windows.Controls.ItemsControl.Items%2A> </xref:System.Windows.Controls.ItemsControl>"
  syntax:
    content: public static System.Collections.IEnumerable GetChildren (System.Windows.DependencyObject current);
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "Oggetto da cui iniziare l&quot;elaborazione dell&quot;albero logico. È previsto che sia un <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> o <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref>."
    return:
      type: System.Collections.IEnumerable
      description: "Raccolta enumerabile di oggetti figlio diretti dall&quot;albero logico dell&quot;oggetto specificato."
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)
  id: GetChildren(System.Windows.FrameworkContentElement)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetChildren(FrameworkContentElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkContentElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkContentElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Restituisce la raccolta di oggetti figlio diretti dell&quot;oggetto specificato <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref> , elaborando l&quot;albero logico."
  syntax:
    content: public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkContentElement current);
    parameters:
    - id: current
      type: System.Windows.FrameworkContentElement
      description: "Oggetto da cui iniziare l&quot;elaborazione dell&quot;albero logico."
    return:
      type: System.Collections.IEnumerable
      description: "Raccolta enumerabile di oggetti figlio diretti a partire da <code> current </code> nell&quot;albero logico."
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  id: GetChildren(System.Windows.FrameworkElement)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetChildren(FrameworkElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Restituisce la raccolta di oggetti figlio diretti dell&quot;oggetto specificato <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> , elaborando l&quot;albero logico."
  syntax:
    content: public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkElement current);
    parameters:
    - id: current
      type: System.Windows.FrameworkElement
      description: "Oggetto da cui iniziare l&quot;elaborazione dell&quot;albero logico."
    return:
      type: System.Collections.IEnumerable
      description: "Raccolta enumerabile di oggetti figlio diretti a partire da <code> current </code> nell&quot;albero logico."
  overload: System.Windows.LogicalTreeHelper.GetChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  id: GetParent(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  langs:
  - csharp
  name: GetParent(DependencyObject)
  nameWithType: LogicalTreeHelper.GetParent(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetParent(DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Restituisce l&quot;oggetto padre dell&quot;oggetto specificato, elaborando l&quot;albero logico."
  remarks: "Questo metodo è semplicemente un wrapper che ottiene la versione del tipo appropriato (<xref:System.Windows.FrameworkElement> o <xref:System.Windows.FrameworkContentElement>) del <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=fullName>o <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=fullName>proprietà; pertanto, a meno che non si riesce a determinare la `current` tipo, si potrebbe voler controllare le proprietà dell&quot;istanza rispettiva.</xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=fullName> </xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement> </xref:System.Windows.FrameworkElement>"
  syntax:
    content: public static System.Windows.DependencyObject GetParent (System.Windows.DependencyObject current);
    parameters:
    - id: current
      type: System.Windows.DependencyObject
      description: "Oggetto da trovare l&quot;oggetto padre. È previsto che sia un <xref href=&quot;System.Windows.FrameworkElement&quot;> </xref> o <xref href=&quot;System.Windows.FrameworkContentElement&quot;> </xref>."
    return:
      type: System.Windows.DependencyObject
      description: "L&quot;oggetto padre richiesto."
  overload: System.Windows.LogicalTreeHelper.GetParent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: BringIntoView(DependencyObject)
  nameWithType: LogicalTreeHelper.BringIntoView(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.BringIntoView(DependencyObject)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: FindLogicalNode(DependencyObject,String)
  nameWithType: LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
  fullName: System.Windows.LogicalTreeHelper.FindLogicalNode(DependencyObject,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren(DependencyObject)
  nameWithType: LogicalTreeHelper.GetChildren(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(DependencyObject)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren(FrameworkContentElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkContentElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkContentElement)
- uid: System.Windows.FrameworkContentElement
  parent: System.Windows
  isExternal: false
  name: FrameworkContentElement
  nameWithType: FrameworkContentElement
  fullName: System.Windows.FrameworkContentElement
- uid: System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren(FrameworkElement)
  nameWithType: LogicalTreeHelper.GetChildren(FrameworkElement)
  fullName: System.Windows.LogicalTreeHelper.GetChildren(FrameworkElement)
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetParent(DependencyObject)
  nameWithType: LogicalTreeHelper.GetParent(DependencyObject)
  fullName: System.Windows.LogicalTreeHelper.GetParent(DependencyObject)
- uid: System.Windows.LogicalTreeHelper.BringIntoView*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: BringIntoView
  nameWithType: LogicalTreeHelper.BringIntoView
- uid: System.Windows.LogicalTreeHelper.FindLogicalNode*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: FindLogicalNode
  nameWithType: LogicalTreeHelper.FindLogicalNode
- uid: System.Windows.LogicalTreeHelper.GetChildren*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetChildren
  nameWithType: LogicalTreeHelper.GetChildren
- uid: System.Windows.LogicalTreeHelper.GetParent*
  parent: System.Windows.LogicalTreeHelper
  isExternal: false
  name: GetParent
  nameWithType: LogicalTreeHelper.GetParent
