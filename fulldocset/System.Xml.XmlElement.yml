### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlElement
  id: XmlElement
  children:
  - System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  - System.Xml.XmlElement.Attributes
  - System.Xml.XmlElement.CloneNode(System.Boolean)
  - System.Xml.XmlElement.GetAttribute(System.String)
  - System.Xml.XmlElement.GetAttribute(System.String,System.String)
  - System.Xml.XmlElement.GetAttributeNode(System.String)
  - System.Xml.XmlElement.GetAttributeNode(System.String,System.String)
  - System.Xml.XmlElement.GetElementsByTagName(System.String)
  - System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)
  - System.Xml.XmlElement.HasAttribute(System.String)
  - System.Xml.XmlElement.HasAttribute(System.String,System.String)
  - System.Xml.XmlElement.HasAttributes
  - System.Xml.XmlElement.InnerText
  - System.Xml.XmlElement.InnerXml
  - System.Xml.XmlElement.IsEmpty
  - System.Xml.XmlElement.LocalName
  - System.Xml.XmlElement.Name
  - System.Xml.XmlElement.NamespaceURI
  - System.Xml.XmlElement.NextSibling
  - System.Xml.XmlElement.NodeType
  - System.Xml.XmlElement.OwnerDocument
  - System.Xml.XmlElement.ParentNode
  - System.Xml.XmlElement.Prefix
  - System.Xml.XmlElement.RemoveAll
  - System.Xml.XmlElement.RemoveAllAttributes
  - System.Xml.XmlElement.RemoveAttribute(System.String)
  - System.Xml.XmlElement.RemoveAttribute(System.String,System.String)
  - System.Xml.XmlElement.RemoveAttributeAt(System.Int32)
  - System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)
  - System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)
  - System.Xml.XmlElement.SchemaInfo
  - System.Xml.XmlElement.SetAttribute(System.String,System.String)
  - System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)
  - System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)
  - System.Xml.XmlElement.SetAttributeNode(System.String,System.String)
  - System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
  type: Class
  summary: "Rappresenta un elemento."
  remarks: "Gli elementi sono uno dei nodi più comuni nel W3C DOM Document Object Model (). Gli elementi possono avere attributi associati. Il `XmlElement` classe dispone di molti metodi per accedere agli attributi (<xref:System.Xml.XmlElement.GetAttribute%2A>, <xref:System.Xml.XmlElement.SetAttribute%2A>, <xref:System.Xml.XmlElement.RemoveAttribute%2A>, <xref:System.Xml.XmlElement.GetAttributeNode%2A>e così via).</xref:System.Xml.XmlElement.GetAttributeNode%2A> </xref:System.Xml.XmlElement.RemoveAttribute%2A> </xref:System.Xml.XmlElement.SetAttribute%2A> </xref:System.Xml.XmlElement.GetAttribute%2A> È inoltre possibile utilizzare il <xref:System.Xml.XmlElement.Attributes%2A>proprietà che restituisce un <xref:System.Xml.XmlAttributeCollection>permette di accedere agli attributi per nome o indice dalla raccolta.</xref:System.Xml.XmlAttributeCollection> </xref:System.Xml.XmlElement.Attributes%2A>"
  syntax:
    content: 'public class XmlElement : System.Xml.XmlLinkedNode'
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  - System.Xml.XmlLinkedNode
  implements: []
  inheritedMembers:
  - System.Xml.XmlLinkedNode.PreviousSibling
  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.BaseURI
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.Clone
  - System.Xml.XmlNode.CreateNavigator
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.IsReadOnly
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.SelectNodes(System.String)
  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.SelectSingleNode(System.String)
  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  - System.Xml.XmlNode.System#ICloneable#Clone
  - System.Xml.XmlNode.Value
  platform:
  - net462
- uid: System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  id: '#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)'
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: XmlElement(String,String,String,XmlDocument)
  nameWithType: XmlElement.XmlElement(String,String,String,XmlDocument)
  fullName: System.Xml.XmlElement.XmlElement(String,String,String,XmlDocument)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Xml.XmlElement&quot;> </xref> classe."
  remarks: "Non creare un&quot;istanza di un <xref:System.Xml.XmlElement>direttamente; in alternativa, utilizzare i metodi, ad esempio <xref:System.Xml.XmlDocument.CreateElement%2A>.</xref:System.Xml.XmlDocument.CreateElement%2A> </xref:System.Xml.XmlElement>"
  syntax:
    content: protected XmlElement (string prefix, string localName, string namespaceURI, System.Xml.XmlDocument doc);
    parameters:
    - id: prefix
      type: System.String
      description: "Il prefisso dello spazio dei nomi. vedere il <xref:System.Xml.XmlElement.Prefix*>proprietà.</xref:System.Xml.XmlElement.Prefix*>"
    - id: localName
      type: System.String
      description: "Nome locale. vedere il <xref:System.Xml.XmlElement.LocalName*>proprietà.</xref:System.Xml.XmlElement.LocalName*>"
    - id: namespaceURI
      type: System.String
      description: "Lo spazio dei nomi URI; vedere il <xref:System.Xml.XmlElement.NamespaceURI*>proprietà.</xref:System.Xml.XmlElement.NamespaceURI*>"
    - id: doc
      type: System.Xml.XmlDocument
      description: "Il documento XML padre."
  overload: System.Xml.XmlElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.Attributes
  id: Attributes
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: Attributes
  nameWithType: XmlElement.Attributes
  fullName: System.Xml.XmlElement.Attributes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene un <xref href=&quot;System.Xml.XmlAttributeCollection&quot;> </xref> contenente l&quot;elenco di attributi per questo nodo."
  remarks: ''
  example:
  - "The following example uses changes the value of the first attribute.  \n  \n [!code-cpp[Classic WebData XmlElement.Attributes Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._0_1.cpp)]\n [!code-cs[Classic WebData XmlElement.Attributes Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._0_1.cs)]\n [!code-vb[Classic WebData XmlElement.Attributes Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._0_1.vb)]"
  syntax:
    content: public override System.Xml.XmlAttributeCollection Attributes { get; }
    return:
      type: System.Xml.XmlAttributeCollection
      description: "<xref href=&quot;System.Xml.XmlAttributeCollection&quot;></xref>che contiene l&quot;elenco di attributi per questo nodo."
  overload: System.Xml.XmlElement.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: CloneNode(Boolean)
  nameWithType: XmlElement.CloneNode(Boolean)
  fullName: System.Xml.XmlElement.CloneNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Crea un duplicato del nodo."
  remarks: "Questo metodo viene utilizzato come un costruttore di copia per i nodi. Nodo duplicato non ha elementi padre (<xref:System.Xml.XmlNode.ParentNode%2A> restituisce `null`).</xref:System.Xml.XmlNode.ParentNode%2A>"
  example:
  - "The following example creates a new element, clones it, and then adds both elements into an XML document.  \n  \n [!code-cpp[Classic WebData XmlElement.CloneNode Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._3_1.cpp)]\n [!code-cs[Classic WebData XmlElement.CloneNode Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._3_1.cs)]\n [!code-vb[Classic WebData XmlElement.CloneNode Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._3_1.vb)]"
  syntax:
    content: public override System.Xml.XmlNode CloneNode (bool deep);
    parameters:
    - id: deep
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>in modo ricorsivo il sottoalbero del nodo specificato; di clonazione <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per clonare solo il nodo (e i relativi attributi se il nodo è un <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref>)."
    return:
      type: System.Xml.XmlNode
      description: "Nodo clonato."
  overload: System.Xml.XmlElement.CloneNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: GetAttribute(String)
  nameWithType: XmlElement.GetAttribute(String)
  fullName: System.Xml.XmlElement.GetAttribute(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Restituisce il valore dell&quot;attributo con il nome specificato."
  remarks: ''
  example:
  - "The following example checks to see if the element has the specified attribute.  \n  \n [!code-cs[Classic WebData XmlElement.HasAttribute Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._0_1.cs)]\n [!code-vb[Classic WebData XmlElement.HasAttribute Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._0_1.vb)]\n [!code-cpp[Classic WebData XmlElement.HasAttribute Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._0_1.cpp)]"
  syntax:
    content: public virtual string GetAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome dell&quot;attributo da recuperare. Si tratta di un nome completo. Viene confrontato con il <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> proprietà del nodo corrispondente."
    return:
      type: System.String
      description: "Il valore dell&quot;attributo specificato. Se non viene trovato un attributo corrispondente o se l&quot;attributo non dispone di un oggetto specificato o il valore predefinito, viene restituita una stringa vuota."
  overload: System.Xml.XmlElement.GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.GetAttribute(System.String,System.String)
  id: GetAttribute(System.String,System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: GetAttribute(String,String)
  nameWithType: XmlElement.GetAttribute(String,String)
  fullName: System.Xml.XmlElement.GetAttribute(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Restituisce il valore dell&quot;attributo con il nome locale specificato e l&quot;URI dello spazio dei nomi."
  syntax:
    content: public virtual string GetAttribute (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "Il nome locale dell&quot;attributo da recuperare."
    - id: namespaceURI
      type: System.String
      description: "Lo spazio dei nomi URI dell&quot;attributo da recuperare."
    return:
      type: System.String
      description: "Il valore dell&quot;attributo specificato. Se non viene trovato un attributo corrispondente o se l&quot;attributo non dispone di un oggetto specificato o il valore predefinito, viene restituita una stringa vuota."
  overload: System.Xml.XmlElement.GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.GetAttributeNode(System.String)
  id: GetAttributeNode(System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: GetAttributeNode(String)
  nameWithType: XmlElement.GetAttributeNode(String)
  fullName: System.Xml.XmlElement.GetAttributeNode(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Restituisce il <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> con il nome specificato."
  remarks: ''
  example:
  - "The following example checks to see if the element has the specified attribute.  \n  \n [!code-cpp[Classic WebData XmlElement.GetAttributeNode Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._5_1.cpp)]\n [!code-cs[Classic WebData XmlElement.GetAttributeNode Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._5_1.cs)]\n [!code-vb[Classic WebData XmlElement.GetAttributeNode Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._5_1.vb)]"
  syntax:
    content: public virtual System.Xml.XmlAttribute GetAttributeNode (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome dell&quot;attributo da recuperare. Si tratta di un nome completo. Viene confrontato con il <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> proprietà del nodo corrispondente."
    return:
      type: System.Xml.XmlAttribute
      description: "Specificato <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non è stato trovato un attributo corrispondente."
  overload: System.Xml.XmlElement.GetAttributeNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.GetAttributeNode(System.String,System.String)
  id: GetAttributeNode(System.String,System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: GetAttributeNode(String,String)
  nameWithType: XmlElement.GetAttributeNode(String,String)
  fullName: System.Xml.XmlElement.GetAttributeNode(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Restituisce il <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> con il nome locale specificato e l&quot;URI dello spazio dei nomi."
  syntax:
    content: public virtual System.Xml.XmlAttribute GetAttributeNode (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "Il nome locale dell&quot;attributo."
    - id: namespaceURI
      type: System.String
      description: "Lo spazio dei nomi URI dell&quot;attributo."
    return:
      type: System.Xml.XmlAttribute
      description: "Specificato <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non è stato trovato un attributo corrispondente."
  overload: System.Xml.XmlElement.GetAttributeNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.GetElementsByTagName(System.String)
  id: GetElementsByTagName(System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: GetElementsByTagName(String)
  nameWithType: XmlElement.GetElementsByTagName(String)
  fullName: System.Xml.XmlElement.GetElementsByTagName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Restituisce un <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> contenente un elenco di tutti gli elementi discendenti che corrispondono al <xref:System.Xml.XmlElement.Name*>.</xref:System.Xml.XmlElement.Name*> specificato"
  remarks: "I nodi vengono inseriti nell&quot;ordine in cui verrebbero rilevati in una preordinata del <xref:System.Xml.XmlElement>struttura ad albero.</xref:System.Xml.XmlElement>      > [!NOTE] > È consigliabile utilizzare il <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>o <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName>metodo anziché il metodo GetElementsByTagName.</xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName> </xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>"
  example:
  - "The following example gets and displays all the book titles.  \n  \n [!code-cpp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._13_1.cpp)]\n [!code-vb[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._13_1.vb)]\n [!code-cs[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._13_1.cs)]  \n  \n The example uses the file, `2books.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlElement.GetElementsByTagName Example#2](~/add/codesnippet/xml/m-system.xml.xmlelement._13_2.xml)]"
  syntax:
    content: public virtual System.Xml.XmlNodeList GetElementsByTagName (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il tag del nome da confrontare. Si tratta di un nome completo. Viene confrontato con il <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> proprietà del nodo corrispondente. L&quot;asterisco (*) è un valore speciale che corrisponde a tutti i tag."
    return:
      type: System.Xml.XmlNodeList
      description: "Un <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> contenente un elenco di tutti i nodi corrispondenti. L&quot;elenco è vuoto se non sono presenti nodi corrispondenti."
  overload: System.Xml.XmlElement.GetElementsByTagName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)
  id: GetElementsByTagName(System.String,System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: GetElementsByTagName(String,String)
  nameWithType: XmlElement.GetElementsByTagName(String,String)
  fullName: System.Xml.XmlElement.GetElementsByTagName(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Restituisce un <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> contenente un elenco di tutti gli elementi discendenti che corrispondono alla stringa <> </> *> e <> </> *>."
  remarks: "I nodi vengono inseriti nell&quot;ordine in cui verrebbero rilevati in una preordinata del `XmlElement` struttura ad albero.      > [!NOTE] > È consigliabile utilizzare il <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>o <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName>metodo anziché il metodo GetElementsByTagName.</xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName> </xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>"
  syntax:
    content: public virtual System.Xml.XmlNodeList GetElementsByTagName (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "Nome locale da confrontare. L&quot;asterisco (*) è un valore speciale che corrisponde a tutti i tag."
    - id: namespaceURI
      type: System.String
      description: "Lo spazio dei nomi URI corrispondono."
    return:
      type: System.Xml.XmlNodeList
      description: "Un <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> contenente un elenco di tutti i nodi corrispondenti. L&quot;elenco è vuoto se non sono presenti nodi corrispondenti."
  overload: System.Xml.XmlElement.GetElementsByTagName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.HasAttribute(System.String)
  id: HasAttribute(System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: HasAttribute(String)
  nameWithType: XmlElement.HasAttribute(String)
  fullName: System.Xml.XmlElement.HasAttribute(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Determina se il nodo corrente dispone di un attributo con il nome specificato."
  remarks: ''
  example:
  - "The following example checks to see if the element has the specified attribute.  \n  \n [!code-cs[Classic WebData XmlElement.HasAttribute Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._7_1.cs)]\n [!code-vb[Classic WebData XmlElement.HasAttribute Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._7_1.vb)]\n [!code-cpp[Classic WebData XmlElement.HasAttribute Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._7_1.cpp)]"
  syntax:
    content: public virtual bool HasAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome dell&quot;attributo da trovare. Si tratta di un nome completo. Viene confrontato con il <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> proprietà del nodo corrispondente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il nodo corrente dispone dell&quot;attributo specificato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlElement.HasAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.HasAttribute(System.String,System.String)
  id: HasAttribute(System.String,System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: HasAttribute(String,String)
  nameWithType: XmlElement.HasAttribute(String,String)
  fullName: System.Xml.XmlElement.HasAttribute(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Determina se il nodo corrente dispone di un attributo con il nome locale specificato e l&quot;URI dello spazio dei nomi."
  syntax:
    content: public virtual bool HasAttribute (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "Il nome locale dell&quot;attributo da trovare."
    - id: namespaceURI
      type: System.String
      description: "Lo spazio dei nomi URI dell&quot;attributo da trovare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il nodo corrente dispone dell&quot;attributo specificato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlElement.HasAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.HasAttributes
  id: HasAttributes
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: HasAttributes
  nameWithType: XmlElement.HasAttributes
  fullName: System.Xml.XmlElement.HasAttributes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene un <xref uid=&quot;langword_csharp_boolean&quot; name=&quot;boolean&quot; href=&quot;&quot;> </xref> valore che indica se il nodo corrente dispone di attributi."
  remarks: "Questa proprietà è un&quot;estensione Microsoft per il provider di servizi Internet (DOM, Document Object Model)."
  example:
  - "The following example removes all attributes from the root element.  \n  \n [!code-cpp[Classic WebData XmlElement.HasAttributes Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._5_1.cpp)]\n [!code-vb[Classic WebData XmlElement.HasAttributes Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._5_1.vb)]\n [!code-cs[Classic WebData XmlElement.HasAttributes Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._5_1.cs)]"
  syntax:
    content: public virtual bool HasAttributes { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il nodo corrente contiene attributi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlElement.HasAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.InnerText
  id: InnerText
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: InnerText
  nameWithType: XmlElement.InnerText
  fullName: System.Xml.XmlElement.InnerText
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene o imposta i valori concatenati del nodo e tutti gli elementi figlio."
  remarks: "L&quot;impostazione di questa proprietà sostituisce tutti gli elementi figlio con il contenuto analizzato della stringa specificata.       Questa proprietà è un&quot;estensione Microsoft per il provider di servizi Internet (DOM, Document Object Model)."
  example:
  - "The following example compares the `InnerText` and <xref:System.Xml.XmlElement.InnerXml%2A> properties.  \n  \n [!code-cpp[Classic WebData XmlElement.InnerXml Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._7_1.cpp)]\n [!code-cs[Classic WebData XmlElement.InnerXml Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._7_1.cs)]\n [!code-vb[Classic WebData XmlElement.InnerXml Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._7_1.vb)]"
  syntax:
    content: public override string InnerText { get; set; }
    return:
      type: System.String
      description: "Valori concatenati del nodo e tutti gli elementi figlio."
  overload: System.Xml.XmlElement.InnerText*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.InnerXml
  id: InnerXml
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: InnerXml
  nameWithType: XmlElement.InnerXml
  fullName: System.Xml.XmlElement.InnerXml
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene o imposta il markup che rappresenta gli elementi figlio del nodo."
  remarks: "L&quot;impostazione di questa proprietà sostituisce gli elementi figlio del nodo con il contenuto analizzato della stringa specificata. L&quot;analisi viene eseguita nel contesto dello spazio dei nomi corrente.       Questa proprietà è un&quot;estensione Microsoft per il provider di servizi Internet (DOM, Document Object Model)."
  example:
  - "The following example compares the <xref:System.Xml.XmlElement.InnerText%2A> and `InnerXml` properties.  \n  \n [!code-cpp[Classic WebData XmlElement.InnerXml Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._2_1.cpp)]\n [!code-cs[Classic WebData XmlElement.InnerXml Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._2_1.cs)]\n [!code-vb[Classic WebData XmlElement.InnerXml Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._2_1.vb)]"
  syntax:
    content: public override string InnerXml { get; set; }
    return:
      type: System.String
      description: "Markup degli elementi figlio del nodo."
  overload: System.Xml.XmlElement.InnerXml*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Il file XML specificato quando si imposta questa proprietà non è corretto."
  platform:
  - net462
- uid: System.Xml.XmlElement.IsEmpty
  id: IsEmpty
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: IsEmpty
  nameWithType: XmlElement.IsEmpty
  fullName: System.Xml.XmlElement.IsEmpty
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene o imposta il formato di tag dell&quot;elemento."
  remarks: "Questa proprietà è un&quot;estensione Microsoft del modello DOM (Document Object)."
  example:
  - "The following example adds content to an empty element.  \n  \n [!code-cpp[Classic WebData XmlElement.IsEmpty Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._8_1.cpp)]\n [!code-cs[Classic WebData XmlElement.IsEmpty Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._8_1.cs)]\n [!code-vb[Classic WebData XmlElement.IsEmpty Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._8_1.vb)]"
  syntax:
    content: public bool IsEmpty { get; set; }
    return:
      type: System.Boolean
      description: "Restituisce <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se l&quot;elemento è deve essere serializzato nel formato di tag breve &quot;&lt;elemento /&gt;&quot;; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> for the long format &quot;&lt;item&gt;&lt;/item&gt;&quot;.       Quando si imposta questa proprietà, se impostato su <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, vengono rimossi gli elementi figlio dell&quot;elemento e l&quot;elemento viene serializzato nel formato di tag breve. Se impostato su <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, il valore della proprietà viene modificato (indipendentemente dal fatto che il contenuto dell&quot;elemento è); se l&quot;elemento è vuoto, verrà serializzato nel formato lungo.       Questa proprietà è un&quot;estensione Microsoft per il provider di servizi Internet (DOM, Document Object Model)."
  overload: System.Xml.XmlElement.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.LocalName
  id: LocalName
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlElement.LocalName
  fullName: System.Xml.XmlElement.LocalName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene il nome locale del nodo corrente."
  remarks: "Se il nodo non ha un prefisso, `LocalName` equivale <xref:System.Xml.XmlElement.Name%2A>.</xref:System.Xml.XmlElement.Name%2A>"
  example:
  - "The following example displays information on the ISBN element.  \n  \n [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._4_1.vb)]\n [!code-cs[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._4_1.cs)]\n [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._4_1.cpp)]"
  syntax:
    content: public override string LocalName { get; }
    return:
      type: System.String
      description: "Nome del nodo corrente con il prefisso. Ad esempio, <xref uid=&quot;langword_csharp_LocalName&quot; name=&quot;LocalName&quot; href=&quot;&quot;> </xref> per l&quot;elemento è book &lt;bk: book&gt;."
  overload: System.Xml.XmlElement.LocalName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.Name
  id: Name
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: Name
  nameWithType: XmlElement.Name
  fullName: System.Xml.XmlElement.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene il nome completo del nodo."
  remarks: ''
  example:
  - "The following example displays information on the ISBN element.  \n  \n [!code-cpp[Classic WebData XmlElement.Name Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._1_1.cpp)]\n [!code-cs[Classic WebData XmlElement.Name Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._1_1.cs)]\n [!code-vb[Classic WebData XmlElement.Name Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._1_1.vb)]"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "Il nome completo del nodo. Per <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref> nodi, si tratta del nome di tag dell&quot;elemento."
  overload: System.Xml.XmlElement.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.NamespaceURI
  id: NamespaceURI
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: NamespaceURI
  nameWithType: XmlElement.NamespaceURI
  fullName: System.Xml.XmlElement.NamespaceURI
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene lo spazio dei nomi URI di questo nodo."
  remarks: "Questo è lo spazio dei nomi che URI specificato al momento della creazione. Ad esempio, `NamespaceURI` è urn: samples per l&quot;elemento \\<xmlns: bk bk: book = &quot;urn: samples&quot; >"
  example:
  - "The following example displays information on the ISBN element.  \n  \n [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._6_1.vb)]\n [!code-cs[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._6_1.cs)]\n [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._6_1.cpp)]"
  syntax:
    content: public override string NamespaceURI { get; }
    return:
      type: System.String
      description: "Lo spazio dei nomi URI di questo nodo. Se è presente alcun URI dello spazio dei nomi, questa proprietà restituisce String. Empty."
  overload: System.Xml.XmlElement.NamespaceURI*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.NextSibling
  id: NextSibling
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: NextSibling
  nameWithType: XmlElement.NextSibling
  fullName: System.Xml.XmlElement.NextSibling
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene il <xref href=&quot;System.Xml.XmlNode&quot;> </xref> immediatamente successivo all&quot;elemento."
  syntax:
    content: public override System.Xml.XmlNode NextSibling { get; }
    return:
      type: System.Xml.XmlNode
      description: "Il <xref uid=&quot;langword_csharp_XmlNode&quot; name=&quot;XmlNode&quot; href=&quot;&quot;> </xref> immediatamente successivo all&quot;elemento."
  overload: System.Xml.XmlElement.NextSibling*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.NodeType
  id: NodeType
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlElement.NodeType
  fullName: System.Xml.XmlElement.NodeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene il tipo del nodo corrente."
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: "Il tipo di nodo. Per <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref> nodi, questo valore è XmlNodeType. Element."
  overload: System.Xml.XmlElement.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.OwnerDocument
  id: OwnerDocument
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: OwnerDocument
  nameWithType: XmlElement.OwnerDocument
  fullName: System.Xml.XmlElement.OwnerDocument
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene il <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> a cui appartiene questo nodo."
  remarks: "Quando si aggiungono nodi al nodo corrente, utilizzare il `XmlDocument` restituito dal `OwnerDocument` proprietà per creare il nodo."
  example:
  - "The following example inserts a new element into an XML document.  \n  \n [!code-cpp[Classic WebData XmlElement.OwnerDocument Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._3_1.cpp)]\n [!code-vb[Classic WebData XmlElement.OwnerDocument Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._3_1.vb)]\n [!code-cs[Classic WebData XmlElement.OwnerDocument Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._3_1.cs)]"
  syntax:
    content: public override System.Xml.XmlDocument OwnerDocument { get; }
    return:
      type: System.Xml.XmlDocument
      description: "Il <xref uid=&quot;langword_csharp_XmlDocument&quot; name=&quot;XmlDocument&quot; href=&quot;&quot;> </xref> a cui appartiene questo elemento."
  overload: System.Xml.XmlElement.OwnerDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.ParentNode
  id: ParentNode
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: ParentNode
  nameWithType: XmlElement.ParentNode
  fullName: System.Xml.XmlElement.ParentNode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene l&quot;elemento padre del nodo (per i nodi che dispongono di elementi padre)."
  syntax:
    content: public override System.Xml.XmlNode ParentNode { get; }
    return:
      type: System.Xml.XmlNode
      description: "Il <xref uid=&quot;langword_csharp_XmlNode&quot; name=&quot;XmlNode&quot; href=&quot;&quot;> </xref> che rappresenta l&quot;elemento padre del nodo corrente. Se un nodo è stato appena creato e non ancora aggiunto all&quot;albero oppure se è stato rimosso dall&quot;albero, l&quot;elemento padre è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Per tutti gli altri nodi, il valore restituito varia a seconda di <xref:System.Xml.XmlNode.NodeType*>del nodo.</xref:System.Xml.XmlNode.NodeType*> Nella tabella seguente vengono descritti i possibili valori restituiti per il <xref uid=&quot;langword_csharp_ParentNode&quot; name=&quot;ParentNode&quot; href=&quot;&quot;> </xref> proprietà."
  overload: System.Xml.XmlElement.ParentNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.Prefix
  id: Prefix
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: Prefix
  nameWithType: XmlElement.Prefix
  fullName: System.Xml.XmlElement.Prefix
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene o imposta il prefisso dello spazio dei nomi del nodo."
  remarks: "L&quot;impostazione di questa proprietà viene modificata la <xref:System.Xml.XmlElement.Name%2A>proprietà, che contiene il nome completo per un `XmlElement`.</xref:System.Xml.XmlElement.Name%2A> Tuttavia, il prefisso non modifica lo spazio dei nomi URI dell&quot;elemento."
  example:
  - "The following example displays information on the ISBN element.  \n  \n [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._9_1.vb)]\n [!code-cs[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._9_1.cs)]\n [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._9_1.cpp)]"
  syntax:
    content: public override string Prefix { get; set; }
    return:
      type: System.String
      description: "Il prefisso dello spazio dei nomi del nodo. Se è presente alcun prefisso, questa proprietà restituisce String. Empty."
  overload: System.Xml.XmlElement.Prefix*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Questo nodo è di sola lettura"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Il prefisso specificato contiene un carattere non valido.       Il prefisso specificato non è valido.       NamespaceURI di questo nodo è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       Il prefisso specificato è &quot;xml&quot; e che namespaceURI di questo nodo è diverso da http://www.w3.org/XML/1998/namespace."
  platform:
  - net462
- uid: System.Xml.XmlElement.RemoveAll
  id: RemoveAll
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: RemoveAll()
  nameWithType: XmlElement.RemoveAll()
  fullName: System.Xml.XmlElement.RemoveAll()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Rimuove tutti gli attributi e gli elementi figlio del nodo corrente. Gli attributi predefiniti non vengono rimossi."
  remarks: ''
  example:
  - "The following example removes all attributes and child nodes from the root element.  \n  \n [!code-cpp[Classic WebData XmlElement.RemoveAll Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._6_1.cpp)]\n [!code-vb[Classic WebData XmlElement.RemoveAll Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._6_1.vb)]\n [!code-cs[Classic WebData XmlElement.RemoveAll Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._6_1.cs)]"
  syntax:
    content: public override void RemoveAll ();
    parameters: []
  overload: System.Xml.XmlElement.RemoveAll*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.RemoveAllAttributes
  id: RemoveAllAttributes
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: RemoveAllAttributes()
  nameWithType: XmlElement.RemoveAllAttributes()
  fullName: System.Xml.XmlElement.RemoveAllAttributes()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Rimuove tutti gli attributi specificati dall&quot;elemento. Gli attributi predefiniti non vengono rimossi."
  remarks: "Questo metodo è un&quot;estensione Microsoft per il provider di servizi Internet (DOM, Document Object Model)."
  example:
  - "The following example removes all attributes from the root element.  \n  \n [!code-cpp[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._9_1.cpp)]\n [!code-cs[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._9_1.cs)]\n [!code-vb[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._9_1.vb)]"
  syntax:
    content: public virtual void RemoveAllAttributes ();
    parameters: []
  overload: System.Xml.XmlElement.RemoveAllAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.RemoveAttribute(System.String)
  id: RemoveAttribute(System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: RemoveAttribute(String)
  nameWithType: XmlElement.RemoveAttribute(String)
  fullName: System.Xml.XmlElement.RemoveAttribute(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Rimuove un attributo in base al nome."
  remarks: "Se l&quot;attributo rimosso è noto che un valore predefinito, viene immediatamente visualizzato un attributo contenente il valore predefinito e, se applicabile, il nome locale, prefisso e URI dello spazio dei nomi corrispondente."
  example:
  - "The following example removes an attribute from an element.  \n  \n [!code-cpp[Classic WebData XmlElement.RemoveAttribute Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._1_1.cpp)]\n [!code-cs[Classic WebData XmlElement.RemoveAttribute Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._1_1.cs)]\n [!code-vb[Classic WebData XmlElement.RemoveAttribute Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._1_1.vb)]"
  syntax:
    content: public virtual void RemoveAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome dell&quot;attributo da rimuovere. Si tratta di un nome completo. Viene confrontato con il <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> proprietà del nodo corrispondente."
  overload: System.Xml.XmlElement.RemoveAttribute*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nodo è di sola lettura."
  platform:
  - net462
- uid: System.Xml.XmlElement.RemoveAttribute(System.String,System.String)
  id: RemoveAttribute(System.String,System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: RemoveAttribute(String,String)
  nameWithType: XmlElement.RemoveAttribute(String,String)
  fullName: System.Xml.XmlElement.RemoveAttribute(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Rimuove un attributo con il nome locale specificato e l&quot;URI dello spazio dei nomi. (Se l&quot;attributo rimosso ha un valore predefinito, viene sostituito immediatamente)."
  remarks: "Se l&quot;attributo rimosso è noto che un valore predefinito, viene immediatamente visualizzato un attributo contenente il valore predefinito e, se applicabile, il nome locale, prefisso e URI dello spazio dei nomi corrispondente."
  example:
  - "The following example removes an attribute from an element.  \n  \n [!code-cpp[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._12_1.cpp)]\n [!code-vb[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._12_1.vb)]\n [!code-cs[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._12_1.cs)]"
  syntax:
    content: public virtual void RemoveAttribute (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "Il nome locale dell&quot;attributo da rimuovere."
    - id: namespaceURI
      type: System.String
      description: "Lo spazio dei nomi URI dell&quot;attributo da rimuovere."
  overload: System.Xml.XmlElement.RemoveAttribute*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nodo è di sola lettura."
  platform:
  - net462
- uid: System.Xml.XmlElement.RemoveAttributeAt(System.Int32)
  id: RemoveAttributeAt(System.Int32)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: RemoveAttributeAt(Int32)
  nameWithType: XmlElement.RemoveAttributeAt(Int32)
  fullName: System.Xml.XmlElement.RemoveAttributeAt(Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Rimuove il nodo dell&quot;attributo con l&quot;indice specificato dall&quot;elemento. (Se l&quot;attributo rimosso ha un valore predefinito, viene sostituito immediatamente)."
  remarks: "Questo metodo è un&quot;estensione Microsoft per il provider di servizi Internet (DOM, Document Object Model)."
  example:
  - "The following example removes an attribute from an element.  \n  \n [!code-cpp[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._2_1.cpp)]\n [!code-vb[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._2_1.vb)]\n [!code-cs[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._2_1.cs)]"
  syntax:
    content: public virtual System.Xml.XmlNode RemoveAttributeAt (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "L&quot;indice del nodo da rimuovere. Il primo nodo ha indice 0."
    return:
      type: System.Xml.XmlNode
      description: "Il nodo dell&quot;attributo rimosso o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se è presente alcun nodo in corrispondenza dell&quot;indice specificato."
  overload: System.Xml.XmlElement.RemoveAttributeAt*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)
  id: RemoveAttributeNode(System.Xml.XmlAttribute)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: RemoveAttributeNode(XmlAttribute)
  nameWithType: XmlElement.RemoveAttributeNode(XmlAttribute)
  fullName: System.Xml.XmlElement.RemoveAttributeNode(XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Rimuove l&quot;oggetto specificato <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>."
  syntax:
    content: public virtual System.Xml.XmlAttribute RemoveAttributeNode (System.Xml.XmlAttribute oldAttr);
    parameters:
    - id: oldAttr
      type: System.Xml.XmlAttribute
      description: "Il <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> nodo da rimuovere. Se l&quot;attributo rimosso ha un valore predefinito, viene immediatamente sostituito."
    return:
      type: System.Xml.XmlAttribute
      description: "Rimosso <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se <code> oldAttr </code> non è un nodo di attributo di <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlElement.RemoveAttributeNode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Questo nodo è di sola lettura."
  platform:
  - net462
- uid: System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)
  id: RemoveAttributeNode(System.String,System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: RemoveAttributeNode(String,String)
  nameWithType: XmlElement.RemoveAttributeNode(String,String)
  fullName: System.Xml.XmlElement.RemoveAttributeNode(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Rimuove il <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> specificato dal nome locale e URI dello spazio dei nomi. (Se l&quot;attributo rimosso ha un valore predefinito, viene sostituito immediatamente)."
  remarks: ''
  example:
  - "The following example removes an attribute from an element.  \n  \n [!code-cpp[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._11_1.cpp)]\n [!code-cs[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._11_1.cs)]\n [!code-vb[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._11_1.vb)]"
  syntax:
    content: public virtual System.Xml.XmlAttribute RemoveAttributeNode (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "Il nome locale dell&quot;attributo."
    - id: namespaceURI
      type: System.String
      description: "Lo spazio dei nomi URI dell&quot;attributo."
    return:
      type: System.Xml.XmlAttribute
      description: "Rimosso <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref> non dispone di un nodo di attributo corrispondente."
  overload: System.Xml.XmlElement.RemoveAttributeNode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Questo nodo è di sola lettura."
  platform:
  - net462
- uid: System.Xml.XmlElement.SchemaInfo
  id: SchemaInfo
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: SchemaInfo
  nameWithType: XmlElement.SchemaInfo
  fullName: System.Xml.XmlElement.SchemaInfo
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Ottiene l&quot;infoset convalida dello schema che è stato assegnato a questo nodo in seguito alla convalida dello schema."
  remarks: "La proprietà SchemaInfo viene impostata quando il nodo viene convalidato."
  syntax:
    content: public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }
    return:
      type: System.Xml.Schema.IXmlSchemaInfo
      description: "Un <xref href=&quot;System.Xml.Schema.IXmlSchemaInfo&quot;> </xref> oggetto che contiene l&quot;infoset dopo la convalida dello schema di questo nodo."
  overload: System.Xml.XmlElement.SchemaInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.SetAttribute(System.String,System.String)
  id: SetAttribute(System.String,System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: SetAttribute(String,String)
  nameWithType: XmlElement.SetAttribute(String,String)
  fullName: System.Xml.XmlElement.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Imposta il valore dell&quot;attributo con il nome specificato."
  remarks: "Se un attributo con lo stesso nome è già presente nell&quot;elemento, il relativo valore viene modificato in quello di `value`. `value`è una stringa semplice. Che non venga analizzato come viene impostata. Qualsiasi tag, ad esempio sintassi venga riconosciuta come un riferimento all&quot;entità, viene trattato come testo letterale e caratteri di escape dall&quot;implementazione correttamente quando viene scritto. Per assegnare un valore di attributo che contiene i riferimenti alle entità, l&quot;utente deve creare un <xref:System.Xml.XmlAttribute>nodo oltre a qualsiasi <xref:System.Xml.XmlText>e <xref:System.Xml.XmlEntityReference>nodi, compilare il sottoalbero appropriato e utilizzare <xref:System.Xml.XmlElement.SetAttributeNode%2A>da assegnare come valore di un attributo.</xref:System.Xml.XmlElement.SetAttributeNode%2A> </xref:System.Xml.XmlEntityReference> </xref:System.Xml.XmlText> </xref:System.Xml.XmlAttribute>"
  syntax:
    content: public virtual void SetAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Il nome dell&quot;attributo per creare o modificare. Si tratta di un nome completo. Se il nome contiene i due punti, viene analizzato nei componenti del nome locale e di prefisso."
    - id: value
      type: System.String
      description: "Il valore da impostare per l&quot;attributo."
  overload: System.Xml.XmlElement.SetAttribute*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "Il nome specificato contiene un carattere non valido."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nodo è di sola lettura."
  platform:
  - net462
- uid: System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)
  id: SetAttribute(System.String,System.String,System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: SetAttribute(String,String,String)
  nameWithType: XmlElement.SetAttribute(String,String,String)
  fullName: System.Xml.XmlElement.SetAttribute(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Imposta il valore dell&quot;attributo con il nome locale specificato e l&quot;URI dello spazio dei nomi."
  syntax:
    content: public virtual string SetAttribute (string localName, string namespaceURI, string value);
    parameters:
    - id: localName
      type: System.String
      description: "Il nome locale dell&quot;attributo."
    - id: namespaceURI
      type: System.String
      description: "Lo spazio dei nomi URI dell&quot;attributo."
    - id: value
      type: System.String
      description: "Il valore da impostare per l&quot;attributo."
    return:
      type: System.String
      description: "Il valore dell&quot;attributo."
  overload: System.Xml.XmlElement.SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)
  id: SetAttributeNode(System.Xml.XmlAttribute)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: SetAttributeNode(XmlAttribute)
  nameWithType: XmlElement.SetAttributeNode(XmlAttribute)
  fullName: System.Xml.XmlElement.SetAttributeNode(XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>."
  remarks: "Se un attributo con lo stesso nome è già presente nell&quot;elemento, viene sostituito con quello nuovo."
  syntax:
    content: public virtual System.Xml.XmlAttribute SetAttributeNode (System.Xml.XmlAttribute newAttr);
    parameters:
    - id: newAttr
      type: System.Xml.XmlAttribute
      description: "Il <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> nodo da aggiungere alla raccolta di attributi per questo elemento."
    return:
      type: System.Xml.XmlAttribute
      description: "Se l&quot;attributo sostituisce un attributo esistente con lo stesso nome, il vecchio <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> sia restituito; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> viene restituito."
  overload: System.Xml.XmlElement.SetAttributeNode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> newAttr </code> è stato creato da un documento diverso da quello che ha creato questo nodo. Oppure il nodo è di sola lettura."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <code> newAttr </code> è già un attributo di un altro <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref> oggetto. È necessario clonare in modo esplicito <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> riutilizzarli in altri nodi <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref> oggetti."
  platform:
  - net462
- uid: System.Xml.XmlElement.SetAttributeNode(System.String,System.String)
  id: SetAttributeNode(System.String,System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: SetAttributeNode(String,String)
  nameWithType: XmlElement.SetAttributeNode(String,String)
  fullName: System.Xml.XmlElement.SetAttributeNode(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>."
  remarks: "Il `XmlAttribute` non dispone di alcun elemento figlio. Utilizzare <xref:System.Xml.XmlAttribute.Value%2A>per assegnare un valore di testo all&quot;attributo oppure utilizzare <xref:System.Xml.XmlNode.AppendChild%2A>(o un metodo simile) per aggiungere elementi figlio dell&quot;attributo.</xref:System.Xml.XmlNode.AppendChild%2A> </xref:System.Xml.XmlAttribute.Value%2A>"
  example:
  - "The following example adds an attribute to an element.  \n  \n [!code-cs[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._4_1.cs)]\n [!code-vb[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._4_1.vb)]\n [!code-cpp[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._4_1.cpp)]"
  syntax:
    content: public virtual System.Xml.XmlAttribute SetAttributeNode (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "Il nome locale dell&quot;attributo."
    - id: namespaceURI
      type: System.String
      description: "Lo spazio dei nomi URI dell&quot;attributo."
    return:
      type: System.Xml.XmlAttribute
      description: "The <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;></xref> to add."
  overload: System.Xml.XmlElement.SetAttributeNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlElement.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlElement.WriteContentTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Salva tutti gli elementi figlio del nodo specificata <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "Questo metodo è un&quot;estensione Microsoft per il provider di servizi Internet (DOM, Document Object Model)."
  example:
  - "The following example displays the contents of the element to the console.  \n  \n [!code-cpp[Classic WebData XmlElement.WriteContentTo Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._8_1.cpp)]\n [!code-vb[Classic WebData XmlElement.WriteContentTo Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._8_1.vb)]\n [!code-cs[Classic WebData XmlElement.WriteContentTo Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._8_1.cs)]"
  syntax:
    content: public override void WriteContentTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "Il <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> a cui si desidera salvare."
  overload: System.Xml.XmlElement.WriteContentTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: WriteTo(XmlWriter)
  nameWithType: XmlElement.WriteTo(XmlWriter)
  fullName: System.Xml.XmlElement.WriteTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Salva il nodo corrente specificata <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "Questo metodo è un&quot;estensione Microsoft per il provider di servizi Internet (DOM, Document Object Model)."
  example:
  - "The following example adds an attribute to an element and then displays the modified element.  \n  \n [!code-cs[Classic WebData XmlElement.WriteTo Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._10_1.cs)]\n [!code-cpp[Classic WebData XmlElement.WriteTo Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._10_1.cpp)]\n [!code-vb[Classic WebData XmlElement.WriteTo Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._10_1.vb)]"
  syntax:
    content: public override void WriteTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "Il <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> a cui si desidera salvare."
  overload: System.Xml.XmlElement.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XmlLinkedNode
  isExternal: false
  name: System.Xml.XmlLinkedNode
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  parent: System.Xml.XmlElement
  isExternal: false
  name: XmlElement(String,String,String,XmlDocument)
  nameWithType: XmlElement.XmlElement(String,String,String,XmlDocument)
  fullName: System.Xml.XmlElement.XmlElement(String,String,String,XmlDocument)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.XmlElement.Attributes
  parent: System.Xml.XmlElement
  isExternal: false
  name: Attributes
  nameWithType: XmlElement.Attributes
  fullName: System.Xml.XmlElement.Attributes
- uid: System.Xml.XmlAttributeCollection
  parent: System.Xml
  isExternal: false
  name: XmlAttributeCollection
  nameWithType: XmlAttributeCollection
  fullName: System.Xml.XmlAttributeCollection
- uid: System.Xml.XmlElement.CloneNode(System.Boolean)
  parent: System.Xml.XmlElement
  isExternal: false
  name: CloneNode(Boolean)
  nameWithType: XmlElement.CloneNode(Boolean)
  fullName: System.Xml.XmlElement.CloneNode(Boolean)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlElement.GetAttribute(System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: GetAttribute(String)
  nameWithType: XmlElement.GetAttribute(String)
  fullName: System.Xml.XmlElement.GetAttribute(String)
- uid: System.Xml.XmlElement.GetAttribute(System.String,System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: GetAttribute(String,String)
  nameWithType: XmlElement.GetAttribute(String,String)
  fullName: System.Xml.XmlElement.GetAttribute(String,String)
- uid: System.Xml.XmlElement.GetAttributeNode(System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: GetAttributeNode(String)
  nameWithType: XmlElement.GetAttributeNode(String)
  fullName: System.Xml.XmlElement.GetAttributeNode(String)
- uid: System.Xml.XmlAttribute
  parent: System.Xml
  isExternal: false
  name: XmlAttribute
  nameWithType: XmlAttribute
  fullName: System.Xml.XmlAttribute
- uid: System.Xml.XmlElement.GetAttributeNode(System.String,System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: GetAttributeNode(String,String)
  nameWithType: XmlElement.GetAttributeNode(String,String)
  fullName: System.Xml.XmlElement.GetAttributeNode(String,String)
- uid: System.Xml.XmlElement.GetElementsByTagName(System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: GetElementsByTagName(String)
  nameWithType: XmlElement.GetElementsByTagName(String)
  fullName: System.Xml.XmlElement.GetElementsByTagName(String)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: GetElementsByTagName(String,String)
  nameWithType: XmlElement.GetElementsByTagName(String,String)
  fullName: System.Xml.XmlElement.GetElementsByTagName(String,String)
- uid: System.Xml.XmlElement.HasAttribute(System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: HasAttribute(String)
  nameWithType: XmlElement.HasAttribute(String)
  fullName: System.Xml.XmlElement.HasAttribute(String)
- uid: System.Xml.XmlElement.HasAttribute(System.String,System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: HasAttribute(String,String)
  nameWithType: XmlElement.HasAttribute(String,String)
  fullName: System.Xml.XmlElement.HasAttribute(String,String)
- uid: System.Xml.XmlElement.HasAttributes
  parent: System.Xml.XmlElement
  isExternal: false
  name: HasAttributes
  nameWithType: XmlElement.HasAttributes
  fullName: System.Xml.XmlElement.HasAttributes
- uid: System.Xml.XmlElement.InnerText
  parent: System.Xml.XmlElement
  isExternal: false
  name: InnerText
  nameWithType: XmlElement.InnerText
  fullName: System.Xml.XmlElement.InnerText
- uid: System.Xml.XmlElement.InnerXml
  parent: System.Xml.XmlElement
  isExternal: false
  name: InnerXml
  nameWithType: XmlElement.InnerXml
  fullName: System.Xml.XmlElement.InnerXml
- uid: System.Xml.XmlElement.IsEmpty
  parent: System.Xml.XmlElement
  isExternal: false
  name: IsEmpty
  nameWithType: XmlElement.IsEmpty
  fullName: System.Xml.XmlElement.IsEmpty
- uid: System.Xml.XmlElement.LocalName
  parent: System.Xml.XmlElement
  isExternal: false
  name: LocalName
  nameWithType: XmlElement.LocalName
  fullName: System.Xml.XmlElement.LocalName
- uid: System.Xml.XmlElement.Name
  parent: System.Xml.XmlElement
  isExternal: false
  name: Name
  nameWithType: XmlElement.Name
  fullName: System.Xml.XmlElement.Name
- uid: System.Xml.XmlElement.NamespaceURI
  parent: System.Xml.XmlElement
  isExternal: false
  name: NamespaceURI
  nameWithType: XmlElement.NamespaceURI
  fullName: System.Xml.XmlElement.NamespaceURI
- uid: System.Xml.XmlElement.NextSibling
  parent: System.Xml.XmlElement
  isExternal: false
  name: NextSibling
  nameWithType: XmlElement.NextSibling
  fullName: System.Xml.XmlElement.NextSibling
- uid: System.Xml.XmlElement.NodeType
  parent: System.Xml.XmlElement
  isExternal: false
  name: NodeType
  nameWithType: XmlElement.NodeType
  fullName: System.Xml.XmlElement.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: true
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlElement.OwnerDocument
  parent: System.Xml.XmlElement
  isExternal: false
  name: OwnerDocument
  nameWithType: XmlElement.OwnerDocument
  fullName: System.Xml.XmlElement.OwnerDocument
- uid: System.Xml.XmlElement.ParentNode
  parent: System.Xml.XmlElement
  isExternal: false
  name: ParentNode
  nameWithType: XmlElement.ParentNode
  fullName: System.Xml.XmlElement.ParentNode
- uid: System.Xml.XmlElement.Prefix
  parent: System.Xml.XmlElement
  isExternal: false
  name: Prefix
  nameWithType: XmlElement.Prefix
  fullName: System.Xml.XmlElement.Prefix
- uid: System.Xml.XmlElement.RemoveAll
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAll()
  nameWithType: XmlElement.RemoveAll()
  fullName: System.Xml.XmlElement.RemoveAll()
- uid: System.Xml.XmlElement.RemoveAllAttributes
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAllAttributes()
  nameWithType: XmlElement.RemoveAllAttributes()
  fullName: System.Xml.XmlElement.RemoveAllAttributes()
- uid: System.Xml.XmlElement.RemoveAttribute(System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAttribute(String)
  nameWithType: XmlElement.RemoveAttribute(String)
  fullName: System.Xml.XmlElement.RemoveAttribute(String)
- uid: System.Xml.XmlElement.RemoveAttribute(System.String,System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAttribute(String,String)
  nameWithType: XmlElement.RemoveAttribute(String,String)
  fullName: System.Xml.XmlElement.RemoveAttribute(String,String)
- uid: System.Xml.XmlElement.RemoveAttributeAt(System.Int32)
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAttributeAt(Int32)
  nameWithType: XmlElement.RemoveAttributeAt(Int32)
  fullName: System.Xml.XmlElement.RemoveAttributeAt(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAttributeNode(XmlAttribute)
  nameWithType: XmlElement.RemoveAttributeNode(XmlAttribute)
  fullName: System.Xml.XmlElement.RemoveAttributeNode(XmlAttribute)
- uid: System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAttributeNode(String,String)
  nameWithType: XmlElement.RemoveAttributeNode(String,String)
  fullName: System.Xml.XmlElement.RemoveAttributeNode(String,String)
- uid: System.Xml.XmlElement.SchemaInfo
  parent: System.Xml.XmlElement
  isExternal: false
  name: SchemaInfo
  nameWithType: XmlElement.SchemaInfo
  fullName: System.Xml.XmlElement.SchemaInfo
- uid: System.Xml.Schema.IXmlSchemaInfo
  parent: System.Xml.Schema
  isExternal: false
  name: IXmlSchemaInfo
  nameWithType: IXmlSchemaInfo
  fullName: System.Xml.Schema.IXmlSchemaInfo
- uid: System.Xml.XmlElement.SetAttribute(System.String,System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: SetAttribute(String,String)
  nameWithType: XmlElement.SetAttribute(String,String)
  fullName: System.Xml.XmlElement.SetAttribute(String,String)
- uid: System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: SetAttribute(String,String,String)
  nameWithType: XmlElement.SetAttribute(String,String,String)
  fullName: System.Xml.XmlElement.SetAttribute(String,String,String)
- uid: System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)
  parent: System.Xml.XmlElement
  isExternal: false
  name: SetAttributeNode(XmlAttribute)
  nameWithType: XmlElement.SetAttributeNode(XmlAttribute)
  fullName: System.Xml.XmlElement.SetAttributeNode(XmlAttribute)
- uid: System.Xml.XmlElement.SetAttributeNode(System.String,System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: SetAttributeNode(String,String)
  nameWithType: XmlElement.SetAttributeNode(String,String)
  fullName: System.Xml.XmlElement.SetAttributeNode(String,String)
- uid: System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlElement
  isExternal: false
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlElement.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlElement.WriteContentTo(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlElement
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XmlElement.WriteTo(XmlWriter)
  fullName: System.Xml.XmlElement.WriteTo(XmlWriter)
- uid: System.Xml.XmlElement.#ctor*
  parent: System.Xml.XmlElement
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement.XmlElement
- uid: System.Xml.XmlElement.Attributes*
  parent: System.Xml.XmlElement
  isExternal: false
  name: Attributes
  nameWithType: XmlElement.Attributes
- uid: System.Xml.XmlElement.CloneNode*
  parent: System.Xml.XmlElement
  isExternal: false
  name: CloneNode
  nameWithType: XmlElement.CloneNode
- uid: System.Xml.XmlElement.GetAttribute*
  parent: System.Xml.XmlElement
  isExternal: false
  name: GetAttribute
  nameWithType: XmlElement.GetAttribute
- uid: System.Xml.XmlElement.GetAttributeNode*
  parent: System.Xml.XmlElement
  isExternal: false
  name: GetAttributeNode
  nameWithType: XmlElement.GetAttributeNode
- uid: System.Xml.XmlElement.GetElementsByTagName*
  parent: System.Xml.XmlElement
  isExternal: false
  name: GetElementsByTagName
  nameWithType: XmlElement.GetElementsByTagName
- uid: System.Xml.XmlElement.HasAttribute*
  parent: System.Xml.XmlElement
  isExternal: false
  name: HasAttribute
  nameWithType: XmlElement.HasAttribute
- uid: System.Xml.XmlElement.HasAttributes*
  parent: System.Xml.XmlElement
  isExternal: false
  name: HasAttributes
  nameWithType: XmlElement.HasAttributes
- uid: System.Xml.XmlElement.InnerText*
  parent: System.Xml.XmlElement
  isExternal: false
  name: InnerText
  nameWithType: XmlElement.InnerText
- uid: System.Xml.XmlElement.InnerXml*
  parent: System.Xml.XmlElement
  isExternal: false
  name: InnerXml
  nameWithType: XmlElement.InnerXml
- uid: System.Xml.XmlElement.IsEmpty*
  parent: System.Xml.XmlElement
  isExternal: false
  name: IsEmpty
  nameWithType: XmlElement.IsEmpty
- uid: System.Xml.XmlElement.LocalName*
  parent: System.Xml.XmlElement
  isExternal: false
  name: LocalName
  nameWithType: XmlElement.LocalName
- uid: System.Xml.XmlElement.Name*
  parent: System.Xml.XmlElement
  isExternal: false
  name: Name
  nameWithType: XmlElement.Name
- uid: System.Xml.XmlElement.NamespaceURI*
  parent: System.Xml.XmlElement
  isExternal: false
  name: NamespaceURI
  nameWithType: XmlElement.NamespaceURI
- uid: System.Xml.XmlElement.NextSibling*
  parent: System.Xml.XmlElement
  isExternal: false
  name: NextSibling
  nameWithType: XmlElement.NextSibling
- uid: System.Xml.XmlElement.NodeType*
  parent: System.Xml.XmlElement
  isExternal: false
  name: NodeType
  nameWithType: XmlElement.NodeType
- uid: System.Xml.XmlElement.OwnerDocument*
  parent: System.Xml.XmlElement
  isExternal: false
  name: OwnerDocument
  nameWithType: XmlElement.OwnerDocument
- uid: System.Xml.XmlElement.ParentNode*
  parent: System.Xml.XmlElement
  isExternal: false
  name: ParentNode
  nameWithType: XmlElement.ParentNode
- uid: System.Xml.XmlElement.Prefix*
  parent: System.Xml.XmlElement
  isExternal: false
  name: Prefix
  nameWithType: XmlElement.Prefix
- uid: System.Xml.XmlElement.RemoveAll*
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAll
  nameWithType: XmlElement.RemoveAll
- uid: System.Xml.XmlElement.RemoveAllAttributes*
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAllAttributes
  nameWithType: XmlElement.RemoveAllAttributes
- uid: System.Xml.XmlElement.RemoveAttribute*
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAttribute
  nameWithType: XmlElement.RemoveAttribute
- uid: System.Xml.XmlElement.RemoveAttributeAt*
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAttributeAt
  nameWithType: XmlElement.RemoveAttributeAt
- uid: System.Xml.XmlElement.RemoveAttributeNode*
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAttributeNode
  nameWithType: XmlElement.RemoveAttributeNode
- uid: System.Xml.XmlElement.SchemaInfo*
  parent: System.Xml.XmlElement
  isExternal: false
  name: SchemaInfo
  nameWithType: XmlElement.SchemaInfo
- uid: System.Xml.XmlElement.SetAttribute*
  parent: System.Xml.XmlElement
  isExternal: false
  name: SetAttribute
  nameWithType: XmlElement.SetAttribute
- uid: System.Xml.XmlElement.SetAttributeNode*
  parent: System.Xml.XmlElement
  isExternal: false
  name: SetAttributeNode
  nameWithType: XmlElement.SetAttributeNode
- uid: System.Xml.XmlElement.WriteContentTo*
  parent: System.Xml.XmlElement
  isExternal: false
  name: WriteContentTo
  nameWithType: XmlElement.WriteContentTo
- uid: System.Xml.XmlElement.WriteTo*
  parent: System.Xml.XmlElement
  isExternal: false
  name: WriteTo
  nameWithType: XmlElement.WriteTo
