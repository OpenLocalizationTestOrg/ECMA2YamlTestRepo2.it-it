### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.RegistryPermission
  id: RegistryPermission
  children:
  - System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)
  - System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  - System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  - System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  - System.Security.Permissions.RegistryPermission.Copy
  - System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)
  - System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.RegistryPermission.IsUnrestricted
  - System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  - System.Security.Permissions.RegistryPermission.ToXml
  - System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: RegistryPermission
  nameWithType: RegistryPermission
  fullName: System.Security.Permissions.RegistryPermission
  type: Class
  summary: "Controlla la possibilità di accedere alle variabili del Registro di sistema. Questa classe non può essere ereditata."
  remarks: "RegistryPermission descrive le operazioni protette alle variabili del Registro di sistema. Le variabili del Registro di sistema non devono essere archiviate in posizioni di memoria in modo che il codice senza RegistryPermission può accedervi. Se l&quot;oggetto del Registro di sistema viene passato a un chiamante non attendibile può essere utilizzato.       I tipi di accesso consentiti del Registro di sistema sono definiti da <xref:System.Security.Permissions.RegistryPermissionAccess>.</xref:System.Security.Permissions.RegistryPermissionAccess> Se si desidera usare più di un tipo di accesso, possono essere combinati utilizzando l&quot;operazione OR bit per bit, come illustrato nell&quot;esempio di codice che segue.       Autorizzazione del Registro di sistema viene definito in termini di percorsi assoluti canonici; controlli devono essere sempre eseguiti con canonici. Accesso alla chiave implica l&quot;accesso a tutti i valori e tutte le variabili in essa contenute.      > [!NOTE] > Nelle versioni di .NET Framework prima di [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], è possibile utilizzare il <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName>per impedire l&quot;accesso accidentale alle risorse di sistema da codice attendibile.</xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> <xref:System.Security.CodeAccessPermission.Deny%2A>è ora obsoleta, e l&quot;accesso alle risorse è determinato esclusivamente dall&quot;autorizzazione concessa per un assembly.</xref:System.Security.CodeAccessPermission.Deny%2A> Per limitare l&quot;accesso ai file, è necessario eseguire codice parzialmente attendibile in un ambiente sandbox e assegnarle le autorizzazioni solo alle risorse che il codice viene consentito l&quot;accesso. Per informazioni sull&quot;esecuzione di un&quot;applicazione in un ambiente sandbox, vedere [procedura: eseguire codice parzialmente attendibile in un ambiente Sandbox](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RegistryPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: RegistryPermission(PermissionState)
  nameWithType: RegistryPermission.RegistryPermission(PermissionState)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Permissions.RegistryPermission&quot;> </xref> classe con autorizzazione con restrizioni o senza restrizioni, come specificato."
  remarks: "Consente di creare un con restrizioni (`None`) o `Unrestricted` accesso alle variabili del Registro di sistema."
  example:
  - "The following code example shows the use of the RegistryPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#7](~/add/codesnippet/visualbasic/85dea953-f2a8-49bc-b863-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#7](~/add/codesnippet/csharp/85dea953-f2a8-49bc-b863-_1.cs)]"
  syntax:
    content: public RegistryPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Uno del <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> valori."
  overload: System.Security.Permissions.RegistryPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> state </code> parametro non è un valore valido di <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)
  id: '#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)'
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: RegistryPermission(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.RegistryPermission(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(RegistryPermissionAccess,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Permissions.RegistryPermission&quot;> </xref> classe con l&quot;accesso specificato alle variabili del Registro di sistema."
  remarks: "Questo costruttore consente solo uno del <xref:System.Security.Permissions.RegistryPermissionAccess>valori da specificare.</xref:System.Security.Permissions.RegistryPermissionAccess> Questo accesso si applica a tutte le variabili del Registro di sistema elencati. Utilizzare <xref:System.Security.Permissions.RegistryPermission.AddPathList%2A>per definire le autorizzazioni più complicate.</xref:System.Security.Permissions.RegistryPermission.AddPathList%2A>"
  example:
  - "The following code example shows the use of the RegistryPermission constructor.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#10](~/add/codesnippet/visualbasic/a1e0cfb2-93bc-4e55-9235-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#10](~/add/codesnippet/csharp/a1e0cfb2-93bc-4e55-9235-_1.cs)]"
  syntax:
    content: public RegistryPermission (System.Security.Permissions.RegistryPermissionAccess access, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "Uno del <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref> valori."
    - id: pathList
      type: System.String
      description: "Un elenco di variabili del Registro di sistema (delimitato da punto e virgola) a cui viene concesso l&quot;accesso."
  overload: System.Security.Permissions.RegistryPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> access </code> parametro non è un valore valido di <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>.       - o - <code> pathList </code> parametro non è una stringa valida."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  id: '#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)'
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  nameWithType: RegistryPermission.RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Permissions.RegistryPermission&quot;> </xref> classe con l&quot;accesso specificato alle variabili del Registro di sistema e i diritti di accesso specificati alle informazioni di controllo del Registro di sistema."
  remarks: "Questo costruttore consente solo uno del <xref:System.Security.Permissions.RegistryPermissionAccess>valori da specificare.</xref:System.Security.Permissions.RegistryPermissionAccess> Questo accesso si applica a tutte le variabili del Registro di sistema elencati. Utilizzare <xref:System.Security.Permissions.RegistryPermission.AddPathList%2A>per definire le autorizzazioni più complicate.</xref:System.Security.Permissions.RegistryPermission.AddPathList%2A>       Il `control` parametro specifica se l&quot;accesso di controllo elenco (ACL) per le chiavi del Registro di sistema specificate da `pathList` può essere modificato, visualizzato o non è accessibile.      > [!IMPORTANT] > Un elenco di controllo di accesso (ACL) descrive i singoli utenti o gruppi che dispongono o non si dispone, diritti per azioni specifiche alle chiavi del Registro di sistema specificata.  La possibilità di modificare o visualizzare un ACL è un&quot;autorizzazione importante e deve essere concessa con attenzione."
  syntax:
    content: public RegistryPermission (System.Security.Permissions.RegistryPermissionAccess access, System.Security.AccessControl.AccessControlActions control, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "Uno del <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref> valori."
    - id: control
      type: System.Security.AccessControl.AccessControlActions
      description: "Combinazione bit per bit di <xref href=&quot;System.Security.AccessControl.AccessControlActions&quot;> </xref> valori."
    - id: pathList
      type: System.String
      description: "Un elenco di variabili del Registro di sistema (delimitato da punto e virgola) a cui viene concesso l&quot;accesso."
  overload: System.Security.Permissions.RegistryPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> access </code> parametro non è un valore valido di <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>.       - o - <code> pathList </code> parametro non è una stringa valida."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  id: AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: AddPathList(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.AddPathList(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.AddPathList(RegistryPermissionAccess,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Aggiunge l&quot;accesso alle variabili del Registro di sistema specificata allo stato esistente dell&quot;autorizzazione."
  remarks: "Utilizzare questo metodo per modificare l&quot;accesso alle variabili del Registro di sistema aggiungendo allo stato dell&quot;oggetto autorizzazioni corrente."
  example:
  - "The following code example shows the use of the AddPathList method.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/visualbasic/4576855b-6757-4ec9-971b-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/csharp/4576855b-6757-4ec9-971b-_1.cs)]"
  syntax:
    content: public void AddPathList (System.Security.Permissions.RegistryPermissionAccess access, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "Uno del <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref> valori."
    - id: pathList
      type: System.String
      description: "Un elenco delle variabili del Registro di sistema (delimitato da punto e virgola)."
  overload: System.Security.Permissions.RegistryPermission.AddPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> access </code> parametro non è un valore valido di <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>.       - o - <code> pathList </code> parametro non è una stringa valida."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  id: AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  nameWithType: RegistryPermission.AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.RegistryPermission.AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Aggiunge l&quot;accesso alle variabili del Registro di sistema specificata allo stato esistente dell&quot;autorizzazione, che specifica l&quot;accesso all&quot;autorizzazione del Registro di sistema e le azioni di controllo di accesso."
  remarks: "Utilizzare questo metodo per modificare l&quot;accesso alle variabili del Registro di sistema aggiungendo il set di percorsi relativi allo stato dell&quot;oggetto autorizzazioni corrente. Questo overload consente di specificare l&quot;azione di controllo di accesso nonché l&quot;autorizzazione di accesso del Registro di sistema.       Il `control` parametro specifica se l&quot;accesso di controllo elenco (ACL) per le chiavi del Registro di sistema specificate da `pathList` può essere modificato, visualizzato o non è accessibile.      > [!IMPORTANT] > Un elenco di controllo di accesso (ACL) descrive i singoli utenti o gruppi che dispongono o non si dispone, diritti per azioni specifiche alle chiavi del Registro di sistema specificata.  La possibilità di modificare o visualizzare un ACL è un&quot;autorizzazione importante e deve essere concessa con attenzione."
  syntax:
    content: public void AddPathList (System.Security.Permissions.RegistryPermissionAccess access, System.Security.AccessControl.AccessControlActions control, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "Uno del <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref> valori."
    - id: control
      type: System.Security.AccessControl.AccessControlActions
      description: "Uno del <xref href=&quot;System.Security.AccessControl.AccessControlActions&quot;> </xref> valori."
    - id: pathList
      type: System.String
      description: "Un elenco delle variabili del Registro di sistema (separati da punti e virgola)."
  overload: System.Security.Permissions.RegistryPermission.AddPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> access </code> parametro non è un valore valido di <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>.       - o - <code> pathList </code> parametro non è una stringa valida."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.Copy
  id: Copy
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: RegistryPermission.Copy()
  fullName: System.Security.Permissions.RegistryPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea e restituisce una copia identica dell&quot;autorizzazione corrente."
  remarks: "Una copia di un&quot;autorizzazione rappresenta lo stesso accesso alle risorse dell&quot;autorizzazione originale."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Una copia dell&quot;autorizzazione corrente."
  overload: System.Security.Permissions.RegistryPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: RegistryPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.RegistryPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ricostruisce un&quot;autorizzazione con uno stato specificato da una codifica XML."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "La codifica XML da usare per ricostruire l&quot;autorizzazione."
  overload: System.Security.Permissions.RegistryPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> esd </code> parametro non è un elemento di autorizzazione valido.       - o - <code> esd </code> il numero di versione del parametro non è valido."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)
  id: GetPathList(System.Security.Permissions.RegistryPermissionAccess)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: GetPathList(RegistryPermissionAccess)
  nameWithType: RegistryPermission.GetPathList(RegistryPermissionAccess)
  fullName: System.Security.Permissions.RegistryPermission.GetPathList(RegistryPermissionAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ottiene i percorsi per tutte le variabili del Registro di sistema con l&quot;oggetto specificato <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>."
  remarks: "Utilizzare questo metodo per ottenere lo stato dell&quot;autorizzazione corrente. È necessario chiamare questo metodo separatamente per ogni tipo di accesso.      > [!NOTE] > Il `access` è limitato ai valori di parametro <xref:System.Security.Permissions.RegistryPermissionAccess>, che rappresentano singoli tipi di accesso a variabili del Registro di sistema.</xref:System.Security.Permissions.RegistryPermissionAccess> Tali valori sono <xref:System.Security.Permissions.RegistryPermissionAccess>, <xref:System.Security.Permissions.RegistryPermissionAccess>e <xref:System.Security.Permissions.RegistryPermissionAccess>.</xref:System.Security.Permissions.RegistryPermissionAccess> </xref:System.Security.Permissions.RegistryPermissionAccess> </xref:System.Security.Permissions.RegistryPermissionAccess> I valori accettati da `access` non includono <xref:System.Security.Permissions.RegistryPermissionAccess>e <xref:System.Security.Permissions.RegistryPermissionAccess>, che non rappresentano singoli tipi di accesso a variabili del Registro di sistema.</xref:System.Security.Permissions.RegistryPermissionAccess> </xref:System.Security.Permissions.RegistryPermissionAccess>"
  example:
  - "The following code example shows the use of the GetPathList method.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/visualbasic/2854e98a-b1b4-43c0-ac49-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/csharp/2854e98a-b1b4-43c0-ac49-_1.cs)]"
  syntax:
    content: public string GetPathList (System.Security.Permissions.RegistryPermissionAccess access);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "Uno del <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref> valori che rappresenta un singolo tipo di accesso a variabili del Registro di sistema."
    return:
      type: System.String
      description: "Un elenco delle variabili del Registro di sistema (delimitato da punto e virgola) con l&quot;oggetto specificato <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>."
  overload: System.Security.Permissions.RegistryPermission.GetPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>access</code>non è un valore valido di <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>.       - oppure - <code>access</code> è <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>, che rappresenta più di un tipo di accesso a variabili del Registro di sistema, o <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>, che non rappresenta qualsiasi tipo di accesso a variabili del Registro di sistema."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: RegistryPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea e restituisce un&quot;autorizzazione che rappresenta l&quot;intersezione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata."
  remarks: "L&quot;intersezione delle due autorizzazioni è un&quot;autorizzazione che descrive il set di operazioni che hanno in comune. Solo una richiesta che supera entrambe le autorizzazioni originali passerà l&quot;intersezione."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da intersecare con l&quot;autorizzazione corrente. Deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Security.IPermission
      description: "Nuova autorizzazione che rappresenta l&quot;intersezione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata. La nuova autorizzazione è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se l&quot;intersezione è vuota."
  overload: System.Security.Permissions.RegistryPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> target </code> parametro non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e non è dello stesso tipo dell&quot;autorizzazione corrente."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: RegistryPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Determina se l&quot;autorizzazione corrente è un subset dell&quot;autorizzazione specificata."
  remarks: "Se l&quot;autorizzazione corrente specifica un set di operazioni che è interamente contenuto l&quot;autorizzazione specificata, l&quot;autorizzazione corrente è un subset dell&quot;autorizzazione specificata. Ad esempio, un&quot;autorizzazione che rappresenta l&quot;accesso a C:\\example.txt è un subset di un&quot;autorizzazione che rappresenta l&quot;accesso in c:\\\\. Se questo metodo restituisce `true`, l&quot;autorizzazione corrente non rappresenta un accesso alla risorsa protetta rispetto a quello dell&quot;autorizzazione specificata."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da testare per la relazione del subset. Questa autorizzazione deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;autorizzazione corrente è un subset dell&quot;autorizzazione specificata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.RegistryPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> target </code> parametro non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e non è dello stesso tipo dell&quot;autorizzazione corrente."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: RegistryPermission.IsUnrestricted()
  fullName: System.Security.Permissions.RegistryPermission.IsUnrestricted()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Restituisce un valore che indica se l&quot;autorizzazione corrente è senza restrizioni."
  remarks: "Un&quot;autorizzazione senza restrizioni rappresenta l&quot;accesso a tutte le risorse protette dall&quot;autorizzazione."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;autorizzazione corrente è senza restrizioni. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.RegistryPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  id: SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: SetPathList(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.SetPathList(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.SetPathList(RegistryPermissionAccess,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Imposta i nomi delle variabili di nuovo accesso per il Registro di sistema specificata allo stato esistente dell&quot;autorizzazione."
  remarks: "Lo stato precedente dell&quot;autorizzazione corrente viene sovrascritto."
  example:
  - "The following code example shows the use of the SetPathList method.  \n  \n [!code-vb[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/visualbasic/8dc9769e-4e08-4ebe-9109-_1.vb)]\n [!code-cs[System.Security.Permissions.RegistryPermission#9](~/add/codesnippet/csharp/8dc9769e-4e08-4ebe-9109-_1.cs)]"
  syntax:
    content: public void SetPathList (System.Security.Permissions.RegistryPermissionAccess access, string pathList);
    parameters:
    - id: access
      type: System.Security.Permissions.RegistryPermissionAccess
      description: "Uno del <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref> valori."
    - id: pathList
      type: System.String
      description: "Un elenco delle variabili del Registro di sistema (delimitato da punto e virgola)."
  overload: System.Security.Permissions.RegistryPermission.SetPathList*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> access </code> parametro non è un valore valido di <xref href=&quot;System.Security.Permissions.RegistryPermissionAccess&quot;> </xref>.       - o - <code> pathList </code> parametro non è una stringa valida."
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: RegistryPermission.ToXml()
  fullName: System.Security.Permissions.RegistryPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea una codifica XML dell&quot;autorizzazione e del relativo stato corrente."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Codifica XML dell&quot;autorizzazione, che include le informazioni sullo stato."
  overload: System.Security.Permissions.RegistryPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: RegistryPermission.Union(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea un&quot;autorizzazione che rappresenta l&quot;unione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata."
  remarks: "Il risultato di una chiamata a un&quot;unione è un&quot;autorizzazione che rappresenta tutte le operazioni indicate sia dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata. Qualsiasi richiesta che passa l&quot;autorizzazione passa l&quot;unione."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission other);
    parameters:
    - id: other
      type: System.Security.IPermission
      description: "Autorizzazione da combinare con l&quot;autorizzazione corrente. Deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Security.IPermission
      description: "Nuova autorizzazione che rappresenta l&quot;unione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata."
  overload: System.Security.Permissions.RegistryPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> other </code> parametro non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e non è dello stesso tipo dell&quot;autorizzazione corrente."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: RegistryPermission(PermissionState)
  nameWithType: RegistryPermission.RegistryPermission(PermissionState)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: RegistryPermission(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.RegistryPermission(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(RegistryPermissionAccess,String)
- uid: System.Security.Permissions.RegistryPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: RegistryPermissionAccess
  nameWithType: RegistryPermissionAccess
  fullName: System.Security.Permissions.RegistryPermissionAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.RegistryPermission.#ctor(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  nameWithType: RegistryPermission.RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.RegistryPermission.RegistryPermission(RegistryPermissionAccess,AccessControlActions,String)
- uid: System.Security.AccessControl.AccessControlActions
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlActions
  nameWithType: AccessControlActions
  fullName: System.Security.AccessControl.AccessControlActions
- uid: System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: AddPathList(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.AddPathList(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.AddPathList(RegistryPermissionAccess,String)
- uid: System.Security.Permissions.RegistryPermission.AddPathList(System.Security.Permissions.RegistryPermissionAccess,System.Security.AccessControl.AccessControlActions,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  nameWithType: RegistryPermission.AddPathList(RegistryPermissionAccess,AccessControlActions,String)
  fullName: System.Security.Permissions.RegistryPermission.AddPathList(RegistryPermissionAccess,AccessControlActions,String)
- uid: System.Security.Permissions.RegistryPermission.Copy
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Copy()
  nameWithType: RegistryPermission.Copy()
  fullName: System.Security.Permissions.RegistryPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.RegistryPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: RegistryPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.RegistryPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.RegistryPermission.GetPathList(System.Security.Permissions.RegistryPermissionAccess)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: GetPathList(RegistryPermissionAccess)
  nameWithType: RegistryPermission.GetPathList(RegistryPermissionAccess)
  fullName: System.Security.Permissions.RegistryPermission.GetPathList(RegistryPermissionAccess)
- uid: System.Security.Permissions.RegistryPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: RegistryPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.Intersect(IPermission)
- uid: System.Security.Permissions.RegistryPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: RegistryPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.RegistryPermission.IsUnrestricted
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: RegistryPermission.IsUnrestricted()
  fullName: System.Security.Permissions.RegistryPermission.IsUnrestricted()
- uid: System.Security.Permissions.RegistryPermission.SetPathList(System.Security.Permissions.RegistryPermissionAccess,System.String)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: SetPathList(RegistryPermissionAccess,String)
  nameWithType: RegistryPermission.SetPathList(RegistryPermissionAccess,String)
  fullName: System.Security.Permissions.RegistryPermission.SetPathList(RegistryPermissionAccess,String)
- uid: System.Security.Permissions.RegistryPermission.ToXml
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: ToXml()
  nameWithType: RegistryPermission.ToXml()
  fullName: System.Security.Permissions.RegistryPermission.ToXml()
- uid: System.Security.Permissions.RegistryPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: RegistryPermission.Union(IPermission)
  fullName: System.Security.Permissions.RegistryPermission.Union(IPermission)
- uid: System.Security.Permissions.RegistryPermission.#ctor*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: RegistryPermission
  nameWithType: RegistryPermission.RegistryPermission
- uid: System.Security.Permissions.RegistryPermission.AddPathList*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: AddPathList
  nameWithType: RegistryPermission.AddPathList
- uid: System.Security.Permissions.RegistryPermission.Copy*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Copy
  nameWithType: RegistryPermission.Copy
- uid: System.Security.Permissions.RegistryPermission.FromXml*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: FromXml
  nameWithType: RegistryPermission.FromXml
- uid: System.Security.Permissions.RegistryPermission.GetPathList*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: GetPathList
  nameWithType: RegistryPermission.GetPathList
- uid: System.Security.Permissions.RegistryPermission.Intersect*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Intersect
  nameWithType: RegistryPermission.Intersect
- uid: System.Security.Permissions.RegistryPermission.IsSubsetOf*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: RegistryPermission.IsSubsetOf
- uid: System.Security.Permissions.RegistryPermission.IsUnrestricted*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: RegistryPermission.IsUnrestricted
- uid: System.Security.Permissions.RegistryPermission.SetPathList*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: SetPathList
  nameWithType: RegistryPermission.SetPathList
- uid: System.Security.Permissions.RegistryPermission.ToXml*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: ToXml
  nameWithType: RegistryPermission.ToXml
- uid: System.Security.Permissions.RegistryPermission.Union*
  parent: System.Security.Permissions.RegistryPermission
  isExternal: false
  name: Union
  nameWithType: RegistryPermission.Union
