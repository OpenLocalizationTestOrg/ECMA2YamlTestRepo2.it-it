### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  id: X509Certificate2
  children:
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  - System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  - System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  - System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  - System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  - System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
  - System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  - System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Reset
  - System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  - System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  - System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  - System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
  - System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Verify
  - System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  langs:
  - csharp
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
  type: Class
  summary: "Rappresenta un certificato x.&509;."
  remarks: "La struttura di x.&509; proviene dal International Organization for Standardization (ISO) dei gruppi di lavoro. Questa struttura può essere utilizzata per rappresentare vari tipi di informazioni, inclusi gli attributi di identità, diritto e titolare (autorizzazioni, età, sesso, posizione, associazione e così via). Sebbene le specifiche di ISO sono principalmente informazioni sulla struttura, la classe X509Certificate2 è progettata per gli scenari di utilizzo definiti nelle specifiche pubblicate dal Public Key Infrastructure Internet Engineering Task Force (IETF), il gruppo di lavoro di x.&509; (PKIX) del modello. Maggiori di tali specifiche è RFC 3280, &quot;[certificato e Certificate Revocation List (CRL) Profile](http://go.microsoft.com/fwlink/?LinkId=45286).&quot;      > [!IMPORTANT] > A partire dal [!INCLUDE[net_v46](~/add/includes/net-v46-md.md)], questo tipo implementa il <xref:System.IDisposable>interfaccia.</xref:System.IDisposable> Dopo aver utilizzando il tipo, è necessario eliminarlo di esso direttamente o indirettamente. Per eliminare direttamente il tipo, chiamare il relativo <xref:System.IDisposable.Dispose%2A>metodo in un `try` / `catch` blocco.</xref:System.IDisposable.Dispose%2A> Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio, ad esempio `using` (in c#) o `Using` (in Visual Basic). Per ulteriori informazioni, vedere la sezione &quot;Utilizzo di oggetti che implementano IDisposable&quot; nel <xref:System.IDisposable>argomento relativo all&quot;interfaccia.</xref:System.IDisposable>   >> Per le app destinate il [!INCLUDE[net_v452](~/add/includes/net-v452-md.md)] e versioni precedenti, la classe X509Certificate2 non implementa il <xref:System.IDisposable>interfaccia e pertanto non dispone di un `Dispose` metodo.</xref:System.IDisposable>"
  example:
  - "The following example demonstrates how to use an X509Certificate2 object to encrypt and decrypt a file.  \n  \n [!code-vb[X509Certificate2#1](~/add/codesnippet/visualbasic/t-system.security.crypto_122_1.vb)]\n [!code-cs[X509Certificate2#1](~/add/codesnippet/csharp/t-system.security.crypto_122_1.cs)]  \n  \n The following example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/t-system.security.crypto_122_2.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/t-system.security.crypto_122_2.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/t-system.security.crypto_122_2.vb)]"
  syntax:
    content: 'public class X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate'
  inheritance:
  - System.Object
  - System.Security.Cryptography.X509Certificates.X509Certificate
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)
  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)
  - System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetName
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
  - System.Security.Cryptography.X509Certificates.X509Certificate.Handle
  - System.Security.Cryptography.X509Certificates.X509Certificate.Issuer
  - System.Security.Cryptography.X509Certificates.X509Certificate.Subject
  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2()
  nameWithType: X509Certificate2.X509Certificate2()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2()
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> classe."
  remarks: "Questo costruttore crea un oggetto vuoto <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>oggetto, a differenza degli altri costruttori per questa classe in cui le informazioni di certificato da una matrice di byte, un puntatore o un file di certificato.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/m-system.security.crypto_122_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/m-system.security.crypto_122_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/m-system.security.crypto_122_1.cpp)]"
  syntax:
    content: public X509Certificate2 ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(Byte[])
  nameWithType: X509Certificate2.X509Certificate2(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> classe utilizzando le informazioni da una matrice di byte."
  remarks: "Questo costruttore crea un nuovo <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>oggetto utilizzando le informazioni sul certificato da una matrice di byte.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> Matrice di byte può essere binaria (DER) con codificata o dati con codifica base&64; x.&509;. Matrice di byte può anche essere un PKCS7 (Authenticode) firmato file. il certificato del firmatario è utilizzato per creare l&quot;oggetto.       Se si crea un <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>certificato specificando un archivio di file firmato PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>viene creato per il certificato che ha firmato l&quot;archivio anziché per uno dei certificati all&quot;interno dell&quot;archivio.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (byte[] rawData);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Matrice di byte contenente i dati di un certificato x.&509;."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Si verifica un errore con il certificato. Ad esempio:-il file del certificato non esiste.      -Il certificato è valido.      -La password del certificato non è corretta."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(IntPtr)
  nameWithType: X509Certificate2.X509Certificate2(IntPtr)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(IntPtr)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> classe utilizzando un handle non gestito."
  remarks: "Questo costruttore crea un nuovo <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>oggetto tramite un handle per il contesto del certificato dell&quot;API di crittografia Microsoft, `PCCERT_CONTEXT`.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> Si noti che il chiamante immediato del costruttore è necessaria l&quot;autorizzazione di codice non gestito.      > [!IMPORTANT] > Il costruttore crea una copia del contesto del certificato. Non presupporre che la struttura di contesto che è stato passato al costruttore è valida. potrebbe sono state rilasciata. È possibile ottenere una copia dell&quot;oggetto corrente `PCCERT_CONTEXT` struttura dal <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A>proprietà, ma è valida solo per la durata di <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>oggetto.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A>"
  syntax:
    content: public X509Certificate2 (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "Puntatore a un contesto del certificato nel codice non gestito. La struttura C è denominata <xref uid=&quot;langword_csharp_PCCERT_CONTEXT&quot; name=&quot;PCCERT_CONTEXT&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Si verifica un errore con il certificato. Ad esempio:-il file del certificato non esiste.      -Il certificato è valido.      -La password del certificato non è corretta."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(X509Certificate)
  nameWithType: X509Certificate2.X509Certificate2(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(X509Certificate)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> classe utilizzando un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> oggetto."
  remarks: "Questo metodo crea una nuova istanza di <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>classe utilizzando un <xref:System.Security.Cryptography.X509Certificates.X509Certificate>oggetto.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (System.Security.Cryptography.X509Certificates.X509Certificate certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> oggetto."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Si verifica un errore con il certificato. Ad esempio:-il file del certificato non esiste.      -Il certificato è valido.      -La password del certificato non è corretta."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(String)
  nameWithType: X509Certificate2.X509Certificate2(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> classe usando un nome di file di certificato."
  remarks: "Questo costruttore crea un nuovo <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>oggetto usando un nome di file di certificato.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> Supporta la codifica binaria (DER) o la codifica Base64.       Se si crea un <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>certificato specificando un archivio di file firmato PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>viene creato per il certificato che ha firmato l&quot;archivio anziché per uno dei certificati all&quot;interno dell&quot;archivio.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Il nome di un file di certificato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Si verifica un errore con il certificato. Ad esempio:-il file del certificato non esiste.      -Il certificato è valido.      -La password del certificato non è corretta."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)
  id: '#ctor(System.Byte[],System.Security.SecureString)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(Byte[],SecureString)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],SecureString)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> classe utilizzando una matrice di byte e una password."
  remarks: "Questo costruttore viene utilizzato con il file PKCS12 (PFX) che contengono la chiave privata del certificato. Chiamare il costruttore con la password corretta decrittografa la chiave privata e lo salva in un contenitore di chiavi.      > [!IMPORTANT] > Mai codificare una password all&quot;interno del codice sorgente.  Le password hardcoded possono essere recuperate da un assembly mediante il [Ildasm.exe (Disassembler IL)](~/add/includes/ajax-current-ext-md.md), un editor esadecimale o semplicemente aprendo l&quot;assembly in un editor di testo, ad esempio Notepad.exe.       Se si crea un <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certificato specificando un archivio di file firmato PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>viene creato per il certificato che ha firmato l&quot;archivio anziché per uno dei certificati all&quot;interno dell&quot;archivio.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate2 (byte[] rawData, System.Security.SecureString password);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Matrice di byte che contiene i dati di un certificato x.&509;."
    - id: password
      type: System.Security.SecureString
      description: "La password necessaria per accedere ai dati del certificato x.&509;."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Si verifica un errore con il certificato. Ad esempio:-il file del certificato non esiste.      -Il certificato è valido.      -La password del certificato non è corretta."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)
  id: '#ctor(System.Byte[],System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(Byte[],String)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> classe utilizzando una matrice di byte e una password."
  remarks: "Questo costruttore crea un nuovo <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>utilizzando una matrice di byte e una password che è necessaria per accedere ai dati del certificato.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> Viene utilizzato con il file PKCS12 (PFX) che contengono la chiave privata del certificato. Chiamare il costruttore con la password corretta decrittografa la chiave privata e lo salva in un contenitore di chiavi.      > [!IMPORTANT] > Mai codificare una password all&quot;interno del codice sorgente.  Le password hardcoded possono essere recuperate da un assembly mediante il [Ildasm.exe (Disassembler IL)](~/add/includes/ajax-current-ext-md.md), un editor esadecimale o semplicemente aprendo l&quot;assembly in un editor di testo, ad esempio Notepad.exe.       Se si crea un <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>certificato specificando un archivio di file firmato PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>viene creato per il certificato che ha firmato l&quot;archivio anziché per uno dei certificati all&quot;interno dell&quot;archivio.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (byte[] rawData, string password);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Matrice di byte contenente i dati di un certificato x.&509;."
    - id: password
      type: System.String
      description: "La password necessaria per accedere ai dati del certificato x.&509;."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Si verifica un errore con il certificato. Ad esempio:-il file del certificato non esiste.      -Il certificato è valido.      -La password del certificato non è corretta."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate2.X509Certificate2(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> classe utilizzando le informazioni di contesto di serializzazione e il flusso specificate."
  syntax:
    content: protected X509Certificate2 (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Le informazioni di serializzazione necessari per deserializzare il nuovo <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref>."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Informazioni contestuali sull&quot;origine del flusso da deserializzare."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)
  id: '#ctor(System.String,System.Security.SecureString)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(String,SecureString)
  nameWithType: X509Certificate2.X509Certificate2(String,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,SecureString)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> classe utilizzando un nome di file di certificato e una password."
  remarks: "Questo costruttore viene utilizzato con il file PKCS12 (PFX) che contengono la chiave privata del certificato. Chiamare il costruttore con la password corretta decrittografa la chiave privata e lo salva in un contenitore di chiavi.      > [!IMPORTANT] > Mai codificare una password all&quot;interno del codice sorgente.  Le password hardcoded possono essere recuperate da un assembly mediante il [Ildasm.exe (Disassembler IL)](~/add/includes/ajax-current-ext-md.md), un editor esadecimale o semplicemente aprendo l&quot;assembly in un editor di testo, ad esempio Notepad.exe.       Se si crea un <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certificato specificando un archivio di file firmato PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>viene creato per il certificato che ha firmato l&quot;archivio anziché per uno dei certificati all&quot;interno dell&quot;archivio.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate2 (string fileName, System.Security.SecureString password);
    parameters:
    - id: fileName
      type: System.String
      description: "Il nome di un file di certificato."
    - id: password
      type: System.Security.SecureString
      description: "La password necessaria per accedere ai dati del certificato x.&509;."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Si verifica un errore con il certificato. Ad esempio:-il file del certificato non esiste.      -Il certificato è valido.      -La password del certificato non è corretta."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(String,String)
  nameWithType: X509Certificate2.X509Certificate2(String,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> classe utilizzando un nome di file di certificato e una password utilizzata per accedere al certificato."
  remarks: "Questo costruttore crea un nuovo <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>utilizzando un nome di file di certificato e una password necessaria per accedere al certificato.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> Viene utilizzato con il file PKCS12 (PFX) che contengono la chiave privata del certificato. Chiamare il costruttore con la password corretta decrittografa la chiave privata e lo salva in un contenitore di chiavi.      > [!IMPORTANT] > Mai codificare una password all&quot;interno del codice sorgente.  Le password hardcoded possono essere recuperate da un assembly mediante il [Ildasm.exe (Disassembler IL)](~/add/includes/ajax-current-ext-md.md), un editor esadecimale o semplicemente aprendo l&quot;assembly in un editor di testo, ad esempio Notepad.exe.       Se si crea un <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>certificato specificando un archivio di file firmato PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>viene creato per il certificato che ha firmato l&quot;archivio anziché per uno dei certificati all&quot;interno dell&quot;archivio.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (string fileName, string password);
    parameters:
    - id: fileName
      type: System.String
      description: "Il nome di un file di certificato."
    - id: password
      type: System.String
      description: "La password necessaria per accedere ai dati del certificato x.&509;."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Si verifica un errore con il certificato. Ad esempio:-il file del certificato non esiste.      -Il certificato è valido.      -La password del certificato non è corretta."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],SecureString,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> classe usando una matrice di byte, una password e un flag di archiviazione chiavi."
  remarks: "Questo costruttore viene utilizzato con il file PKCS12 (PFX) che contengono la chiave privata del certificato. Chiamare questo costruttore con la password corretta decrittografa la chiave privata e Salva per un Microsoft API Cryptographic Service Provider crittografia (CSP).      > [!IMPORTANT] > Mai codificare una password all&quot;interno del codice sorgente.  Le password hardcoded possono essere recuperate da un assembly mediante il [Ildasm.exe (Disassembler IL)](~/add/includes/ajax-current-ext-md.md), un editor esadecimale o semplicemente aprendo l&quot;assembly in un editor di testo, ad esempio Notepad.exe.       Se si crea un <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certificato specificando un archivio di file firmato PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>viene creato per il certificato che ha firmato l&quot;archivio anziché per uno dei certificati all&quot;interno dell&quot;archivio.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate2 (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Matrice di byte che contiene i dati di un certificato x.&509;."
    - id: password
      type: System.Security.SecureString
      description: "La password necessaria per accedere ai dati del certificato x.&509;."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Combinazione bit per bit dell&quot;enumerazione di valori che controllano dove e come importare il certificato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Si verifica un errore con il certificato. Ad esempio:-il file del certificato non esiste.      -Il certificato è valido.      -La password del certificato non è corretta."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],String,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> classe usando una matrice di byte, una password e un flag di archiviazione chiavi."
  remarks: "Questo costruttore crea un nuovo <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>oggetto utilizzando un byte di matrice, una password che è necessaria per accedere ai dati del certificato e un flag di archiviazione chiavi.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> Viene utilizzato con il file PKCS12 (PFX) che contengono la chiave privata del certificato. Chiamare questo costruttore con la password corretta decrittografa la chiave privata e Salva per un Microsoft API Cryptographic Service Provider crittografia (CSP).      > [!IMPORTANT] > Mai codificare una password all&quot;interno del codice sorgente.  Le password hardcoded possono essere recuperate da un assembly mediante il [Ildasm.exe (Disassembler IL)](~/add/includes/ajax-current-ext-md.md), un editor esadecimale o semplicemente aprendo l&quot;assembly in un editor di testo, ad esempio Notepad.exe.       Se si crea un <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>certificato specificando un archivio di file firmato PKCS7 `rawData`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>viene creato per il certificato che ha firmato l&quot;archivio anziché per uno dei certificati all&quot;interno dell&quot;archivio.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Matrice di byte contenente i dati di un certificato x.&509;."
    - id: password
      type: System.String
      description: "La password necessaria per accedere ai dati del certificato x.&509;."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Combinazione bit per bit dell&quot;enumerazione di valori che controllano dove e come importare il certificato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Si verifica un errore con il certificato. Ad esempio:-il file del certificato non esiste.      -Il certificato è valido.      -La password del certificato non è corretta."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,SecureString,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> classe utilizzando un nome file del certificato, una password e un flag di archiviazione chiavi."
  remarks: "Se si crea un <xref:System.Security.Cryptography.X509Certificates.X509Certificate>certificato specificando un archivio di file firmato PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate>viene creato per il certificato che ha firmato l&quot;archivio anziché per uno dei certificati all&quot;interno dell&quot;archivio.</xref:System.Security.Cryptography.X509Certificates.X509Certificate> </xref:System.Security.Cryptography.X509Certificates.X509Certificate>"
  syntax:
    content: public X509Certificate2 (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "Il nome di un file di certificato."
    - id: password
      type: System.Security.SecureString
      description: "La password necessaria per accedere ai dati del certificato x.&509;."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Combinazione bit per bit dell&quot;enumerazione di valori che controllano dove e come importare il certificato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Si verifica un errore con il certificato. Ad esempio:-il file del certificato non esiste.      -Il certificato è valido.      -La password del certificato non è corretta."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: '#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: X509Certificate2(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,String,X509KeyStorageFlags)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> nome classe utilizzando un file di certificato, una password utilizzata per accedere al certificato e un flag di archiviazione chiavi."
  remarks: "Questo costruttore crea un nuovo <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>nome dell&quot;oggetto utilizzando un file di certificato, una password necessaria per accedere al certificato e un flag di archiviazione chiavi.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>      > [!IMPORTANT] > Mai codificare una password all&quot;interno del codice sorgente.  Le password hardcoded possono essere recuperate da un assembly mediante il [Ildasm.exe (Disassembler IL)](~/add/includes/ajax-current-ext-md.md), un editor esadecimale o semplicemente aprendo l&quot;assembly in un editor di testo, ad esempio Notepad.exe.       Se si crea un <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>certificato specificando un archivio di file firmato PKCS7 `fileName`, <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>viene creato per il certificato che ha firmato l&quot;archivio anziché per uno dei certificati all&quot;interno dell&quot;archivio.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>"
  syntax:
    content: public X509Certificate2 (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "Il nome di un file di certificato."
    - id: password
      type: System.String
      description: "La password necessaria per accedere ai dati del certificato x.&509;."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Combinazione bit per bit dell&quot;enumerazione di valori che controllano dove e come importare il certificato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Si verifica un errore con il certificato. Ad esempio:-il file del certificato non esiste.      -Il certificato è valido.      -La password del certificato non è corretta."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  id: Archived
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Archived
  nameWithType: X509Certificate2.Archived
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Ottiene o imposta un valore che indica che è archiviato un certificato x.&509;."
  remarks: "Questa proprietà viene impostata solo su un certificato che è associato a un archivio. Se la proprietà è impostata e il certificato viene aggiunto a un archivio certificati, il valore viene mantenuto. Se la proprietà è impostata su un certificato recuperato da un archivio, è possibile che il valore viene mantenuto immediatamente.       In un archivio x.&509;, non sono inclusi i certificati archiviati nell&quot;oggetto restituito <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection>dell&quot;oggetto, a meno che la proprietà archiviato è impostata su `true`.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> Nessuna attività di archiviazione fisica si verifica quando il valore archiviato viene impostato o cancellato."
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/p-system.security.crypto_26_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/p-system.security.crypto_26_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/p-system.security.crypto_26_1.cpp)]"
  syntax:
    content: public bool Archived { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il certificato viene archiviato, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se il certificato non è stato archiviato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il certificato è illeggibile."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  id: Extensions
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Extensions
  nameWithType: X509Certificate2.Extensions
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Ottiene una raccolta di <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Extension&quot;> </xref> oggetti."
  remarks: "Le estensioni definite con il formato del certificato x.&509; v3 consentono dati aggiuntivi da includere nel certificato. Una serie di estensioni è definita in ISO nella definizione di x. 509 v3 e da PKIX nella RFC 3280, &quot;[certificato e Certificate Revocation List (CRL) Profile](http://go.microsoft.com/fwlink/?LinkId=45286).&quot; Le estensioni comuni includono informazioni sull&quot;utilizzo della chiave (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>), gli identificatori di chiave (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>), criteri, le informazioni di revoca (con estensione punto di distribuzione CRL) e altri utilizzi di certificato.</xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension> </xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>"
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/p-system.security.crypto_97_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/p-system.security.crypto_97_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/p-system.security.crypto_97_1.cpp)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
      description: "Un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ExtensionCollection&quot;> </xref> oggetto."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il certificato è illeggibile."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  id: FriendlyName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: FriendlyName
  nameWithType: X509Certificate2.FriendlyName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Ottiene o imposta l&quot;alias associato a un certificato."
  remarks: "I nomi descrittivi sono proprietà nell&quot;archivio certificati x.&509; che è possibile impostare. Vengono utilizzati per consentire agli utenti di associare gli alias dei certificati in modo che possano essere facilmente individuati.       Se non esiste alcun nome descrittivo per il certificato, una stringa vuota (&quot;&quot;) viene restituito."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_16_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_16_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_16_1.vb)]"
  syntax:
    content: public string FriendlyName { get; set; }
    return:
      type: System.String
      description: "Nome descrittivo del certificato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il certificato è illeggibile."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
  id: GetCertContentType(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: GetCertContentType(Byte[])
  nameWithType: X509Certificate2.GetCertContentType(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Indica il tipo di certificato contenuto in una matrice di byte."
  remarks: "Questo metodo consente di individuare il tipo di certificato in un file."
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/a34c0539-d23c-4bd1-9b29-_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/a34c0539-d23c-4bd1-9b29-_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/a34c0539-d23c-4bd1-9b29-_1.cpp)]"
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (byte[] rawData);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Matrice di byte contenente i dati di un certificato x.&509;."
    return:
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "Un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> oggetto."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>rawData</code>lunghezza zero o sia <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
  id: GetCertContentType(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: GetCertContentType(String)
  nameWithType: X509Certificate2.GetCertContentType(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(String)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Indica il tipo di certificato contenuto in un file."
  remarks: "Questo metodo consente di individuare il tipo di certificato in un file."
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Il nome di un file di certificato."
    return:
      type: System.Security.Cryptography.X509Certificates.X509ContentType
      description: "Un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ContentType&quot;> </xref> oggetto."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  id: GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: GetNameInfo(X509NameType,Boolean)
  nameWithType: X509Certificate2.GetNameInfo(X509NameType,Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(X509NameType,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Ottiene l&quot;oggetto e autorità di certificazione nomi da un certificato."
  remarks: "Questo metodo deve essere utilizzato sempre anziché analizzare il certificato, poiché molti dei valori di nome può trovarsi in più posizioni. Questo metodo garantisce che venga restituito il nome appropriato."
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/3126ffa7-3ffc-4612-bfb2-_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/3126ffa7-3ffc-4612-bfb2-_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/3126ffa7-3ffc-4612-bfb2-_1.cpp)]"
  syntax:
    content: public string GetNameInfo (System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer);
    parameters:
    - id: nameType
      type: System.Security.Cryptography.X509Certificates.X509NameType
      description: "Il <xref href=&quot;System.Security.Cryptography.X509Certificates.X509NameType&quot;> </xref> valore per l&quot;oggetto."
    - id: forIssuer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per includere il nome dell&quot;autorità di certificazione. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Il nome del certificato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  id: HasPrivateKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: HasPrivateKey
  nameWithType: X509Certificate2.HasPrivateKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Ottiene un valore che indica se un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> oggetto contiene una chiave privata."
  syntax:
    content: public bool HasPrivateKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> oggetto contiene una privata chiave; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il contesto del certificato non è valido."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])
  id: Import(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Import(Byte[])
  nameWithType: X509Certificate2.Import(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Popola un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> oggetto con i dati da una matrice di byte."
  remarks: "Questo metodo può essere utilizzato per richiedere una matrice di byte non elaborati di un certificato x.&509; e popolare il <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>oggetto i relativi valori.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>       Poiché questo metodo accetta una matrice di byte, può essere utilizzato solo per i tipi di certificati che non richiedono una password, tra cui un certificato x.&509; con codifica Base64 o con codifica DER o un certificato PFX/PKCS12. Si noti che un certificato PFX/PKCS12 può contenere più di un certificato. In tal caso, viene utilizzato il primo certificato associato alla chiave privata o, se non viene trovata alcuna chiave privata, viene utilizzato il primo certificato."
  syntax:
    content: public override void Import (byte[] rawData);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Matrice di byte contenente i dati di un certificato x.&509;."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)
  id: Import(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Import(String)
  nameWithType: X509Certificate2.Import(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(String)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Popola un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> oggetto con le informazioni da un file di certificato."
  remarks: "Questo metodo utilizza un file di certificato, ad esempio un file con estensione cer, che rappresenta un certificato x.&509; e compila il <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>oggetto con il certificato contiene il file.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>       Questo metodo può essere utilizzato con diversi tipi di certificati, inclusi i certificati x.&509; con codifica Base64 o DER, i certificati PFX/PKCS12 e come Authenticode. Si noti che un certificato PFX/PKCS12 può contenere più di un certificato. In tal caso, viene utilizzato il primo certificato associato alla chiave privata o, se non viene trovata alcuna chiave privata, viene utilizzato il primo certificato."
  syntax:
    content: public override void Import (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Il nome di un certificato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Import(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(Byte[],SecureString,X509KeyStorageFlags)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Popola un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> utilizzando i dati di una matrice di byte, una password e un flag di archiviazione chiavi dell&quot;oggetto."
  remarks: "È possibile utilizzare questo metodo per i tipi di certificati, ad esempio i certificati x.&509; con codifica Base64 o con codifica DER o i certificati PFX/PKCS12. Si noti che un certificato PFX/PKCS12 può contenere più di un certificato. In tal caso, viene utilizzato il primo certificato associato alla chiave privata o, se non viene trovata alcuna chiave privata, viene utilizzato il primo certificato.      > [!IMPORTANT] > Mai codificare una password all&quot;interno del codice sorgente.  Le password hardcoded possono essere recuperate da un assembly mediante il [Ildasm.exe (Disassembler IL)](~/add/includes/ajax-current-ext-md.md), un editor esadecimale o semplicemente aprendo l&quot;assembly in un editor di testo, ad esempio Notepad.exe."
  syntax:
    content: public override void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Matrice di byte che contiene i dati di un certificato x.&509;."
    - id: password
      type: System.Security.SecureString
      description: "La password necessaria per accedere ai dati del certificato x.&509;."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Combinazione bit per bit dell&quot;enumerazione di valori che controllano dove e come importare il certificato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Import(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(Byte[],String,X509KeyStorageFlags)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Popola un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> utilizzando i dati di una matrice di byte, una password e flag per determinare la modalità di importazione della chiave privata dell&quot;oggetto."
  remarks: "Questo metodo può essere utilizzato per popolare un <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>utilizzando una password per il certificato rappresentato dalla matrice di byte.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> Il <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>valore può essere utilizzato per controllare dove e come importare la chiave privata.</xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>       Questo metodo accetta una matrice di byte e può essere utilizzato per i tipi di certificati, ad esempio i certificati x.&509; con codifica Base64 o con codifica DER o i certificati PFX/PKCS12. Si noti che un certificato PFX/PKCS12 può contenere più di un certificato. In tal caso, viene utilizzato il primo certificato associato alla chiave privata o, se non viene trovata alcuna chiave privata, viene utilizzato il primo certificato.      > [!IMPORTANT] > Mai codificare una password all&quot;interno del codice sorgente.  Le password hardcoded possono essere recuperate da un assembly mediante il [Ildasm.exe (Disassembler IL)](~/add/includes/ajax-current-ext-md.md), un editor esadecimale o semplicemente aprendo l&quot;assembly in un editor di testo, ad esempio Notepad.exe."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/af855297-61a6-47ed-8dcb-_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/af855297-61a6-47ed-8dcb-_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/af855297-61a6-47ed-8dcb-_1.vb)]"
  syntax:
    content: public override void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: rawData
      type: System.Byte[]
      description: "Matrice di byte contenente i dati di un certificato x.&509;."
    - id: password
      type: System.String
      description: "La password necessaria per accedere ai dati del certificato x.&509;."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Combinazione bit per bit dell&quot;enumerazione di valori che controllano dove e come importare il certificato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Import(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(String,SecureString,X509KeyStorageFlags)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Popola un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> oggetto con le informazioni da un file di certificato, una password e un flag di archiviazione chiavi."
  remarks: '**Nota sulla sicurezza** mai codificare una password all&quot;interno del codice sorgente.  Le password hardcoded possono essere recuperate da un assembly mediante il [Ildasm.exe (Disassembler IL)](~/add/includes/ajax-current-ext-md.md), un editor esadecimale o semplicemente aprendo l&quot;assembly in un editor di testo, ad esempio Notepad.exe.'
  syntax:
    content: public override void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "Il nome di un file di certificato."
    - id: password
      type: System.Security.SecureString
      description: "La password necessaria per accedere ai dati del certificato x.&509;."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Combinazione bit per bit dell&quot;enumerazione di valori che controllano dove e come importare il certificato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  id: Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Import(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(String,String,X509KeyStorageFlags)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Popola un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> oggetto con le informazioni da un file di certificato, una password e un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509KeyStorageFlags&quot;> </xref> valore."
  remarks: "Questo metodo può essere utilizzato popolare un <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>oggetto con le informazioni da un file di certificato, una password e un <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>valore.</xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>      > [!IMPORTANT] > Mai codificare una password all&quot;interno del codice sorgente.  Le password hardcoded possono essere recuperate da un assembly mediante il [Ildasm.exe (Disassembler IL)](~/add/includes/ajax-current-ext-md.md), un editor esadecimale o semplicemente aprendo l&quot;assembly in un editor di testo, ad esempio Notepad.exe."
  syntax:
    content: public override void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);
    parameters:
    - id: fileName
      type: System.String
      description: "Il nome di un file di certificato."
    - id: password
      type: System.String
      description: "La password necessaria per accedere ai dati del certificato x.&509;."
    - id: keyStorageFlags
      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
      description: "Combinazione bit per bit dell&quot;enumerazione di valori che controllano dove e come importare il certificato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  id: IssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: IssuerName
  nameWithType: X509Certificate2.IssuerName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Ottiene il nome distinto dell&quot;autorità di certificazione."
  remarks: "Questa proprietà contiene il nome dell&quot;autorità di certificazione (CA) che ha emesso il certificato. Per ottenere il nome di un certificato, utilizzare il <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A>metodo.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A>       Il nome distinto per il certificato è una rappresentazione testuale dell&quot;oggetto o del certificato dell&quot;autorità di certificazione. Questa rappresentazione è costituita da attributi di nome (ad esempio &quot;CN = MyName, OU = UnitàOrg, C = US&quot;)."
  example:
  - "The following code example creates a command-line executable file that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_20_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_20_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_20_1.vb)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
      description: "Un <xref href=&quot;System.Security.Cryptography.X509Certificates.X500DistinguishedName&quot;> </xref> oggetto che contiene il nome dell&quot;autorità di certificazione."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il contesto del certificato non è valido."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  id: NotAfter
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: NotAfter
  nameWithType: X509Certificate2.NotAfter
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Ottiene la data nell&quot;ora locale dopo il quale un certificato non è più valido."
  remarks: "Questa proprietà indica una data di scadenza in cui il certificato diventa valido."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_116_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_116_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_116_1.vb)]"
  syntax:
    content: public DateTime NotAfter { get; }
    return:
      type: System.DateTime
      description: "Oggetto <xref:System.DateTime>oggetto che rappresenta la data di scadenza del certificato.</xref:System.DateTime>"
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il certificato è illeggibile."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  id: NotBefore
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: NotBefore
  nameWithType: X509Certificate2.NotBefore
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Ottiene la data nell&quot;ora locale in cui un certificato diventa valido."
  remarks: "Questa proprietà indica la data in cui il certificato diventa valido."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_85_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_85_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_85_1.vb)]"
  syntax:
    content: public DateTime NotBefore { get; }
    return:
      type: System.DateTime
      description: "Oggetto <xref:System.DateTime>oggetto che rappresenta la data di validità del certificato.</xref:System.DateTime>"
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il certificato è illeggibile."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
  id: PrivateKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: PrivateKey
  nameWithType: X509Certificate2.PrivateKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Ottiene o imposta il <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> oggetto che rappresenta la chiave privata associata a un certificato."
  remarks: "Questa proprietà supporta attualmente solo le chiavi RSA o DSA, in modo che restituisca uno un <xref:System.Security.Cryptography.RSACryptoServiceProvider>o <xref:System.Security.Cryptography.DSACryptoServiceProvider>oggetto.</xref:System.Security.Cryptography.DSACryptoServiceProvider> </xref:System.Security.Cryptography.RSACryptoServiceProvider> Se nessuna chiave privata associata al certificato, viene restituito `null`.      > [!WARNING] > Se si imposta questa proprietà su `null` o a un&quot;altra chiave senza prima eliminarlo, un file di chiave privata viene lasciato sul disco.       Per eliminare correttamente la chiave privata associata a questa proprietà, impostare `PersistKeyInCsp` a `false`e quindi chiamare il <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A>metodo.</xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A>"
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/p-system.security.crypto_115_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/p-system.security.crypto_115_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/p-system.security.crypto_115_1.cpp)]"
  syntax:
    content: public System.Security.Cryptography.AsymmetricAlgorithm PrivateKey { get; set; }
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "Un <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> oggetto, ovvero provider del servizio di crittografia DSA o RSA."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il valore della chiave non è una chiave RSA o DSA, o la chiave è illeggibile."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore da impostare per questa proprietà è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "L&quot;algoritmo della chiave per la chiave privata non è supportata."
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: "Le chiavi x.&509; non corrispondono."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La chiave del provider del servizio di crittografia è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  id: PublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: PublicKey
  nameWithType: X509Certificate2.PublicKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Ottiene un oggetto PublicKey associato a un certificato."
  remarks: "Questa proprietà restituisce un oggetto chiave pubblica, che contiene l&quot;identificatore di oggetto (<xref:System.Security.Cryptography.Oid>) che rappresenta l&quot;algoritmo a chiave pubblica, i parametri con codifica ASN.&1; e il valore della chiave con codifica ASN.&1;.</xref:System.Security.Cryptography.Oid>       È anche possibile ottenere la chiave come un <xref:System.Security.Cryptography.AsymmetricAlgorithm>oggetto facendo riferimento alla proprietà PublicKey.</xref:System.Security.Cryptography.AsymmetricAlgorithm> Questa proprietà supporta solo le chiavi RSA o DSA, in modo che restituisca uno un <xref:System.Security.Cryptography.RSACryptoServiceProvider>o <xref:System.Security.Cryptography.DSACryptoServiceProvider>oggetto che rappresenta la chiave pubblica.</xref:System.Security.Cryptography.DSACryptoServiceProvider> </xref:System.Security.Cryptography.RSACryptoServiceProvider>"
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/p-system.security.crypto_120_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/p-system.security.crypto_120_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/p-system.security.crypto_120_1.cpp)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.PublicKey PublicKey { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.PublicKey
      description: "Un oggetto PublicKey."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il valore della chiave non è una chiave RSA o DSA, o la chiave è illeggibile."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  id: RawData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: RawData
  nameWithType: X509Certificate2.RawData
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Ottiene i dati non elaborati di un certificato."
  remarks: ''
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/p-system.security.crypto_59_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/p-system.security.crypto_59_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/p-system.security.crypto_59_1.cpp)]"
  syntax:
    content: public byte[] RawData { get; }
    return:
      type: System.Byte[]
      description: "I dati non elaborati del certificato come una matrice di byte."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset
  id: Reset
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Reset()
  nameWithType: X509Certificate2.Reset()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Reimposta lo stato di un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> oggetto."
  remarks: "Questo metodo può essere utilizzato per reimpostare lo stato del certificato. Libera inoltre tutte le risorse associate al certificato."
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  id: SerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: SerialNumber
  nameWithType: X509Certificate2.SerialNumber
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Ottiene il numero di serie del certificato."
  remarks: "Il numero di serie del certificato fa parte del protocollo originale x.&509;. Il numero di serie è un numero univoco rilasciato dall&quot;autorità di certificazione, l&quot;acronimo di autorità di certificazione (CA)."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_114_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_114_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_114_1.vb)]"
  syntax:
    content: public string SerialNumber { get; }
    return:
      type: System.String
      description: "Numero di serie di un certificato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  id: SignatureAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: SignatureAlgorithm
  nameWithType: X509Certificate2.SignatureAlgorithm
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Ottiene l&quot;algoritmo utilizzato per creare la firma di un certificato."
  remarks: "L&quot;identificatore di oggetto (<xref:System.Security.Cryptography.Oid>) identifica il tipo di algoritmo di firma utilizzato dal certificato.</xref:System.Security.Cryptography.Oid>"
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/6cab3ad3-94fb-4ecd-9a6c-_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/6cab3ad3-94fb-4ecd-9a6c-_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/6cab3ad3-94fb-4ecd-9a6c-_1.cpp)]"
  syntax:
    content: public System.Security.Cryptography.Oid SignatureAlgorithm { get; }
    return:
      type: System.Security.Cryptography.Oid
      description: "Restituisce l&quot;identificatore di oggetto (<xref href=&quot;System.Security.Cryptography.Oid&quot;></xref>) dell&quot;algoritmo di firma."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il certificato è illeggibile."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  id: SubjectName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: SubjectName
  nameWithType: X509Certificate2.SubjectName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Ottiene il nome distinto dell&quot;oggetto da un certificato."
  remarks: "Il nome distinto del soggetto è il nome dell&quot;utente del certificato. Il nome distinto per il certificato è una rappresentazione testuale dell&quot;oggetto o dell&quot;emittente del certificato. Questa rappresentazione costituito dagli attributi di nome, ad esempio &quot;CN = MyName, OU = UnitàOrg, C = US&quot;."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_80_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_80_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_80_1.vb)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X500DistinguishedName
      description: "Un <xref href=&quot;System.Security.Cryptography.X509Certificates.X500DistinguishedName&quot;> </xref> oggetto che rappresenta il nome del soggetto del certificato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il contesto del certificato non è valido."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  id: Thumbprint
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Thumbprint
  nameWithType: X509Certificate2.Thumbprint
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Ottiene l&quot;identificazione personale del certificato."
  remarks: "L&quot;identificazione personale viene generato in modo dinamico mediante l&quot;algoritmo SHA1 e non è fisicamente esistente nel certificato. Poiché si tratta di un valore univoco per il certificato, viene usata in genere per trovare un certificato specifico in un archivio certificati."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_51_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_51_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_51_1.vb)]"
  syntax:
    content: public string Thumbprint { get; }
    return:
      type: System.String
      description: "L&quot;identificazione personale del certificato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
  id: ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: ToString()
  nameWithType: X509Certificate2.ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Visualizza un certificato x.&509; in formato testo."
  remarks: "Come con tutti `ToString` metodi, l&quot;output potrebbe non essere coerente in tutte le versioni di .NET Framework, pertanto non è possibile analizzare i risultati del metodo per il contenuto. Utilizzare le proprietà di <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>oggetto per ottenere informazioni precise sul contenuto oppure utilizzare il <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A>per ottenere informazioni sul certificato.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> </xref:System.Security.Cryptography.X509Certificates.X509Certificate2>       Questo metodo consente di visualizzare il certificato in formato testo."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/m-system.security.crypto_81_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/m-system.security.crypto_81_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/m-system.security.crypto_81_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Le informazioni sul certificato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: ToString(Boolean)
  nameWithType: X509Certificate2.ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Visualizza un certificato x.&509; in formato testo."
  remarks: "Come con tutti `ToString` metodi, l&quot;output potrebbe non essere coerente in tutte le versioni di .NET Framework, pertanto non è possibile analizzare i risultati del metodo per il contenuto. Utilizzare le proprietà di <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>oggetto per ottenere informazioni precise.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2>       Questo metodo consente di visualizzare il certificato in formato testo. Se il `verbose` parametro è impostato su `true`, il testo visualizzato include la chiave pubblica, una chiave privata e le estensioni. Se `verbose` è impostato su `false`, il testo visualizzato include i campi disponibili del certificato x.&509;, quali l&quot;identificazione personale, il numero di serie, nome del soggetto e dell&quot;autorità emittente e le informazioni sulla data di validità."
  example:
  - "The following code example creates a command line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/38d69126-bcaf-4cee-a89b-_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/38d69126-bcaf-4cee-a89b-_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/38d69126-bcaf-4cee-a89b-_1.vb)]"
  syntax:
    content: public override string ToString (bool verbose);
    parameters:
    - id: verbose
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per visualizzare la chiave pubblica, chiave privata, estensioni e così via; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per visualizzare le informazioni sono analoghe a quelle di <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> (classe), inclusi l&quot;identificazione personale, il numero di serie, nome del soggetto e dell&quot;autorità emittente e così via."
    return:
      type: System.String
      description: "Le informazioni sul certificato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify
  id: Verify
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Verify()
  nameWithType: X509Certificate2.Verify()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Esegue una convalida della catena x.&509; utilizzando i criteri di convalida di base."
  remarks: "Questo metodo compila una catena semplice per il certificato e applica i criteri di base a catena. Per ottenere ulteriori informazioni sull&quot;errore, convalidare il certificato utilizzando direttamente la <xref:System.Security.Cryptography.X509Certificates.X509Chain>oggetto.</xref:System.Security.Cryptography.X509Certificates.X509Chain>       Si noti che il valore predefinito del motore di concatenamento può sottoposto a override utilizzando la <xref:System.Security.Cryptography.CryptoConfig>classe.</xref:System.Security.Cryptography.CryptoConfig> In Microsoft Windows Server 2003, il motore predefinito è conforme alla specifica descritta nella RFC3280, &quot;[certificato e Certificate Revocation List (CRL) Profile](http://go.microsoft.com/fwlink/?LinkId=45286).&quot;"
  example:
  - "The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates. The example then writes certificate information to the console.  \n  \n [!code-vb[CertSelect#1](~/add/codesnippet/visualbasic/m-system.security.crypto_98_1.vb)]\n [!code-cs[CertSelect#1](~/add/codesnippet/csharp/m-system.security.crypto_98_1.cs)]\n [!code-cpp[CertSelect#1](~/add/codesnippet/cpp/m-system.security.crypto_98_1.cpp)]"
  syntax:
    content: public bool Verify ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la convalida ha esito positivo. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se la convalida non riesce."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il certificato è illeggibile."
  platform:
  - net462
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  id: Version
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  langs:
  - csharp
  name: Version
  nameWithType: X509Certificate2.Version
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  summary: "Ottiene la versione formato x.&509; di un certificato."
  remarks: "Esistono diverse versioni di certificati x.&509;. Questa proprietà indica il formato utilizzato dal certificato. Ad esempio, &quot;3&quot; viene restituito per un certificato versione 3."
  example:
  - "The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.  \n  \n [!code-cpp[CertInfo#1](~/add/codesnippet/cpp/p-system.security.crypto_37_1.cpp)]\n [!code-cs[CertInfo#1](~/add/codesnippet/csharp/p-system.security.crypto_37_1.cs)]\n [!code-vb[CertInfo#1](~/add/codesnippet/visualbasic/p-system.security.crypto_37_1.vb)]"
  syntax:
    content: public int Version { get; }
    return:
      type: System.Int32
      description: "Il formato del certificato."
  overload: System.Security.Cryptography.X509Certificates.X509Certificate2.Version*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il certificato è illeggibile."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  isExternal: false
  name: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicUnexpectedOperationException
  nameWithType: CryptographicUnexpectedOperationException
  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2()
  nameWithType: X509Certificate2.X509Certificate2()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(Byte[])
  nameWithType: X509Certificate2.X509Certificate2(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(IntPtr)
  nameWithType: X509Certificate2.X509Certificate2(IntPtr)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(X509Certificate)
  nameWithType: X509Certificate2.X509Certificate2(X509Certificate)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(String)
  nameWithType: X509Certificate2.X509Certificate2(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(Byte[],SecureString)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],SecureString)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(Byte[],String)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(SerializationInfo,StreamingContext)
  nameWithType: X509Certificate2.X509Certificate2(SerializationInfo,StreamingContext)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(String,SecureString)
  nameWithType: X509Certificate2.X509Certificate2(String,SecureString)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,SecureString)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(String,String)
  nameWithType: X509Certificate2.X509Certificate2(String,String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509KeyStorageFlags
  nameWithType: X509KeyStorageFlags
  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(Byte[],String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.X509Certificate2(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.X509Certificate2(String,String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Archived
  nameWithType: X509Certificate2.Archived
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Extensions
  nameWithType: X509Certificate2.Extensions
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions
- uid: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ExtensionCollection
  nameWithType: X509ExtensionCollection
  fullName: System.Security.Cryptography.X509Certificates.X509ExtensionCollection
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: FriendlyName
  nameWithType: X509Certificate2.FriendlyName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: GetCertContentType(Byte[])
  nameWithType: X509Certificate2.GetCertContentType(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(Byte[])
- uid: System.Security.Cryptography.X509Certificates.X509ContentType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ContentType
  nameWithType: X509ContentType
  fullName: System.Security.Cryptography.X509Certificates.X509ContentType
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: GetCertContentType(String)
  nameWithType: X509Certificate2.GetCertContentType(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: GetNameInfo(X509NameType,Boolean)
  nameWithType: X509Certificate2.GetNameInfo(X509NameType,Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(X509NameType,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509NameType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509NameType
  nameWithType: X509NameType
  fullName: System.Security.Cryptography.X509Certificates.X509NameType
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: HasPrivateKey
  nameWithType: X509Certificate2.HasPrivateKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import(Byte[])
  nameWithType: X509Certificate2.Import(Byte[])
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(Byte[])
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import(String)
  nameWithType: X509Certificate2.Import(String)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(String)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import(Byte[],SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(Byte[],SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(Byte[],SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import(Byte[],String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(Byte[],String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(Byte[],String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import(String,SecureString,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(String,SecureString,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(String,SecureString,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import(String,String,X509KeyStorageFlags)
  nameWithType: X509Certificate2.Import(String,String,X509KeyStorageFlags)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Import(String,String,X509KeyStorageFlags)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: IssuerName
  nameWithType: X509Certificate2.IssuerName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName
- uid: System.Security.Cryptography.X509Certificates.X500DistinguishedName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X500DistinguishedName
  nameWithType: X500DistinguishedName
  fullName: System.Security.Cryptography.X509Certificates.X500DistinguishedName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: NotAfter
  nameWithType: X509Certificate2.NotAfter
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: NotBefore
  nameWithType: X509Certificate2.NotBefore
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: PrivateKey
  nameWithType: X509Certificate2.PrivateKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: PublicKey
  nameWithType: X509Certificate2.PublicKey
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey
- uid: System.Security.Cryptography.X509Certificates.PublicKey
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: PublicKey
  nameWithType: PublicKey
  fullName: System.Security.Cryptography.X509Certificates.PublicKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: RawData
  nameWithType: X509Certificate2.RawData
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Reset()
  nameWithType: X509Certificate2.Reset()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: SerialNumber
  nameWithType: X509Certificate2.SerialNumber
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: X509Certificate2.SignatureAlgorithm
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm
- uid: System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  nameWithType: Oid
  fullName: System.Security.Cryptography.Oid
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: SubjectName
  nameWithType: X509Certificate2.SubjectName
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Thumbprint
  nameWithType: X509Certificate2.Thumbprint
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: ToString()
  nameWithType: X509Certificate2.ToString()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: ToString(Boolean)
  nameWithType: X509Certificate2.ToString(Boolean)
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Verify()
  nameWithType: X509Certificate2.Verify()
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify()
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Version
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Version
  nameWithType: X509Certificate2.Version
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2.Version
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2.X509Certificate2
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Archived*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Archived
  nameWithType: X509Certificate2.Archived
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Extensions
  nameWithType: X509Certificate2.Extensions
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: FriendlyName
  nameWithType: X509Certificate2.FriendlyName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: GetCertContentType
  nameWithType: X509Certificate2.GetCertContentType
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: GetNameInfo
  nameWithType: X509Certificate2.GetNameInfo
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: HasPrivateKey
  nameWithType: X509Certificate2.HasPrivateKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Import*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Import
  nameWithType: X509Certificate2.Import
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: IssuerName
  nameWithType: X509Certificate2.IssuerName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: NotAfter
  nameWithType: X509Certificate2.NotAfter
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: NotBefore
  nameWithType: X509Certificate2.NotBefore
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: PrivateKey
  nameWithType: X509Certificate2.PrivateKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: PublicKey
  nameWithType: X509Certificate2.PublicKey
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.RawData*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: RawData
  nameWithType: X509Certificate2.RawData
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Reset*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Reset
  nameWithType: X509Certificate2.Reset
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: SerialNumber
  nameWithType: X509Certificate2.SerialNumber
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: SignatureAlgorithm
  nameWithType: X509Certificate2.SignatureAlgorithm
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: SubjectName
  nameWithType: X509Certificate2.SubjectName
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Thumbprint
  nameWithType: X509Certificate2.Thumbprint
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.ToString*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: ToString
  nameWithType: X509Certificate2.ToString
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Verify*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Verify
  nameWithType: X509Certificate2.Verify
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2.Version*
  parent: System.Security.Cryptography.X509Certificates.X509Certificate2
  isExternal: false
  name: Version
  nameWithType: X509Certificate2.Version
