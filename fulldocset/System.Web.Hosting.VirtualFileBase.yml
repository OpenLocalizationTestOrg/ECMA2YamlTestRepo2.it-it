### YamlMime:ManagedReference
items:
- uid: System.Web.Hosting.VirtualFileBase
  id: VirtualFileBase
  children:
  - System.Web.Hosting.VirtualFileBase.#ctor
  - System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  - System.Web.Hosting.VirtualFileBase.IsDirectory
  - System.Web.Hosting.VirtualFileBase.Name
  - System.Web.Hosting.VirtualFileBase.VirtualPath
  langs:
  - csharp
  name: VirtualFileBase
  nameWithType: VirtualFileBase
  fullName: System.Web.Hosting.VirtualFileBase
  type: Class
  summary: "Fornisce l&quot;implementazione di base per il <xref href=&quot;System.Web.Hosting.VirtualFile&quot;> </xref> e <xref href=&quot;System.Web.Hosting.VirtualDirectory&quot;> </xref> oggetti. Una classe astratta, non è possibile creare istanze."
  remarks: "La classe astratta VirtualFileBase fornisce i metodi e proprietà condividono tra il <xref:System.Web.Hosting.VirtualFile>e <xref:System.Web.Hosting.VirtualDirectory>oggetti.</xref:System.Web.Hosting.VirtualDirectory> </xref:System.Web.Hosting.VirtualFile> Le implementazioni di queste classi forniscono il runtime di ASP.NET con accesso a file e percorsi utilizzati per la compilazione. Per ulteriori informazioni sull&quot;utilizzo di file e percorsi virtuali, vedere la <xref:System.Web.Hosting.VirtualPathProvider>classe.</xref:System.Web.Hosting.VirtualPathProvider>"
  syntax:
    content: 'public abstract class VirtualFileBase : MarshalByRefObject'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.#ctor
  id: '#ctor'
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: VirtualFileBase()
  nameWithType: VirtualFileBase.VirtualFileBase()
  fullName: System.Web.Hosting.VirtualFileBase.VirtualFileBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Inizializza la classe per l&quot;uso da un&quot;istanza di classe ereditata. Questo costruttore può essere chiamato solo da una classe ereditata."
  remarks: "Anche se è possibile costruire direttamente un&quot;istanza della <xref:System.Web.Hosting.VirtualFileBase>classe, è possibile chiamare questo costruttore dal costruttore di una classe che eredita.</xref:System.Web.Hosting.VirtualFileBase>"
  syntax:
    content: protected VirtualFileBase ();
    parameters: []
  overload: System.Web.Hosting.VirtualFileBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: VirtualFileBase.InitializeLifetimeService()
  fullName: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Fornisce un <xref href=&quot;System.Web.Hosting.VirtualFileBase&quot;> </xref> istanza una durata infinita impedendo la creazione di un lease."
  remarks: "Questo metodo esegue l&quot;override del <xref:System.MarshalByRefObject.InitializeLifetimeService%2A>metodo per la classe base.</xref:System.MarshalByRefObject.InitializeLifetimeService%2A> Restituisce sempre `null` e, pertanto, impedisce la creazione di lease per limita la durata del file virtuale o della directory."
  syntax:
    content: public override object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.IsDirectory
  id: IsDirectory
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: IsDirectory
  nameWithType: VirtualFileBase.IsDirectory
  fullName: System.Web.Hosting.VirtualFileBase.IsDirectory
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Quando sottoposto a override in una classe derivata, ottiene un valore che indica se il <xref href=&quot;System.Web.Hosting.VirtualFileBase&quot;> </xref> istanza rappresenta un file virtuale o una directory virtuale."
  syntax:
    content: public abstract bool IsDirectory { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Web.Hosting.VirtualFileBase&quot;> </xref> istanza è virtuale directory; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se il <xref href=&quot;System.Web.Hosting.VirtualFileBase&quot;> </xref> istanza è un file virtuale."
  overload: System.Web.Hosting.VirtualFileBase.IsDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.Name
  id: Name
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: Name
  nameWithType: VirtualFileBase.Name
  fullName: System.Web.Hosting.VirtualFileBase.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Ottiene il nome visualizzato della risorsa virtuale."
  remarks: "La proprietà Name è in genere il nome del file e l&quot;estensione associata alla risorsa, anche se le risorse virtuali possono utilizzare nomi arbitrari."
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "Il nome visualizzato del file virtuale."
  overload: System.Web.Hosting.VirtualFileBase.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.VirtualFileBase.VirtualPath
  id: VirtualPath
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: VirtualPath
  nameWithType: VirtualFileBase.VirtualPath
  fullName: System.Web.Hosting.VirtualFileBase.VirtualPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Ottiene il percorso virtuale del file."
  remarks: "La proprietà VirtualPath restituisce il percorso al file o directory rappresentata da questo oggetto."
  syntax:
    content: public string VirtualPath { get; }
    return:
      type: System.String
      description: "Il percorso del file virtuale."
  overload: System.Web.Hosting.VirtualFileBase.VirtualPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Web.Hosting.VirtualFileBase.#ctor
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualFileBase()
  nameWithType: VirtualFileBase.VirtualFileBase()
  fullName: System.Web.Hosting.VirtualFileBase.VirtualFileBase()
- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: VirtualFileBase.InitializeLifetimeService()
  fullName: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Hosting.VirtualFileBase.IsDirectory
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: IsDirectory
  nameWithType: VirtualFileBase.IsDirectory
  fullName: System.Web.Hosting.VirtualFileBase.IsDirectory
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Hosting.VirtualFileBase.Name
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: Name
  nameWithType: VirtualFileBase.Name
  fullName: System.Web.Hosting.VirtualFileBase.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Hosting.VirtualFileBase.VirtualPath
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualPath
  nameWithType: VirtualFileBase.VirtualPath
  fullName: System.Web.Hosting.VirtualFileBase.VirtualPath
- uid: System.Web.Hosting.VirtualFileBase.#ctor*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualFileBase
  nameWithType: VirtualFileBase.VirtualFileBase
- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: VirtualFileBase.InitializeLifetimeService
- uid: System.Web.Hosting.VirtualFileBase.IsDirectory*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: IsDirectory
  nameWithType: VirtualFileBase.IsDirectory
- uid: System.Web.Hosting.VirtualFileBase.Name*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: Name
  nameWithType: VirtualFileBase.Name
- uid: System.Web.Hosting.VirtualFileBase.VirtualPath*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualPath
  nameWithType: VirtualFileBase.VirtualPath
