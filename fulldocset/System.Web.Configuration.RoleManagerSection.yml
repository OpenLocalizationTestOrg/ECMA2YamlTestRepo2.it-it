### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.RoleManagerSection
  id: RoleManagerSection
  children:
  - System.Web.Configuration.RoleManagerSection.#ctor
  - System.Web.Configuration.RoleManagerSection.CacheRolesInCookie
  - System.Web.Configuration.RoleManagerSection.CookieName
  - System.Web.Configuration.RoleManagerSection.CookiePath
  - System.Web.Configuration.RoleManagerSection.CookieProtection
  - System.Web.Configuration.RoleManagerSection.CookieRequireSSL
  - System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration
  - System.Web.Configuration.RoleManagerSection.CookieTimeout
  - System.Web.Configuration.RoleManagerSection.CreatePersistentCookie
  - System.Web.Configuration.RoleManagerSection.DefaultProvider
  - System.Web.Configuration.RoleManagerSection.Domain
  - System.Web.Configuration.RoleManagerSection.Enabled
  - System.Web.Configuration.RoleManagerSection.MaxCachedResults
  - System.Web.Configuration.RoleManagerSection.Properties
  - System.Web.Configuration.RoleManagerSection.Providers
  langs:
  - csharp
  name: RoleManagerSection
  nameWithType: RoleManagerSection
  fullName: System.Web.Configuration.RoleManagerSection
  type: Class
  summary: "Definisce le impostazioni di configurazione che vengono utilizzate per supportare l&quot;infrastruttura di gestione del ruolo di applicazioni Web. Questa classe non può essere ereditata."
  remarks: "La classe RoleManagerSection fornisce un modo per accedere a livello di codice e di modificare il contenuto del `roleManager` sezione del file di configurazione."
  example:
  - "This section provides two code examples. The first demonstrates how to declaratively specify values for several properties of the RoleManagerSection class. The second demonstrates how to use the RoleManagerSection type.  \n  \n The following configuration file example shows how to declaratively specify values for several properties of the RoleManagerSection class.  \n  \n```  \n<system.web>  \n  <roleManager   \n    enabled=\"false\"   \n    cacheRolesInCookie=\"false\"   \n    cookieName=\".ASPXROLES\" cookieTimeout=\"30\"  \n    cookiePath=\"/\" cookieRequireSSL=\"false\"  \n    cookieSlidingExpiration=\"true\" createPersistentCookie=\"false\"  \n    cookieProtection=\"All\"   \n    defaultProvider=\"AspNetSqlRoleProvider\"  \n    maxCachedResults=\"25\"  >  \n    <providers>  \n      <add   \n        name=\"AspNetSqlRoleProvider\"  \n        connectionStringName=\"LocalSqlServer\"   \n        applicationName=\"/\"  \n        type=\"System.Web.Security.SqlRoleProvider, System.Web,  \n          Version=2.0.3600.0, Culture=neutral,  \n          PublicKeyToken=b03f5f7f11d50a3a\" />  \n      <add   \n        name=\"AspNetWindowsTokenRoleProvider\"   \n        applicationName=\"/\"  \n        type=\"System.Web.Security.WindowsTokenRoleProvider, System.Web,   \n          Version=2.0.3600.0, Culture=neutral,   \n          PublicKeyToken=b03f5f7f11d50a3a\" />  \n    </providers>  \n  </roleManager>  \n</system.web>  \n```  \n  \n The following code example demonstrates how to use the RoleManagerSection type.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_91_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#1](~/add/codesnippet/csharp/t-system.web.configurati_91_1.cs)]"
  syntax:
    content: 'public sealed class RoleManagerSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: RoleManagerSection()
  nameWithType: RoleManagerSection.RoleManagerSection()
  fullName: System.Web.Configuration.RoleManagerSection.RoleManagerSection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.Configuration.RoleManagerSection&quot;> </xref> classe utilizzando le impostazioni predefinite."
  remarks: "Il costruttore RoleManagerSection non deve essere utilizzato direttamente dal codice. Viene chiamato dal sistema di configurazione ASP.NET. Per ottenere un&quot;istanza di <xref:System.Web.Configuration.RoleManagerSection>classe utilizzando il <xref:System.Configuration.Configuration.GetSection%2A>(metodo).</xref:System.Configuration.Configuration.GetSection%2A> </xref:System.Web.Configuration.RoleManagerSection>       Nella tabella seguente mostra le impostazioni predefinite che vengono utilizzate per il costruttore RoleManagerSection.      | Proprietà | Il valore predefinito |   |--------------|-------------------|   | <xref:System.Web.Configuration.RoleManagerSection.Enabled%2A>| `false`|   | <xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A>| `false`|   | <xref:System.Web.Configuration.RoleManagerSection.CookieName%2A>|&quot;. ASPXROLES &quot;|   | <xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A>|&quot; /&quot;|   | <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>| `All`|   | <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>| `false`|   | <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>| `true`|   | <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>|&30;, in minuti |   | <xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A>| `false`|   | <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>|&quot; AspNetSqlRoleProvider &quot;|   | <xref:System.Web.Configuration.RoleManagerSection.Domain%2A>| Una stringa vuota (&quot;&quot;) |   | <xref:System.Web.Configuration.RoleManagerSection.MaxCachedResults%2A>|25|</xref:System.Web.Configuration.RoleManagerSection.MaxCachedResults%2A></xref:System.Web.Configuration.RoleManagerSection.Domain%2A></xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A></xref:System.Web.Configuration.RoleManagerSection.CreatePersistentCookie%2A></xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A></xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A></xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A></xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A></xref:System.Web.Configuration.RoleManagerSection.CookiePath%2A></xref:System.Web.Configuration.RoleManagerSection.CookieName%2A></xref:System.Web.Configuration.RoleManagerSection.CacheRolesInCookie%2A></xref:System.Web.Configuration.RoleManagerSection.Enabled%2A>"
  syntax:
    content: public RoleManagerSection ();
    parameters: []
  overload: System.Web.Configuration.RoleManagerSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie
  id: CacheRolesInCookie
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CacheRolesInCookie
  nameWithType: RoleManagerSection.CacheRolesInCookie
  fullName: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica se i ruoli dell&quot;utente corrente sono memorizzati in un cookie."
  remarks: "La proprietà CacheRolesInCookie restituisce un valore booleano che indica se è abilitata l&quot;archiviazione di cookie dei nomi dei ruoli.       Quando è impostata la proprietà CacheRolesInCookie `true` nel file di configurazione, le informazioni sui ruoli per ogni utente viene archiviate in un cookie sul client. Quando la gestione dei ruoli verifica per determinare se un utente è in un determinato ruolo, viene controllato il cookie dei ruoli prima di chiamare il provider di ruoli per controllare l&quot;elenco dei ruoli nell&quot;origine dati. Il cookie viene aggiornato in modo dinamico nel client di memorizzare nella cache i nomi di ruolo più recente convalidati.       È possibile migliorare l&quot;affidabilità dei nomi di ruoli memorizzati nella cache in un cookie specificando un <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>proprietà quando si configura il `roleManager` sezione del file di configurazione.</xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A> Il valore predefinito <xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>proprietà `All`, che crittografa i nomi dei ruoli nel cookie e verifica che il contenuto del cookie non è stato modificato.</xref:System.Web.Configuration.RoleManagerSection.CookieProtection%2A>"
  example:
  - "The following code example demonstrates how to use the CacheRolesInCookie property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#2](~/add/codesnippet/visualbasic/p-system.web.configurati_254_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#2](~/add/codesnippet/csharp/p-system.web.configurati_254_1.cs)]"
  syntax:
    content: public bool CacheRolesInCookie { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i ruoli dell&quot;utente corrente vengono memorizzati nella cache in un cookie. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CookieName
  id: CookieName
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CookieName
  nameWithType: RoleManagerSection.CookieName
  fullName: System.Web.Configuration.RoleManagerSection.CookieName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta il nome del cookie utilizzato per memorizzare i nomi di ruolo."
  remarks: "La proprietà CookieName restituisce il nome del cookie utilizzato per memorizzare i nomi di ruolo. È possibile specificare il nome del cookie in cui sono memorizzati i ruoli per l&quot;applicazione impostando il `cookieName` attributo nel file Web. config dell&quot;applicazione ASP.NET. Ciò risulta utile quando si desidera identificare in modo univoco un cookie per l&quot;applicazione oppure quando un cookie è condiviso tra più applicazioni."
  example:
  - "The following code example demonstrates how to use the CookieName property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_120_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#3](~/add/codesnippet/csharp/p-system.web.configurati_120_1.cs)]"
  syntax:
    content: public string CookieName { get; set; }
    return:
      type: System.String
      description: "Il nome del cookie utilizzato per memorizzare i nomi di ruolo. Il valore predefinito è &quot;. ASPXROLES&quot;."
  overload: System.Web.Configuration.RoleManagerSection.CookieName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CookiePath
  id: CookiePath
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CookiePath
  nameWithType: RoleManagerSection.CookiePath
  fullName: System.Web.Configuration.RoleManagerSection.CookiePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta il percorso virtuale del cookie utilizzato per memorizzare nella cache i nomi dei ruoli."
  remarks: "È possibile specificare il percorso del cookie in cui sono memorizzati i nomi di ruolo per l&quot;applicazione impostando il `cookiePath` attributo nel file Web. config dell&quot;applicazione ASP.NET. La proprietà CookiePath restituisce il valore di `cookiePath` attributo dal file Web. config. Il percorso è tra maiuscole e minuscole."
  example:
  - "The following code example demonstrates how to use the CookiePath property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#4](~/add/codesnippet/visualbasic/p-system.web.configurati_217_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#4](~/add/codesnippet/csharp/p-system.web.configurati_217_1.cs)]"
  syntax:
    content: public string CookiePath { get; set; }
    return:
      type: System.String
      description: "Il percorso del cookie utilizzato per archiviare i nomi dei ruoli. Il valore predefinito è &quot;/&quot;."
  overload: System.Web.Configuration.RoleManagerSection.CookiePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CookieProtection
  id: CookieProtection
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CookieProtection
  nameWithType: RoleManagerSection.CookieProtection
  fullName: System.Web.Configuration.RoleManagerSection.CookieProtection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta il tipo di sicurezza utilizzato per proteggere il cookie che memorizza nella cache i nomi dei ruoli."
  remarks: "La proprietà CookieProtection descrive come archiviate in modo sicuro le informazioni in un cookie. È possibile specificare il tipo di sicurezza del cookie in cui sono memorizzati i ruoli per l&quot;applicazione impostando il `cookieProtection` attributo nel file Web. config dell&quot;applicazione ASP.NET. Il `cookieProtection` attributo accetta un <xref:System.Web.Security.CookieProtection>valore di enumerazione `All`, `Encryption`, `None`, o `Validation`.</xref:System.Web.Security.CookieProtection> Il valore predefinito è `All`. Assicurarsi di usare il valore predefinito per la proprietà CookieProtection se desideri che la convalida dei dati sia la crittografia per proteggere il cookie. Per migliorare la protezione del cookie, è inoltre possibile impostare il <xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>proprietà `true`.</xref:System.Web.Configuration.RoleManagerSection.CookieRequireSSL%2A>"
  example:
  - "The following code example demonstrates how to use the CookieProtection property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#5](~/add/codesnippet/visualbasic/p-system.web.configurati_134_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#5](~/add/codesnippet/csharp/p-system.web.configurati_134_1.cs)]"
  syntax:
    content: public System.Web.Security.CookieProtection CookieProtection { get; set; }
    return:
      type: System.Web.Security.CookieProtection
      description: "Il tipo di protezione utilizzato all&quot;interno del cookie in cui sono memorizzati i nomi di ruolo. Il valore predefinito è <xref uid=&quot;langword_csharp_All&quot; name=&quot;All&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.RoleManagerSection.CookieProtection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CookieRequireSSL
  id: CookieRequireSSL
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CookieRequireSSL
  nameWithType: RoleManagerSection.CookieRequireSSL
  fullName: System.Web.Configuration.RoleManagerSection.CookieRequireSSL
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica se il cookie viene utilizzato per memorizzare i nomi di ruolo richiede una connessione Secure Sockets Layer (SSL) per la restituzione al server."
  remarks: "È possibile specificare se SSL è necessaria per restituire il cookie dei nomi di ruolo per il server impostando la `cookieRequireSSL` attributo nel file Web. config dell&quot;applicazione ASP.NET."
  example:
  - "The following code example demonstrates how to use the CookieRequireSSL property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#6](~/add/codesnippet/visualbasic/p-system.web.configurati_311_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#6](~/add/codesnippet/csharp/p-system.web.configurati_311_1.cs)]"
  syntax:
    content: public bool CookieRequireSSL { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è necessaria una connessione SSL per restituire al server il cookie in cui sono memorizzati i nomi dei ruoli; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.RoleManagerSection.CookieRequireSSL*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration
  id: CookieSlidingExpiration
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CookieSlidingExpiration
  nameWithType: RoleManagerSection.CookieSlidingExpiration
  fullName: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica se il cookie viene utilizzato per memorizzare nella cache i nomi dei ruoli verrà reimpostato periodicamente."
  remarks: "È possibile specificare se il cookie viene utilizzato per memorizzare i nomi di ruolo è periodicamente reimpostare o ha un punto fisso di scadenza utilizzando il `cookieSlidingExpiration` attributo nel file Web. config dell&quot;applicazione ASP.NET. Se `true`, la scadenza del cookie è inizialmente impostata per la data e ora correnti più il <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>proprietà, in minuti.</xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> Mentre l&quot;utente continua a utilizzare attivamente l&quot;applicazione ASP.NET la data di scadenza del cookie è aggiornate automaticamente, se è minore della metà del <xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A>rimanenti.</xref:System.Web.Configuration.RoleManagerSection.CookieTimeout%2A> Il valore predefinito è `true`."
  example:
  - "The following code example demonstrates how to use the CookieSlidingExpiration property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#7](~/add/codesnippet/visualbasic/p-system.web.configurati_403_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#7](~/add/codesnippet/csharp/p-system.web.configurati_403_1.cs)]"
  syntax:
    content: public bool CookieSlidingExpiration { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la data di scadenza cookie di nomi di ruolo e l&quot;ora verranno reimpostate periodicamente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CookieTimeout
  id: CookieTimeout
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CookieTimeout
  nameWithType: RoleManagerSection.CookieTimeout
  fullName: System.Web.Configuration.RoleManagerSection.CookieTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta il numero di minuti prima della scadenza del cookie utilizzato per memorizzare i nomi di ruolo."
  remarks: "La proprietà CookieTimeout imposta un valore che specifica il numero di minuti prima della scadenza del cookie dei nomi di ruolo. Il valore predefinito è 30 minuti. Se il <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>proprietà `false`, la proprietà CookieTimeout viene ignorata.</xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A>"
  example:
  - "The following code example demonstrates how to use the CookieTimeout property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#8](~/add/codesnippet/visualbasic/p-system.web.configurati_267_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#8](~/add/codesnippet/csharp/p-system.web.configurati_267_1.cs)]"
  syntax:
    content: public TimeSpan CookieTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Oggetto <xref:System.TimeSpan>che rappresenta il numero di minuti prima della scadenza del cookie utilizzato per memorizzare i nomi di ruolo.</xref:System.TimeSpan> Il valore predefinito è 30 minuti."
  overload: System.Web.Configuration.RoleManagerSection.CookieTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie
  id: CreatePersistentCookie
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: CreatePersistentCookie
  nameWithType: RoleManagerSection.CreatePersistentCookie
  fullName: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Indica se un cookie basato sulla sessione o un cookie permanente viene utilizzato per memorizzare nella cache i nomi dei ruoli."
  remarks: "La proprietà CreatePersistentCookie indica se il cookie viene utilizzato per memorizzare i nomi di ruolo deve essere un cookie basato sulla sessione, il che significa che il cookie viene perso quando il browser viene chiuso, oppure un cookie permanente, il che significa che il cookie è disponibile, le sessioni del browser. Il valore predefinito è `false`, che indica che un cookie basato sulla sessione viene utilizzato per memorizzare nella cache i nomi dei ruoli."
  example:
  - "The following code example demonstrates how to use the CreatePersistentCookie property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#9](~/add/codesnippet/visualbasic/p-system.web.configurati_216_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#9](~/add/codesnippet/csharp/p-system.web.configurati_216_1.cs)]"
  syntax:
    content: public bool CreatePersistentCookie { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per rendere persistente il cookie dei nomi di ruolo per le sessioni del browser; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.DefaultProvider
  id: DefaultProvider
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: DefaultProvider
  nameWithType: RoleManagerSection.DefaultProvider
  fullName: System.Web.Configuration.RoleManagerSection.DefaultProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta il nome del provider predefinito che viene utilizzato per gestire i ruoli."
  remarks: "La proprietà DefaultProvider deve corrispondere a un valore denominato nella `providers` sottosezione del `roleManager` sezione di un file di configurazione. Una stringa vuota (&quot;&quot;) non è un valore valido per la proprietà DefaultProvider."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration%2A> property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#10](~/add/codesnippet/visualbasic/p-system.web.configurati_283_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#10](~/add/codesnippet/csharp/p-system.web.configurati_283_1.cs)]"
  syntax:
    content: public string DefaultProvider { get; set; }
    return:
      type: System.String
      description: "Il nome di un provider di <xref:System.Web.Configuration.RoleManagerSection.Providers*>.</xref:System.Web.Configuration.RoleManagerSection.Providers*> Il valore predefinito è &quot;AspNetSqlRoleProvider&quot;."
  overload: System.Web.Configuration.RoleManagerSection.DefaultProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.Domain
  id: Domain
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: Domain
  nameWithType: RoleManagerSection.Domain
  fullName: System.Web.Configuration.RoleManagerSection.Domain
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta il nome del dominio a cui è associato il cookie viene utilizzato per memorizzare nella cache i nomi dei ruoli."
  remarks: "La proprietà di dominio è impostata nella configurazione per un&quot;applicazione ASP.NET tramite la `domain` attributo del `roleManager` elemento di configurazione. Se viene specificato alcun valore nella configurazione per il `domain` attributo, la proprietà di dominio restituisce `null` e il ruolo del nome cookie valori predefiniti di dominio per il comportamento del <xref:System.Web.HttpCookie.Domain%2A>proprietà.</xref:System.Web.HttpCookie.Domain%2A> Il valore predefinito è una stringa vuota."
  syntax:
    content: public string Domain { get; set; }
    return:
      type: System.String
      description: "Il <xref:System.Web.HttpCookie.Domain*>del cookie utilizzato per memorizzare i nomi di ruolo.</xref:System.Web.HttpCookie.Domain*> Il valore predefinito è una stringa vuota (<xref uid=&quot;langword_csharp_&quot;&quot;&quot; name=&quot;&quot;&quot;&quot; href=&quot;&quot;></xref>)."
  overload: System.Web.Configuration.RoleManagerSection.Domain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.Enabled
  id: Enabled
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: Enabled
  nameWithType: RoleManagerSection.Enabled
  fullName: System.Web.Configuration.RoleManagerSection.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta un valore che indica se è abilitata la funzionalità di gestione di ruoli ASP.NET."
  remarks: "La proprietà Enabled restituisce un valore booleano che indica se la funzionalità di gestione di ruoli ASP.NET è accessibile in fase di esecuzione."
  example:
  - "The following code example demonstrates how to use the Enabled property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#12](~/add/codesnippet/visualbasic/p-system.web.configurati_156_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#12](~/add/codesnippet/csharp/p-system.web.configurati_156_1.cs)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è abilitata la funzionalità di gestione di ruoli ASP.NET; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.RoleManagerSection.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.MaxCachedResults
  id: MaxCachedResults
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: MaxCachedResults
  nameWithType: RoleManagerSection.MaxCachedResults
  fullName: System.Web.Configuration.RoleManagerSection.MaxCachedResults
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene o imposta il numero massimo di ruoli che memorizza nella cache di ASP.NET nel cookie ruolo."
  remarks: "Il <xref:System.Web.Security.Roles.MaxCachedResults%2A>proprietà restituisce un intero che indica il numero massimo di ruoli memorizzati nel cookie ruolo ASP.NET.</xref:System.Web.Security.Roles.MaxCachedResults%2A> Il valore predefinito è 25."
  syntax:
    content: public int MaxCachedResults { get; set; }
    return:
      type: System.Int32
      description: "Un valore che indica il numero massimo di ruoli ASP.NET memorizza nella cache nel cookie ruolo. Il valore predefinito è 25."
  overload: System.Web.Configuration.RoleManagerSection.MaxCachedResults*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.Properties
  id: Properties
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: Properties
  nameWithType: RoleManagerSection.Properties
  fullName: System.Web.Configuration.RoleManagerSection.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Da aggiungere."
  overload: System.Web.Configuration.RoleManagerSection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.RoleManagerSection.Providers
  id: Providers
  parent: System.Web.Configuration.RoleManagerSection
  langs:
  - csharp
  name: Providers
  nameWithType: RoleManagerSection.Providers
  fullName: System.Web.Configuration.RoleManagerSection.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Ottiene un <xref href=&quot;System.Configuration.ProviderSettingsCollection&quot;> </xref> oggetto <xref href=&quot;System.Configuration.ProviderSettings&quot;> </xref> elementi."
  remarks: "Provider gestione ruoli sono componenti che forniscono l&quot;accesso per i tipi di ruoli per un sito. È possibile specificare il provider di gestione dei ruoli nel `providers` sottosezione del `roleManager` sezione di un file di configurazione.       Il <xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>proprietà specifica il provider utilizzato per impostazione predefinita.</xref:System.Web.Configuration.RoleManagerSection.DefaultProvider%2A>"
  example:
  - "The following code example demonstrates how to use the Providers property. This code example is part of a larger example provided for the <xref:System.Web.Configuration.RoleManagerSection> class.  \n  \n [!code-vb[System.Web.Configuration.RoleManagerSection#13](~/add/codesnippet/visualbasic/p-system.web.configurati_354_1.vb)]\n [!code-cs[System.Web.Configuration.RoleManagerSection#13](~/add/codesnippet/csharp/p-system.web.configurati_354_1.cs)]"
  syntax:
    content: public System.Configuration.ProviderSettingsCollection Providers { get; }
    return:
      type: System.Configuration.ProviderSettingsCollection
      description: "A <xref href=&quot;System.Configuration.ProviderSettingsCollection&quot;> </xref> che contiene i provider di impostazioni definite all&quot;interno di <xref uid=&quot;langword_csharp_providers&quot; name=&quot;providers&quot; href=&quot;&quot;> </xref> sottosezione del <xref uid=&quot;langword_csharp_roleManager&quot; name=&quot;roleManager&quot; href=&quot;&quot;> </xref> sezione del file di configurazione."
  overload: System.Web.Configuration.RoleManagerSection.Providers*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Web.Configuration.RoleManagerSection.#ctor
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: RoleManagerSection()
  nameWithType: RoleManagerSection.RoleManagerSection()
  fullName: System.Web.Configuration.RoleManagerSection.RoleManagerSection()
- uid: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CacheRolesInCookie
  nameWithType: RoleManagerSection.CacheRolesInCookie
  fullName: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Configuration.RoleManagerSection.CookieName
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieName
  nameWithType: RoleManagerSection.CookieName
  fullName: System.Web.Configuration.RoleManagerSection.CookieName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.RoleManagerSection.CookiePath
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookiePath
  nameWithType: RoleManagerSection.CookiePath
  fullName: System.Web.Configuration.RoleManagerSection.CookiePath
- uid: System.Web.Configuration.RoleManagerSection.CookieProtection
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieProtection
  nameWithType: RoleManagerSection.CookieProtection
  fullName: System.Web.Configuration.RoleManagerSection.CookieProtection
- uid: System.Web.Security.CookieProtection
  parent: System.Web.Security
  isExternal: false
  name: CookieProtection
  nameWithType: CookieProtection
  fullName: System.Web.Security.CookieProtection
- uid: System.Web.Configuration.RoleManagerSection.CookieRequireSSL
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieRequireSSL
  nameWithType: RoleManagerSection.CookieRequireSSL
  fullName: System.Web.Configuration.RoleManagerSection.CookieRequireSSL
- uid: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieSlidingExpiration
  nameWithType: RoleManagerSection.CookieSlidingExpiration
  fullName: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration
- uid: System.Web.Configuration.RoleManagerSection.CookieTimeout
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieTimeout
  nameWithType: RoleManagerSection.CookieTimeout
  fullName: System.Web.Configuration.RoleManagerSection.CookieTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CreatePersistentCookie
  nameWithType: RoleManagerSection.CreatePersistentCookie
  fullName: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie
- uid: System.Web.Configuration.RoleManagerSection.DefaultProvider
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: DefaultProvider
  nameWithType: RoleManagerSection.DefaultProvider
  fullName: System.Web.Configuration.RoleManagerSection.DefaultProvider
- uid: System.Web.Configuration.RoleManagerSection.Domain
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Domain
  nameWithType: RoleManagerSection.Domain
  fullName: System.Web.Configuration.RoleManagerSection.Domain
- uid: System.Web.Configuration.RoleManagerSection.Enabled
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Enabled
  nameWithType: RoleManagerSection.Enabled
  fullName: System.Web.Configuration.RoleManagerSection.Enabled
- uid: System.Web.Configuration.RoleManagerSection.MaxCachedResults
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: MaxCachedResults
  nameWithType: RoleManagerSection.MaxCachedResults
  fullName: System.Web.Configuration.RoleManagerSection.MaxCachedResults
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Configuration.RoleManagerSection.Properties
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Properties
  nameWithType: RoleManagerSection.Properties
  fullName: System.Web.Configuration.RoleManagerSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.RoleManagerSection.Providers
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Providers
  nameWithType: RoleManagerSection.Providers
  fullName: System.Web.Configuration.RoleManagerSection.Providers
- uid: System.Configuration.ProviderSettingsCollection
  parent: System.Configuration
  isExternal: false
  name: ProviderSettingsCollection
  nameWithType: ProviderSettingsCollection
  fullName: System.Configuration.ProviderSettingsCollection
- uid: System.Web.Configuration.RoleManagerSection.#ctor*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: RoleManagerSection
  nameWithType: RoleManagerSection.RoleManagerSection
- uid: System.Web.Configuration.RoleManagerSection.CacheRolesInCookie*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CacheRolesInCookie
  nameWithType: RoleManagerSection.CacheRolesInCookie
- uid: System.Web.Configuration.RoleManagerSection.CookieName*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieName
  nameWithType: RoleManagerSection.CookieName
- uid: System.Web.Configuration.RoleManagerSection.CookiePath*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookiePath
  nameWithType: RoleManagerSection.CookiePath
- uid: System.Web.Configuration.RoleManagerSection.CookieProtection*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieProtection
  nameWithType: RoleManagerSection.CookieProtection
- uid: System.Web.Configuration.RoleManagerSection.CookieRequireSSL*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieRequireSSL
  nameWithType: RoleManagerSection.CookieRequireSSL
- uid: System.Web.Configuration.RoleManagerSection.CookieSlidingExpiration*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieSlidingExpiration
  nameWithType: RoleManagerSection.CookieSlidingExpiration
- uid: System.Web.Configuration.RoleManagerSection.CookieTimeout*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CookieTimeout
  nameWithType: RoleManagerSection.CookieTimeout
- uid: System.Web.Configuration.RoleManagerSection.CreatePersistentCookie*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: CreatePersistentCookie
  nameWithType: RoleManagerSection.CreatePersistentCookie
- uid: System.Web.Configuration.RoleManagerSection.DefaultProvider*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: DefaultProvider
  nameWithType: RoleManagerSection.DefaultProvider
- uid: System.Web.Configuration.RoleManagerSection.Domain*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Domain
  nameWithType: RoleManagerSection.Domain
- uid: System.Web.Configuration.RoleManagerSection.Enabled*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Enabled
  nameWithType: RoleManagerSection.Enabled
- uid: System.Web.Configuration.RoleManagerSection.MaxCachedResults*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: MaxCachedResults
  nameWithType: RoleManagerSection.MaxCachedResults
- uid: System.Web.Configuration.RoleManagerSection.Properties*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Properties
  nameWithType: RoleManagerSection.Properties
- uid: System.Web.Configuration.RoleManagerSection.Providers*
  parent: System.Web.Configuration.RoleManagerSection
  isExternal: false
  name: Providers
  nameWithType: RoleManagerSection.Providers
