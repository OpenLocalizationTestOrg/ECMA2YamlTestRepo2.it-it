### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeDelegateCreateExpression
  id: CodeDelegateCreateExpression
  children:
  - System.CodeDom.CodeDelegateCreateExpression.#ctor
  - System.CodeDom.CodeDelegateCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression,System.String)
  - System.CodeDom.CodeDelegateCreateExpression.DelegateType
  - System.CodeDom.CodeDelegateCreateExpression.MethodName
  - System.CodeDom.CodeDelegateCreateExpression.TargetObject
  langs:
  - csharp
  name: CodeDelegateCreateExpression
  nameWithType: CodeDelegateCreateExpression
  fullName: System.CodeDom.CodeDelegateCreateExpression
  type: Class
  summary: "Rappresenta un&quot;espressione che crea un delegato."
  remarks: "CodeDelegateCreateExpression rappresenta il codice che crea un delegato. CodeDelegateCreateExpression viene spesso usato con <xref:System.CodeDom.CodeAttachEventStatement>o <xref:System.CodeDom.CodeRemoveEventStatement>per rappresentare un gestore eventi per associare o rimuovere da un evento.</xref:System.CodeDom.CodeRemoveEventStatement> </xref:System.CodeDom.CodeAttachEventStatement>       Il <xref:System.CodeDom.CodeDelegateCreateExpression.DelegateType%2A>proprietà specifica il tipo del delegato da creare.</xref:System.CodeDom.CodeDelegateCreateExpression.DelegateType%2A> Il <xref:System.CodeDom.CodeDelegateCreateExpression.TargetObject%2A>proprietà indica l&quot;oggetto che contiene il metodo del gestore eventi.</xref:System.CodeDom.CodeDelegateCreateExpression.TargetObject%2A> Il <xref:System.CodeDom.CodeDelegateCreateExpression.MethodName%2A>proprietà indica il nome del metodo del gestore eventi la cui firma del metodo corrisponde la firma del metodo del delegato.</xref:System.CodeDom.CodeDelegateCreateExpression.MethodName%2A>       In c#, un&quot;espressione di creazione del delegato è in genere il formato seguente: `new EventHandler(this.HandleEventMethod)`. In Visual Basic, un&quot;espressione di creazione del delegato è in genere il formato seguente: `AddressOf Me.HandleEventMethod`."
  example:
  - "The following example code uses a CodeDelegateCreateExpression to create a delegate.  \n  \n [!code-cs[CodeAttachEventStatementExample#3](~/add/codesnippet/csharp/t-system.codedom.codedel_0_1.cs)]\n [!code-vb[CodeAttachEventStatementExample#3](~/add/codesnippet/visualbasic/t-system.codedom.codedel_0_1.vb)]\n [!code-cpp[CodeAttachEventStatementExample#3](~/add/codesnippet/cpp/t-system.codedom.codedel_0_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeDelegateCreateExpression : System.CodeDom.CodeExpression
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeExpression
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  platform:
  - net462
- uid: System.CodeDom.CodeDelegateCreateExpression.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeDelegateCreateExpression
  langs:
  - csharp
  name: CodeDelegateCreateExpression()
  nameWithType: CodeDelegateCreateExpression.CodeDelegateCreateExpression()
  fullName: System.CodeDom.CodeDelegateCreateExpression.CodeDelegateCreateExpression()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.CodeDom.CodeDelegateCreateExpression&quot;> </xref> classe."
  syntax:
    content: public CodeDelegateCreateExpression ();
    parameters: []
  overload: System.CodeDom.CodeDelegateCreateExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeDelegateCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression,System.String)
  id: '#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression,System.String)'
  parent: System.CodeDom.CodeDelegateCreateExpression
  langs:
  - csharp
  name: CodeDelegateCreateExpression(CodeTypeReference,CodeExpression,String)
  nameWithType: CodeDelegateCreateExpression.CodeDelegateCreateExpression(CodeTypeReference,CodeExpression,String)
  fullName: System.CodeDom.CodeDelegateCreateExpression.CodeDelegateCreateExpression(CodeTypeReference,CodeExpression,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.CodeDom.CodeDelegateCreateExpression&quot;> </xref> classe."
  syntax:
    content: public CodeDelegateCreateExpression (System.CodeDom.CodeTypeReference delegateType, System.CodeDom.CodeExpression targetObject, string methodName);
    parameters:
    - id: delegateType
      type: System.CodeDom.CodeTypeReference
      description: "Oggetto <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> che indica il tipo di dati del delegato."
    - id: targetObject
      type: System.CodeDom.CodeExpression
      description: "Oggetto <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> che indica l&quot;oggetto che contiene il metodo del gestore eventi."
    - id: methodName
      type: System.String
      description: "Il nome del metodo del gestore eventi."
  overload: System.CodeDom.CodeDelegateCreateExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeDelegateCreateExpression.DelegateType
  id: DelegateType
  parent: System.CodeDom.CodeDelegateCreateExpression
  langs:
  - csharp
  name: DelegateType
  nameWithType: CodeDelegateCreateExpression.DelegateType
  fullName: System.CodeDom.CodeDelegateCreateExpression.DelegateType
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Ottiene o imposta il tipo di dati del delegato."
  syntax:
    content: public System.CodeDom.CodeTypeReference DelegateType { get; set; }
    return:
      type: System.CodeDom.CodeTypeReference
      description: "Oggetto <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> che indica il tipo di dati del delegato."
  overload: System.CodeDom.CodeDelegateCreateExpression.DelegateType*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeDelegateCreateExpression.MethodName
  id: MethodName
  parent: System.CodeDom.CodeDelegateCreateExpression
  langs:
  - csharp
  name: MethodName
  nameWithType: CodeDelegateCreateExpression.MethodName
  fullName: System.CodeDom.CodeDelegateCreateExpression.MethodName
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Ottiene o imposta il nome del metodo del gestore eventi."
  syntax:
    content: public string MethodName { get; set; }
    return:
      type: System.String
      description: "Il nome del metodo del gestore eventi."
  overload: System.CodeDom.CodeDelegateCreateExpression.MethodName*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeDelegateCreateExpression.TargetObject
  id: TargetObject
  parent: System.CodeDom.CodeDelegateCreateExpression
  langs:
  - csharp
  name: TargetObject
  nameWithType: CodeDelegateCreateExpression.TargetObject
  fullName: System.CodeDom.CodeDelegateCreateExpression.TargetObject
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Ottiene o imposta l&quot;oggetto che contiene il metodo del gestore eventi."
  syntax:
    content: public System.CodeDom.CodeExpression TargetObject { get; set; }
    return:
      type: System.CodeDom.CodeExpression
      description: "Oggetto <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> che indica l&quot;oggetto che contiene il metodo del gestore eventi."
  overload: System.CodeDom.CodeDelegateCreateExpression.TargetObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeExpression
  isExternal: false
  name: System.CodeDom.CodeExpression
- uid: System.CodeDom.CodeDelegateCreateExpression.#ctor
  parent: System.CodeDom.CodeDelegateCreateExpression
  isExternal: false
  name: CodeDelegateCreateExpression()
  nameWithType: CodeDelegateCreateExpression.CodeDelegateCreateExpression()
  fullName: System.CodeDom.CodeDelegateCreateExpression.CodeDelegateCreateExpression()
- uid: System.CodeDom.CodeDelegateCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression,System.String)
  parent: System.CodeDom.CodeDelegateCreateExpression
  isExternal: false
  name: CodeDelegateCreateExpression(CodeTypeReference,CodeExpression,String)
  nameWithType: CodeDelegateCreateExpression.CodeDelegateCreateExpression(CodeTypeReference,CodeExpression,String)
  fullName: System.CodeDom.CodeDelegateCreateExpression.CodeDelegateCreateExpression(CodeTypeReference,CodeExpression,String)
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeDelegateCreateExpression.DelegateType
  parent: System.CodeDom.CodeDelegateCreateExpression
  isExternal: false
  name: DelegateType
  nameWithType: CodeDelegateCreateExpression.DelegateType
  fullName: System.CodeDom.CodeDelegateCreateExpression.DelegateType
- uid: System.CodeDom.CodeDelegateCreateExpression.MethodName
  parent: System.CodeDom.CodeDelegateCreateExpression
  isExternal: false
  name: MethodName
  nameWithType: CodeDelegateCreateExpression.MethodName
  fullName: System.CodeDom.CodeDelegateCreateExpression.MethodName
- uid: System.CodeDom.CodeDelegateCreateExpression.TargetObject
  parent: System.CodeDom.CodeDelegateCreateExpression
  isExternal: false
  name: TargetObject
  nameWithType: CodeDelegateCreateExpression.TargetObject
  fullName: System.CodeDom.CodeDelegateCreateExpression.TargetObject
- uid: System.CodeDom.CodeDelegateCreateExpression.#ctor*
  parent: System.CodeDom.CodeDelegateCreateExpression
  isExternal: false
  name: CodeDelegateCreateExpression
  nameWithType: CodeDelegateCreateExpression.CodeDelegateCreateExpression
- uid: System.CodeDom.CodeDelegateCreateExpression.DelegateType*
  parent: System.CodeDom.CodeDelegateCreateExpression
  isExternal: false
  name: DelegateType
  nameWithType: CodeDelegateCreateExpression.DelegateType
- uid: System.CodeDom.CodeDelegateCreateExpression.MethodName*
  parent: System.CodeDom.CodeDelegateCreateExpression
  isExternal: false
  name: MethodName
  nameWithType: CodeDelegateCreateExpression.MethodName
- uid: System.CodeDom.CodeDelegateCreateExpression.TargetObject*
  parent: System.CodeDom.CodeDelegateCreateExpression
  isExternal: false
  name: TargetObject
  nameWithType: CodeDelegateCreateExpression.TargetObject
