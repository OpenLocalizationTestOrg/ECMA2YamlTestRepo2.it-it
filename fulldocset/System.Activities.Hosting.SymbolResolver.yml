### YamlMime:ManagedReference
items:
- uid: System.Activities.Hosting.SymbolResolver
  id: SymbolResolver
  children:
  - System.Activities.Hosting.SymbolResolver.#ctor
  - System.Activities.Hosting.SymbolResolver.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object)
  - System.Activities.Hosting.SymbolResolver.Add(System.String,System.Type)
  - System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object,System.Type)
  - System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment
  - System.Activities.Hosting.SymbolResolver.Clear
  - System.Activities.Hosting.SymbolResolver.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - System.Activities.Hosting.SymbolResolver.ContainsKey(System.String)
  - System.Activities.Hosting.SymbolResolver.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  - System.Activities.Hosting.SymbolResolver.Count
  - System.Activities.Hosting.SymbolResolver.GetEnumerator
  - System.Activities.Hosting.SymbolResolver.IsReadOnly
  - System.Activities.Hosting.SymbolResolver.Item(System.String)
  - System.Activities.Hosting.SymbolResolver.Keys
  - System.Activities.Hosting.SymbolResolver.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - System.Activities.Hosting.SymbolResolver.Remove(System.String)
  - System.Activities.Hosting.SymbolResolver.System#Collections#IEnumerable#GetEnumerator
  - System.Activities.Hosting.SymbolResolver.TryGetValue(System.String,System.Object@)
  - System.Activities.Hosting.SymbolResolver.Values
  langs:
  - csharp
  name: SymbolResolver
  nameWithType: SymbolResolver
  fullName: System.Activities.Hosting.SymbolResolver
  type: Class
  summary: "SymbolResolver è un&quot;estensione per fornire un host <xref href=&quot;System.Activities.LocationReferenceEnvironment&quot;> </xref> contenente oggetti che possono essere dereferenziati da un nome di stringa.  Non vengono mantenuti i valori forniti tramite SymbolResolver.  Persistenza dei valori di SymbolResolver è responsabilità dell&quot;host."
  syntax:
    content: 'public sealed class SymbolResolver : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,object>>, System.Collections.Generic.IDictionary<string,object>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  - System.Collections.Generic.IDictionary<System.String,System.Object>
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.#ctor
  id: '#ctor'
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: SymbolResolver()
  nameWithType: SymbolResolver.SymbolResolver()
  fullName: System.Activities.Hosting.SymbolResolver.SymbolResolver()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref> classe."
  syntax:
    content: public SymbolResolver ();
    parameters: []
  overload: System.Activities.Hosting.SymbolResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Add(KeyValuePair<String,Object>)
  nameWithType: SymbolResolver.Add(KeyValuePair<String,Object>)
  fullName: System.Activities.Hosting.SymbolResolver.Add(KeyValuePair<String,Object>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Aggiunge un simbolo con la coppia chiave/valore specificata."
  syntax:
    content: public void Add (System.Collections.Generic.KeyValuePair<string,object> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
      description: "Simbolo da aggiungere."
  overload: System.Activities.Hosting.SymbolResolver.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: SymbolResolver.Add(String,Object)
  fullName: System.Activities.Hosting.SymbolResolver.Add(String,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Aggiunge un simbolo con il nome di simbolo specificato e il valore."
  syntax:
    content: public void Add (string key, object value);
    parameters:
    - id: key
      type: System.String
      description: "Il nome del simbolo."
    - id: value
      type: System.Object
      description: "Il valore del simbolo a cui fa riferimento."
  overload: System.Activities.Hosting.SymbolResolver.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Add(System.String,System.Type)
  id: Add(System.String,System.Type)
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Add(String,Type)
  nameWithType: SymbolResolver.Add(String,Type)
  fullName: System.Activities.Hosting.SymbolResolver.Add(String,Type)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Aggiunge un simbolo con il nome di simbolo specificato e il tipo."
  remarks: "Il simbolo viene aggiunto con il valore predefinito per il tipo specificato."
  syntax:
    content: public void Add (string key, Type type);
    parameters:
    - id: key
      type: System.String
      description: "Il nome del simbolo."
    - id: type
      type: System.Type
      description: "Il tipo del valore del simbolo."
  overload: System.Activities.Hosting.SymbolResolver.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object,System.Type)
  id: Add(System.String,System.Object,System.Type)
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Add(String,Object,Type)
  nameWithType: SymbolResolver.Add(String,Object,Type)
  fullName: System.Activities.Hosting.SymbolResolver.Add(String,Object,Type)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Aggiunge un simbolo con il nome di simbolo specificato, il valore e tipo."
  syntax:
    content: public void Add (string key, object value, Type type);
    parameters:
    - id: key
      type: System.String
      description: "Il nome del simbolo."
    - id: value
      type: System.Object
      description: "Il valore del simbolo a cui fa riferimento."
    - id: type
      type: System.Type
      description: "Il tipo del valore del simbolo."
  overload: System.Activities.Hosting.SymbolResolver.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment
  id: AsLocationReferenceEnvironment
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: AsLocationReferenceEnvironment()
  nameWithType: SymbolResolver.AsLocationReferenceEnvironment()
  fullName: System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Restituisce un <xref href=&quot;System.Activities.LocationReferenceEnvironment&quot;> </xref> i valori di istanza che consente l&quot;accesso ai riferimenti dei simboli in <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref> rappresentato come <xref href=&quot;System.Activities.LocationReference&quot;> </xref> oggetti."
  syntax:
    content: public System.Activities.LocationReferenceEnvironment AsLocationReferenceEnvironment ();
    parameters: []
    return:
      type: System.Activities.LocationReferenceEnvironment
      description: "Un riferimento di percorso che consente l&quot;accesso a materiale di riferimento per i valori dei simboli in <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref> rappresentato come <xref href=&quot;System.Activities.LocationReference&quot;> </xref> oggetti."
  overload: System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Clear
  id: Clear
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Clear()
  nameWithType: SymbolResolver.Clear()
  fullName: System.Activities.Hosting.SymbolResolver.Clear()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Rimuove tutti i simboli di <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Activities.Hosting.SymbolResolver.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Contains(KeyValuePair<String,Object>)
  nameWithType: SymbolResolver.Contains(KeyValuePair<String,Object>)
  fullName: System.Activities.Hosting.SymbolResolver.Contains(KeyValuePair<String,Object>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Restituisce un valore che indica se il <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref> contiene il simbolo specificato."
  syntax:
    content: public bool Contains (System.Collections.Generic.KeyValuePair<string,object> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
      description: "Il simbolo come coppia chiave/valore da individuare nella <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref> contiene il simbolo specificato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Hosting.SymbolResolver.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: SymbolResolver.ContainsKey(String)
  fullName: System.Activities.Hosting.SymbolResolver.ContainsKey(String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Restituisce un valore che indica se il <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref> contiene un simbolo con la chiave specificata."
  syntax:
    content: public bool ContainsKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "La chiave del simbolo da individuare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref> contiene un simbolo con la chiave; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Hosting.SymbolResolver.ContainsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  id: CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: CopyTo(KeyValuePair<String,Object>,Int32)
  nameWithType: SymbolResolver.CopyTo(KeyValuePair<String,Object>,Int32)
  fullName: System.Activities.Hosting.SymbolResolver.CopyTo(KeyValuePair<String,Object>,Int32)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Copia i simboli del <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref> a una matrice unidimensionale esistente di coppie chiave/valore, a partire dall&quot;indice di matrice specificato."
  syntax:
    content: public void CopyTo (System.Collections.Generic.KeyValuePair<string,object>[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}[]
      description: "Matrice unidimensionale di coppie chiave/valore da copiare i simboli. La matrice deve avere un&quot;indicizzazione in base zero."
    - id: arrayIndex
      type: System.Int32
      description: "Indice in base zero nella matrice di destinazione da cui iniziare la copia."
  overload: System.Activities.Hosting.SymbolResolver.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Count
  id: Count
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Count
  nameWithType: SymbolResolver.Count
  fullName: System.Activities.Hosting.SymbolResolver.Count
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Ottiene il numero di simboli contenuti nel <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Il numero di simboli contenuti nel <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>."
  overload: System.Activities.Hosting.SymbolResolver.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.GetEnumerator
  id: GetEnumerator
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SymbolResolver.GetEnumerator()
  fullName: System.Activities.Hosting.SymbolResolver.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Restituisce un enumeratore che scorre una raccolta di coppie chiave/valore in cui le chiavi sono i nomi dei simboli e i valori i valori dei simboli."
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "Un enumeratore che scorre una raccolta di coppie chiave/valore."
  overload: System.Activities.Hosting.SymbolResolver.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.IsReadOnly
  id: IsReadOnly
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SymbolResolver.IsReadOnly
  fullName: System.Activities.Hosting.SymbolResolver.IsReadOnly
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Ottiene un valore che indica se il dizionario di simboli nel <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref> è di sola lettura."
  remarks: "Questa proprietà restituisce sempre `false`."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Activities.Hosting.SymbolResolver.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Item(System.String)
  id: Item(System.String)
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Item(String)
  nameWithType: SymbolResolver.Item(String)
  fullName: System.Activities.Hosting.SymbolResolver.Item(String)
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Ottiene o imposta il valore dell&quot;elemento associato alla chiave specificata."
  syntax:
    content: public object this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: "La chiave dell&quot;elemento."
    return:
      type: System.Object
      description: "Il valore dell&quot;elemento associato alla chiave specificata."
  overload: System.Activities.Hosting.SymbolResolver.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Keys
  id: Keys
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Keys
  nameWithType: SymbolResolver.Keys
  fullName: System.Activities.Hosting.SymbolResolver.Keys
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Ottiene una raccolta di tutte le chiavi di <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>."
  syntax:
    content: public System.Collections.Generic.ICollection<string> Keys { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "Una raccolta di tutte le chiavi di <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>."
  overload: System.Activities.Hosting.SymbolResolver.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Remove(KeyValuePair<String,Object>)
  nameWithType: SymbolResolver.Remove(KeyValuePair<String,Object>)
  fullName: System.Activities.Hosting.SymbolResolver.Remove(KeyValuePair<String,Object>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Rimuove il simbolo specificato da di <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>."
  syntax:
    content: public bool Remove (System.Collections.Generic.KeyValuePair<string,object> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
      description: "Simbolo da rimuovere."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il simbolo viene trovato e rimosso; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Questo metodo restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se il simbolo non è presente."
  overload: System.Activities.Hosting.SymbolResolver.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Remove(System.String)
  id: Remove(System.String)
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Remove(String)
  nameWithType: SymbolResolver.Remove(String)
  fullName: System.Activities.Hosting.SymbolResolver.Remove(String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Rimuove un simbolo dal <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref> utilizzando una chiave specificata."
  syntax:
    content: public bool Remove (string key);
    parameters:
    - id: key
      type: System.String
      description: "La chiave del simbolo da rimuovere."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il simbolo viene trovato e rimosso; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Questo metodo restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se il simbolo non è presente."
  overload: System.Activities.Hosting.SymbolResolver.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SymbolResolver.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.Hosting.SymbolResolver.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Restituisce un enumeratore che scorre una raccolta di coppie chiave/valore in cui le chiavi sono i nomi dei simboli e i valori i valori dei simboli."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Activities.Hosting.SymbolResolver>esegue il cast dell&quot;istanza di un <xref:System.Collections.IEnumerator>interfaccia.</xref:System.Collections.IEnumerator> </xref:System.Activities.Hosting.SymbolResolver>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Un enumeratore che scorre una raccolta di coppie chiave/valore."
  overload: System.Activities.Hosting.SymbolResolver.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.TryGetValue(System.String,System.Object@)
  id: TryGetValue(System.String,System.Object@)
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: TryGetValue(String,Object)
  nameWithType: SymbolResolver.TryGetValue(String,Object)
  fullName: System.Activities.Hosting.SymbolResolver.TryGetValue(String,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Ottiene il valore associato alla chiave specificata."
  syntax:
    content: public bool TryGetValue (string key, out object value);
    parameters:
    - id: key
      type: System.String
      description: "La chiave del valore da ottenere."
    - id: value
      type: System.Object
      description: "Quando termina, questo metodo contiene il valore associato alla chiave specificata, se la chiave viene trovata. in caso contrario, il valore predefinito per il tipo del parametro del valore. Questo parametro viene passato non inizializzato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref> contiene un elemento con l&quot;oggetto chiave; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Hosting.SymbolResolver.TryGetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Values
  id: Values
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Values
  nameWithType: SymbolResolver.Values
  fullName: System.Activities.Hosting.SymbolResolver.Values
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Ottiene una raccolta di tutti i valori di <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>."
  syntax:
    content: public System.Collections.Generic.ICollection<object> Values { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Object}
      description: "Una raccolta di tutti i valori di <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>."
  overload: System.Activities.Hosting.SymbolResolver.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Hosting.SymbolResolver.#ctor
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: SymbolResolver()
  nameWithType: SymbolResolver.SymbolResolver()
  fullName: System.Activities.Hosting.SymbolResolver.SymbolResolver()
- uid: System.Activities.Hosting.SymbolResolver.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Add(KeyValuePair<String,Object>)
  nameWithType: SymbolResolver.Add(KeyValuePair<String,Object>)
  fullName: System.Activities.Hosting.SymbolResolver.Add(KeyValuePair<String,Object>)
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<String,Object>
  nameWithType: KeyValuePair<String,Object>
  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object)
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Add(String,Object)
  nameWithType: SymbolResolver.Add(String,Object)
  fullName: System.Activities.Hosting.SymbolResolver.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Hosting.SymbolResolver.Add(System.String,System.Type)
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Add(String,Type)
  nameWithType: SymbolResolver.Add(String,Type)
  fullName: System.Activities.Hosting.SymbolResolver.Add(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object,System.Type)
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Add(String,Object,Type)
  nameWithType: SymbolResolver.Add(String,Object,Type)
  fullName: System.Activities.Hosting.SymbolResolver.Add(String,Object,Type)
- uid: System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: AsLocationReferenceEnvironment()
  nameWithType: SymbolResolver.AsLocationReferenceEnvironment()
  fullName: System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment()
- uid: System.Activities.LocationReferenceEnvironment
  parent: System.Activities
  isExternal: false
  name: LocationReferenceEnvironment
  nameWithType: LocationReferenceEnvironment
  fullName: System.Activities.LocationReferenceEnvironment
- uid: System.Activities.Hosting.SymbolResolver.Clear
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Clear()
  nameWithType: SymbolResolver.Clear()
  fullName: System.Activities.Hosting.SymbolResolver.Clear()
- uid: System.Activities.Hosting.SymbolResolver.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Contains(KeyValuePair<String,Object>)
  nameWithType: SymbolResolver.Contains(KeyValuePair<String,Object>)
  fullName: System.Activities.Hosting.SymbolResolver.Contains(KeyValuePair<String,Object>)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Hosting.SymbolResolver.ContainsKey(System.String)
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: ContainsKey(String)
  nameWithType: SymbolResolver.ContainsKey(String)
  fullName: System.Activities.Hosting.SymbolResolver.ContainsKey(String)
- uid: System.Activities.Hosting.SymbolResolver.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: CopyTo(KeyValuePair<String,Object>,Int32)
  nameWithType: SymbolResolver.CopyTo(KeyValuePair<String,Object>,Int32)
  fullName: System.Activities.Hosting.SymbolResolver.CopyTo(KeyValuePair<String,Object>,Int32)
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}[]
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<String,Object>
  nameWithType: KeyValuePair<String,Object>
  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Object>[]
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>[]
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Activities.Hosting.SymbolResolver.Count
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Count
  nameWithType: SymbolResolver.Count
  fullName: System.Activities.Hosting.SymbolResolver.Count
- uid: System.Activities.Hosting.SymbolResolver.GetEnumerator
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: GetEnumerator()
  nameWithType: SymbolResolver.GetEnumerator()
  fullName: System.Activities.Hosting.SymbolResolver.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<KeyValuePair<String,Object>>
  nameWithType: IEnumerator<KeyValuePair<String,Object>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.SymbolResolver.IsReadOnly
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: IsReadOnly
  nameWithType: SymbolResolver.IsReadOnly
  fullName: System.Activities.Hosting.SymbolResolver.IsReadOnly
- uid: System.Activities.Hosting.SymbolResolver.Item(System.String)
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Item(String)
  nameWithType: SymbolResolver.Item(String)
  fullName: System.Activities.Hosting.SymbolResolver.Item(String)
- uid: System.Activities.Hosting.SymbolResolver.Keys
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Keys
  nameWithType: SymbolResolver.Keys
  fullName: System.Activities.Hosting.SymbolResolver.Keys
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.SymbolResolver.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Remove(KeyValuePair<String,Object>)
  nameWithType: SymbolResolver.Remove(KeyValuePair<String,Object>)
  fullName: System.Activities.Hosting.SymbolResolver.Remove(KeyValuePair<String,Object>)
- uid: System.Activities.Hosting.SymbolResolver.Remove(System.String)
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Remove(String)
  nameWithType: SymbolResolver.Remove(String)
  fullName: System.Activities.Hosting.SymbolResolver.Remove(String)
- uid: System.Activities.Hosting.SymbolResolver.System#Collections#IEnumerable#GetEnumerator
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SymbolResolver.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.Hosting.SymbolResolver.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Activities.Hosting.SymbolResolver.TryGetValue(System.String,System.Object@)
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: TryGetValue(String,Object)
  nameWithType: SymbolResolver.TryGetValue(String,Object)
  fullName: System.Activities.Hosting.SymbolResolver.TryGetValue(String,Object)
- uid: System.Activities.Hosting.SymbolResolver.Values
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Values
  nameWithType: SymbolResolver.Values
  fullName: System.Activities.Hosting.SymbolResolver.Values
- uid: System.Collections.Generic.ICollection{System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<Object>
  nameWithType: ICollection<Object>
  fullName: System.Collections.Generic.ICollection<System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.SymbolResolver.#ctor*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: SymbolResolver
  nameWithType: SymbolResolver.SymbolResolver
- uid: System.Activities.Hosting.SymbolResolver.Add*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Add
  nameWithType: SymbolResolver.Add
- uid: System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: AsLocationReferenceEnvironment
  nameWithType: SymbolResolver.AsLocationReferenceEnvironment
- uid: System.Activities.Hosting.SymbolResolver.Clear*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Clear
  nameWithType: SymbolResolver.Clear
- uid: System.Activities.Hosting.SymbolResolver.Contains*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Contains
  nameWithType: SymbolResolver.Contains
- uid: System.Activities.Hosting.SymbolResolver.ContainsKey*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: ContainsKey
  nameWithType: SymbolResolver.ContainsKey
- uid: System.Activities.Hosting.SymbolResolver.CopyTo*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: CopyTo
  nameWithType: SymbolResolver.CopyTo
- uid: System.Activities.Hosting.SymbolResolver.Count*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Count
  nameWithType: SymbolResolver.Count
- uid: System.Activities.Hosting.SymbolResolver.GetEnumerator*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: GetEnumerator
  nameWithType: SymbolResolver.GetEnumerator
- uid: System.Activities.Hosting.SymbolResolver.IsReadOnly*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: IsReadOnly
  nameWithType: SymbolResolver.IsReadOnly
- uid: System.Activities.Hosting.SymbolResolver.Item*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Item
  nameWithType: SymbolResolver.Item
- uid: System.Activities.Hosting.SymbolResolver.Keys*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Keys
  nameWithType: SymbolResolver.Keys
- uid: System.Activities.Hosting.SymbolResolver.Remove*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Remove
  nameWithType: SymbolResolver.Remove
- uid: System.Activities.Hosting.SymbolResolver.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: SymbolResolver.System.Collections.IEnumerable.GetEnumerator
- uid: System.Activities.Hosting.SymbolResolver.TryGetValue*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: TryGetValue
  nameWithType: SymbolResolver.TryGetValue
- uid: System.Activities.Hosting.SymbolResolver.Values*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Values
  nameWithType: SymbolResolver.Values
