### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.Protocols.DirectoryConnection
  id: DirectoryConnection
  children:
  - System.DirectoryServices.Protocols.DirectoryConnection.#ctor
  - System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates
  - System.DirectoryServices.Protocols.DirectoryConnection.Credential
  - System.DirectoryServices.Protocols.DirectoryConnection.Directory
  - System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)
  - System.DirectoryServices.Protocols.DirectoryConnection.Timeout
  langs:
  - csharp
  name: DirectoryConnection
  nameWithType: DirectoryConnection
  fullName: System.DirectoryServices.Protocols.DirectoryConnection
  type: Class
  summary: "La classe DirectoryConnection è una classe astratta e non può essere creata un&quot;istanza. Utilizzare il <xref href=&quot;System.DirectoryServices.Protocols.LdapConnection&quot;> </xref> o <xref href=&quot;System.DirectoryServices.Protocols.DsmlSoapHttpConnection&quot;> </xref> classi per la connessione a un server di directory."
  syntax:
    content: public abstract class DirectoryConnection
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryConnection.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  langs:
  - csharp
  name: DirectoryConnection()
  nameWithType: DirectoryConnection.DirectoryConnection()
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.DirectoryConnection()
  type: Constructor
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "Il costruttore DirectoryConnection Inizializza una nuova istanza di un <xref href=&quot;System.DirectoryServices.Protocols.DirectoryConnection&quot;> </xref> classe."
  syntax:
    content: protected DirectoryConnection ();
    parameters: []
  overload: System.DirectoryServices.Protocols.DirectoryConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates
  id: ClientCertificates
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: DirectoryConnection.ClientCertificates
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "La proprietà ClientCertificates specifica uno o più certificati client da inviare per l&quot;autenticazione."
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "Uno o più certificati client da inviare per l&quot;autenticazione."
  overload: System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryConnection.Credential
  id: Credential
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  langs:
  - csharp
  name: Credential
  nameWithType: DirectoryConnection.Credential
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.Credential
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "La proprietà Credential specifica credenziali alternative per l&quot;oggetto connessione."
  remarks: "Se non specificato, il valore predefinito è `null`."
  syntax:
    content: public virtual System.Net.NetworkCredential Credential { set; }
    return:
      type: System.Net.NetworkCredential
      description: "Credenziali alternative per l&quot;oggetto connessione."
  overload: System.DirectoryServices.Protocols.DirectoryConnection.Credential*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryConnection.Directory
  id: Directory
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  langs:
  - csharp
  name: Directory
  nameWithType: DirectoryConnection.Directory
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.Directory
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "La proprietà di Directory specifica il dominio o il server a cui deve essere effettuata la connessione."
  remarks: "Ad esempio, &quot;http://fabrikam.com/platforms/adssoap.dll&quot; rappresenta un server DSML e &quot;controller di dominio-01. fabrikam.com&quot; rappresenta un server LDAP."
  syntax:
    content: public virtual System.DirectoryServices.Protocols.DirectoryIdentifier Directory { get; }
    return:
      type: System.DirectoryServices.Protocols.DirectoryIdentifier
      description: "Il dominio o il server a cui deve essere effettuata la connessione."
  overload: System.DirectoryServices.Protocols.DirectoryConnection.Directory*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)
  id: SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  langs:
  - csharp
  name: SendRequest(DirectoryRequest)
  nameWithType: DirectoryConnection.SendRequest(DirectoryRequest)
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(DirectoryRequest)
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "Il metodo SendRequest invia un&quot;unica operazione di directory nel server."
  syntax:
    content: public abstract System.DirectoryServices.Protocols.DirectoryResponse SendRequest (System.DirectoryServices.Protocols.DirectoryRequest request);
    parameters:
    - id: request
      type: System.DirectoryServices.Protocols.DirectoryRequest
      description: "Oggetto <xref href=&quot;System.DirectoryServices.Protocols.DirectoryRequest&quot;> </xref> oggetto che contiene la richiesta."
    return:
      type: System.DirectoryServices.Protocols.DirectoryResponse
      description: "Oggetto <xref href=&quot;System.DirectoryServices.Protocols.DirectoryResponse&quot;> </xref> oggetto che contiene la risposta del server per l&quot;operazione richiesta. L&quot;oggetto di risposta restituito può essere diverso dall&quot;oggetto richiesta se il server restituisce una risposta diversa."
  overload: System.DirectoryServices.Protocols.DirectoryConnection.SendRequest*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.DirectoryConnection.Timeout
  id: Timeout
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  langs:
  - csharp
  name: Timeout
  nameWithType: DirectoryConnection.Timeout
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.Timeout
  type: Property
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "La proprietà Timeout contiene la quantità di tempo, espresso in secondi, prima del timeout della connessione."
  remarks: "Trenta secondi è l&quot;impostazione delle proprietà di lunghezza di tempo predefinito."
  syntax:
    content: public virtual TimeSpan Timeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Il periodo di tempo, in secondi, prima del timeout della connessione."
  overload: System.DirectoryServices.Protocols.DirectoryConnection.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.DirectoryServices.Protocols.DirectoryConnection.#ctor
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: DirectoryConnection()
  nameWithType: DirectoryConnection.DirectoryConnection()
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.DirectoryConnection()
- uid: System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: ClientCertificates
  nameWithType: DirectoryConnection.ClientCertificates
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.DirectoryServices.Protocols.DirectoryConnection.Credential
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: Credential
  nameWithType: DirectoryConnection.Credential
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.Credential
- uid: System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.DirectoryServices.Protocols.DirectoryConnection.Directory
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: Directory
  nameWithType: DirectoryConnection.Directory
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.Directory
- uid: System.DirectoryServices.Protocols.DirectoryIdentifier
  parent: System.DirectoryServices.Protocols
  isExternal: false
  name: DirectoryIdentifier
  nameWithType: DirectoryIdentifier
  fullName: System.DirectoryServices.Protocols.DirectoryIdentifier
- uid: System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: SendRequest(DirectoryRequest)
  nameWithType: DirectoryConnection.SendRequest(DirectoryRequest)
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.SendRequest(DirectoryRequest)
- uid: System.DirectoryServices.Protocols.DirectoryResponse
  parent: System.DirectoryServices.Protocols
  isExternal: false
  name: DirectoryResponse
  nameWithType: DirectoryResponse
  fullName: System.DirectoryServices.Protocols.DirectoryResponse
- uid: System.DirectoryServices.Protocols.DirectoryRequest
  parent: System.DirectoryServices.Protocols
  isExternal: false
  name: DirectoryRequest
  nameWithType: DirectoryRequest
  fullName: System.DirectoryServices.Protocols.DirectoryRequest
- uid: System.DirectoryServices.Protocols.DirectoryConnection.Timeout
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: Timeout
  nameWithType: DirectoryConnection.Timeout
  fullName: System.DirectoryServices.Protocols.DirectoryConnection.Timeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DirectoryServices.Protocols.DirectoryConnection.#ctor*
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: DirectoryConnection
  nameWithType: DirectoryConnection.DirectoryConnection
- uid: System.DirectoryServices.Protocols.DirectoryConnection.ClientCertificates*
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: ClientCertificates
  nameWithType: DirectoryConnection.ClientCertificates
- uid: System.DirectoryServices.Protocols.DirectoryConnection.Credential*
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: Credential
  nameWithType: DirectoryConnection.Credential
- uid: System.DirectoryServices.Protocols.DirectoryConnection.Directory*
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: Directory
  nameWithType: DirectoryConnection.Directory
- uid: System.DirectoryServices.Protocols.DirectoryConnection.SendRequest*
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: SendRequest
  nameWithType: DirectoryConnection.SendRequest
- uid: System.DirectoryServices.Protocols.DirectoryConnection.Timeout*
  parent: System.DirectoryServices.Protocols.DirectoryConnection
  isExternal: false
  name: Timeout
  nameWithType: DirectoryConnection.Timeout
