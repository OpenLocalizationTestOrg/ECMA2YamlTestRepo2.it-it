### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.MouseGesture
  id: MouseGesture
  children:
  - System.Windows.Input.MouseGesture.#ctor
  - System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction)
  - System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction,System.Windows.Input.ModifierKeys)
  - System.Windows.Input.MouseGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)
  - System.Windows.Input.MouseGesture.Modifiers
  - System.Windows.Input.MouseGesture.MouseAction
  langs:
  - csharp
  name: "MouseGesture"
  nameWithType: MouseGesture
  fullName: System.Windows.Input.MouseGesture
  type: Class
  summary: Defines a mouse input gesture that can be used to invoke a command.
  remarks: "Unlike a <xref:System.Windows.Input.KeyGesture>, a <xref:System.Windows.Input.MouseAction> does not have to be paired with <xref:System.Windows.Input.ModifierKeys> to be a valid MouseGesture.  \n  \n A MouseGesture can be bound to a <xref:System.Windows.Input.RoutedCommand> (or other <xref:System.Windows.Input.ICommand> implementations) through a <xref:System.Windows.Input.MouseBinding> so that the command is invoked when the MouseGesture occurs.  \n  \n For MouseGesture [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] attribute usages, the property that is generally set in [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] is <xref:System.Windows.Input.MouseBinding.Gesture%2A>, in cases where the gesture can represent both a mouse action and one or more modifier key. You can also set the <xref:System.Windows.Input.MouseBinding.Gesture%2A> property to be just a mouse action. In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)], rather than setting <xref:System.Windows.Input.MouseBinding.MouseAction%2A>, even if you do not specify modifiers. This will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.  \n  \n MouseGesture [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] object element usages are possible but uncommon, because you can ordinarily set the <xref:System.Windows.Input.MouseBinding.Gesture%2A> property of <xref:System.Windows.Input.MouseBinding> inline without the use of property element syntax.  \n  \n<a name=\"xamlAttributeUsage_MouseGesture\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"mouseAction\"/>  \n- or -  \n<object property=\"oneOrMoreModifierKeys+mouseAction\"/>  \n```  \n  \n<a name=\"xamlValues_MouseGesture\"></a>   \n## XAML Values  \n `mouseAction`  \n <xref:System.Windows.Input.MouseAction>  \n  \n A single mouse action.  \n  \n `oneOrMoreModifierKeys`  \n One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration. If more than one modifier key is provided, each modifier key is delimited with a \"+\" character."
  example:
  - "The following example shows to create a MouseGesture and associate it with a <xref:System.Windows.Input.RoutedCommand> through a <xref:System.Windows.Input.MouseBinding>.  When the mouse wheel is clicked while the <xref:System.Windows.Input.ModifierKeys> key is pressed, the <xref:System.Windows.Input.ApplicationCommands.Open%2A> is invoked.  \n  \n [!code-xml[commandlibrarysnippets#MouseBindingMouseGestureXAML](~/add/codesnippet/Xaml/CommandLibarySnippets/Window1.xaml#mousebindingmousegesturexaml)]  \n  \n [!code-cs[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/add/codesnippet/CSharp/CommandLibarySnippets/Window1.xaml.cs#mousebindingaddedtoinputbinding)]\n [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/add/codesnippet/VisualBasic/commandlibarysnippets/window1.xaml.vb#mousebindingaddedtoinputbinding)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Input.MouseGestureConverter))]

      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.MouseGestureValueSerializer))]

      public class MouseGesture : System.Windows.Input.InputGesture
  inheritance:
  - System.Object
  - System.Windows.Input.InputGesture
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.MouseGesture.#ctor
  id: '#ctor'
  parent: System.Windows.Input.MouseGesture
  langs:
  - csharp
  name: "MouseGesture()"
  nameWithType: MouseGesture.MouseGesture()
  fullName: System.Windows.Input.MouseGesture.MouseGesture()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Initializes a new instance of the <see cref="T:System.Windows.Input.MouseGesture"></see> class.
  syntax:
    content: public MouseGesture ();
    parameters: []
  overload: System.Windows.Input.MouseGesture.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction)
  id: '#ctor(System.Windows.Input.MouseAction)'
  parent: System.Windows.Input.MouseGesture
  langs:
  - csharp
  name: "MouseGesture(MouseAction)"
  nameWithType: MouseGesture.MouseGesture(MouseAction)
  fullName: System.Windows.Input.MouseGesture.MouseGesture(MouseAction)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Initializes a new instance of the <see cref="T:System.Windows.Input.MouseGesture"></see> class using the specified <see cref="T:System.Windows.Input.MouseAction"></see>.
  syntax:
    content: public MouseGesture (System.Windows.Input.MouseAction mouseAction);
    parameters:
    - id: mouseAction
      type: System.Windows.Input.MouseAction
      description: "The action associated with this gesture."
  overload: System.Windows.Input.MouseGesture.#ctor*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "\n    mouseAction is not a valid  value."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction,System.Windows.Input.ModifierKeys)
  id: '#ctor(System.Windows.Input.MouseAction,System.Windows.Input.ModifierKeys)'
  parent: System.Windows.Input.MouseGesture
  langs:
  - csharp
  name: "MouseGesture(MouseAction,ModifierKeys)"
  nameWithType: MouseGesture.MouseGesture(MouseAction,ModifierKeys)
  fullName: System.Windows.Input.MouseGesture.MouseGesture(MouseAction,ModifierKeys)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Initializes a new instance of the <see cref="T:System.Windows.Input.MouseGesture"></see> class using the specified <see cref="T:System.Windows.Input.MouseAction"></see> and <see cref="T:System.Windows.Input.ModifierKeys"></see>.
  syntax:
    content: public MouseGesture (System.Windows.Input.MouseAction mouseAction, System.Windows.Input.ModifierKeys modifiers);
    parameters:
    - id: mouseAction
      type: System.Windows.Input.MouseAction
      description: "The action associated with this gesture."
    - id: modifiers
      type: System.Windows.Input.ModifierKeys
      description: "The modifiers associated with this gesture."
  overload: System.Windows.Input.MouseGesture.#ctor*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "\n    mouseAction is not a valid  value  \n  \n -or-  \n  \n modifiers is not a valid  value."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.MouseGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)
  id: Matches(System.Object,System.Windows.Input.InputEventArgs)
  parent: System.Windows.Input.MouseGesture
  langs:
  - csharp
  name: "Matches(Object,InputEventArgs)"
  nameWithType: MouseGesture.Matches(Object,InputEventArgs)
  fullName: System.Windows.Input.MouseGesture.Matches(Object,InputEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Determines whether <see cref="T:System.Windows.Input.MouseGesture"></see> matches the input associated with the specified <see cref="T:System.Windows.Input.InputEventArgs"></see> object.
  remarks: ''
  example:
  - "The following example shows how to test whether a <xref:System.Windows.Input.MouseGesture> matches the input associated with an instance of an <xref:System.Windows.Input.InputEventArgs>. A <xref:System.Windows.UIElement.MouseDown> event handler compares the event data with the <xref:System.Windows.Input.MouseGesture> by using the Matches method.  \n  \n [!code-cs[commandlibrarysnippets#KeyDownHandlerMouseGestureMatches](~/add/codesnippet/CSharp/CommandLibarySnippets/Window1.xaml.cs#keydownhandlermousegesturematches)]\n [!code-vb[commandlibrarysnippets#KeyDownHandlerMouseGestureMatches](~/add/codesnippet/VisualBasic/commandlibarysnippets/window1.xaml.vb#keydownhandlermousegesturematches)]"
  syntax:
    content: public override bool Matches (object targetElement, System.Windows.Input.InputEventArgs inputEventArgs);
    parameters:
    - id: targetElement
      type: System.Object
      description: "The target."
    - id: inputEventArgs
      type: System.Windows.Input.InputEventArgs
      description: "The input event data to compare with this gesture."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Windows.Input.MouseGesture.Matches*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.MouseGesture.Modifiers
  id: Modifiers
  parent: System.Windows.Input.MouseGesture
  langs:
  - csharp
  name: "Modifiers"
  nameWithType: MouseGesture.Modifiers
  fullName: System.Windows.Input.MouseGesture.Modifiers
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets or sets the modifier keys associated with this <see cref="T:System.Windows.Input.MouseGesture"></see>.
  remarks: "Unlike a <xref:System.Windows.Input.KeyGesture>, a <xref:System.Windows.Input.MouseAction> does not have to be paired with <xref:System.Windows.Input.ModifierKeys> in order to be a valid <xref:System.Windows.Input.MouseGesture>.  \n  \n <xref:System.Windows.Input.ModifierKeys> is a bit field enumeration, so it is possible for multiple modifier keys to be pressed at the same time. Use bit operations to determine the exact set of modifier keys pressed.  \n  \n<a name=\"xamlAttributeUsage_Modifiers\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object Modifiers=\"oneOrMoreModifierKeys\"/>  \n```  \n  \n<a name=\"xamlValues_Modifiers\"></a>   \n## XAML Values  \n *oneOrMoreModifierKeys*  \n One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration, delimited with a \"+\" character."
  example:
  - "The following example shows to create a <xref:System.Windows.Input.MouseGesture> and associate it with a <xref:System.Windows.Input.RoutedCommand> through a <xref:System.Windows.Input.MouseBinding>.  \n  \n [!code-cs[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/add/codesnippet/CSharp/CommandLibarySnippets/Window1.xaml.cs#mousebindingaddedtoinputbinding)]\n [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/add/codesnippet/VisualBasic/commandlibarysnippets/window1.xaml.vb#mousebindingaddedtoinputbinding)]"
  syntax:
    content: public System.Windows.Input.ModifierKeys Modifiers { get; set; }
    return:
      type: System.Windows.Input.ModifierKeys
      description: "The modifier keys associated with this gesture. The default value is <see cref=&quot;T:System.Windows.Input.ModifierKeys&quot;></see>."
  overload: System.Windows.Input.MouseGesture.Modifiers*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.MouseGesture.MouseAction
  id: MouseAction
  parent: System.Windows.Input.MouseGesture
  langs:
  - csharp
  name: "MouseAction"
  nameWithType: MouseGesture.MouseAction
  fullName: System.Windows.Input.MouseGesture.MouseAction
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets or sets the <see cref="T:System.Windows.Input.MouseAction"></see> associated with this gesture.
  remarks: Unlike a <xref:System.Windows.Input.KeyGesture>, a <xref:System.Windows.Input.MouseAction> does not have to be paired with <xref:System.Windows.Input.ModifierKeys> in order to be a valid <xref:System.Windows.Input.MouseGesture>.
  example:
  - "The following example shows to create a <xref:System.Windows.Input.MouseGesture> and associate it with a <xref:System.Windows.Input.RoutedCommand> through a <xref:System.Windows.Input.MouseBinding>.  \n  \n [!code-cs[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/add/codesnippet/CSharp/CommandLibarySnippets/Window1.xaml.cs#mousebindingaddedtoinputbinding)]\n [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/add/codesnippet/VisualBasic/commandlibarysnippets/window1.xaml.vb#mousebindingaddedtoinputbinding)]"
  syntax:
    content: public System.Windows.Input.MouseAction MouseAction { get; set; }
    return:
      type: System.Windows.Input.MouseAction
      description: "The mouse action associated with this gesture. The default value is <see cref=&quot;T:System.Windows.Input.MouseAction&quot;></see>."
  overload: System.Windows.Input.MouseGesture.MouseAction*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Windows.Input.InputGesture
  isExternal: false
  name: "System.Windows.Input.InputGesture"
- uid: System.Windows.Input.MouseGesture.#ctor
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: "MouseGesture()"
  nameWithType: MouseGesture.MouseGesture()
  fullName: System.Windows.Input.MouseGesture.MouseGesture()
- uid: System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction)
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: "MouseGesture(MouseAction)"
  nameWithType: MouseGesture.MouseGesture(MouseAction)
  fullName: System.Windows.Input.MouseGesture.MouseGesture(MouseAction)
- uid: System.Windows.Input.MouseAction
  parent: System.Windows.Input
  isExternal: false
  name: "MouseAction"
  nameWithType: MouseAction
  fullName: System.Windows.Input.MouseAction
- uid: System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction,System.Windows.Input.ModifierKeys)
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: "MouseGesture(MouseAction,ModifierKeys)"
  nameWithType: MouseGesture.MouseGesture(MouseAction,ModifierKeys)
  fullName: System.Windows.Input.MouseGesture.MouseGesture(MouseAction,ModifierKeys)
- uid: System.Windows.Input.ModifierKeys
  parent: System.Windows.Input
  isExternal: false
  name: "ModifierKeys"
  nameWithType: ModifierKeys
  fullName: System.Windows.Input.ModifierKeys
- uid: System.Windows.Input.MouseGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: "Matches(Object,InputEventArgs)"
  nameWithType: MouseGesture.Matches(Object,InputEventArgs)
  fullName: System.Windows.Input.MouseGesture.Matches(Object,InputEventArgs)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: "Boolean"
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: "Object"
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.InputEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: "InputEventArgs"
  nameWithType: InputEventArgs
  fullName: System.Windows.Input.InputEventArgs
- uid: System.Windows.Input.MouseGesture.Modifiers
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: "Modifiers"
  nameWithType: MouseGesture.Modifiers
  fullName: System.Windows.Input.MouseGesture.Modifiers
- uid: System.Windows.Input.MouseGesture.MouseAction
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: "MouseAction"
  nameWithType: MouseGesture.MouseAction
  fullName: System.Windows.Input.MouseGesture.MouseAction
- uid: System.Windows.Input.MouseGesture.#ctor*
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: "MouseGesture"
  nameWithType: MouseGesture.MouseGesture
- uid: System.Windows.Input.MouseGesture.Matches*
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: "Matches"
  nameWithType: MouseGesture.Matches
- uid: System.Windows.Input.MouseGesture.Modifiers*
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: "Modifiers"
  nameWithType: MouseGesture.Modifiers
- uid: System.Windows.Input.MouseGesture.MouseAction*
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: "MouseAction"
  nameWithType: MouseGesture.MouseAction
