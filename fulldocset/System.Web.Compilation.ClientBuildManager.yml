### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ClientBuildManager
  id: ClientBuildManager
  children:
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)
  - System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  - System.Web.Compilation.ClientBuildManager.AppDomainStarted
  - System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  - System.Web.Compilation.ClientBuildManager.CodeGenDir
  - System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies
  - System.Web.Compilation.ClientBuildManager.CompileFile(System.String)
  - System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  - System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)
  - System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  - System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  - System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  - System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories
  - System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions
  - System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  - System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)
  - System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  - System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)
  - System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)
  - System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)
  - System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories
  - System.Web.Compilation.ClientBuildManager.InitializeLifetimeService
  - System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)
  - System.Web.Compilation.ClientBuildManager.IsHostCreated
  - System.Web.Compilation.ClientBuildManager.PrecompileApplication
  - System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  - System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  - System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose
  - System.Web.Compilation.ClientBuildManager.Unload
  langs:
  - csharp
  name: ClientBuildManager
  nameWithType: ClientBuildManager
  fullName: System.Web.Compilation.ClientBuildManager
  type: Class
  summary: "Fornisce servizi di compilazione per le applicazioni ASP.NET."
  remarks: "La classe ClientBuildManager offre metodi e proprietà per la compilazione di applicazioni Web ASP.NET e recuperare gli assembly generati o codice sorgente generato. Le istanze della classe vengono stabilite nel dominio applicazione del client e forniscono l&quot;accesso al sistema di compilazione ASP.NET all&quot;esterno di Microsoft Internet Information Services (IIS). La classe può essere utilizzata per sviluppare strumenti personalizzati per la compilazione di applicazioni Web.       Lo strumento da riga di comando `aspnet_compiler` utilizza la classe ClientBuildManager."
  syntax:
    content: 'public sealed class ClientBuildManager : MarshalByRefObject, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;> </xref> classe senza una directory di destinazione specificata o flag di precompilazione."
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "Il percorso virtuale della radice dell&quot;applicazione."
    - id: appPhysicalSourceDir
      type: System.String
      description: "Il percorso fisico della radice dell&quot;applicazione."
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;> </xref> classe con la directory di destinazione specificato."
  remarks: "Questo form del costruttore viene in genere utilizzato con la precompilazione, poiché specifica una directory di destinazione per la precompilazione."
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "Il percorso virtuale della radice dell&quot;applicazione."
    - id: appPhysicalSourceDir
      type: System.String
      description: "Il percorso fisico della radice dell&quot;applicazione."
    - id: appPhysicalTargetDir
      type: System.String
      description: "La directory di destinazione per la precompilazione."
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)
  id: '#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;> </xref> classe con il parametro directory e la compilazione di destinazione specificato."
  remarks: "Questo form del costruttore è in genere utilizzato con la precompilazione, poiché specifica un flag di precompilazione e directory di destinazione."
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "Il percorso virtuale della radice dell&quot;applicazione."
    - id: appPhysicalSourceDir
      type: System.String
      description: "Il percorso fisico della radice dell&quot;applicazione."
    - id: appPhysicalTargetDir
      type: System.String
      description: "La directory di destinazione per la precompilazione."
    - id: parameter
      type: System.Web.Compilation.ClientBuildManagerParameter
      description: "Valori che determinano il comportamento di precompilazione."
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)
  id: '#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;> </xref> classe utilizzando la directory virtuale specificata, directory di origine, directory di destinazione, il parametro di compilazione e il provider di descrizione."
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter, System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "Il percorso virtuale della radice dell&quot;applicazione."
    - id: appPhysicalSourceDir
      type: System.String
      description: "Il percorso fisico della radice dell&quot;applicazione."
    - id: appPhysicalTargetDir
      type: System.String
      description: "La directory di destinazione per la precompilazione."
    - id: parameter
      type: System.Web.Compilation.ClientBuildManagerParameter
      description: "Valori che determinano il comportamento di precompilazione."
    - id: typeDescriptionProvider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "Il provider di descrizione dei tipi da utilizzare. Questo parametro viene utilizzato principalmente per supportare l&quot;infrastruttura multitargeting in Visual Studio. Utilizzato per recuperare i metadati sui tipi che viene filtrato per specifiche versioni di .NET Framework."
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  id: AppDomainShutdown
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: AppDomainShutdown
  nameWithType: ClientBuildManager.AppDomainShutdown
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Si verifica quando un dominio applicazione è stato arrestato."
  syntax:
    content: public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown;
    return:
      type: System.Web.Compilation.BuildManagerHostUnloadEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.AppDomainStarted
  id: AppDomainStarted
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: AppDomainStarted
  nameWithType: ClientBuildManager.AppDomainStarted
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainStarted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Si verifica quando viene avviato un dominio applicazione."
  syntax:
    content: public event EventHandler AppDomainStarted;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  id: AppDomainUnloaded
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: AppDomainUnloaded
  nameWithType: ClientBuildManager.AppDomainUnloaded
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Si verifica quando viene scaricato un dominio applicazione."
  syntax:
    content: public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded;
    return:
      type: System.Web.Compilation.BuildManagerHostUnloadEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CodeGenDir
  id: CodeGenDir
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CodeGenDir
  nameWithType: ClientBuildManager.CodeGenDir
  fullName: System.Web.Compilation.ClientBuildManager.CodeGenDir
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Ottiene il percorso fisico della directory utilizzata per la generazione di codice."
  remarks: "La directory per la generazione di codice è in genere nella directory dei file temporanee di ASP.NET."
  syntax:
    content: public string CodeGenDir { get; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>contenente il percorso di directory utilizzato per la generazione di codice.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.CodeGenDir*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies
  id: CompileApplicationDependencies
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CompileApplicationDependencies()
  nameWithType: ClientBuildManager.CompileApplicationDependencies()
  fullName: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Compila i file dipendenti dall&quot;applicazione, ad esempio i file nella directory App_Code, il file Global. asax, file di risorse e riferimenti Web."
  remarks: "Il metodo CompileApplicationDependencies assicura la compilazione delle risorse, i riferimenti Web, i file nella directory App_Code, file con estensione browser nella directory App_Browsers e il file Global. asax."
  syntax:
    content: public void CompileApplicationDependencies ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String)
  id: CompileFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CompileFile(String)
  nameWithType: ClientBuildManager.CompileFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Compila il file rappresentato dal percorso virtuale."
  syntax:
    content: public void CompileFile (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il percorso del file da compilare."
  overload: System.Web.Compilation.ClientBuildManager.CompileFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  id: CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CompileFile(String,ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Compila il file rappresentato dal percorso virtuale e fornisce una classe di callback per ricevere informazioni sullo stato di compilazione."
  syntax:
    content: public void CompileFile (string virtualPath, System.Web.Compilation.ClientBuildManagerCallback callback);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il percorso del file da compilare."
    - id: callback
      type: System.Web.Compilation.ClientBuildManagerCallback
      description: "L&quot;oggetto per la ricezione di informazioni sullo stato di compilazione."
  overload: System.Web.Compilation.ClientBuildManager.CompileFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>è null."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)
  id: CreateObject(System.Type,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CreateObject(Type,Boolean)
  nameWithType: ClientBuildManager.CreateObject(Type,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.CreateObject(Type,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Crea un oggetto nel dominio dell&quot;applicazione del runtime di ASP.NET."
  syntax:
    content: public System.Web.Hosting.IRegisteredObject CreateObject (Type type, bool failIfExists);
    parameters:
    - id: type
      type: System.Type
      description: "Il tipo di oggetto da creare."
    - id: failIfExists
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per generare un&quot;eccezione se l&quot;oggetto è già stato creato nel dominio dell&quot;applicazione di runtime ASP.NET; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Web.Hosting.IRegisteredObject
      description: "Un oggetto nel dominio dell&quot;applicazione del runtime di ASP.NET."
  overload: System.Web.Compilation.ClientBuildManager.CreateObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;oggetto esiste già nel dominio dell&quot;applicazione e <code> failIfExists </code> è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  id: GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GenerateCode(String,String,IDictionary)
  nameWithType: ClientBuildManager.GenerateCode(String,String,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCode(String,String,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Genera il codice dal contenuto di un file."
  syntax:
    content: public string GenerateCode (string virtualPath, string virtualFileString, out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il percorso virtuale del file."
    - id: virtualFileString
      type: System.String
      description: "Il contenuto del file."
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "Quando termina, questo metodo contiene un dizionario di pragma di linea."
    return:
      type: System.String
      description: "Oggetto <xref:System.String>contenente il codice generato.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GenerateCode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>è null."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  id: GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Restituisce la struttura ad albero codeDOM, un tipo di compilatore e parametri del compilatore per un file rappresentato da un percorso virtuale."
  remarks: "Il metodo GenerateCodeCompileUnit recupera le informazioni necessarie per compilare un file. Oltre a un <xref:System.CodeDom.CodeCompileUnit>dell&quot;oggetto come valore restituito, il metodo restituisce tre `out` parametri.</xref:System.CodeDom.CodeCompileUnit> Il `codeDomProviderType` parametro restituisce il tipo di provider per la generazione e compilazione del file. Il `compilerParameters` parametro contiene proprietà che determinano il comportamento di compilazione. Il `linePragmasTable` parametro contiene un dizionario di pragma di linea."
  syntax:
    content: public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il percorso virtuale del file."
    - id: codeDomProviderType
      type: System.Type
      description: "Quando termina, questo metodo contiene il tipo di provider codeDOM utilizzato per la compilazione e la generazione di codice."
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "Quando questo metodo viene restituito, contiene le proprietà che definiscono la modalità di compilazione il file."
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "Quando termina, questo metodo contiene un dizionario di pragma di linea."
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "Oggetto <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> per il file specificato."
  overload: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  id: GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Restituisce il contenuto, struttura ad albero codeDOM, tipo di compilatore e i parametri del compilatore per un file rappresentato da un percorso virtuale."
  remarks: "Il metodo GenerateCodeCompileUnit recupera le informazioni necessarie per compilare un file. Oltre a un <xref:System.CodeDom.CodeCompileUnit>dell&quot;oggetto come valore restituito, il metodo restituisce tre `out` parametri.</xref:System.CodeDom.CodeCompileUnit> Il `codeDomProviderType` parametro restituisce il tipo di provider per la generazione e compilazione del file. Il `compilerParameters` parametro contiene proprietà che determinano il comportamento di compilazione. Il `linePragmasTable` parametro contiene un dizionario di pragma di linea."
  syntax:
    content: public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, string virtualFileString, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il percorso virtuale del file."
    - id: virtualFileString
      type: System.String
      description: "Il contenuto del file rappresentato dal `virtualPath` parametro."
    - id: codeDomProviderType
      type: System.Type
      description: "Quando termina, questo metodo contiene il tipo di provider codeDOM utilizzato per la compilazione e la generazione di codice."
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "Quando questo metodo viene restituito, contiene le proprietà che definiscono la modalità con cui il file rappresentato dal `virtualPath` parametro verrà compilato."
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "Quando termina, questo metodo contiene un dizionario di pragma di linea."
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "Oggetto <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> per il file specificato."
  overload: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>è null."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories
  id: GetAppDomainShutdownDirectories
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetAppDomainShutdownDirectories()
  nameWithType: ClientBuildManager.GetAppDomainShutdownDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Ottiene le directory contenenti file che, quando vengono modificate, determinare il dominio dell&quot;applicazione arrestare."
  remarks: "Le modifiche ai file nella directory di primo livello specifico determinano il dominio dell&quot;applicazione arrestare. I file all&quot;interno di Bin, App_Code, Global_Resources, riferimenti Web e directory App_Browsers vengono monitorati per rilevare eventuali modifiche. Quando vengono rilevate modifiche, il dominio applicazione è stato arrestato."
  syntax:
    content: public string[] GetAppDomainShutdownDirectories ();
    parameters: []
    return:
      type: System.String[]
      description: "Oggetto <xref:System.String>matrice contenente i nomi di directory di primo livello.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions
  id: GetBrowserDefinitions
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetBrowserDefinitions()
  nameWithType: ClientBuildManager.GetBrowserDefinitions()
  fullName: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Ottiene una raccolta di elementi di browser."
  remarks: "Il <xref:System.Collections.IDictionary>oggetto contiene i nomi di browser per le chiavi e <xref:System.Web.UI.Triplet>oggetti per i valori.</xref:System.Web.UI.Triplet> </xref:System.Collections.IDictionary> Il <xref:System.Web.UI.Triplet>ogni oggetto contiene il nome dell&quot;elemento browser padre, una descrizione e la profondità dell&quot;elemento nell&quot;albero del browser.</xref:System.Web.UI.Triplet>"
  syntax:
    content: public System.Collections.IDictionary GetBrowserDefinitions ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>contenente gli elementi del browser.</xref:System.Collections.IDictionary>"
  overload: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  id: GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  nameWithType: ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Ottiene informazioni sul tipo di compilatore, parametri del compilatore e la directory in cui archiviare i file di codice generati da file non di codice, ad esempio file WSDL."
  remarks: "Il metodo GetCodeDirectoryInformation recupera le informazioni necessarie per creare una directory di codice. Restituisce queste informazioni tramite tre `out` parametri. Il `codeDomProviderType` parametro restituisce il tipo di provider per la generazione e la compilazione dei file nella directory del codice. Il `compilerParameters` parametro contiene proprietà che determinano il comportamento di compilazione. Il `generatedFilesDir` parametro archivia il percorso della directory contenente tutti i file di codice generati da file non di codice nella directory del codice, ad esempio i file WSDL."
  syntax:
    content: public void GetCodeDirectoryInformation (string virtualCodeDir, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out string generatedFilesDir);
    parameters:
    - id: virtualCodeDir
      type: System.String
      description: "La directory su cui si desidera recuperare le informazioni."
    - id: codeDomProviderType
      type: System.Type
      description: "Quando termina, questo metodo contiene il tipo di provider utilizzato per la compilazione e la generazione di codice."
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "Quando questo metodo viene restituito, contiene le proprietà che definiscono la modalità di compilazione il file."
    - id: generatedFilesDir
      type: System.String
      description: "Quando questo metodo viene restituito, contiene la directory di file generati da file non di codice."
  overload: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualCodeDir</code>è null."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)
  id: GetCompiledType(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetCompiledType(String)
  nameWithType: ClientBuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompiledType(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Compila il file rappresentato dal percorso virtuale e restituisce il tipo compilato."
  syntax:
    content: public Type GetCompiledType (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il percorso virtuale del file da compilare."
    return:
      type: System.Type
      description: "Il <xref:System.Type>del file compilato.</xref:System.Type>"
  overload: System.Web.Compilation.ClientBuildManager.GetCompiledType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>è null."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  id: GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetCompilerParameters(String,Type,CompilerParameters)
  nameWithType: ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Restituisce il tipo di compilatore e i parametri utilizzati per compilare un file rappresentato da un percorso virtuale."
  syntax:
    content: public void GetCompilerParameters (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il percorso virtuale del file."
    - id: codeDomProviderType
      type: System.Type
      description: "Quando termina, questo metodo contiene il tipo di provider utilizzato per la compilazione e la generazione di codice."
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "Quando questo metodo viene restituito, contiene le proprietà che definiscono la modalità di compilazione il file."
  overload: System.Web.Compilation.ClientBuildManager.GetCompilerParameters*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>è null."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)
  id: GetGeneratedFileVirtualPath(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetGeneratedFileVirtualPath(String)
  nameWithType: ClientBuildManager.GetGeneratedFileVirtualPath(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Restituisce il percorso virtuale di un file generato."
  syntax:
    content: public string GetGeneratedFileVirtualPath (string filePath);
    parameters:
    - id: filePath
      type: System.String
      description: "Il percorso fisico completo a un file generato."
    return:
      type: System.String
      description: "Oggetto <xref:System.String>contenente il percorso virtuale per <code> filePath </code>.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filePath</code>è null."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)
  id: GetGeneratedSourceFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetGeneratedSourceFile(String)
  nameWithType: ClientBuildManager.GetGeneratedSourceFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Ottiene il percorso fisico del file generato per un percorso virtuale."
  syntax:
    content: public string GetGeneratedSourceFile (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il percorso virtuale del file da recuperare."
    return:
      type: System.String
      description: "Oggetto <xref:System.String>che contiene il percorso fisico del file generato.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>è null."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)
  id: GetTopLevelAssemblyReferences(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetTopLevelAssemblyReferences(String)
  nameWithType: ClientBuildManager.GetTopLevelAssemblyReferences(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Restituisce una matrice di assembly definiti nella directory Bin e <xref uid=&quot;langword_csharp_&lt;assembly&gt;&quot; name=&quot;&lt;assembly&gt;&quot; href=&quot;&quot;> </xref> sezione del file di configurazione Web."
  syntax:
    content: public string[] GetTopLevelAssemblyReferences (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il nome della configurazione e il percorso."
    return:
      type: System.String[]
      description: "Oggetto <xref:System.String>matrice contenente i percorsi delle basi nella directory Bin e <xref uid=&quot;langword_csharp_&lt;assembly&gt;&quot; name=&quot;&lt;assembly&gt;&quot; href=&quot;&quot;> </xref> sezione del file di configurazione Web.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>è null."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories
  id: GetVirtualCodeDirectories
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetVirtualCodeDirectories()
  nameWithType: ClientBuildManager.GetVirtualCodeDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Restituisce i percorsi virtuali nella directory App_Code e nelle relative sottodirectory in un&quot;applicazione ASP.NET."
  syntax:
    content: public string[] GetVirtualCodeDirectories ();
    parameters: []
    return:
      type: System.String[]
      description: "Oggetto <xref:System.String>matrice contenente tutti i percorsi di directory di codice in un&quot;applicazione virtuali.</xref:System.String>"
  overload: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: ClientBuildManager.InitializeLifetimeService()
  fullName: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Fornisce il dominio dell&quot;applicazione un infinito durata impedendo la creazione di un lease."
  remarks: "Questo metodo esegue l&quot;override del <xref:System.MarshalByRefObject.InitializeLifetimeService%2A>metodo nella relativa classe base.</xref:System.MarshalByRefObject.InitializeLifetimeService%2A> Restituisce sempre `null` e, pertanto, impedisce la creazione di lease per limita la durata del dominio applicazione."
  syntax:
    content: public override object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)
  id: IsCodeAssembly(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: IsCodeAssembly(String)
  nameWithType: ClientBuildManager.IsCodeAssembly(String)
  fullName: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Indica se un assembly è un assembly di codice."
  syntax:
    content: public bool IsCodeAssembly (string assemblyName);
    parameters:
    - id: assemblyName
      type: System.String
      description: "Il nome dell&quot;assembly per essere identificato come un assembly di codice."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <code> assemblyName </code> parametro corrisponde a uno degli assembly di codice generato in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.ClientBuildManager.IsCodeAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyName</code>è null."
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.IsHostCreated
  id: IsHostCreated
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: IsHostCreated
  nameWithType: ClientBuildManager.IsHostCreated
  fullName: System.Web.Compilation.ClientBuildManager.IsHostCreated
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Ottiene un valore che indica se è stato creato un dominio applicazione per la compilazione di applicazioni Web ASP.NET."
  syntax:
    content: public bool IsHostCreated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è stato creato il dominio dell&quot;applicazione per la compilazione di applicazioni Web ASP.NET, in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.ClientBuildManager.IsHostCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication
  id: PrecompileApplication
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: PrecompileApplication()
  nameWithType: ClientBuildManager.PrecompileApplication()
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Precompilazione di un&quot;applicazione ASP.NET."
  remarks: "ASP.NET supporta tre formati di precompilazione. Consente a un form per la precompilazione sul posto di un&quot;applicazione ASP.NET. In questo modulo, il sito sia distribuito nell&quot;ambiente di produzione e quindi precompilato, eliminando la necessità di compilare in modo dinamico il sito quando prima visita da un utente. Il primo utente del sito non si verifica il ritardo generalmente rilevato in un sito che viene compilato in modo dinamico.       Gli altri due formati di precompilazione usati per la distribuzione. In delle forme, viene generato un layout del sito che possono essere distribuiti in un computer di produzione. Uno dei formati include le pagine di markup in modo da parte dell&quot;aggiornamento può essere eseguita nel sito compilato. L&quot;altro modulo non contiene le pagine di codice e pertanto non può essere aggiornato senza ricompilare il sito originale. Codice sorgente non viene distribuito nell&quot;ambiente di destinazione in una di queste forme di precompilazione.       L&quot;applicazione per la precompilazione è definita tramite la <xref:System.Web.Compilation.ClientBuildManager>costruttore.</xref:System.Web.Compilation.ClientBuildManager> Il <xref:System.Web.Compilation.ClientBuildManagerParameter>oggetto del <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>costruttore definisce quale dei tre formati di precompilazione eseguire.</xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter>       Uno sviluppatore può precompilare un sito Web con il `aspnet_compiler` strumento da riga di comando o chiamando il metodo PrecompileApplication."
  syntax:
    content: public void PrecompileApplication ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  id: PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: PrecompileApplication(ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Precompilazione di un&quot;applicazione ASP.NET e fornisce un metodo di callback per ricevere informazioni sullo stato di compilazione."
  remarks: "ASP.NET supporta tre formati di precompilazione. Consente a un form per la precompilazione sul posto di un&quot;applicazione ASP.NET. In questo modulo, il sito sia distribuito nell&quot;ambiente di produzione e quindi precompilato, eliminando la necessità di compilare in modo dinamico il sito quando prima visita da un utente. Il primo utente del sito non si verifica il ritardo generalmente rilevato in un sito che viene compilato in modo dinamico. Il `callback` parametro contiene il metodo da chiamare quando il risultato della compilazione.       Gli altri due formati di precompilazione usati per la distribuzione. In delle forme, viene generato un layout del sito che possono essere distribuiti in un computer di produzione. Uno dei formati include le pagine di markup in modo da parte dell&quot;aggiornamento può essere eseguita nel sito compilato. L&quot;altro modulo non contiene le pagine di codice e pertanto non può essere aggiornato senza ricompilare il sito originale. Codice sorgente non viene distribuito nell&quot;ambiente di destinazione in una di queste forme di precompilazione.       L&quot;applicazione per la precompilazione è definita tramite la <xref:System.Web.Compilation.ClientBuildManager>costruttore.</xref:System.Web.Compilation.ClientBuildManager> Il <xref:System.Web.Compilation.ClientBuildManagerParameter>oggetto del <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>costruttore definisce quale dei tre formati di precompilazione eseguire.</xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter>       Uno sviluppatore può precompilare un sito Web con il `aspnet_compiler` strumento da riga di comando o chiamando il metodo PrecompileApplication."
  syntax:
    content: public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback);
    parameters:
    - id: callback
      type: System.Web.Compilation.ClientBuildManagerCallback
      description: "Oggetto <xref href=&quot;System.Web.Compilation.ClientBuildManagerCallback&quot;> </xref> contenente il metodo da chiamare quando il risultato della compilazione."
  overload: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  id: PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: PrecompileApplication(ClientBuildManagerCallback,Boolean)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Precompilazione di un&quot;applicazione ASP.NET, fornisce un metodo di callback per ricevere informazioni sullo stato di compilazione e indica se creare una compilazione pulita."
  remarks: "ASP.NET supporta tre formati di precompilazione. Consente a un form per la precompilazione sul posto di un&quot;applicazione ASP.NET. In questo modulo, il sito sia distribuito nell&quot;ambiente di produzione e quindi precompilato, eliminando la necessità di compilare in modo dinamico il sito quando prima visita da un utente. Il primo utente del sito non si verifica il ritardo generalmente rilevato in un sito che viene compilato in modo dinamico. Il `callback` parametro contiene il metodo da chiamare quando il risultato della compilazione.       Gli altri due formati di precompilazione usati per la distribuzione. In delle forme, viene generato un layout del sito che possono essere distribuiti in un computer di produzione. Uno dei formati include le pagine di markup in modo da parte dell&quot;aggiornamento può essere eseguita nel sito compilato. L&quot;altro modulo non contiene le pagine di codice e pertanto non può essere aggiornato senza ricompilare il sito originale. Codice sorgente non viene distribuito nell&quot;ambiente di destinazione in una di queste forme di precompilazione.       L&quot;applicazione per la precompilazione è definita tramite la <xref:System.Web.Compilation.ClientBuildManager>costruttore.</xref:System.Web.Compilation.ClientBuildManager> Il <xref:System.Web.Compilation.ClientBuildManagerParameter>oggetto del <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>costruttore definisce quale dei tre formati di precompilazione eseguire.</xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> </xref:System.Web.Compilation.ClientBuildManagerParameter>       Uno sviluppatore può precompilare un sito Web con il `aspnet_compiler` strumento da riga di comando o mediante la chiamata di <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>(metodo).</xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>"
  syntax:
    content: public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild);
    parameters:
    - id: callback
      type: System.Web.Compilation.ClientBuildManagerCallback
      description: "Oggetto <xref href=&quot;System.Web.Compilation.ClientBuildManagerCallback&quot;> </xref> contenente il metodo da chiamare quando il risultato della compilazione."
    - id: forceCleanBuild
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per eseguire una compilazione pulita, in cui verrà eliminati prima tutti i file oggetto e intermedi; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per ricompilare solo i file che sono stati modificati. Impostare su true se è probabile che una dipendenza potrebbe non essere prelevata dall&quot;ambiente di compilazione."
  overload: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: ClientBuildManager.System.IDisposable.Dispose()
  fullName: System.Web.Compilation.ClientBuildManager.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Termina l&quot;applicazione ASP.NET corrente."
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.Unload
  id: Unload
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: Unload()
  nameWithType: ClientBuildManager.Unload()
  fullName: System.Web.Compilation.ClientBuildManager.Unload()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Scarica il dominio applicazione per la compilazione di applicazioni Web ASP.NET."
  syntax:
    content: public bool Unload ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il dominio applicazione viene scaricato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.ClientBuildManager.Unload*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String)
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
- uid: System.Web.Compilation.ClientBuildManagerParameter
  parent: System.Web.Compilation
  isExternal: false
  name: ClientBuildManagerParameter
  nameWithType: ClientBuildManagerParameter
  fullName: System.Web.Compilation.ClientBuildManagerParameter
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
- uid: System.ComponentModel.TypeDescriptionProvider
  parent: System.ComponentModel
  isExternal: false
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
- uid: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: AppDomainShutdown
  nameWithType: ClientBuildManager.AppDomainShutdown
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
- uid: System.Web.Compilation.BuildManagerHostUnloadEventHandler
  parent: System.Web.Compilation
  isExternal: false
  name: BuildManagerHostUnloadEventHandler
  nameWithType: BuildManagerHostUnloadEventHandler
  fullName: System.Web.Compilation.BuildManagerHostUnloadEventHandler
- uid: System.Web.Compilation.ClientBuildManager.AppDomainStarted
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: AppDomainStarted
  nameWithType: ClientBuildManager.AppDomainStarted
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainStarted
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: AppDomainUnloaded
  nameWithType: ClientBuildManager.AppDomainUnloaded
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
- uid: System.Web.Compilation.ClientBuildManager.CodeGenDir
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CodeGenDir
  nameWithType: ClientBuildManager.CodeGenDir
  fullName: System.Web.Compilation.ClientBuildManager.CodeGenDir
- uid: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileApplicationDependencies()
  nameWithType: ClientBuildManager.CompileApplicationDependencies()
  fullName: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies()
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileFile(String)
  nameWithType: ClientBuildManager.CompileFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String)
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileFile(String,ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
- uid: System.Web.Compilation.ClientBuildManagerCallback
  parent: System.Web.Compilation
  isExternal: false
  name: ClientBuildManagerCallback
  nameWithType: ClientBuildManagerCallback
  fullName: System.Web.Compilation.ClientBuildManagerCallback
- uid: System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CreateObject(Type,Boolean)
  nameWithType: ClientBuildManager.CreateObject(Type,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.CreateObject(Type,Boolean)
- uid: System.Web.Hosting.IRegisteredObject
  parent: System.Web.Hosting
  isExternal: false
  name: IRegisteredObject
  nameWithType: IRegisteredObject
  fullName: System.Web.Hosting.IRegisteredObject
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCode(String,String,IDictionary)
  nameWithType: ClientBuildManager.GenerateCode(String,String,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCode(String,String,IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.CodeDom.Compiler.CompilerParameters
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CompilerParameters
  nameWithType: CompilerParameters
  fullName: System.CodeDom.Compiler.CompilerParameters
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
- uid: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetAppDomainShutdownDirectories()
  nameWithType: ClientBuildManager.GetAppDomainShutdownDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetBrowserDefinitions()
  nameWithType: ClientBuildManager.GetBrowserDefinitions()
  fullName: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions()
- uid: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  nameWithType: ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
- uid: System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompiledType(String)
  nameWithType: ClientBuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompiledType(String)
- uid: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompilerParameters(String,Type,CompilerParameters)
  nameWithType: ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedFileVirtualPath(String)
  nameWithType: ClientBuildManager.GetGeneratedFileVirtualPath(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(String)
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedSourceFile(String)
  nameWithType: ClientBuildManager.GetGeneratedSourceFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(String)
- uid: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetTopLevelAssemblyReferences(String)
  nameWithType: ClientBuildManager.GetTopLevelAssemblyReferences(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(String)
- uid: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetVirtualCodeDirectories()
  nameWithType: ClientBuildManager.GetVirtualCodeDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories()
- uid: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: ClientBuildManager.InitializeLifetimeService()
  fullName: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsCodeAssembly(String)
  nameWithType: ClientBuildManager.IsCodeAssembly(String)
  fullName: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(String)
- uid: System.Web.Compilation.ClientBuildManager.IsHostCreated
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsHostCreated
  nameWithType: ClientBuildManager.IsHostCreated
  fullName: System.Web.Compilation.ClientBuildManager.IsHostCreated
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication()
  nameWithType: ClientBuildManager.PrecompileApplication()
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication()
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication(ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication(ClientBuildManagerCallback,Boolean)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
- uid: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: ClientBuildManager.System.IDisposable.Dispose()
  fullName: System.Web.Compilation.ClientBuildManager.System.IDisposable.Dispose()
- uid: System.Web.Compilation.ClientBuildManager.Unload
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: Unload()
  nameWithType: ClientBuildManager.Unload()
  fullName: System.Web.Compilation.ClientBuildManager.Unload()
- uid: System.Web.Compilation.ClientBuildManager.#ctor*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager
  nameWithType: ClientBuildManager.ClientBuildManager
- uid: System.Web.Compilation.ClientBuildManager.CodeGenDir*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CodeGenDir
  nameWithType: ClientBuildManager.CodeGenDir
- uid: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileApplicationDependencies
  nameWithType: ClientBuildManager.CompileApplicationDependencies
- uid: System.Web.Compilation.ClientBuildManager.CompileFile*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileFile
  nameWithType: ClientBuildManager.CompileFile
- uid: System.Web.Compilation.ClientBuildManager.CreateObject*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CreateObject
  nameWithType: ClientBuildManager.CreateObject
- uid: System.Web.Compilation.ClientBuildManager.GenerateCode*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCode
  nameWithType: ClientBuildManager.GenerateCode
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCodeCompileUnit
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit
- uid: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetAppDomainShutdownDirectories
  nameWithType: ClientBuildManager.GetAppDomainShutdownDirectories
- uid: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetBrowserDefinitions
  nameWithType: ClientBuildManager.GetBrowserDefinitions
- uid: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCodeDirectoryInformation
  nameWithType: ClientBuildManager.GetCodeDirectoryInformation
- uid: System.Web.Compilation.ClientBuildManager.GetCompiledType*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompiledType
  nameWithType: ClientBuildManager.GetCompiledType
- uid: System.Web.Compilation.ClientBuildManager.GetCompilerParameters*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompilerParameters
  nameWithType: ClientBuildManager.GetCompilerParameters
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedFileVirtualPath
  nameWithType: ClientBuildManager.GetGeneratedFileVirtualPath
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedSourceFile
  nameWithType: ClientBuildManager.GetGeneratedSourceFile
- uid: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetTopLevelAssemblyReferences
  nameWithType: ClientBuildManager.GetTopLevelAssemblyReferences
- uid: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetVirtualCodeDirectories
  nameWithType: ClientBuildManager.GetVirtualCodeDirectories
- uid: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: ClientBuildManager.InitializeLifetimeService
- uid: System.Web.Compilation.ClientBuildManager.IsCodeAssembly*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsCodeAssembly
  nameWithType: ClientBuildManager.IsCodeAssembly
- uid: System.Web.Compilation.ClientBuildManager.IsHostCreated*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsHostCreated
  nameWithType: ClientBuildManager.IsHostCreated
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication
  nameWithType: ClientBuildManager.PrecompileApplication
- uid: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ClientBuildManager.System.IDisposable.Dispose
- uid: System.Web.Compilation.ClientBuildManager.Unload*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: Unload
  nameWithType: ClientBuildManager.Unload
