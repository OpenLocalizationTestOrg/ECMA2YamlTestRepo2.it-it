### YamlMime:ManagedReference
items:
- uid: System.Threading.Overlapped
  id: Overlapped
  children:
  - System.Threading.Overlapped.#ctor
  - System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  - System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  - System.Threading.Overlapped.AsyncResult
  - System.Threading.Overlapped.EventHandle
  - System.Threading.Overlapped.EventHandleIntPtr
  - System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  - System.Threading.Overlapped.OffsetHigh
  - System.Threading.Overlapped.OffsetLow
  - System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  - System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  - System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  - System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  - System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  langs:
  - csharp
  name: Overlapped
  nameWithType: Overlapped
  fullName: System.Threading.Overlapped
  type: Class
  summary: "Fornisce una rappresentazione gestita di Win32 `OVERLAPPED` struttura, inclusi metodi per il trasferimento di informazioni da un&quot;istanza di Overlapped a un <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struttura."
  remarks: "Il <xref:System.Threading.Overlapped.Pack%2A>e <xref:System.Threading.Overlapped.UnsafePack%2A>metodi trasferiscono le informazioni da un oggetto Overlapped per un <xref:System.Threading.NativeOverlapped>struttura che può essere passato alle funzioni API Win32 per asincrona file i/o.</xref:System.Threading.NativeOverlapped> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A> Le <xref:System.Threading.Overlapped.Unpack%2A>informazioni sul metodo di trasferimento da una <xref:System.Threading.NativeOverlapped>struttura a un&quot;istanza della classe Overlapped.</xref:System.Threading.NativeOverlapped> </xref:System.Threading.Overlapped.Unpack%2A>       Le modifiche alle proprietà di un oggetto Overlapped influiscono associato <xref:System.Threading.NativeOverlapped>struttura e viceversa.</xref:System.Threading.NativeOverlapped>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class Overlapped
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor
  id: '#ctor'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped()
  nameWithType: Overlapped.Overlapped()
  fullName: System.Threading.Overlapped.Overlapped()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Inizializza una nuova istanza vuota del <xref href=&quot;System.Threading.Overlapped&quot;> </xref> classe."
  syntax:
    content: public Overlapped ();
    parameters: []
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped(Int32,Int32,Int32,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Threading.Overlapped&quot;> </xref> posizionare classe con il file specificato, l&quot;handle di intero a 32 bit a un evento che viene segnalato quando l&quot;operazione dei / o è stata completata e un&quot;interfaccia tramite cui si desidera restituire i risultati dell&quot;operazione."
  remarks: "Utilizzare la <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>proprietà da ottenere l&quot;handle di qualsiasi evento di sincronizzazione gestito che deriva dalla <xref:System.Threading.WaitHandle>classe.</xref:System.Threading.WaitHandle> </xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>       L&quot;implementazione di <xref:System.IAsyncResult>fornisce informazioni sullo stato dell&quot;operazione dei / o.</xref:System.IAsyncResult> Passarlo al costruttore nel `ar` parametro e recuperarli in un secondo momento con la <xref:System.Threading.Overlapped.AsyncResult%2A>proprietà.</xref:System.Threading.Overlapped.AsyncResult%2A> Se viene specificato un metodo di callback per il <xref:System.Threading.Overlapped.Pack%2A>o <xref:System.Threading.Overlapped.UnsafePack%2A>metodo, il callback può recuperare il <xref:System.IAsyncResult>per decomprimere il <xref:System.Threading.NativeOverlapped>struttura riceve.</xref:System.Threading.NativeOverlapped> </xref:System.IAsyncResult> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A>"
  syntax:
    content: public Overlapped (int offsetLo, int offsetHi, int hEvent, IAsyncResult ar);
    parameters:
    - id: offsetLo
      type: System.Int32
      description: "La parola bassa della posizione del file da cui iniziare il trasferimento."
    - id: offsetHi
      type: System.Int32
      description: "La parola elevata della posizione del file da cui iniziare il trasferimento."
    - id: hEvent
      type: System.Int32
      description: "Handle a un evento che viene segnalato quando l&quot;operazione dei / o è stata completata."
    - id: ar
      type: System.IAsyncResult
      description: "Oggetto che implementa il <xref:System.IAsyncResult>l&quot;interfaccia e fornisce informazioni sullo stato dell&quot;operazione dei / o.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  id: '#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Threading.Overlapped&quot;> </xref> posizionare classe con il file specificato, l&quot;handle per un evento che viene segnalato quando l&quot;operazione dei / o è stata completata e un&quot;interfaccia tramite cui si desidera restituire i risultati dell&quot;operazione."
  remarks: "Per ottenere l&quot;handle di un oggetto di sincronizzazione gestito che deriva dal <xref:System.Threading.WaitHandle>, utilizzare il <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName>proprietà da ottenere un <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>dell&quot;oggetto e quindi chiamare il <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>metodo.</xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> </xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> </xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName> </xref:System.Threading.WaitHandle>       L&quot;implementazione di <xref:System.IAsyncResult>fornisce informazioni sullo stato dell&quot;operazione dei / o.</xref:System.IAsyncResult> Passarlo al costruttore nel `ar` parametro e recuperarli in un secondo momento con la <xref:System.Threading.Overlapped.AsyncResult%2A>proprietà.</xref:System.Threading.Overlapped.AsyncResult%2A> Se viene specificato un metodo di callback per il <xref:System.Threading.Overlapped.Pack%2A>o <xref:System.Threading.Overlapped.UnsafePack%2A>metodo, il callback può recuperare il <xref:System.IAsyncResult>per decomprimere il <xref:System.Threading.NativeOverlapped>struttura riceve.</xref:System.Threading.NativeOverlapped> </xref:System.IAsyncResult> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A>"
  syntax:
    content: public Overlapped (int offsetLo, int offsetHi, IntPtr hEvent, IAsyncResult ar);
    parameters:
    - id: offsetLo
      type: System.Int32
      description: "La parola bassa della posizione del file da cui iniziare il trasferimento."
    - id: offsetHi
      type: System.Int32
      description: "La parola elevata della posizione del file da cui iniziare il trasferimento."
    - id: hEvent
      type: System.IntPtr
      description: "Handle a un evento che viene segnalato quando l&quot;operazione dei / o è stata completata."
    - id: ar
      type: System.IAsyncResult
      description: "Oggetto che implementa il <xref:System.IAsyncResult>l&quot;interfaccia e fornisce informazioni sullo stato dell&quot;operazione dei / o.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.AsyncResult
  id: AsyncResult
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
  fullName: System.Threading.Overlapped.AsyncResult
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Ottiene o imposta l&quot;oggetto che fornisce informazioni sullo stato dell&quot;operazione dei / o."
  syntax:
    content: public IAsyncResult AsyncResult { get; set; }
    return:
      type: System.IAsyncResult
      description: "Oggetto che implementa il <xref:System.IAsyncResult>interfaccia.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.AsyncResult*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.EventHandle
  id: EventHandle
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: EventHandle
  nameWithType: Overlapped.EventHandle
  fullName: System.Threading.Overlapped.EventHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Ottiene o imposta l&quot;handle di intero a 32 bit a un evento di sincronizzazione segnalata quando l&quot;operazione dei / o è stata completata."
  remarks: "Questa proprietà non può essere utilizzata in piattaforme a 64 bit. Utilizzare il <xref:System.Threading.Overlapped.EventHandleIntPtr%2A>proprietà invece.</xref:System.Threading.Overlapped.EventHandleIntPtr%2A>       Utilizzare la <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>proprietà da ottenere l&quot;handle di qualsiasi evento di sincronizzazione gestito che deriva dalla <xref:System.Threading.WaitHandle>classe.</xref:System.Threading.WaitHandle> </xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>"
  syntax:
    content: public int EventHandle { get; set; }
    return:
      type: System.Int32
      description: "Un <xref:System.Int32>valore che rappresenta l&quot;handle dell&quot;evento di sincronizzazione.</xref:System.Int32>"
  overload: System.Threading.Overlapped.EventHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.EventHandleIntPtr
  id: EventHandleIntPtr
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
  fullName: System.Threading.Overlapped.EventHandleIntPtr
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Ottiene o imposta l&quot;handle per l&quot;evento di sincronizzazione segnalata quando l&quot;operazione dei / o è stata completata."
  remarks: "Per ottenere l&quot;handle di un oggetto di sincronizzazione gestito che deriva dal <xref:System.Threading.WaitHandle>, utilizzare il <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName>proprietà da ottenere un <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>dell&quot;oggetto e quindi chiamare il <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>metodo.</xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> </xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> </xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName> </xref:System.Threading.WaitHandle>"
  syntax:
    content: public IntPtr EventHandleIntPtr { get; set; }
    return:
      type: System.IntPtr
      description: "Un <xref:System.IntPtr>che rappresenta l&quot;handle dell&quot;evento.</xref:System.IntPtr>"
  overload: System.Threading.Overlapped.EventHandleIntPtr*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  id: Free(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Free(NativeOverlapped*)
  nameWithType: Overlapped.Free(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Free(NativeOverlapped*)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Libera la memoria non gestita associata a una struttura sovrapposta nativa allocata dal <xref:System.Threading.Overlapped.Pack*>metodo.</xref:System.Threading.Overlapped.Pack*>"
  remarks: "È necessario chiamare il metodo Free esattamente una volta nell&quot;ogni <xref:System.Threading.NativeOverlapped>puntatore ricevere il <xref:System.Threading.Overlapped.Pack%2A>metodo.</xref:System.Threading.Overlapped.Pack%2A> </xref:System.Threading.NativeOverlapped> Se non si chiama il metodo Free, si verificherà una perdita di memoria. Se si chiama il metodo Free più volte, la memoria verrà danneggiata."
  syntax:
    content: public static void Free (System.Threading.NativeOverlapped* nativeOverlappedPtr);
    parameters:
    - id: nativeOverlappedPtr
      type: System.Threading.NativeOverlapped*
      description: "Un puntatore al <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struttura da liberare."
  overload: System.Threading.Overlapped.Free*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nativeOverlappedPtr</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.Overlapped.OffsetHigh
  id: OffsetHigh
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
  fullName: System.Threading.Overlapped.OffsetHigh
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Ottiene o imposta la parola più significativa della posizione del file da cui iniziare il trasferimento. La posizione del file è un offset di byte dall&quot;inizio del file."
  syntax:
    content: public int OffsetHigh { get; set; }
    return:
      type: System.Int32
      description: "Un <xref:System.Int32>valore che rappresenta la parola elevata della posizione del file.</xref:System.Int32>"
  overload: System.Threading.Overlapped.OffsetHigh*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.OffsetLow
  id: OffsetLow
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
  fullName: System.Threading.Overlapped.OffsetLow
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Ottiene o imposta la parola meno significativa della posizione del file da cui iniziare il trasferimento. La posizione del file è un offset di byte dall&quot;inizio del file."
  syntax:
    content: public int OffsetLow { get; set; }
    return:
      type: System.Int32
      description: "Un <xref:System.Int32>valore che rappresenta la parola bassa della posizione del file.</xref:System.Int32>"
  overload: System.Threading.Overlapped.OffsetLow*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  id: Pack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Pack(IOCompletionCallback)
  nameWithType: Overlapped.Pack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Comprime l&quot;istanza corrente in un <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struttura, specificando il delegato da richiamare quando è stata completata l&quot;operazione dei / o asincrona."
  remarks: "Il puntatore non gestito restituito da questo metodo può essere passato al sistema operativo in operazioni dei / o sovrapposte. Il <xref:System.Threading.NativeOverlapped>struttura è fissa nella memoria fisica finché <xref:System.Threading.Overlapped.Unpack%2A>viene chiamato.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>      > [!IMPORTANT] > Il chiamante è responsabile del blocco del buffer. Se il dominio applicazione viene scaricato, tuttavia, l&quot;handle al buffer bloccato viene eliminato e il buffer viene rilasciato, lasciando l&quot;operazione dei / o scrivere all&quot;indirizzo liberato. Per questo motivo, è preferibile utilizzare il <xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>overload del metodo, in cui il runtime blocca il buffer.</xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>"
  syntax:
    content: public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Un <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> delegato che rappresenta il metodo di callback richiamato al completamento dell&quot;operazione dei / o asincrona."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Un puntatore non gestito a un <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struttura."
  overload: System.Threading.Overlapped.Pack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Corrente <xref href=&quot;System.Threading.Overlapped&quot;> </xref> è già stato compresso."
  platform:
  - net462
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  id: Pack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Pack(IOCompletionCallback,Object)
  nameWithType: Overlapped.Pack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Comprime l&quot;istanza corrente in un <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struttura, specificando un delegato che viene richiamato quando l&quot;operazione dei / o asincrona è stata completata e un oggetto gestito che funge da buffer."
  remarks: "Il puntatore non gestito restituito da questo metodo può essere passato al sistema operativo in operazioni dei / o sovrapposte. Il <xref:System.Threading.NativeOverlapped>struttura è fissa nella memoria fisica finché <xref:System.Threading.Overlapped.Unpack%2A>viene chiamato.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       Il buffer o buffer specificato in `userData` deve corrispondere a quelli passati alla funzione non gestita del sistema operativo che esegue il / o asincrona.      > [!NOTE] > Il runtime blocca il buffer o buffer specificato in `userData` per la durata dell&quot;operazione dei / o. Se il dominio applicazione viene scaricato, il runtime mantiene la memoria bloccata fino al completamento dell&quot;operazione dei / o."
  syntax:
    content: public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb, object userData);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Un <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> delegato che rappresenta il metodo di callback richiamato al completamento dell&quot;operazione dei / o asincrona."
    - id: userData
      type: System.Object
      description: "Un oggetto o una matrice di oggetti che rappresenta il buffer di input o output per l&quot;operazione. Ogni oggetto rappresenta un buffer, ad esempio una matrice di byte."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Un puntatore non gestito a un <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struttura."
  overload: System.Threading.Overlapped.Pack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Corrente <xref href=&quot;System.Threading.Overlapped&quot;> </xref> è già stato compresso."
  platform:
  - net462
- uid: System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  id: Unpack(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Unpack(NativeOverlapped*)
  nameWithType: Overlapped.Unpack(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Unpack(NativeOverlapped*)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Decomprime non gestita specificato <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struttura in un oggetto gestito <xref href=&quot;System.Threading.Overlapped&quot;> </xref> oggetto."
  remarks: "Il <xref:System.Threading.NativeOverlapped>struttura non viene liberata dalla memoria fisica finché non si chiama il <xref:System.Threading.Overlapped.Free%2A>metodo.</xref:System.Threading.Overlapped.Free%2A> </xref:System.Threading.NativeOverlapped>"
  syntax:
    content: public static System.Threading.Overlapped Unpack (System.Threading.NativeOverlapped* nativeOverlappedPtr);
    parameters:
    - id: nativeOverlappedPtr
      type: System.Threading.NativeOverlapped*
      description: "Un puntatore non gestito a un <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struttura."
    return:
      type: System.Threading.Overlapped
      description: "Un <xref href=&quot;System.Threading.Overlapped&quot;> </xref> oggetto contenente le informazioni decompresse dalla struttura nativa."
  overload: System.Threading.Overlapped.Unpack*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nativeOverlappedPtr</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  id: UnsafePack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: UnsafePack(IOCompletionCallback)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Comprime l&quot;istanza corrente in un <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struttura specificando il delegato da richiamare al completamento dell&quot;operazione dei / o asincrona. Non propaga lo stack di chiamate."
  remarks: "Il puntatore non gestito restituito da questo metodo può essere passato al sistema operativo in operazioni dei / o sovrapposte. Il <xref:System.Threading.NativeOverlapped>struttura è fissa nella memoria fisica finché <xref:System.Threading.Overlapped.Unpack%2A>viene chiamato.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       Il chiamante è responsabile del blocco del buffer. Se il dominio applicazione viene scaricato, tuttavia, l&quot;handle al buffer bloccato viene eliminato e il buffer viene rilasciato, lasciando l&quot;operazione dei / o scrivere all&quot;indirizzo liberato. Per questo motivo, è preferibile utilizzare il <xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>overload del metodo, in cui il runtime blocca il buffer.</xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>      > [!CAUTION] > Tramite il <xref:System.Threading.Overlapped.UnsafePack%2A>metodo è stato possibile aprire inavvertitamente un problema di sicurezza.</xref:System.Threading.Overlapped.UnsafePack%2A> Sicurezza dall&quot;accesso di codice si basa i controlli di autorizzazione sulle autorizzazioni di tutti i chiamanti nello stack. Il <xref:System.Threading.Overlapped.UnsafePack%2A>metodo non propaga lo stack di chiamate.</xref:System.Threading.Overlapped.UnsafePack%2A> Codice dannoso potrebbe essere in grado di sfruttare questa vulnerabilità per evitare i controlli di autorizzazione."
  syntax:
    content: public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Un <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> delegato che rappresenta il metodo di callback richiamato al completamento dell&quot;operazione dei / o asincrona."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Un puntatore non gestito a un <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struttura."
  overload: System.Threading.Overlapped.UnsafePack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Corrente <xref href=&quot;System.Threading.Overlapped&quot;> </xref> è già stato compresso."
  platform:
  - net462
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  id: UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: UnsafePack(IOCompletionCallback,Object)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Comprime l&quot;istanza corrente in un <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struttura, specificando il delegato da richiamare quando l&quot;operazione dei / o asincrona è stata completata e un oggetto gestito che funge da buffer. Non propaga lo stack di chiamate."
  remarks: "Il puntatore non gestito restituito da questo metodo può essere passato al sistema operativo in operazioni dei / o sovrapposte. Il <xref:System.Threading.NativeOverlapped>struttura è fissa nella memoria fisica finché <xref:System.Threading.Overlapped.Unpack%2A>viene chiamato.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       Il buffer o buffer specificato in `userData` deve corrispondere a quelli passati alla funzione non gestita del sistema operativo che esegue il / o asincrona.       Il runtime blocca il buffer o buffer specificato in`userData` per la durata dell&quot;operazione dei / o. Se il dominio applicazione viene scaricato, il runtime mantiene la memoria bloccata fino al completamento dell&quot;operazione dei / o.      > [!CAUTION] > Utilizzando il UnsafePack metodo inavvertitamente può provocare un problema di sicurezza. Sicurezza dall&quot;accesso di codice si basa i controlli di autorizzazione sulle autorizzazioni di tutti i chiamanti nello stack. Il metodo UnsafePack non propaga lo stack di chiamate. Codice dannoso potrebbe essere in grado di sfruttare questa vulnerabilità per evitare i controlli di autorizzazione."
  syntax:
    content: public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb, object userData);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "Un <xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> delegato che rappresenta il metodo di callback richiamato al completamento dell&quot;operazione dei / o asincrona."
    - id: userData
      type: System.Object
      description: "Un oggetto o una matrice di oggetti che rappresenta il buffer di input o output per l&quot;operazione. Ogni oggetto rappresenta un buffer, ad esempio una matrice di byte."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Un puntatore non gestito a un <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> struttura."
  overload: System.Threading.Overlapped.UnsafePack*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante non dispone dell&quot;autorizzazione richiesta."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Corrente <xref href=&quot;System.Threading.Overlapped&quot;> </xref> è già compresso."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Threading.Overlapped.#ctor
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped()
  nameWithType: Overlapped.Overlapped()
  fullName: System.Threading.Overlapped.Overlapped()
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped(Int32,Int32,Int32,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Threading.Overlapped.AsyncResult
  parent: System.Threading.Overlapped
  isExternal: false
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
  fullName: System.Threading.Overlapped.AsyncResult
- uid: System.Threading.Overlapped.EventHandle
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandle
  nameWithType: Overlapped.EventHandle
  fullName: System.Threading.Overlapped.EventHandle
- uid: System.Threading.Overlapped.EventHandleIntPtr
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
  fullName: System.Threading.Overlapped.EventHandleIntPtr
- uid: System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Free(NativeOverlapped*)
  nameWithType: Overlapped.Free(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Free(NativeOverlapped*)
- uid: System.Threading.Overlapped.OffsetHigh
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
  fullName: System.Threading.Overlapped.OffsetHigh
- uid: System.Threading.Overlapped.OffsetLow
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
  fullName: System.Threading.Overlapped.OffsetLow
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack(IOCompletionCallback)
  nameWithType: Overlapped.Pack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback)
- uid: System.Threading.IOCompletionCallback
  parent: System.Threading
  isExternal: false
  name: IOCompletionCallback
  nameWithType: IOCompletionCallback
  fullName: System.Threading.IOCompletionCallback
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack(IOCompletionCallback,Object)
  nameWithType: Overlapped.Pack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback,Object)
- uid: System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Unpack(NativeOverlapped*)
  nameWithType: Overlapped.Unpack(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Unpack(NativeOverlapped*)
- uid: System.Threading.Overlapped
  parent: System.Threading
  isExternal: false
  name: Overlapped
  nameWithType: Overlapped
  fullName: System.Threading.Overlapped
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack(IOCompletionCallback)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback)
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack(IOCompletionCallback,Object)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback,Object)
- uid: System.Threading.Overlapped.#ctor*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped
  nameWithType: Overlapped.Overlapped
- uid: System.Threading.Overlapped.AsyncResult*
  parent: System.Threading.Overlapped
  isExternal: false
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
- uid: System.Threading.Overlapped.EventHandle*
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandle
  nameWithType: Overlapped.EventHandle
- uid: System.Threading.Overlapped.EventHandleIntPtr*
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
- uid: System.Threading.Overlapped.Free*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Free
  nameWithType: Overlapped.Free
- uid: System.Threading.Overlapped.OffsetHigh*
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
- uid: System.Threading.Overlapped.OffsetLow*
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
- uid: System.Threading.Overlapped.Pack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack
  nameWithType: Overlapped.Pack
- uid: System.Threading.Overlapped.Unpack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Unpack
  nameWithType: Overlapped.Unpack
- uid: System.Threading.Overlapped.UnsafePack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack
  nameWithType: Overlapped.UnsafePack
