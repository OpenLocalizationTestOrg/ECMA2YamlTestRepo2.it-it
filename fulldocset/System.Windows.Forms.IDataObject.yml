### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.IDataObject
  id: IDataObject
  children:
  - System.Windows.Forms.IDataObject.GetData(System.String)
  - System.Windows.Forms.IDataObject.GetData(System.Type)
  - System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetFormats
  - System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  - System.Windows.Forms.IDataObject.SetData(System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  langs:
  - csharp
  name: IDataObject
  nameWithType: IDataObject
  fullName: System.Windows.Forms.IDataObject
  type: Interface
  summary: "Fornisce un meccanismo indipendente dal formato per il trasferimento dei dati."
  remarks: "Il `IDataObject` interfaccia viene utilizzata per la <xref:System.Windows.Forms.Clipboard>classe e nelle operazioni di trascinamento e rilascio.</xref:System.Windows.Forms.Clipboard>       Quando viene implementato in una classe, i metodi di IDataObject consentono all&quot;utente archiviare i dati in più formati in un&quot;istanza della classe. L&quot;archiviazione dei dati in più formati aumentano le probabilità che un&quot;applicazione di destinazione, il cui requisiti di formato non è noto, è possibile recuperare i dati archiviati. Per archiviare i dati in un&quot;istanza di IDataObject, chiamare il <xref:System.Windows.Forms.IDataObject.SetData%2A>(metodo) e specificare il formato di dati nel `format` parametro.</xref:System.Windows.Forms.IDataObject.SetData%2A> Impostare il `autoConvert` parametro `false` se si desidera convertire in un altro formato quando vengono recuperati i dati memorizzati. Richiamare <xref:System.Windows.Forms.IDataObject.SetData%2A>più volte in un&quot;istanza di IDataObject per archiviare i dati in più formati.</xref:System.Windows.Forms.IDataObject.SetData%2A>       Per recuperare i dati archiviati da IDataObject, chiamare il <xref:System.Windows.Forms.IDataObject.GetData%2A>metodo e specificando i dati di formato nel `format` parametro.</xref:System.Windows.Forms.IDataObject.GetData%2A> Impostare il `autoConvert` parametro `false` per recuperare solo i dati archiviati nel formato specificato. Per convertire i dati archiviati nel formato specificato, impostare `autoConvert` a `true`, o non utilizzare `autoConvert`.       Per determinare il formato dei dati archiviati in un IDataObject, utilizzare i seguenti metodi di IDataObject.      -Consente di chiamare il <xref:System.Windows.Forms.IDataObject.GetFormats%2A>metodo per recuperare una matrice di tutti i formati in cui i dati sono disponibili.</xref:System.Windows.Forms.IDataObject.GetFormats%2A> Impostare il `autoConvert` parametro `false` per ottenere solo i formati in cui i dati vengono archiviati. Per ottenere tutti i formati in cui sono disponibili i dati, impostare `autoConvert` a `true`, o non utilizzare questo parametro.      -Consente di chiamare il <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>metodo per determinare se i dati archiviati sono disponibili in un determinato formato.</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Se non si desidera dati archiviati da convertire nel formato specificato, impostare il `autoConvert` parametro `false`.       Vedere la <xref:System.Windows.Forms.DataObject>classe per l&quot;implementazione di questa interfaccia.</xref:System.Windows.Forms.DataObject> Vedere la <xref:System.Windows.Forms.DataFormats>classe per predefiniti <xref:System.Windows.Forms.Clipboard>formati di dati.</xref:System.Windows.Forms.Clipboard> </xref:System.Windows.Forms.DataFormats>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IDataObject
  implements: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  id: GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Recupera i dati associati con il formato dati specificato."
  remarks: "Se questo metodo non è possibile trovare i dati nel formato specificato, tenta di convertire i dati nel formato. Se i dati non possono essere convertiti nel formato specificato, questo metodo restituisce `null`.       Per determinare se sono associati dati, o possono essere convertiti nel formato, chiamata <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>prima di chiamare <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Chiamare <xref:System.Windows.Forms.IDataObject.GetFormats%2A>per un elenco dei formati validi per i dati archiviati in questa istanza.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Dati possono essere convertiti in un altro formato, se è stata archiviata che specifica che la conversione è consentita e se il formato richiesto è compatibile con il formato stored. Ad esempio, i dati archiviati come Unicode può essere convertito in testo.       Per un&quot;implementazione di questo metodo, vedere <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cpp[GetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_9_1.cpp)]\n [!code-cs[GetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_9_1.cs)]\n [!code-vb[GetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_9_1.vb)]"
  syntax:
    content: public object GetData (string format);
    parameters:
    - id: format
      type: System.String
      description: "Il formato dei dati da recuperare. Vedere <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> per i formati predefiniti."
    return:
      type: System.Object
      description: "I dati associati al formato specificato, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  id: GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Recupera i dati associati con il formato del tipo di classe specificata."
  remarks: "Se questo metodo non è possibile trovare i dati nel formato specificato, tenta di convertire i dati nel formato. Se i dati non possono essere convertiti nel formato specificato, questo metodo restituisce `null`.       Per determinare se sono associati dati, o possono essere convertiti nel formato, chiamata <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>prima di chiamare <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Chiamare <xref:System.Windows.Forms.IDataObject.GetFormats%2A>per un elenco dei formati validi per i dati archiviati in questa istanza.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Dati possono essere convertiti in un altro formato, se è stata archiviata che specifica che la conversione è consentita e se il formato richiesto è compatibile con il formato stored. Ad esempio, i dati archiviati come Unicode può essere convertito in testo.       Per un&quot;implementazione di questo metodo, vedere <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`. The type of the retrieved data is displayed in a message box. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[GetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_4_1.cpp)]\n [!code-cs[GetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_4_1.cs)]\n [!code-vb[GetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_4_1.vb)]"
  syntax:
    content: public object GetData (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "Oggetto <xref:System.Type>che rappresenta il formato dei dati da recuperare.</xref:System.Type> Vedere <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> per i formati predefiniti."
    return:
      type: System.Object
      description: "I dati associati al formato specificato, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  id: GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Recupera i dati associati con il formato dati specificato, usando un valore booleano per determinare se convertire i dati nel formato."
  remarks: "Se il `autoConvert` parametro `true` e questo metodo non è possibile trovare i dati nel formato specificato, tenta di convertire i dati nel formato. Se i dati non possono essere convertiti nel formato specificato o se i dati sono stati memorizzati con il `autoConvert` parametro impostato su `false`, questo metodo restituisce `null`.       Se il `autoConvert` parametro `false`, questo metodo restituisce i dati nel formato specificato, o `null` se non viene trovato alcun dato in questo formato.       Per determinare se sono associati dati, o possono essere convertiti nel formato, chiamare <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>prima di chiamare GetData.</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Chiamare <xref:System.Windows.Forms.IDataObject.GetFormats%2A>per un elenco dei formati validi per i dati archiviati in questa istanza.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Dati possono essere convertiti in un altro formato, se è stata archiviata che specifica che la conversione è consentita e se il formato richiesto è compatibile con il formato stored. Ad esempio, i dati archiviati come Unicode può essere convertito in testo.       Per un&quot;implementazione di questo metodo, vedere <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format. First, `myDataObject` is created with text data. Then the example tries twice to retrieve the data. In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_14_1.cs)]\n [!code-cpp[GetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_14_1.cpp)]\n [!code-vb[GetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_14_1.vb)]"
  syntax:
    content: public object GetData (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "Il formato dei dati da recuperare. Vedere <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> per i formati predefiniti."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per convertire i dati nel formato specificato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "I dati associati al formato specificato, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  id: GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determina se i dati archiviati in questa istanza sono associati, o possono essere convertiti nel formato specificato."
  remarks: "Chiamare questo metodo per determinare se esiste un formato in questa <xref:System.Windows.Forms.DataObject>prima di chiamare <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.DataObject> Chiamare <xref:System.Windows.Forms.IDataObject.GetFormats%2A>per i formati disponibili in questa istanza.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Dati possono essere convertiti in un altro formato, se è stata archiviata che specifica che la conversione è consentita e se il formato richiesto è compatibile con il formato stored. Ad esempio, i dati archiviati come Unicode può essere convertito in testo.       Per un&quot;implementazione di questo metodo, vedere <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object using a string and the `Text` format. Then it verifies that the data is present in the `Text` format and displays the results in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetDataPresent1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_12_1.vb)]\n [!code-cs[GetDataPresent1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_12_1.cs)]\n [!code-cpp[GetDataPresent1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_12_1.cpp)]"
  syntax:
    content: public bool GetDataPresent (string format);
    parameters:
    - id: format
      type: System.String
      description: "Il formato per cui si desidera controllare. Vedere <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> per i formati predefiniti."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i dati archiviati in questa istanza è associata, o può essere convertita nel formato specificato; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  id: GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determina se i dati archiviati in questa istanza sono associati, o possono essere convertiti nel formato specificato."
  remarks: "Chiamare questo metodo per determinare se esiste un formato in questa <xref:System.Windows.Forms.DataObject>prima di chiamare <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.DataObject> Chiamare <xref:System.Windows.Forms.IDataObject.GetFormats%2A>per i formati disponibili in questa istanza.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      > [!NOTE] > Dati possono essere convertiti in un altro formato, se è stata archiviata che specifica che la conversione è consentita e se il formato richiesto è compatibile con il formato stored. Ad esempio, i dati archiviati come Unicode può essere convertito in testo.       Per un&quot;implementazione di questo metodo, vedere <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in `myDataObject`. If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box. This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cs[GetDataPresent2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_15_1.cs)]\n [!code-cpp[GetDataPresent2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_15_1.cpp)]\n [!code-vb[GetDataPresent2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_15_1.vb)]"
  syntax:
    content: public bool GetDataPresent (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "Oggetto <xref:System.Type>che rappresenta il formato per cui si desidera controllare.</xref:System.Type> Vedere <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> per i formati predefiniti."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i dati archiviati in questa istanza è associata, o può essere convertita nel formato specificato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  id: GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determina se i dati archiviati in questa istanza sono associati al formato specificato, usando un valore booleano per determinare se convertire i dati nel formato."
  remarks: "Chiamare questo metodo per determinare se esiste un formato in questa <xref:System.Windows.Forms.DataObject>prima di chiamare <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.DataObject> Chiamare <xref:System.Windows.Forms.IDataObject.GetFormats%2A>per i formati disponibili in questa istanza.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>       Questo metodo restituisce `true` quando: - il `autoConvert` parametro `true` e i dati in un formato che può essere convertito nel formato appropriato.      -La `autoConvert` parametro `false` e i dati sono nel formato appropriato.       Questo metodo restituisce `false` quando: - il `autoConvert` parametro `true` questo metodo non consente di trovare e convertire i dati nel formato specificato e i dati sono stati memorizzati con `autoConvert` impostato su `false`.      -La `autoConvert` parametro `false`, e dati non esistono in questa istanza nel formato specificato.      > [!NOTE] > Dati possono essere convertiti in un altro formato, se è stata archiviata che specifica che la conversione è consentita e se il formato richiesto è compatibile con il formato stored. Ad esempio, i dati archiviati come Unicode può essere convertito in testo.       Per un&quot;implementazione di questo metodo, vedere <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, it sets the `autoConvert` parameter to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetDataPresent3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_17_1.cs)]\n [!code-cpp[GetDataPresent3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_17_1.cpp)]\n [!code-vb[GetDataPresent3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_17_1.vb)]"
  syntax:
    content: public bool GetDataPresent (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "Il formato per cui si desidera controllare. Vedere <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> per i formati predefiniti."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per determinare se i dati archiviati in questa istanza può essere convertito nel formato specificato. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per verificare se i dati sono nel formato specificato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i dati in o possono essere convertiti nel formato specificato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats
  id: GetFormats
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Restituisce un elenco di tutti i formati di dati archiviati in questa istanza sono associati o possono essere convertiti in."
  remarks: "Chiamare questo metodo per ottenere i formati di dati supportati prima di chiamare il <xref:System.Windows.Forms.IDataObject.GetData%2A>metodo.</xref:System.Windows.Forms.IDataObject.GetData%2A> Vedere la <xref:System.Windows.Forms.DataFormats>classe per i formati predefiniti.</xref:System.Windows.Forms.DataFormats>      > [!NOTE] > Dati possono essere convertiti in un altro formato, se è stata archiviata che specifica che la conversione è consentita e se il formato richiesto è compatibile con il formato stored. Ad esempio, i dati archiviati come Unicode può essere convertito in testo.       Per un&quot;implementazione di questo metodo, vedere <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetFormats1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_3_1.cs)]\n [!code-cpp[GetFormats1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_3_1.cpp)]\n [!code-vb[GetFormats1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_3_1.vb)]"
  syntax:
    content: public string[] GetFormats ();
    parameters: []
    return:
      type: System.String[]
      description: "Una matrice dei nomi che rappresenta un elenco di tutti i formati supportati dai dati archiviati in questo oggetto."
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  id: GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ottiene un elenco di tutti i formati dati archiviati in questa istanza sono associati o possono essere convertiti, usando un valore booleano per determinare se per recuperare tutti i formati di dati possono essere convertiti in o solo i dati nativi formati."
  remarks: "Chiamare questo metodo per ottenere i formati di dati supportati prima di chiamare il <xref:System.Windows.Forms.IDataObject.GetData%2A>metodo.</xref:System.Windows.Forms.IDataObject.GetData%2A> Vedere la <xref:System.Windows.Forms.DataFormats>classe per i formati predefiniti.</xref:System.Windows.Forms.DataFormats>      > [!NOTE] > Dati possono essere convertiti in un altro formato, se è stata archiviata che specifica che la conversione è consentita e se il formato richiesto è compatibile con il formato stored. Ad esempio, i dati archiviati come Unicode può essere convertito in testo.       Per un&quot;implementazione di questo metodo, vedere <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format. Then it makes two queries to get the formats associated with the data. In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned. In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to. In each case, the resulting list is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetFormats2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_13_1.vb)]\n [!code-cpp[GetFormats2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_13_1.cpp)]\n [!code-cs[GetFormats2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_13_1.cs)]"
  syntax:
    content: public string[] GetFormats (bool autoConvert);
    parameters:
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per recuperare tutti i formati che i dati archiviati in questa istanza sono associati o possono essere convertiti in; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per recuperare solo i formati di dati nativi."
    return:
      type: System.String[]
      description: "Una matrice dei nomi che rappresenta un elenco di tutti i formati supportati dai dati archiviati in questo oggetto."
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  id: SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Archivia i dati specificati in questa istanza, utilizzando la classe dei dati per il formato."
  remarks: "Il formato è derivato dalla classe di dati.       Dati archiviati utilizzando questo metodo possono essere convertiti in un formato compatibile quando vengono recuperati.       Per un&quot;implementazione di questo metodo, vedere <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in the data object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_1_1.cs)]\n [!code-vb[SetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_1_1.vb)]\n [!code-cpp[SetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_1_1.cpp)]"
  syntax:
    content: public void SetData (object data);
    parameters:
    - id: data
      type: System.Object
      description: "I dati da archiviare."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Archivia i dati specificati e il relativo formato associato in questa istanza."
  remarks: "Se non si conosce il formato dell&quot;applicazione di destinazione, è possibile archiviare dati in più formati utilizzando questo metodo.       Dati archiviati utilizzando questo metodo possono essere convertiti in un formato compatibile quando vengono recuperati.       Per un&quot;implementazione di questo metodo, vedere <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format. Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format. The result is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_0_1.cs)]\n [!code-cpp[SetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_0_1.cpp)]\n [!code-vb[SetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_0_1.vb)]"
  syntax:
    content: public void SetData (string format, object data);
    parameters:
    - id: format
      type: System.String
      description: "Il formato associato ai dati. Vedere <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> per i formati predefiniti."
    - id: data
      type: System.Object
      description: "I dati da archiviare."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  id: SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Archivia i dati specificati e il relativo tipo di classe associata in questa istanza."
  remarks: "Se non si conosce il formato dell&quot;applicazione di destinazione, è possibile archiviare dati in più formati utilizzando questo metodo.       Dati archiviati utilizzando questo metodo possono essere convertiti in un formato compatibile quando vengono recuperati.       Per un&quot;implementazione di questo metodo, vedere <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format. Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[SetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_11_1.vb)]\n [!code-cpp[SetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_11_1.cpp)]\n [!code-cs[SetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_11_1.cs)]"
  syntax:
    content: public void SetData (Type format, object data);
    parameters:
    - id: format
      type: System.Type
      description: "Oggetto <xref:System.Type>che rappresenta il formato associato ai dati.</xref:System.Type> Vedere <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> per i formati predefiniti."
    - id: data
      type: System.Object
      description: "I dati da archiviare."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  id: SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "In questo caso, usando un valore booleano per specificare se i dati possono essere convertiti in un altro formato, archivia i dati specificati e il formato associato."
  remarks: "Se non si conosce il formato dell&quot;applicazione di destinazione, è possibile archiviare dati in più formati utilizzando questo metodo.       Per un&quot;implementazione di questo metodo, vedere <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`. Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box. The only format associated with the data is the `UnicodeText` format. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[SetData4#1](~/add/codesnippet/cpp/14ad2ca0-1678-4ad5-a287-_1.cpp)]\n [!code-vb[SetData4#1](~/add/codesnippet/visualbasic/14ad2ca0-1678-4ad5-a287-_1.vb)]\n [!code-cs[SetData4#1](~/add/codesnippet/csharp/14ad2ca0-1678-4ad5-a287-_1.cs)]"
  syntax:
    content: public void SetData (string format, bool autoConvert, object data);
    parameters:
    - id: format
      type: System.String
      description: "Il formato associato ai dati. Vedere <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> per i formati predefiniti."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per consentire i dati da convertire in un altro formato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: data
      type: System.Object
      description: "I dati da archiviare."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
- uid: System.Windows.Forms.IDataObject.GetFormats
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
- uid: System.Windows.Forms.IDataObject.GetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData
  nameWithType: IDataObject.GetData
- uid: System.Windows.Forms.IDataObject.GetDataPresent*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent
  nameWithType: IDataObject.GetDataPresent
- uid: System.Windows.Forms.IDataObject.GetFormats*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats
  nameWithType: IDataObject.GetFormats
- uid: System.Windows.Forms.IDataObject.SetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData
  nameWithType: IDataObject.SetData
