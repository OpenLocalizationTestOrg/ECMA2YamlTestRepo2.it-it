### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TemplateField
  id: TemplateField
  children:
  - System.Web.UI.WebControls.TemplateField.#ctor
  - System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  - System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.TemplateField.CreateField
  - System.Web.UI.WebControls.TemplateField.EditItemTemplate
  - System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.TemplateField.FooterTemplate
  - System.Web.UI.WebControls.TemplateField.HeaderTemplate
  - System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  - System.Web.UI.WebControls.TemplateField.ItemTemplate
  - System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  - System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback
  langs:
  - csharp
  name: TemplateField
  nameWithType: TemplateField
  fullName: System.Web.UI.WebControls.TemplateField
  type: Class
  summary: "Rappresenta un campo che visualizza contenuto personalizzato in un controllo con associazione a dati."
  remarks: "La classe TemplateField usata dai controlli con associazione a dati (ad esempio <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>) per visualizzare il contenuto personalizzato per ciascun record visualizzato.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Quando si desidera visualizzare il contenuto in un controllo con associazione a dati che non viene fornito da uno dei dati predefiniti campi di controllo (ad esempio <xref:System.Web.UI.WebControls.BoundField>), utilizzare la classe TemplateField per creare l&quot;interfaccia utente personalizzata (UI).</xref:System.Web.UI.WebControls.BoundField> L&quot;oggetto TemplateField viene visualizzato in modo diverso a seconda del controllo con associazione a dati in cui viene utilizzato. Ad esempio, il <xref:System.Web.UI.WebControls.GridView>controllo Visualizza un oggetto TemplateField come una colonna e <xref:System.Web.UI.WebControls.DetailsView>controllo Visualizza in una riga.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       È possibile definire un modello personalizzato per le diverse parti dell&quot;oggetto TemplateField mediante i modelli elencati nella tabella seguente.      | Modello | Descrizione |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>| Specifica il contenuto da visualizzare per gli elementi alternati in un oggetto TemplateField. |   | <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>| Specifica il contenuto da visualizzare per un elemento in modalità di modifica in un oggetto TemplateField. |   | <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A>| Specifica il contenuto da visualizzare per la sezione di piè di pagina di un oggetto TemplateField. |   | <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A>| Specifica il contenuto da visualizzare per la sezione di intestazione di un oggetto TemplateField. |   | <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A>| Specifica il contenuto da visualizzare per un elemento in modalità di inserimento in un oggetto TemplateField.</xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> Questo modello è supportato solo dal controllo <xref:System.Web.UI.WebControls.DetailsView>. |   | <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>| Specifica il contenuto da visualizzare per gli elementi in un oggetto TemplateField. |       È possibile nascondere un oggetto TemplateField in un controllo con associazione a dati mediante l&quot;impostazione di <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>proprietà `false`.</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> </xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView>       Come alternativa alla definizione di un oggetto personalizzato <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A>o <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A>modello, è possibile personalizzare le sezioni di intestazione e piè di pagina di un oggetto TemplateField le altre proprietà dell&quot;oggetto TemplateField.</xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> Per visualizzare una didascalia in sezioni di intestazione o piè di pagina, impostare il <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>o <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>proprietà, rispettivamente.</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> Anziché visualizzare il testo nella sezione di intestazione, è possibile visualizzare un&quot;immagine mediante l&quot;impostazione di <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>proprietà.</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> La sezione di intestazione può essere nascosti nell&quot;oggetto TemplateField impostando il <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>proprietà `false`.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>      > [!NOTE] > Alcuni controlli con associazione a dati (ad esempio il <xref:System.Web.UI.WebControls.GridView>controllo) possibile mostrare o nascondere solo l&quot;intera sezione di intestazione del controllo.</xref:System.Web.UI.WebControls.GridView> Questi controlli con associazione a dati non supportano il <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>proprietà per un singolo campo associato.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> Per visualizzare o nascondere l&quot;intera sezione di intestazione di un controllo con associazione a dati, utilizzare il controllo `ShowHeader` (se disponibile).       È anche possibile personalizzare l&quot;aspetto dell&quot;oggetto TemplateField (colore carattere, colore di sfondo e così via) impostando le proprietà di stile per le diverse parti del campo. Nella tabella seguente sono elencate le proprietà di stile diverso.      | Proprietà di stile | Descrizione |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>| Le impostazioni di stile per i controlli server Web figlio dell&quot;oggetto TemplateField. |   | <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>| Le impostazioni di stile per la sezione di piè di pagina dell&quot;oggetto TemplateField. |   | <xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>| Le impostazioni di stile per la sezione di intestazione dell&quot;oggetto TemplateField. |   | <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>| Le impostazioni di stile per gli elementi di dati nell&quot;oggetto TemplateField. |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>"
  example:
  - "The following code example demonstrates how to create a custom TemplateField object that displays two fields in the same cell. The first name and last name fields are combined into the same TemplateField object.  \n  \n [!code-cs[TemplateField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_104_1.aspx)]\n [!code-vb[TemplateField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_104_1.aspx)]"
  syntax:
    content: 'public class TemplateField : System.Web.UI.WebControls.DataControlField'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.HeaderText
  - System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: TemplateField()
  nameWithType: TemplateField.TemplateField()
  fullName: System.Web.UI.WebControls.TemplateField.TemplateField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> classe."
  remarks: "Utilizzare questo costruttore per inizializzare una nuova istanza della <xref:System.Web.UI.WebControls.TemplateField>classe.</xref:System.Web.UI.WebControls.TemplateField> Questo costruttore viene comunemente utilizzato quando si aggiungono campi a un controllo con associazione a dati creato dinamicamente.       Per aggiungere dinamicamente un <xref:System.Web.UI.WebControls.TemplateField>dell&quot;oggetto a un controllo con associazione a dati, creare un nuovo <xref:System.Web.UI.WebControls.TemplateField>dell&quot;oggetto, definire i modelli appropriati e quindi aggiungerlo alla raccolta di campi del controllo con associazione a dati.</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.TemplateField> Ad esempio, se si utilizza il <xref:System.Web.UI.WebControls.GridView>di controllo, aggiungere il <xref:System.Web.UI.WebControls.TemplateField>dell&quot;oggetto per il <xref:System.Web.UI.WebControls.GridView.Columns%2A>insieme.</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > Anche se in modo dinamico, è possibile aggiungere campi a un controllo con associazione a dati, è consigliabile che i campi in modo statico dichiarati e quindi nascondere o visualizzare, a seconda dei casi. In modo statico la dichiarazione di tutti i campi riduce le dimensioni dello stato di visualizzazione per il controllo con associazione a dati padre."
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.TemplateField> field column to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[TemplateFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_118_1.aspx)]\n [!code-vb[TemplateFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_118_1.aspx)]"
  syntax:
    content: public TemplateField ();
    parameters: []
  overload: System.Web.UI.WebControls.TemplateField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  id: AlternatingItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: AlternatingItemTemplate
  nameWithType: TemplateField.AlternatingItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il modello per visualizzare elementi alternativi un <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> oggetto."
  remarks: "Utilizzare la proprietà AlternatingItemTemplate per specificare il contenuto personalizzato visualizzato per gli elementi alternati in un <xref:System.Web.UI.WebControls.TemplateField>oggetto.</xref:System.Web.UI.WebControls.TemplateField> Definire il contenuto mediante la creazione di un modello che specifica la modalità di rendering di elementi alternativi.      > [!NOTE] > AlternatingItemTemplate la proprietà viene comunemente usato in combinazione con la <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>proprietà per creare un aspetto diverso per ogni altro elemento nel controllo associato a dati.</xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>       Per specificare un modello, inserire innanzitutto di apertura e chiusura `<AlternatingItemTemplate>` tra il tag di apertura e chiusura dei tag di `<TemplateField>` elemento. Successivamente, aggiungere il contenuto personalizzato tra l&quot;apertura e chiusura `<AlternatingItemTemplate>` tag. Il contenuto può essere semplice come testo normale o complessi (incorporando altri controlli nel modello, ad esempio).       Per accedere a livello di codice un controllo definito in un modello, determinare innanzitutto quale <xref:System.Web.UI.WebControls.TableCell>oggetto nel controllo con associazione a dati contiene il controllo.</xref:System.Web.UI.WebControls.TableCell> Successivamente, utilizzare il <xref:System.Web.UI.Control.Controls%2A>insieme il <xref:System.Web.UI.WebControls.TableCell>oggetto per accedere al controllo.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> È inoltre possibile utilizzare il <xref:System.Web.UI.Control.FindControl%2A>metodo il <xref:System.Web.UI.WebControls.TableCell>oggetto per trovare il controllo, se il controllo ha un <xref:System.Web.UI.Control.ID%2A>proprietà specificata.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the AlternatingItemTemplate property to create a custom template for the alternating items in a <xref:System.Web.UI.WebControls.TemplateField> field column of a <xref:System.Web.UI.WebControls.GridView> control. The template is a variation of the template specified by the <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> property, where an image is displayed on the opposite side of the cell.  \n  \n [!code-vb[TemplateFieldAlternatingItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1029_1.aspx)]\n [!code-cs[TemplateFieldAlternatingItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1029_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Oggetto <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-oggetto implementato che contiene il modello per visualizzare elementi alternativi un <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a indicare che questa proprietà non è impostata."
  overload: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: TemplateField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se il valore che il <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> oggetto è associato a devono essere convertite in <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se <xref:System.String.Empty>.</xref:System.String.Empty>"
  remarks: "Questa proprietà si applica alle istruzioni di associazione dati bidirezionale eseguite nel modello. La conversione viene eseguita dopo l&quot;estrazione dei valori dal modello bidirezionale associato e prima di passare i valori all&quot;origine dati per un&quot;operazione di aggiornamento o inserimento.       Ad esempio, un utente può immettere una stringa vuota (&quot;&quot;) per un valore del campo durante l&quot;aggiornamento o inserimento di record. Utilizzare la proprietà ConvertEmptyStringToNull per specificare se un valore stringa vuota viene convertito automaticamente in `null` quando il campo dei dati viene aggiornato nell&quot;origine dati."
  syntax:
    content: public virtual bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore che il <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> è associato a deve essere convertita in <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> quando è <xref:System.String.Empty>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.String.Empty> Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: TemplateField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.TemplateField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copia le proprietà dell&quot;oggetto corrente <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>-oggetto derivato da specificato <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> oggetto."
  remarks: "Il metodo CopyProperties è un metodo di supporto utilizzato per copiare le proprietà dell&quot;oggetto corrente <xref:System.Web.UI.WebControls.TemplateField>-oggetto derivato dal <xref:System.Web.UI.WebControls.DataControlField>oggetto creato dal metodo.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.TemplateField>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "Il <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> per copiare le proprietà dell&quot;oggetto corrente <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> per."
  overload: System.Web.UI.WebControls.TemplateField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: CreateField()
  nameWithType: TemplateField.CreateField()
  fullName: System.Web.UI.WebControls.TemplateField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Crea un nuovo <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> oggetto."
  remarks: "Il metodo CreateField esegue l&quot;override del metodo di base per restituire un <xref:System.Web.UI.WebControls.TemplateField>oggetto.</xref:System.Web.UI.WebControls.TemplateField>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "Restituisce sempre un nuovo <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>."
  overload: System.Web.UI.WebControls.TemplateField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.EditItemTemplate
  id: EditItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: EditItemTemplate
  nameWithType: TemplateField.EditItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.EditItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il modello per visualizzare un elemento in modalità di modifica in un <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> oggetto."
  remarks: "Utilizzare la proprietà EditItemTemplate per specificare il contenuto personalizzato visualizzato per un elemento che è in modalità di modifica in un <xref:System.Web.UI.WebControls.TemplateField>oggetto.</xref:System.Web.UI.WebControls.TemplateField> Definire il contenuto mediante la creazione di un modello che specifica la modalità con cui viene eseguito il rendering di un elemento in modalità di modifica. In genere, tale proprietà contiene i controlli di input per l&quot;utente di modificare un valore in un&quot;origine dati.       Per specificare un modello, inserire innanzitutto di apertura e chiusura `<EditItemTemplate>` tra il tag di apertura e chiusura dei tag di `<TemplateField>` elemento. Successivamente, aggiungere il contenuto personalizzato tra l&quot;apertura e chiusura `<EditItemTemplate>` tag. Il contenuto può essere semplice come testo normale o complessi (incorporando altri controlli nel modello, ad esempio).       Per accedere a livello di codice un controllo definito in un modello, determinare innanzitutto quale <xref:System.Web.UI.WebControls.TableCell>oggetto nel controllo con associazione a dati contiene il controllo.</xref:System.Web.UI.WebControls.TableCell> Successivamente, utilizzare il <xref:System.Web.UI.Control.Controls%2A>insieme il <xref:System.Web.UI.WebControls.TableCell>oggetto per accedere al controllo.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> È inoltre possibile utilizzare il <xref:System.Web.UI.Control.FindControl%2A>metodo il <xref:System.Web.UI.WebControls.TableCell>oggetto per trovare il controllo, se il controllo ha un <xref:System.Web.UI.Control.ID%2A>proprietà specificata.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the EditItemTemplate property to create a custom template for an item in edit mode in a <xref:System.Web.UI.WebControls.TemplateField> field column of a <xref:System.Web.UI.WebControls.GridView> control. The template contains validation server controls to prevent a user from leaving a value field empty.  \n  \n [!code-cs[TemplateFieldEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_821_1.aspx)]\n [!code-vb[TemplateFieldEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_821_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Oggetto <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-implementato l&quot;oggetto che contiene il modello per visualizzare un elemento in modalità di modifica in un <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a indicare che questa proprietà non è impostata."
  overload: System.Web.UI.WebControls.TemplateField.EditItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Estrae il valore del controllo dati i campi come specificato da una o più istruzioni di associazione bidirezionale (<xref uid=&quot;langword_csharp_DataBind&quot; name=&quot;DataBind&quot; href=&quot;&quot;></xref>) dalla cella della tabella corrente e aggiunge i valori all&quot;oggetto specificato <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> insieme."
  remarks: "Il metodo ExtractValuesFromCell viene implementato dai tipi derivati da <xref:System.Web.UI.WebControls.DataControlField>, ad esempio <xref:System.Web.UI.WebControls.TemplateField>.</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.DataControlField> Questo metodo viene chiamato per estrarre i valori dei campi associati a dati bidirezionali nel modello e compilare i dizionari da passare all&quot;origine dati per un aggiornamento, inserimento o l&quot;operazione di eliminazione. La coppia campo-valore viene archiviata nella raccolta dizionario passato al metodo. Viene chiamato il metodo ExtractValuesFromCell dal `ExtractRowValues` dei controlli di dati, ad esempio <xref:System.Web.UI.WebControls.DetailsView>e <xref:System.Web.UI.WebControls.GridView>.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView> (metodo)"
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "An <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;></xref>."
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> che contiene il testo o i controlli del <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Uno del <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> valori."
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per indicare che i valori dei campi di sola lettura sono inclusi nel `dictionary` raccolta; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.FooterTemplate
  id: FooterTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: FooterTemplate
  nameWithType: TemplateField.FooterTemplate
  fullName: System.Web.UI.WebControls.TemplateField.FooterTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il modello per visualizzare la sezione di piè di pagina di un <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> oggetto."
  remarks: "Utilizzare la proprietà FooterTemplate per specificare il contenuto personalizzato visualizzato nella sezione di piè di pagina di un <xref:System.Web.UI.WebControls.TemplateField>oggetto.</xref:System.Web.UI.WebControls.TemplateField> Definire il contenuto mediante la creazione di un modello che specifica la modalità di rendering della sezione di piè di pagina.       Per specificare un modello, inserire innanzitutto di apertura e chiusura `<FooterTemplate>` tra il tag di apertura e chiusura dei tag di `<TemplateField>` elemento. Successivamente, aggiungere il contenuto personalizzato tra l&quot;apertura e chiusura `<FooterTemplate>` tag. Il contenuto può essere semplice come testo normale o complessi (incorporando altri controlli nel modello, ad esempio).       Per accedere a livello di codice un controllo definito in un modello, determinare innanzitutto quale <xref:System.Web.UI.WebControls.TableCell>oggetto nel controllo con associazione a dati contiene il controllo.</xref:System.Web.UI.WebControls.TableCell> Successivamente, utilizzare il <xref:System.Web.UI.Control.Controls%2A>insieme il <xref:System.Web.UI.WebControls.TableCell>oggetto per accedere al controllo.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> È inoltre possibile utilizzare il <xref:System.Web.UI.Control.FindControl%2A>metodo il <xref:System.Web.UI.WebControls.TableCell>oggetto per trovare il controllo, se il controllo ha un <xref:System.Web.UI.Control.ID%2A>proprietà specificata.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the FooterTemplate property to create a custom template for the footer section of a <xref:System.Web.UI.WebControls.TemplateField> field column in a <xref:System.Web.UI.WebControls.GridView> control. The template displays the sum of the values in the <xref:System.Web.UI.WebControls.TemplateField> field column.  \n  \n [!code-cs[TemplateFieldFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1286_1.aspx)]\n [!code-vb[TemplateFieldFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1286_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Oggetto <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-implementato l&quot;oggetto che contiene il modello per visualizzare la sezione di piè di pagina di un <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a indicare che questa proprietà non è impostata."
  overload: System.Web.UI.WebControls.TemplateField.FooterTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.HeaderTemplate
  id: HeaderTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: HeaderTemplate
  nameWithType: TemplateField.HeaderTemplate
  fullName: System.Web.UI.WebControls.TemplateField.HeaderTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il modello per visualizzare la sezione di intestazione di un <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> oggetto."
  remarks: "Utilizzare la proprietà HeaderTemplate per specificare il contenuto personalizzato visualizzato per la sezione di intestazione di un <xref:System.Web.UI.WebControls.TemplateField>oggetto.</xref:System.Web.UI.WebControls.TemplateField> Definire il contenuto mediante la creazione di un modello che specifica la modalità di rendering della sezione di intestazione.       Per specificare un modello, inserire innanzitutto di apertura e chiusura `<HeaderTemplate>` tra il tag di apertura e chiusura dei tag di `<TemplateField>` elemento. Successivamente, aggiungere il contenuto personalizzato tra l&quot;apertura e chiusura `<HeaderTemplate>` tag. Il contenuto può essere semplice come testo normale o complessi (incorporando altri controlli nel modello, ad esempio).       Per accedere a livello di codice un controllo definito in un modello, determinare innanzitutto quale <xref:System.Web.UI.WebControls.TableCell>oggetto nel controllo con associazione a dati contiene il controllo.</xref:System.Web.UI.WebControls.TableCell> Successivamente, utilizzare il <xref:System.Web.UI.Control.Controls%2A>insieme il <xref:System.Web.UI.WebControls.TableCell>oggetto per accedere al controllo.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> È inoltre possibile utilizzare il <xref:System.Web.UI.Control.FindControl%2A>metodo il <xref:System.Web.UI.WebControls.TableCell>oggetto per trovare il controllo, se il controllo ha un <xref:System.Web.UI.Control.ID%2A>proprietà specificata.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the HeaderTemplate property to create a custom template for the header section of a <xref:System.Web.UI.WebControls.TemplateField> field column in a <xref:System.Web.UI.WebControls.GridView> control. The template displays a check box that allows the user to show or hide the rows of the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[TemplateFieldHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1149_1.aspx)]\n [!code-vb[TemplateFieldHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1149_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Oggetto <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-implementato l&quot;oggetto che contiene il modello per visualizzare la sezione di intestazione di un <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> in un controllo con associazione a dati. Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a indicare che questa proprietà non è impostata."
  overload: System.Web.UI.WebControls.TemplateField.HeaderTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Aggiunge testo o i controlli alla raccolta di controlli di una cella."
  remarks: "Chiamare questo metodo quando si crea un controllo con associazione a dati personalizzato che utilizza <xref:System.Web.UI.WebControls.DataControlFieldCell>oggetti per inizializzare le celle della struttura di tabella con dati o controlli.</xref:System.Web.UI.WebControls.DataControlFieldCell>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "Oggetto <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> che contiene il testo o i controlli del <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "Uno del <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;> </xref> valori."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Uno del <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> valori, che specifica lo stato della riga che contiene il <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref>."
    - id: rowIndex
      type: System.Int32
      description: "L&quot;indice della riga che di <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> è contenuto in."
  overload: System.Web.UI.WebControls.TemplateField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  id: InsertItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: InsertItemTemplate
  nameWithType: TemplateField.InsertItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il modello per visualizzare un elemento in modalità di inserimento in un <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> oggetto."
  remarks: "Utilizzare la proprietà InsertItemTemplate per specificare il contenuto personalizzato visualizzato per un elemento in modalità di inserimento in un <xref:System.Web.UI.WebControls.TemplateField>oggetto.</xref:System.Web.UI.WebControls.TemplateField> Definire il contenuto mediante la creazione di un modello che specifica la modalità di rendering l&quot;elemento in modalità di inserimento.       Per specificare un modello, inserire innanzitutto di apertura e chiusura `<InsertItemTemplate>` tra il tag di apertura e chiusura dei tag di `<TemplateField>` elemento. Successivamente, aggiungere il contenuto personalizzato tra l&quot;apertura e chiusura `<InsertItemTemplate>` tag. Il contenuto può essere semplice come testo normale o complessi (incorporando altri controlli nel modello, ad esempio).       Per accedere a livello di codice un controllo definito in un modello, determinare innanzitutto quale <xref:System.Web.UI.WebControls.TableCell>oggetto nel controllo con associazione a dati contiene il controllo.</xref:System.Web.UI.WebControls.TableCell> Successivamente, utilizzare il <xref:System.Web.UI.Control.Controls%2A>insieme il <xref:System.Web.UI.WebControls.TableCell>oggetto per accedere al controllo.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> È inoltre possibile utilizzare il <xref:System.Web.UI.Control.FindControl%2A>metodo il <xref:System.Web.UI.WebControls.TableCell>oggetto per trovare il controllo, se il controllo ha un <xref:System.Web.UI.Control.ID%2A>proprietà specificata.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>      > [!NOTE] > Non tutti i controlli con associazione a dati supportano il modello di questo modello è supportato solo dai controlli con associazione a dati che consentono di inserire un record, ad esempio il <xref:System.Web.UI.WebControls.DetailsView>controllo.</xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the InsertItemTemplate property to create a custom template for an item in insert mode in a <xref:System.Web.UI.WebControls.TemplateField> field row in a <xref:System.Web.UI.WebControls.DetailsView> control. The template displays a <xref:System.Web.UI.WebControls.DropDownList> control that allows the user to select a value from a predefined list.  \n  \n [!code-vb[TemplateFieldInsertItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_855_1.aspx)]\n [!code-cs[TemplateFieldInsertItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_855_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Oggetto <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-implementato l&quot;oggetto che contiene il modello per visualizzare un elemento in modalità di inserimento in un <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a indicare che questa proprietà non è impostata."
  overload: System.Web.UI.WebControls.TemplateField.InsertItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ItemTemplate
  id: ItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ItemTemplate
  nameWithType: TemplateField.ItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.ItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il modello per visualizzare un elemento in un controllo con associazione a dati."
  remarks: "Utilizzare la proprietà ItemTemplate per specificare il contenuto personalizzato visualizzato per gli elementi in un <xref:System.Web.UI.WebControls.TemplateField>oggetto.</xref:System.Web.UI.WebControls.TemplateField> Definire il contenuto mediante la creazione di un modello che specifica la modalità di rendering di elementi.      > [!NOTE] > È possibile definire il <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>proprietà in combinazione con la proprietà ItemTemplate per creare un aspetto diverso per ogni altro elemento nel controllo con associazione a dati.</xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>       Per specificare un modello, inserire innanzitutto di apertura e chiusura `<ItemTemplate>` tra il tag di apertura e chiusura dei tag di `<TemplateField>` elemento. Successivamente, aggiungere il contenuto personalizzato tra l&quot;apertura e chiusura `<ItemTemplate>` tag. Il contenuto può essere semplice come testo normale o complessi (incorporando altri controlli nel modello, ad esempio).       Per accedere a livello di codice un controllo definito in un modello, determinare innanzitutto quale <xref:System.Web.UI.WebControls.TableCell>oggetto nel controllo con associazione a dati contiene il controllo.</xref:System.Web.UI.WebControls.TableCell> Successivamente, utilizzare il <xref:System.Web.UI.Control.Controls%2A>insieme il <xref:System.Web.UI.WebControls.TableCell>oggetto per accedere al controllo.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> È inoltre possibile utilizzare il <xref:System.Web.UI.Control.FindControl%2A>metodo il <xref:System.Web.UI.WebControls.TableCell>oggetto per trovare il controllo, se il controllo ha un <xref:System.Web.UI.Control.ID%2A>proprietà specificata.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the ItemTemplate property to create a custom template for the items of a <xref:System.Web.UI.WebControls.TemplateField> field in a <xref:System.Web.UI.WebControls.GridView> control. The template displays the field's value in a <xref:System.Web.UI.WebControls.RadioButtonList> control.  \n  \n [!code-cs[TemplateFieldItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_239_1.aspx)]\n [!code-vb[TemplateFieldItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_239_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Oggetto <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-implementato l&quot;oggetto che contiene il modello per visualizzare un elemento in un <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a indicare che questa proprietà non è impostata."
  overload: System.Web.UI.WebControls.TemplateField.ItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: TemplateField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che specifica se il controllo convalida l&quot;input per il client."
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo convalida input client; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TemplateField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: TemplateField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina se i controlli contenuti in un <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> oggetto supportano i callback di pagina."
  remarks: "Il metodo ValidateSupportsCallback non è supportato per questa classe e genera sempre un <xref:System.NotSupportedException>eccezione.</xref:System.NotSupportedException>"
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "L&quot;implementazione predefinita di questo metodo viene chiamato."
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.WebControls.TemplateField.#ctor
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: TemplateField()
  nameWithType: TemplateField.TemplateField()
  fullName: System.Web.UI.WebControls.TemplateField.TemplateField()
- uid: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: AlternatingItemTemplate
  nameWithType: TemplateField.AlternatingItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: TemplateField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: TemplateField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.TemplateField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.TemplateField.CreateField
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CreateField()
  nameWithType: TemplateField.CreateField()
  fullName: System.Web.UI.WebControls.TemplateField.CreateField()
- uid: System.Web.UI.WebControls.TemplateField.EditItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: EditItemTemplate
  nameWithType: TemplateField.EditItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.EditItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.TemplateField.FooterTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: FooterTemplate
  nameWithType: TemplateField.FooterTemplate
  fullName: System.Web.UI.WebControls.TemplateField.FooterTemplate
- uid: System.Web.UI.WebControls.TemplateField.HeaderTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: HeaderTemplate
  nameWithType: TemplateField.HeaderTemplate
  fullName: System.Web.UI.WebControls.TemplateField.HeaderTemplate
- uid: System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InsertItemTemplate
  nameWithType: TemplateField.InsertItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ItemTemplate
  nameWithType: TemplateField.ItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.ItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: TemplateField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: TemplateField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.TemplateField.#ctor*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: TemplateField
  nameWithType: TemplateField.TemplateField
- uid: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: AlternatingItemTemplate
  nameWithType: TemplateField.AlternatingItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: TemplateField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.TemplateField.CopyProperties*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CopyProperties
  nameWithType: TemplateField.CopyProperties
- uid: System.Web.UI.WebControls.TemplateField.CreateField*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CreateField
  nameWithType: TemplateField.CreateField
- uid: System.Web.UI.WebControls.TemplateField.EditItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: EditItemTemplate
  nameWithType: TemplateField.EditItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: TemplateField.ExtractValuesFromCell
- uid: System.Web.UI.WebControls.TemplateField.FooterTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: FooterTemplate
  nameWithType: TemplateField.FooterTemplate
- uid: System.Web.UI.WebControls.TemplateField.HeaderTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: HeaderTemplate
  nameWithType: TemplateField.HeaderTemplate
- uid: System.Web.UI.WebControls.TemplateField.InitializeCell*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InitializeCell
  nameWithType: TemplateField.InitializeCell
- uid: System.Web.UI.WebControls.TemplateField.InsertItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InsertItemTemplate
  nameWithType: TemplateField.InsertItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ItemTemplate
  nameWithType: TemplateField.ItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ValidateRequestMode*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: TemplateField.ValidateRequestMode
- uid: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: TemplateField.ValidateSupportsCallback
