### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.LingerOption
  id: LingerOption
  children:
  - System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  - System.Net.Sockets.LingerOption.Enabled
  - System.Net.Sockets.LingerOption.LingerTime
  langs:
  - csharp
  name: LingerOption
  nameWithType: LingerOption
  fullName: System.Net.Sockets.LingerOption
  type: Class
  summary: "Specifica se un <xref:System.Net.Sockets.Socket>rimarrà collegata dopo una chiamata al <> </> *> o <> </> *> metodi e l&quot;intervallo di tempo rimarrà connessi, se i dati restano da inviare.</xref:System.Net.Sockets.Socket>"
  remarks: "Si può ancora essere disponibili dati nel buffer di rete in uscita dopo che un&quot;applicazione chiama il <xref:System.Net.Sockets.Socket>o <xref:System.Net.Sockets.TcpClient>metodo.</xref:System.Net.Sockets.TcpClient> </xref:System.Net.Sockets.Socket> Se si desidera specificare la quantità di tempo che il <xref:System.Net.Sockets.Socket>tenterà di trasmettere i dati dopo la chiusura, creare un LingerOption con il `enable` parametro impostato su `true`e la `seconds` parametro impostato per il periodo di tempo desiderato.</xref:System.Net.Sockets.Socket> Il `seconds` parametro viene utilizzato per indicare quanto tempo si desidera che il <xref:System.Net.Sockets.Socket>deve rimanere connesso prima del timeout.</xref:System.Net.Sockets.Socket> Se non si desidera che il <xref:System.Net.Sockets.Socket>per rimanere connesso per qualsiasi periodo di tempo dopo la chiusura, creare un&quot;istanza di LingerOption con il `enable` parametro impostato su `true` e `seconds` parametro impostato su zero.</xref:System.Net.Sockets.Socket> In questo caso, il <xref:System.Net.Sockets.Socket>verrà chiusa immediatamente e i messaggi non inviati dati andranno perduti.</xref:System.Net.Sockets.Socket> Una volta creato, passare il LingerOption per il <xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=fullName>metodo.</xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=fullName> Se si inviano e ricevono dati con un <xref:System.Net.Sockets.TcpClient>, quindi impostare l&quot;istanza di LingerOption nella <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName>proprietà.</xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName> </xref:System.Net.Sockets.TcpClient>       Lo stack IP calcola il periodo di timeout predefinito protocollo IP da utilizzare in base all&quot;ora di round trip della connessione. Nella maggior parte dei casi, il timeout calcolato dallo stack è più utile rispetto a quello definito da un&quot;applicazione. Si tratta del comportamento predefinito per un <xref:System.Net.Sockets.Socket>quando il <xref:System.Net.Sockets.Socket.LingerState%2A>non è impostata e per un <xref:System.Net.Sockets.TcpClient>quando il <xref:System.Net.Sockets.TcpClient.LingerState%2A>non è impostata.</xref:System.Net.Sockets.TcpClient.LingerState%2A> </xref:System.Net.Sockets.TcpClient> </xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.Socket>"
  example:
  - "The following example sets a previously created <xref:System.Net.Sockets.Socket> to linger one second after calling the <xref:System.Net.Sockets.Socket.Close%2A> method.  \n  \n [!code-cpp[Classic LingerOption Example#1](~/add/codesnippet/cpp/t-system.net.sockets.lin_1.cpp)]\n [!code-cs[Classic LingerOption Example#1](~/add/codesnippet/csharp/t-system.net.sockets.lin_1.cs)]\n [!code-vb[Classic LingerOption Example#1](~/add/codesnippet/visualbasic/t-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public class LingerOption
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  id: '#ctor(System.Boolean,System.Int32)'
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: LingerOption(Boolean,Int32)
  nameWithType: LingerOption.LingerOption(Boolean,Int32)
  fullName: System.Net.Sockets.LingerOption.LingerOption(Boolean,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Net.Sockets.LingerOption&quot;> </xref> classe."
  remarks: "Si può ancora essere disponibili dati nel buffer di rete in uscita dopo aver chiuso la <xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket> Utilizzare il `enable` parametro per specificare se si desidera che il <xref:System.Net.Sockets.Socket>per continuare a trasmettere i dati dopo la chiamata del metodo close.</xref:System.Net.Sockets.Socket> Utilizzare il `seconds` parametro per indicare quanto tempo desidera che il <xref:System.Net.Sockets.Socket>tenti di trasferire i dati prima del timeout.</xref:System.Net.Sockets.Socket> Se si specifica `true` per il `enable` parametro e 0 per il `seconds` parametro, il <xref:System.Net.Sockets.Socket>tenterà di inviare dati fino a quando non vi è alcun dati rimasti nel buffer di rete in uscita.</xref:System.Net.Sockets.Socket> Se si specifica `false` per il `enable` parametro, il <xref:System.Net.Sockets.Socket>verrà chiusa immediatamente e i messaggi non inviati dati andranno perduti.</xref:System.Net.Sockets.Socket>       Nella tabella seguente viene descritto il comportamento nel <xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName>e <xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=fullName>metodi in base ai valori possibili del `enable` e `seconds` parametri quando viene creata e impostata un&quot;istanza di LingerOption il <xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=fullName>o <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName>proprietà.</xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=fullName> </xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=fullName> </xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=fullName> </xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName>      | `enable`|`seconds`| Comportamento |   |--------------|---------------|--------------|   | `false` (disabilitato), il valore predefinito | Il timeout non è applicabile, (impostazione predefinita). | Tentativo di inviare dati in sospeso per un socket orientato alla connessione (ad esempio, TCP) fino a quando il valore predefinito timeout del protocollo IP scade. |   | `true` (abilitato) | Un periodo di timeout diverso da zero | Tenta di inviare dati in sospeso finché non scade il timeout specificato, se il tentativo non riesce, Winsock reimposta la connessione. |   | `true` (abilitato) | Un timeout di zero. | Ignora tutti i dati in sospeso. Per il socket orientati alla connessione (ad esempio, TCP), Winsock reimposta la connessione. |       Lo stack IP calcola il periodo di timeout predefinito protocollo IP da utilizzare in base all&quot;ora di round trip della connessione. Nella maggior parte dei casi, il timeout calcolato dallo stack è più utile rispetto a quello definito da un&quot;applicazione. Si tratta del comportamento predefinito per un socket quando il <xref:System.Net.Sockets.Socket.LingerState%2A>non è impostata.</xref:System.Net.Sockets.Socket.LingerState%2A>       Quando il <xref:System.Net.Sockets.LingerOption.LingerTime%2A>proprietà archiviata nel <xref:System.Net.Sockets.Socket.LingerState%2A>proprietà è maggiore del timeout di protocollo IP predefinito, il timeout del protocollo IP predefinito verrà comunque applicare ed eseguire l&quot;override.</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.LingerTime%2A>"
  example:
  - "The following example sets a previously created <xref:System.Net.Sockets.Socket> to linger one second after calling the <xref:System.Net.Sockets.Socket.Close%2A> method.  \n  \n [!code-cpp[Classic LingerOption Example#1](~/add/codesnippet/cpp/m-system.net.sockets.lin_1.cpp)]\n [!code-cs[Classic LingerOption Example#1](~/add/codesnippet/csharp/m-system.net.sockets.lin_1.cs)]\n [!code-vb[Classic LingerOption Example#1](~/add/codesnippet/visualbasic/m-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public LingerOption (bool enable, int seconds);
    parameters:
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rimanere connessi dopo il &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; metodo è chiamato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: seconds
      type: System.Int32
      description: "Il numero di secondi di permanenza della connessione dopo il &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; metodo viene chiamato."
  overload: System.Net.Sockets.LingerOption.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.Enabled
  id: Enabled
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: Enabled
  nameWithType: LingerOption.Enabled
  fullName: System.Net.Sockets.LingerOption.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Ottiene o imposta un valore che indica se un ritardo dopo il <xref:System.Net.Sockets.Socket>è chiuso.</xref:System.Net.Sockets.Socket>"
  remarks: "È possibile utilizzare la proprietà Enabled per determinare se il <xref:System.Net.Sockets.Socket>verrà linger dopo la chiusura.</xref:System.Net.Sockets.Socket> Modifica questo valore in `true` o `false` e passare la versione modificata <xref:System.Net.Sockets.LingerOption>per il <xref:System.Net.Sockets.Socket.SetSocketOption%2A>metodo o un insieme di <xref:System.Net.Sockets.TcpClient.LingerState%2A>o <xref:System.Net.Sockets.Socket.LingerState%2A>per disabilitare o abilitare il tempo di ritardo.</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.TcpClient.LingerState%2A> </xref:System.Net.Sockets.Socket.SetSocketOption%2A> </xref:System.Net.Sockets.LingerOption>       Nella tabella seguente viene descritto il comportamento per i valori possibili della proprietà Enabled e <xref:System.Net.Sockets.LingerOption.LingerTime%2A>proprietà archiviata nel <xref:System.Net.Sockets.Socket.LingerState%2A>proprietà.</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.LingerTime%2A>      | `enable`|`seconds`| Comportamento |   |--------------|---------------|--------------|   | `false` (disabilitato), il valore predefinito | Il timeout non è applicabile, (impostazione predefinita). | Tentativo di inviare dati in sospeso per un socket orientato alla connessione (ad esempio, TCP) fino a quando il valore predefinito timeout del protocollo IP scade. |   | `true` (abilitato) | Un periodo di timeout diverso da zero | Tenta di inviare dati in sospeso finché non scade il timeout specificato, se il tentativo non riesce, Winsock reimposta la connessione. |   | `true` (abilitato) | Un timeout di zero. | Ignora tutti i dati in sospeso. Per il socket orientati alla connessione (ad esempio, TCP), Winsock reimposta la connessione. |       Lo stack IP calcola il periodo di timeout predefinito protocollo IP da utilizzare in base all&quot;ora di round trip della connessione. Nella maggior parte dei casi, il timeout calcolato dallo stack è più utile rispetto a quello definito da un&quot;applicazione. Si tratta del comportamento predefinito per un socket quando il <xref:System.Net.Sockets.Socket.LingerState%2A>non è impostata.</xref:System.Net.Sockets.Socket.LingerState%2A>       Quando il <xref:System.Net.Sockets.LingerOption.LingerTime%2A>proprietà archiviata nel <xref:System.Net.Sockets.Socket.LingerState%2A>proprietà è maggiore del timeout di protocollo IP predefinito, il timeout del protocollo IP predefinito verrà comunque applicare ed eseguire l&quot;override.</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.LingerTime%2A>"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref:System.Net.Sockets.Socket>deve un ritardo dopo &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; chiamato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Net.Sockets.Socket>"
  overload: System.Net.Sockets.LingerOption.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.LingerOption.LingerTime
  id: LingerTime
  parent: System.Net.Sockets.LingerOption
  langs:
  - csharp
  name: LingerTime
  nameWithType: LingerOption.LingerTime
  fullName: System.Net.Sockets.LingerOption.LingerTime
  type: Property
  assemblies:
  - System
  namespace: System.Net.Sockets
  summary: "Ottiene o imposta la quantità di tempo deve restare attiva dopo la chiamata di &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt; metodo se restano per l&quot;invio di dati."
  remarks: "Utilizzare questo valore se si desidera determinare quanto tempo un chiuso <xref:System.Net.Sockets.Socket>tenterà di trasferire i dati prima del timeout.</xref:System.Net.Sockets.Socket> È inoltre possibile impostare questo valore per il periodo di timeout desiderato, in secondi.       Se il <xref:System.Net.Sockets.LingerOption.Enabled%2A>proprietà `true`, e LingerTime è impostata su 0, il <xref:System.Net.Sockets.Socket>Ignora tutti i dati da inviare nel buffer di rete in uscita in sospeso.</xref:System.Net.Sockets.Socket> </xref:System.Net.Sockets.LingerOption.Enabled%2A> Se si modifica questo valore, è necessario passare la versione modificata <xref:System.Net.Sockets.LingerOption>istanza per il <xref:System.Net.Sockets.Socket.SetSocketOption%2A>metodo o un insieme di <xref:System.Net.Sockets.TcpClient.LingerState%2A>o <xref:System.Net.Sockets.Socket.LingerState%2A>proprietà.</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.TcpClient.LingerState%2A> </xref:System.Net.Sockets.Socket.SetSocketOption%2A> </xref:System.Net.Sockets.LingerOption>       Nella tabella seguente viene descritto il comportamento per i valori possibili del <xref:System.Net.Sockets.LingerOption.Enabled%2A>LingerTime proprietà e archiviati nel <xref:System.Net.Sockets.Socket.LingerState%2A>proprietà.</xref:System.Net.Sockets.Socket.LingerState%2A> </xref:System.Net.Sockets.LingerOption.Enabled%2A>      | `enable`|`seconds`| Comportamento |   |--------------|---------------|--------------|   | `false` (disabilitato), il valore predefinito | Il timeout non è applicabile, (impostazione predefinita). | Tentativo di inviare dati in sospeso per un socket orientato alla connessione (ad esempio, TCP) fino a quando il valore predefinito timeout del protocollo IP scade. |   | `true` (abilitato) | Un periodo di timeout diverso da zero | Tenta di inviare dati in sospeso finché non scade il timeout specificato, se il tentativo non riesce, Winsock reimposta la connessione. |   | `true` (abilitato) | Un timeout di zero. | Ignora tutti i dati in sospeso. Per il socket orientati alla connessione (ad esempio, TCP), Winsock reimposta la connessione. |       Lo stack IP calcola il periodo di timeout predefinito protocollo IP da utilizzare in base all&quot;ora di round trip della connessione. Nella maggior parte dei casi, il timeout calcolato dallo stack è più utile rispetto a quello definito da un&quot;applicazione. Si tratta del comportamento predefinito per un socket quando il <xref:System.Net.Sockets.Socket.LingerState%2A>non è impostata.</xref:System.Net.Sockets.Socket.LingerState%2A>       Quando la proprietà LingerTime archiviato nel <xref:System.Net.Sockets.Socket.LingerState%2A>proprietà è maggiore del timeout di protocollo IP predefinito, il timeout del protocollo IP predefinito verrà comunque applicare ed eseguire l&quot;override.</xref:System.Net.Sockets.Socket.LingerState%2A>"
  example:
  - "The following example displays the value of this property.  \n  \n [!code-cs[Socket_Socket_Options#2](~/add/codesnippet/csharp/p-system.net.sockets.lin_1.cs)]\n [!code-cpp[Socket_Socket_Options#2](~/add/codesnippet/cpp/p-system.net.sockets.lin_1.cpp)]\n [!code-vb[Socket_Socket_Options#2](~/add/codesnippet/visualbasic/p-system.net.sockets.lin_1.vb)]"
  syntax:
    content: public int LingerTime { get; set; }
    return:
      type: System.Int32
      description: "La quantità di tempo, espresso in secondi, deve restare attiva dopo la chiamata &lt;xref:System.Net.Sockets.Socket.Close%2A?displayProperty=fullName&gt;."
  overload: System.Net.Sockets.LingerOption.LingerTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerOption(Boolean,Int32)
  nameWithType: LingerOption.LingerOption(Boolean,Int32)
  fullName: System.Net.Sockets.LingerOption.LingerOption(Boolean,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.LingerOption.Enabled
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: Enabled
  nameWithType: LingerOption.Enabled
  fullName: System.Net.Sockets.LingerOption.Enabled
- uid: System.Net.Sockets.LingerOption.LingerTime
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerTime
  nameWithType: LingerOption.LingerTime
  fullName: System.Net.Sockets.LingerOption.LingerTime
- uid: System.Net.Sockets.LingerOption.#ctor*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerOption
  nameWithType: LingerOption.LingerOption
- uid: System.Net.Sockets.LingerOption.Enabled*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: Enabled
  nameWithType: LingerOption.Enabled
- uid: System.Net.Sockets.LingerOption.LingerTime*
  parent: System.Net.Sockets.LingerOption
  isExternal: false
  name: LingerTime
  nameWithType: LingerOption.LingerTime
