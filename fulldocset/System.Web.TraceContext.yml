### YamlMime:ManagedReference
items:
- uid: System.Web.TraceContext
  id: TraceContext
  children:
  - System.Web.TraceContext.#ctor(System.Web.HttpContext)
  - System.Web.TraceContext.IsEnabled
  - System.Web.TraceContext.TraceFinished
  - System.Web.TraceContext.TraceMode
  - System.Web.TraceContext.Warn(System.String)
  - System.Web.TraceContext.Warn(System.String,System.String)
  - System.Web.TraceContext.Warn(System.String,System.String,System.Exception)
  - System.Web.TraceContext.Write(System.String)
  - System.Web.TraceContext.Write(System.String,System.String)
  - System.Web.TraceContext.Write(System.String,System.String,System.Exception)
  langs:
  - csharp
  name: TraceContext
  nameWithType: TraceContext
  fullName: System.Web.TraceContext
  type: Class
  summary: "Acquisisce e visualizza i dettagli di esecuzione di una richiesta Web. Questa classe non può essere ereditata."
  remarks: "È possibile utilizzare questa classe per aggiungere messaggi a specifiche categorie di analisi. Ad esempio, se si sta creando un&quot;istanza di <xref:System.Web.UI.WebControls.Calendar>classe per l&quot;applicazione, è possibile includere il messaggio di traccia &quot;Avvio del rendering&quot; in una routine di rendering e &quot;Attivazione evento OnChange&quot; in una routine del gestore eventi.</xref:System.Web.UI.WebControls.Calendar>       È inoltre possibile utilizzare la classe TraceContext per ottenere un set di record di traccia alla fine dell&quot;esecuzione della richiesta per l&quot;elaborazione personalizzata. Per ulteriori informazioni, vedere [Cenni preliminari sulla traccia di ASP.NET](~/add/includes/ajax-current-ext-md.md).       Per abilitare la traccia, impostare il `Trace` attributo la [@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) direttiva o <xref:System.Web.TraceContext.IsEnabled%2A>proprietà `true`.</xref:System.Web.TraceContext.IsEnabled%2A> Quando è attivata, oltre a visualizzare il contenuto di traccia fornito dall&quot;utente, la <xref:System.Web.UI.Page>classe include automaticamente i dati sulle prestazioni, informazioni sulla struttura ad albero di controllo e il contenuto di gestione dello stato per ogni richiesta.</xref:System.Web.UI.Page>"
  syntax:
    content: public sealed class TraceContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.TraceContext.#ctor(System.Web.HttpContext)
  id: '#ctor(System.Web.HttpContext)'
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: TraceContext(HttpContext)
  nameWithType: TraceContext.TraceContext(HttpContext)
  fullName: System.Web.TraceContext.TraceContext(HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.TraceContext&quot;> </xref> classe."
  syntax:
    content: public TraceContext (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Un <xref href=&quot;System.Web.HttpContext&quot;> </xref> che contiene informazioni sulla richiesta Web corrente."
  overload: System.Web.TraceContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.IsEnabled
  id: IsEnabled
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: IsEnabled
  nameWithType: TraceContext.IsEnabled
  fullName: System.Web.TraceContext.IsEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta un valore che indica se la traccia è abilitata per la richiesta Web corrente."
  remarks: "Utilizzare questo flag per controllare se la pagina o l&quot;applicazione deve generare informazioni di traccia prima scrittura nel log di traccia.       Il valore della proprietà IsEnabled dipende dalle impostazioni nella sottosezione del `system.web` sezione di configurazione e il valore di `trace` attributo della direttiva. L&quot;opzione di traccia impostato nella direttiva della pagina ha la precedenza sull&quot;opzione impostata nel file di configurazione. L&quot;impostazione del valore di IsEnabled a livello di programmazione ha la precedenza tramite l&quot;attributo della direttiva di pagina e l&quot;impostazione di configurazione.      > [!NOTE] > Se si imposta la proprietà IsEnabled `true` per un&quot;intera applicazione, è necessario impostare questa proprietà in modo esplicito `false` per qualsiasi pagina dell&quot;applicazione per cui si desidera visualizzare le informazioni di analisi."
  example:
  - "The following code example demonstrates how you can determine whether tracing is enabled for a page. The code iterates through the rows in a dataset, writing trace statements for each row in that dataset.  \n  \n [!code-cs[Classic TraceContext.IsEnabled Example#1](~/add/codesnippet/csharp/p-system.web.tracecontex_4_1.cs)]\n [!code-vb[Classic TraceContext.IsEnabled Example#1](~/add/codesnippet/visualbasic/p-system.web.tracecontex_4_1.vb)]"
  syntax:
    content: public bool IsEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la traccia è abilitata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.TraceContext.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.TraceFinished
  id: TraceFinished
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: TraceFinished
  nameWithType: TraceContext.TraceFinished
  fullName: System.Web.TraceContext.TraceFinished
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Generato dal <xref href=&quot;System.Web.TraceContext&quot;> </xref> oggetto esporre traccia messaggi dopo aver raccolto tutte le informazioni richieste."
  remarks: "Viene generato l&quot;evento TraceFinished durante il `EndRequest` fase dell&quot;elaborazione della richiesta HTTP. Viene generato da un <xref:System.Web.TraceContext>oggetto dopo aver raccolto tutte le informazioni richieste, per esporre la raccolta di <xref:System.Web.TraceContextRecord>messaggi registrati <xref:System.Web.TraceContextEventHandler>delegati.</xref:System.Web.TraceContextEventHandler> </xref:System.Web.TraceContextRecord> </xref:System.Web.TraceContext>"
  example:
  - "The following code example demonstrates how you can register a <xref:System.Web.TraceContextEventHandler> to handle the TraceFinished event. In this example, the delegate iterates through the trace messages and writes them to the response stream; however, you could write the same information to a database or a profiling tool consumer.  \n  \n [!code-cs[System.Web.Trace_3#1](~/add/codesnippet/csharp/e-system.web.tracecontex_1.aspx)]\n [!code-vb[System.Web.Trace_3#1](~/add/codesnippet/visualbasic/e-system.web.tracecontex_1.aspx)]"
  syntax:
    content: public event System.Web.TraceContextEventHandler TraceFinished;
    return:
      type: System.Web.TraceContextEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.TraceMode
  id: TraceMode
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: TraceMode
  nameWithType: TraceContext.TraceMode
  fullName: System.Web.TraceContext.TraceMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta l&quot;ordine in cui i messaggi di traccia devono essere visualizzati in un browser richiedente."
  remarks: "Messaggi di traccia possono essere ordinati in ordine di elaborazione o in ordine alfabetico in base alla categoria definita dall&quot;utente."
  example:
  - "The following code example demonstrates how you can sort a page's trace statements alphabetically by the categories that you have assigned to the statements.  \n  \n [!code-cs[Classic TraceContext.TraceMode Example#1](~/add/codesnippet/csharp/p-system.web.tracecontex_5_1.aspx)]\n [!code-vb[Classic TraceContext.TraceMode Example#1](~/add/codesnippet/visualbasic/p-system.web.tracecontex_5_1.aspx)]"
  syntax:
    content: public System.Web.TraceMode TraceMode { get; set; }
    return:
      type: System.Web.TraceMode
      description: "Uno del <xref href=&quot;System.Web.TraceMode&quot;> </xref> valori di enumerazione. Il valore predefinito è l&quot;impostazione di <xref uid=&quot;langword_csharp_traceMode&quot; name=&quot;traceMode&quot; href=&quot;&quot;> </xref> attributo la <xref uid=&quot;langword_csharp_trace&quot; name=&quot;trace&quot; href=&quot;&quot;> </xref> sezione di un file di configurazione, il cui valore predefinito è <xref uid=&quot;langword_csharp_SortByTime&quot; name=&quot;SortByTime&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.TraceContext.TraceMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore selezionato non è uno del <xref href=&quot;System.Web.TraceMode&quot;> </xref> valori di enumerazione."
  platform:
  - net462
- uid: System.Web.TraceContext.Warn(System.String)
  id: Warn(System.String)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Warn(String)
  nameWithType: TraceContext.Warn(String)
  fullName: System.Web.TraceContext.Warn(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Scrive un messaggio di traccia nel log di traccia. Tutti gli avvisi vengono visualizzati nel log come testo di colore rosso."
  remarks: "Ogni volta che il <xref:System.Web.TraceContext.Warn%2A>metodo viene chiamato, un <xref:System.Web.TraceContext>viene aggiunto il messaggio di traccia di <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>insieme, che è accessibile quando si gestiscono i messaggi il <xref:System.Web.TraceContext.TraceFinished>evento.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Warn%2A> Il messaggio viene aggiunto con il relativo <xref:System.Web.TraceContextRecord.IsWarning%2A>proprietà impostata su `true` e il relativo <xref:System.Web.TraceContextRecord.ErrorInfo%2A>proprietà impostata su `null`.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  syntax:
    content: public void Warn (string message);
    parameters:
    - id: message
      type: System.String
      description: "Messaggio di traccia da scrivere nel log."
  overload: System.Web.TraceContext.Warn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Warn(System.String,System.String)
  id: Warn(System.String,System.String)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Warn(String,String)
  nameWithType: TraceContext.Warn(String,String)
  fullName: System.Web.TraceContext.Warn(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Scrive informazioni nel log di traccia, inclusi eventuali categorie definite dall&quot;utente di traccia e i messaggi di traccia. Tutti gli avvisi vengono visualizzati nel log come testo di colore rosso."
  remarks: "Ogni volta che il <xref:System.Web.TraceContext.Warn%2A>metodo viene chiamato, un <xref:System.Web.TraceContext>viene aggiunto il messaggio di traccia di <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>insieme, che è accessibile quando si gestiscono i messaggi il <xref:System.Web.TraceContext.TraceFinished>evento.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Warn%2A> Il messaggio viene aggiunto con il relativo <xref:System.Web.TraceContextRecord.IsWarning%2A>proprietà impostata su `true` e il relativo <xref:System.Web.TraceContextRecord.ErrorInfo%2A>proprietà impostata su `null`.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  syntax:
    content: public void Warn (string category, string message);
    parameters:
    - id: category
      type: System.String
      description: "Categoria di traccia che riceve il messaggio."
    - id: message
      type: System.String
      description: "Messaggio di traccia da scrivere nel log."
  overload: System.Web.TraceContext.Warn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Warn(System.String,System.String,System.Exception)
  id: Warn(System.String,System.String,System.Exception)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Warn(String,String,Exception)
  nameWithType: TraceContext.Warn(String,String,Exception)
  fullName: System.Web.TraceContext.Warn(String,String,Exception)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Scrive le informazioni nel log di traccia, inclusi eventuali categorie definite dall&quot;utente, i messaggi di traccia e informazioni sull&quot;errore di analisi. Tutti gli avvisi vengono visualizzati nel log come testo di colore rosso."
  remarks: "Ogni volta che il <xref:System.Web.TraceContext.Warn%2A>metodo viene chiamato, un <xref:System.Web.TraceContext>viene aggiunto il messaggio di traccia di <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>insieme, che è accessibile quando si gestiscono i messaggi il <xref:System.Web.TraceContext.TraceFinished>evento.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Warn%2A> Il messaggio viene aggiunto con il relativo <xref:System.Web.TraceContextRecord.IsWarning%2A>proprietà impostata su `true`e <xref:System.Web.TraceContextRecord.ErrorInfo%2A>proprietà è impostata per l&quot;oggetto passato per il `errorInfo` parametro.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  example:
  - "The following code example demonstrates how to call the <xref:System.Web.TraceContext.Write%2A> method to write an error trace message to the trace log. In this example, different exceptions are traced as errors and warnings. When the page throws an <xref:System.ArgumentException>, it writes a warning message using the <xref:System.Web.TraceContext.Warn%2A> method. When the page throws an <xref:System.InvalidOperationException>, it writes an error message using the <xref:System.Web.TraceContext.Write%2A> method.  \n  \n [!code-cs[System.Web.Trace_4#1](~/add/codesnippet/csharp/m-system.web.tracecontex_1_1.aspx)]\n [!code-vb[System.Web.Trace_4#1](~/add/codesnippet/visualbasic/m-system.web.tracecontex_1_1.aspx)]"
  syntax:
    content: public void Warn (string category, string message, Exception errorInfo);
    parameters:
    - id: category
      type: System.String
      description: "Categoria di traccia che riceve il messaggio."
    - id: message
      type: System.String
      description: "Messaggio di traccia da scrivere nel log."
    - id: errorInfo
      type: System.Exception
      description: "Un <xref:System.Exception>che contiene informazioni sull&quot;errore.</xref:System.Exception>"
  overload: System.Web.TraceContext.Warn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Write(System.String)
  id: Write(System.String)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Write(String)
  nameWithType: TraceContext.Write(String)
  fullName: System.Web.TraceContext.Write(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Scrive un messaggio di traccia nel log di traccia."
  remarks: "Ogni volta che il <xref:System.Web.TraceContext.Write%2A>metodo viene chiamato, un <xref:System.Web.TraceContext>viene aggiunto il messaggio di traccia di <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>insieme, che è accessibile quando si gestiscono i messaggi il <xref:System.Web.TraceContext.TraceFinished>evento.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Write%2A> Il messaggio viene aggiunto con il relativo <xref:System.Web.TraceContextRecord.IsWarning%2A>proprietà impostata su `false` e il relativo <xref:System.Web.TraceContextRecord.ErrorInfo%2A>proprietà impostata su `null`.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  syntax:
    content: public void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "Messaggio di traccia da scrivere nel log."
  overload: System.Web.TraceContext.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Write(System.String,System.String)
  id: Write(System.String,System.String)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Write(String,String)
  nameWithType: TraceContext.Write(String,String)
  fullName: System.Web.TraceContext.Write(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Scrive le informazioni di traccia nel log di traccia, tra cui un messaggio e tutte le categorie definite dall&quot;utente."
  remarks: "Ogni volta che il <xref:System.Web.TraceContext.Write%2A>metodo viene chiamato, un <xref:System.Web.TraceContext>viene aggiunto il messaggio di traccia di <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>insieme, che è accessibile quando si gestiscono i messaggi il <xref:System.Web.TraceContext.TraceFinished>evento.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Write%2A> Il messaggio viene aggiunto con il relativo <xref:System.Web.TraceContextRecord.IsWarning%2A>proprietà impostata su `false` e il relativo <xref:System.Web.TraceContextRecord.ErrorInfo%2A>proprietà impostata su `null`.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  example:
  - "The following code example demonstrates how to call the Write method to write an error trace message to the trace log. In this example, the delegate iterates through the trace messages and writes them as an HTML table; however, you can write the same information to a database or a profiling tool consumer.  \n  \n [!code-cs[System.Web.Trace_5#1](~/add/codesnippet/csharp/m-system.web.tracecontex_0_1.aspx)]\n [!code-vb[System.Web.Trace_5#1](~/add/codesnippet/visualbasic/m-system.web.tracecontex_0_1.aspx)]"
  syntax:
    content: public void Write (string category, string message);
    parameters:
    - id: category
      type: System.String
      description: "Categoria di traccia che riceve il messaggio."
    - id: message
      type: System.String
      description: "Messaggio di traccia da scrivere nel log."
  overload: System.Web.TraceContext.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.TraceContext.Write(System.String,System.String,System.Exception)
  id: Write(System.String,System.String,System.Exception)
  parent: System.Web.TraceContext
  langs:
  - csharp
  name: Write(String,String,Exception)
  nameWithType: TraceContext.Write(String,String,Exception)
  fullName: System.Web.TraceContext.Write(String,String,Exception)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Scrive le informazioni nel log di traccia, inclusi eventuali categorie definite dall&quot;utente, i messaggi di traccia e informazioni sull&quot;errore di analisi."
  remarks: "Ogni volta che il <xref:System.Web.TraceContext.Write%2A>metodo viene chiamato, un <xref:System.Web.TraceContext>viene aggiunto il messaggio di traccia di <xref:System.Web.TraceContextEventArgs.TraceRecords%2A>insieme, che è accessibile quando si gestiscono i messaggi il <xref:System.Web.TraceContext.TraceFinished>evento.</xref:System.Web.TraceContext.TraceFinished> </xref:System.Web.TraceContextEventArgs.TraceRecords%2A> </xref:System.Web.TraceContext> </xref:System.Web.TraceContext.Write%2A> Il messaggio viene aggiunto con il relativo <xref:System.Web.TraceContextRecord.IsWarning%2A>proprietà impostata su `false`e <xref:System.Web.TraceContextRecord.ErrorInfo%2A>proprietà è impostata per l&quot;oggetto passato per il `errorInfo` parametro.</xref:System.Web.TraceContextRecord.ErrorInfo%2A> </xref:System.Web.TraceContextRecord.IsWarning%2A>"
  example:
  - "The following code example demonstrates how to call the Write method to write an error trace message to the trace log. In this example, different exceptions are traced as errors and warnings. When the page throws an <xref:System.ArgumentException>, it writes a warning message using the <xref:System.Web.TraceContext.Warn%2A> method. When the page throws an <xref:System.InvalidOperationException>, it writes an error message using the <xref:System.Web.TraceContext.Write%2A> method.  \n  \n [!code-cs[System.Web.Trace_4#1](~/add/codesnippet/csharp/m-system.web.tracecontex_2_1.aspx)]\n [!code-vb[System.Web.Trace_4#1](~/add/codesnippet/visualbasic/m-system.web.tracecontex_2_1.aspx)]"
  syntax:
    content: public void Write (string category, string message, Exception errorInfo);
    parameters:
    - id: category
      type: System.String
      description: "Categoria di traccia che riceve il messaggio."
    - id: message
      type: System.String
      description: "Messaggio di traccia da scrivere nel log."
    - id: errorInfo
      type: System.Exception
      description: "Un <xref:System.Exception>che contiene informazioni sull&quot;errore.</xref:System.Exception>"
  overload: System.Web.TraceContext.Write*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.TraceContext.#ctor(System.Web.HttpContext)
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceContext(HttpContext)
  nameWithType: TraceContext.TraceContext(HttpContext)
  fullName: System.Web.TraceContext.TraceContext(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.TraceContext.IsEnabled
  parent: System.Web.TraceContext
  isExternal: false
  name: IsEnabled
  nameWithType: TraceContext.IsEnabled
  fullName: System.Web.TraceContext.IsEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.TraceContext.TraceFinished
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceFinished
  nameWithType: TraceContext.TraceFinished
  fullName: System.Web.TraceContext.TraceFinished
- uid: System.Web.TraceContextEventHandler
  parent: System.Web
  isExternal: false
  name: TraceContextEventHandler
  nameWithType: TraceContextEventHandler
  fullName: System.Web.TraceContextEventHandler
- uid: System.Web.TraceContext.TraceMode
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceMode
  nameWithType: TraceContext.TraceMode
  fullName: System.Web.TraceContext.TraceMode
- uid: System.Web.TraceMode
  parent: System.Web
  isExternal: false
  name: TraceMode
  nameWithType: TraceMode
  fullName: System.Web.TraceMode
- uid: System.Web.TraceContext.Warn(System.String)
  parent: System.Web.TraceContext
  isExternal: false
  name: Warn(String)
  nameWithType: TraceContext.Warn(String)
  fullName: System.Web.TraceContext.Warn(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.TraceContext.Warn(System.String,System.String)
  parent: System.Web.TraceContext
  isExternal: false
  name: Warn(String,String)
  nameWithType: TraceContext.Warn(String,String)
  fullName: System.Web.TraceContext.Warn(String,String)
- uid: System.Web.TraceContext.Warn(System.String,System.String,System.Exception)
  parent: System.Web.TraceContext
  isExternal: false
  name: Warn(String,String,Exception)
  nameWithType: TraceContext.Warn(String,String,Exception)
  fullName: System.Web.TraceContext.Warn(String,String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.TraceContext.Write(System.String)
  parent: System.Web.TraceContext
  isExternal: false
  name: Write(String)
  nameWithType: TraceContext.Write(String)
  fullName: System.Web.TraceContext.Write(String)
- uid: System.Web.TraceContext.Write(System.String,System.String)
  parent: System.Web.TraceContext
  isExternal: false
  name: Write(String,String)
  nameWithType: TraceContext.Write(String,String)
  fullName: System.Web.TraceContext.Write(String,String)
- uid: System.Web.TraceContext.Write(System.String,System.String,System.Exception)
  parent: System.Web.TraceContext
  isExternal: false
  name: Write(String,String,Exception)
  nameWithType: TraceContext.Write(String,String,Exception)
  fullName: System.Web.TraceContext.Write(String,String,Exception)
- uid: System.Web.TraceContext.#ctor*
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceContext
  nameWithType: TraceContext.TraceContext
- uid: System.Web.TraceContext.IsEnabled*
  parent: System.Web.TraceContext
  isExternal: false
  name: IsEnabled
  nameWithType: TraceContext.IsEnabled
- uid: System.Web.TraceContext.TraceMode*
  parent: System.Web.TraceContext
  isExternal: false
  name: TraceMode
  nameWithType: TraceContext.TraceMode
- uid: System.Web.TraceContext.Warn*
  parent: System.Web.TraceContext
  isExternal: false
  name: Warn
  nameWithType: TraceContext.Warn
- uid: System.Web.TraceContext.Write*
  parent: System.Web.TraceContext
  isExternal: false
  name: Write
  nameWithType: TraceContext.Write
