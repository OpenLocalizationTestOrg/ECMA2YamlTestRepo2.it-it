### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.EndpointNameMessageFilter
  id: EndpointNameMessageFilter
  children:
  - System.ServiceModel.Dispatcher.EndpointNameMessageFilter.#ctor(System.String)
  - System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  langs:
  - csharp
  name: EndpointNameMessageFilter
  nameWithType: EndpointNameMessageFilter
  fullName: System.ServiceModel.Dispatcher.EndpointNameMessageFilter
  type: Class
  summary: "Rappresenta una query che verifica se Ã¨ stato ricevuto un messaggio a un endpoint con un nome che corrisponde al nome specificato."
  syntax:
    content: 'public class EndpointNameMessageFilter : System.ServiceModel.Dispatcher.MessageFilter'
  inheritance:
  - System.Object
  - System.ServiceModel.Dispatcher.MessageFilter
  implements: []
  inheritedMembers:
  - System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.EndpointNameMessageFilter.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Dispatcher.EndpointNameMessageFilter
  langs:
  - csharp
  name: EndpointNameMessageFilter(String)
  nameWithType: EndpointNameMessageFilter.EndpointNameMessageFilter(String)
  fullName: System.ServiceModel.Dispatcher.EndpointNameMessageFilter.EndpointNameMessageFilter(String)
  type: Constructor
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Dispatcher
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Dispatcher.EndpointNameMessageFilter&quot;> </xref> classe con un nome specificato su cui eseguire il test di un messaggio."
  syntax:
    content: public EndpointNameMessageFilter (string endpointName);
    parameters:
    - id: endpointName
      type: System.String
      description: "Nome dell&quot;endpoint utilizzato in cui i messaggi sono testati"
  overload: System.ServiceModel.Dispatcher.EndpointNameMessageFilter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(System.ServiceModel.Channels.Message)
  id: Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.EndpointNameMessageFilter
  langs:
  - csharp
  name: Match(Message)
  nameWithType: EndpointNameMessageFilter.Match(Message)
  fullName: System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(Message)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Dispatcher
  summary: "Verifica se un messaggio soddisfa il nome dell&quot;endpoint specificato."
  syntax:
    content: public override bool Match (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Oggetto messaggio da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto Message soddisfa il nome dell&quot;endpoint specificato nel filtro. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  id: Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.EndpointNameMessageFilter
  langs:
  - csharp
  name: Match(MessageBuffer)
  nameWithType: EndpointNameMessageFilter.Match(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(MessageBuffer)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Dispatcher
  summary: "Verifica se un messaggio memorizzato nel buffer soddisfa il nome dell&quot;endpoint specificato."
  syntax:
    content: public override bool Match (System.ServiceModel.Channels.MessageBuffer buffer);
    parameters:
    - id: buffer
      type: System.ServiceModel.Channels.MessageBuffer
      description: "Il <xref:System.ServiceModel.Channels.MessageBuffer>oggetto da controllare.</xref:System.ServiceModel.Channels.MessageBuffer>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto Message soddisfa il nome dell&quot;endpoint specificato nel filtro. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.MessageFilter
  isExternal: false
  name: System.ServiceModel.Dispatcher.MessageFilter
- uid: System.ServiceModel.Dispatcher.EndpointNameMessageFilter.#ctor(System.String)
  parent: System.ServiceModel.Dispatcher.EndpointNameMessageFilter
  isExternal: false
  name: EndpointNameMessageFilter(String)
  nameWithType: EndpointNameMessageFilter.EndpointNameMessageFilter(String)
  fullName: System.ServiceModel.Dispatcher.EndpointNameMessageFilter.EndpointNameMessageFilter(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.EndpointNameMessageFilter
  isExternal: false
  name: Match(Message)
  nameWithType: EndpointNameMessageFilter.Match(Message)
  fullName: System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(Message)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)
  parent: System.ServiceModel.Dispatcher.EndpointNameMessageFilter
  isExternal: false
  name: Match(MessageBuffer)
  nameWithType: EndpointNameMessageFilter.Match(MessageBuffer)
  fullName: System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(MessageBuffer)
- uid: System.ServiceModel.Channels.MessageBuffer
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageBuffer
  nameWithType: MessageBuffer
  fullName: System.ServiceModel.Channels.MessageBuffer
- uid: System.ServiceModel.Dispatcher.EndpointNameMessageFilter.#ctor*
  parent: System.ServiceModel.Dispatcher.EndpointNameMessageFilter
  isExternal: false
  name: EndpointNameMessageFilter
  nameWithType: EndpointNameMessageFilter.EndpointNameMessageFilter
- uid: System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match*
  parent: System.ServiceModel.Dispatcher.EndpointNameMessageFilter
  isExternal: false
  name: Match
  nameWithType: EndpointNameMessageFilter.Match
