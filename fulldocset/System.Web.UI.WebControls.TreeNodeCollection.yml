### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeNodeCollection
  id: TreeNodeCollection
  children:
  - System.Web.UI.WebControls.TreeNodeCollection.#ctor
  - System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.Clear
  - System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.Count
  - System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator
  - System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  - System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  - System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState
  langs:
  - csharp
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Web.UI.WebControls.TreeNodeCollection
  type: Class
  summary: "Rappresenta una raccolta di <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> gli oggetti di <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controllo. Questa classe non può essere ereditata."
  remarks: "La classe TreeNodeCollection viene utilizzata per archiviare e gestire una raccolta di <xref:System.Web.UI.WebControls.TreeNode>gli oggetti di <xref:System.Web.UI.WebControls.TreeView>controllo.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode> Il <xref:System.Web.UI.WebControls.TreeView>controllo utilizza la classe TreeNodeCollection in una delle relative proprietà.</xref:System.Web.UI.WebControls.TreeView> Memorizza i relativi nodi radice nel <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>proprietà e i nodi selezionati nella <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>proprietà.</xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> </xref:System.Web.UI.WebControls.TreeView.Nodes%2A> La raccolta di TreeNodeCollection viene usata anche per il <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>proprietà per archiviare i nodi figlio (se presente).</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>       La classe TreeNodeCollection supporta diversi metodi per accedere agli elementi nella raccolta:-utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A>indicizzatore per recuperare un <xref:System.Web.UI.WebControls.TreeNode>oggetto direttamente in un indice specifico in base zero.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A>      -Utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>metodo per creare un enumeratore che può essere utilizzato per scorrere la raccolta.</xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>      -Utilizzare `foreach` (c#) o `For Each` (Visual Basic) per l&quot;iterazione della raccolta.      -Utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>metodo per copiare il contenuto della raccolta in un <xref:System.Array>oggetto.</xref:System.Array> </xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>       È possibile gestire a livello di codice il TreeNodeCollection aggiungendo e rimuovendo <xref:System.Web.UI.WebControls.TreeNode>oggetti.</xref:System.Web.UI.WebControls.TreeNode> Per aggiungere nodi alla raccolta, utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A>o <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A>metodo.</xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> Per rimuovere nodi dalla raccolta, utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>, <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>, o <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>metodo.</xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>      > [!NOTE] > Quando il <xref:System.Web.UI.WebControls.TreeView>è associato a un&quot;origine dati, il <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>e <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>raccolte vengono popolate automaticamente ogni volta che si verifica l&quot;associazione.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> </xref:System.Web.UI.WebControls.TreeView.Nodes%2A> </xref:System.Web.UI.WebControls.TreeView> Tutte le modifiche alle raccolte tra associazioni andranno persi. Per mantenere queste modifiche, aggiornare l&quot;origine dati o per ricompilare manualmente ogni volta che si associa la raccolta.       Il TreeNodeCollection contiene proprietà e metodi che consentono di recuperare informazioni sulla raccolta di se stesso. Per trovare il numero di elementi presenti nella raccolta, utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A>proprietà.</xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> Se si desidera determinare se la raccolta contiene un determinato <xref:System.Web.UI.WebControls.TreeNode>oggetto, usare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A>metodo.</xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> </xref:System.Web.UI.WebControls.TreeNode> Per ottenere l&quot;indice di un <xref:System.Web.UI.WebControls.TreeNode>oggetto nella raccolta, utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A>metodo.</xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> </xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to programmatically add nodes to and remove them from a TreeNodeCollection. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties return a TreeNodeCollection object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_136_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_136_1.aspx)]"
  syntax:
    content: 'public sealed class TreeNodeCollection : System.Collections.ICollection, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: TreeNodeCollection()
  nameWithType: TreeNodeCollection.TreeNodeCollection()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> classe utilizzando i valori predefiniti."
  remarks: "Utilizzare questo costruttore per inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.TreeNodeCollection>classe utilizzando i valori predefiniti.</xref:System.Web.UI.WebControls.TreeNodeCollection> Questo costruttore è comunemente utilizzato quando si crea una raccolta di nodi radice in cui un nodo padre (o proprietario) non è obbligatorio.      > [!NOTE] > Durante la creazione di una raccolta di nodi non radice, è necessario utilizzare il costruttore di overload che accetta il `owner` parametro, invece di questo costruttore, per specificare il nodo padre.       Questo costruttore viene utilizzato principalmente dagli sviluppatori di controlli."
  syntax:
    content: public TreeNodeCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)
  id: '#ctor(System.Web.UI.WebControls.TreeNode)'
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: TreeNodeCollection(TreeNode)
  nameWithType: TreeNodeCollection.TreeNodeCollection(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection(TreeNode)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> classe utilizzando il nodo padre specificato (o proprietario)."
  remarks: "Utilizzare questo costruttore per inizializzare una nuova istanza di <xref:System.Web.UI.WebControls.TreeNodeCollection>classe utilizzando il nodo padre specificato (o proprietario).</xref:System.Web.UI.WebControls.TreeNodeCollection> Questo costruttore viene comunemente utilizzato quando si crea una raccolta di nodi non radice in cui è necessario specificare il nodo padre.      > [!NOTE] > Durante la creazione di una raccolta di nodi radice, è opportuno utilizzare il costruttore predefinito poiché i nodi radice non dispone di un nodo padre.       Questo costruttore viene utilizzato principalmente dagli sviluppatori di controlli."
  syntax:
    content: public TreeNodeCollection (System.Web.UI.WebControls.TreeNode owner);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.TreeNode
      description: "Il <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> oggetto che rappresenta il nodo padre della raccolta."
  overload: System.Web.UI.WebControls.TreeNodeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)
  id: Add(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Add(TreeNode)
  nameWithType: TreeNodeCollection.Add(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Add(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> oggetto alla fine del <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> oggetto."
  remarks: "Utilizzare il metodo Add per aggiungere l&quot; <xref:System.Web.UI.WebControls.TreeNode>oggetto alla fine di <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> specificato      > [!NOTE] > Il <xref:System.Web.UI.WebControls.TreeNodeCollection>consente di aggiungere riferimenti null (Nothing in Visual Basic), nonché duplicato <xref:System.Web.UI.WebControls.TreeNode>oggetti.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       In alternativa, è possibile inserire un <xref:System.Web.UI.WebControls.TreeNode>oggetto la <xref:System.Web.UI.WebControls.TreeNodeCollection>in un indice specifico usando il <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A>metodo.</xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to use the Add method to programmatically add a node to the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/370e49fd-05e7-49aa-a3d5-_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/370e49fd-05e7-49aa-a3d5-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.WebControls.TreeNode child);
    parameters:
    - id: child
      type: System.Web.UI.WebControls.TreeNode
      description: "Il <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> oggetto da accodare."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  id: AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: AddAt(Int32,TreeNode)
  nameWithType: TreeNodeCollection.AddAt(Int32,TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.AddAt(Int32,TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inserisce l&quot;oggetto specificato <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> dell&quot;oggetto un <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> oggetto in corrispondenza dell&quot;indice specificato."
  remarks: "Utilizzare il metodo AddAt per inserire l&quot;oggetto specificato <xref:System.Web.UI.WebControls.TreeNode>oggetto di <xref:System.Web.UI.WebControls.TreeNodeCollection>in corrispondenza dell&quot;indice in base zero specificato.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > Il <xref:System.Web.UI.WebControls.TreeNodeCollection>consente di inserire riferimenti null (Nothing in Visual Basic), nonché duplicato <xref:System.Web.UI.WebControls.TreeNode>oggetti.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       In alternativa, è possibile aggiungere un <xref:System.Web.UI.WebControls.TreeNode>oggetto alla fine del <xref:System.Web.UI.WebControls.TreeNodeCollection>utilizzando il <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A>metodo.</xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to use the AddAt method to programmatically add a node to the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/646d7369-5544-4d90-8475-_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/646d7369-5544-4d90-8475-_1.aspx)]"
  syntax:
    content: public void AddAt (int index, System.Web.UI.WebControls.TreeNode child);
    parameters:
    - id: index
      type: System.Int32
      description: "La posizione di indice in base zero in corrispondenza del quale inserire il <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> oggetto."
    - id: child
      type: System.Web.UI.WebControls.TreeNode
      description: "Il <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> oggetto da aggiungere."
  overload: System.Web.UI.WebControls.TreeNodeCollection.AddAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>child</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TreeNodeCollection.Clear()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Svuota il <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> oggetto."
  remarks: "Utilizzare il metodo Clear per rimuovere tutti gli <xref:System.Web.UI.WebControls.TreeNode>oggetti da <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > Per rimuovere un singolo nodo dalla raccolta, utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>o <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>metodo.</xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>"
  example:
  - "The following example demonstrates how to use the Clear method to programmatically empty a <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_111_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_111_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)
  id: Contains(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Contains(TreeNode)
  nameWithType: TreeNodeCollection.Contains(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Contains(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina se l&quot;oggetto specificato <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> oggetto è presente nella raccolta."
  remarks: "Utilizzare il metodo Contains per determinare se un <xref:System.Web.UI.WebControls.TreeNode>oggetto è contenuto in <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> Questo metodo viene comunemente utilizzato per verificare l&quot;esistenza di un <xref:System.Web.UI.WebControls.TreeNode>oggetto prima di eseguire un&quot;attività, ad esempio aggiungendo o rimuovendo il nodo dalla raccolta.</xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to use the Contains method to determine whether the selected node is in the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> collection. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-vb[TreeNodeCollectionIndexOf#1](~/add/codesnippet/visualbasic/8b0f37ed-79bf-4881-ba56-_1.aspx)]\n [!code-cs[TreeNodeCollectionIndexOf#1](~/add/codesnippet/csharp/8b0f37ed-79bf-4881-ba56-_1.aspx)]"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.TreeNode c);
    parameters:
    - id: c
      type: System.Web.UI.WebControls.TreeNode
      description: "Il <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> oggetto da trovare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto specificato <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> oggetto è contenuto nella raccolta; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: CopyTo(TreeNode[],Int32)
  nameWithType: TreeNodeCollection.CopyTo(TreeNode[],Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(TreeNode[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copia tutti gli elementi di <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> oggetto in una matrice unidimensionale compatibile di <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> oggetti, a partire dall&quot;indice specificato nella matrice di destinazione."
  remarks: "Utilizzare il metodo CopyTo per copiare il contenuto del <xref:System.Web.UI.WebControls.TreeNodeCollection>nell&quot;oggetto specificato in base zero <xref:System.Array?displayProperty=fullName>oggetto.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeNodeCollection> Gli elementi vengono copiati a partire dall&quot;indice specificato della matrice di destinazione. Con l&quot; <xref:System.Array?displayProperty=fullName>oggetto, è quindi possibile utilizzare la sintassi della matrice per accedere alle voci in <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Array?displayProperty=fullName>       In alternativa, è inoltre possibile utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>metodo per creare un enumeratore che può essere utilizzato per accedere agli elementi nella raccolta.</xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>"
  example:
  - "The following example demonstrates how to use the CopyTo method to copy the values of a <xref:System.Web.UI.WebControls.TreeNodeCollection> into an array. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionCopyTo#1](~/add/codesnippet/csharp/a62bb2b9-1097-48cf-a7f1-_1.aspx)]\n [!code-vb[TreeNodeCollectionCopyTo#1](~/add/codesnippet/visualbasic/a62bb2b9-1097-48cf-a7f1-_1.aspx)]"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.TreeNode[] nodeArray, int index);
    parameters:
    - id: nodeArray
      type: System.Web.UI.WebControls.TreeNode[]
      description: "Una matrice in base zero di <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> gli oggetti che riceve gli elementi copiati dal <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "Posizione nella matrice di destinazione in corrispondenza del quale iniziare a ricevere il contenuto copiato."
  overload: System.Web.UI.WebControls.TreeNodeCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Count
  nameWithType: TreeNodeCollection.Count
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene il numero di elementi di <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> oggetto."
  remarks: "Utilizzare la proprietà Count per determinare il numero di elementi in un <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> Questa proprietà viene comunemente utilizzata quando si scorre una raccolta per determinare il limite superiore della raccolta. La proprietà Count viene spesso utilizzata anche per determinare se una raccolta è vuota."
  example:
  - "The following example demonstrates how to use the Count property to determine the number of items in the <xref:System.Web.UI.WebControls.TreeNodeCollection>. It then performs a preorder traversal of the <xref:System.Web.UI.WebControls.TreeView> control to display the text of each node.  \n  \n [!code-cs[TreeNodeCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_146_1.aspx)]\n [!code-vb[TreeNodeCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_146_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Il numero di elementi di <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TreeNodeCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restituisce un enumeratore che può essere utilizzato per scorrere un <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> oggetto."
  remarks: "Utilizzare il metodo GetEnumerator per creare un enumeratore che sia possibile scorrere facilmente per ottenere ogni elemento nella <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> Per ottenere l&quot;elemento attualmente indicato nell&quot;enumeratore, utilizzare il <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>proprietà.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> Utilizzare il <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>metodo per spostare l&quot;elemento successivo.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> Se si desidera riportare l&quot;enumeratore all&quot;inizio della raccolta, utilizzare il <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>metodo.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      > [!NOTE] > Dopo aver creato un enumeratore o utilizzare il <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>(metodo), è necessario chiamare il <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>metodo.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> In caso contrario, l&quot;elemento rappresentato dal <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>proprietà non è definita.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>       In alternativa, è inoltre possibile utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>metodo per creare un <xref:System.Array?displayProperty=fullName>oggetto che può essere utilizzato per accedere agli elementi nella raccolta.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> In alternativa è possibile utilizzare un `foreach` o `For Each` struttura per scorrere la raccolta."
  example:
  - "The following example demonstrates how to use the GetEnumerator method to create an enumerator that contains root nodes of the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeNodeCollectionGetEnumerator#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_193_1.aspx)]\n [!code-vb[TreeNodeCollectionGetEnumerator#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_193_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Un enumeratore che può essere usato per scorrere il <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)
  id: IndexOf(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: IndexOf(TreeNode)
  nameWithType: TreeNodeCollection.IndexOf(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina l&quot;indice dell&quot;oggetto specificato <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> oggetto."
  remarks: "Utilizzare il metodo IndexOf per determinare l&quot;indice in base zero dell&quot;oggetto specificato <xref:System.Web.UI.WebControls.TreeNode>oggetto di <xref:System.Web.UI.WebControls.TreeNodeCollection>oggetto.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> Se il nodo non è presente nella raccolta, il metodo restituisce -1.      > [!NOTE] > Se il nodo specificato è presente più volte nella raccolta, viene restituito l&quot;indice della prima occorrenza."
  example:
  - "The following example demonstrates how to use the IndexOf method to determine the index of a root node. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-vb[TreeNodeCollectionIndexOf#1](~/add/codesnippet/visualbasic/be69754f-ce4e-4152-80b4-_1.aspx)]\n [!code-cs[TreeNodeCollectionIndexOf#1](~/add/codesnippet/csharp/be69754f-ce4e-4152-80b4-_1.aspx)]"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.TreeNode value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.TreeNode
      description: "Il <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> oggetto da individuare."
    return:
      type: System.Int32
      description: "L&quot;indice in base zero della prima occorrenza di <code> value </code> all&quot;interno di <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>, se presente; in caso contrario, -1."
  overload: System.Web.UI.WebControls.TreeNodeCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: TreeNodeCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se l&quot;accesso per il <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> è sincronizzato (thread-safe)."
  remarks: "La proprietà IsSynchronized viene utilizzata per indicare se l&quot;accesso al <xref:System.Web.UI.WebControls.TreeNodeCollection>è sincronizzato (thread-safe).</xref:System.Web.UI.WebControls.TreeNodeCollection> Questa proprietà è derivata dalla <xref:System.Collections.ICollection?displayProperty=fullName>classe e viene eseguito l&quot;override per restituire sempre `false`.</xref:System.Collections.ICollection?displayProperty=fullName>       Per ulteriori informazioni sulla proprietà IsSynchronized, vedere il <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>proprietà del <xref:System.Collections.ICollection?displayProperty=fullName>interfaccia.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TreeNodeCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene il <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> oggetto in corrispondenza dell&quot;indice specificato nella <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> oggetto."
  remarks: "Utilizzare l&quot;indicizzatore per accedere a un <xref:System.Web.UI.WebControls.TreeNode>dall&quot;oggetto di <xref:System.Web.UI.WebControls.TreeNodeCollection>in corrispondenza dell&quot;indice specificato utilizzando la notazione di matrice.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> L&quot;indicizzatore consente di modificare o sostituire un <xref:System.Web.UI.WebControls.TreeNode>oggetto nella raccolta direttamente.</xref:System.Web.UI.WebControls.TreeNode> La raccolta è in base zero."
  example:
  - "The following example demonstrates how to use the indexer to access an element in the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1077_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1077_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNode this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "L&quot;indice in base zero di <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> oggetto da recuperare."
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "Il <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> oggetto in corrispondenza dell&quot;indice specificato nella <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)
  id: Remove(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Remove(TreeNode)
  nameWithType: TreeNodeCollection.Remove(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Remove(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Rimuove l&quot;oggetto specificato <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> dall&quot;oggetto di <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> oggetto."
  remarks: "Utilizzare il metodo Remove per rimuovere il nodo specificato dalla raccolta. Tutti gli elementi successivi al nodo vengono spostati verso l&quot;alto per riempire la posizione rimasta vuota. Vengono aggiornati anche gli indici degli elementi spostati.      > [!NOTE] > Il <xref:System.Web.UI.WebControls.TreeNodeCollection>può contenere riferimenti null (Nothing in Visual Basic), nonché duplicare <xref:System.Web.UI.WebControls.TreeNode>oggetti.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       In alternativa, è possibile rimuovere un nodo in un indice specifico usando il <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>metodo.</xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> È inoltre possibile rimuovere tutti i nodi nella raccolta utilizzando la <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>metodo.</xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>"
  example:
  - "The following example demonstrates how to use the Remove method to programmatically remove a node from the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/f8fda58d-8ad1-430c-83d7-_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/f8fda58d-8ad1-430c-83d7-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.TreeNode value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.TreeNode
      description: "Il <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> oggetto da rimuovere."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TreeNodeCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Rimuove il <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> oggetto in corrispondenza dell&quot;indice specificato da di <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> oggetto."
  remarks: "Utilizzare il metodo RemoveAt per rimuovere l&quot; <xref:System.Web.UI.WebControls.TreeNode>oggetto in corrispondenza della posizione di indice in base zero specificata da un <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> Tutti gli elementi successivi al nodo vengono spostati verso l&quot;alto per riempire la posizione rimasta vuota. Vengono aggiornati anche gli indici degli elementi spostati.      > [!NOTE] > Il <xref:System.Web.UI.WebControls.TreeNodeCollection>può contenere riferimenti null (Nothing in Visual Basic), nonché duplicare <xref:System.Web.UI.WebControls.TreeNode>oggetti.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       In alternativa, è possibile rimuovere uno specifico <xref:System.Web.UI.WebControls.TreeNode>oggetto utilizzando il <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>metodo.</xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> </xref:System.Web.UI.WebControls.TreeNode> È inoltre possibile rimuovere tutti i nodi nella raccolta utilizzando la <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>metodo.</xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>"
  example:
  - "The following example demonstrates how to use the RemoveAt method to programmatically remove a node from the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_37_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_37_1.aspx)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Posizione di indice in base zero del nodo da rimuovere."
  overload: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: TreeNodeCollection.SyncRoot
  fullName: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un oggetto che può essere utilizzato per sincronizzare l&quot;accesso al <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> oggetto."
  remarks: "La proprietà SyncRoot fornisce una versione sincronizzata del <xref:System.Web.UI.WebControls.TreeNodeCollection>che può essere utilizzato con codice di sincronizzazione (threading).</xref:System.Web.UI.WebControls.TreeNodeCollection>      > [!CAUTION] > Il <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A>della proprietà di questa classe sempre restituisce `false`, che indica che la <xref:System.Web.UI.WebControls.TreeNodeCollection>classe non è sincronizzata (non thread-safe).</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A>       Codice di sincronizzazione è necessario eseguire operazioni sull&quot;oggetto radice di sincronizzazione del <xref:System.Web.UI.WebControls.TreeNodeCollection>, non direttamente sul <xref:System.Web.UI.WebControls.TreeNodeCollection>stesso.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNodeCollection> In questo modo si garantisce il corretto funzionamento delle raccolte derivate da altri oggetti. In particolare, viene mantenuta la sincronizzazione con altri thread che potrebbero modificare contemporaneamente il <xref:System.Web.UI.WebControls.TreeNodeCollection>oggetto.</xref:System.Web.UI.WebControls.TreeNodeCollection>      > [!NOTE] > L&quot;oggetto restituito in questa implementazione è il <xref:System.Collections.ArrayList?displayProperty=fullName>oggetto utilizzato per archiviare il <xref:System.Web.UI.WebControls.TreeNode>oggetti nella raccolta.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Collections.ArrayList?displayProperty=fullName>       L&quot;enumerazione di una raccolta non è quindi una procedura thread-safe. Anche se una raccolta è sincronizzata, altri thread può comunque modificare la raccolta, che determina l&quot;enumeratore generare un&quot;eccezione. Per garantire la protezione dei thread durante l&quot;enumerazione, bloccare la raccolta per l&quot;intera enumerazione oppure intercettare le eccezioni determinate dalle modifiche apportate da altri thread.       Per ulteriori informazioni sul <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>proprietà, vedere il <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>proprietà del <xref:System.Collections.ICollection?displayProperty=fullName>interfaccia.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Oggetto &lt;xref:System.Object?displayProperty=fullName&gt; che può essere utilizzato per sincronizzare l&quot;accesso per il <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copia tutti gli elementi di <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> oggetto in una matrice unidimensionale compatibile &lt;xref:System.Array?displayProperty=fullName&gt;, a partire dall&quot;indice specificato nella matrice di destinazione."
  remarks: "Utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>metodo per copiare il contenuto del <xref:System.Web.UI.WebControls.TreeNodeCollection>nell&quot;oggetto specificato in base zero <xref:System.Array?displayProperty=fullName>oggetto.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> Gli elementi vengono copiati a partire dall&quot;indice specificato della matrice di destinazione. Con l&quot; <xref:System.Array?displayProperty=fullName>oggetto, è quindi possibile utilizzare la sintassi della matrice per accedere alle voci in <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Array?displayProperty=fullName>       In alternativa, è inoltre possibile utilizzare il <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>metodo per creare un enumeratore che può essere utilizzato per accedere agli elementi nella raccolta.</xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>"
  example:
  - "The following example demonstrates how to use the <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> method to copy the values of a <xref:System.Web.UI.WebControls.TreeNodeCollection> into an array. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionCopyTo#1](~/add/codesnippet/csharp/58422549-a31a-41f3-a6a6-_1.aspx)]\n [!code-vb[TreeNodeCollectionCopyTo#1](~/add/codesnippet/visualbasic/58422549-a31a-41f3-a6a6-_1.aspx)]"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "In base zero &lt;xref:System.Array?displayProperty=fullName&gt; oggetto che riceve gli elementi copiati dal <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "Posizione nella matrice di destinazione in corrispondenza del quale iniziare a ricevere il contenuto copiato."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>non è una matrice di <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> oggetti."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> oggetto Salva le modifiche apportate allo stato di visualizzazione."
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo è contrassegnato per il salvataggio dello stato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Carica il <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> precedentemente vi è salvato lo stato di visualizzazione dell&quot;oggetto."
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Oggetto &lt;xref:System.Object?displayProperty=fullName&gt; che contiene i valori dello stato di visualizzazione salvato."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Salva le modifiche apportate allo stato di visualizzazione in un &lt;xref:System.Object?displayProperty=fullName&gt;."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Il &lt;xref:System.Object?displayProperty=fullName&gt; che contiene le modifiche dello stato di visualizzazione."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Indica il <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> per rilevare le modifiche allo stato di visualizzazione."
  remarks: "Dopo la chiamata a questo metodo su un controllo server, il <xref:System.Web.UI.Control.IsTrackingViewState%2A>restituirà `true`.</xref:System.Web.UI.Control.IsTrackingViewState%2A>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: TreeNodeCollection()
  nameWithType: TreeNodeCollection.TreeNodeCollection()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection()
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: TreeNodeCollection(TreeNode)
  nameWithType: TreeNodeCollection.TreeNodeCollection(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection(TreeNode)
- uid: System.Web.UI.WebControls.TreeNode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode
- uid: System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Add(TreeNode)
  nameWithType: TreeNodeCollection.Add(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Add(TreeNode)
- uid: System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: AddAt(Int32,TreeNode)
  nameWithType: TreeNodeCollection.AddAt(Int32,TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.AddAt(Int32,TreeNode)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeNodeCollection.Clear
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Clear()
  nameWithType: TreeNodeCollection.Clear()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Clear()
- uid: System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Contains(TreeNode)
  nameWithType: TreeNodeCollection.Contains(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Contains(TreeNode)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: CopyTo(TreeNode[],Int32)
  nameWithType: TreeNodeCollection.CopyTo(TreeNode[],Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(TreeNode[],Int32)
- uid: System.Web.UI.WebControls.TreeNode[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.TreeNode
    name: TreeNode
    nameWithType: TreeNode
    fullName: TreeNode[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.TreeNodeCollection.Count
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Count
  nameWithType: TreeNodeCollection.Count
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Count
- uid: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TreeNodeCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IndexOf(TreeNode)
  nameWithType: TreeNodeCollection.IndexOf(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(TreeNode)
- uid: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TreeNodeCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
- uid: System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TreeNodeCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Item(Int32)
- uid: System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Remove(TreeNode)
  nameWithType: TreeNodeCollection.Remove(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Remove(TreeNode)
- uid: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TreeNodeCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TreeNodeCollection.SyncRoot
  fullName: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection.TreeNodeCollection
- uid: System.Web.UI.WebControls.TreeNodeCollection.Add*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Add
  nameWithType: TreeNodeCollection.Add
- uid: System.Web.UI.WebControls.TreeNodeCollection.AddAt*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: AddAt
  nameWithType: TreeNodeCollection.AddAt
- uid: System.Web.UI.WebControls.TreeNodeCollection.Clear*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Clear
  nameWithType: TreeNodeCollection.Clear
- uid: System.Web.UI.WebControls.TreeNodeCollection.Contains*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Contains
  nameWithType: TreeNodeCollection.Contains
- uid: System.Web.UI.WebControls.TreeNodeCollection.CopyTo*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: CopyTo
  nameWithType: TreeNodeCollection.CopyTo
- uid: System.Web.UI.WebControls.TreeNodeCollection.Count*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Count
  nameWithType: TreeNodeCollection.Count
- uid: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TreeNodeCollection.GetEnumerator
- uid: System.Web.UI.WebControls.TreeNodeCollection.IndexOf*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IndexOf
  nameWithType: TreeNodeCollection.IndexOf
- uid: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TreeNodeCollection.IsSynchronized
- uid: System.Web.UI.WebControls.TreeNodeCollection.Item*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Item
  nameWithType: TreeNodeCollection.Item
- uid: System.Web.UI.WebControls.TreeNodeCollection.Remove*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Remove
  nameWithType: TreeNodeCollection.Remove
- uid: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TreeNodeCollection.RemoveAt
- uid: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TreeNodeCollection.SyncRoot
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: TreeNodeCollection.System.Collections.ICollection.CopyTo
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState
