### YamlMime:ManagedReference
items:
- uid: System.AddIn.Hosting.AddInEnvironment
  id: AddInEnvironment
  children:
  - System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)
  - System.AddIn.Hosting.AddInEnvironment.Process
  langs:
  - csharp
  name: AddInEnvironment
  nameWithType: AddInEnvironment
  fullName: System.AddIn.Hosting.AddInEnvironment
  type: Class
  summary: "Fornisce l&quot;accesso al dominio di applicazione e processo di un componente aggiuntivo."
  remarks: "Utilizzare questa classe per caricare componenti aggiuntivi in un ambiente desiderato, che può essere uno dei seguenti:-un dominio di applicazione esistente per cui si dispone di <xref:System.AppDomain>oggetto.</xref:System.AppDomain>      -Un dominio applicazione che è stato generato automaticamente per attivare un componente aggiuntivo.      -Un processo esterno esistente.       Per ottenere l&quot;oggetto AddInEnvironment per un componente aggiuntivo, passare il relativo dominio applicazione al costruttore della classe AddInEnvironment. In alternativa, è possibile utilizzare il <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>proprietà la <xref:System.AddIn.Hosting.AddInController>classe per ottenere oggetto AddInEnvironment del componente aggiuntivo.</xref:System.AddIn.Hosting.AddInController> </xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>       Dopo aver ottenuto l&quot;oggetto AddInEnvironment, è possibile eseguire le operazioni seguenti:-passare tale oggetto AddInEnvironment appropriati <xref:System.AddIn.Hosting.AddInToken.Activate%2A>overload del metodo.</xref:System.AddIn.Hosting.AddInToken.Activate%2A> Il componente aggiuntivo verrà attivato nel dominio applicazione e nel processo rappresentato dall&quot;oggetto AddInEnvironment.      -Utilizzare il <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A>proprietà per ottenere un <xref:System.AddIn.Hosting.AddInProcess>oggetto.</xref:System.AddIn.Hosting.AddInProcess> </xref:System.AddIn.Hosting.AddInEnvironment.Process%2A> Quindi passare tale oggetto appropriati <xref:System.AddIn.Hosting.AddInToken.Activate%2A>overload del metodo.</xref:System.AddIn.Hosting.AddInToken.Activate%2A> Il componente aggiuntivo verrà attivato il processo che è rappresentato dal <xref:System.AddIn.Hosting.AddInProcess>oggetto ma in un nuovo dominio applicazione.</xref:System.AddIn.Hosting.AddInProcess>"
  syntax:
    content: public sealed class AddInEnvironment
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)
  id: '#ctor(System.AppDomain)'
  parent: System.AddIn.Hosting.AddInEnvironment
  langs:
  - csharp
  name: AddInEnvironment(AppDomain)
  nameWithType: AddInEnvironment.AddInEnvironment(AppDomain)
  fullName: System.AddIn.Hosting.AddInEnvironment.AddInEnvironment(AppDomain)
  type: Constructor
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.AddIn.Hosting.AddInEnvironment&quot;> </xref> classe."
  remarks: "Se si ha accesso al dominio applicazione che contiene il componente aggiuntivo è necessario, è possibile utilizzare questo costruttore per ottenere il componente aggiuntivo <xref:System.AddIn.Hosting.AddInEnvironment>oggetto.</xref:System.AddIn.Hosting.AddInEnvironment> In caso contrario, è possibile utilizzare il <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>proprietà la <xref:System.AddIn.Hosting.AddInController>classe per ottenere il <xref:System.AddIn.Hosting.AddInEnvironment>oggetto.</xref:System.AddIn.Hosting.AddInEnvironment> </xref:System.AddIn.Hosting.AddInController> </xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>"
  syntax:
    content: public AddInEnvironment (AppDomain appDomain);
    parameters:
    - id: appDomain
      type: System.AppDomain
      description: "Il dominio applicazione che contiene il componente aggiuntivo."
  overload: System.AddIn.Hosting.AddInEnvironment.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>appDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "È richiesta l&quot;autorizzazione di attendibilità. Un chiamante nella catena di chiamate non dispone delle autorizzazioni necessarie."
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInEnvironment.Process
  id: Process
  parent: System.AddIn.Hosting.AddInEnvironment
  langs:
  - csharp
  name: Process
  nameWithType: AddInEnvironment.Process
  fullName: System.AddIn.Hosting.AddInEnvironment.Process
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Ottiene il <xref href=&quot;System.AddIn.Hosting.AddInProcess&quot;> </xref> oggetto che rappresenta il processo in cui viene eseguito il componente aggiuntivo."
  remarks: "Per attivare più componenti aggiuntivi nello stesso processo, ma in domini diversi, è possibile utilizzare questa proprietà.       Passare il <xref:System.AddIn.Hosting.AddInProcess>oggetto ottenuto con questa proprietà appropriati <xref:System.AddIn.Hosting.AddInToken.Activate%2A>overload del metodo.</xref:System.AddIn.Hosting.AddInToken.Activate%2A> </xref:System.AddIn.Hosting.AddInProcess>       Se vuoi attivarli nello stesso dominio in un processo esterno è necessario passare il <xref:System.AddIn.Hosting.AddInEnvironment>direttamente all&quot;oggetto di <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName>overload del metodo.</xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInEnvironment%29?displayProperty=fullName> </xref:System.AddIn.Hosting.AddInEnvironment>"
  syntax:
    content: public System.AddIn.Hosting.AddInProcess Process { get; }
    return:
      type: System.AddIn.Hosting.AddInProcess
      description: "Il processo in cui il componente aggiuntivo è in esecuzione."
  overload: System.AddIn.Hosting.AddInEnvironment.Process*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.AddIn.Hosting.AddInEnvironment.#ctor(System.AppDomain)
  parent: System.AddIn.Hosting.AddInEnvironment
  isExternal: false
  name: AddInEnvironment(AppDomain)
  nameWithType: AddInEnvironment.AddInEnvironment(AppDomain)
  fullName: System.AddIn.Hosting.AddInEnvironment.AddInEnvironment(AppDomain)
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.AddIn.Hosting.AddInEnvironment.Process
  parent: System.AddIn.Hosting.AddInEnvironment
  isExternal: false
  name: Process
  nameWithType: AddInEnvironment.Process
  fullName: System.AddIn.Hosting.AddInEnvironment.Process
- uid: System.AddIn.Hosting.AddInProcess
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInProcess
  nameWithType: AddInProcess
  fullName: System.AddIn.Hosting.AddInProcess
- uid: System.AddIn.Hosting.AddInEnvironment.#ctor*
  parent: System.AddIn.Hosting.AddInEnvironment
  isExternal: false
  name: AddInEnvironment
  nameWithType: AddInEnvironment.AddInEnvironment
- uid: System.AddIn.Hosting.AddInEnvironment.Process*
  parent: System.AddIn.Hosting.AddInEnvironment
  isExternal: false
  name: Process
  nameWithType: AddInEnvironment.Process
