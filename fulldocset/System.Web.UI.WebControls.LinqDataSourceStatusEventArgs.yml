### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  id: LinqDataSourceStatusEventArgs
  children:
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
  - System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
  langs:
  - csharp
  name: LinqDataSourceStatusEventArgs
  nameWithType: LinqDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.ContextCreated&quot;></xref>, <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Deleted&quot;></xref>, <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Inserted&quot;></xref>, <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Selected&quot;></xref>, and <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.Updated&quot;></xref> events."
  remarks: "La classe LinqDataSourceStatusEventArgs consente di esaminare i risultati delle operazioni di dati che sono state eseguite da un <xref:System.Web.UI.WebControls.LinqDataSource>controllo.</xref:System.Web.UI.WebControls.LinqDataSource> Un oggetto LinqDataSourceStatusEventArgs viene passato ai gestori eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, e <xref:System.Web.UI.WebControls.LinqDataSource.Updated>gli eventi del <xref:System.Web.UI.WebControls.LinqDataSource>controllo.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.Updated> </xref:System.Web.UI.WebControls.LinqDataSource.Selected> </xref:System.Web.UI.WebControls.LinqDataSource.Inserted> </xref:System.Web.UI.WebControls.LinqDataSource.Deleted> </xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>       Se l&quot;operazione di dati è stata completata, l&quot;oggetto dati risultante viene archiviato nel <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>proprietà e <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>proprietà `null`.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> Se l&quot;operazione di dati non è riuscita, l&quot;eccezione che si sono verificati durante l&quot;operazione dati viene archiviata nella <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>proprietà e <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>proprietà `null`.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> Se è stata gestita l&quot;eccezione rappresentata dal <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>impostata, il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>proprietà `true` in modo che l&quot;eccezione non viene generata.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> </xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>       Per recuperare il numero totale di record di dati restituito da una query tramite il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>proprietà.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>"
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event. In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property. The product ID is a primary key for the table and is set by the database, therefore the value is not known until the insert operation has finished. The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`. The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_259_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_259_1.aspx)]"
  syntax:
    content: 'public class LinqDataSourceStatusEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)
  id: '#ctor(System.Exception)'
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: LinqDataSourceStatusEventArgs(Exception)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Exception)
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Exception)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&quot;> </xref> classe con un&quot;eccezione che si è verificato a seguito dell&quot;operazione di dati."
  remarks: "Questo costruttore viene utilizzato quando viene generata un&quot;eccezione durante l&quot;operazione. Il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>proprietà viene impostata automaticamente su `null`.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>"
  syntax:
    content: public LinqDataSourceStatusEventArgs (Exception exception);
    parameters:
    - id: exception
      type: System.Exception
      description: "Errore verificatosi durante l&quot;operazione."
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: LinqDataSourceStatusEventArgs(Object)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&quot;> </xref> classe utilizzando un oggetto che contiene i dati dall&quot;operazione dei dati."
  remarks: "Questo costruttore viene utilizzato quando l&quot;operazione di dati è stata completata senza errori. Il `result` parametro contiene un oggetto che rappresenta il risultato dell&quot;operazione sui dati. Il <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>proprietà viene impostata automaticamente su `null`.</xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>"
  syntax:
    content: public LinqDataSourceStatusEventArgs (object result);
    parameters:
    - id: result
      type: System.Object
      description: "Oggetto che contiene i dati da un&quot;operazione di dati."
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)
  id: '#ctor(System.Object,System.Int32)'
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: LinqDataSourceStatusEventArgs(Object,Int32)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object,Int32)
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object,Int32)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&quot;> </xref> classe con un oggetto che contiene i dati dell&quot;operazione su dati e il numero di righe restituite."
  syntax:
    content: public LinqDataSourceStatusEventArgs (object result, int totalRowCount);
    parameters:
    - id: result
      type: System.Object
      description: "Oggetto che contiene i dati da un&quot;operazione di dati."
    - id: totalRowCount
      type: System.Int32
      description: "Il numero di righe restituite da un&quot;operazione di recupero di dati."
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: LinqDataSourceStatusEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Ottiene l&quot;eccezione generata durante l&quot;operazione di dati."
  remarks: "Se viene generata un&quot;eccezione durante l&quot;operazione, l&quot;eccezione viene archiviata nella proprietà dell&quot;eccezione. È possibile creare gestori eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, e <xref:System.Web.UI.WebControls.LinqDataSource.Updated>eventi e recuperare l&quot;eccezione, se presente, tramite la proprietà Exception.</xref:System.Web.UI.WebControls.LinqDataSource.Updated> </xref:System.Web.UI.WebControls.LinqDataSource.Selected> </xref:System.Web.UI.WebControls.LinqDataSource.Inserted> </xref:System.Web.UI.WebControls.LinqDataSource.Deleted> </xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>"
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event. In the event handler, if the Exception property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property. The product ID is a primary key for the table and is set by the database, so the value is not known until the insert operation has finished. The exception message is logged if the Exception property is not equal to `null`. The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_503_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_503_1.aspx)]"
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "Un <xref:System.Exception>oggetto che rappresenta l&quot;eccezione, se si è verificato un errore; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Exception>"
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: LinqDataSourceStatusEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se è stata gestita l&quot;eccezione e che non deve essere generata nuovamente."
  remarks: "È possibile creare gestori eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, e <xref:System.Web.UI.WebControls.LinqDataSource.Updated>gli eventi per esaminare tutte le eccezioni che si sono verificati durante tali operazioni.</xref:System.Web.UI.WebControls.LinqDataSource.Updated> </xref:System.Web.UI.WebControls.LinqDataSource.Selected> </xref:System.Web.UI.WebControls.LinqDataSource.Inserted> </xref:System.Web.UI.WebControls.LinqDataSource.Deleted> </xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> Se si gestisce l&quot;eccezione e non si desidera che venga generata nuovamente, impostare la proprietà ExceptionHandled `true`. Se non si imposta la proprietà ExceptionHandled `true`, l&quot;eccezione verrà propagata al gestore dell&quot;evento successivo nello stack di chiamate."
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event. In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property. The product ID is a primary key for the table and is set by the database, therefore the value is not known until the insert operation has finished. The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`. The ExceptionHandled property is then set to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_702_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_702_1.aspx)]"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;eccezione è stata gestita; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
  id: Result
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: Result
  nameWithType: LinqDataSourceStatusEventArgs.Result
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Ottiene l&quot;oggetto che rappresenta il risultato di un&quot;operazione di dati."
  remarks: "Utilizzare la proprietà del risultato per esaminare i valori restituiti da un&quot;operazione di dati. È possibile recuperare i parametri di output da un&quot;operazione di dati o modificare i valori restituiti da una query.       I dati archiviati nella proprietà Result dipendono dal tipo di operazione sui dati che è stata eseguita. Quando si eliminano dati, la proprietà del risultato contiene un oggetto del tipo specificato nella <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>proprietà, con i valori originali sono stati eliminati dall&quot;origine dati.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> Quando si inserisce o aggiorna i dati, la proprietà del risultato contiene un oggetto del tipo specificato nella <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>proprietà, con i nuovi valori che sono state salvate nell&quot;origine dati.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> Quando si selezionano dati, la proprietà del risultato contiene i risultati della query.       Se la query select implica il raggruppamento dei dati o la selezione di un subset delle proprietà del tipo specificato nella <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>proprietà, la proprietà del risultato contiene un oggetto di un tipo creato dinamicamente.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> In caso contrario, la proprietà del risultato contiene un oggetto del tipo specificato nella <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>proprietà.</xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>"
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event. In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the Result property. The product ID is a primary key for the table and is set by the database, therefore the value is not known until the insert operation has finished. The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`. The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_302_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_302_1.aspx)]"
  syntax:
    content: public object Result { get; }
    return:
      type: System.Object
      description: "Oggetto che contiene i dati dall&quot;operazione dei dati."
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
  id: TotalRowCount
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  langs:
  - csharp
  name: TotalRowCount
  nameWithType: LinqDataSourceStatusEventArgs.TotalRowCount
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Ottiene il numero totale di righe in un set di dati da un&quot;operazione di recupero dei dati."
  remarks: "La proprietà TotalRowCount per ottenere il numero di record nel set di dati durante un&quot;operazione di recupero di dati. Questa proprietà si recupera in genere, quando si visualizzano le pagine di dati e per visualizzare il numero totale di record.       Quando il paging dei dati, il valore della proprietà TotalRowCount potrebbe essere diverso dal numero effettivo di righe restituite dalla query. Questo avviene perché la query restituisce solo il numero di righe che sono necessari per la pagina di dati.       La proprietà TotalRowCount contiene il numero di record da una query solo quando vi si accede in un gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.Selected>evento.</xref:System.Web.UI.WebControls.LinqDataSource.Selected> Quando la proprietà si accede da un gestore eventi per il <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, o <xref:System.Web.UI.WebControls.LinqDataSource.Updated>evento, la proprietà TotalRowCount contiene -1.</xref:System.Web.UI.WebControls.LinqDataSource.Updated> </xref:System.Web.UI.WebControls.LinqDataSource.Inserted> </xref:System.Web.UI.WebControls.LinqDataSource.Deleted> </xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>       Il valore della proprietà TotalRowCount dipende il <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>proprietà del <xref:System.Web.UI.WebControls.LinqDataSource>(controllo) e scegliere il `AllowPaging` proprietà del controllo con associazione a dati.</xref:System.Web.UI.WebControls.LinqDataSource> </xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> Nella tabella seguente sono riepilogati i valori possibili per la proprietà TotalRowCount.      | Pagina proprietà del controllo LinqDataSource | Proprietà AllowPaging del controllo associato a dati | Proprietà TotalRowCount | Risultato |   |-------------------------------------------------|-------------------------------------------------|----------------------------|-------------|   | `true`|`true`| Numero di record per una query. | Viene automaticamente eseguito il paging dei dati. |   | `false`|`false`| Numero di record per una query. | Paging dei dati non viene eseguiti. |   | `true`|`false`|-1| Paging dei dati non viene eseguiti. |   | `false`|`true`| Il valore assegnato alla proprietà <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>nell&quot;evento gestore per l&quot;evento <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>. | Paging dei dati sono eseguito in base ai valori specificati durante la personalizzazione di paging. |</xref:System.Web.UI.WebControls.LinqDataSource.Selecting> </xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>"
  example:
  - "The following example shows a Web page with a <xref:System.Web.UI.WebControls.LinqDataSource> control, a <xref:System.Web.UI.WebControls.GridView> control, and a <xref:System.Web.UI.WebControls.Literal> control. The <xref:System.Web.UI.WebControls.LinqDataSource> control defines an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_60_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_60_1.aspx)]  \n  \n The following example shows the code for the event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event. The value of the TotalRowCount property is assigned to the <xref:System.Web.UI.WebControls.Literal> control.  \n  \n [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_60_2.vb)]\n [!code-cs[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_60_2.cs)]"
  syntax:
    content: public int TotalRowCount { get; }
    return:
      type: System.Int32
      description: "Il numero totale di righe in un set di dati dall&quot;operazione di recupero di dati; -1 se il <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&quot;> </xref> oggetto è stato creato durante un&quot;operazione di modifica di dati; -1 se è abilitata la personalizzazione del paging impostando <> </> *> a <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e impostando <> </> *> a <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: LinqDataSourceStatusEventArgs(Exception)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Exception)
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: LinqDataSourceStatusEventArgs(Object)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object)
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: LinqDataSourceStatusEventArgs(Object,Int32)
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object,Int32)
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs(Object,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceStatusEventArgs.Exception
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceStatusEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: Result
  nameWithType: LinqDataSourceStatusEventArgs.Result
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: TotalRowCount
  nameWithType: LinqDataSourceStatusEventArgs.TotalRowCount
  fullName: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: LinqDataSourceStatusEventArgs
  nameWithType: LinqDataSourceStatusEventArgs.LinqDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceStatusEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceStatusEventArgs.ExceptionHandled
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: Result
  nameWithType: LinqDataSourceStatusEventArgs.Result
- uid: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount*
  parent: System.Web.UI.WebControls.LinqDataSourceStatusEventArgs
  isExternal: false
  name: TotalRowCount
  nameWithType: LinqDataSourceStatusEventArgs.TotalRowCount
