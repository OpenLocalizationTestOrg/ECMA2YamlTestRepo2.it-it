### YamlMime:ManagedReference
items:
- uid: System.IO.Log.FileRegion
  id: FileRegion
  children:
  - System.IO.Log.FileRegion.FileLength
  - System.IO.Log.FileRegion.GetStream
  - System.IO.Log.FileRegion.Offset
  - System.IO.Log.FileRegion.Path
  langs:
  - csharp
  name: FileRegion
  nameWithType: FileRegion
  fullName: System.IO.Log.FileRegion
  type: Class
  summary: "Rappresenta una parte di un file da archiviare. Questa classe non può essere ereditata."
  remarks: "Un <xref:System.IO.Log.LogArchiveSnapshot>oggetto contiene le informazioni necessarie per generare un backup coerente dei dati in un <xref:System.IO.Log.LogStore>.</xref:System.IO.Log.LogStore> </xref:System.IO.Log.LogArchiveSnapshot> I dati effettivi sono contenuti nella raccolta enumerabile di oggetti FileRegion restituito dal <xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A>proprietà.</xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A> Ogni istanza FileRegion rappresenta una sequenza di byte in un file che devono essere archiviati."
  example:
  - "The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and FileRegion classes.  \n  \n [!code-vb[FileRegion#0](~/add/codesnippet/visualbasic/t-system.io.log.fileregion_1.vb)]\n [!code-cs[FileRegion#0](~/add/codesnippet/csharp/t-system.io.log.fileregion_1.cs)]"
  syntax:
    content: public sealed class FileRegion
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Log.FileRegion.FileLength
  id: FileLength
  parent: System.IO.Log.FileRegion
  langs:
  - csharp
  name: FileLength
  nameWithType: FileRegion.FileLength
  fullName: System.IO.Log.FileRegion.FileLength
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Ottiene la lunghezza del file in byte."
  remarks: "Questa proprietà restituisce la lunghezza dell&quot;intero file anziché quella di una singola area nel file. La lunghezza dell&quot;area nel file può essere individuata esaminando la <xref:System.IO.Log.LogStore.Length%2A>proprietà del flusso restituito dal <xref:System.IO.Log.FileRegion.GetStream%2A>metodo.</xref:System.IO.Log.FileRegion.GetStream%2A> </xref:System.IO.Log.LogStore.Length%2A>"
  example:
  - "The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.  \n  \n [!code-vb[FileRegion#0](~/add/codesnippet/visualbasic/p-system.io.log.fileregi_0_1.vb)]\n [!code-cs[FileRegion#0](~/add/codesnippet/csharp/p-system.io.log.fileregi_0_1.cs)]"
  syntax:
    content: public long FileLength { get; }
    return:
      type: System.Int64
      description: "La lunghezza del file in byte."
  overload: System.IO.Log.FileRegion.FileLength*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.FileRegion.GetStream
  id: GetStream
  parent: System.IO.Log.FileRegion
  langs:
  - csharp
  name: GetStream()
  nameWithType: FileRegion.GetStream()
  fullName: System.IO.Log.FileRegion.GetStream()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Restituisce un flusso che può essere usato per leggere i dati da archiviare."
  remarks: ''
  example:
  - "The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.  \n  \n [!code-vb[FileRegion#0](~/add/codesnippet/visualbasic/m-system.io.log.fileregi_1.vb)]\n [!code-cs[FileRegion#0](~/add/codesnippet/csharp/m-system.io.log.fileregi_1.cs)]"
  syntax:
    content: public System.IO.Stream GetStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Flusso che contiene i dati da archiviare."
  overload: System.IO.Log.FileRegion.GetStream*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Non è stato possibile eseguire la richiesta a causa di un&quot;eccezione dei / o imprevista."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "L&quot;operazione non è supportata."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il metodo è stato chiamato dopo la sequenza è stata eliminata."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Non è disponibile memoria sufficiente per continuare l&quot;esecuzione del programma."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;accesso per l&quot;archivio dei registri specificato viene negato dal sistema operativo."
  platform:
  - net462
- uid: System.IO.Log.FileRegion.Offset
  id: Offset
  parent: System.IO.Log.FileRegion
  langs:
  - csharp
  name: Offset
  nameWithType: FileRegion.Offset
  fullName: System.IO.Log.FileRegion.Offset
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Ottiene l&quot;offset nel file in cui iniziano i dati."
  remarks: ''
  example:
  - "The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.  \n  \n [!code-vb[FileRegion#0](~/add/codesnippet/visualbasic/p-system.io.log.fileregi_1_1.vb)]\n [!code-cs[FileRegion#0](~/add/codesnippet/csharp/p-system.io.log.fileregi_1_1.cs)]"
  syntax:
    content: public long Offset { get; }
    return:
      type: System.Int64
      description: "Offset nel file in cui iniziano i dati."
  overload: System.IO.Log.FileRegion.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.FileRegion.Path
  id: Path
  parent: System.IO.Log.FileRegion
  langs:
  - csharp
  name: Path
  nameWithType: FileRegion.Path
  fullName: System.IO.Log.FileRegion.Path
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Ottiene il percorso completo del file che contiene questa parte."
  remarks: ''
  example:
  - "The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.  \n  \n [!code-vb[FileRegion#0](~/add/codesnippet/visualbasic/p-system.io.log.fileregi_2_1.vb)]\n [!code-cs[FileRegion#0](~/add/codesnippet/csharp/p-system.io.log.fileregi_2_1.cs)]"
  syntax:
    content: public string Path { get; }
    return:
      type: System.String
      description: "Il percorso completo del file che contiene questa parte."
  overload: System.IO.Log.FileRegion.Path*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.Log.FileRegion.FileLength
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: FileLength
  nameWithType: FileRegion.FileLength
  fullName: System.IO.Log.FileRegion.FileLength
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Log.FileRegion.GetStream
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: GetStream()
  nameWithType: FileRegion.GetStream()
  fullName: System.IO.Log.FileRegion.GetStream()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Log.FileRegion.Offset
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: Offset
  nameWithType: FileRegion.Offset
  fullName: System.IO.Log.FileRegion.Offset
- uid: System.IO.Log.FileRegion.Path
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: Path
  nameWithType: FileRegion.Path
  fullName: System.IO.Log.FileRegion.Path
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Log.FileRegion.FileLength*
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: FileLength
  nameWithType: FileRegion.FileLength
- uid: System.IO.Log.FileRegion.GetStream*
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: GetStream
  nameWithType: FileRegion.GetStream
- uid: System.IO.Log.FileRegion.Offset*
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: Offset
  nameWithType: FileRegion.Offset
- uid: System.IO.Log.FileRegion.Path*
  parent: System.IO.Log.FileRegion
  isExternal: false
  name: Path
  nameWithType: FileRegion.Path
