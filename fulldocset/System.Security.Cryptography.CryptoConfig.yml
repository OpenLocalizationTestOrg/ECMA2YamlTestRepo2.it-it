### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CryptoConfig
  id: CryptoConfig
  children:
  - System.Security.Cryptography.CryptoConfig.#ctor
  - System.Security.Cryptography.CryptoConfig.AddAlgorithm(System.Type,System.String[])
  - System.Security.Cryptography.CryptoConfig.AddOID(System.String,System.String[])
  - System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms
  - System.Security.Cryptography.CryptoConfig.CreateFromName(System.String)
  - System.Security.Cryptography.CryptoConfig.CreateFromName(System.String,System.Object[])
  - System.Security.Cryptography.CryptoConfig.EncodeOID(System.String)
  - System.Security.Cryptography.CryptoConfig.MapNameToOID(System.String)
  langs:
  - csharp
  name: CryptoConfig
  nameWithType: CryptoConfig
  fullName: System.Security.Cryptography.CryptoConfig
  type: Class
  summary: "Consente di accedere alle informazioni sulla configurazione di crittografia."
  remarks: "Nella tabella seguente mostra i nomi semplici riconosciuti da questa classe e le implementazioni di algoritmi predefinito a cui sono associate. In alternativa, Ã¨ possibile associare altre implementazioni di questi nomi, come descritto in [Mapping di nomi di algoritmi a classi di crittografia](~/add/includes/ajax-current-ext-md.md).      | Nome semplice | Implementazione dell&quot;algoritmo |   |-----------------|------------------------------|   |&3;DES, Triple DES, TripleDES System.Security.Cryptography.TripleDES| <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider>|   | AES, System.Security.Cryptography.AesCryptoServiceProvider| <xref:System.Security.Cryptography.AesCryptoServiceProvider>|   | AesManaged, System.Security.Cryptography.AesManaged| <xref:System.Security.Cryptography.AesManaged>|   | System.Security.Cryptography.AsymmetricAlgorithm| <xref:System.Security.Cryptography.RSACryptoServiceProvider>|   | DES, System.Security.Cryptography.DES| <xref:System.Security.Cryptography.DESCryptoServiceProvider>|   | DSA, System.Security.Cryptography.DSA| <xref:System.Security.Cryptography.DSACryptoServiceProvider>|   | ECDH, System.Security.Cryptography.ECDiffieHellmanCng| ECDiffieHellman, ECDiffieHellmanCng, <xref:System.Security.Cryptography.ECDiffieHellmanCng>|   | System.Security.Cryptography.ECDsaCng| ECDsa, ECDsaCng, <xref:System.Security.Cryptography.ECDsaCng>|   | System.Security.Cryptography.HashAlgorithm| <xref:System.Security.Cryptography.SHA1CryptoServiceProvider>|   | HMAC, System.Security.Cryptography.HMAC| <xref:System.Security.Cryptography.HMACSHA1>|   | HMACMD5, System.Security.Cryptography.HMACMD5| <xref:System.Security.Cryptography.HMACMD5>|   | HMACRIPEMD160, System.Security.Cryptography.HMACRIPEMD160| <xref:System.Security.Cryptography.HMACRIPEMD160>|   | HMACSHA1, System.Security.Cryptography.HMACSHA1| <xref:System.Security.Cryptography.HMACSHA1>|   | HMACSHA256, System.Security.Cryptography.HMACSHA256| <xref:System.Security.Cryptography.HMACSHA256>|   | HMACSHA384, System.Security.Cryptography.HMACSHA384| <xref:System.Security.Cryptography.HMACSHA384>|   | HMACSHA512, System.Security.Cryptography.HMACSHA512| <xref:System.Security.Cryptography.HMACSHA512>|   | System.Security.Cryptography.KeyedHashAlgorithm| <xref:System.Security.Cryptography.HMACSHA1>|   | MACTripleDES, System.Security.Cryptography.MACTripleDES| <xref:System.Security.Cryptography.MACTripleDES>|   | MD5, System.Security.Cryptography.MD5| <xref:System.Security.Cryptography.MD5CryptoServiceProvider>|   | System.Security.Cryptography.MD5Cng| <xref:System.Security.Cryptography.MD5Cng>|   | RandomNumberGenerator | <xref:System.Security.Cryptography.RNGCryptoServiceProvider>|   | RC2, System.Security.Cryptography.RC2| <xref:System.Security.Cryptography.RC2CryptoServiceProvider>|   | Rijndael, System.Security.Cryptography.Rijndael| <xref:System.Security.Cryptography.RijndaelManaged>|   | RIPEMD160, RIPEMD-160, System.Security.Cryptography.RIPEMD160Managed| <xref:System.Security.Cryptography.RIPEMD160Managed>|   | RSA, System.Security.Cryptography.RSA| <xref:System.Security.Cryptography.RSACryptoServiceProvider>|   | System.Security.Cryptography.SHA1| SHA, SHA1, <xref:System.Security.Cryptography.SHA1CryptoServiceProvider>|   | System.Security.Cryptography.SHA1Cng| <xref:System.Security.Cryptography.SHA1Cng>|   | SHA256, SHA-256, System.Security.Cryptography.SHA256| <xref:System.Security.Cryptography.SHA256Managed>|   | System.Security.Cryptography.SHA256Cng| <xref:System.Security.Cryptography.SHA256Cng>|   | System.Security.Cryptography.SHA256CryptoServiceProvider| <xref:System.Security.Cryptography.SHA256CryptoServiceProvider>|   | SHA384, SHA-384, System.Security.Cryptography.SHA384| <xref:System.Security.Cryptography.SHA384Managed>|   | System.Security.Cryptography.SHA384Cng| <xref:System.Security.Cryptography.SHA384Cng>|   | System.Security.Cryptography.SHA384CryptoServiceProvider| <xref:System.Security.Cryptography.SHA384CryptoServiceProvider>|   | SHA512, SHA-512, System.Security.Cryptography.SHA512| <xref:System.Security.Cryptography.SHA512Managed>|   | System.Security.Cryptography.SHA512Cng| <xref:System.Security.Cryptography.SHA512Cng>|   | System.Security.Cryptography.SHA512CryptoServiceProvider| <xref:System.Security.Cryptography.SHA512CryptoServiceProvider>|   | System.Security.Cryptography.SymmetricAlgorithm| <xref:System.Security.Cryptography.RijndaelManaged>|</xref:System.Security.Cryptography.RijndaelManaged></xref:System.Security.Cryptography.SHA512CryptoServiceProvider></xref:System.Security.Cryptography.SHA512Cng></xref:System.Security.Cryptography.SHA512Managed></xref:System.Security.Cryptography.SHA384CryptoServiceProvider></xref:System.Security.Cryptography.SHA384Cng></xref:System.Security.Cryptography.SHA384Managed></xref:System.Security.Cryptography.SHA256CryptoServiceProvider></xref:System.Security.Cryptography.SHA256Cng></xref:System.Security.Cryptography.SHA256Managed></xref:System.Security.Cryptography.SHA1Cng></xref:System.Security.Cryptography.SHA1CryptoServiceProvider></xref:System.Security.Cryptography.RSACryptoServiceProvider></xref:System.Security.Cryptography.RIPEMD160Managed></xref:System.Security.Cryptography.RijndaelManaged></xref:System.Security.Cryptography.RC2CryptoServiceProvider></xref:System.Security.Cryptography.RNGCryptoServiceProvider></xref:System.Security.Cryptography.MD5Cng></xref:System.Security.Cryptography.MD5CryptoServiceProvider></xref:System.Security.Cryptography.MACTripleDES></xref:System.Security.Cryptography.HMACSHA1></xref:System.Security.Cryptography.HMACSHA512></xref:System.Security.Cryptography.HMACSHA384></xref:System.Security.Cryptography.HMACSHA256></xref:System.Security.Cryptography.HMACSHA1></xref:System.Security.Cryptography.HMACRIPEMD160></xref:System.Security.Cryptography.HMACMD5></xref:System.Security.Cryptography.HMACSHA1></xref:System.Security.Cryptography.SHA1CryptoServiceProvider></xref:System.Security.Cryptography.ECDsaCng></xref:System.Security.Cryptography.ECDiffieHellmanCng></xref:System.Security.Cryptography.DSACryptoServiceProvider></xref:System.Security.Cryptography.DESCryptoServiceProvider></xref:System.Security.Cryptography.RSACryptoServiceProvider></xref:System.Security.Cryptography.AesManaged></xref:System.Security.Cryptography.AesCryptoServiceProvider></xref:System.Security.Cryptography.TripleDESCryptoServiceProvider>"
  example:
  - "The following code example demonstrates how to use members of the CryptoConfig class.  \n  \n [!code-cs[System.Security.Cryptography.CryptoConfig#1](~/add/codesnippet/csharp/t-system.security.crypto_81_1.cs)]\n [!code-cpp[System.Security.Cryptography.CryptoConfig#1](~/add/codesnippet/cpp/t-system.security.crypto_81_1.cpp)]\n [!code-vb[System.Security.Cryptography.CryptoConfig#1](~/add/codesnippet/visualbasic/t-system.security.crypto_81_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class CryptoConfig
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoConfig.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.CryptoConfig
  langs:
  - csharp
  name: CryptoConfig()
  nameWithType: CryptoConfig.CryptoConfig()
  fullName: System.Security.Cryptography.CryptoConfig.CryptoConfig()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.CryptoConfig&quot;> </xref> classe."
  syntax:
    content: public CryptoConfig ();
    parameters: []
  overload: System.Security.Cryptography.CryptoConfig.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoConfig.AddAlgorithm(System.Type,System.String[])
  id: AddAlgorithm(System.Type,System.String[])
  parent: System.Security.Cryptography.CryptoConfig
  langs:
  - csharp
  name: AddAlgorithm(Type,String[])
  nameWithType: CryptoConfig.AddAlgorithm(Type,String[])
  fullName: System.Security.Cryptography.CryptoConfig.AddAlgorithm(Type,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Aggiunge un set di nomi ai mapping degli algoritmi da utilizzare per il dominio applicazione corrente."
  remarks: "I mapping specificati hanno la precedenza sui mapping predefiniti e i mapping nel file Machine. config. I mapping vengono utilizzati per impedire parzialmente codice parzialmente attendibile tramite operazioni di crittografia attendibili."
  syntax:
    content: public static void AddAlgorithm (Type algorithm, string[] names);
    parameters:
    - id: algorithm
      type: System.Type
      description: "L&quot;algoritmo per eseguire il mapping."
    - id: names
      type: System.String[]
      description: "Una matrice di nomi per eseguire il mapping all&quot;algoritmo."
  overload: System.Security.Cryptography.CryptoConfig.AddAlgorithm*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> algorithm</code> or <code>names</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>algorithm</code>non sono accessibili da all&quot;esterno dell&quot;assembly.       - oppure - una delle voci di <code>names</code> parametro Ã¨ vuoto o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoConfig.AddOID(System.String,System.String[])
  id: AddOID(System.String,System.String[])
  parent: System.Security.Cryptography.CryptoConfig
  langs:
  - csharp
  name: AddOID(String,String[])
  nameWithType: CryptoConfig.AddOID(String,String[])
  fullName: System.Security.Cryptography.CryptoConfig.AddOID(String,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Aggiunge un set di nomi ai mapping (OID) di identificatore di oggetto da utilizzare per il dominio applicazione corrente."
  remarks: "I mapping specificati hanno la precedenza sui mapping predefiniti e i mapping nel file Machine. config. I mapping vengono utilizzati per impedire parzialmente codice parzialmente attendibile tramite operazioni di crittografia attendibili."
  syntax:
    content: public static void AddOID (string oid, string[] names);
    parameters:
    - id: oid
      type: System.String
      description: "L&quot;identificatore di oggetto (OID) per eseguire il mapping."
    - id: names
      type: System.String[]
      description: "Una matrice di nomi per il mapping all&quot;OID."
  overload: System.Security.Cryptography.CryptoConfig.AddOID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> oid</code> or <code>names</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Una delle voci di <code> names </code> parametro Ã¨ vuoto o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms
  id: AllowOnlyFipsAlgorithms
  parent: System.Security.Cryptography.CryptoConfig
  langs:
  - csharp
  name: AllowOnlyFipsAlgorithms
  nameWithType: CryptoConfig.AllowOnlyFipsAlgorithms
  fullName: System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Indica se il runtime deve applicare i criteri per creare solo l&quot;elaborazione Standard FIPS (Federal Information) algoritmi certificati."
  remarks: "Se `false`, qualsiasi algoritmo puÃ² essere creato."
  syntax:
    content: public static bool AllowOnlyFipsAlgorithms { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per applicare i criteri. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoConfig.CreateFromName(System.String)
  id: CreateFromName(System.String)
  parent: System.Security.Cryptography.CryptoConfig
  langs:
  - csharp
  name: CreateFromName(String)
  nameWithType: CryptoConfig.CreateFromName(String)
  fullName: System.Security.Cryptography.CryptoConfig.CreateFromName(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Crea una nuova istanza dell&quot;oggetto di crittografia specificato."
  remarks: "Per un elenco di nomi semplici riconosciuti da questa classe, vedere <xref:System.Security.Cryptography.CryptoConfig>.</xref:System.Security.Cryptography.CryptoConfig>"
  example:
  - "The following code example demonstrates how to call the CreateFromName method to create a new SHA1 provider. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoConfig> class.  \n  \n [!code-cs[System.Security.Cryptography.CryptoConfig#4](~/add/codesnippet/csharp/m-system.security.crypto_75_1.cs)]\n [!code-cpp[System.Security.Cryptography.CryptoConfig#4](~/add/codesnippet/cpp/m-system.security.crypto_75_1.cpp)]\n [!code-vb[System.Security.Cryptography.CryptoConfig#4](~/add/codesnippet/visualbasic/m-system.security.crypto_75_1.vb)]"
  syntax:
    content: public static object CreateFromName (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome semplice dell&quot;oggetto di crittografia di cui creare un&quot;istanza."
    return:
      type: System.Object
      description: "Una nuova istanza dell&quot;oggetto di crittografia specificato."
  overload: System.Security.Cryptography.CryptoConfig.CreateFromName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "L&quot;algoritmo descritto dal <code> name </code> parametro Ã¨ stato usato con abilitata la modalitÃ  di elaborazione agli standard FIPS (Federal Information), ma non Ã¨ compatibile con FIPS."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoConfig.CreateFromName(System.String,System.Object[])
  id: CreateFromName(System.String,System.Object[])
  parent: System.Security.Cryptography.CryptoConfig
  langs:
  - csharp
  name: CreateFromName(String,Object[])
  nameWithType: CryptoConfig.CreateFromName(String,Object[])
  fullName: System.Security.Cryptography.CryptoConfig.CreateFromName(String,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Crea una nuova istanza dell&quot;oggetto di crittografia specificato con gli argomenti specificati."
  remarks: "Per un elenco di nomi semplici riconosciuti da questa classe, vedere <xref:System.Security.Cryptography.CryptoConfig>.</xref:System.Security.Cryptography.CryptoConfig>"
  example:
  - "The following code example demonstrates how to call the CreateFromName method to initialize a new RSA provider instance accessing the `TestContainer` key container. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoConfig> class.  \n  \n [!code-cs[System.Security.Cryptography.CryptoConfig#5](~/add/codesnippet/csharp/e4d60361-8137-4437-9775-_1.cs)]\n [!code-cpp[System.Security.Cryptography.CryptoConfig#5](~/add/codesnippet/cpp/e4d60361-8137-4437-9775-_1.cpp)]\n [!code-vb[System.Security.Cryptography.CryptoConfig#5](~/add/codesnippet/visualbasic/e4d60361-8137-4437-9775-_1.vb)]"
  syntax:
    content: public static object CreateFromName (string name, object[] args);
    parameters:
    - id: name
      type: System.String
      description: "Il nome semplice dell&quot;oggetto di crittografia di cui creare un&quot;istanza."
    - id: args
      type: System.Object[]
      description: "Gli argomenti utilizzati per creare l&quot;oggetto di crittografia specificato."
    return:
      type: System.Object
      description: "Una nuova istanza dell&quot;oggetto di crittografia specificato."
  overload: System.Security.Cryptography.CryptoConfig.CreateFromName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "L&quot;algoritmo descritto dal <code> name </code> parametro Ã¨ stato usato con abilitata la modalitÃ  di elaborazione agli standard FIPS (Federal Information), ma non Ã¨ compatibile con FIPS."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoConfig.EncodeOID(System.String)
  id: EncodeOID(System.String)
  parent: System.Security.Cryptography.CryptoConfig
  langs:
  - csharp
  name: EncodeOID(String)
  nameWithType: CryptoConfig.EncodeOID(String)
  fullName: System.Security.Cryptography.CryptoConfig.EncodeOID(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Codifica l&quot;identificatore di oggetto (OID)."
  remarks: ''
  example:
  - "The following code example demonstrates how to call the EncodeOID method to encode the specified object identifier. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoConfig> class.  \n  \n [!code-cs[System.Security.Cryptography.CryptoConfig#6](~/add/codesnippet/csharp/m-system.security.crypto_22_1.cs)]\n [!code-cpp[System.Security.Cryptography.CryptoConfig#6](~/add/codesnippet/cpp/m-system.security.crypto_22_1.cpp)]\n [!code-vb[System.Security.Cryptography.CryptoConfig#6](~/add/codesnippet/visualbasic/m-system.security.crypto_22_1.vb)]"
  syntax:
    content: public static byte[] EncodeOID (string str);
    parameters:
    - id: str
      type: System.String
      description: "OID da codificare."
    return:
      type: System.Byte[]
      description: "Matrice di byte che contiene l&quot;OID codificato."
  overload: System.Security.Cryptography.CryptoConfig.EncodeOID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>str</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: "Si Ã¨ verificato un errore durante la codifica l&quot;identificatore di oggetto."
  platform:
  - net462
- uid: System.Security.Cryptography.CryptoConfig.MapNameToOID(System.String)
  id: MapNameToOID(System.String)
  parent: System.Security.Cryptography.CryptoConfig
  langs:
  - csharp
  name: MapNameToOID(String)
  nameWithType: CryptoConfig.MapNameToOID(String)
  fullName: System.Security.Cryptography.CryptoConfig.MapNameToOID(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene l&quot;identificatore di oggetto (OID) dell&quot;algoritmo corrispondente al nome semplice specificato."
  remarks: "Per un elenco di nomi semplici riconosciuti da questa classe, vedere <xref:System.Security.Cryptography.CryptoConfig>.</xref:System.Security.Cryptography.CryptoConfig>"
  example:
  - "The following code example demonstrates how to call the MapNameToOID method to retrieve an object identifier (OID) from the string name of the SHA1 algorithm. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.CryptoConfig> class.  \n  \n [!code-cs[System.Security.Cryptography.CryptoConfig#3](~/add/codesnippet/csharp/m-system.security.crypto_80_1.cs)]\n [!code-cpp[System.Security.Cryptography.CryptoConfig#3](~/add/codesnippet/cpp/m-system.security.crypto_80_1.cpp)]\n [!code-vb[System.Security.Cryptography.CryptoConfig#3](~/add/codesnippet/visualbasic/m-system.security.crypto_80_1.vb)]"
  syntax:
    content: public static string MapNameToOID (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome semplice dell&quot;algoritmo per il quale ottenere l&quot;OID."
    return:
      type: System.String
      description: "L&quot;OID dell&quot;algoritmo specificato."
  overload: System.Security.Cryptography.CryptoConfig.MapNameToOID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Reflection.TargetInvocationException
  isExternal: true
  name: System.Reflection.TargetInvocationException
- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicUnexpectedOperationException
  nameWithType: CryptographicUnexpectedOperationException
  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException
- uid: System.Security.Cryptography.CryptoConfig.#ctor
  parent: System.Security.Cryptography.CryptoConfig
  isExternal: false
  name: CryptoConfig()
  nameWithType: CryptoConfig.CryptoConfig()
  fullName: System.Security.Cryptography.CryptoConfig.CryptoConfig()
- uid: System.Security.Cryptography.CryptoConfig.AddAlgorithm(System.Type,System.String[])
  parent: System.Security.Cryptography.CryptoConfig
  isExternal: false
  name: AddAlgorithm(Type,String[])
  nameWithType: CryptoConfig.AddAlgorithm(Type,String[])
  fullName: System.Security.Cryptography.CryptoConfig.AddAlgorithm(Type,String[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.CryptoConfig.AddOID(System.String,System.String[])
  parent: System.Security.Cryptography.CryptoConfig
  isExternal: false
  name: AddOID(String,String[])
  nameWithType: CryptoConfig.AddOID(String,String[])
  fullName: System.Security.Cryptography.CryptoConfig.AddOID(String,String[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms
  parent: System.Security.Cryptography.CryptoConfig
  isExternal: false
  name: AllowOnlyFipsAlgorithms
  nameWithType: CryptoConfig.AllowOnlyFipsAlgorithms
  fullName: System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CryptoConfig.CreateFromName(System.String)
  parent: System.Security.Cryptography.CryptoConfig
  isExternal: false
  name: CreateFromName(String)
  nameWithType: CryptoConfig.CreateFromName(String)
  fullName: System.Security.Cryptography.CryptoConfig.CreateFromName(String)
- uid: System.Security.Cryptography.CryptoConfig.CreateFromName(System.String,System.Object[])
  parent: System.Security.Cryptography.CryptoConfig
  isExternal: false
  name: CreateFromName(String,Object[])
  nameWithType: CryptoConfig.CreateFromName(String,Object[])
  fullName: System.Security.Cryptography.CryptoConfig.CreateFromName(String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.CryptoConfig.EncodeOID(System.String)
  parent: System.Security.Cryptography.CryptoConfig
  isExternal: false
  name: EncodeOID(String)
  nameWithType: CryptoConfig.EncodeOID(String)
  fullName: System.Security.Cryptography.CryptoConfig.EncodeOID(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.CryptoConfig.MapNameToOID(System.String)
  parent: System.Security.Cryptography.CryptoConfig
  isExternal: false
  name: MapNameToOID(String)
  nameWithType: CryptoConfig.MapNameToOID(String)
  fullName: System.Security.Cryptography.CryptoConfig.MapNameToOID(String)
- uid: System.Security.Cryptography.CryptoConfig.#ctor*
  parent: System.Security.Cryptography.CryptoConfig
  isExternal: false
  name: CryptoConfig
  nameWithType: CryptoConfig.CryptoConfig
- uid: System.Security.Cryptography.CryptoConfig.AddAlgorithm*
  parent: System.Security.Cryptography.CryptoConfig
  isExternal: false
  name: AddAlgorithm
  nameWithType: CryptoConfig.AddAlgorithm
- uid: System.Security.Cryptography.CryptoConfig.AddOID*
  parent: System.Security.Cryptography.CryptoConfig
  isExternal: false
  name: AddOID
  nameWithType: CryptoConfig.AddOID
- uid: System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms*
  parent: System.Security.Cryptography.CryptoConfig
  isExternal: false
  name: AllowOnlyFipsAlgorithms
  nameWithType: CryptoConfig.AllowOnlyFipsAlgorithms
- uid: System.Security.Cryptography.CryptoConfig.CreateFromName*
  parent: System.Security.Cryptography.CryptoConfig
  isExternal: false
  name: CreateFromName
  nameWithType: CryptoConfig.CreateFromName
- uid: System.Security.Cryptography.CryptoConfig.EncodeOID*
  parent: System.Security.Cryptography.CryptoConfig
  isExternal: false
  name: EncodeOID
  nameWithType: CryptoConfig.EncodeOID
- uid: System.Security.Cryptography.CryptoConfig.MapNameToOID*
  parent: System.Security.Cryptography.CryptoConfig
  isExternal: false
  name: MapNameToOID
  nameWithType: CryptoConfig.MapNameToOID
