### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CspParameters
  id: CspParameters
  children:
  - System.Security.Cryptography.CspParameters.#ctor
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32)
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)
  - System.Security.Cryptography.CspParameters.CryptoKeySecurity
  - System.Security.Cryptography.CspParameters.Flags
  - System.Security.Cryptography.CspParameters.KeyContainerName
  - System.Security.Cryptography.CspParameters.KeyNumber
  - System.Security.Cryptography.CspParameters.KeyPassword
  - System.Security.Cryptography.CspParameters.ParentWindowHandle
  - System.Security.Cryptography.CspParameters.ProviderName
  - System.Security.Cryptography.CspParameters.ProviderType
  langs:
  - csharp
  name: CspParameters
  nameWithType: CspParameters
  fullName: System.Security.Cryptography.CspParameters
  type: Class
  summary: "Contiene i parametri passati al provider del servizio di crittografia (CSP) che esegue i calcoli di crittografia. Questa classe non può essere ereditata."
  remarks: "La classe CspParameters rappresenta i parametri che è possibile passare alle classi di crittografia gestita che utilizzano internamente Microsoft servizio provider di crittografia (CSP) da API Cryptography di Microsoft (CAPI) non gestita. Le classi con nomi che terminano con &quot;CryptoServiceProvider&quot; sono wrapper di codice gestito per il CSP corrispondente.       Utilizzare la classe CspParameters per eseguire le operazioni seguenti:-specificare un particolare CSP passando il tipo di provider per il <xref:System.Security.Cryptography.CspParameters.ProviderType>o <xref:System.Security.Cryptography.CspParameters.ProviderName>proprietà.</xref:System.Security.Cryptography.CspParameters.ProviderName> </xref:System.Security.Cryptography.CspParameters.ProviderType>  È inoltre possibile specificare un provider CSP utilizzando un overload del costruttore.      -Creare un contenitore di chiavi in cui è possibile archiviare le chiavi di crittografia.  Contenitori di chiavi consentono il modo più sicuro per mantenere le chiavi crittografiche e mantenerli segreto da terze parti non autorizzate.  Per ulteriori informazioni sulla creazione di contenitori di chiavi, vedere [procedura: archiviare chiavi asimmetriche in un contenitore di chiavi](~/add/includes/ajax-current-ext-md.md).      -Specificare se creare una chiave di firma asimmetrica o una chiave di scambio asimmetrica utilizzando il <xref:System.Security.Cryptography.CspParameters.KeyNumber>proprietà.</xref:System.Security.Cryptography.CspParameters.KeyNumber>"
  example:
  - "The following code example creates a key container using the CspParameters class and saves the key in the container.  \n  \n [!code-cpp[capikey#1](~/add/codesnippet/cpp/t-system.security.crypto_47_1.cpp)]\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_47_1.vb)]\n [!code-cs[capikey#1](~/add/codesnippet/csharp/t-system.security.crypto_47_1.cs)]  \n  \n The following code example uses the CspParameters class to select a Smart Card Cryptographic Service Provider.  It then signs and verifies data using the smart card.  \n  \n [!code-cs[Cryptography.SmartCardCSP#1](~/add/codesnippet/csharp/t-system.security.crypto_47_2.cs)]\n [!code-cpp[Cryptography.SmartCardCSP#1](~/add/codesnippet/cpp/t-system.security.crypto_47_2.cpp)]\n [!code-vb[Cryptography.SmartCardCSP#1](~/add/codesnippet/visualbasic/t-system.security.crypto_47_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class CspParameters
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters()
  nameWithType: CspParameters.CspParameters()
  fullName: System.Security.Cryptography.CspParameters.CspParameters()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> classe."
  remarks: "Questa forma di CspParameters Inizializza il <xref:System.Security.Cryptography.CspParameters.ProviderType>campo su un valore di `24`, che consente di specificare il provider PROV_RSA_AES.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Il provider predefinito è compatibile con il <xref:System.Security.Cryptography.Aes>algoritmo.</xref:System.Security.Cryptography.Aes>       Per informazioni su altri tipi di provider, vedere il <xref:System.Security.Cryptography.CspParameters.ProviderType>campo.</xref:System.Security.Cryptography.CspParameters.ProviderType>"
  example:
  - "The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.  \n  \n [!code-cpp[capikey#1](~/add/codesnippet/cpp/m-system.security.crypto_108_1.cpp)]\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_108_1.vb)]\n [!code-cs[capikey#1](~/add/codesnippet/csharp/m-system.security.crypto_108_1.cs)]"
  syntax:
    content: public CspParameters ();
    parameters: []
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32)
  nameWithType: CspParameters.CspParameters(Int32)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> classe con il codice del tipo di provider specificato."
  remarks: "Utilizzare il costruttore CspParameters per specificare un tipo di provider passando un valore numerico che rappresenta tale provider.  I valori numerici che rappresentano i tipi di provider predefiniti sono definiti nel file di intestazione Wincrypt: - specificare un provider compatibile con il <xref:System.Security.Cryptography.RSA>algoritmo, passare un valore di `1`per il `dwTypeIn` parametro.</xref:System.Security.Cryptography.RSA>      -Per specificare un provider compatibile con il <xref:System.Security.Cryptography.DSA>algoritmo, passare un valore di `13`per il `dwTypeIn` parametro.</xref:System.Security.Cryptography.DSA>       Per informazioni su altri valori di tipo di provider, vedere il <xref:System.Security.Cryptography.CspParameters.ProviderType>campo.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Per ulteriori informazioni sui tipi di provider predefiniti e i relativi comportamenti, vedere la documentazione di Microsoft Cryptography API (CAPI) in MSDN library."
  example:
  - "The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.  \n  \n [!code-cpp[capikey#1](~/add/codesnippet/cpp/m-system.security.crypto_129_1.cpp)]\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_129_1.vb)]\n [!code-cs[capikey#1](~/add/codesnippet/csharp/m-system.security.crypto_129_1.cs)]"
  syntax:
    content: public CspParameters (int dwTypeIn);
    parameters:
    - id: dwTypeIn
      type: System.Int32
      description: "Codice di tipo di provider che specifica il tipo di provider da creare."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)
  id: '#ctor(System.Int32,System.String)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32,String)
  nameWithType: CspParameters.CspParameters(Int32,String)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> classe con il nome e il codice di tipo di provider specificato."
  remarks: "Utilizzare il costruttore CspParameters per specificare un nome e il tipo di provider.       Specificare un tipo di provider passando un valore numerico che rappresenta il tipo di provider desiderato.  I valori numerici che rappresentano i tipi di provider predefiniti sono definiti nel file di intestazione Wincrypt: - specificare un provider compatibile con il <xref:System.Security.Cryptography.RSA>algoritmo, passare un valore di `1`per il `dwTypeIn` parametro.</xref:System.Security.Cryptography.RSA>      -Per specificare un provider compatibile con il <xref:System.Security.Cryptography.DSA>algoritmo, passare un valore di `13`per il `dwTypeIn` parametro.</xref:System.Security.Cryptography.DSA>       Per informazioni su altri valori di tipo di provider, vedere il <xref:System.Security.Cryptography.CspParameters.ProviderType>campo.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Per ulteriori informazioni sui tipi di provider predefiniti e i relativi comportamenti, vedere la documentazione di Microsoft Cryptography API (CAPI) in MSDN library."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.CspParameters> class to select a Smart Card Cryptographic Service Provider.  It then signs and verifies data using the smart card.  \n  \n [!code-cs[Cryptography.SmartCardCSP#1](~/add/codesnippet/csharp/3115faba-ad85-4109-97d8-_1.cs)]\n [!code-cpp[Cryptography.SmartCardCSP#1](~/add/codesnippet/cpp/3115faba-ad85-4109-97d8-_1.cpp)]\n [!code-vb[Cryptography.SmartCardCSP#1](~/add/codesnippet/visualbasic/3115faba-ad85-4109-97d8-_1.vb)]"
  syntax:
    content: public CspParameters (int dwTypeIn, string strProviderNameIn);
    parameters:
    - id: dwTypeIn
      type: System.Int32
      description: "Codice di tipo di provider che specifica il tipo di provider da creare."
    - id: strProviderNameIn
      type: System.String
      description: "Nome del provider."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)
  id: '#ctor(System.Int32,System.String,System.String)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32,String,String)
  nameWithType: CspParameters.CspParameters(Int32,String,String)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> classe con il codice del tipo di provider specificato e nome e il nome del contenitore specificato."
  remarks: "Utilizzare il costruttore CspParameters per specificare un tipo di provider, un nome di provider e un nome di contenitore.       È possibile utilizzare il nome del contenitore per recuperare una chiave all&quot;interno del contenitore.       Specificare un tipo di provider passando un valore numerico che rappresenta il tipo di provider desiderato.  I valori numerici che rappresentano i tipi di provider predefiniti sono definiti nel file di intestazione Wincrypt: - specificare un provider compatibile con il <xref:System.Security.Cryptography.RSA>algoritmo, passare un valore di `1`per il `dwTypeIn` parametro.</xref:System.Security.Cryptography.RSA>      -Per specificare un provider compatibile con il <xref:System.Security.Cryptography.DSA>algoritmo, passare un valore di `13`per il `dwTypeIn` parametro.</xref:System.Security.Cryptography.DSA>       Per informazioni su altri valori di tipo di provider, vedere il <xref:System.Security.Cryptography.CspParameters.ProviderType>campo.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Per ulteriori informazioni sui tipi di provider predefiniti e i relativi comportamenti, vedere la documentazione di Microsoft Cryptography API (CAPI) in MSDN library."
  syntax:
    content: public CspParameters (int dwTypeIn, string strProviderNameIn, string strContainerNameIn);
    parameters:
    - id: dwTypeIn
      type: System.Int32
      description: "Il codice di tipo di provider che specifica il tipo di provider da creare."
    - id: strProviderNameIn
      type: System.String
      description: "Nome del provider."
    - id: strContainerNameIn
      type: System.String
      description: "Nome del contenitore."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)
  id: '#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> classe utilizzando un tipo di provider, un nome di provider, un nome di contenitore, le informazioni di accesso e un handle a una finestra di dialogo password non gestita della smart card."
  remarks: "È possibile utilizzare il nome del contenitore per recuperare una chiave all&quot;interno del contenitore.       Specificare un tipo di provider passando un valore numerico che rappresenta il tipo di provider desiderato.  I valori numerici che rappresentano i tipi di provider predefiniti sono definiti nel file di intestazione Wincrypt: - specificare un provider compatibile con il <xref:System.Security.Cryptography.RSA>algoritmo, passare un valore di `1`per il `dwTypeIn` parametro.</xref:System.Security.Cryptography.RSA>      -Per specificare un provider compatibile con il <xref:System.Security.Cryptography.DSA>algoritmo, passare un valore di `13`per il `dwTypeIn` parametro.</xref:System.Security.Cryptography.DSA>       Per informazioni su altri valori di tipo di provider, vedere il <xref:System.Security.Cryptography.CspParameters.ProviderType>campo.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Per ulteriori informazioni sui tipi di provider predefiniti e i relativi comportamenti, vedere la documentazione di Microsoft Cryptography API (CAPI) in MSDN library."
  syntax:
    content: public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, IntPtr parentWindowHandle);
    parameters:
    - id: providerType
      type: System.Int32
      description: "Il codice di tipo di provider che specifica il tipo di provider da creare."
    - id: providerName
      type: System.String
      description: "Nome del provider."
    - id: keyContainerName
      type: System.String
      description: "Nome del contenitore."
    - id: cryptoKeySecurity
      type: System.Security.AccessControl.CryptoKeySecurity
      description: "Un oggetto che rappresenta diritti di accesso e controllo delle regole per il contenitore."
    - id: parentWindowHandle
      type: System.IntPtr
      description: "Un handle alla finestra padre per una finestra di dialogo password della smart card."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)
  id: '#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> classe utilizzando un tipo di provider, un nome di provider, un nome di contenitore, le informazioni di accesso e una password associata a una chiave della smart card."
  remarks: "È possibile utilizzare il nome del contenitore per recuperare una chiave all&quot;interno del contenitore.       Specificare un tipo di provider passando un valore numerico che rappresenta il tipo di provider desiderato.  I valori numerici che rappresentano i tipi di provider predefiniti sono definiti nel file di intestazione Wincrypt: - specificare un provider compatibile con il <xref:System.Security.Cryptography.RSA>algoritmo, passare un valore di `1`per il `dwTypeIn` parametro.</xref:System.Security.Cryptography.RSA>      -Per specificare un provider compatibile con il <xref:System.Security.Cryptography.DSA>algoritmo, passare un valore di `13`per il `dwTypeIn` parametro.</xref:System.Security.Cryptography.DSA>       Per informazioni su altri valori di tipo di provider, vedere il <xref:System.Security.Cryptography.CspParameters.ProviderType>campo.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Per ulteriori informazioni sui tipi di provider predefiniti e i relativi comportamenti, vedere la documentazione di Microsoft Cryptography API (CAPI) in MSDN library."
  syntax:
    content: public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, System.Security.SecureString keyPassword);
    parameters:
    - id: providerType
      type: System.Int32
      description: "Il codice di tipo di provider che specifica il tipo di provider da creare."
    - id: providerName
      type: System.String
      description: "Nome del provider."
    - id: keyContainerName
      type: System.String
      description: "Nome del contenitore."
    - id: cryptoKeySecurity
      type: System.Security.AccessControl.CryptoKeySecurity
      description: "Oggetto che rappresenta diritti di accesso e controllo regole per un contenitore."
    - id: keyPassword
      type: System.Security.SecureString
      description: "Password associata a una chiave della smart card."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.CryptoKeySecurity
  id: CryptoKeySecurity
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CryptoKeySecurity
  nameWithType: CspParameters.CryptoKeySecurity
  fullName: System.Security.Cryptography.CspParameters.CryptoKeySecurity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene o imposta un <xref href=&quot;System.Security.AccessControl.CryptoKeySecurity&quot;> </xref> dell&quot;oggetto che rappresenta i diritti di accesso e le regole per un contenitore di controllo."
  remarks: "Utilizzare la proprietà CryptoKeySecurity per specificare un <xref:System.Security.AccessControl.CryptoKeySecurity>elenchi di oggetto che gestisce la creazione del controllo di accesso discrezionale (DACL) e gli elenchi di controllo di accesso di sistema (SACL) per un contenitore.</xref:System.Security.AccessControl.CryptoKeySecurity>"
  syntax:
    content: public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; set; }
    return:
      type: System.Security.AccessControl.CryptoKeySecurity
      description: "Oggetto <xref href=&quot;System.Security.AccessControl.CryptoKeySecurity&quot;> </xref> dell&quot;oggetto che rappresenta i diritti di accesso e le regole per un contenitore di controllo."
  overload: System.Security.Cryptography.CspParameters.CryptoKeySecurity*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.Flags
  id: Flags
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: Flags
  nameWithType: CspParameters.Flags
  fullName: System.Security.Cryptography.CspParameters.Flags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Rappresenta i flag per <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> che modificano il comportamento del provider del servizio di crittografia (CSP)."
  syntax:
    content: public System.Security.Cryptography.CspProviderFlags Flags { get; set; }
    return:
      type: System.Security.Cryptography.CspProviderFlags
      description: "Un valore di enumerazione o una combinazione bit per bit dei valori di enumerazione."
  overload: System.Security.Cryptography.CspParameters.Flags*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Valore non è un valore di enumerazione valido."
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.KeyContainerName
  id: KeyContainerName
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: KeyContainerName
  nameWithType: CspParameters.KeyContainerName
  fullName: System.Security.Cryptography.CspParameters.KeyContainerName
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Rappresenta il nome di contenitore di chiavi per <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref>."
  remarks: "Utilizzare il campo KeyContainerName per specificare un nome per il contenitore di chiavi.  È possibile utilizzare il nome del contenitore per recuperare la chiave persistente all&quot;interno del contenitore.       Per ulteriori informazioni sulla creazione di contenitori di chiavi, vedere [procedura: archiviare chiavi asimmetriche in un contenitore di chiavi](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.  \n  \n [!code-cpp[capikey#1](~/add/codesnippet/cpp/f-system.security.crypto_6_1.cpp)]\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/f-system.security.crypto_6_1.vb)]\n [!code-cs[capikey#1](~/add/codesnippet/csharp/f-system.security.crypto_6_1.cs)]"
  syntax:
    content: public string KeyContainerName;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.KeyNumber
  id: KeyNumber
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: KeyNumber
  nameWithType: CspParameters.KeyNumber
  fullName: System.Security.Cryptography.CspParameters.KeyNumber
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Specifica se è stata creata una chiave asimmetrica come chiave di firma o chiave di scambio."
  remarks: "Il campo KeyNumber Inizializza il <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A>proprietà quando si inizializza un <xref:System.Security.Cryptography.CspKeyContainerInfo>dell&quot;oggetto con un <xref:System.Security.Cryptography.CspParameters>oggetto.</xref:System.Security.Cryptography.CspParameters> </xref:System.Security.Cryptography.CspKeyContainerInfo> </xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A>       Una chiave di scambio è una coppia di chiavi asimmetriche utilizzata per crittografare le chiavi di sessione in modo che possono essere tranquillamente archiviate e scambiate con altri utenti.  È possibile utilizzare il <xref:System.Security.Cryptography.KeyNumber>valore (`1`) per specificare una chiave di scambio.</xref:System.Security.Cryptography.KeyNumber>  Questo valore corrisponde al `AT_KEYEXCHANGE` valore utilizzato nell&quot;API di crittografia Microsoft (CAPI).       Una chiave di firma è una coppia di chiavi asimmetriche utilizzata per l&quot;autenticazione di messaggi con firma digitale o file.  È possibile utilizzare il <xref:System.Security.Cryptography.KeyNumber>valore (`2`) per specificare una chiave di firma.</xref:System.Security.Cryptography.KeyNumber>  Questo valore corrisponde al `AT_SIGNATURE` valore utilizzato in CAPI.       Per impostazione predefinita, il campo KeyNumber specifica una chiave di scambio."
  example:
  - "The following code example demonstrates how to use the <xref:System.Security.Cryptography.KeyNumber> enumeration to specify a key type for an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.  \n  \n [!code-cs[Cryptography.KeyNumber#1](~/add/codesnippet/csharp/f-system.security.crypto_8_1.cs)]\n [!code-cpp[Cryptography.KeyNumber#1](~/add/codesnippet/cpp/f-system.security.crypto_8_1.cpp)]\n [!code-vb[Cryptography.KeyNumber#1](~/add/codesnippet/visualbasic/f-system.security.crypto_8_1.vb)]"
  syntax:
    content: public int KeyNumber;
    return:
      type: System.Int32
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.KeyPassword
  id: KeyPassword
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: KeyPassword
  nameWithType: CspParameters.KeyPassword
  fullName: System.Security.Cryptography.CspParameters.KeyPassword
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene o imposta la password associata a una chiave della smart card."
  remarks: "Utilizzare la proprietà KeyPassword per fornire una password per una chiave della smart card.  Quando si specifica una password utilizzando questa proprietà, una finestra di dialogo password non verrà presentata all&quot;utente."
  syntax:
    content: public System.Security.SecureString KeyPassword { get; set; }
    return:
      type: System.Security.SecureString
      description: "Password associata a una chiave della smart card."
  overload: System.Security.Cryptography.CspParameters.KeyPassword*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.ParentWindowHandle
  id: ParentWindowHandle
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: ParentWindowHandle
  nameWithType: CspParameters.ParentWindowHandle
  fullName: System.Security.Cryptography.CspParameters.ParentWindowHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Ottiene o imposta un handle alla finestra padre non gestito per una finestra di dialogo password della smart card."
  remarks: "Utilizzare la proprietà ParentWindowHandle per specificare un handle alla finestra padre non gestito per una finestra di dialogo password della smart card.  Quando si specifica un handle di utilizzo di questa proprietà, l&quot;utente verrà visualizzato una finestra di dialogo password della smart card.       È possibile evitare la visualizzazione di una finestra di dialogo password della smart card, in modo esplicito specificando una password utilizzando la <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A>proprietà.</xref:System.Security.Cryptography.CspParameters.KeyPassword%2A>"
  syntax:
    content: public IntPtr ParentWindowHandle { get; set; }
    return:
      type: System.IntPtr
      description: "Un handle alla finestra padre per una finestra di dialogo password della smart card."
  overload: System.Security.Cryptography.CspParameters.ParentWindowHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.ProviderName
  id: ProviderName
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: ProviderName
  nameWithType: CspParameters.ProviderName
  fullName: System.Security.Cryptography.CspParameters.ProviderName
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Rappresenta il nome del provider <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref>."
  remarks: "Vedere la documentazione di Microsoft Cryptography API (CAPI) in MSDN library per informazioni dettagliate sui nomi di provider."
  syntax:
    content: public string ProviderName;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.ProviderType
  id: ProviderType
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: ProviderType
  nameWithType: CspParameters.ProviderType
  fullName: System.Security.Cryptography.CspParameters.ProviderType
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Rappresenta il codice del tipo di provider di <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref>."
  remarks: "Utilizzare il campo Tipoprovider per specificare un tipo di provider passando un valore numerico che rappresenta tale provider.  I valori numerici che rappresentano i tipi di provider predefiniti sono definiti nel file di intestazione Wincrypt: - specificare un provider compatibile con la <xref:System.Security.Cryptography.RSA>classe, passare il valore `1`.</xref:System.Security.Cryptography.RSA>      -Per specificare un provider compatibile con la <xref:System.Security.Cryptography.DSA>classe, passare il valore `13`.</xref:System.Security.Cryptography.DSA>       Nella tabella seguente sono elencati i tipi di provider e i valori numerici corrispondenti definiti nel file di intestazione Wincrypt.      | Tipo di provider | Valore numerico |   |-------------------|-------------------|   | `PROV_RSA_FULL`|1|   | `PROV_RSA_SIG`|2|   | `PROV_DSS`|3|   | `PROV_FORTEZZA`|4|   | `PROV_MS_EXCHANGE`|5|   | `PROV_SSL`|6|   | `PROV_RSA_SCHANNEL`|12|   | `PROV_DSS_DH`|13|   | `PROV_EC_ECDSA_SIG`|14|   | `PROV_EC_ECNRA_SIG`|15|   | `PROV_EC_ECDSA_FULL`|16|   | `PROV_EC_ECNRA_FULL`|17|   | `PROV_DH_SCHANNEL`|18|   | `PROV_SPYRUS_LYNKS`|20|   | `PROV_RNG`|21|   | `PROV_INTEL_SEC`|22|   | `PROV_REPLACE_OWF`|23|   | `PROV_RSA_AES`|24|       Per ulteriori informazioni sui tipi di provider predefiniti e i relativi comportamenti, vedere la documentazione di Microsoft Cryptography API (CAPI) in MSDN library."
  syntax:
    content: public int ProviderType;
    return:
      type: System.Int32
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.CspParameters.#ctor
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters()
  nameWithType: CspParameters.CspParameters()
  fullName: System.Security.Cryptography.CspParameters.CspParameters()
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32)
  nameWithType: CspParameters.CspParameters(Int32)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32,String)
  nameWithType: CspParameters.CspParameters(Int32,String)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32,String,String)
  nameWithType: CspParameters.CspParameters(Int32,String,String)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String)
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
- uid: System.Security.AccessControl.CryptoKeySecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: CryptoKeySecurity
  nameWithType: CryptoKeySecurity
  fullName: System.Security.AccessControl.CryptoKeySecurity
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Security.Cryptography.CspParameters.CryptoKeySecurity
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CryptoKeySecurity
  nameWithType: CspParameters.CryptoKeySecurity
  fullName: System.Security.Cryptography.CspParameters.CryptoKeySecurity
- uid: System.Security.Cryptography.CspParameters.Flags
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: Flags
  nameWithType: CspParameters.Flags
  fullName: System.Security.Cryptography.CspParameters.Flags
- uid: System.Security.Cryptography.CspProviderFlags
  parent: System.Security.Cryptography
  isExternal: false
  name: CspProviderFlags
  nameWithType: CspProviderFlags
  fullName: System.Security.Cryptography.CspProviderFlags
- uid: System.Security.Cryptography.CspParameters.KeyContainerName
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: KeyContainerName
  nameWithType: CspParameters.KeyContainerName
  fullName: System.Security.Cryptography.CspParameters.KeyContainerName
- uid: System.Security.Cryptography.CspParameters.KeyNumber
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: KeyNumber
  nameWithType: CspParameters.KeyNumber
  fullName: System.Security.Cryptography.CspParameters.KeyNumber
- uid: System.Security.Cryptography.CspParameters.KeyPassword
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: KeyPassword
  nameWithType: CspParameters.KeyPassword
  fullName: System.Security.Cryptography.CspParameters.KeyPassword
- uid: System.Security.Cryptography.CspParameters.ParentWindowHandle
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: ParentWindowHandle
  nameWithType: CspParameters.ParentWindowHandle
  fullName: System.Security.Cryptography.CspParameters.ParentWindowHandle
- uid: System.Security.Cryptography.CspParameters.ProviderName
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: ProviderName
  nameWithType: CspParameters.ProviderName
  fullName: System.Security.Cryptography.CspParameters.ProviderName
- uid: System.Security.Cryptography.CspParameters.ProviderType
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: ProviderType
  nameWithType: CspParameters.ProviderType
  fullName: System.Security.Cryptography.CspParameters.ProviderType
- uid: System.Security.Cryptography.CspParameters.#ctor*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters
  nameWithType: CspParameters.CspParameters
- uid: System.Security.Cryptography.CspParameters.CryptoKeySecurity*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CryptoKeySecurity
  nameWithType: CspParameters.CryptoKeySecurity
- uid: System.Security.Cryptography.CspParameters.Flags*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: Flags
  nameWithType: CspParameters.Flags
- uid: System.Security.Cryptography.CspParameters.KeyPassword*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: KeyPassword
  nameWithType: CspParameters.KeyPassword
- uid: System.Security.Cryptography.CspParameters.ParentWindowHandle*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: ParentWindowHandle
  nameWithType: CspParameters.ParentWindowHandle
