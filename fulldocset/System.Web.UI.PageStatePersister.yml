### YamlMime:ManagedReference
items:
- uid: System.Web.UI.PageStatePersister
  id: PageStatePersister
  children:
  - System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)
  - System.Web.UI.PageStatePersister.ControlState
  - System.Web.UI.PageStatePersister.Load
  - System.Web.UI.PageStatePersister.Page
  - System.Web.UI.PageStatePersister.Save
  - System.Web.UI.PageStatePersister.StateFormatter
  - System.Web.UI.PageStatePersister.ViewState
  langs:
  - csharp
  name: PageStatePersister
  nameWithType: PageStatePersister
  fullName: System.Web.UI.PageStatePersister
  type: Class
  summary: "Fornisce la funzionalità di base per i meccanismi di persistenza dello stato di visualizzazione ASP.NET."
  remarks: "Le richieste HTTP e le risposte sono intrinsecamente senza state. Per mantenere informazioni sullo stato tra le richieste HTTP, è possono archiviare le pagine ASP.NET <xref:System.Web.UI.Page>stato.</xref:System.Web.UI.Page> Questo stato, lo stato di visualizzazione, denominato costituito dalla pagina e le impostazioni di controllo e i dati che costituiscono la pagina e i controlli vengono visualizzati come se sono uguali a quelle che l&quot;utente visti e con dal durante l&quot;ultimo round trip al server. Sono disponibili diversi meccanismi per archiviare lo stato di visualizzazione tra le richieste successive nella stessa pagina. La classe astratta PageStatePersister rappresenta la classe base per questi meccanismi di archiviazione di informazioni sullo stato.       Il meccanismo di persistenza predefinito dello stato di visualizzazione in ASP.NET consiste nel mantenere le informazioni sullo stato sotto forma di stringa con codifica Base64 in un elemento HTML nascosto (un elemento con la `type` attributo impostato su `&quot;hidden&quot;`) nella pagina. Una pagina ASP.NET utilizza un <xref:System.Web.UI.HiddenFieldPageStatePersister>oggetto per eseguire questa funziona, utilizzando un <xref:System.Web.UI.IStateFormatter>istanza da serializzare e deserializzare le informazioni sullo stato di oggetto.</xref:System.Web.UI.IStateFormatter> </xref:System.Web.UI.HiddenFieldPageStatePersister> In alternativa, è possibile archiviare lo stato di visualizzazione per le pagine di <xref:System.Web.HttpContext.Session%2A>oggetto sul server utilizzando il <xref:System.Web.UI.SessionPageStatePersister>classe per i client per dispositivi mobili con larghezza di banda limitata e risorse.</xref:System.Web.UI.SessionPageStatePersister> </xref:System.Web.HttpContext.Session%2A> In alcuni casi, è possibile disattivare completamente la persistenza dello stato di visualizzazione. In questo caso, il risultato è che in alcuni casi le pagine e controlli che si basano sulla persistenza dello stato non funzionare correttamente. Per ulteriori informazioni sullo stato di gestione e visualizzazione dello stato di pagina, vedere [Cenni preliminari sulla gestione dello stato di ASP.NET](~/add/includes/ajax-current-ext-md.md).       Se si siano scrivendo i controlli, è possibile archiviare le informazioni sullo stato per i controlli di <xref:System.Web.UI.Control.ViewState%2A>dizionario, che è un <xref:System.Web.UI.StateBag>oggetto.</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> Lo sviluppatore dovrà recuperare lo stato del controllo tramite la <xref:System.Web.UI.PageStatePersister.ControlState%2A>proprietà.</xref:System.Web.UI.PageStatePersister.ControlState%2A> Assegnare le chiavi e valori per il <xref:System.Web.UI.Control.ViewState%2A>, proprietà e <xref:System.Web.UI.Page>oggetto serializza le informazioni sullo stato tra le richieste.</xref:System.Web.UI.Page> </xref:System.Web.UI.Control.ViewState%2A> Per eseguire Gestione nel controllo di stato personalizzato, eseguire l&quot;override di <xref:System.Web.UI.Control.LoadViewState%2A>e <xref:System.Web.UI.Control.SaveViewState%2A>metodi.</xref:System.Web.UI.Control.SaveViewState%2A> </xref:System.Web.UI.Control.LoadViewState%2A> Qualsiasi informazione sullo stato vengono archiviati in questo dizionario vanno perse quando lo stato di visualizzazione è disabilitato per lo sviluppatore della pagina. Limitare il problema, in ASP.NET versione 2.0 è possibile archiviare le informazioni sullo stato critico in un oggetto separato, denominato stato del controllo. L&quot;oggetto di stato di controllo non viene modificata quando lo stato di visualizzazione è disabilitato per lo sviluppatore della pagina. L&quot;archiviazione di informazioni sullo stato nell&quot;oggetto di stato di controllo richiede che il controllo esegue l&quot;override di <xref:System.Web.UI.Control.LoadControlState%2A>e <xref:System.Web.UI.Control.SaveControlState%2A>lo stato del controllo metodi e che il controllo sia stata registrata per archiviare informazioni sullo stato di ogni volta che il controllo è inizializzato.</xref:System.Web.UI.Control.SaveControlState%2A> </xref:System.Web.UI.Control.LoadControlState%2A> È possibile registrare un controllo per utilizzare lo stato del controllo eseguendo l&quot;override di <xref:System.Web.UI.Control.OnInit%2A>metodo e la chiamata di <xref:System.Web.UI.Page.RegisterRequiresControlState%2A>metodo.</xref:System.Web.UI.Page.RegisterRequiresControlState%2A> </xref:System.Web.UI.Control.OnInit%2A> Per ulteriori informazioni sull&quot;utilizzo di <xref:System.Web.UI.Control.ViewState%2A>lo stato di controllo e proprietà durante lo sviluppo di controlli, vedere [lo sviluppo di controlli Server ASP.NET personalizzati](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.Control.ViewState%2A>       Per mantenere lo stato di visualizzazione sul client che non supportano i meccanismi di persistenza dello stato di visualizzazione esistente, è possibile estendere la classe PageStatePersister per introdurre i propri metodi di persistenza dello stato di visualizzazione, quindi è possibile utilizzare gli adattatori di pagina per configurare l&quot;applicazione ASP.NET per utilizzare i meccanismi di persistenza dello stato di visualizzazione diverse in base al tipo di client a cui viene visualizzata una pagina. Le classi che derivano dalla classe PageStatePersister devono eseguire l&quot;override il <xref:System.Web.UI.PageStatePersister.Save%2A>metodo per archiviare lo stato di visualizzazione e lo stato del supporto di persistenza, controllo e l&quot;override del <xref:System.Web.UI.PageStatePersister.Load%2A>metodo per decomprimerlo.</xref:System.Web.UI.PageStatePersister.Load%2A> </xref:System.Web.UI.PageStatePersister.Save%2A> Se è necessario serializzare lo stato di visualizzazione e del controllo in una stringa, è possibile utilizzare il <xref:System.Web.UI.IStateFormatter>oggetto che è possibile accedere tramite il <xref:System.Web.UI.PageStatePersister.StateFormatter%2A>proprietà.</xref:System.Web.UI.PageStatePersister.StateFormatter%2A> </xref:System.Web.UI.IStateFormatter> In modo efficiente, serializza e deserializza informazioni sullo stato di oggetto in una stringa con codifica Base64. È inoltre possibile sostituire il <xref:System.Web.UI.PageStatePersister.StateFormatter%2A>proprietà per fornire un proprio meccanismo di serializzazione dello stato di oggetto.</xref:System.Web.UI.PageStatePersister.StateFormatter%2A>"
  example:
  - "The following code example demonstrates how to create a PageStatePersister object that saves view and control state on the Web server. The `StreamPageStatePersister` demonstrates how to override the <xref:System.Web.UI.PageStatePersister.Load%2A> and <xref:System.Web.UI.PageStatePersister.Save%2A> methods to extract and save view state information. Because the state persistence mechanisms are related to adaptive rendering and client capabilities, the `MyPageAdapter` class is provided to activate the `StreamPageStatePersister` for an ASP.NET application. Finally, a browser capabilities (.browser) file is provided to enable the `MyPageAdapter` adapter for a specific class of clients (in this case, the default Web browser).  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/add/codesnippet/csharp/t-system.web.ui.pagestat_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.pagestat_1.vb)]  \n  \n The following code example demonstrates how to create a <xref:System.Web.UI.Adapters.PageAdapter> class that returns an instance of `StreamPageStatePersister`, which is used to persist view and control state for an ASP.NET Web page.  \n  \n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/add/codesnippet/visualbasic/t-system.web.ui.pagestat_2.vb)]\n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/add/codesnippet/csharp/t-system.web.ui.pagestat_2.cs)]  \n  \n Compile these two classes into an assembly that you can use to run a sample, using the following compiler command line. Ensure that the compiled assembly is in the \\Bin directory underneath the ASP.NET application root.  \n  \n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/add/codesnippet/visualbasic/t-system.web.ui.pagestat_3.vb)]\n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/add/codesnippet/csharp/t-system.web.ui.pagestat_3.cs)]  \n  \n Finally, to enable the `MyPageAdapter` adapter, you must create a directory named Browsers underneath the ASP.NET application root, and include a .browser file with configuration information. The `<refid>` element in the configuration file indicates that the configuration overrides the values specified for the default browser in the Default.browser configuration file. In this example, `MyPageAdapter` is used for ASP.NET Web pages (where normally no adapter is used).  \n  \n```  \n<browsers>  \n    <browser refid=\"Default\" >  \n        <controlAdapters>  \n            <adapter   \n                controlType=\"System.Web.UI.Page\"                              \n                adapterType=\"Samples.AspNet.CS.MyPageAdapter\" />  \n        </controlAdapters>  \n    </browser>  \n</browsers>  \n```"
  syntax:
    content: public abstract class PageStatePersister
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)
  id: '#ctor(System.Web.UI.Page)'
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: PageStatePersister(Page)
  nameWithType: PageStatePersister.PageStatePersister(Page)
  fullName: System.Web.UI.PageStatePersister.PageStatePersister(Page)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref> classe."
  syntax:
    content: protected PageStatePersister (System.Web.UI.Page page);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "Il <xref href=&quot;System.Web.UI.Page&quot;> </xref> creato per il meccanismo di persistenza dello stato di visualizzazione."
  overload: System.Web.UI.PageStatePersister.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>page</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.ControlState
  id: ControlState
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: ControlState
  nameWithType: PageStatePersister.ControlState
  fullName: System.Web.UI.PageStatePersister.ControlState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene o imposta un oggetto che rappresenta i dati contenuti dall&quot;oggetto corrente che controlla <xref href=&quot;System.Web.UI.Page&quot;> </xref> utilizzo dell&quot;oggetto in modo permanente nelle richieste HTTP al server Web."
  remarks: "Lo stato del controllo è un oggetto costituito da dati dello stato di visualizzazione critici funzione dover controlli server Web, che sono contenuti in un oggetto separato dalle informazioni di stato di visualizzazione normale. Dati dello stato di controllo non cambiano quando lo stato di visualizzazione è disabilitato al <xref:System.Web.UI.Page>livello, ma richiede passaggi di implementazione aggiuntivi da utilizzare.</xref:System.Web.UI.Page> Per ulteriori informazioni sull&quot;utilizzo di <xref:System.Web.UI.Control.ViewState%2A>lo stato di controllo e proprietà durante lo sviluppo di controlli, vedere [lo sviluppo di controlli Server ASP.NET personalizzati](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.Control.ViewState%2A>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class initializes the ControlState property. In this example, the ControlState property has been assigned to the <xref:System.Web.UI.Pair.Second> field of a <xref:System.Web.UI.Pair> object, and serialized using the <xref:System.Web.UI.ObjectStateFormatter> class. When the <xref:System.Web.UI.PageStatePersister.Load%2A> method is called, the <xref:System.Web.UI.ObjectStateFormatter> class is used to deserialize view state and control state information, and the ControlState property is initialized from the resulting <xref:System.Web.UI.Pair> object's <xref:System.Web.UI.Pair.Second> field. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/csharp/p-system.web.ui.pagestat_0_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/visualbasic/p-system.web.ui.pagestat_0_1.vb)]"
  syntax:
    content: public object ControlState { get; set; }
    return:
      type: System.Object
      description: "Oggetto che contiene i dati dello stato di visualizzazione."
  overload: System.Web.UI.PageStatePersister.ControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.Load
  id: Load
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: Load()
  nameWithType: PageStatePersister.Load()
  fullName: System.Web.UI.PageStatePersister.Load()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Sottoposto a override dalle classi derivate da deserializzare e caricare informazioni sullo stato persistente quando un <xref href=&quot;System.Web.UI.Page&quot;> </xref> oggetto inizializza la gerarchia dei controlli."
  remarks: "Le classi che derivano dalla <xref:System.Web.UI.PageStatePersister>classe implementa il metodo Load per inizializzare il <xref:System.Web.UI.PageStatePersister.ViewState%2A>e <xref:System.Web.UI.PageStatePersister.ControlState%2A>proprietà da un formato persistente.</xref:System.Web.UI.PageStatePersister.ControlState%2A> </xref:System.Web.UI.PageStatePersister.ViewState%2A> </xref:System.Web.UI.PageStatePersister>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class implements the Load method to load view state from a persistence medium. The `StreamPageStatePersister` attempts to read data from a stream. It uses an <xref:System.Web.UI.IStateFormatter> object to deserialize view state data and initialize the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property and the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property, which a page uses to initialize controls. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/csharp/m-system.web.ui.pagestat_0_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/visualbasic/m-system.web.ui.pagestat_0_1.vb)]"
  syntax:
    content: public abstract void Load ();
    parameters: []
  overload: System.Web.UI.PageStatePersister.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.Page
  id: Page
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: Page
  nameWithType: PageStatePersister.Page
  fullName: System.Web.UI.PageStatePersister.Page
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene o imposta il <xref href=&quot;System.Web.UI.Page&quot;> </xref> oggetto creato per il meccanismo di persistenza dello stato di visualizzazione."
  remarks: "È possibile utilizzare la proprietà di pagina per accedere all&quot;oggetto <xref:System.Web.HttpContext>oggetto.</xref:System.Web.HttpContext>"
  syntax:
    content: protected System.Web.UI.Page Page { get; set; }
    return:
      type: System.Web.UI.Page
      description: "Il <xref href=&quot;System.Web.UI.Page&quot;> </xref> che il <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref> è associato."
  overload: System.Web.UI.PageStatePersister.Page*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.Save
  id: Save
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: Save()
  nameWithType: PageStatePersister.Save()
  fullName: System.Web.UI.PageStatePersister.Save()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Sottoposto a override dalle classi derivate per serializzare le informazioni di stato persistente quando un <xref href=&quot;System.Web.UI.Page&quot;> </xref> oggetto viene scaricato dalla memoria."
  remarks: "Le classi che derivano dalla <xref:System.Web.UI.PageStatePersister>classe implementa il metodo Save per mantenere il contenuto del <xref:System.Web.UI.PageStatePersister.ViewState%2A>e <xref:System.Web.UI.PageStatePersister.ControlState%2A>proprietà su un supporto di persistenza.</xref:System.Web.UI.PageStatePersister.ControlState%2A> </xref:System.Web.UI.PageStatePersister.ViewState%2A> </xref:System.Web.UI.PageStatePersister>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class implements the Save method to persist view state to a persistence medium. The `StreamPageStatePersister` uses an <xref:System.Web.UI.IStateFormatter> object to serialize the contents of the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property and <xref:System.Web.UI.PageStatePersister.ControlState%2A> property. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/csharp/m-system.web.ui.pagestat_1_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.pagestat_1_1.vb)]"
  syntax:
    content: public abstract void Save ();
    parameters: []
  overload: System.Web.UI.PageStatePersister.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.StateFormatter
  id: StateFormatter
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: StateFormatter
  nameWithType: PageStatePersister.StateFormatter
  fullName: System.Web.UI.PageStatePersister.StateFormatter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un <xref href=&quot;System.Web.UI.IStateFormatter&quot;> </xref> oggetto utilizzato per serializzare e deserializzare le informazioni sullo state contenute nel <> </> *> e <> </> *> durante le chiamate di <> </> *> e <> </> *> metodi."
  remarks: "È possibile eseguire l&quot;override della proprietà StateFormatter per fornire un formattatore di visualizzazione dello stato."
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class accesses the StateFormatter property to retrieve an <xref:System.Web.UI.ObjectStateFormatter> object, which is the default implementation of the <xref:System.Web.UI.IStateFormatter> interface, to serialize view state and control state to a stream. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/csharp/p-system.web.ui.pagestat_2_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/visualbasic/p-system.web.ui.pagestat_2_1.vb)]"
  syntax:
    content: protected System.Web.UI.IStateFormatter StateFormatter { get; }
    return:
      type: System.Web.UI.IStateFormatter
      description: "Un&quot;istanza di <xref href=&quot;System.Web.UI.IStateFormatter&quot;> </xref> utilizzato per serializzare e deserializzare lo stato dell&quot;oggetto."
  overload: System.Web.UI.PageStatePersister.StateFormatter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.ViewState
  id: ViewState
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: ViewState
  nameWithType: PageStatePersister.ViewState
  fullName: System.Web.UI.PageStatePersister.ViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene o imposta un oggetto che rappresenta i dati contenuti dall&quot;oggetto corrente che controlla <xref href=&quot;System.Web.UI.Page&quot;> </xref> utilizzo dell&quot;oggetto in modo permanente nelle richieste HTTP al server Web."
  remarks: "Lo stato di visualizzazione è un dizionario dei dati dello stato che i controlli server Web devono funzionare e il rendering. Gli sviluppatori di controlli di accesso in genere l&quot;oggetto stato di visualizzazione utilizzando il <xref:System.Web.UI.Control.ViewState%2A>proprietà.</xref:System.Web.UI.Control.ViewState%2A> Lo stato di visualizzazione è interessato quando lo stato di visualizzazione è disabilitato nel <xref:System.Web.UI.Page>livello e di conseguenza i controlli potrebbero non funzionare correttamente in questi scenari.</xref:System.Web.UI.Page> Per ulteriori informazioni sull&quot;utilizzo <xref:System.Web.UI.Control.ViewState%2A>e lo stato del controllo durante lo sviluppo di controlli, vedere [lo sviluppo di controlli Server ASP.NET personalizzati](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.Control.ViewState%2A>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class initializes the ViewState property. In this example, the ViewState property has been assigned to the <xref:System.Web.UI.Pair.First> field of a <xref:System.Web.UI.Pair> object, and serialized using the <xref:System.Web.UI.ObjectStateFormatter> object, which is an instance of the <xref:System.Web.UI.IStateFormatter> interface. When the <xref:System.Web.UI.PageStatePersister.Load%2A> method is called, the <xref:System.Web.UI.ObjectStateFormatter> interface is used to deserialize view state information, and the ViewState property is initialized from the resulting <xref:System.Web.UI.Pair> object's <xref:System.Web.UI.Pair.First> field. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/csharp/p-system.web.ui.pagestat_1_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/visualbasic/p-system.web.ui.pagestat_1_1.vb)]"
  syntax:
    content: public object ViewState { get; set; }
    return:
      type: System.Object
      description: "Oggetto che contiene i dati dello stato di visualizzazione."
  overload: System.Web.UI.PageStatePersister.ViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: PageStatePersister(Page)
  nameWithType: PageStatePersister.PageStatePersister(Page)
  fullName: System.Web.UI.PageStatePersister.PageStatePersister(Page)
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.PageStatePersister.ControlState
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ControlState
  nameWithType: PageStatePersister.ControlState
  fullName: System.Web.UI.PageStatePersister.ControlState
- uid: System.Web.UI.PageStatePersister.Load
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Load()
  nameWithType: PageStatePersister.Load()
  fullName: System.Web.UI.PageStatePersister.Load()
- uid: System.Web.UI.PageStatePersister.Page
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Page
  nameWithType: PageStatePersister.Page
  fullName: System.Web.UI.PageStatePersister.Page
- uid: System.Web.UI.PageStatePersister.Save
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Save()
  nameWithType: PageStatePersister.Save()
  fullName: System.Web.UI.PageStatePersister.Save()
- uid: System.Web.UI.PageStatePersister.StateFormatter
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: StateFormatter
  nameWithType: PageStatePersister.StateFormatter
  fullName: System.Web.UI.PageStatePersister.StateFormatter
- uid: System.Web.UI.IStateFormatter
  parent: System.Web.UI
  isExternal: false
  name: IStateFormatter
  nameWithType: IStateFormatter
  fullName: System.Web.UI.IStateFormatter
- uid: System.Web.UI.PageStatePersister.ViewState
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ViewState
  nameWithType: PageStatePersister.ViewState
  fullName: System.Web.UI.PageStatePersister.ViewState
- uid: System.Web.UI.PageStatePersister.#ctor*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: PageStatePersister
  nameWithType: PageStatePersister.PageStatePersister
- uid: System.Web.UI.PageStatePersister.ControlState*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ControlState
  nameWithType: PageStatePersister.ControlState
- uid: System.Web.UI.PageStatePersister.Load*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Load
  nameWithType: PageStatePersister.Load
- uid: System.Web.UI.PageStatePersister.Page*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Page
  nameWithType: PageStatePersister.Page
- uid: System.Web.UI.PageStatePersister.Save*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Save
  nameWithType: PageStatePersister.Save
- uid: System.Web.UI.PageStatePersister.StateFormatter*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: StateFormatter
  nameWithType: PageStatePersister.StateFormatter
- uid: System.Web.UI.PageStatePersister.ViewState*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ViewState
  nameWithType: PageStatePersister.ViewState
