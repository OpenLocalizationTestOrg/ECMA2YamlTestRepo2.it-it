### YamlMime:ManagedReference
items:
- uid: System.Web.HttpApplication
  id: HttpApplication
  children:
  - System.Web.HttpApplication.#ctor
  - System.Web.HttpApplication.AcquireRequestState
  - System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.HttpApplication.Application
  - System.Web.HttpApplication.AuthenticateRequest
  - System.Web.HttpApplication.AuthorizeRequest
  - System.Web.HttpApplication.BeginRequest
  - System.Web.HttpApplication.CompleteRequest
  - System.Web.HttpApplication.Context
  - System.Web.HttpApplication.Dispose
  - System.Web.HttpApplication.Disposed
  - System.Web.HttpApplication.EndRequest
  - System.Web.HttpApplication.Error
  - System.Web.HttpApplication.Events
  - System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)
  - System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)
  - System.Web.HttpApplication.Init
  - System.Web.HttpApplication.LogRequest
  - System.Web.HttpApplication.MapRequestHandler
  - System.Web.HttpApplication.Modules
  - System.Web.HttpApplication.PostAcquireRequestState
  - System.Web.HttpApplication.PostAuthenticateRequest
  - System.Web.HttpApplication.PostAuthorizeRequest
  - System.Web.HttpApplication.PostLogRequest
  - System.Web.HttpApplication.PostMapRequestHandler
  - System.Web.HttpApplication.PostReleaseRequestState
  - System.Web.HttpApplication.PostRequestHandlerExecute
  - System.Web.HttpApplication.PostResolveRequestCache
  - System.Web.HttpApplication.PostUpdateRequestCache
  - System.Web.HttpApplication.PreRequestHandlerExecute
  - System.Web.HttpApplication.PreSendRequestContent
  - System.Web.HttpApplication.PreSendRequestHeaders
  - System.Web.HttpApplication.RegisterModule(System.Type)
  - System.Web.HttpApplication.ReleaseRequestState
  - System.Web.HttpApplication.Request
  - System.Web.HttpApplication.RequestCompleted
  - System.Web.HttpApplication.ResolveRequestCache
  - System.Web.HttpApplication.Response
  - System.Web.HttpApplication.Server
  - System.Web.HttpApplication.Session
  - System.Web.HttpApplication.Site
  - System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)
  - System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable
  - System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  - System.Web.HttpApplication.UpdateRequestCache
  - System.Web.HttpApplication.User
  langs:
  - csharp
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
  type: Class
  summary: "Definisce metodi, proprietà ed eventi comuni a tutti gli oggetti dell&quot;applicazione in un&quot;applicazione ASP.NET. Questa classe è la classe base per le applicazioni che sono definiti dall&quot;utente nel file Global. asax."
  remarks: "Le istanze della classe HttpApplication vengono create nell&quot;infrastruttura di ASP.NET, non direttamente dall&quot;utente. Un&quot;istanza della classe HttpApplication viene utilizzata per elaborare un numero di richieste in corso della sua durata. Tuttavia, è possibile elaborare solo una richiesta alla volta. Di conseguenza, è possono utilizzare le variabili membro per archiviare i dati per ogni richiesta.       Un&quot;applicazione genera eventi che possono essere gestiti da moduli personalizzati che implementano il <xref:System.Web.IHttpModule>interfaccia o un file dal codice del gestore eventi che è definito in Global. asax.</xref:System.Web.IHttpModule> Moduli personalizzati che implementano il <xref:System.Web.IHttpModule>interfaccia può essere inserita nella cartella App_Code o in una DLL nella cartella Bin.</xref:System.Web.IHttpModule>       HttpApplication è stato introdotto in .NET Framework versione 3.5.  Per ulteriori informazioni, vedere [versioni e dipendenze](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Durante l&quot;esecuzione di IIS 7.0 in modalità integrata, moduli personalizzati in una cartella Bin o App_Code si applicano a tutte le richieste nella pipeline delle richieste. Codice del gestore eventi nel file Global. asax si applica solo alle richieste che vengono eseguito il mapping a un gestore ASP.NET.       Gli eventi dell&quot;applicazione vengono generati nell&quot;ordine seguente: 1.  <xref:System.Web.HttpApplication.BeginRequest>2.</xref:System.Web.HttpApplication.BeginRequest>  <xref:System.Web.HttpApplication.AuthenticateRequest>3.</xref:System.Web.HttpApplication.AuthenticateRequest>  <xref:System.Web.HttpApplication.PostAuthenticateRequest>4.</xref:System.Web.HttpApplication.PostAuthenticateRequest>  <xref:System.Web.HttpApplication.AuthorizeRequest>5.</xref:System.Web.HttpApplication.AuthorizeRequest>  <xref:System.Web.HttpApplication.PostAuthorizeRequest>6.</xref:System.Web.HttpApplication.PostAuthorizeRequest>  <xref:System.Web.HttpApplication.ResolveRequestCache>7.</xref:System.Web.HttpApplication.ResolveRequestCache>  <xref:System.Web.HttpApplication.PostResolveRequestCache>Dopo il <xref:System.Web.HttpApplication.PostResolveRequestCache>evento e prima di <xref:System.Web.HttpApplication.PostMapRequestHandler>evento, viene creato un gestore eventi (che è una pagina che corrisponde all&quot;URL della richiesta).</xref:System.Web.HttpApplication.PostMapRequestHandler> </xref:System.Web.HttpApplication.PostResolveRequestCache></xref:System.Web.HttpApplication.PostResolveRequestCache> Quando un server è in esecuzione IIS 7.0 in modalità integrata e .NET Framework versione 3.0, il <xref:System.Web.HttpApplication.MapRequestHandler>viene generato l&quot;evento.</xref:System.Web.HttpApplication.MapRequestHandler> Quando un server è in esecuzione IIS 7.0 in modalità classica o una versione precedente di IIS, questo evento non può essere gestito.      8.  <xref:System.Web.HttpApplication.PostMapRequestHandler>9.</xref:System.Web.HttpApplication.PostMapRequestHandler> <xref:System.Web.HttpApplication.AcquireRequestState>10.</xref:System.Web.HttpApplication.AcquireRequestState> <xref:System.Web.HttpApplication.PostAcquireRequestState>11.</xref:System.Web.HttpApplication.PostAcquireRequestState> <xref:System.Web.HttpApplication.PreRequestHandlerExecute>Viene eseguito il gestore dell&quot;evento.</xref:System.Web.HttpApplication.PreRequestHandlerExecute>      12. <xref:System.Web.HttpApplication.PostRequestHandlerExecute>13.</xref:System.Web.HttpApplication.PostRequestHandlerExecute> <xref:System.Web.HttpApplication.ReleaseRequestState>14.</xref:System.Web.HttpApplication.ReleaseRequestState> <xref:System.Web.HttpApplication.PostReleaseRequestState>Dopo il <xref:System.Web.HttpApplication.PostReleaseRequestState>evento viene generato, i filtri di risposta esistente filtrerà l&quot;output.</xref:System.Web.HttpApplication.PostReleaseRequestState></xref:System.Web.HttpApplication.PostReleaseRequestState>      15. <xref:System.Web.HttpApplication.UpdateRequestCache>16.</xref:System.Web.HttpApplication.UpdateRequestCache> <xref:System.Web.HttpApplication.PostUpdateRequestCache>17.</xref:System.Web.HttpApplication.PostUpdateRequestCache> <xref:System.Web.HttpApplication.LogRequest>.</xref:System.Web.HttpApplication.LogRequest>           Questo evento è supportato in modalità integrata di IIS 7.0 e .NET Framework 3.0 18. <xref:System.Web.HttpApplication.PostLogRequest>Questo evento è supportato in modalità integrata di IIS 7.0 e almeno .NET Framework 3.0 19.</xref:System.Web.HttpApplication.PostLogRequest> <xref:System.Web.HttpApplication.EndRequest></xref:System.Web.HttpApplication.EndRequest>"
  example:
  - "The following two examples demonstrate how to use the HttpApplication class and its events. The first example demonstrates how to create a custom HTTP module and connect an event to it. The second example demonstrates how to modify the Web.config file.  \n  \n The following example demonstrates how to create a custom HTTP module and connect the <xref:System.Web.HttpApplication.AcquireRequestState> event to the HTTP module. HTTP modules intercept each request to Web application resources, thereby allowing you to filter client requests. Any HTTP module that subscribes to an HttpApplication event must implement the <xref:System.Web.IHttpModule> interface.  \n  \n [!code-cs[System.Web.HttpApplication1#1](~/add/codesnippet/csharp/t-system.web.httpapplica_1.cs)]\n [!code-vb[System.Web.HttpApplication1#1](~/add/codesnippet/visualbasic/t-system.web.httpapplica_1.vb)]  \n  \n Before an event in a custom HTTP module can occur, you must modify the configuration settings in the Web.config file to notify ASP.NET about the HTTP module. The following example shows the appropriate configuration setting in the `httpModules` section of the Web.config file. The following setting applies to IIS 7.0 Classic mode and to earlier versions of IIS.  \n  \n```c#  \n<configuration>  \n  <system.web>  \n    <httpModules>  \n      <add type=\"Samples.AspNet.CS.CustomHTTPModule\"  \n        name=\"CustomHttpModule\" />  \n      </httpModules>  \n  </system.web>  \n</configuration>  \n```  \n  \n```vb#  \n<configuration>  \n  <system.web>  \n    <httpModules>  \n      <add type=\"Samples.AspNet.VB.CustomHTTPModule\"  \n        name=\"CustomHttpModule\" />  \n      </httpModules>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following setting applies to IIS 7.0 Integrated mode.  \n  \n```c#  \n<configuration>  \n  <system.webServer>  \n    <modules>  \n      <add type=\"Samples.AspNet.CS.CustomHTTPModule\"  \n        name=\"CustomHttpModule\" />  \n      </modules>  \n  </system.webServer>  \n</configuration>  \n```  \n  \n```vb#  \n<configuration>  \n  <system.webServer>  \n    <modules>  \n      <add type=\"Samples.AspNet.VB.CustomHTTPModule\"  \n        name=\"CustomHttpModule\" />  \n      <modules>  \n  </system.webServer>  \n</configuration>  \n```"
  syntax:
    content: >-
      [System.ComponentModel.ToolboxItem(false)]

      public class HttpApplication : IDisposable, System.ComponentModel.IComponent, System.Web.IHttpAsyncHandler
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.IComponent
  - System.IDisposable
  - System.Web.IHttpAsyncHandler
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpApplication.#ctor
  id: '#ctor'
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: HttpApplication()
  nameWithType: HttpApplication.HttpApplication()
  fullName: System.Web.HttpApplication.HttpApplication()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.HttpApplication&quot;> </xref> classe."
  syntax:
    content: public HttpApplication ();
    parameters: []
  overload: System.Web.HttpApplication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AcquireRequestState
  id: AcquireRequestState
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AcquireRequestState
  nameWithType: HttpApplication.AcquireRequestState
  fullName: System.Web.HttpApplication.AcquireRequestState
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica quando ASP.NET acquisisce lo stato corrente (ad esempio, lo stato della sessione) associato alla richiesta corrente."
  remarks: "Dopo aver creato il gestore dell&quot;evento, viene generato l&quot;evento AcquireRequestState.       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - For an example of handling the AcquireRequestState event, see the <xref:System.Web.HttpApplication> overview topic.
  syntax:
    content: public event EventHandler AcquireRequestState;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnAcquireRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnAcquireRequestStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnAcquireRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnAcquireRequestStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnAuthenticateRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnAuthenticateRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnAuthenticateRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.AuthenticateRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnAuthenticateRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.AuthorizeRequest&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.AuthorizeRequest&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnAuthorizeRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.AuthorizeRequest&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.AuthorizeRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnAuthorizeRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.AuthorizeRequest&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.AuthorizeRequest&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnAuthorizeRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.AuthorizeRequest&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.AuthorizeRequest&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnAuthorizeRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.BeginRequest&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.BeginRequest&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnBeginRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.BeginRequest&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.BeginRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnBeginRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.BeginRequest&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.BeginRequest&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnBeginRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.BeginRequest&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.BeginRequest&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.BeginRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnBeginRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnEndRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnEndRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnEndRequestAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnEndRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnEndRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnEndRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnEndRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnEndRequestAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnEndRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnEndRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnLogRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnLogRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnLogRequestAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref> gestori eventi per la richiesta corrente."
  remarks: "AddOnLogRequestAsync è stato introdotto in .NET Framework versione 3.5.  Per ulteriori informazioni, vedere [versioni e dipendenze](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void AddOnLogRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnLogRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnLogRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnLogRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref> gestori eventi per la richiesta corrente."
  remarks: "AddOnMapRequestHandlerAsync è stato introdotto in .NET Framework versione 3.5.  Per ulteriori informazioni, vedere [versioni e dipendenze](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void AddOnMapRequestHandlerAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnMapRequestHandlerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnMapRequestHandlerAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnMapRequestHandlerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PostAcquireRequestState&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PostAcquireRequestState&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPostAcquireRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostAcquireRequestState&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostAcquireRequestState&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PostAcquireRequestState&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PostAcquireRequestState&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPostAcquireRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostAcquireRequestState&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostAcquireRequestState&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.PostAcquireRequestState&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PostAuthenticateRequest&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PostAuthenticateRequest&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPostAuthenticateRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostAuthenticateRequest&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostAuthenticateRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPostAuthenticateRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPostAuthorizeRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref> alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPostAuthorizeRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.PostAuthorizeRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PostLogRequest&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PostLogRequest&quot;> </xref> gestori eventi per la richiesta corrente."
  remarks: "AddOnPostLogRequestAsync è stato introdotto in .NET Framework versione 3.5.  Per ulteriori informazioni, vedere [versioni e dipendenze](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void AddOnPostLogRequestAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostLogRequest&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostLogRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostLogRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PostLogRequest&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PostLogRequest&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPostLogRequestAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostLogRequest&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostLogRequest&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.PostLogRequest&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostLogRequestAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PostMapRequestHandler&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PostMapRequestHandler&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPostMapRequestHandlerAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostMapRequestHandler&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostMapRequestHandler&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PostMapRequestHandler&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PostMapRequestHandler&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPostMapRequestHandlerAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostMapRequestHandler&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostMapRequestHandler&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.PostMapRequestHandler&quot;> </xref> insieme."
  overload: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PostReleaseRequestState&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PostReleaseRequestState&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPostReleaseRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostReleaseRequestState&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostReleaseRequestState&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PostReleaseRequestState&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PostReleaseRequestState&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPostReleaseRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostReleaseRequestState&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostReleaseRequestState&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.PostReleaseRequestState&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PostRequestHandlerExecute&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PostRequestHandlerExecute&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPostRequestHandlerExecuteAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostRequestHandlerExecute&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostRequestHandlerExecute&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PostRequestHandlerExecute&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PostRequestHandlerExecute&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPostRequestHandlerExecuteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostRequestHandlerExecute&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostRequestHandlerExecute&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.PostRequestHandlerExecute&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PostResolveRequestCache&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PostResolveRequestCache&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPostResolveRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostResolveRequestCache&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostResolveRequestCache&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PostResolveRequestCache&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PostResolveRequestCache&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPostResolveRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostResolveRequestCache&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostResolveRequestCache&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.PostResolveRequestCache&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PostUpdateRequestCache&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PostUpdateRequestCache&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPostUpdateRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostUpdateRequestCache&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostUpdateRequestCache&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PostUpdateRequestCache&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PostUpdateRequestCache&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPostUpdateRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona dell&quot;evento."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PostUpdateRequestCache&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.PostUpdateRequestCache&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PreRequestHandlerExecute&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PreRequestHandlerExecute&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPreRequestHandlerExecuteAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PreRequestHandlerExecute&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PreRequestHandlerExecute&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.PreRequestHandlerExecute&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.PreRequestHandlerExecute&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnPreRequestHandlerExecuteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PreRequestHandlerExecute&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.PreRequestHandlerExecute&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.PreRequestHandlerExecute&quot;> </xref> insieme."
  overload: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.ReleaseRequestState&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.ReleaseRequestState&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnReleaseRequestStateAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.ReleaseRequestState&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.ReleaseRequestState&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnReleaseRequestStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.ReleaseRequestState&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.ReleaseRequestState&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnReleaseRequestStateAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.ReleaseRequestState&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.ReleaseRequestState&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.ReleaseRequestState&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnReleaseRequestStateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.ResolveRequestCache&quot;> </xref> gestore eventi per la raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.ResolveRequestCache&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnResolveRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.ResolveRequestCache&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.ResolveRequestCache&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnResolveRequestCacheAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.ResolveRequestCache&quot;> </xref> gestore eventi per la raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.ResolveRequestCache&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnResolveRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.ResolveRequestCache&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.ResolveRequestCache&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.ResolveRequestCache&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnResolveRequestCacheAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.UpdateRequestCache&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.UpdateRequestCache&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnUpdateRequestCacheAsync (System.Web.BeginEventHandler bh, System.Web.EndEventHandler eh);
    parameters:
    - id: bh
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.UpdateRequestCache&quot;> </xref>."
    - id: eh
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.UpdateRequestCache&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge l&quot;oggetto specificato <xref href=&quot;System.Web.HttpApplication.UpdateRequestCache&quot;> </xref> evento alla raccolta di asincrona <xref href=&quot;System.Web.HttpApplication.UpdateRequestCache&quot;> </xref> gestori eventi per la richiesta corrente."
  syntax:
    content: public void AddOnUpdateRequestCacheAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "Il <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> che avvia l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.UpdateRequestCache&quot;> </xref>."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "Il <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> che termina l&quot;elaborazione asincrona del <xref href=&quot;System.Web.HttpApplication.UpdateRequestCache&quot;> </xref>."
    - id: state
      type: System.Object
      description: "Stato associato da aggiungere all&quot;evento asincrono <xref href=&quot;System.Web.HttpApplication.UpdateRequestCache&quot;> </xref>."
  overload: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Application
  id: Application
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Application
  nameWithType: HttpApplication.Application
  fullName: System.Web.HttpApplication.Application
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene lo stato corrente di un&quot;applicazione."
  remarks: "Lo stato corrente di un&quot;applicazione è costituito da un dizionario chiave-valore degli oggetti a livello di applicazione che è possibile utilizzare per archiviare gli oggetti di .NET Framework sia valori scalari che riguardano più richieste Web da più client."
  syntax:
    content: public System.Web.HttpApplicationState Application { get; }
    return:
      type: System.Web.HttpApplicationState
      description: "Il <xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> per la richiesta corrente."
  overload: System.Web.HttpApplication.Application*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AuthenticateRequest
  id: AuthenticateRequest
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AuthenticateRequest
  nameWithType: HttpApplication.AuthenticateRequest
  fullName: System.Web.HttpApplication.AuthenticateRequest
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica quando un modulo di protezione ha stabilito l&quot;identità dell&quot;utente."
  remarks: "L&quot;evento AuthenticateRequest indica che il meccanismo di autenticazione configurato ha autenticato la richiesta corrente. La sottoscrizione all&quot;evento AuthenticateRequest assicura che la richiesta verrà autenticata prima di elaborare il modulo o un gestore eventi associato.       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler AuthenticateRequest;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.AuthorizeRequest
  id: AuthorizeRequest
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: AuthorizeRequest
  nameWithType: HttpApplication.AuthorizeRequest
  fullName: System.Web.HttpApplication.AuthorizeRequest
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica quando un modulo di protezione è stata verificata l&quot;autorizzazione dell&quot;utente."
  remarks: "L&quot;evento AuthorizeRequest indica che ASP.NET ha autorizzato la richiesta corrente. La sottoscrizione all&quot;evento AuthorizeRequest assicura che la richiesta verrà essere autenticata e autorizzata prima di elaborare il modulo o un gestore eventi associato.       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler AuthorizeRequest;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.BeginRequest
  id: BeginRequest
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: BeginRequest
  nameWithType: HttpApplication.BeginRequest
  fullName: System.Web.HttpApplication.BeginRequest
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica come il primo evento nella catena di esecuzione della pipeline HTTP in risposta a una richiesta ASP.NET."
  remarks: "L&quot;evento BeginRequest indica la creazione di una nuova richiesta specificata. Questo evento viene generato sempre ed è sempre il primo evento a cui si verificano durante l&quot;elaborazione di una richiesta.       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler BeginRequest;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.CompleteRequest
  id: CompleteRequest
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: CompleteRequest()
  nameWithType: HttpApplication.CompleteRequest()
  fullName: System.Web.HttpApplication.CompleteRequest()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Fa sì che ASP.NET ignorare tutti gli eventi e il filtraggio in HTTP catena di esecuzione di pipeline ed eseguire direttamente il <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref> evento."
  syntax:
    content: public void CompleteRequest ();
    parameters: []
  overload: System.Web.HttpApplication.CompleteRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Context
  id: Context
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Context
  nameWithType: HttpApplication.Context
  fullName: System.Web.HttpApplication.Context
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene informazioni specifiche di HTTP sulla richiesta corrente."
  syntax:
    content: public System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "Il <xref href=&quot;System.Web.HttpContext&quot;> </xref> per la richiesta corrente."
  overload: System.Web.HttpApplication.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Dispose
  id: Dispose
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Dispose()
  nameWithType: HttpApplication.Dispose()
  fullName: System.Web.HttpApplication.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Elimina il <xref href=&quot;System.Web.HttpApplication&quot;> </xref> istanza."
  remarks: "Il <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, <xref:System.Web.HttpApplication.Session%2A>, e <xref:System.Web.HttpApplication.Application%2A>proprietà non sono disponibili per l&quot;utilizzo quando viene eseguito il metodo Dispose.</xref:System.Web.HttpApplication.Application%2A> </xref:System.Web.HttpApplication.Session%2A> </xref:System.Web.HttpApplication.Response%2A> </xref:System.Web.HttpApplication.Request%2A>       Le chiamate al metodo Dispose di <xref:System.Web.IHttpModule.Dispose%2A>metodo su ognuna delle proprietà registrate <xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A>nell&quot;istanza dell&quot;applicazione e genera il <xref:System.Web.HttpApplication.Disposed>evento.</xref:System.Web.HttpApplication.Disposed> </xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A> </xref:System.Web.IHttpModule.Dispose%2A>"
  syntax:
    content: public virtual void Dispose ();
    parameters: []
  overload: System.Web.HttpApplication.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Disposed
  id: Disposed
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Disposed
  nameWithType: HttpApplication.Disposed
  fullName: System.Web.HttpApplication.Disposed
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica quando l&quot;applicazione è stato eliminato."
  remarks: "Quando si crea un delegato è stato eliminato, si identifica il metodo che gestisce l&quot;evento. Per associare l&quot;evento al gestore eventi, aggiungere un&quot;istanza di Disposed delegato all&quot;evento. Il gestore eventi viene chiamato ogni volta che si verifica l&quot;evento, a meno che non venga rimosso il delegato è stato eliminato.       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler Disposed;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.EndRequest
  id: EndRequest
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: EndRequest
  nameWithType: HttpApplication.EndRequest
  fullName: System.Web.HttpApplication.EndRequest
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica come ultimo evento della catena di pipeline HTTP dell&quot;esecuzione in risposta a una richiesta ASP.NET."
  remarks: "L&quot;evento EndRequest viene sempre generato quando il <xref:System.Web.HttpApplication.CompleteRequest%2A>metodo viene chiamato.</xref:System.Web.HttpApplication.CompleteRequest%2A>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler EndRequest;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Error
  id: Error
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Error
  nameWithType: HttpApplication.Error
  fullName: System.Web.HttpApplication.Error
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica quando viene generata un&quot;eccezione non gestita."
  remarks: "L&quot;eccezione che genera l&quot;evento di errore accessibili da una chiamata al <xref:System.Web.HttpServerUtility.GetLastError%2A>metodo.</xref:System.Web.HttpServerUtility.GetLastError%2A> Se l&quot;applicazione genera output degli errori personalizzata, eliminare il messaggio di errore predefinito generato da ASP.NET da una chiamata al <xref:System.Web.HttpServerUtility.ClearError%2A>metodo.</xref:System.Web.HttpServerUtility.ClearError%2A>      > [!NOTE] > Se l&quot;applicazione Web contiene servizi Web XML, è possibile utilizzare l&quot;evento di errore per la gestione delle eccezioni globale di tali servizi. Il gestore HTTP per servizi Web XML utilizza qualsiasi eccezione che si verifica in un servizio Web XML e lo converte in un errore SOAP prima dell&quot;errore di chiamata. Per gestire le eccezioni di servizio Web XML, generazione di un&quot;estensione SOAP per elaborare le eccezioni di servizio Web in un gestore eccezioni globale personalizzato.       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler Error;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Events
  id: Events
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Events
  nameWithType: HttpApplication.Events
  fullName: System.Web.HttpApplication.Events
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene l&quot;elenco di eventi delegati del gestore che elaborano tutti gli eventi dell&quot;applicazione."
  syntax:
    content: protected System.ComponentModel.EventHandlerList Events { get; }
    return:
      type: System.ComponentModel.EventHandlerList
      description: "Un <xref href=&quot;System.ComponentModel.EventHandlerList&quot;> </xref> che contiene i nomi dei delegati del gestore eventi."
  overload: System.Web.HttpApplication.Events*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)
  id: GetOutputCacheProviderName(System.Web.HttpContext)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: GetOutputCacheProviderName(HttpContext)
  nameWithType: HttpApplication.GetOutputCacheProviderName(HttpContext)
  fullName: System.Web.HttpApplication.GetOutputCacheProviderName(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene il nome del provider della cache di output predefinito configurato per un sito Web."
  remarks: "È possibile eseguire l&quot;override di questo metodo e usarlo per restituire il nome di qualsiasi provider di cache di output che è configurato per un sito Web. ASP.NET recupera un riferimento per il provider specificato e lo usa per archiviare i dati della cache di output per la richiesta attualmente in esecuzione.       Per impostazione predefinita, in ASP.NET, tutte le risposte HTTP, il rendering delle pagine e controlli, utilizzano la cache di output in memoria. È possibile modificare il provider di cache di output predefinito utilizzato per un&quot;applicazione Web specificando un nome di un provider diverso per `defaultProvider`.       Inoltre, è possibile selezionare il provider della cache di output diversi per singoli controlli e per le singole richieste. È il modo più semplice per scegliere un provider di cache di output diverso per controlli utente Web diversi per eseguire in modo dichiarativo tramite la nuova `providerName` attributo in una direttiva di pagina o controllo, come illustrato nell&quot;esempio seguente: ```   <%@ OutputCache Duration=&quot;60&quot; VaryByParam=&quot;None&quot;        providerName=&quot;DiskCache&quot; %>   ``` per specificare un provider di cache di output diverso per una richiesta HTTP, si esegue l&quot;override di questo metodo nel file Global. asax per specificare a livello di codice il provider da utilizzare per una richiesta specifica. Per ulteriori informazioni, vedere [Cenni preliminari sulla memorizzazione nella cache di ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to programmatically specify the cache provider named `DiskCache` for any HTTP request that goes to the Advanced.aspx page.  \n  \n [Visual Basic]  \n  \n```  \nPublic Overloads Overrides Sub GetOutputCacheProviderName(ByVal context _  \n        As HttpContext) As String   \n    If context.Request.Path.EndsWith(\"Advanced.aspx\") Then   \n        Return \"DiskCache\"   \n    Else   \n        Return MyBase.GetOutputCacheProviderName(context)   \n    End If   \nEnd Sub  \n```  \n  \n```c#  \npublic override string GetOutputCacheProviderName(HttpContext context)  \n{  \n    if (context.Request.Path.EndsWith(\"Advanced.aspx\"))  \n        return \"DiskCache\";  \n    else  \n        return base.GetOutputCacheProviderName(context);  \n}  \n```"
  syntax:
    content: public virtual string GetOutputCacheProviderName (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Un <xref href=&quot;System.Web.HttpContext&quot;> </xref> che fornisce riferimenti agli oggetti intrinseci del server che consentono di gestire le richieste HTTP."
    return:
      type: System.String
      description: "Il nome del provider predefinito."
  overload: System.Web.HttpApplication.GetOutputCacheProviderName*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>context</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o è una stringa vuota."
  platform:
  - net462
- uid: System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)
  id: GetVaryByCustomString(System.Web.HttpContext,System.String)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: GetVaryByCustomString(HttpContext,String)
  nameWithType: HttpApplication.GetVaryByCustomString(HttpContext,String)
  fullName: System.Web.HttpApplication.GetVaryByCustomString(HttpContext,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Fornisce un&quot;implementazione a livello di applicazione del <xref:System.Web.UI.PartialCachingAttribute.VaryByCustom*>proprietà.</xref:System.Web.UI.PartialCachingAttribute.VaryByCustom*>"
  remarks: 'È possibile eseguire l&quot;override di GetVaryByCustomString per aggiungere un nuovo metodo per calcolare i valori personalizzati variare basati sulla richiesta corrente. L&quot;implementazione deve chiamare la classe base per i valori personalizzati che non riconosce. Per ulteriori informazioni, vedere [come: le versioni di Cache di una stringa personalizzata utilizzando pagina](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public virtual string GetVaryByCustomString (System.Web.HttpContext context, string custom);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Un <xref href=&quot;System.Web.HttpContext&quot;> </xref> oggetto che contiene informazioni sulla richiesta Web corrente."
    - id: custom
      type: System.String
      description: "Stringa personalizzata che specifica la risposta memorizzata nella cache verrà utilizzata per rispondere alla richiesta corrente."
    return:
      type: System.String
      description: "Se il valore di <code> custom </code> parametro <xref uid=&quot;langword_csharp_&quot;browser&quot;&quot; name=&quot;&quot;browser&quot;&quot; href=&quot;&quot;> </xref>, il browser <xref:System.Web.Configuration.HttpCapabilitiesBase.Type*>; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Configuration.HttpCapabilitiesBase.Type*>"
  overload: System.Web.HttpApplication.GetVaryByCustomString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Init
  id: Init
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Init()
  nameWithType: HttpApplication.Init()
  fullName: System.Web.HttpApplication.Init()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Esegue il codice di inizializzazione personalizzato dopo essere stati aggiunti tutti i moduli del gestore eventi."
  remarks: "In una classe derivata, è possibile eseguire l&quot;override del metodo Init per aggiungere il codice di inizializzazione personalizzati."
  syntax:
    content: public virtual void Init ();
    parameters: []
  overload: System.Web.HttpApplication.Init*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.LogRequest
  id: LogRequest
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: LogRequest
  nameWithType: HttpApplication.LogRequest
  fullName: System.Web.HttpApplication.LogRequest
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica poco prima che ASP.NET esegua una registrazione per la richiesta corrente."
  remarks: "Anche se si verifica un errore, viene generato l&quot;evento LogRequest. È possibile fornire un gestore eventi per l&quot;evento LogRequest fornire registrazione personalizzata per la richiesta.       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       LogRequest è stato introdotto in .NET Framework versione 3.5.  Per ulteriori informazioni, vedere [versioni e dipendenze](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to provide an event handler for the LogRequest event. The event handler also handles several other events. Therefore, the <xref:System.Web.HttpContext.CurrentNotification%2A> and <xref:System.Web.HttpContext.IsPostNotification%2A> properties are used to determine what code to run.  \n  \n [!code-cs[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/csharp/e-system.web.httpapplica_1.cs)]\n [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/visualbasic/e-system.web.httpapplica_1.vb)]"
  syntax:
    content: public event EventHandler LogRequest;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.MapRequestHandler
  id: MapRequestHandler
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: MapRequestHandler
  nameWithType: HttpApplication.MapRequestHandler
  fullName: System.Web.HttpApplication.MapRequestHandler
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica quando viene selezionato il gestore per rispondere alla richiesta."
  remarks: "L&quot;evento MapRequestHandler viene utilizzato dall&quot;infrastruttura ASP.NET per determinare il gestore di richieste per la richiesta corrente. Per ulteriori informazioni, vedere [procedura: registrare gestori HTTP](~/add/includes/ajax-current-ext-md.md).       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       MapRequestHandler è stato introdotto in .NET Framework versione 3.5.  Per ulteriori informazioni, vedere [versioni e dipendenze](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event EventHandler MapRequestHandler;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Modules
  id: Modules
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Modules
  nameWithType: HttpApplication.Modules
  fullName: System.Web.HttpApplication.Modules
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene la raccolta di moduli per l&quot;applicazione corrente."
  syntax:
    content: public System.Web.HttpModuleCollection Modules { get; }
    return:
      type: System.Web.HttpModuleCollection
      description: "Un <xref href=&quot;System.Web.HttpModuleCollection&quot;> </xref> che contiene i nomi dei moduli per l&quot;applicazione."
  overload: System.Web.HttpApplication.Modules*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PostAcquireRequestState
  id: PostAcquireRequestState
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PostAcquireRequestState
  nameWithType: HttpApplication.PostAcquireRequestState
  fullName: System.Web.HttpApplication.PostAcquireRequestState
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica quando lo stato della richiesta (ad esempio, lo stato della sessione) associato alla richiesta corrente è stato ottenuto."
  remarks: "Viene generato l&quot;evento PostAcquireRequestState dopo il <xref:System.Web.HttpApplication.AcquireRequestState>si è verificato un evento.</xref:System.Web.HttpApplication.AcquireRequestState> La funzionalità che sottoscrive il <xref:System.Web.HttpApplication.AcquireRequestState>eventi possano accedere ai dati che viene elaborati la PostAcquireRequestState.</xref:System.Web.HttpApplication.AcquireRequestState>       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler PostAcquireRequestState;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PostAuthenticateRequest
  id: PostAuthenticateRequest
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PostAuthenticateRequest
  nameWithType: HttpApplication.PostAuthenticateRequest
  fullName: System.Web.HttpApplication.PostAuthenticateRequest
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica quando un modulo di protezione ha stabilito l&quot;identità dell&quot;utente."
  remarks: "Viene generato l&quot;evento PostAuthenticateRequest dopo il <xref:System.Web.HttpApplication.AuthenticateRequest>si è verificato un evento.</xref:System.Web.HttpApplication.AuthenticateRequest> La funzionalità che sottoscrive l&quot;evento PostAuthenticateRequest possa accedere tutti i dati che viene elaborati la PostAuthenticateRequest.       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler PostAuthenticateRequest;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PostAuthorizeRequest
  id: PostAuthorizeRequest
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PostAuthorizeRequest
  nameWithType: HttpApplication.PostAuthorizeRequest
  fullName: System.Web.HttpApplication.PostAuthorizeRequest
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica quando l&quot;utente per la richiesta corrente è stato autorizzato."
  remarks: "L&quot;evento PostAuthorizeRequest indica che ASP.NET ha autorizzato la richiesta corrente. La sottoscrizione all&quot;evento PostAuthorizeRequest assicura l&quot;autenticazione e autorizzazione della richiesta prima dell&quot;elaborazione del modulo collegato o un gestore dell&quot;evento.       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler PostAuthorizeRequest;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PostLogRequest
  id: PostLogRequest
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PostLogRequest
  nameWithType: HttpApplication.PostLogRequest
  fullName: System.Web.HttpApplication.PostLogRequest
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica quando ASP.NET è stata completata l&quot;elaborazione di tutti i gestori eventi per il <xref href=&quot;System.Web.HttpApplication.LogRequest&quot;> </xref> evento."
  remarks: "Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       PostLogRequest è stato introdotto in .NET Framework versione 3.5.  Per ulteriori informazioni, vedere [versioni e dipendenze](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event EventHandler PostLogRequest;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PostMapRequestHandler
  id: PostMapRequestHandler
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PostMapRequestHandler
  nameWithType: HttpApplication.PostMapRequestHandler
  fullName: System.Web.HttpApplication.PostMapRequestHandler
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica quando ASP.NET è eseguito il mapping della richiesta corrente al gestore eventi appropriato."
  remarks: 'Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler PostMapRequestHandler;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PostReleaseRequestState
  id: PostReleaseRequestState
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PostReleaseRequestState
  nameWithType: HttpApplication.PostReleaseRequestState
  fullName: System.Web.HttpApplication.PostReleaseRequestState
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica quando ASP.NET è stata completata l&quot;esecuzione di che tutti i gestori eventi e lo stato della richiesta sono stati archiviati dati della richiesta."
  remarks: 'Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler PostReleaseRequestState;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PostRequestHandlerExecute
  id: PostRequestHandlerExecute
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PostRequestHandlerExecute
  nameWithType: HttpApplication.PostRequestHandlerExecute
  fullName: System.Web.HttpApplication.PostRequestHandlerExecute
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica al termine dell&quot;esecuzione il gestore dell&quot;evento ASP.NET (ad esempio, una pagina o un servizio Web XML)."
  remarks: 'Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler PostRequestHandlerExecute;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PostResolveRequestCache
  id: PostResolveRequestCache
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PostResolveRequestCache
  nameWithType: HttpApplication.PostResolveRequestCache
  fullName: System.Web.HttpApplication.PostResolveRequestCache
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica quando ASP.NET ignora l&quot;esecuzione del gestore dell&quot;evento corrente e consente a un modulo di memorizzazione nella cache soddisfare una richiesta dalla cache."
  remarks: 'Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler PostResolveRequestCache;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PostUpdateRequestCache
  id: PostUpdateRequestCache
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PostUpdateRequestCache
  nameWithType: HttpApplication.PostUpdateRequestCache
  fullName: System.Web.HttpApplication.PostUpdateRequestCache
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica quando ASP.NET completa l&quot;aggiornamento, la memorizzazione nella cache i moduli e la memorizzazione delle risposte che vengono utilizzate per elaborare le richieste successive dalla cache."
  remarks: "Viene generato l&quot;evento PostUpdateRequestCache dopo il <xref:System.Web.HttpApplication.UpdateRequestCache>si è verificato un evento.</xref:System.Web.HttpApplication.UpdateRequestCache> Quando viene generato il PostUpdateRequestCache, ASP.NET ha completato il codice di elaborazione e il contenuto della cache viene finalizzato.       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler PostUpdateRequestCache;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PreRequestHandlerExecute
  id: PreRequestHandlerExecute
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PreRequestHandlerExecute
  nameWithType: HttpApplication.PreRequestHandlerExecute
  fullName: System.Web.HttpApplication.PreRequestHandlerExecute
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica subito prima dell&quot;avvio dell&quot;esecuzione di un gestore eventi (ad esempio, una pagina o un servizio Web XML)."
  remarks: 'Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler PreRequestHandlerExecute;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PreSendRequestContent
  id: PreSendRequestContent
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PreSendRequestContent
  nameWithType: HttpApplication.PreSendRequestContent
  fullName: System.Web.HttpApplication.PreSendRequestContent
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica subito prima ASP.NET invia il contenuto al client."
  remarks: "L&quot;evento PreSendRequestContent può verificarsi più volte.       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler PreSendRequestContent;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.PreSendRequestHeaders
  id: PreSendRequestHeaders
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: PreSendRequestHeaders
  nameWithType: HttpApplication.PreSendRequestHeaders
  fullName: System.Web.HttpApplication.PreSendRequestHeaders
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica subito prima ASP.NET invia intestazioni HTTP al client."
  remarks: 'Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler PreSendRequestHeaders;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.RegisterModule(System.Type)
  id: RegisterModule(System.Type)
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: RegisterModule(Type)
  nameWithType: HttpApplication.RegisterModule(Type)
  fullName: System.Web.HttpApplication.RegisterModule(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Registra un modulo di applicazione."
  syntax:
    content: public static void RegisterModule (Type moduleType);
    parameters:
    - id: moduleType
      type: System.Type
      description: "Il tipo del modulo."
  overload: System.Web.HttpApplication.RegisterModule*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.ReleaseRequestState
  id: ReleaseRequestState
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: ReleaseRequestState
  nameWithType: HttpApplication.ReleaseRequestState
  fullName: System.Web.HttpApplication.ReleaseRequestState
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica al termine dell&quot;esecuzione di tutti i gestori di eventi di richiesta ASP.NET. Questo evento causa stato moduli salvare i dati dello stato corrente."
  remarks: "Quando viene generato l&quot;evento ReleaseRequestState, l&quot;applicazione è stata completata con la richiesta e ASP.NET viene segnalato per archiviare lo stato della richiesta.       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler ReleaseRequestState;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Request
  id: Request
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Request
  nameWithType: HttpApplication.Request
  fullName: System.Web.HttpApplication.Request
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene l&quot;oggetto intrinseco richiesta per la richiesta corrente."
  syntax:
    content: public System.Web.HttpRequest Request { get; }
    return:
      type: System.Web.HttpRequest
      description: "Il <xref href=&quot;System.Web.HttpRequest&quot;> </xref> oggetto in fase di elaborazione."
  overload: System.Web.HttpApplication.Request*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The <xref href=&quot;System.Web.HttpRequest&quot;></xref> object is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpApplication.RequestCompleted
  id: RequestCompleted
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: RequestCompleted
  nameWithType: HttpApplication.RequestCompleted
  fullName: System.Web.HttpApplication.RequestCompleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica quando sono stati rilasciati gli oggetti gestiti che sono associati alla richiesta."
  remarks: "Il RequestCompleted eventi viene chiamato dopo che tutti gestiti i moduli e sono stati chiamati i gestori nella pipeline ASP.NET. In questo modo i moduli pulire le risorse che sono eseguite dopo che tutti i moduli gestiti e i gestori. Usare questo evento, se è necessaria un&quot;ora specifica per eliminare in modo esplicito le risorse gestite creato durante una richiesta."
  syntax:
    content: public event EventHandler RequestCompleted;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.ResolveRequestCache
  id: ResolveRequestCache
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: ResolveRequestCache
  nameWithType: HttpApplication.ResolveRequestCache
  fullName: System.Web.HttpApplication.ResolveRequestCache
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica quando ASP.NET termina un evento di autorizzazione per consentire che il memorizzazione nella cache i moduli di elaborare le richieste dalla cache, ignorando l&quot;esecuzione del gestore dell&quot;evento (ad esempio, una pagina o un servizio Web XML)."
  remarks: 'Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler ResolveRequestCache;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Response
  id: Response
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Response
  nameWithType: HttpApplication.Response
  fullName: System.Web.HttpApplication.Response
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene l&quot;oggetto intrinseco di risposta per la richiesta corrente."
  syntax:
    content: public System.Web.HttpResponse Response { get; }
    return:
      type: System.Web.HttpResponse
      description: "Il <xref href=&quot;System.Web.HttpResponse&quot;> </xref> oggetto in fase di elaborazione."
  overload: System.Web.HttpApplication.Response*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The <xref href=&quot;System.Web.HttpResponse&quot;></xref> object is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpApplication.Server
  id: Server
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Server
  nameWithType: HttpApplication.Server
  fullName: System.Web.HttpApplication.Server
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene l&quot;oggetto intrinseci del server per la richiesta corrente."
  syntax:
    content: public System.Web.HttpServerUtility Server { get; }
    return:
      type: System.Web.HttpServerUtility
      description: "Il <xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> oggetto in fase di elaborazione."
  overload: System.Web.HttpApplication.Server*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.Session
  id: Session
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Session
  nameWithType: HttpApplication.Session
  fullName: System.Web.HttpApplication.Session
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene l&quot;oggetto sessione intrinseco che fornisce l&quot;accesso ai dati della sessione."
  syntax:
    content: public System.Web.SessionState.HttpSessionState Session { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "Il <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref> oggetto per la sessione corrente."
  overload: System.Web.HttpApplication.Session*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;></xref> object is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpApplication.Site
  id: Site
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: Site
  nameWithType: HttpApplication.Site
  fullName: System.Web.HttpApplication.Site
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta un&quot;interfaccia del sito per un <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> implementazione."
  syntax:
    content: public System.ComponentModel.ISite Site { get; set; }
    return:
      type: System.ComponentModel.ISite
      description: "Un <xref href=&quot;System.ComponentModel.ISite&quot;> </xref> oggetto che consente a un contenitore di gestire e comunicare con i componenti figlio."
  overload: System.Web.HttpApplication.Site*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Avvia una chiamata asincrona al gestore dell&quot;evento HTTP."
  syntax:
    content: IAsyncResult IHttpAsyncHandler.BeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Un <xref href=&quot;System.Web.HttpContext&quot;> </xref> che fornisce riferimenti agli oggetti intrinseci del server che consentono di gestire le richieste HTTP."
    - id: cb
      type: System.AsyncCallback
      description: "Il <xref:System.AsyncCallback>da chiamare quando la chiamata del metodo asincrono è completa.</xref:System.AsyncCallback> Se il `cb` parametro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, non viene chiamato il delegato."
    - id: extraData
      type: System.Object
      description: "Eventuali dati aggiuntivi che sono necessario per elaborare la richiesta."
    return:
      type: System.IAsyncResult
      description: "Un <xref:System.IAsyncResult>che contiene informazioni sullo stato del processo.</xref:System.IAsyncResult>"
  overload: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)
  id: System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)
  isEii: true
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  nameWithType: HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Fornisce un processo asincrono <xref uid=&quot;langword_csharp_End&quot; name=&quot;End&quot; href=&quot;&quot;> </xref> metodo al termine del processo."
  remarks: "È possibile utilizzare il metodo IHttpAsyncHandler.EndProcessRequest per generare eventuali eccezioni rilevate durante il processo asincrono."
  syntax:
    content: void IHttpAsyncHandler.EndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Un <xref:System.IAsyncResult>che contiene informazioni sullo stato del processo.</xref:System.IAsyncResult>"
  overload: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable
  id: System#Web#IHttpHandler#IsReusable
  isEii: true
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: System.Web.IHttpHandler.IsReusable
  nameWithType: HttpApplication.System.Web.IHttpHandler.IsReusable
  fullName: System.Web.HttpApplication.System.Web.IHttpHandler.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> valore che indica se è possibile utilizzare un&quot;altra richiesta di <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> oggetto."
  remarks: "Impostare in modo esplicito il `IsReusable` proprietà `true` o `false`, fornire codice che esegue l&quot;override di `IsReusable` accesso alla proprietà."
  syntax:
    content: bool System.Web.IHttpHandler.IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> oggetto è riutilizzabile; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  id: System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  isEii: true
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: System.Web.IHttpHandler.ProcessRequest(HttpContext)
  nameWithType: HttpApplication.System.Web.IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.HttpApplication.System.Web.IHttpHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Abilita l&quot;elaborazione delle richieste HTTP Web da un gestore HTTP personalizzato che implementa il <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interfaccia."
  remarks: "Le classi che ereditano la <xref:System.Web.IHttpModule>e <xref:System.Web.IHttpHandler>sono disponibili interfacce come riferimento a un <xref:System.Web.HttpContext>oggetto per la richiesta HTTP corrente.</xref:System.Web.HttpContext> </xref:System.Web.IHttpHandler> </xref:System.Web.IHttpModule> L&quot;oggetto fornisce accesso alle proprietà intrinseche `Request`, `Response`, e `Server` oggetti per la richiesta."
  syntax:
    content: void IHttpHandler.ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Un <xref href=&quot;System.Web.HttpContext&quot;> </xref> che fornisce riferimenti agli oggetti intrinseci del server che consentono di gestire le richieste HTTP."
  overload: System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "In tutti i casi."
  platform:
  - net462
- uid: System.Web.HttpApplication.UpdateRequestCache
  id: UpdateRequestCache
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: UpdateRequestCache
  nameWithType: HttpApplication.UpdateRequestCache
  fullName: System.Web.HttpApplication.UpdateRequestCache
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Si verifica quando ASP.NET completa l&quot;esecuzione di un gestore eventi per consentire la memorizzazione nella cache i moduli archiviano le risposte che verranno utilizzate per elaborare le richieste successive dalla cache."
  remarks: 'Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler UpdateRequestCache;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpApplication.User
  id: User
  parent: System.Web.HttpApplication
  langs:
  - csharp
  name: User
  nameWithType: HttpApplication.User
  fullName: System.Web.HttpApplication.User
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene l&quot;oggetto intrinseco utente per la richiesta corrente."
  syntax:
    content: public System.Security.Principal.IPrincipal User { get; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "Il <xref:System.Security.Principal.IPrincipal>oggetto che rappresenta l&quot;utente autenticato o anonimo corrente.</xref:System.Security.Principal.IPrincipal>"
  overload: System.Web.HttpApplication.User*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Il <xref:System.Security.Principal.IPrincipal>oggetto <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Principal.IPrincipal>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.HttpApplication.#ctor
  parent: System.Web.HttpApplication
  isExternal: false
  name: HttpApplication()
  nameWithType: HttpApplication.HttpApplication()
  fullName: System.Web.HttpApplication.HttpApplication()
- uid: System.Web.HttpApplication.AcquireRequestState
  parent: System.Web.HttpApplication
  isExternal: false
  name: AcquireRequestState
  nameWithType: HttpApplication.AcquireRequestState
  fullName: System.Web.HttpApplication.AcquireRequestState
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.BeginEventHandler
  parent: System.Web
  isExternal: false
  name: BeginEventHandler
  nameWithType: BeginEventHandler
  fullName: System.Web.BeginEventHandler
- uid: System.Web.EndEventHandler
  parent: System.Web
  isExternal: false
  name: EndEventHandler
  nameWithType: EndEventHandler
  fullName: System.Web.EndEventHandler
- uid: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnBeginRequestAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnEndRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnEndRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnEndRequestAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnEndRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnEndRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnEndRequestAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnLogRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnLogRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnLogRequestAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostLogRequestAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnReleaseRequestStateAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnResolveRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Web.HttpApplication.Application
  parent: System.Web.HttpApplication
  isExternal: false
  name: Application
  nameWithType: HttpApplication.Application
  fullName: System.Web.HttpApplication.Application
- uid: System.Web.HttpApplicationState
  parent: System.Web
  isExternal: false
  name: HttpApplicationState
  nameWithType: HttpApplicationState
  fullName: System.Web.HttpApplicationState
- uid: System.Web.HttpApplication.AuthenticateRequest
  parent: System.Web.HttpApplication
  isExternal: false
  name: AuthenticateRequest
  nameWithType: HttpApplication.AuthenticateRequest
  fullName: System.Web.HttpApplication.AuthenticateRequest
- uid: System.Web.HttpApplication.AuthorizeRequest
  parent: System.Web.HttpApplication
  isExternal: false
  name: AuthorizeRequest
  nameWithType: HttpApplication.AuthorizeRequest
  fullName: System.Web.HttpApplication.AuthorizeRequest
- uid: System.Web.HttpApplication.BeginRequest
  parent: System.Web.HttpApplication
  isExternal: false
  name: BeginRequest
  nameWithType: HttpApplication.BeginRequest
  fullName: System.Web.HttpApplication.BeginRequest
- uid: System.Web.HttpApplication.CompleteRequest
  parent: System.Web.HttpApplication
  isExternal: false
  name: CompleteRequest()
  nameWithType: HttpApplication.CompleteRequest()
  fullName: System.Web.HttpApplication.CompleteRequest()
- uid: System.Web.HttpApplication.Context
  parent: System.Web.HttpApplication
  isExternal: false
  name: Context
  nameWithType: HttpApplication.Context
  fullName: System.Web.HttpApplication.Context
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.HttpApplication.Dispose
  parent: System.Web.HttpApplication
  isExternal: false
  name: Dispose()
  nameWithType: HttpApplication.Dispose()
  fullName: System.Web.HttpApplication.Dispose()
- uid: System.Web.HttpApplication.Disposed
  parent: System.Web.HttpApplication
  isExternal: false
  name: Disposed
  nameWithType: HttpApplication.Disposed
  fullName: System.Web.HttpApplication.Disposed
- uid: System.Web.HttpApplication.EndRequest
  parent: System.Web.HttpApplication
  isExternal: false
  name: EndRequest
  nameWithType: HttpApplication.EndRequest
  fullName: System.Web.HttpApplication.EndRequest
- uid: System.Web.HttpApplication.Error
  parent: System.Web.HttpApplication
  isExternal: false
  name: Error
  nameWithType: HttpApplication.Error
  fullName: System.Web.HttpApplication.Error
- uid: System.Web.HttpApplication.Events
  parent: System.Web.HttpApplication
  isExternal: false
  name: Events
  nameWithType: HttpApplication.Events
  fullName: System.Web.HttpApplication.Events
- uid: System.ComponentModel.EventHandlerList
  parent: System.ComponentModel
  isExternal: false
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
- uid: System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)
  parent: System.Web.HttpApplication
  isExternal: false
  name: GetOutputCacheProviderName(HttpContext)
  nameWithType: HttpApplication.GetOutputCacheProviderName(HttpContext)
  fullName: System.Web.HttpApplication.GetOutputCacheProviderName(HttpContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)
  parent: System.Web.HttpApplication
  isExternal: false
  name: GetVaryByCustomString(HttpContext,String)
  nameWithType: HttpApplication.GetVaryByCustomString(HttpContext,String)
  fullName: System.Web.HttpApplication.GetVaryByCustomString(HttpContext,String)
- uid: System.Web.HttpApplication.Init
  parent: System.Web.HttpApplication
  isExternal: false
  name: Init()
  nameWithType: HttpApplication.Init()
  fullName: System.Web.HttpApplication.Init()
- uid: System.Web.HttpApplication.LogRequest
  parent: System.Web.HttpApplication
  isExternal: false
  name: LogRequest
  nameWithType: HttpApplication.LogRequest
  fullName: System.Web.HttpApplication.LogRequest
- uid: System.Web.HttpApplication.MapRequestHandler
  parent: System.Web.HttpApplication
  isExternal: false
  name: MapRequestHandler
  nameWithType: HttpApplication.MapRequestHandler
  fullName: System.Web.HttpApplication.MapRequestHandler
- uid: System.Web.HttpApplication.Modules
  parent: System.Web.HttpApplication
  isExternal: false
  name: Modules
  nameWithType: HttpApplication.Modules
  fullName: System.Web.HttpApplication.Modules
- uid: System.Web.HttpModuleCollection
  parent: System.Web
  isExternal: false
  name: HttpModuleCollection
  nameWithType: HttpModuleCollection
  fullName: System.Web.HttpModuleCollection
- uid: System.Web.HttpApplication.PostAcquireRequestState
  parent: System.Web.HttpApplication
  isExternal: false
  name: PostAcquireRequestState
  nameWithType: HttpApplication.PostAcquireRequestState
  fullName: System.Web.HttpApplication.PostAcquireRequestState
- uid: System.Web.HttpApplication.PostAuthenticateRequest
  parent: System.Web.HttpApplication
  isExternal: false
  name: PostAuthenticateRequest
  nameWithType: HttpApplication.PostAuthenticateRequest
  fullName: System.Web.HttpApplication.PostAuthenticateRequest
- uid: System.Web.HttpApplication.PostAuthorizeRequest
  parent: System.Web.HttpApplication
  isExternal: false
  name: PostAuthorizeRequest
  nameWithType: HttpApplication.PostAuthorizeRequest
  fullName: System.Web.HttpApplication.PostAuthorizeRequest
- uid: System.Web.HttpApplication.PostLogRequest
  parent: System.Web.HttpApplication
  isExternal: false
  name: PostLogRequest
  nameWithType: HttpApplication.PostLogRequest
  fullName: System.Web.HttpApplication.PostLogRequest
- uid: System.Web.HttpApplication.PostMapRequestHandler
  parent: System.Web.HttpApplication
  isExternal: false
  name: PostMapRequestHandler
  nameWithType: HttpApplication.PostMapRequestHandler
  fullName: System.Web.HttpApplication.PostMapRequestHandler
- uid: System.Web.HttpApplication.PostReleaseRequestState
  parent: System.Web.HttpApplication
  isExternal: false
  name: PostReleaseRequestState
  nameWithType: HttpApplication.PostReleaseRequestState
  fullName: System.Web.HttpApplication.PostReleaseRequestState
- uid: System.Web.HttpApplication.PostRequestHandlerExecute
  parent: System.Web.HttpApplication
  isExternal: false
  name: PostRequestHandlerExecute
  nameWithType: HttpApplication.PostRequestHandlerExecute
  fullName: System.Web.HttpApplication.PostRequestHandlerExecute
- uid: System.Web.HttpApplication.PostResolveRequestCache
  parent: System.Web.HttpApplication
  isExternal: false
  name: PostResolveRequestCache
  nameWithType: HttpApplication.PostResolveRequestCache
  fullName: System.Web.HttpApplication.PostResolveRequestCache
- uid: System.Web.HttpApplication.PostUpdateRequestCache
  parent: System.Web.HttpApplication
  isExternal: false
  name: PostUpdateRequestCache
  nameWithType: HttpApplication.PostUpdateRequestCache
  fullName: System.Web.HttpApplication.PostUpdateRequestCache
- uid: System.Web.HttpApplication.PreRequestHandlerExecute
  parent: System.Web.HttpApplication
  isExternal: false
  name: PreRequestHandlerExecute
  nameWithType: HttpApplication.PreRequestHandlerExecute
  fullName: System.Web.HttpApplication.PreRequestHandlerExecute
- uid: System.Web.HttpApplication.PreSendRequestContent
  parent: System.Web.HttpApplication
  isExternal: false
  name: PreSendRequestContent
  nameWithType: HttpApplication.PreSendRequestContent
  fullName: System.Web.HttpApplication.PreSendRequestContent
- uid: System.Web.HttpApplication.PreSendRequestHeaders
  parent: System.Web.HttpApplication
  isExternal: false
  name: PreSendRequestHeaders
  nameWithType: HttpApplication.PreSendRequestHeaders
  fullName: System.Web.HttpApplication.PreSendRequestHeaders
- uid: System.Web.HttpApplication.RegisterModule(System.Type)
  parent: System.Web.HttpApplication
  isExternal: false
  name: RegisterModule(Type)
  nameWithType: HttpApplication.RegisterModule(Type)
  fullName: System.Web.HttpApplication.RegisterModule(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.HttpApplication.ReleaseRequestState
  parent: System.Web.HttpApplication
  isExternal: false
  name: ReleaseRequestState
  nameWithType: HttpApplication.ReleaseRequestState
  fullName: System.Web.HttpApplication.ReleaseRequestState
- uid: System.Web.HttpApplication.Request
  parent: System.Web.HttpApplication
  isExternal: false
  name: Request
  nameWithType: HttpApplication.Request
  fullName: System.Web.HttpApplication.Request
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.HttpApplication.RequestCompleted
  parent: System.Web.HttpApplication
  isExternal: false
  name: RequestCompleted
  nameWithType: HttpApplication.RequestCompleted
  fullName: System.Web.HttpApplication.RequestCompleted
- uid: System.Web.HttpApplication.ResolveRequestCache
  parent: System.Web.HttpApplication
  isExternal: false
  name: ResolveRequestCache
  nameWithType: HttpApplication.ResolveRequestCache
  fullName: System.Web.HttpApplication.ResolveRequestCache
- uid: System.Web.HttpApplication.Response
  parent: System.Web.HttpApplication
  isExternal: false
  name: Response
  nameWithType: HttpApplication.Response
  fullName: System.Web.HttpApplication.Response
- uid: System.Web.HttpResponse
  parent: System.Web
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
- uid: System.Web.HttpApplication.Server
  parent: System.Web.HttpApplication
  isExternal: false
  name: Server
  nameWithType: HttpApplication.Server
  fullName: System.Web.HttpApplication.Server
- uid: System.Web.HttpServerUtility
  parent: System.Web
  isExternal: false
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
- uid: System.Web.HttpApplication.Session
  parent: System.Web.HttpApplication
  isExternal: false
  name: Session
  nameWithType: HttpApplication.Session
  fullName: System.Web.HttpApplication.Session
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.HttpApplication.Site
  parent: System.Web.HttpApplication
  isExternal: false
  name: Site
  nameWithType: HttpApplication.Site
  fullName: System.Web.HttpApplication.Site
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.HttpApplication
  isExternal: false
  name: System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)
  parent: System.Web.HttpApplication
  isExternal: false
  name: System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  nameWithType: HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
- uid: System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable
  parent: System.Web.HttpApplication
  isExternal: false
  name: System.Web.IHttpHandler.IsReusable
  nameWithType: HttpApplication.System.Web.IHttpHandler.IsReusable
  fullName: System.Web.HttpApplication.System.Web.IHttpHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)
  parent: System.Web.HttpApplication
  isExternal: false
  name: System.Web.IHttpHandler.ProcessRequest(HttpContext)
  nameWithType: HttpApplication.System.Web.IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.HttpApplication.System.Web.IHttpHandler.ProcessRequest(HttpContext)
- uid: System.Web.HttpApplication.UpdateRequestCache
  parent: System.Web.HttpApplication
  isExternal: false
  name: UpdateRequestCache
  nameWithType: HttpApplication.UpdateRequestCache
  fullName: System.Web.HttpApplication.UpdateRequestCache
- uid: System.Web.HttpApplication.User
  parent: System.Web.HttpApplication
  isExternal: false
  name: User
  nameWithType: HttpApplication.User
  fullName: System.Web.HttpApplication.User
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.HttpApplication.#ctor*
  parent: System.Web.HttpApplication
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication.HttpApplication
- uid: System.Web.HttpApplication.AddOnAcquireRequestStateAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnAcquireRequestStateAsync
  nameWithType: HttpApplication.AddOnAcquireRequestStateAsync
- uid: System.Web.HttpApplication.AddOnAuthenticateRequestAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnAuthenticateRequestAsync
  nameWithType: HttpApplication.AddOnAuthenticateRequestAsync
- uid: System.Web.HttpApplication.AddOnAuthorizeRequestAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnAuthorizeRequestAsync
  nameWithType: HttpApplication.AddOnAuthorizeRequestAsync
- uid: System.Web.HttpApplication.AddOnBeginRequestAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnBeginRequestAsync
  nameWithType: HttpApplication.AddOnBeginRequestAsync
- uid: System.Web.HttpApplication.AddOnEndRequestAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnEndRequestAsync
  nameWithType: HttpApplication.AddOnEndRequestAsync
- uid: System.Web.HttpApplication.AddOnLogRequestAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnLogRequestAsync
  nameWithType: HttpApplication.AddOnLogRequestAsync
- uid: System.Web.HttpApplication.AddOnMapRequestHandlerAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnMapRequestHandlerAsync
  nameWithType: HttpApplication.AddOnMapRequestHandlerAsync
- uid: System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostAcquireRequestStateAsync
  nameWithType: HttpApplication.AddOnPostAcquireRequestStateAsync
- uid: System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostAuthenticateRequestAsync
  nameWithType: HttpApplication.AddOnPostAuthenticateRequestAsync
- uid: System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostAuthorizeRequestAsync
  nameWithType: HttpApplication.AddOnPostAuthorizeRequestAsync
- uid: System.Web.HttpApplication.AddOnPostLogRequestAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostLogRequestAsync
  nameWithType: HttpApplication.AddOnPostLogRequestAsync
- uid: System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostMapRequestHandlerAsync
  nameWithType: HttpApplication.AddOnPostMapRequestHandlerAsync
- uid: System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostReleaseRequestStateAsync
  nameWithType: HttpApplication.AddOnPostReleaseRequestStateAsync
- uid: System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostRequestHandlerExecuteAsync
  nameWithType: HttpApplication.AddOnPostRequestHandlerExecuteAsync
- uid: System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostResolveRequestCacheAsync
  nameWithType: HttpApplication.AddOnPostResolveRequestCacheAsync
- uid: System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPostUpdateRequestCacheAsync
  nameWithType: HttpApplication.AddOnPostUpdateRequestCacheAsync
- uid: System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnPreRequestHandlerExecuteAsync
  nameWithType: HttpApplication.AddOnPreRequestHandlerExecuteAsync
- uid: System.Web.HttpApplication.AddOnReleaseRequestStateAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnReleaseRequestStateAsync
  nameWithType: HttpApplication.AddOnReleaseRequestStateAsync
- uid: System.Web.HttpApplication.AddOnResolveRequestCacheAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnResolveRequestCacheAsync
  nameWithType: HttpApplication.AddOnResolveRequestCacheAsync
- uid: System.Web.HttpApplication.AddOnUpdateRequestCacheAsync*
  parent: System.Web.HttpApplication
  isExternal: false
  name: AddOnUpdateRequestCacheAsync
  nameWithType: HttpApplication.AddOnUpdateRequestCacheAsync
- uid: System.Web.HttpApplication.Application*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Application
  nameWithType: HttpApplication.Application
- uid: System.Web.HttpApplication.CompleteRequest*
  parent: System.Web.HttpApplication
  isExternal: false
  name: CompleteRequest
  nameWithType: HttpApplication.CompleteRequest
- uid: System.Web.HttpApplication.Context*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Context
  nameWithType: HttpApplication.Context
- uid: System.Web.HttpApplication.Dispose*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Dispose
  nameWithType: HttpApplication.Dispose
- uid: System.Web.HttpApplication.Events*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Events
  nameWithType: HttpApplication.Events
- uid: System.Web.HttpApplication.GetOutputCacheProviderName*
  parent: System.Web.HttpApplication
  isExternal: false
  name: GetOutputCacheProviderName
  nameWithType: HttpApplication.GetOutputCacheProviderName
- uid: System.Web.HttpApplication.GetVaryByCustomString*
  parent: System.Web.HttpApplication
  isExternal: false
  name: GetVaryByCustomString
  nameWithType: HttpApplication.GetVaryByCustomString
- uid: System.Web.HttpApplication.Init*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Init
  nameWithType: HttpApplication.Init
- uid: System.Web.HttpApplication.Modules*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Modules
  nameWithType: HttpApplication.Modules
- uid: System.Web.HttpApplication.RegisterModule*
  parent: System.Web.HttpApplication
  isExternal: false
  name: RegisterModule
  nameWithType: HttpApplication.RegisterModule
- uid: System.Web.HttpApplication.Request*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Request
  nameWithType: HttpApplication.Request
- uid: System.Web.HttpApplication.Response*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Response
  nameWithType: HttpApplication.Response
- uid: System.Web.HttpApplication.Server*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Server
  nameWithType: HttpApplication.Server
- uid: System.Web.HttpApplication.Session*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Session
  nameWithType: HttpApplication.Session
- uid: System.Web.HttpApplication.Site*
  parent: System.Web.HttpApplication
  isExternal: false
  name: Site
  nameWithType: HttpApplication.Site
- uid: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest*
  parent: System.Web.HttpApplication
  isExternal: false
  name: System.Web.IHttpAsyncHandler.BeginProcessRequest
  nameWithType: HttpApplication.System.Web.IHttpAsyncHandler.BeginProcessRequest
- uid: System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest*
  parent: System.Web.HttpApplication
  isExternal: false
  name: System.Web.IHttpAsyncHandler.EndProcessRequest
  nameWithType: HttpApplication.System.Web.IHttpAsyncHandler.EndProcessRequest
- uid: System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable*
  parent: System.Web.HttpApplication
  isExternal: false
  name: System.Web.IHttpHandler.IsReusable
  nameWithType: HttpApplication.System.Web.IHttpHandler.IsReusable
- uid: System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest*
  parent: System.Web.HttpApplication
  isExternal: false
  name: System.Web.IHttpHandler.ProcessRequest
  nameWithType: HttpApplication.System.Web.IHttpHandler.ProcessRequest
- uid: System.Web.HttpApplication.User*
  parent: System.Web.HttpApplication
  isExternal: false
  name: User
  nameWithType: HttpApplication.User
