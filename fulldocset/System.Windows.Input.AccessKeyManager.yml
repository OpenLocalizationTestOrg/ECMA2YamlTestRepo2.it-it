### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.AccessKeyManager
  id: AccessKeyManager
  children:
  - System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
  - System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  - System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)
  - System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)
  - System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)
  - System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  - System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)
  langs:
  - csharp
  name: AccessKeyManager
  nameWithType: AccessKeyManager
  fullName: System.Windows.Input.AccessKeyManager
  type: Class
  summary: "Gestisce la registrazione di tutte le chiavi di accesso e la gestione dei comandi da tastiera interop tra [!INCLUDE[TLA#tla_winforms](~/add/includes/ajax-current-ext-md.md)], [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)], e [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]."
  remarks: "Viene creato un oggetto di AccessKeyManager su richiesta con uno per <xref:System.Windows.Threading.Dispatcher>.</xref:System.Windows.Threading.Dispatcher>       Il AccessKeyManager viene allegato come gestore eventi per <xref:System.Windows.Input.InputManager.PostProcessInput>ed espone metodi per <xref:System.Windows.Input.AccessKeyManager.Register%2A>e <xref:System.Windows.Input.AccessKeyManager.Unregister%2A>le chiavi di accesso.</xref:System.Windows.Input.AccessKeyManager.Unregister%2A> </xref:System.Windows.Input.AccessKeyManager.Register%2A> </xref:System.Windows.Input.InputManager.PostProcessInput>       Quando viene premuto il tasto di scelta registrato, le chiamate AccessKeyManager il <xref:System.Windows.UIElement.OnAccessKey%2A>metodo sull&quot;elemento di destinazione.</xref:System.Windows.UIElement.OnAccessKey%2A>       Un elemento può essere associato a un numero qualsiasi di chiavi di accesso."
  syntax:
    content: public sealed class AccessKeyManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
  id: AccessKeyPressedEvent
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: AccessKeyPressedEvent
  nameWithType: AccessKeyManager.AccessKeyPressedEvent
  fullName: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Identifica il <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>dell&quot;evento indirizzato.</xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>"
  syntax:
    content: public static readonly System.Windows.RoutedEvent AccessKeyPressedEvent;
    return:
      type: System.Windows.RoutedEvent
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  id: AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  nameWithType: AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  fullName: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Aggiunge un gestore per il <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>evento associato.</xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>"
  syntax:
    content: public static void AddAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Il <xref href=&quot;System.Windows.UIElement&quot;> </xref> o <xref href=&quot;System.Windows.ContentElement&quot;> </xref> in ascolto su questo evento."
    - id: handler
      type: System.Windows.Input.AccessKeyPressedEventHandler
      description: "Il gestore dell&quot;evento da aggiungere."
  overload: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)
  id: IsKeyRegistered(System.Object,System.String)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: IsKeyRegistered(Object,String)
  nameWithType: AccessKeyManager.IsKeyRegistered(Object,String)
  fullName: System.Windows.Input.AccessKeyManager.IsKeyRegistered(Object,String)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Indica se il tasto specificato è registrato come tasto di scelta nell&quot;ambito specificato."
  syntax:
    content: public static bool IsKeyRegistered (object scope, string key);
    parameters:
    - id: scope
      type: System.Object
      description: "Origine della presentazione per eseguire query per `key`."
    - id: key
      type: System.String
      description: "La chiave di query."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il tasto è registrato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Input.AccessKeyManager.IsKeyRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)
  id: ProcessKey(System.Object,System.String,System.Boolean)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: ProcessKey(Object,String,Boolean)
  nameWithType: AccessKeyManager.ProcessKey(Object,String,Boolean)
  fullName: System.Windows.Input.AccessKeyManager.ProcessKey(Object,String,Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Elabora i tasti di scelta specificati come se un <xref href=&quot;System.Windows.UIElement.KeyDown&quot;> </xref> evento per la chiave è stato passato il <xref href=&quot;System.Windows.Input.AccessKeyManager&quot;> </xref>."
  syntax:
    content: public static bool ProcessKey (object scope, string key, bool isMultiple);
    parameters:
    - id: scope
      type: System.Object
      description: "L&quot;ambito per la chiave di accesso."
    - id: key
      type: System.String
      description: "La chiave di accesso."
    - id: isMultiple
      type: System.Boolean
      description: "Indica se `key` ha più corrispondenze."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se sono presenti più tasti corrispondenti. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Input.AccessKeyManager.ProcessKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)
  id: Register(System.String,System.Windows.IInputElement)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: Register(String,IInputElement)
  nameWithType: AccessKeyManager.Register(String,IInputElement)
  fullName: System.Windows.Input.AccessKeyManager.Register(String,IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Associa le chiavi di accesso specificato con l&quot;elemento specificato."
  remarks: "Quando viene premuto le chiavi di accesso, il <xref:System.Windows.UIElement.OnAccessKey%2A>metodo `element` viene chiamato.</xref:System.Windows.UIElement.OnAccessKey%2A>       Un elemento può essere associato a un numero qualsiasi di chiavi di accesso."
  syntax:
    content: public static void Register (string key, System.Windows.IInputElement element);
    parameters:
    - id: key
      type: System.String
      description: "La chiave di accesso."
    - id: element
      type: System.Windows.IInputElement
      description: "Elemento da associare `key` con."
  overload: System.Windows.Input.AccessKeyManager.Register*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  id: RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  nameWithType: AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  fullName: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Rimuove l&quot;oggetto specificato <xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>gestore dell&quot;evento dall&quot;oggetto specificato.</xref:System.Windows.Input.AccessKeyManager.AccessKeyPressed>"
  syntax:
    content: public static void RemoveAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);
    parameters:
    - id: element
      type: System.Windows.DependencyObject
      description: "Il <xref href=&quot;System.Windows.UIElement&quot;> </xref> o <xref href=&quot;System.Windows.ContentElement&quot;> </xref> in ascolto su questo evento."
    - id: handler
      type: System.Windows.Input.AccessKeyPressedEventHandler
      description: "Il gestore eventi da rimuovere."
  overload: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)
  id: Unregister(System.String,System.Windows.IInputElement)
  parent: System.Windows.Input.AccessKeyManager
  langs:
  - csharp
  name: Unregister(String,IInputElement)
  nameWithType: AccessKeyManager.Unregister(String,IInputElement)
  fullName: System.Windows.Input.AccessKeyManager.Unregister(String,IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Rimuove l&quot;associazione di chiavi di accesso specificato dall&quot;elemento specificato."
  syntax:
    content: public static void Unregister (string key, System.Windows.IInputElement element);
    parameters:
    - id: key
      type: System.String
      description: "La chiave di accesso."
    - id: element
      type: System.Windows.IInputElement
      description: "Elemento da cui rimuovere l&quot;associazione `key`."
  overload: System.Windows.Input.AccessKeyManager.Unregister*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: AccessKeyPressedEvent
  nameWithType: AccessKeyManager.AccessKeyPressedEvent
  fullName: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  nameWithType: AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  fullName: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Input.AccessKeyPressedEventHandler
  parent: System.Windows.Input
  isExternal: false
  name: AccessKeyPressedEventHandler
  nameWithType: AccessKeyPressedEventHandler
  fullName: System.Windows.Input.AccessKeyPressedEventHandler
- uid: System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: IsKeyRegistered(Object,String)
  nameWithType: AccessKeyManager.IsKeyRegistered(Object,String)
  fullName: System.Windows.Input.AccessKeyManager.IsKeyRegistered(Object,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: ProcessKey(Object,String,Boolean)
  nameWithType: AccessKeyManager.ProcessKey(Object,String,Boolean)
  fullName: System.Windows.Input.AccessKeyManager.ProcessKey(Object,String,Boolean)
- uid: System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: Register(String,IInputElement)
  nameWithType: AccessKeyManager.Register(String,IInputElement)
  fullName: System.Windows.Input.AccessKeyManager.Register(String,IInputElement)
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  nameWithType: AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
  fullName: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject,AccessKeyPressedEventHandler)
- uid: System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: Unregister(String,IInputElement)
  nameWithType: AccessKeyManager.Unregister(String,IInputElement)
  fullName: System.Windows.Input.AccessKeyManager.Unregister(String,IInputElement)
- uid: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler*
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: AddAccessKeyPressedHandler
  nameWithType: AccessKeyManager.AddAccessKeyPressedHandler
- uid: System.Windows.Input.AccessKeyManager.IsKeyRegistered*
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: IsKeyRegistered
  nameWithType: AccessKeyManager.IsKeyRegistered
- uid: System.Windows.Input.AccessKeyManager.ProcessKey*
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: ProcessKey
  nameWithType: AccessKeyManager.ProcessKey
- uid: System.Windows.Input.AccessKeyManager.Register*
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: Register
  nameWithType: AccessKeyManager.Register
- uid: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler*
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: RemoveAccessKeyPressedHandler
  nameWithType: AccessKeyManager.RemoveAccessKeyPressedHandler
- uid: System.Windows.Input.AccessKeyManager.Unregister*
  parent: System.Windows.Input.AccessKeyManager
  isExternal: false
  name: Unregister
  nameWithType: AccessKeyManager.Unregister
