### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.MaskGenerationMethod
  id: MaskGenerationMethod
  children:
  - System.Security.Cryptography.MaskGenerationMethod.#ctor
  - System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)
  langs:
  - csharp
  name: MaskGenerationMethod
  nameWithType: MaskGenerationMethod
  fullName: System.Security.Cryptography.MaskGenerationMethod
  type: Class
  summary: "Rappresenta la classe astratta dalla quale devono derivare tutti gli algoritmi di generazione di maschera."
  remarks: "Le classi derivate di MaskGenerationMethod consente di calcolare le maschere utilizzate negli algoritmi di scambio di chiave, ad esempio crittografia riempimento OAEP (Optimal Asymmetric).       Questa classe viene utilizzata dalle implementazioni di algoritmi di scambio di chiave solo per la generazione di maschera. Il codice dell&quot;applicazione non utilizza questa classe direttamente."
  example:
  - "The following code example demonstrates how to derive from the MaskGenerationMethod class.  \n  \n [!code-cs[System.Security.Cryptography.MaskGenerationMethod#1](~/add/codesnippet/csharp/t-system.security.crypto_119_1.cs)]\n [!code-cpp[System.Security.Cryptography.MaskGenerationMethod#1](~/add/codesnippet/cpp/t-system.security.crypto_119_1.cpp)]\n [!code-vb[System.Security.Cryptography.MaskGenerationMethod#1](~/add/codesnippet/visualbasic/t-system.security.crypto_119_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class MaskGenerationMethod
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.MaskGenerationMethod.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.MaskGenerationMethod
  langs:
  - csharp
  name: MaskGenerationMethod()
  nameWithType: MaskGenerationMethod.MaskGenerationMethod()
  fullName: System.Security.Cryptography.MaskGenerationMethod.MaskGenerationMethod()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.MaskGenerationMethod&quot;> </xref> classe."
  syntax:
    content: protected MaskGenerationMethod ();
    parameters: []
  overload: System.Security.Cryptography.MaskGenerationMethod.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)
  id: GenerateMask(System.Byte[],System.Int32)
  parent: System.Security.Cryptography.MaskGenerationMethod
  langs:
  - csharp
  name: GenerateMask(Byte[],Int32)
  nameWithType: MaskGenerationMethod.GenerateMask(Byte[],Int32)
  fullName: System.Security.Cryptography.MaskGenerationMethod.GenerateMask(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Quando sottoposto a override in una classe derivata, genera una maschera con la lunghezza specificata usando il seed casuale specificato."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the GenerateMask to create and return a mask using the specified seed. This code example is part of a larger example provided for the <xref:System.Security.Cryptography.MaskGenerationMethod> class.  \n  \n System.Security.Cryptography.MaskGenerationMethod#3"
  syntax:
    content: public abstract byte[] GenerateMask (byte[] rgbSeed, int cbReturn);
    parameters:
    - id: rgbSeed
      type: System.Byte[]
      description: "Il valore di inizializzazione casuale da usare per calcolare la maschera."
    - id: cbReturn
      type: System.Int32
      description: "La lunghezza della maschera generata in byte."
    return:
      type: System.Byte[]
      description: "Una maschera generata in modo casuale la cui lunghezza Ã¨ uguale al <code> cbReturn </code> parametro."
  overload: System.Security.Cryptography.MaskGenerationMethod.GenerateMask*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.MaskGenerationMethod.#ctor
  parent: System.Security.Cryptography.MaskGenerationMethod
  isExternal: false
  name: MaskGenerationMethod()
  nameWithType: MaskGenerationMethod.MaskGenerationMethod()
  fullName: System.Security.Cryptography.MaskGenerationMethod.MaskGenerationMethod()
- uid: System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)
  parent: System.Security.Cryptography.MaskGenerationMethod
  isExternal: false
  name: GenerateMask(Byte[],Int32)
  nameWithType: MaskGenerationMethod.GenerateMask(Byte[],Int32)
  fullName: System.Security.Cryptography.MaskGenerationMethod.GenerateMask(Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.MaskGenerationMethod.#ctor*
  parent: System.Security.Cryptography.MaskGenerationMethod
  isExternal: false
  name: MaskGenerationMethod
  nameWithType: MaskGenerationMethod.MaskGenerationMethod
- uid: System.Security.Cryptography.MaskGenerationMethod.GenerateMask*
  parent: System.Security.Cryptography.MaskGenerationMethod
  isExternal: false
  name: GenerateMask
  nameWithType: MaskGenerationMethod.GenerateMask
