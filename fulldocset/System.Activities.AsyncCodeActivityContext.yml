### YamlMime:ManagedReference
items:
- uid: System.Activities.AsyncCodeActivityContext
  id: AsyncCodeActivityContext
  children:
  - System.Activities.AsyncCodeActivityContext.IsCancellationRequested
  - System.Activities.AsyncCodeActivityContext.MarkCanceled
  - System.Activities.AsyncCodeActivityContext.UserState
  langs:
  - csharp
  name: AsyncCodeActivityContext
  nameWithType: AsyncCodeActivityContext
  fullName: System.Activities.AsyncCodeActivityContext
  type: Class
  summary: "Il contesto di esecuzione per un&quot;attività asincrona."
  remarks: "Questa è una classe sealed e derivata da <xref:System.Activities.CodeActivityContext>.</xref:System.Activities.CodeActivityContext>"
  syntax:
    content: 'public sealed class AsyncCodeActivityContext : System.Activities.CodeActivityContext'
  inheritance:
  - System.Object
  - System.Activities.ActivityContext
  - System.Activities.CodeActivityContext
  implements: []
  inheritedMembers:
  - System.Activities.ActivityContext.ActivityInstanceId
  - System.Activities.ActivityContext.DataContext
  - System.Activities.ActivityContext.GetExtension``1
  - System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)
  - System.Activities.ActivityContext.GetValue(System.Activities.Argument)
  - System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)
  - System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument`1)
  - System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument`1)
  - System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)
  - System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument`1)
  - System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)
  - System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument`1,``0)
  - System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument`1,``0)
  - System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)
  - System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument`1,``0)
  - System.Activities.ActivityContext.WorkflowInstanceId
  - System.Activities.CodeActivityContext.GetProperty``1
  - System.Activities.CodeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivityContext.IsCancellationRequested
  id: IsCancellationRequested
  parent: System.Activities.AsyncCodeActivityContext
  langs:
  - csharp
  name: IsCancellationRequested
  nameWithType: AsyncCodeActivityContext.IsCancellationRequested
  fullName: System.Activities.AsyncCodeActivityContext.IsCancellationRequested
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene un valore che indica se attualmente in esecuzione <xref href=&quot;System.Activities.AsyncCodeActivity&quot;> </xref> deve essere annullato."
  syntax:
    content: public bool IsCancellationRequested { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se attualmente in esecuzione <xref href=&quot;System.Activities.AsyncCodeActivity&quot;> </xref> deve essere annullata; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.AsyncCodeActivityContext.IsCancellationRequested*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivityContext.MarkCanceled
  id: MarkCanceled
  parent: System.Activities.AsyncCodeActivityContext
  langs:
  - csharp
  name: MarkCanceled()
  nameWithType: AsyncCodeActivityContext.MarkCanceled()
  fullName: System.Activities.AsyncCodeActivityContext.MarkCanceled()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Contrassegna l&quot;istanza corrente dell&quot;attività come annullata."
  syntax:
    content: public void MarkCanceled ();
    parameters: []
  overload: System.Activities.AsyncCodeActivityContext.MarkCanceled*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.AsyncCodeActivityContext.UserState
  id: UserState
  parent: System.Activities.AsyncCodeActivityContext
  langs:
  - csharp
  name: UserState
  nameWithType: AsyncCodeActivityContext.UserState
  fullName: System.Activities.AsyncCodeActivityContext.UserState
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene o imposta un oggetto definito dall&quot;utente associato all&quot;attività asincrona corrente."
  syntax:
    content: public object UserState { get; set; }
    return:
      type: System.Object
      description: "Oggetto definito dall&quot;utente."
  overload: System.Activities.AsyncCodeActivityContext.UserState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.CodeActivityContext
  isExternal: false
  name: System.Activities.CodeActivityContext
- uid: System.Activities.AsyncCodeActivityContext.IsCancellationRequested
  parent: System.Activities.AsyncCodeActivityContext
  isExternal: false
  name: IsCancellationRequested
  nameWithType: AsyncCodeActivityContext.IsCancellationRequested
  fullName: System.Activities.AsyncCodeActivityContext.IsCancellationRequested
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.AsyncCodeActivityContext.MarkCanceled
  parent: System.Activities.AsyncCodeActivityContext
  isExternal: false
  name: MarkCanceled()
  nameWithType: AsyncCodeActivityContext.MarkCanceled()
  fullName: System.Activities.AsyncCodeActivityContext.MarkCanceled()
- uid: System.Activities.AsyncCodeActivityContext.UserState
  parent: System.Activities.AsyncCodeActivityContext
  isExternal: false
  name: UserState
  nameWithType: AsyncCodeActivityContext.UserState
  fullName: System.Activities.AsyncCodeActivityContext.UserState
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.AsyncCodeActivityContext.IsCancellationRequested*
  parent: System.Activities.AsyncCodeActivityContext
  isExternal: false
  name: IsCancellationRequested
  nameWithType: AsyncCodeActivityContext.IsCancellationRequested
- uid: System.Activities.AsyncCodeActivityContext.MarkCanceled*
  parent: System.Activities.AsyncCodeActivityContext
  isExternal: false
  name: MarkCanceled
  nameWithType: AsyncCodeActivityContext.MarkCanceled
- uid: System.Activities.AsyncCodeActivityContext.UserState*
  parent: System.Activities.AsyncCodeActivityContext
  isExternal: false
  name: UserState
  nameWithType: AsyncCodeActivityContext.UserState
