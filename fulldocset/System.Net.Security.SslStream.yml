### YamlMime:ManagedReference
items:
- uid: System.Net.Security.SslStream
  id: SslStream
  children:
  - System.Net.Security.SslStream.#ctor(System.IO.Stream)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.CanRead
  - System.Net.Security.SslStream.CanSeek
  - System.Net.Security.SslStream.CanTimeout
  - System.Net.Security.SslStream.CanWrite
  - System.Net.Security.SslStream.CheckCertRevocationStatus
  - System.Net.Security.SslStream.CipherAlgorithm
  - System.Net.Security.SslStream.CipherStrength
  - System.Net.Security.SslStream.Dispose(System.Boolean)
  - System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  - System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  - System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  - System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  - System.Net.Security.SslStream.Flush
  - System.Net.Security.SslStream.HashAlgorithm
  - System.Net.Security.SslStream.HashStrength
  - System.Net.Security.SslStream.IsAuthenticated
  - System.Net.Security.SslStream.IsEncrypted
  - System.Net.Security.SslStream.IsMutuallyAuthenticated
  - System.Net.Security.SslStream.IsServer
  - System.Net.Security.SslStream.IsSigned
  - System.Net.Security.SslStream.KeyExchangeAlgorithm
  - System.Net.Security.SslStream.KeyExchangeStrength
  - System.Net.Security.SslStream.Length
  - System.Net.Security.SslStream.LocalCertificate
  - System.Net.Security.SslStream.Position
  - System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.ReadTimeout
  - System.Net.Security.SslStream.RemoteCertificate
  - System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Net.Security.SslStream.SetLength(System.Int64)
  - System.Net.Security.SslStream.SslProtocol
  - System.Net.Security.SslStream.TransportContext
  - System.Net.Security.SslStream.Write(System.Byte[])
  - System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.WriteTimeout
  langs:
  - csharp
  name: SslStream
  nameWithType: SslStream
  fullName: System.Net.Security.SslStream
  type: Class
  summary: "Fornisce un flusso usato per la comunicazione client-server che utilizza il protocollo di sicurezza Secure Socket Layer (SSL) per autenticare il server e, facoltativamente, il client."
  remarks: "I protocolli SSL consentono di fornire la riservatezza e integrità la verifica dei messaggi trasmessi utilizzando un SslStream. Una connessione SSL, ad esempio quella fornita da SslStream, deve essere utilizzata durante la comunicazione di informazioni riservate tra un client e un server. Utilizzo di un SslStream consente di impedire a chiunque di lettura e alterati mentre sono in transito sulla rete.       Un&quot;istanza di SslStream trasmette i dati utilizzando un flusso che viene fornito quando si crea il SslStream. Quando si fornisce questo flusso sottostante, è possibile specificare se la chiusura di SslStream chiude il flusso sottostante. In genere, la classe SslStream viene utilizzata con il <xref:System.Net.Sockets.TcpClient>e <xref:System.Net.Sockets.TcpListener>classi.</xref:System.Net.Sockets.TcpListener> </xref:System.Net.Sockets.TcpClient> Il <xref:System.Net.Sockets.TcpClient.GetStream%2A>metodo fornisce una classe <xref:System.Net.Sockets.NetworkStream>può essere utilizzato con la classe SslStream.</xref:System.Net.Sockets.NetworkStream> </xref:System.Net.Sockets.TcpClient.GetStream%2A>       Dopo aver creato un SslStream, il server e, facoltativamente, il client deve essere autenticate. Il server deve fornire un X509 certificato che stabilisce la prova dell&quot;identità e può richiedere che il client di eseguire. L&quot;autenticazione deve essere eseguita prima della trasmissione di informazioni tramite un SslStream. I client avviano l&quot;autenticazione utilizzando sincroni <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>metodi, che blocca fino a quando non viene completata l&quot;autenticazione, o asincrona <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>metodi, che non è bloccata in attesa del completamento dell&quot;autenticazione.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> Server iniziano l&quot;autenticazione utilizzando sincroni <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>o asincroni <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metodi.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> Client e server devono avviare l&quot;autenticazione.       L&quot;autenticazione viene gestito dal provider del canale Security Support Provider (SSPI). Il client ha la possibilità di controllare la convalida del certificato del server specificando un <xref:System.Net.Security.RemoteCertificateValidationCallback>delegato durante la creazione di un SslStream.</xref:System.Net.Security.RemoteCertificateValidationCallback> Il server può anche controllare convalida fornendo un <xref:System.Net.Security.RemoteCertificateValidationCallback>delegare.</xref:System.Net.Security.RemoteCertificateValidationCallback> Il metodo a cui fa riferimento il delegato include certificato dell&quot;entità remota e gli eventuali errori SSPI durante la convalida del certificato. Si noti che, se il server specifica di un delegato, indipendentemente dal fatto che il server ha richiesto l&quot;autenticazione client viene richiamato il metodo del delegato. Se il server non ha richiesto l&quot;autenticazione client, il metodo delegato del server riceve un certificato null e una matrice vuota di errori del certificato.       Se il server richiede l&quot;autenticazione client, il client deve specificare uno o più certificati per l&quot;autenticazione. Se il client ha più di un certificato, il client può fornire un <xref:System.Net.Security.LocalCertificateSelectionCallback>delegato per selezionare il certificato corretto per il server.</xref:System.Net.Security.LocalCertificateSelectionCallback> I certificati del client devono trovarsi nell&quot;archivio &quot;My&quot; certificato dell&quot;utente corrente. L&quot;autenticazione tramite certificati client non è supportata per la <xref:System.Security.Authentication.SslProtocols>protocollo (SSL versione 2).</xref:System.Security.Authentication.SslProtocols>       Se l&quot;autenticazione non riesce, viene visualizzato un <xref:System.Security.Authentication.AuthenticationException>, e il SslStream non è più utilizzabile.</xref:System.Security.Authentication.AuthenticationException> È necessario chiudere questo oggetto e rimuovere tutti i riferimenti in modo che possono essere raccolti dal garbage collector.       Quando il processo di autenticazione, noto anche come l&quot;handshake SSL, ha esito positivo, viene stabilito l&quot;identità del server (e, facoltativamente, il client) e il SslStream utilizzabile dal client e server per lo scambio di messaggi. Prima di inviare o ricevere informazioni, il client e il server deve controllare i servizi di sicurezza e i livelli forniti da SslStream per determinare se il protocollo, gli algoritmi e i livelli selezionati soddisfano i requisiti di integrità e riservatezza. Se le impostazioni correnti non sono sufficienti, è necessario chiudere il flusso. È possibile controllare i servizi di sicurezza forniti dalla classe SslStream utilizzando il <xref:System.Net.Security.SslStream.IsEncrypted%2A>e <xref:System.Net.Security.SslStream.IsSigned%2A>proprietà.</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Nella tabella seguente mostra gli elementi che le impostazioni di crittografia utilizzate per l&quot;autenticazione, crittografia e la firma dei dati del report.      | Elemento | I membri |   |-------------|-------------|   | Il protocollo di sicurezza usato per autenticare il server e, facoltativamente, il client. | La proprietà <xref:System.Net.Security.SslStream.SslProtocol%2A>e l&quot;enumerazione associata <xref:System.Security.Authentication.SslProtocols>. |   | L&quot;algoritmo di scambio delle chiavi. | La proprietà <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A>e l&quot;enumerazione associata <xref:System.Security.Authentication.ExchangeAlgorithmType>. |   | Algoritmo di integrità del messaggio. | La proprietà <xref:System.Net.Security.SslStream.HashAlgorithm%2A>e l&quot;enumerazione associata <xref:System.Security.Authentication.HashAlgorithmType>. |   | Algoritmo di riservatezza del messaggio. | La proprietà <xref:System.Net.Security.SslStream.CipherAlgorithm%2A>e l&quot;enumerazione associata <xref:System.Security.Authentication.CipherAlgorithmType>. |   | I punti di forza degli algoritmi selezionati. | <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>, <xref:System.Net.Security.SslStream.HashStrength%2A>e le proprietà di <xref:System.Net.Security.SslStream.CipherStrength%2A>. |       Dopo il completamento dell&quot;autenticazione, è possibile inviare dati tramite sincroni <xref:System.Net.Security.SslStream.Write%2A>o asincroni <xref:System.Net.Security.SslStream.BeginWrite%2A>metodi.</xref:System.Net.Security.SslStream.BeginWrite%2A> </xref:System.Net.Security.SslStream.Write%2A> </xref:System.Net.Security.SslStream.CipherStrength%2A> </xref:System.Net.Security.SslStream.HashStrength%2A> </xref:System.Net.Security.SslStream.KeyExchangeStrength%2A> </xref:System.Security.Authentication.CipherAlgorithmType> </xref:System.Net.Security.SslStream.CipherAlgorithm%2A> </xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Net.Security.SslStream.HashAlgorithm%2A> </xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> </xref:System.Security.Authentication.SslProtocols> </xref:System.Net.Security.SslStream.SslProtocol%2A> È possibile ricevere i dati utilizzando sincroni <xref:System.Net.Security.SslStream.Read%2A>o asincroni <xref:System.Net.Security.SslStream.BeginRead%2A>metodi.</xref:System.Net.Security.SslStream.BeginRead%2A> </xref:System.Net.Security.SslStream.Read%2A>       Se è stato specificato per il <xref:System.Net.Security.SslStream.%23ctor%2A>che il flusso sottostante deve essere lasciato aperto, è responsabili della chiusura di tale flusso al termine utilizzando tale</xref:System.Net.Security.SslStream.%23ctor%2A>      > [!NOTE] > Se l&quot;applicazione che crea l&quot;oggetto SslStream viene eseguito con le credenziali di un utente normale, l&quot;applicazione non sarà in grado di accedere ai certificati installati nell&quot;archivio del computer locale, a meno che l&quot;autorizzazione è stata assegnata in modo esplicito all&quot;utente a tale scopo.       SslStream si presuppone che un timeout insieme agli altri <xref:System.IO.IOException>generato dal flusso interno verrà considerato come errore irreversibile dal chiamante.</xref:System.IO.IOException> Riutilizzo di un&quot;istanza di SslStream dopo un timeout restituirà garbage. Un&quot;applicazione deve chiamare <xref:System.IO.Stream.Close%2A>il SslStream e genera un&quot;eccezione in questi casi.</xref:System.IO.Stream.Close%2A>       .NET Framework 4.6 include una nuova funzionalità di sicurezza che blocca i pacchetti di crittografia non protetti e gli algoritmi per le connessioni di hash. Le applicazioni tramite TLS/SSL tramite le API, ad esempio HttpClient HttpWebRequest, FTPClient, SmtpClient, SslStream, e così via e destinato a .NET Framework 4.6 ottenere il comportamento più sicure per impostazione predefinita.       Gli sviluppatori potrebbero voler rifiutare esplicitamente questo comportamento per mantenere la compatibilità con i servizi esistenti SSL3 o TLS con servizi RC4. [In questo articolo](https://support.microsoft.com/kb/3069494) viene illustrato come modificare il codice in modo che il nuovo comportamento è disabilitato.       .NET Framework 4.6.3 aggiunti nuovi overload per i metodi che eseguono l&quot;autenticazione SslStreams che non si specifica una versione TLS, ma utilizzare invece definita come il valore predefinito di sistema in TLS versione [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx). Utilizzare questi metodi nell&quot;applicazione in modo da poter successivamente si modificano le impostazioni predefinite come TLS versione best practice modifiche nel tempo, senza dover ricompilare e ridistribuire l&quot;applicazione."
  example:
  - "The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the SslStream class to communicate with clients.  \n  \n [!code-cpp[NclSslServerSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_1.cpp)]\n [!code-cs[NclSslServerSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_1.cs)]  \n  \n The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the SslStream class to communicate with a server.  \n  \n [!code-cpp[NclSslClientSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_2.cpp)]\n [!code-cs[NclSslClientSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_2.cs)]"
  syntax:
    content: 'public class SslStream : System.Net.Security.AuthenticatedStream'
  inheritance:
  - System.IO.Stream
  - System.Net.Security.AuthenticatedStream
  implements: []
  inheritedMembers:
  - System.Net.Security.AuthenticatedStream.InnerStream
  - System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> usando specificata <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Se non viene specificato un valore nel file di configurazione per encryptionpolicy, il <xref:System.Net.Security.EncryptionPolicy>per impostazione predefinita <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>per il <xref:System.Net.Security.SslStream>istanza che viene costruito.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       L&quot;utilizzo della crittografia Null è richiesto quando i criteri di crittografia sono impostato su <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public SslStream (System.IO.Stream innerStream);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Oggetto <xref:System.IO.Stream>oggetto utilizzato per il <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> per l&quot;invio e ricezione di dati.</xref:System.IO.Stream>"
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>non è leggibile.       - oppure - <code>innerStream</code> non è accessibile in scrittura."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - oppure - <code>innerStream</code> è uguale a <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Boolean)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> classe utilizzando l&quot;oggetto specificato <xref:System.IO.Stream>e il comportamento di chiusura del flusso.</xref:System.IO.Stream>"
  remarks: "Quando si specifica `true` per il `leaveStreamOpen` parametro, la chiusura di <xref:System.Net.Security.SslStream>non ha alcun effetto `innerStream` flusso; è necessario chiudere esplicitamente `innerStream` quando non è più necessario tale</xref:System.Net.Security.SslStream>       Se non viene specificato un valore nel file di configurazione per encryptionpolicy, il <xref:System.Net.Security.EncryptionPolicy>per impostazione predefinita <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>per il <xref:System.Net.Security.SslStream>istanza che viene costruito.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       L&quot;utilizzo della crittografia Null è richiesto quando i criteri di crittografia sono impostato su <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Oggetto <xref:System.IO.Stream>oggetto utilizzato per il <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> per l&quot;invio e ricezione di dati.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Un valore booleano che indica il comportamento di chiusura del <xref:System.IO.Stream>oggetto utilizzato per il <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> per l&quot;invio e ricezione di dati.</xref:System.IO.Stream> Questo parametro indica se il flusso interno viene lasciato aperto."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>non è leggibile.       - oppure - <code>innerStream</code> non è accessibile in scrittura."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - oppure - <code>innerStream</code> è uguale a <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inizializza una nuova istanza della <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> classe utilizzando l&quot;oggetto specificato <xref:System.IO.Stream>, il comportamento di chiusura del flusso e il delegato di convalida del certificato.</xref:System.IO.Stream>"
  remarks: "Quando si specifica `true` per il `leaveStreamOpen` parametro, la chiusura di <xref:System.Net.Security.SslStream>non ha alcun effetto `innerStream` flusso; è necessario chiudere esplicitamente `innerStream` quando non è più necessario tale</xref:System.Net.Security.SslStream>       Il `userCertificateValidationCallback` del delegato `certificateErrors` argomento contiene i codici di errore Windows restituiti dal canale Security Support Provider Interface (SSPI). Il valore restituito del metodo richiamato dal `userCertificateValidationCallback` delegato determina se l&quot;autenticazione ha esito positivo.       Il protocollo di sicurezza e gli algoritmi di crittografia sono già selezionate quando il `userCertificateValidationCallback` viene richiamato il metodo del delegato. È possibile utilizzare il metodo per determinare se sono sufficienti per l&quot;applicazione di algoritmi di crittografia selezionati e per i livelli. Se non, il metodo deve restituire `false` per impedire il <xref:System.Net.Security.SslStream>la creazione.</xref:System.Net.Security.SslStream>       Se non viene specificato un valore nel file di configurazione per encryptionpolicy, il <xref:System.Net.Security.EncryptionPolicy>per impostazione predefinita <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>per il <xref:System.Net.Security.SslStream>istanza che viene costruito.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       L&quot;utilizzo della crittografia Null è richiesto quando i criteri di crittografia sono impostato su <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>      > [!NOTE] > Il Framework memorizza nella cache le sessioni SSL quando vengono creati e tenta di riutilizzare una sessione nella cache per una nuova richiesta, se possibile. Durante il tentativo di riutilizzare una sessione SSL, il Framework utilizza il primo elemento della <xref:System.Net.HttpWebRequest.ClientCertificates%2A>(se è presente uno), o tenta di riutilizzare una sessione anonima se <xref:System.Net.HttpWebRequest.ClientCertificates%2A>è vuoto.</xref:System.Net.HttpWebRequest.ClientCertificates%2A> </xref:System.Net.HttpWebRequest.ClientCertificates%2A>      > [!NOTE] > SSL versione 2 del protocollo non sono supportati i certificati client."
  example:
  - "The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.  \n  \n [!code-cpp[NclSslClientSync#4](~/add/codesnippet/cpp/9eaa69b2-6619-41cf-8f97-_1.cpp)]\n [!code-cs[NclSslClientSync#4](~/add/codesnippet/csharp/9eaa69b2-6619-41cf-8f97-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Oggetto <xref:System.IO.Stream>oggetto utilizzato per il <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> per l&quot;invio e ricezione di dati.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Un valore booleano che indica il comportamento di chiusura del <xref:System.IO.Stream>oggetto utilizzato per il <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> per l&quot;invio e ricezione di dati.</xref:System.IO.Stream> Questo parametro indica se il flusso interno viene lasciato aperto."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "Oggetto <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> delegato responsabile della convalida del certificato fornito dalla parte remota."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>non è leggibile.       - oppure - <code>innerStream</code> non è accessibile in scrittura."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - oppure - <code>innerStream</code> è uguale a <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> classe utilizzando l&quot;oggetto specificato <xref:System.IO.Stream>, trasmettere il comportamento di chiusura, il delegato di convalida del certificato e il delegato di selezione del certificato.</xref:System.IO.Stream>"
  remarks: "Quando si specifica `true` per il `leaveStreamOpen` parametro, la chiusura di <xref:System.Net.Security.SslStream>non ha alcun effetto `innerStream` flusso; è necessario chiudere esplicitamente `innerStream` quando non è più necessario tale</xref:System.Net.Security.SslStream>       Il `userCertificateValidationCallback` del delegato `certificateErrors` argomento contiene i codici di errore Windows restituiti dal canale Security Support Provider Interface (SSPI). Il valore restituito del metodo richiamato dal `userCertificateValidationCallback` delegato determina se l&quot;autenticazione ha esito positivo.       Il protocollo di sicurezza e gli algoritmi di crittografia sono già selezionate quando il `userCertificateValidationCallback` viene richiamato il metodo del delegato. È possibile utilizzare il metodo per determinare se sono sufficienti per l&quot;applicazione di algoritmi di crittografia selezionati e per i livelli. Se non, il metodo deve restituire `false` per impedire il <xref:System.Net.Security.SslStream>la creazione.</xref:System.Net.Security.SslStream>       La `userCertificateSelectionCallback` delegato è utile quando l&quot;applicazione dispone di più certificati e sceglierne un certificato in modo dinamico. I certificati nell&quot;archivio &quot;MY&quot; vengono passati al metodo richiamato dal delegato.       Se non viene specificato un valore nel file di configurazione per encryptionpolicy, il <xref:System.Net.Security.EncryptionPolicy>per impostazione predefinita <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>per il <xref:System.Net.Security.SslStream>istanza che viene costruito.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       L&quot;utilizzo della crittografia Null è richiesto quando i criteri di crittografia sono impostato su <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>      > [!NOTE] > Il Framework memorizza nella cache le sessioni SSL quando vengono creati e tenta di riutilizzare una sessione nella cache per una nuova richiesta, se possibile. Durante il tentativo di riutilizzare una sessione SSL, il Framework utilizza il primo elemento ClientCertificates (se presente), oppure tenta di riutilizzare una sessione anonima se ClientCertificates è vuota."
  example:
  - "The following code example demonstrates calling this constructor. This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.  \n  \n [!code-cpp[NclSslClientAsync#6](~/add/codesnippet/cpp/dc8fc9af-8c2a-4c30-be77-_1.cpp)]\n [!code-cs[NclSslClientAsync#6](~/add/codesnippet/csharp/dc8fc9af-8c2a-4c30-be77-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Oggetto <xref:System.IO.Stream>oggetto utilizzato per il <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> per l&quot;invio e ricezione di dati.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Un valore booleano che indica il comportamento di chiusura del <xref:System.IO.Stream>oggetto utilizzato per il <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> per l&quot;invio e ricezione di dati.</xref:System.IO.Stream> Questo parametro indica se il flusso interno viene lasciato aperto."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "Oggetto <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> delegato responsabile della convalida del certificato fornito dalla parte remota."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "Oggetto <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> delegato responsabile della selezione del certificato utilizzato per l&quot;autenticazione."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>non è leggibile.       - oppure - <code>innerStream</code> non è accessibile in scrittura."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - oppure - <code>innerStream</code> è uguale a <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> classe utilizzando l&quot;oggetto specificato<xref:System.IO.Stream></xref:System.IO.Stream>"
  remarks: "L&quot;utilizzo della crittografia Null è obbligatorio quando il `encryptionPolicy` parametro è impostato su <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Oggetto <xref:System.IO.Stream>oggetto utilizzato per il <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> per l&quot;invio e ricezione di dati.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Un valore booleano che indica il comportamento di chiusura del <xref:System.IO.Stream>oggetto utilizzato per il <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> per l&quot;invio e ricezione di dati.</xref:System.IO.Stream> Questo parametro indica se il flusso interno viene lasciato aperto."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "Oggetto <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> delegato responsabile della convalida del certificato fornito dalla parte remota."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "Oggetto <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> delegato responsabile della selezione del certificato utilizzato per l&quot;autenticazione."
    - id: encryptionPolicy
      type: System.Net.Security.EncryptionPolicy
      description: "The <xref href=&quot;System.Net.Security.EncryptionPolicy&quot;></xref> to use."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>non è leggibile.       - oppure - <code>innerStream</code> non è accessibile in scrittura.       - oppure - <code>encryptionPolicy</code> non è valido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - oppure - <code>innerStream</code> è uguale a <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  id: AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chiamato dal client per autenticare il server e, facoltativamente, il client in una connessione client-server."
  remarks: "Questo metodo viene autenticato mediante <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Nessun certificato client viene utilizzato nell&quot;autenticazione. L&quot;elenco certificati revocati non è verificato durante l&quot;autenticazione. Il valore specificato per `targetHost` deve corrispondere al nome sul certificato del server.       Quando l&quot;autenticazione ha esito positivo, è necessario verificare <xref:System.Net.Security.SslStream.IsEncrypted%2A>e <xref:System.Net.Security.SslStream.IsSigned%2A>le proprietà per determinare i servizi di sicurezza utilizzati da <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Controllare il <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>proprietà per determinare se l&quot;autenticazione reciproca.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Se l&quot;autenticazione non riesce, viene visualizzato un <xref:System.Security.Authentication.AuthenticationException>e ciò <xref:System.Net.Security.SslStream>non è più utilizzabile.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> È necessario chiudere questo oggetto e rimuovere tutti i riferimenti in modo che possono essere raccolti dal garbage collector."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "Il nome del server che condivide la <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "L&quot;autenticazione non riuscita e l&quot;oggetto in uno stato inutilizzabile."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;autenticazione è già avvenuta.       tramite l&quot;autenticazione di Server - oppure - <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> è stato tentato in precedenza.       - oppure - autenticazione è già in corso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato chiuso."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chiamato dal client per autenticare il server e, facoltativamente, il client in una connessione client-server. Il processo di autenticazione usa l&quot;insieme di certificati specificato e il protocollo SSL."
  remarks: "Quando l&quot;autenticazione ha esito positivo, è necessario verificare <xref:System.Net.Security.SslStream.IsEncrypted%2A>e <xref:System.Net.Security.SslStream.IsSigned%2A>le proprietà per determinare i servizi di sicurezza utilizzati da <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Controllare il <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>proprietà per determinare se l&quot;autenticazione reciproca.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Se l&quot;autenticazione non riesce, viene visualizzato un <xref:System.Security.Authentication.AuthenticationException>e ciò <xref:System.Net.Security.SslStream>non è più utilizzabile.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> È necessario chiudere questo oggetto e rimuovere tutti i riferimenti in modo che possono essere raccolti dal garbage collector.      > [!NOTE] > SSL versione 2 del protocollo non sono supportati i certificati client."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "Il nome del server che condivide la <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "La <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> che contiene i certificati client."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "Il <xref:System.Security.Authentication.SslProtocols>valore che rappresenta il protocollo utilizzato per l&quot;autenticazione.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>valore che specifica se l&quot;elenco certificati revocati è verificato durante l&quot;autenticazione.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  id: AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chiamato dal client per autenticare il server e, facoltativamente, il client in una connessione client-server come operazione asincrona."
  remarks: "Questo metodo viene autenticato mediante <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Nessun certificato client viene utilizzato nell&quot;autenticazione. L&quot;elenco certificati revocati non è verificato durante l&quot;autenticazione. Il valore specificato per `targetHost` deve corrispondere al nome sul certificato del server.       Quando l&quot;autenticazione ha esito positivo, è necessario verificare <xref:System.Net.Security.SslStream.IsEncrypted%2A>e <xref:System.Net.Security.SslStream.IsSigned%2A>le proprietà per determinare i servizi di sicurezza utilizzati da <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Controllare il <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>proprietà per determinare se l&quot;autenticazione reciproca.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Se l&quot;autenticazione non riesce, viene visualizzato un <xref:System.Security.Authentication.AuthenticationException>e ciò <xref:System.Net.Security.SslStream>non è più utilizzabile.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> È necessario chiudere questo oggetto e rimuovere tutti i riferimenti in modo che possono essere raccolti dal garbage collector."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "Il nome del server che condivide la <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    return:
      type: System.Threading.Tasks.Task
      description: "Restituisce <xref:System.Threading.Tasks.Task>oggetto dell&quot;attività che rappresenta l&quot;operazione asincrona.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "L&quot;autenticazione non riuscita e l&quot;oggetto in uno stato inutilizzabile."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;autenticazione è già avvenuta.       tramite l&quot;autenticazione di Server - oppure - <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> è stato tentato in precedenza.       - oppure - autenticazione è già in corso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato chiuso."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chiamato dal client per autenticare il server e, facoltativamente, il client in una connessione client-server come operazione asincrona. Il processo di autenticazione usa l&quot;insieme di certificati specificato e il protocollo SSL."
  remarks: "Quando l&quot;autenticazione ha esito positivo, è necessario verificare <xref:System.Net.Security.SslStream.IsEncrypted%2A>e <xref:System.Net.Security.SslStream.IsSigned%2A>le proprietà per determinare i servizi di sicurezza utilizzati da <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Controllare il <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>proprietà per determinare se l&quot;autenticazione reciproca.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Se l&quot;autenticazione non riesce, viene visualizzato un <xref:System.Security.Authentication.AuthenticationException>e ciò <xref:System.Net.Security.SslStream>non è più utilizzabile.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> È necessario chiudere questo oggetto e rimuovere tutti i riferimenti in modo che possono essere raccolti dal garbage collector.      > [!NOTE] > SSL versione 2 del protocollo non sono supportati i certificati client."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "Il nome del server che condivide la <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "La <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> che contiene i certificati client."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "Il <xref:System.Security.Authentication.SslProtocols>valore che rappresenta il protocollo utilizzato per l&quot;autenticazione.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>valore che specifica se l&quot;elenco certificati revocati è verificato durante l&quot;autenticazione.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "Restituisce <xref:System.Threading.Tasks.Task>oggetto dell&quot;attività che rappresenta l&quot;operazione asincrona.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chiamata eseguita dal server di autenticare il server e, facoltativamente, il client in una connessione client-server utilizzando il certificato specificato."
  remarks: "Questo metodo viene autenticato mediante <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> L&quot;elenco certificati revocati non è verificato durante l&quot;autenticazione. Il client non è necessario fornire un certificato per l&quot;autenticazione.       Questo metodo si blocca fino al completamento dell&quot;operazione. Per evitare il blocco fino al completamento dell&quot;operazione, utilizzare uno di <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>gli overload del metodo.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       Se l&quot;autenticazione non riesce, viene visualizzato un <xref:System.Security.Authentication.AuthenticationException>e ciò <xref:System.Net.Security.SslStream>non è più utilizzabile.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> È necessario chiudere questo oggetto e rimuovere tutti i riferimenti in modo che possono essere raccolti dal garbage collector."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Il certificato utilizzato per autenticare il server."
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "L&quot;autenticazione non riuscita e l&quot;oggetto in uno stato inutilizzabile."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;autenticazione è già avvenuta.       - oppure - l&quot;autenticazione Client mediante questo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> è stato tentato in precedenza.       - oppure - autenticazione è già in corso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato chiuso."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Il <xref:System.Net.Security.SslStream.AuthenticateAsServer*>metodo non è supportato in Windows 95, Windows 98 o Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chiamata eseguita dal server di autenticare il server e, facoltativamente, il client in una connessione client-server utilizzando i certificati specificati, requisiti e protocollo di sicurezza."
  remarks: "Questo metodo si blocca fino al completamento dell&quot;operazione. Per evitare il blocco fino al completamento dell&quot;operazione, utilizzare uno di <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>gli overload del metodo.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       Se l&quot;autenticazione non riesce, viene visualizzato un <xref:System.Security.Authentication.AuthenticationException>e ciò <xref:System.Net.Security.SslStream>non è più utilizzabile.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> È necessario chiudere questo oggetto e rimuovere tutti i riferimenti in modo che possono essere raccolti dal garbage collector."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X509Certificate utilizzato per autenticare il server."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>valore che specifica se il client è richiesto un certificato per l&quot;autenticazione.</xref:System.Boolean> Si noti che questo è solo una richiesta, se nessun certificato viene fornito, il server continua ad accettare la richiesta di connessione."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "Il <xref:System.Security.Authentication.SslProtocols>valore che rappresenta il protocollo utilizzato per l&quot;autenticazione.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>valore che specifica se l&quot;elenco certificati revocati è verificato durante l&quot;autenticazione.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>non è un valido <xref:System.Security.Authentication.SslProtocols> valore."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "L&quot;autenticazione non riuscita e l&quot;oggetto in uno stato inutilizzabile."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;autenticazione è già avvenuta.       - oppure - l&quot;autenticazione Client mediante questo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> è stato tentato in precedenza.       - oppure - autenticazione è già in corso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato chiuso."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Il <xref:System.Net.Security.SslStream.AuthenticateAsServer*>metodo non è supportato in Windows 95, Windows 98 o Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chiamata eseguita dal server di autenticare il server e, facoltativamente, il client in una connessione client-server utilizzando il certificato specificato come operazione asincrona."
  remarks: "Questo metodo viene autenticato mediante <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> L&quot;elenco certificati revocati non è verificato durante l&quot;autenticazione. Il client non è necessario fornire un certificato per l&quot;autenticazione.       Se l&quot;autenticazione non riesce, viene visualizzato un <xref:System.Security.Authentication.AuthenticationException>e ciò <xref:System.Net.Security.SslStream>non è più utilizzabile.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> È necessario chiudere questo oggetto e rimuovere tutti i riferimenti in modo che possono essere raccolti dal garbage collector."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Il certificato utilizzato per autenticare il server."
    return:
      type: System.Threading.Tasks.Task
      description: "Restituisce <xref:System.Threading.Tasks.Task>oggetto dell&quot;attività che rappresenta l&quot;operazione asincrona.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "L&quot;autenticazione non riuscita e l&quot;oggetto in uno stato inutilizzabile."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;autenticazione è già avvenuta.       - oppure - l&quot;autenticazione Client mediante questo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> è stato tentato in precedenza.       - oppure - autenticazione è già in corso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato chiuso."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Il <xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>metodo non è supportato in Windows 95, Windows 98 o Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chiamata eseguita dal server di autenticare il server e, facoltativamente, il client in una connessione client-server utilizzando i certificati specificati, requisiti e protocollo di sicurezza come operazione asincrona."
  remarks: "Se l&quot;autenticazione non riesce, viene visualizzato un <xref:System.Security.Authentication.AuthenticationException>e ciò <xref:System.Net.Security.SslStream>non è più utilizzabile.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> È necessario chiudere questo oggetto e rimuovere tutti i riferimenti in modo che possono essere raccolti dal garbage collector."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X509Certificate utilizzato per autenticare il server."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>valore che specifica se il client è richiesto un certificato per l&quot;autenticazione.</xref:System.Boolean> Si noti che questo è solo una richiesta, se nessun certificato viene fornito, il server continua ad accettare la richiesta di connessione."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "Il <xref:System.Security.Authentication.SslProtocols>valore che rappresenta il protocollo utilizzato per l&quot;autenticazione.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>valore che specifica se l&quot;elenco certificati revocati è verificato durante l&quot;autenticazione.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "Restituisce <xref:System.Threading.Tasks.Task>oggetto dell&quot;attività che rappresenta l&quot;operazione asincrona.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chiamato dal client per avviare un&quot;operazione asincrona per autenticare il server e, facoltativamente, il client."
  remarks: "Questo metodo viene autenticato mediante <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Nessun certificato client viene utilizzato nell&quot;autenticazione. L&quot;elenco certificati revocati non è verificato durante l&quot;autenticazione.       Il valore specificato per `targetHost` deve corrispondere al nome sul certificato del server.       L&quot;operazione asincrona di autenticazione deve essere completata chiamando il <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>metodo.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> In genere, il metodo viene richiamato per la `asyncCallback` delegato.       Questo metodo non blocca durante il completamento dell&quot;operazione. Per il blocco fino al completamento dell&quot;operazione, utilizzare uno del <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>overload del metodo.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Per informazioni dettagliate sull&quot;uso del modello di programmazione asincrono, vedere [la chiamata dei metodi sincroni](~/add/includes/ajax-current-ext-md.md) se si riceve un <xref:System.Security.Authentication.AuthenticationException>, questo <xref:System.Net.Security.SslStream>non è più utilizzabile.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> È necessario chiudere questo oggetto e rimuovere tutti i riferimenti in modo che possono essere raccolti dal garbage collector."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "Il nome del server che condivide la <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Un <xref:System.AsyncCallback>delegato che fa riferimento al metodo da richiamare quando l&quot;autenticazione è stata completata.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Un oggetto definito dall&quot;utente che contiene informazioni sull&quot;operazione. Questo oggetto viene passato per il `asyncCallback` delegato al completamento dell&quot;operazione."
    return:
      type: System.IAsyncResult
      description: "Un <xref:System.IAsyncResult>oggetto che indica lo stato dell&quot;operazione asincrona.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "L&quot;autenticazione non riuscita e l&quot;oggetto in uno stato inutilizzabile."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;autenticazione è già avvenuta.       tramite l&quot;autenticazione di Server - oppure - <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> è stato tentato in precedenza.       - oppure - autenticazione è già in corso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato chiuso."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chiamato dal client per avviare un&quot;operazione asincrona per autenticare il server e, facoltativamente, il client utilizzando i certificati specificati e un protocollo di sicurezza."
  remarks: "Il valore specificato per `targetHost` deve corrispondere al nome sul certificato del server.       L&quot;operazione asincrona di autenticazione deve essere completata chiamando il <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>metodo.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> In genere, il metodo viene richiamato per la `asyncCallback` delegato.       Questo metodo non blocca durante il completamento dell&quot;operazione. Per il blocco fino al completamento dell&quot;operazione, utilizzare uno del <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>overload del metodo.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Per informazioni dettagliate sull&quot;uso del modello di programmazione asincrono, vedere [la chiamata dei metodi sincroni](~/add/includes/ajax-current-ext-md.md) se si riceve un <xref:System.Security.Authentication.AuthenticationException>, questo <xref:System.Net.Security.SslStream>non è più utilizzabile.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> È necessario chiudere questo oggetto e rimuovere tutti i riferimenti in modo che possono essere raccolti dal garbage collector.      > [!NOTE] > SSL versione 2 del protocollo non sono supportati i certificati client."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "Il nome del server che condivide la <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "La <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> contenente i certificati client."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "Il <xref:System.Security.Authentication.SslProtocols>valore che rappresenta il protocollo utilizzato per l&quot;autenticazione.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>valore che specifica se l&quot;elenco certificati revocati è verificato durante l&quot;autenticazione.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Un <xref:System.AsyncCallback>delegato che fa riferimento al metodo da richiamare quando l&quot;autenticazione è stata completata.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Un oggetto definito dall&quot;utente che contiene informazioni sull&quot;operazione. Questo oggetto viene passato per il `asyncCallback` delegato al completamento dell&quot;operazione."
    return:
      type: System.IAsyncResult
      description: "Un <xref:System.IAsyncResult>oggetto che indica lo stato dell&quot;operazione asincrona.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>non è un valido <xref:System.Security.Authentication.SslProtocols> valore."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "L&quot;autenticazione non riuscita e l&quot;oggetto in uno stato inutilizzabile."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;autenticazione è già avvenuta.       tramite l&quot;autenticazione di Server - oppure - <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> è stato tentato in precedenza.       - oppure - autenticazione è già in corso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato chiuso."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chiamata eseguita dal server per avviare un&quot;operazione asincrona per autenticare il client e, facoltativamente, il server in una connessione client-server."
  remarks: "Questo metodo viene autenticato mediante <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> L&quot;elenco certificati revocati non è verificato durante l&quot;autenticazione. Il client non è necessario fornire un certificato per l&quot;autenticazione.       L&quot;operazione asincrona di autenticazione deve essere completata chiamando il <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>metodo.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> In genere, il metodo viene richiamato per la `asyncCallback` delegato.       Questo metodo non blocca durante il completamento dell&quot;operazione. Per il blocco fino al completamento dell&quot;operazione, utilizzare uno del <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>overload del metodo.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Per informazioni dettagliate sull&quot;uso del modello di programmazione asincrono, vedere [la chiamata dei metodi sincroni](~/add/includes/ajax-current-ext-md.md) se si riceve un <xref:System.Security.Authentication.AuthenticationException>, questo <xref:System.Net.Security.SslStream>non è più utilizzabile.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> È necessario chiudere questo oggetto e rimuovere tutti i riferimenti in modo che possono essere raccolti dal garbage collector."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X509Certificate utilizzato per autenticare il server."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Un <xref:System.AsyncCallback>delegato che fa riferimento al metodo da richiamare quando l&quot;autenticazione è stata completata.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Un oggetto definito dall&quot;utente che contiene informazioni sull&quot;operazione. Questo oggetto viene passato per il `asyncCallback` delegato al completamento dell&quot;operazione."
    return:
      type: System.IAsyncResult
      description: "Un <xref:System.IAsyncResult>che indica lo stato dell&quot;operazione asincrona.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "L&quot;autenticazione non riuscita e l&quot;oggetto in uno stato inutilizzabile."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;autenticazione è già avvenuta.       - oppure - l&quot;autenticazione Client mediante questo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> è stato tentato in precedenza.       - oppure - autenticazione è già in corso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato chiuso."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Il <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>metodo non è supportato in Windows 95, Windows 98 o Windows Millennium.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chiamata eseguita dal server per avviare un&quot;operazione asincrona per autenticare il server e, facoltativamente, il client usando i certificati specificati, requisiti e protocollo di sicurezza."
  remarks: "L&quot;operazione asincrona di autenticazione deve essere completata chiamando il <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>metodo.</xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> In genere, il metodo viene richiamato per la `asyncCallback` delegato.       Questo metodo non blocca durante il completamento dell&quot;operazione. Per il blocco fino al completamento dell&quot;operazione, utilizzare uno di <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>gli overload del metodo.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>       Per informazioni dettagliate sull&quot;uso del modello di programmazione asincrono, vedere [la chiamata dei metodi sincroni](~/add/includes/ajax-current-ext-md.md) se si riceve un <xref:System.Security.Authentication.AuthenticationException>, questo <xref:System.Net.Security.SslStream>non è più utilizzabile.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> È necessario chiudere questo oggetto e rimuovere tutti i riferimenti in modo che possono essere raccolti dal garbage collector."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "X509Certificate utilizzato per autenticare il server."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>valore che specifica se il client è richiesto un certificato per l&quot;autenticazione.</xref:System.Boolean> Si noti che questo è solo una richiesta, se nessun certificato viene fornito, il server continua ad accettare la richiesta di connessione."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "Il <xref:System.Security.Authentication.SslProtocols>valore che rappresenta il protocollo utilizzato per l&quot;autenticazione.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>valore che specifica se l&quot;elenco certificati revocati è verificato durante l&quot;autenticazione.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Un <xref:System.AsyncCallback>delegato che fa riferimento al metodo da richiamare quando l&quot;autenticazione è stata completata.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Un oggetto definito dall&quot;utente che contiene informazioni sull&quot;operazione. Questo oggetto viene passato per il `asyncCallback` delegato al completamento dell&quot;operazione."
    return:
      type: System.IAsyncResult
      description: "Un <xref:System.IAsyncResult>oggetto che indica lo stato dell&quot;operazione asincrona.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>non è un valido <xref:System.Security.Authentication.SslProtocols> valore."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "L&quot;autenticazione non riuscita e l&quot;oggetto in uno stato inutilizzabile."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;autenticazione è già avvenuta.       tramite l&quot;autenticazione di Server - oppure - <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> è stato tentato in precedenza.       - oppure - autenticazione è già in corso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato chiuso."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Il <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>metodo non è supportato in Windows 95, Windows 98 o Windows Millennium.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Avvia un&quot;operazione di lettura asincrona che legge i dati dal flusso e lo archivia nella matrice specificata."
  remarks: "Se è abilitata la crittografia e firma, l&quot;operazione di lettura legge i dati dal flusso sottostante, controlla l&quot;integrità dei dati, e/o lo decrittografa. L&quot;operazione di lettura asincrona deve essere completata chiamando il <xref:System.Net.Security.SslStream.EndRead%2A>metodo.</xref:System.Net.Security.SslStream.EndRead%2A> In genere, il metodo viene richiamato per la `asyncCallback` delegato.       Questo metodo non blocca durante il completamento dell&quot;operazione. Per il blocco fino al completamento dell&quot;operazione, utilizzare il <xref:System.Net.Security.SslStream.Read%2A>metodo.</xref:System.Net.Security.SslStream.Read%2A>       Per informazioni dettagliate sull&quot;uso del modello di programmazione asincrono, vedere [la chiamata dei metodi sincroni](~/add/includes/ajax-current-ext-md.md) la <xref:System.Net.Security.SslStream>classe non supporta più operazioni di lettura simultanei.</xref:System.Net.Security.SslStream>       È possibile chiamare questo metodo fino a quando non è stata effettuata l&quot;autenticazione. Per l&quot;autenticazione di chiamare uno del <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, o <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metodi.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates starting an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#8](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_1.cpp)]\n [!code-cs[NclSslClientAsync#8](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_1.cs)]  \n  \n [!code-cpp[NclSslClientAsync#4](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_2.cpp)]\n [!code-cs[NclSslClientAsync#4](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_2.cs)]  \n  \n The following method is called when the read completes.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_3.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_3.cs)]"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Oggetto <xref:System.Byte>matrice che riceve i byte letti dal flusso.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Il percorso in base zero in `buffer` da cui iniziare l&quot;archiviazione dei dati letti dal flusso corrente."
    - id: count
      type: System.Int32
      description: "Numero massimo di byte da leggere dal flusso."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Un <xref:System.AsyncCallback>delegato che fa riferimento al metodo da richiamare quando l&quot;operazione di lettura è stata completata.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Un oggetto definito dall&quot;utente che contiene informazioni sull&quot;operazione di lettura. Questo oggetto viene passato per il `asyncCallback` delegato al completamento dell&quot;operazione."
    return:
      type: System.IAsyncResult
      description: "Un <xref:System.IAsyncResult>oggetto che indica lo stato dell&quot;operazione asincrona.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; la lunghezza di <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "L&quot;operazione di lettura non riuscita.       - oppure - crittografia è in uso, ma non è stato possibile decrittografare i dati."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "È già in corso un&quot;operazione di lettura."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato chiuso."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticazione non è stata eseguita."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Avvia un&quot;operazione di scrittura asincrona che scrive <xref:System.Byte>s dal buffer specificato nel flusso.</xref:System.Byte>"
  remarks: ''
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NclSslServerAsync#5](~/add/codesnippet/csharp/7192cc61-a256-4249-aafa-_1.cs)]\n [!code-cpp[NclSslServerAsync#5](~/add/codesnippet/cpp/7192cc61-a256-4249-aafa-_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Oggetto <xref:System.Byte>matrice che fornisce i byte da scrivere nel flusso.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Il percorso in base zero in `buffer` in corrispondenza del quale iniziare la lettura dei byte da scrivere nel flusso."
    - id: count
      type: System.Int32
      description: "Un <xref:System.Int32>valore che specifica il numero di byte da leggere dal `buffer`.</xref:System.Int32>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Un <xref:System.AsyncCallback>delegato che fa riferimento al metodo da richiamare quando l&quot;operazione di scrittura è completa.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Un oggetto definito dall&quot;utente che contiene informazioni sull&quot;operazione di scrittura. Questo oggetto viene passato per il `asyncCallback` delegato al completamento dell&quot;operazione."
    return:
      type: System.IAsyncResult
      description: "Un <xref:System.IAsyncResult>che indica lo stato dell&quot;operazione asincrona.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; la lunghezza di <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "L&quot;operazione di scrittura non riuscita."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "È già in corso un&quot;operazione di scrittura."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato chiuso."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticazione non è stata eseguita."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanRead
  id: CanRead
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene un <xref:System.Boolean>valore che indica se il flusso sottostante è leggibile.</xref:System.Boolean>"
  remarks: "Se si è verificato l&quot;autenticazione ha esito positivo, questa proprietà restituisce il valore restituito richiamando <xref:System.IO.Stream.CanRead%2A>nel flusso sottostante.</xref:System.IO.Stream.CanRead%2A>       Il flusso sottostante viene specificato quando si crea un&quot;istanza della <xref:System.Net.Security.SslStream>classe.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_14_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_14_1.cs)]"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se si è verificato l&quot;autenticazione e il flusso sottostante è leggibile; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanSeek
  id: CanSeek
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene un <xref:System.Boolean>valore che indica se il flusso sottostante è ricercabile.</xref:System.Boolean>"
  remarks: "Non tentare di impostare la posizione della <xref:System.Net.Security.SslStream>oggetto o il flusso sottostante.</xref:System.Net.Security.SslStream>       Il flusso sottostante viene specificato quando si crea un&quot;istanza della <xref:System.Net.Security.SslStream>classe.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "Questa proprietà restituisce sempre <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanTimeout
  id: CanTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene un <xref:System.Boolean>valore che indica se il flusso sottostante supporta i timeout.</xref:System.Boolean>"
  remarks: "Questa proprietà restituisce il valore restituito richiamando <xref:System.IO.Stream.CanTimeout%2A>nel flusso sottostante.</xref:System.IO.Stream.CanTimeout%2A>       Il flusso sottostante viene specificato quando si crea un&quot;istanza della <xref:System.Net.Security.SslStream>classe.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_8_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_8_1.cs)]"
  syntax:
    content: public override bool CanTimeout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il flusso sottostante supporta i timeout; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanWrite
  id: CanWrite
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene un <xref:System.Boolean>valore che indica se il flusso sottostante è scrivibile.</xref:System.Boolean>"
  remarks: "Se si è verificato l&quot;autenticazione ha esito positivo, questa proprietà restituisce il valore restituito richiamando <xref:System.IO.Stream.CanWrite%2A>nel flusso sottostante.</xref:System.IO.Stream.CanWrite%2A>       Il flusso sottostante viene specificato quando si crea un&quot;istanza della <xref:System.Net.Security.SslStream>classe.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_17_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_17_1.cs)]"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se si è verificato l&quot;autenticazione e il flusso sottostante è scrivibile; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  id: CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene un <xref:System.Boolean>valore che indica se l&quot;elenco certificati revocati è verificato durante il processo di convalida del certificato.</xref:System.Boolean>"
  remarks: "Elenco di revoche di certificati contiene certificati sono stati revocati dall&quot;autorità emittente. Controllando l&quot;elenco negativamente influisce sulle prestazioni, ma migliora la sicurezza dell&quot;applicazione."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public virtual bool CheckCertRevocationStatus { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;elenco certificati revocati è verificato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CheckCertRevocationStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherAlgorithm
  id: CipherAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene un valore che identifica l&quot;algoritmo di crittografia di massa usata da questo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Il valore <xref:System.Security.Authentication.CipherAlgorithmType>è necessaria per la proprietà CipherAlgorithm quando il <xref:System.Net.Security.EncryptionPolicy>valore di enumerazione viene utilizzato per costruire un <xref:System.Net.Security.SslStream>istanza.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy> </xref:System.Security.Authentication.CipherAlgorithmType>       [!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)]e [!INCLUDE[winxp](~/add/includes/winxp-md.md)] non supportano il <xref:System.Security.Authentication.CipherAlgorithmType>valore.</xref:System.Security.Authentication.CipherAlgorithmType> Pertanto, anche se il <xref:System.Security.Authentication.CipherAlgorithmType>valore viene utilizzato per costruire l&quot; <xref:System.Net.Security.SslStream>istanza, la <xref:System.Net.Security.EncryptionPolicy>proprietà sarà <xref:System.Security.Authentication.CipherAlgorithmType>.</xref:System.Security.Authentication.CipherAlgorithmType> </xref:System.Net.Security.EncryptionPolicy> </xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.CipherAlgorithmType> Il <xref:System.Security.Authentication.CipherAlgorithmType>valore viene restituito solo in Windows Vista e versioni successive.</xref:System.Security.Authentication.CipherAlgorithmType>"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_10_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_10_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }
    return:
      type: System.Security.Authentication.CipherAlgorithmType
      description: "Oggetto <xref:System.Security.Authentication.CipherAlgorithmType>valore.</xref:System.Security.Authentication.CipherAlgorithmType>"
  overload: System.Net.Security.SslStream.CipherAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La proprietà CipherAlgorithm è stata eseguita prima del completamento del processo di autenticazione oppure il processo di autenticazione non è riuscito."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherStrength
  id: CipherStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene un valore che identifica il livello dell&quot;algoritmo di crittografia utilizzato da questo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Il valore di questa proprietà è zero fino a quando non si verifica l&quot;autenticazione.       Questa proprietà restituisce uno dei valori seguenti: - 0 - 40-56-80-128, 192-168 - 256"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_6_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_6_1.cs)]"
  syntax:
    content: public virtual int CipherStrength { get; }
    return:
      type: System.Int32
      description: "Un <xref:System.Int32>valore che specifica il livello di attendibilità dell&quot;algoritmo, in bit.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.CipherStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Rilascia le risorse non gestite usate dal <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> e facoltativamente rilascia le risorse gestite."
  remarks: "Questo metodo viene chiamato dal metodo pubblico `Dispose()`(metodo) e <xref:System.Object.Finalize%2A>metodo.</xref:System.Object.Finalize%2A> `Dispose()`richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`. <xref:System.Object.Finalize%2A>richiama `Dispose` con `disposing` impostato su `false`.</xref:System.Object.Finalize%2A>       Quando la `disposing` parametro è true, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.Net.Security.SslStream>riferimenti.</xref:System.Net.Security.SslStream> Questo metodo richiama il `Dispose()` metodo di ciascun oggetto cui viene fatto riferimento."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite."
  overload: System.Net.Security.SslStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  id: EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Termina un&quot;operazione di autenticazione server asincrona in sospeso avviata con una chiamata precedente a <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  remarks: "Se l&quot;operazione non è stata completata, questo metodo si blocca fino a quando non avviene. Quando l&quot;autenticazione ha esito positivo, è necessario verificare <xref:System.Net.Security.SslStream.IsEncrypted%2A>e <xref:System.Net.Security.SslStream.IsSigned%2A>le proprietà per determinare i servizi di sicurezza utilizzati da <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Controllare il <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>proprietà per determinare se l&quot;autenticazione reciproca.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Se l&quot;autenticazione non riesce, viene visualizzato un <xref:System.Security.Authentication.AuthenticationException>e ciò <xref:System.Net.Security.SslStream>non è più utilizzabile.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> È necessario chiudere questo oggetto e rimuovere tutti i riferimenti in modo che possono essere raccolti dal garbage collector.       Per eseguire questa operazione in modo sincrono, utilizzare uno del <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>metodi.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Un&quot; <xref:System.IAsyncResult>istanza restituita da una chiamata a <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>non è stato creato da una chiamata a <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "L&quot;autenticazione non riuscita e l&quot;oggetto in uno stato inutilizzabile."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Non sussiste alcuna autenticazione server in sospeso da completare."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  id: EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Termina un&quot;operazione di autenticazione client asincrona in sospeso avviata con una chiamata precedente a <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>"
  remarks: "Se l&quot;operazione non è stata completata, questo metodo si blocca fino a quando non avviene. Quando l&quot;autenticazione ha esito positivo, è necessario verificare <xref:System.Net.Security.SslStream.IsEncrypted%2A>e <xref:System.Net.Security.SslStream.IsSigned%2A>le proprietà per determinare i servizi di sicurezza utilizzati da <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Controllare il <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>proprietà per determinare se l&quot;autenticazione reciproca.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Se l&quot;autenticazione non riesce, viene visualizzato un <xref:System.Security.Authentication.AuthenticationException>e ciò <xref:System.Net.Security.SslStream>non è più utilizzabile.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> È necessario chiudere questo oggetto e rimuovere tutti i riferimenti in modo che possono essere raccolti dal garbage collector.       Per eseguire questa operazione in modo sincrono, utilizzare uno del <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>metodo.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Un&quot; <xref:System.IAsyncResult>istanza restituita da una chiamata a <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>non è stato creato da una chiamata a <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "L&quot;autenticazione non riuscita e l&quot;oggetto in uno stato inutilizzabile."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Non vi è alcuna autenticazione del client in sospeso da completare."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Termina un&quot;operazione di lettura asincrona avviata con una chiamata precedente a <xref:System.Net.Security.SslStream.BeginRead*>.</xref:System.Net.Security.SslStream.BeginRead*>"
  remarks: "Se l&quot;operazione non è stata completata, questo metodo si blocca fino a quando non avviene.       Per eseguire questa operazione in modo sincrono, utilizzare il <xref:System.Net.Security.SslStream.Read%2A>metodo.</xref:System.Net.Security.SslStream.Read%2A>       È possibile chiamare questo metodo fino a quando non è stata effettuata l&quot;autenticazione. Per l&quot;autenticazione di chiamare uno del <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, o <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metodi.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/m-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/m-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Un <xref:System.IAsyncResult>istanza restituita da una chiamata a <xref:System.Net.Security.SslStream.BeginRead*></xref:System.Net.Security.SslStream.BeginRead*> </xref:System.IAsyncResult>"
    return:
      type: System.Int32
      description: "Oggetto <xref:System.Int32>valore che specifica il numero di byte letti dal flusso sottostante.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>non è stato creato da una chiamata a <xref:System.Net.Security.SslStream.BeginRead*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticazione non è stata eseguita."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "L&quot;operazione di lettura non riuscita."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Termina un&quot;operazione di scrittura asincrona avviata con una chiamata precedente a <xref:System.Net.Security.SslStream.BeginWrite*>.</xref:System.Net.Security.SslStream.BeginWrite*>"
  remarks: "Se l&quot;operazione non è stata completata, questo metodo si blocca fino a quando non avviene.       Un&quot;applicazione non è possibile chiamare questo metodo fino a quando non è stata effettuata l&quot;autenticazione. Per autenticare, chiamare uno del <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, o <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metodi.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Per eseguire questa operazione in modo sincrono, utilizzare il <xref:System.Net.Security.SslStream.Write%2A>metodo.</xref:System.Net.Security.SslStream.Write%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous write operation.  \n  \n [!code-cs[NclSslServerAsync#4](~/add/codesnippet/csharp/m-system.net.security.ss_1_1.cs)]\n [!code-cpp[NclSslServerAsync#4](~/add/codesnippet/cpp/m-system.net.security.ss_1_1.cpp)]"
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Un <xref:System.IAsyncResult>istanza restituita da una chiamata a <xref:System.Net.Security.SslStream.BeginWrite*></xref:System.Net.Security.SslStream.BeginWrite*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>non è stato creato da una chiamata a <xref:System.Net.Security.SslStream.BeginWrite*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticazione non è stata eseguita."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "L&quot;operazione di scrittura non riuscita."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Flush
  id: Flush
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Fa sì che tutti i dati memorizzati nel buffer da scrivere nel dispositivo sottostante."
  remarks: "Questo metodo richiama <xref:System.IO.Stream.Flush%2A>nel flusso sottostante.</xref:System.IO.Stream.Flush%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cpp[NclSslClientSync#5](~/add/codesnippet/cpp/m-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslClientSync#5](~/add/codesnippet/csharp/m-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Net.Security.SslStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashAlgorithm
  id: HashAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene l&quot;algoritmo utilizzato per generare codici di autenticazione messaggi (Mac)."
  remarks: "Gli algoritmi di autenticazione messaggi generano hash e firme consente di rilevare manomissioni e false."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_9_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_9_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }
    return:
      type: System.Security.Authentication.HashAlgorithmType
      description: "Oggetto <xref:System.Security.Authentication.HashAlgorithmType>valore.</xref:System.Security.Authentication.HashAlgorithmType>"
  overload: System.Net.Security.SslStream.HashAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La proprietà HashAlgorithm è stata eseguita prima del completamento del processo di autenticazione oppure il processo di autenticazione non è riuscito."
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashStrength
  id: HashStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene un valore che identifica il livello di attendibilità dell&quot;algoritmo hash utilizzato da questa istanza."
  remarks: "Il valore di questa proprietà è zero fino a quando non si verifica l&quot;autenticazione."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public virtual int HashStrength { get; }
    return:
      type: System.Int32
      description: "Un <xref:System.Int32>valore che specifica il livello del <xref:System.Security.Authentication.HashAlgorithmType>algoritmo, in bit.</xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Int32> I valori validi sono 128 o 160."
  overload: System.Net.Security.SslStream.HashStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsAuthenticated
  id: IsAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene un <xref:System.Boolean>valore che indica se l&quot;autenticazione è riuscita.</xref:System.Boolean>"
  remarks: "Eseguire l&quot;autenticazione client mediante la chiamata di <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>o <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>metodi.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> Eseguire l&quot;autenticazione server chiamando il <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>o <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metodi.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public override bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è stata effettuata l&quot;autenticazione ha esito positivo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsEncrypted
  id: IsEncrypted
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene un <xref:System.Boolean>valore che indica se questo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> utilizza la crittografia dei dati.</xref:System.Boolean>"
  remarks: "La crittografia consente di proteggere la privacy dei dati, vale a dire consente di verificare che mentre i dati sono in transito, non può essere decrittato da terze parti."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override bool IsEncrypted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i dati vengono crittografati prima di essere trasmessi in rete e decrittografati quando raggiunge l&quot;endpoint remoto. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsEncrypted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  id: IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene un <xref:System.Boolean>valore che indica se sono stati autenticati entrambi server e client.</xref:System.Boolean>"
  remarks: "L&quot;autenticazione reciproca viene specificato dal server quando il server eseguirà il client di fornire un certificato per l&quot;autenticazione."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_11_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_11_1.cs)]"
  syntax:
    content: public override bool IsMutuallyAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il server è stato autenticato; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsServer
  id: IsServer
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene un <xref:System.Boolean>valore che indica se il lato locale della connessione utilizzata da questo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> come il server è stato autenticato.</xref:System.Boolean>"
  remarks: "Se l&quot;autenticazione non riuscita o non è stata eseguita, questa proprietà restituisce `false`.       Per eseguire l&quot;autenticazione del server, chiamare il <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>o <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metodi.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_13_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_13_1.cs)]"
  syntax:
    content: public override bool IsServer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;endpoint locale è stato autenticato come lato server della connessione autenticata; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsServer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsSigned
  id: IsSigned
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene un <xref:System.Boolean>valore che indica se i dati inviati tramite il flusso sono firmati.</xref:System.Boolean>"
  remarks: "Dati firma consente di proteggere l&quot;integrità dei dati, vale a dire consente il destinatario determinare se sono stati alterati i dati in transito."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_19_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_19_1.cs)]"
  syntax:
    content: public override bool IsSigned { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i dati vengono firmati prima di essere trasmessi; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsSigned*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene l&quot;algoritmo di scambio di chiave usata da questo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Il valore di questa proprietà è <xref:System.Security.Authentication.ExchangeAlgorithmType>finché non si verifica l&quot;autenticazione.</xref:System.Security.Authentication.ExchangeAlgorithmType>       L&quot;algoritmo di scambio delle chiavi consente di proteggere le informazioni utilizzate per generare le chiavi condivise."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_16_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_16_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }
    return:
      type: System.Security.Authentication.ExchangeAlgorithmType
      description: "Un <xref:System.Security.Authentication.ExchangeAlgorithmType>valore.</xref:System.Security.Authentication.ExchangeAlgorithmType>"
  overload: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  id: KeyExchangeStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene un valore che identifica il livello di attendibilità dell&quot;algoritmo di scambio delle chiavi utilizzato da questa istanza."
  remarks: "Il valore di questa proprietà è zero fino a quando non si verifica l&quot;autenticazione.       In scenari comuni, il valore di questa proprietà è uno dei seguenti: - 512 768-1024, 2048"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public virtual int KeyExchangeStrength { get; }
    return:
      type: System.Int32
      description: "Un <xref:System.Int32>valore che specifica il livello della <xref:System.Security.Authentication.ExchangeAlgorithmType>algoritmo, in bit.</xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Int32>"
  overload: System.Net.Security.SslStream.KeyExchangeStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Length
  id: Length
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene la lunghezza del flusso sottostante."
  remarks: "Questa proprietà restituisce il valore restituito richiamando <xref:System.IO.Stream.Length%2A>nel flusso sottostante.</xref:System.IO.Stream.Length%2A> Se il flusso sottostante non è ricercabile, questo metodo genera un&quot;eccezione in genere di un&quot;eccezione. Il tipo di runtime del flusso sottostante determina il tipo di runtime dell&quot;eccezione generata."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       La lunghezza del flusso sottostante."
  overload: System.Net.Security.SslStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Ottenere il valore di questa proprietà non è supportata quando il flusso sottostante è un <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.LocalCertificate
  id: LocalCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene il certificato usato per autenticare l&quot;endpoint locale."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_1_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_1_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Oggetto X509Certificate che rappresenta il certificato fornito per l&quot;autenticazione o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se è stato fornito alcun certificato."
  overload: System.Net.Security.SslStream.LocalCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticazione non riuscita o non si è verificato."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Position
  id: Position
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene o imposta la posizione corrente nel flusso sottostante."
  remarks: "Questa proprietà restituisce il valore restituito richiamando <xref:System.IO.Stream.Position%2A>nel flusso sottostante.</xref:System.IO.Stream.Position%2A> Se il flusso sottostante non è ricercabile, questo metodo genera un&quot;eccezione in genere di un&quot;eccezione. Il tipo di runtime del flusso sottostante determina il tipo di runtime dell&quot;eccezione generata."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       La posizione corrente nel flusso sottostante."
  overload: System.Net.Security.SslStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "L&quot;impostazione di questa proprietà non è supportata.       - oppure - ottenere il valore di questa proprietà non è supportata quando il flusso sottostante è un <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Legge i dati dal flusso corrente e lo archivia nella matrice specificata."
  remarks: "Il metodo legge un numero massimo di `count` byte dal flusso e li archivia in `buffer` a partire da `offset`. È possibile eseguire più operazioni di lettura simultanee.       È possibile chiamare questo metodo fino a quando non è stata effettuata l&quot;autenticazione. Per l&quot;autenticazione di chiamare uno del <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, o <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metodi.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Per eseguire questa operazione in modo asincrono, utilizzare il <xref:System.Net.Security.SslStream.BeginRead%2A>metodo.</xref:System.Net.Security.SslStream.BeginRead%2A>"
  example:
  - "The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslClientSync#6](~/add/codesnippet/cpp/m-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslClientSync#6](~/add/codesnippet/csharp/m-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Oggetto <xref:System.Byte>matrice che riceve i byte letti dal flusso corrente.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Oggetto <xref:System.Int32>che contiene la posizione in base zero in `buffer` da cui iniziare l&quot;archiviazione dei dati letti dal flusso corrente.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "Oggetto <xref:System.Int32>che contiene il numero massimo di byte da leggere dal flusso corrente.</xref:System.Int32>"
    return:
      type: System.Int32
      description: "Oggetto <xref:System.Int32>valore che specifica il numero di byte letti.</xref:System.Int32> Se non sono presenti ulteriori dati da leggere, restituisce 0."
  overload: System.Net.Security.SslStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; la lunghezza di <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "L&quot;operazione di lettura non riuscita. Controllare l&quot;eccezione interna, se presente, per determinare la causa dell&quot;errore."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "È già in corso un&quot;operazione di lettura."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato chiuso."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticazione non è stata eseguita."
  platform:
  - net462
- uid: System.Net.Security.SslStream.ReadTimeout
  id: ReadTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene o imposta la quantità di tempo di che un&quot;operazione di lettura blocca in attesa dei dati."
  remarks: "Questa proprietà restituisce il valore restituito richiamando <xref:System.IO.Stream.ReadTimeout%2A>nel flusso sottostante.</xref:System.IO.Stream.ReadTimeout%2A> Quando si imposta questa proprietà, il <xref:System.IO.Stream.ReadTimeout%2A>nel flusso sottostante è impostato sul valore specificato.</xref:System.IO.Stream.ReadTimeout%2A>       Se il flusso sottostante è un <xref:System.Net.Sockets.NetworkStream>, ReadTimeout è espresso in millisecondi e viene impostato su <xref:System.Threading.Timeout.Infinite>per impostazione predefinita, in modo che le operazioni di lettura non timeout.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_18_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_18_1.cs)]"
  syntax:
    content: public override int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: "Oggetto <xref:System.Int32>che specifica la quantità di tempo che deve trascorrere prima che l&quot;operazione ha esito negativo di lettura sincrona.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.ReadTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.RemoteCertificate
  id: RemoteCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene il certificato usato per autenticare l&quot;endpoint remoto."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_15_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_15_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Oggetto X509Certificate che rappresenta il certificato fornito per l&quot;autenticazione o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se è stato fornito alcun certificato."
  overload: System.Net.Security.SslStream.RemoteCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticazione non riuscita o non si è verificato."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Genera un <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "Non chiamare questo metodo. Viene ereditato, ma non è supportata dalla <xref:System.Net.Security.SslStream>classe.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Questo valore viene ignorato."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Questo valore viene ignorato."
    return:
      type: System.Int64
      description: "Genera sempre un <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.Security.SslStream.Seek*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La ricerca non è supportata da <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> oggetti."
  platform:
  - net462
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Imposta la lunghezza del flusso sottostante."
  remarks: "Questo metodo richiama <xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>nel flusso sottostante specificato quando questo <xref:System.Net.Security.SslStream>è stato creato.</xref:System.Net.Security.SslStream> </xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Un <xref:System.Int64>valore che specifica la lunghezza del flusso.</xref:System.Int64>"
  overload: System.Net.Security.SslStream.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.SslProtocol
  id: SslProtocol
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene un valore che indica il protocollo di sicurezza usato per autenticare la connessione."
  remarks: "Protocolli di sicurezza supportati vengono specificati quando il <xref:System.Net.Security.SslStream>viene creato.</xref:System.Net.Security.SslStream> Se nessun protocollo di sicurezza è stato passato al costruttore, l&quot;istanza viene creata utilizzando <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Il protocollo utilizzato per l&quot;autenticazione viene selezionato in base ai protocolli supportati dal client e server."
  example:
  - "The following example displays the security properties of the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_7_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_7_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }
    return:
      type: System.Security.Authentication.SslProtocols
      description: "Il <xref:System.Security.Authentication.SslProtocols>valore che rappresenta il protocollo utilizzato per l&quot;autenticazione.</xref:System.Security.Authentication.SslProtocols>"
  overload: System.Net.Security.SslStream.SslProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.TransportContext
  id: TransportContext
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene il <xref:System.Net.TransportContext>utilizzato per l&quot;autenticazione mediante la protezione estesa.</xref:System.Net.TransportContext>"
  syntax:
    content: public System.Net.TransportContext TransportContext { get; }
    return:
      type: System.Net.TransportContext
      description: "La <xref:System.Net.TransportContext>oggetto che contiene il token di associazione di canale (CBT) utilizzato per la protezione estesa.</xref:System.Net.TransportContext>"
  overload: System.Net.Security.SslStream.TransportContext*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  id: Write(System.Byte[])
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Scrive i dati specificati in questo flusso."
  remarks: "Questo metodo si blocca durante il completamento dell&quot;operazione. Per evitare il blocco di completamento dell&quot;operazione, utilizzare il <xref:System.Net.Security.SslStream.BeginWrite%2A>metodo.</xref:System.Net.Security.SslStream.BeginWrite%2A>       È possibile chiamare questo metodo fino a quando non è stata effettuata l&quot;autenticazione. Per l&quot;autenticazione di chiamare uno del <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, o <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metodi.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       La <xref:System.Net.Security.SslStream>classe non supporta più operazioni di scrittura simultanee.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public void Write (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Oggetto <xref:System.Byte>matrice che fornisce i byte scritti nel flusso.</xref:System.Byte>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "L&quot;operazione di scrittura non riuscita."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "È già in corso un&quot;operazione di scrittura."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato chiuso."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticazione non è stata eseguita."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Scrivere il numero specificato di <xref:System.Byte>s per il flusso sottostante utilizzando il buffer specificato e l&quot;offset.</xref:System.Byte>"
  remarks: "Questo metodo si blocca durante il completamento dell&quot;operazione. Per evitare il blocco durante l&quot;operazione di completamento dell&quot;operazione, utilizzare il <xref:System.Net.Security.SslStream.BeginWrite%2A>metodo.</xref:System.Net.Security.SslStream.BeginWrite%2A>       È possibile chiamare questo metodo fino a quando non è stata effettuata l&quot;autenticazione. Per l&quot;autenticazione di chiamare uno del <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, o <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>metodi.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       La <xref:System.Net.Security.SslStream>classe non supporta più operazioni di scrittura simultanee.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Oggetto <xref:System.Byte>matrice che fornisce i byte scritti nel flusso.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Oggetto <xref:System.Int32>che contiene la posizione in base zero in `buffer` in corrispondenza del quale iniziare la lettura dei byte da scrivere nel flusso.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "Oggetto <xref:System.Int32>che contiene il numero di byte da leggere da `buffer`.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; la lunghezza di <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "L&quot;operazione di scrittura non riuscita."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "È già in corso un&quot;operazione di scrittura."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Questo oggetto è stato chiuso."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticazione non è stata eseguita."
  platform:
  - net462
- uid: System.Net.Security.SslStream.WriteTimeout
  id: WriteTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Ottiene o imposta la quantità di tempo di che un&quot;operazione di scrittura si blocca in attesa dei dati."
  remarks: "Questa proprietà restituisce il valore restituito richiamando <xref:System.IO.Stream.WriteTimeout%2A>nel flusso sottostante.</xref:System.IO.Stream.WriteTimeout%2A> Per le operazioni set, imposta il valore specificato di <xref:System.IO.Stream.WriteTimeout%2A>valore nel flusso sottostante.</xref:System.IO.Stream.WriteTimeout%2A>       Se il flusso sottostante è un <xref:System.Net.Sockets.NetworkStream>, WriteTimeout è espresso in millisecondi e viene impostato su <xref:System.Threading.Timeout.Infinite>per impostazione predefinita, in modo che le operazioni di scrittura non di timeout.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_12_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_12_1.cs)]"
  syntax:
    content: public override int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "Oggetto <xref:System.Int32>che specifica la quantità di tempo che deve trascorrere prima che un&quot;operazione di scrittura sincrona non riesce.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.WriteTimeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: System.Net.Security.AuthenticatedStream
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Authentication.AuthenticationException
  parent: System.Security.Authentication
  isExternal: false
  name: AuthenticationException
  nameWithType: AuthenticationException
  fullName: System.Security.Authentication.AuthenticationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
- uid: System.Net.Security.RemoteCertificateValidationCallback
  parent: System.Net.Security
  isExternal: false
  name: RemoteCertificateValidationCallback
  nameWithType: RemoteCertificateValidationCallback
  fullName: System.Net.Security.RemoteCertificateValidationCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
- uid: System.Net.Security.LocalCertificateSelectionCallback
  parent: System.Net.Security
  isExternal: false
  name: LocalCertificateSelectionCallback
  nameWithType: LocalCertificateSelectionCallback
  fullName: System.Net.Security.LocalCertificateSelectionCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
- uid: System.Net.Security.EncryptionPolicy
  parent: System.Net.Security
  isExternal: false
  name: EncryptionPolicy
  nameWithType: EncryptionPolicy
  fullName: System.Net.Security.EncryptionPolicy
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Security.Authentication.SslProtocols
  parent: System.Security.Authentication
  isExternal: true
  name: SslProtocols
  nameWithType: SslProtocols
  fullName: System.Security.Authentication.SslProtocols
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.CanRead
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
- uid: System.Security.Authentication.CipherAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: CipherAlgorithmType
  nameWithType: CipherAlgorithmType
  fullName: System.Security.Authentication.CipherAlgorithmType
- uid: System.Net.Security.SslStream.CipherStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
- uid: System.Net.Security.SslStream.Flush
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
- uid: System.Net.Security.SslStream.HashAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
- uid: System.Security.Authentication.HashAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: HashAlgorithmType
  nameWithType: HashAlgorithmType
  fullName: System.Security.Authentication.HashAlgorithmType
- uid: System.Net.Security.SslStream.HashStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
- uid: System.Security.Authentication.ExchangeAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: ExchangeAlgorithmType
  nameWithType: ExchangeAlgorithmType
  fullName: System.Security.Authentication.ExchangeAlgorithmType
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Security.SslStream.LocalCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.ReadTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
- uid: System.Net.Security.SslStream.SslProtocol
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.WriteTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
- uid: System.Net.Security.SslStream.#ctor*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream
  nameWithType: SslStream.SslStream
- uid: System.Net.Security.SslStream.AuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient
  nameWithType: SslStream.AuthenticateAsClient
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync
  nameWithType: SslStream.AuthenticateAsClientAsync
- uid: System.Net.Security.SslStream.AuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer
  nameWithType: SslStream.AuthenticateAsServer
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync
  nameWithType: SslStream.AuthenticateAsServerAsync
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient
  nameWithType: SslStream.BeginAuthenticateAsClient
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer
  nameWithType: SslStream.BeginAuthenticateAsServer
- uid: System.Net.Security.SslStream.BeginRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead
  nameWithType: SslStream.BeginRead
- uid: System.Net.Security.SslStream.BeginWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite
  nameWithType: SslStream.BeginWrite
- uid: System.Net.Security.SslStream.CanRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
- uid: System.Net.Security.SslStream.CipherStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose
  nameWithType: SslStream.Dispose
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient
  nameWithType: SslStream.EndAuthenticateAsClient
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer
  nameWithType: SslStream.EndAuthenticateAsServer
- uid: System.Net.Security.SslStream.EndRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead
  nameWithType: SslStream.EndRead
- uid: System.Net.Security.SslStream.EndWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite
  nameWithType: SslStream.EndWrite
- uid: System.Net.Security.SslStream.Flush*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush
  nameWithType: SslStream.Flush
- uid: System.Net.Security.SslStream.HashAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
- uid: System.Net.Security.SslStream.HashStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
- uid: System.Net.Security.SslStream.KeyExchangeStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
- uid: System.Net.Security.SslStream.LocalCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
- uid: System.Net.Security.SslStream.Read*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read
  nameWithType: SslStream.Read
- uid: System.Net.Security.SslStream.ReadTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek
  nameWithType: SslStream.Seek
- uid: System.Net.Security.SslStream.SetLength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength
  nameWithType: SslStream.SetLength
- uid: System.Net.Security.SslStream.SslProtocol*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
- uid: System.Net.Security.SslStream.Write*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write
  nameWithType: SslStream.Write
- uid: System.Net.Security.SslStream.WriteTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
