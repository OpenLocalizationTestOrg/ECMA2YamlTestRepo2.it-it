### YamlMime:ManagedReference
items:
- uid: System.Messaging.AccessControlEntry
  id: AccessControlEntry
  children:
  - System.Messaging.AccessControlEntry.#ctor
  - System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)
  - System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)
  - System.Messaging.AccessControlEntry.CustomAccessRights
  - System.Messaging.AccessControlEntry.EntryType
  - System.Messaging.AccessControlEntry.GenericAccessRights
  - System.Messaging.AccessControlEntry.StandardAccessRights
  - System.Messaging.AccessControlEntry.Trustee
  langs:
  - csharp
  name: AccessControlEntry
  nameWithType: AccessControlEntry
  fullName: System.Messaging.AccessControlEntry
  type: Class
  summary: "Specifica i diritti di accesso per un elemento trusted (utente, gruppo o computer) per eseguire le implementazioni specifiche dell&quot;applicazione delle attività comuni."
  remarks: "Molte applicazioni hanno operazioni simili a cui un dominio trusted può essere assegnato diritti, ad esempio, durante la lettura, scrittura ed eliminazione di oggetti. Quando si assegnano diritti per queste operazioni generali, l&quot;applicazione li interpreta in modo specifico a tale applicazione. Ad esempio, Accodamento messaggi interpreta l&quot;operazione di lettura come riceve o si visualizza i messaggi da una coda. La classe AccessControlEntry fornisce l&quot;accesso a questi diritti comuni.       Quando si lavora con voci di controllo di accesso, specificare un dominio trusted a cui assegnare i diritti. È necessario impostare almeno uno del <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, o <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>proprietà per indicare i diritti da assegnare al dominio trusted.</xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> </xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A> </xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A> È possibile impostare il <xref:System.Messaging.AccessControlEntry.EntryType%2A>proprietà per specificare se i diritti è indicare devono essere concesse o negati.</xref:System.Messaging.AccessControlEntry.EntryType%2A> Il tipo di voce predefinito diritti verrà concessi."
  syntax:
    content: public class AccessControlEntry
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.#ctor
  id: '#ctor'
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: AccessControlEntry()
  nameWithType: AccessControlEntry.AccessControlEntry()
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> classe che non specifica un dominio trusted o set di diritti da applicare."
  remarks: "Impostare il <xref:System.Messaging.AccessControlEntry.Trustee%2A>proprietà e almeno uno del <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, o <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>proprietà prima di utilizzare questa <xref:System.Messaging.AccessControlEntry>istanza per impostare i diritti di accesso per un dominio trusted.</xref:System.Messaging.AccessControlEntry> </xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> </xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A> </xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A> </xref:System.Messaging.AccessControlEntry.Trustee%2A>       È possibile impostare facoltativamente il <xref:System.Messaging.AccessControlEntry.EntryType%2A>proprietà, anche se il valore predefinito è `Allow` se si sceglie di non eseguire tale operazione</xref:System.Messaging.AccessControlEntry.EntryType%2A>"
  syntax:
    content: public AccessControlEntry ();
    parameters: []
  overload: System.Messaging.AccessControlEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)
  id: '#ctor(System.Messaging.Trustee)'
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: AccessControlEntry(Trustee)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> classe che specifica un dominio trusted, in cui i diritti vengono concessi o negati."
  remarks: "Impostare il <xref:System.Messaging.AccessControlEntry.EntryType%2A>proprietà e almeno uno del <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, o <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>proprietà prima di utilizzare questa <xref:System.Messaging.AccessControlEntry>istanza per impostare i diritti di accesso per un dominio trusted.</xref:System.Messaging.AccessControlEntry> </xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> </xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A> </xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A> </xref:System.Messaging.AccessControlEntry.EntryType%2A>"
  syntax:
    content: public AccessControlEntry (System.Messaging.Trustee trustee);
    parameters:
    - id: trustee
      type: System.Messaging.Trustee
      description: "Oggetto <xref href=&quot;System.Messaging.Trustee&quot;> </xref> che specifica un utente, gruppo, computer, dominio o alias."
  overload: System.Messaging.AccessControlEntry.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>trustee</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)
  id: '#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)'
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> classe che specifica un dominio trusted, i diritti da assegnare e se concedere o negare tali diritti."
  remarks: "Questo overload del costruttore imposta la <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>proprietà a una combinazione bit per bit del `genericAccessRights` e `standardAccessRights` parametri specificati.</xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>"
  syntax:
    content: public AccessControlEntry (System.Messaging.Trustee trustee, System.Messaging.GenericAccessRights genericAccessRights, System.Messaging.StandardAccessRights standardAccessRights, System.Messaging.AccessControlEntryType entryType);
    parameters:
    - id: trustee
      type: System.Messaging.Trustee
      description: "Oggetto <xref href=&quot;System.Messaging.Trustee&quot;> </xref> che specifica un utente, gruppo, computer, dominio o alias."
    - id: genericAccessRights
      type: System.Messaging.GenericAccessRights
      description: "Combinazione bit per bit di <xref href=&quot;System.Messaging.GenericAccessRights&quot;> </xref> valori."
    - id: standardAccessRights
      type: System.Messaging.StandardAccessRights
      description: "Combinazione bit per bit di <xref href=&quot;System.Messaging.StandardAccessRights&quot;> </xref> valori."
    - id: entryType
      type: System.Messaging.AccessControlEntryType
      description: "Uno del <xref href=&quot;System.Messaging.AccessControlEntryType&quot;> </xref> valori, che specifica se consentire, deny, impostare o revocare i diritti specificati."
  overload: System.Messaging.AccessControlEntry.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>trustee</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Il <code> genericAccessRights </code>, <code> standardAccessRights </code>, o <code> entryType </code> parametri non sono valori di enumerazione validi."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.CustomAccessRights
  id: CustomAccessRights
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: CustomAccessRights
  nameWithType: AccessControlEntry.CustomAccessRights
  fullName: System.Messaging.AccessControlEntry.CustomAccessRights
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Ottiene o imposta i diritti di accesso personalizzata."
  syntax:
    content: protected int CustomAccessRights { get; set; }
    return:
      type: System.Int32
      description: "Diritti di accesso specifici dell&quot;applicazione, in genere definiti come flag di bit."
  overload: System.Messaging.AccessControlEntry.CustomAccessRights*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.EntryType
  id: EntryType
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: EntryType
  nameWithType: AccessControlEntry.EntryType
  fullName: System.Messaging.AccessControlEntry.EntryType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Ottiene o imposta un valore che indica come di applicare i diritti di accesso al dominio trusted."
  syntax:
    content: public System.Messaging.AccessControlEntryType EntryType { get; set; }
    return:
      type: System.Messaging.AccessControlEntryType
      description: "Uno del <xref href=&quot;System.Messaging.AccessControlEntryType&quot;> </xref> valori, che specifica se consentire, deny, impostare o revocare i diritti specificati. Il valore predefinito è <xref uid=&quot;langword_csharp_Allow&quot; name=&quot;Allow&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.AccessControlEntry.EntryType*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Il tipo di voce non è un valido <xref href=&quot;System.Messaging.AccessControlEntryType&quot;> </xref> valore di enumerazione."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.GenericAccessRights
  id: GenericAccessRights
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: GenericAccessRights
  nameWithType: AccessControlEntry.GenericAccessRights
  fullName: System.Messaging.AccessControlEntry.GenericAccessRights
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Ottiene o imposta un set comune di diritti di accesso che eseguono il mapping di entrambi diritti di accesso standard e specifiche dell&quot;oggetto per la lettura, scrittura ed esecuzione."
  remarks: "Gli oggetti a protezione diretta utilizzano i quattro bit più significativi del formato maschera di accesso di Windows 2000 e Windows NT per specificare i diritti di accesso generici. Ogni tipo di oggetto a protezione diretta esegue il mapping di questi bit a un set dei relativi diritti di accesso standard e specifiche dell&quot;oggetto. Le applicazioni che definiscono gli oggetti a protezione diretta privati è anche possono usare i diritti di accesso generici."
  syntax:
    content: public System.Messaging.GenericAccessRights GenericAccessRights { get; set; }
    return:
      type: System.Messaging.GenericAccessRights
      description: "Combinazione bit per bit di <xref href=&quot;System.Messaging.GenericAccessRights&quot;> </xref> valori."
  overload: System.Messaging.AccessControlEntry.GenericAccessRights*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Il valore impostato non è una combinazione valida di <xref href=&quot;System.Messaging.GenericAccessRights&quot;> </xref> i membri di flag di bit."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.StandardAccessRights
  id: StandardAccessRights
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: StandardAccessRights
  nameWithType: AccessControlEntry.StandardAccessRights
  fullName: System.Messaging.AccessControlEntry.StandardAccessRights
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Ottiene o imposta un set standard di diritti di accesso che corrispondono alle operazioni comuni per la maggior parte dei tipi di oggetti a protezione diretta."
  remarks: "Il formato maschera di accesso di Windows 2000 e Windows NT include un set di bit per i diritti di accesso standard. Ogni tipo di oggetto a protezione diretta dispone di un set di diritti di accesso che corrispondono alle operazioni specifiche per il tipo di oggetto. Oltre a questi diritti di accesso specifiche dell&quot;oggetto, è un set standard di diritti di accesso che corrispondono alle operazioni comuni alla maggior parte dei tipi di oggetti a protezione diretta."
  syntax:
    content: public System.Messaging.StandardAccessRights StandardAccessRights { get; set; }
    return:
      type: System.Messaging.StandardAccessRights
      description: "Combinazione bit per bit di <xref href=&quot;System.Messaging.StandardAccessRights&quot;> </xref> valori."
  overload: System.Messaging.AccessControlEntry.StandardAccessRights*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Il valore impostato non è una combinazione valida di <xref href=&quot;System.Messaging.StandardAccessRights&quot;> </xref> i membri di flag di bit."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.Trustee
  id: Trustee
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: Trustee
  nameWithType: AccessControlEntry.Trustee
  fullName: System.Messaging.AccessControlEntry.Trustee
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Ottiene o imposta l&quot;utente, gruppo, dominio o l&quot;alias a cui si siano assegnando i diritti di accesso."
  remarks: "Utenti e programmi, ad esempio servizi di Win32, è possibile utilizzare gli account utente per accedere al computer locale. Gli account di gruppo non può essere utilizzati per accedere a un computer, ma sono utili in <xref:System.Messaging.AccessControlEntry>istanze per consentire o negare a un set di diritti di accesso a uno o più account utente.</xref:System.Messaging.AccessControlEntry>"
  syntax:
    content: public System.Messaging.Trustee Trustee { get; set; }
    return:
      type: System.Messaging.Trustee
      description: "Oggetto <xref href=&quot;System.Messaging.Trustee&quot;> </xref> che specifica un account utente, un account di gruppo o una sessione di accesso a cui un <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> si applica."
  overload: System.Messaging.AccessControlEntry.Trustee*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La proprietà Trustee <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Messaging.AccessControlEntry.#ctor
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry()
  nameWithType: AccessControlEntry.AccessControlEntry()
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry()
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry(Trustee)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee)
- uid: System.Messaging.Trustee
  parent: System.Messaging
  isExternal: false
  name: Trustee
  nameWithType: Trustee
  fullName: System.Messaging.Trustee
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
- uid: System.Messaging.GenericAccessRights
  parent: System.Messaging
  isExternal: false
  name: GenericAccessRights
  nameWithType: GenericAccessRights
  fullName: System.Messaging.GenericAccessRights
- uid: System.Messaging.StandardAccessRights
  parent: System.Messaging
  isExternal: false
  name: StandardAccessRights
  nameWithType: StandardAccessRights
  fullName: System.Messaging.StandardAccessRights
- uid: System.Messaging.AccessControlEntryType
  parent: System.Messaging
  isExternal: false
  name: AccessControlEntryType
  nameWithType: AccessControlEntryType
  fullName: System.Messaging.AccessControlEntryType
- uid: System.Messaging.AccessControlEntry.CustomAccessRights
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: CustomAccessRights
  nameWithType: AccessControlEntry.CustomAccessRights
  fullName: System.Messaging.AccessControlEntry.CustomAccessRights
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Messaging.AccessControlEntry.EntryType
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: EntryType
  nameWithType: AccessControlEntry.EntryType
  fullName: System.Messaging.AccessControlEntry.EntryType
- uid: System.Messaging.AccessControlEntry.GenericAccessRights
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: GenericAccessRights
  nameWithType: AccessControlEntry.GenericAccessRights
  fullName: System.Messaging.AccessControlEntry.GenericAccessRights
- uid: System.Messaging.AccessControlEntry.StandardAccessRights
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: StandardAccessRights
  nameWithType: AccessControlEntry.StandardAccessRights
  fullName: System.Messaging.AccessControlEntry.StandardAccessRights
- uid: System.Messaging.AccessControlEntry.Trustee
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: Trustee
  nameWithType: AccessControlEntry.Trustee
  fullName: System.Messaging.AccessControlEntry.Trustee
- uid: System.Messaging.AccessControlEntry.#ctor*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry
  nameWithType: AccessControlEntry.AccessControlEntry
- uid: System.Messaging.AccessControlEntry.CustomAccessRights*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: CustomAccessRights
  nameWithType: AccessControlEntry.CustomAccessRights
- uid: System.Messaging.AccessControlEntry.EntryType*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: EntryType
  nameWithType: AccessControlEntry.EntryType
- uid: System.Messaging.AccessControlEntry.GenericAccessRights*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: GenericAccessRights
  nameWithType: AccessControlEntry.GenericAccessRights
- uid: System.Messaging.AccessControlEntry.StandardAccessRights*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: StandardAccessRights
  nameWithType: AccessControlEntry.StandardAccessRights
- uid: System.Messaging.AccessControlEntry.Trustee*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: Trustee
  nameWithType: AccessControlEntry.Trustee
