### YamlMime:ManagedReference
items:
- uid: System.Data.DataRelationCollection
  id: DataRelationCollection
  children:
  - System.Data.DataRelationCollection.#ctor
  - System.Data.DataRelationCollection.Add(System.Data.DataRelation)
  - System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  - System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)
  - System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])
  - System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)
  - System.Data.DataRelationCollection.Clear
  - System.Data.DataRelationCollection.CollectionChanged
  - System.Data.DataRelationCollection.Contains(System.String)
  - System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)
  - System.Data.DataRelationCollection.GetDataSet
  - System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)
  - System.Data.DataRelationCollection.IndexOf(System.String)
  - System.Data.DataRelationCollection.Item(System.Int32)
  - System.Data.DataRelationCollection.Item(System.String)
  - System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  - System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  - System.Data.DataRelationCollection.Remove(System.Data.DataRelation)
  - System.Data.DataRelationCollection.Remove(System.String)
  - System.Data.DataRelationCollection.RemoveAt(System.Int32)
  - System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)
  langs:
  - csharp
  name: DataRelationCollection
  nameWithType: DataRelationCollection
  fullName: System.Data.DataRelationCollection
  type: Class
  summary: "Rappresenta la raccolta di <xref href=&quot;System.Data.DataRelation&quot;> </xref> oggetti per questo <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  remarks: "Un oggetto DataRelationCollection consente lo spostamento tra padre/figlio correlati <xref:System.Data.DataTable>oggetti.</xref:System.Data.DataTable>       Creare un oggetto DataRelationCollection che lo definisce come proprietà di uno il <xref:System.Data.DataSet>o <xref:System.Data.DataTable>, anziché direttamente tramite un costruttore.</xref:System.Data.DataTable> </xref:System.Data.DataSet> (Utilizzare il <xref:System.Data.DataSet.Relations%2A>proprietà del <xref:System.Data.DataSet>, o <xref:System.Data.DataTable.ParentRelations%2A>proprietà del <xref:System.Data.DataTable>.)</xref:System.Data.DataTable> </xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A>       Per accedere alla raccolta, utilizzare il <xref:System.Data.DataSet.Relations%2A>proprietà del <xref:System.Data.DataSet>oggetto.</xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A>       Non appena la raccolta è possibile gestire gli oggetti contenuti utilizzando i metodi, ad esempio <xref:System.Data.DataRelationCollection.Add%2A>, <xref:System.Data.DataRelationCollection.Clear%2A>e <xref:System.Data.DataRelationCollection.Remove%2A>.</xref:System.Data.DataRelationCollection.Remove%2A> </xref:System.Data.DataRelationCollection.Clear%2A> </xref:System.Data.DataRelationCollection.Add%2A>"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      [System.ComponentModel.DefaultProperty("Table")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataRelationCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public abstract class DataRelationCollection : System.Data.InternalDataCollectionBase
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)
  - System.Data.InternalDataCollectionBase.Count
  - System.Data.InternalDataCollectionBase.GetEnumerator
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.List
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.DataRelationCollection.#ctor
  id: '#ctor'
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: DataRelationCollection()
  nameWithType: DataRelationCollection.DataRelationCollection()
  fullName: System.Data.DataRelationCollection.DataRelationCollection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref> classe."
  syntax:
    content: protected DataRelationCollection ();
    parameters: []
  overload: System.Data.DataRelationCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.Data.DataRelation)
  id: Add(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(DataRelation)
  nameWithType: DataRelationCollection.Add(DataRelation)
  fullName: System.Data.DataRelationCollection.Add(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Adds a <xref href=&quot;System.Data.DataRelation&quot;></xref> to the <xref href=&quot;System.Data.DataRelationCollection&quot;></xref>."
  remarks: "Se la relazione viene aggiunto correttamente alla raccolta, il <xref:System.Data.DataRelationCollection.CollectionChanged>evento si verifica.</xref:System.Data.DataRelationCollection.CollectionChanged>       Quando un <xref:System.Data.DataRelation>oggetto viene aggiunto alla raccolta, <xref:System.Data.ForeignKeyConstraint>e <xref:System.Data.UniqueConstraint>gli oggetti vengono creati per impostazione predefinita se non esiste già.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public void Add (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "Il <xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref> da aggiungere alla raccolta."
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <code> relation </code> parametro è un valore null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La relazione appartiene già a questa raccolta, o appartiene a un&quot;altra raccolta."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "L&quot;insieme dispone già di una relazione con il nome specificato. (Il confronto non è tra maiuscole e minuscole)."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "La relazione è in uno stato non valido perché è stato creato."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)
  id: Add(System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(DataColumn,DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Crea un <xref href=&quot;System.Data.DataRelation&quot;> </xref> con una colonna figlio e l&quot;elemento padre specificato e lo aggiunge alla raccolta."
  remarks: "Quando un <xref:System.Data.DataRelation>oggetto viene aggiunto alla raccolta, <xref:System.Data.ForeignKeyConstraint>e <xref:System.Data.UniqueConstraint>gli oggetti vengono creati per impostazione predefinita se non esiste già.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public virtual System.Data.DataRelation Add (System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);
    parameters:
    - id: parentColumn
      type: System.Data.DataColumn
      description: "La colonna padre della relazione."
    - id: childColumn
      type: System.Data.DataColumn
      description: "La colonna figlio della relazione."
    return:
      type: System.Data.DataRelation
      description: "Relazione creata."
  overload: System.Data.DataRelationCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])
  id: Add(System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(DataColumn[],DataColumn[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Crea un <xref href=&quot;System.Data.DataRelation&quot;> </xref> padre specificato e le colonne figlio e lo aggiunge alla raccolta."
  remarks: "Quando un <xref:System.Data.DataRelation>oggetto viene aggiunto alla raccolta, <xref:System.Data.ForeignKeyConstraint>e <xref:System.Data.UniqueConstraint>gli oggetti vengono creati per impostazione predefinita se non esiste già.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public virtual System.Data.DataRelation Add (System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);
    parameters:
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "Le colonne padre della relazione."
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "Le colonne figlio della relazione."
    return:
      type: System.Data.DataRelation
      description: "Relazione creata."
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <code> relation </code> argomento è un valore null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La relazione appartiene già a questa raccolta, o appartiene a un&quot;altra raccolta."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "L&quot;insieme dispone già di una relazione con lo stesso nome. (Il confronto non è tra maiuscole e minuscole)."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "La relazione è in uno stato non valido perché è stato creato."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  id: Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Crea un <xref href=&quot;System.Data.DataRelation&quot;> </xref> con il nome specificato e le colonne padre e figlio e lo aggiunge alla raccolta."
  remarks: "Quando un <xref:System.Data.DataRelation>oggetto viene aggiunto alla raccolta, <xref:System.Data.ForeignKeyConstraint>e <xref:System.Data.UniqueConstraint>gli oggetti vengono creati per impostazione predefinita se non esiste già.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);
    parameters:
    - id: name
      type: System.String
      description: "Il nome della relazione."
    - id: parentColumn
      type: System.Data.DataColumn
      description: "La colonna padre della relazione."
    - id: childColumn
      type: System.Data.DataColumn
      description: "La colonna figlio della relazione."
    return:
      type: System.Data.DataRelation
      description: "Relazione creata."
  overload: System.Data.DataRelationCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  id: Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Crea un <xref href=&quot;System.Data.DataRelation&quot;> </xref> con il nome specificato e le matrici di colonne padre e figlio e lo aggiunge alla raccolta."
  remarks: "Se la relazione viene aggiunto correttamente alla raccolta, il <xref:System.Data.DataRelationCollection.CollectionChanged>evento si verifica.</xref:System.Data.DataRelationCollection.CollectionChanged>       Quando un <xref:System.Data.DataRelation>oggetto viene aggiunto alla raccolta, <xref:System.Data.ForeignKeyConstraint>e <xref:System.Data.UniqueConstraint>gli oggetti vengono creati per impostazione predefinita se non esiste già.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  example:
  - >-
    [!code-vb[Classic WebData DataRelationCollection.Add1 Example#1](~/add/codesnippet/visualbasic/6b73537f-f1c2-4f94-8352-_1.vb)]
     [!code-cs[Classic WebData DataRelationCollection.Add1 Example#1](~/add/codesnippet/csharp/6b73537f-f1c2-4f94-8352-_1.cs)]
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del <xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref> da creare."
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "Matrice di padre <xref href=&quot;System.Data.DataColumn&quot;> </xref> oggetti."
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "Matrice di elementi figlio <xref uid=&quot;langword_csharp_DataColumn&quot; name=&quot;DataColumn&quot; href=&quot;&quot;> </xref> oggetti."
    return:
      type: System.Data.DataRelation
      description: "L&quot;oggetto creato <xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il nome della relazione è un valore null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La relazione appartiene già a questa raccolta, o appartiene a un&quot;altra raccolta."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "L&quot;insieme dispone già di una relazione con lo stesso nome. (Il confronto non è tra maiuscole e minuscole)."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "La relazione è in uno stato non valido perché è stato creato."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  id: Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn,DataColumn,Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Crea un <xref href=&quot;System.Data.DataRelation&quot;> </xref> con le colonne nome, padre e figlio specificate con i vincoli facoltativi in base al valore del <code> createConstraints </code> parametro e lo aggiunge alla raccolta."
  remarks: "Quando un <xref:System.Data.DataRelation>oggetto viene aggiunto alla raccolta, <xref:System.Data.ForeignKeyConstraint>e <xref:System.Data.UniqueConstraint>gli oggetti vengono creati per impostazione predefinita se non esiste già.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation> Per evitare questo problema, è possibile impostare `createConstraints` su false."
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn, bool createConstraints);
    parameters:
    - id: name
      type: System.String
      description: "Il nome della relazione."
    - id: parentColumn
      type: System.Data.DataColumn
      description: "La colonna padre della relazione."
    - id: childColumn
      type: System.Data.DataColumn
      description: "La colonna figlio della relazione."
    - id: createConstraints
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per creare vincoli. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. (Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>)."
    return:
      type: System.Data.DataRelation
      description: "Relazione creata."
  overload: System.Data.DataRelationCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  id: Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn[],DataColumn[],Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Crea un <xref href=&quot;System.Data.DataRelation&quot;> </xref> con il nome specificato, le matrici di colonne padre e figlio e un valore che specifica se creare un vincolo e lo aggiunge alla raccolta."
  remarks: "Quando un <xref:System.Data.DataRelation>oggetto viene aggiunto alla raccolta, <xref:System.Data.ForeignKeyConstraint>e <xref:System.Data.UniqueConstraint>gli oggetti vengono creati per impostazione predefinita se non esiste già.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataRelation>"
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns, bool createConstraints);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del <xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref> da creare."
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "Matrice di padre <xref href=&quot;System.Data.DataColumn&quot;> </xref> oggetti."
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "Matrice di elementi figlio <xref uid=&quot;langword_csharp_DataColumn&quot; name=&quot;DataColumn&quot; href=&quot;&quot;> </xref> oggetti."
    - id: createConstraints
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per creare un vincolo. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Data.DataRelation
      description: "Relazione creata."
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il nome della relazione è un valore null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La relazione appartiene già a questa raccolta, o appartiene a un&quot;altra raccolta."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "L&quot;insieme dispone già di una relazione con lo stesso nome. (Il confronto non è tra maiuscole e minuscole)."
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "La relazione è in uno stato non valido perché è stato creato."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)
  id: AddCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: AddCore(DataRelation)
  nameWithType: DataRelationCollection.AddCore(DataRelation)
  fullName: System.Data.DataRelationCollection.AddCore(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Esegue una verifica della tabella."
  syntax:
    content: protected virtual void AddCore (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "Relazione da verificare."
  overload: System.Data.DataRelationCollection.AddCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La relazione è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La relazione appartiene già a questa raccolta, o appartiene a un&quot;altra raccolta."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "L&quot;insieme dispone già di una relazione con lo stesso nome. (Il confronto non è tra maiuscole e minuscole)."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])
  id: AddRange(System.Data.DataRelation[])
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: AddRange(DataRelation[])
  nameWithType: DataRelationCollection.AddRange(DataRelation[])
  fullName: System.Data.DataRelationCollection.AddRange(DataRelation[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Copia gli elementi dell&quot;oggetto specificato <xref href=&quot;System.Data.DataRelation&quot;> </xref> matrice alla fine della raccolta."
  remarks: "Se <xref:System.Data.DataSet.BeginInit%2A>è stato chiamato, `AddRange` non aggiunge tutti gli oggetti nella raccolta fino a quando <xref:System.Data.DataSet.EndInit%2A>viene chiamato.</xref:System.Data.DataSet.EndInit%2A> </xref:System.Data.DataSet.BeginInit%2A> Al momento che `EndInit` viene chiamato, la raccolta verrà popolata con gli elementi specificati nella chiamata più recente a `AddRange`. Se `AddRange` viene chiamato più volte all&quot;interno di un `BeginInit`  /  `EndInit` mette in sequenza, solo gli elementi specificati nella chiamata più recente a `AddRange` vengono aggiunti."
  example:
  - >-
    [!code-cs[Classic WebData DataRelationCollection.AddRange Example#1](~/add/codesnippet/csharp/m-system.data.datarelati_0_1.cs)]
     [!code-vb[Classic WebData DataRelationCollection.AddRange Example#1](~/add/codesnippet/visualbasic/m-system.data.datarelati_0_1.vb)]
  syntax:
    content: public virtual void AddRange (System.Data.DataRelation[] relations);
    parameters:
    - id: relations
      type: System.Data.DataRelation[]
      description: "Matrice di <xref href=&quot;System.Data.DataRelation&quot;> </xref> oggetti da aggiungere alla raccolta."
  overload: System.Data.DataRelationCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)
  id: CanRemove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: CanRemove(DataRelation)
  nameWithType: DataRelationCollection.CanRemove(DataRelation)
  fullName: System.Data.DataRelationCollection.CanRemove(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Verifica se l&quot;oggetto specificato <xref href=&quot;System.Data.DataRelation&quot;> </xref> può essere rimosso dalla raccolta."
  syntax:
    content: public virtual bool CanRemove (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "La relazione su cui eseguire la verifica."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Data.DataRelation&quot;> </xref> può essere rimossa; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRelationCollection.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Clear
  id: Clear
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataRelationCollection.Clear()
  fullName: System.Data.DataRelationCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Cancella la raccolta di tutte le relazioni."
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Data.DataRelationCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: DataRelationCollection.CollectionChanged
  fullName: System.Data.DataRelationCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Si verifica quando la raccolta è stata modificata."
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: DataRelationCollection.Contains(String)
  fullName: System.Data.DataRelationCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Verifica se un <xref href=&quot;System.Data.DataRelation&quot;> </xref> con il nome specifico (distinzione tra maiuscole e minuscole) è presente nella raccolta."
  syntax:
    content: public virtual bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome della relazione da trovare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se esiste una relazione con il nome specificato. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataRelationCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)
  id: CopyTo(System.Data.DataRelation[],System.Int32)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: CopyTo(DataRelation[],Int32)
  nameWithType: DataRelationCollection.CopyTo(DataRelation[],Int32)
  fullName: System.Data.DataRelationCollection.CopyTo(DataRelation[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Copia la raccolta di <xref href=&quot;System.Data.DataRelation&quot;> </xref> oggetti a partire dall&quot;indice specificato."
  syntax:
    content: public void CopyTo (System.Data.DataRelation[] array, int index);
    parameters:
    - id: array
      type: System.Data.DataRelation[]
      description: "Matrice di <xref href=&quot;System.Data.DataRelation&quot;> </xref> oggetti da cui copiare la raccolta."
    - id: index
      type: System.Int32
      description: "Indice da cui iniziare."
  overload: System.Data.DataRelationCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.GetDataSet
  id: GetDataSet
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: GetDataSet()
  nameWithType: DataRelationCollection.GetDataSet()
  fullName: System.Data.DataRelationCollection.GetDataSet()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Questo metodo supporta l&quot;infrastruttura .NET Framework e non deve essere utilizzato direttamente dal codice."
  syntax:
    content: protected abstract System.Data.DataSet GetDataSet ();
    parameters: []
    return:
      type: System.Data.DataSet
      description: "Il set di dati a cui fa riferimento."
  overload: System.Data.DataRelationCollection.GetDataSet*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)
  id: IndexOf(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: IndexOf(DataRelation)
  nameWithType: DataRelationCollection.IndexOf(DataRelation)
  fullName: System.Data.DataRelationCollection.IndexOf(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene l&quot;indice dell&quot;oggetto specificato <xref href=&quot;System.Data.DataRelation&quot;> </xref> oggetto."
  syntax:
    content: public virtual int IndexOf (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "Relazione da cercare."
    return:
      type: System.Int32
      description: "Indice in base 0 della relazione oppure -1 se la relazione non viene trovata nella raccolta."
  overload: System.Data.DataRelationCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: DataRelationCollection.IndexOf(String)
  fullName: System.Data.DataRelationCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene l&quot;indice del <xref href=&quot;System.Data.DataRelation&quot;> </xref> specificato dal nome."
  syntax:
    content: public virtual int IndexOf (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "Il nome della relazione da trovare."
    return:
      type: System.Int32
      description: "Indice in base zero della relazione con il nome specificato oppure -1 se la relazione non esiste nella raccolta."
  overload: System.Data.DataRelationCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataRelationCollection.Item(Int32)
  fullName: System.Data.DataRelationCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il <xref href=&quot;System.Data.DataRelation&quot;> </xref> oggetto in corrispondenza dell&quot;indice specificato."
  syntax:
    content: public abstract System.Data.DataRelation this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Indice in base zero da ricercare."
    return:
      type: System.Data.DataRelation
      description: "Il <xref href=&quot;System.Data.DataRelation&quot;> </xref>, o un valore null se l&quot;oggetto specificato <xref href=&quot;System.Data.DataRelation&quot;> </xref> non esiste."
  overload: System.Data.DataRelationCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Il valore di indice è maggiore del numero di elementi nella raccolta."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataRelationCollection.Item(String)
  fullName: System.Data.DataRelationCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il <xref href=&quot;System.Data.DataRelation&quot;> </xref> l&quot;oggetto specificato in base al nome."
  syntax:
    content: public abstract System.Data.DataRelation this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Il nome della relazione da trovare."
    return:
      type: System.Data.DataRelation
      description: "L&quot;oggetto denominato <xref href=&quot;System.Data.DataRelation&quot;> </xref>, o un valore null se l&quot;oggetto specificato <xref href=&quot;System.Data.DataRelation&quot;> </xref> non esiste."
  overload: System.Data.DataRelationCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  id: OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Genera il <xref href=&quot;System.Data.DataRelationCollection.CollectionChanged&quot;> </xref> evento."
  remarks: 'Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per una panoramica, vedere [NIB: generazione di un evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).'
  syntax:
    content: protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);
    parameters:
    - id: ccevent
      type: System.ComponentModel.CollectionChangeEventArgs
      description: "Oggetto <xref href=&quot;System.ComponentModel.CollectionChangeEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Data.DataRelationCollection.OnCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  id: OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: OnCollectionChanging(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Genera il <xref href=&quot;System.Data.DataRelationCollection.CollectionChanged&quot;> </xref> evento."
  remarks: 'Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per una panoramica, vedere [NIB: generazione di un evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).'
  syntax:
    content: protected virtual void OnCollectionChanging (System.ComponentModel.CollectionChangeEventArgs ccevent);
    parameters:
    - id: ccevent
      type: System.ComponentModel.CollectionChangeEventArgs
      description: "Oggetto <xref href=&quot;System.ComponentModel.CollectionChangeEventArgs&quot;> </xref> che contiene i dati dell&quot;evento."
  overload: System.Data.DataRelationCollection.OnCollectionChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Remove(System.Data.DataRelation)
  id: Remove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Remove(DataRelation)
  nameWithType: DataRelationCollection.Remove(DataRelation)
  fullName: System.Data.DataRelationCollection.Remove(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Rimuove la relazione specificata dalla raccolta."
  remarks: "Il <xref:System.Data.DataRelationCollection.CollectionChanged>evento viene generato se l&quot;operazione di rimozione ha esito positivo.</xref:System.Data.DataRelationCollection.CollectionChanged> Si noti che la rimozione della relazione non rimuove tutti gli oggetti vincolo associato."
  syntax:
    content: public void Remove (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "Relazione da rimuovere."
  overload: System.Data.DataRelationCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La relazione è un valore null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La relazione non appartiene alla raccolta."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: DataRelationCollection.Remove(String)
  fullName: System.Data.DataRelationCollection.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Rimuove la relazione con il nome specificato dalla raccolta."
  remarks: "Il <xref:System.Data.DataRelationCollection.CollectionChanged>evento viene generato se l&quot;operazione di rimozione ha esito positivo.</xref:System.Data.DataRelationCollection.CollectionChanged>"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "Nome della relazione da rimuovere."
  overload: System.Data.DataRelationCollection.Remove*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "La raccolta non è una relazione con il nome specificato."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataRelationCollection.RemoveAt(Int32)
  fullName: System.Data.DataRelationCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Rimuove la relazione in corrispondenza dell&quot;indice specificato dalla raccolta."
  remarks: "Il <xref:System.Data.DataRelationCollection.CollectionChanged>evento viene generato se l&quot;operazione di rimozione ha esito positivo.</xref:System.Data.DataRelationCollection.CollectionChanged>"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Indice della relazione da rimuovere."
  overload: System.Data.DataRelationCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La raccolta non è una relazione in corrispondenza dell&quot;indice specificato."
  platform:
  - net462
- uid: System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)
  id: RemoveCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: RemoveCore(DataRelation)
  nameWithType: DataRelationCollection.RemoveCore(DataRelation)
  fullName: System.Data.DataRelationCollection.RemoveCore(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Esegue una verifica sull&quot;oggetto specificato <xref href=&quot;System.Data.DataRelation&quot;> </xref> oggetto."
  syntax:
    content: protected virtual void RemoveCore (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "Il <xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref> oggetto da verificare."
  overload: System.Data.DataRelationCollection.RemoveCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La raccolta non è una relazione in corrispondenza dell&quot;indice specificato."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La relazione specificata non appartiene a questa raccolta, o fa parte di un&quot;altra raccolta."
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataRelationCollection.#ctor
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: DataRelationCollection()
  nameWithType: DataRelationCollection.DataRelationCollection()
  fullName: System.Data.DataRelationCollection.DataRelationCollection()
- uid: System.Data.DataRelationCollection.Add(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(DataRelation)
  nameWithType: DataRelationCollection.Add(DataRelation)
  fullName: System.Data.DataRelationCollection.Add(DataRelation)
- uid: System.Data.DataRelation
  parent: System.Data
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(DataColumn,DataColumn)
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(DataColumn[],DataColumn[])
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[])
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn,DataColumn,Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn[],DataColumn[],Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
- uid: System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddCore(DataRelation)
  nameWithType: DataRelationCollection.AddCore(DataRelation)
  fullName: System.Data.DataRelationCollection.AddCore(DataRelation)
- uid: System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddRange(DataRelation[])
  nameWithType: DataRelationCollection.AddRange(DataRelation[])
  fullName: System.Data.DataRelationCollection.AddRange(DataRelation[])
- uid: System.Data.DataRelation[]
  parent: System.Data
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation[]
  spec.csharp:
  - uid: System.Data.DataRelation
    name: DataRelation
    nameWithType: DataRelation
    fullName: DataRelation[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CanRemove(DataRelation)
  nameWithType: DataRelationCollection.CanRemove(DataRelation)
  fullName: System.Data.DataRelationCollection.CanRemove(DataRelation)
- uid: System.Data.DataRelationCollection.Clear
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Clear()
  nameWithType: DataRelationCollection.Clear()
  fullName: System.Data.DataRelationCollection.Clear()
- uid: System.Data.DataRelationCollection.CollectionChanged
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: DataRelationCollection.CollectionChanged
  fullName: System.Data.DataRelationCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.DataRelationCollection.Contains(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Contains(String)
  nameWithType: DataRelationCollection.Contains(String)
  fullName: System.Data.DataRelationCollection.Contains(String)
- uid: System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CopyTo(DataRelation[],Int32)
  nameWithType: DataRelationCollection.CopyTo(DataRelation[],Int32)
  fullName: System.Data.DataRelationCollection.CopyTo(DataRelation[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataRelationCollection.GetDataSet
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: GetDataSet()
  nameWithType: DataRelationCollection.GetDataSet()
  fullName: System.Data.DataRelationCollection.GetDataSet()
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: IndexOf(DataRelation)
  nameWithType: DataRelationCollection.IndexOf(DataRelation)
  fullName: System.Data.DataRelationCollection.IndexOf(DataRelation)
- uid: System.Data.DataRelationCollection.IndexOf(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: DataRelationCollection.IndexOf(String)
  fullName: System.Data.DataRelationCollection.IndexOf(String)
- uid: System.Data.DataRelationCollection.Item(System.Int32)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataRelationCollection.Item(Int32)
  fullName: System.Data.DataRelationCollection.Item(Int32)
- uid: System.Data.DataRelationCollection.Item(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataRelationCollection.Item(String)
  fullName: System.Data.DataRelationCollection.Item(String)
- uid: System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
- uid: System.ComponentModel.CollectionChangeEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventArgs
  nameWithType: CollectionChangeEventArgs
  fullName: System.ComponentModel.CollectionChangeEventArgs
- uid: System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanging(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
- uid: System.Data.DataRelationCollection.Remove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Remove(DataRelation)
  nameWithType: DataRelationCollection.Remove(DataRelation)
  fullName: System.Data.DataRelationCollection.Remove(DataRelation)
- uid: System.Data.DataRelationCollection.Remove(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Remove(String)
  nameWithType: DataRelationCollection.Remove(String)
  fullName: System.Data.DataRelationCollection.Remove(String)
- uid: System.Data.DataRelationCollection.RemoveAt(System.Int32)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataRelationCollection.RemoveAt(Int32)
  fullName: System.Data.DataRelationCollection.RemoveAt(Int32)
- uid: System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveCore(DataRelation)
  nameWithType: DataRelationCollection.RemoveCore(DataRelation)
  fullName: System.Data.DataRelationCollection.RemoveCore(DataRelation)
- uid: System.Data.DataRelationCollection.#ctor*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: DataRelationCollection
  nameWithType: DataRelationCollection.DataRelationCollection
- uid: System.Data.DataRelationCollection.Add*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add
  nameWithType: DataRelationCollection.Add
- uid: System.Data.DataRelationCollection.AddCore*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddCore
  nameWithType: DataRelationCollection.AddCore
- uid: System.Data.DataRelationCollection.AddRange*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddRange
  nameWithType: DataRelationCollection.AddRange
- uid: System.Data.DataRelationCollection.CanRemove*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CanRemove
  nameWithType: DataRelationCollection.CanRemove
- uid: System.Data.DataRelationCollection.Clear*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Clear
  nameWithType: DataRelationCollection.Clear
- uid: System.Data.DataRelationCollection.Contains*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Contains
  nameWithType: DataRelationCollection.Contains
- uid: System.Data.DataRelationCollection.CopyTo*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataRelationCollection.CopyTo
- uid: System.Data.DataRelationCollection.GetDataSet*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: GetDataSet
  nameWithType: DataRelationCollection.GetDataSet
- uid: System.Data.DataRelationCollection.IndexOf*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataRelationCollection.IndexOf
- uid: System.Data.DataRelationCollection.Item*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Item
  nameWithType: DataRelationCollection.Item
- uid: System.Data.DataRelationCollection.OnCollectionChanged*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanged
  nameWithType: DataRelationCollection.OnCollectionChanged
- uid: System.Data.DataRelationCollection.OnCollectionChanging*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanging
  nameWithType: DataRelationCollection.OnCollectionChanging
- uid: System.Data.DataRelationCollection.Remove*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Remove
  nameWithType: DataRelationCollection.Remove
- uid: System.Data.DataRelationCollection.RemoveAt*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataRelationCollection.RemoveAt
- uid: System.Data.DataRelationCollection.RemoveCore*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveCore
  nameWithType: DataRelationCollection.RemoveCore
