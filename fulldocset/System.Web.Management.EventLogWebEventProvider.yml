### YamlMime:ManagedReference
items:
- uid: System.Web.Management.EventLogWebEventProvider
  id: EventLogWebEventProvider
  children:
  - System.Web.Management.EventLogWebEventProvider.Flush
  - System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  - System.Web.Management.EventLogWebEventProvider.Shutdown
  langs:
  - csharp
  name: EventLogWebEventProvider
  nameWithType: EventLogWebEventProvider
  fullName: System.Web.Management.EventLogWebEventProvider
  type: Class
  summary: "Implementa un provider di eventi che registra gli eventi di monitoraggio dello stato ASP.NET nel registro eventi applicazioni di Windows."
  remarks: "Il monitoraggio dello stato ASP.NET consente di produzione e lo staff operativo per la gestione di applicazioni Web distribuite. Il <xref:System.Web.Management>dello spazio dei nomi contiene i tipi di evento di stato responsabili per comprimere i dati di stato di integrità dell&quot;applicazione e i tipi di provider responsabili dell&quot;elaborazione dei dati.</xref:System.Web.Management> Contiene inoltre i tipi di supporto che semplificano la gestione degli eventi di integrità.       Gli eventi di monitoraggio dello stato di errore, il controllo con esito negativo e il EventLogWebEventProvider configurati (abilitato) per impostazione predefinita. Ciò significa che il controllo con esito negativo e l&quot;errore di monitoraggio dello stato degli eventi vengono registrati nel registro eventi applicazioni di Windows per impostazione predefinita.      > [!NOTE] > Nella maggior parte dei casi sarà possibile utilizzare i tipi di monitoraggio dello stato ASP.NET, come implementato e controllare il sistema di monitoraggio dello stato specificando i valori di `healthMonitoring` sezione di configurazione. È anche possibile derivare da tipi di monitoraggio dello stato per creare eventi personalizzati e i provider. Per un esempio di creazione di un provider personalizzato, vedere [procedura: implementare l&quot;integrità monitoraggio personalizzato Provider di esempio](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following configuration file excerpt shows how to specify a provider of type EventLogWebEventProvider to handle success audit events. The EventLogWebEventProvider and the failure audit health-event types to monitor are configured by default. To monitor the success audits, you need to configure them, as shown in the example code.  \n  \n```  \n<healthMonitoring   \n  enabled=\"true\" heartbeatInterval=\"10\">  \n  \n  <rule>  \n    <add name=\"Success Audits Default\"  \n      eventName=\"Success Audits\"  \n      provider=\"EventLogProvider\"  \n      profile=\"Default\"  \n      minInterval=\"00:01:00\" />  \n  </rule>  \n  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public sealed class EventLogWebEventProvider : System.Web.Management.WebEventProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Web.Management.WebEventProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.Flush
  id: Flush
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: Flush()
  nameWithType: EventLogWebEventProvider.Flush()
  fullName: System.Web.Management.EventLogWebEventProvider.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Sposta gli eventi dal buffer del provider nel registro eventi."
  remarks: "Quando viene chiamato questo metodo, tutti gli eventi nel buffer del provider vengono scritti immediatamente per il registro eventi applicazioni Windows, indipendentemente dal tempo trascorso dall&quot;ultima scrittura o il numero di eventi è nel buffer. L&quot;ora dell&quot;ultima scrittura viene reimpostato per l&quot;ora dell&quot;operazione di svuotamento. Se il meccanismo di memorizzazione nel buffer non è abilitato, la chiamata di questo metodo non ha alcun effetto."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Web.Management.EventLogWebEventProvider.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: EventLogWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.EventLogWebEventProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Imposta i valori iniziali per questo oggetto."
  remarks: "Questo metodo viene chiamato per inizializzare il <xref:System.Web.Management.EventLogWebEventProvider>con le impostazioni di configurazione e il nome specificato nel file di configurazione.</xref:System.Web.Management.EventLogWebEventProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "Il nome utilizzato nel file di configurazione per identificare questo provider."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "Oggetto <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> che specifica gli attributi assegnati per questo provider nel file di configurazione."
  overload: System.Web.Management.EventLogWebEventProvider.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  id: ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: ProcessEvent(WebBaseEvent)
  nameWithType: EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Elabora l&quot;evento passato al provider."
  remarks: "Si tratta del metodo che il monitoraggio dello stato ASP.NET chiama per avviare l&quot;elaborazione dell&quot;evento."
  syntax:
    content: public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);
    parameters:
    - id: eventRaised
      type: System.Web.Management.WebBaseEvent
      description: "Il <xref href=&quot;System.Web.Management.WebBaseEvent&quot;> </xref> dell&quot;oggetto da elaborare."
  overload: System.Web.Management.EventLogWebEventProvider.ProcessEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.Shutdown
  id: Shutdown
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: Shutdown()
  nameWithType: EventLogWebEventProvider.Shutdown()
  fullName: System.Web.Management.EventLogWebEventProvider.Shutdown()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Esegue le attività associate all&quot;arresto del provider."
  remarks: "Quando il dominio di applicazione che ospita l&quot;applicazione Web, ASP.NET chiama il metodo di arresto. Il metodo viene chiamato per eseguire attività che consente di terminare normalmente l&quot;applicazione."
  syntax:
    content: public override void Shutdown ();
    parameters: []
  overload: System.Web.Management.EventLogWebEventProvider.Shutdown*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebEventProvider
  isExternal: false
  name: System.Web.Management.WebEventProvider
- uid: System.Web.Management.EventLogWebEventProvider.Flush
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Flush()
  nameWithType: EventLogWebEventProvider.Flush()
  fullName: System.Web.Management.EventLogWebEventProvider.Flush()
- uid: System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: EventLogWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.EventLogWebEventProvider.Initialize(String,NameValueCollection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: ProcessEvent(WebBaseEvent)
  nameWithType: EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
- uid: System.Web.Management.WebBaseEvent
  parent: System.Web.Management
  isExternal: false
  name: WebBaseEvent
  nameWithType: WebBaseEvent
  fullName: System.Web.Management.WebBaseEvent
- uid: System.Web.Management.EventLogWebEventProvider.Shutdown
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Shutdown()
  nameWithType: EventLogWebEventProvider.Shutdown()
  fullName: System.Web.Management.EventLogWebEventProvider.Shutdown()
- uid: System.Web.Management.EventLogWebEventProvider.Flush*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Flush
  nameWithType: EventLogWebEventProvider.Flush
- uid: System.Web.Management.EventLogWebEventProvider.Initialize*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Initialize
  nameWithType: EventLogWebEventProvider.Initialize
- uid: System.Web.Management.EventLogWebEventProvider.ProcessEvent*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: ProcessEvent
  nameWithType: EventLogWebEventProvider.ProcessEvent
- uid: System.Web.Management.EventLogWebEventProvider.Shutdown*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Shutdown
  nameWithType: EventLogWebEventProvider.Shutdown
