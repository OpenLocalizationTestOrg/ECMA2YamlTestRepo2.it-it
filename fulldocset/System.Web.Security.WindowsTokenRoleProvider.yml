### YamlMime:ManagedReference
items:
- uid: System.Web.Security.WindowsTokenRoleProvider
  id: WindowsTokenRoleProvider
  children:
  - System.Web.Security.WindowsTokenRoleProvider.#ctor
  - System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])
  - System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  - System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)
  - System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)
  - System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)
  - System.Web.Security.WindowsTokenRoleProvider.GetAllRoles
  - System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)
  - System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)
  - System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  - System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)
  - System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  - System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)
  langs:
  - csharp
  name: WindowsTokenRoleProvider
  nameWithType: WindowsTokenRoleProvider
  fullName: System.Web.Security.WindowsTokenRoleProvider
  type: Class
  summary: "Ottiene le informazioni sui ruoli per un&quot;applicazione ASP.NET dall&quot;appartenenza al gruppo di Windows."
  remarks: "La classe WindowsTokenRoleProvider è un provider dell&quot;appartenenza al ruolo di sola lettura che recupera le informazioni sui ruoli per un utente di Windows in base ai gruppi di sicurezza di Windows. È particolarmente utile con le applicazioni ASP.NET che utilizzano l&quot;autenticazione di Windows in cui le impostazioni di autenticazione IIS disabilitano l&quot;autenticazione anonima. È possibile configurare le applicazioni ASP.NET per consentire o negare l&quot;accesso in base all&quot;appartenenza di un utente a un determinato gruppo di Windows.       È possibile usare la classe WindowsTokenRoleProvider per creare o eliminare ruoli o modificare l&quot;appartenenza di un ruolo che si basa sull&quot;appartenenza al gruppo di Windows. Questa funzionalità è gestita dal sistema operativo Windows. La classe WindowsTokenRoleProvider supporta solo il <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A>e i <xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A>metodi della <xref:System.Web.Security.RoleProvider>classe astratta.</xref:System.Web.Security.RoleProvider> </xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A> </xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A>"
  example:
  - "The following example shows the Web.config file for an ASP.NET application. It specifies that the application uses both Windows authentication and the WindowsTokenRoleProvider class to retrieve role information for Windows users. The  element specifies that only users in the BUILTIN\\Administrators group are allowed access to the application.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <authentication mode=\"Windows\" />  \n  \n    <authorization>  \n      <allow roles=\"BUILTIN\\Administrators\" />  \n        <deny users=\"*\" />  \n      </authorization>  \n  \n    <roleManager defaultProvider=\"WindowsProvider\"   \n      enabled=\"true\"  \n      cacheRolesInCookie=\"false\">  \n      <providers>  \n        <add  \n          name=\"WindowsProvider\"  \n          type=\"System.Web.Security.WindowsTokenRoleProvider\" />  \n      </providers>  \n    </roleManager>  \n  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public class WindowsTokenRoleProvider : System.Web.Security.RoleProvider'
  inheritance:
  - System.Web.Security.RoleProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.#ctor
  id: '#ctor'
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: WindowsTokenRoleProvider()
  nameWithType: WindowsTokenRoleProvider.WindowsTokenRoleProvider()
  fullName: System.Web.Security.WindowsTokenRoleProvider.WindowsTokenRoleProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Crea un&quot;istanza di <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> classe."
  remarks: "Il costruttore WindowsTokenRoleProvider viene chiamato da ASP.NET per creare un&quot;istanza di <xref:System.Web.Security.WindowsTokenRoleProvider>classe come specificato nella configurazione per l&quot;applicazione.</xref:System.Web.Security.WindowsTokenRoleProvider> Questo costruttore non deve essere utilizzato dal codice."
  syntax:
    content: public WindowsTokenRoleProvider ();
    parameters: []
  overload: System.Web.Security.WindowsTokenRoleProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])
  id: AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: AddUsersToRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Questo metodo non è supportato dal provider di ruoli token Windows."
  remarks: "Questo metodo non è supportato dalla <xref:System.Web.Security.WindowsTokenRoleProvider>classe e genera sempre un <xref:System.Configuration.Provider.ProviderException>.</xref:System.Configuration.Provider.ProviderException> </xref:System.Web.Security.WindowsTokenRoleProvider>"
  syntax:
    content: public override void AddUsersToRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "Matrice di stringhe di nomi utente da aggiungere ai ruoli specificati."
    - id: roleNames
      type: System.String[]
      description: "Matrice di stringhe di nomi di ruoli per aggiungere i nomi utente specificati."
  overload: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "È stato chiamato un metodo non supportato."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: WindowsTokenRoleProvider.ApplicationName
  fullName: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene o imposta il nome dell&quot;applicazione."
  remarks: "A differenza di altri provider di ruoli, ad esempio il <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Security.WindowsTokenRoleProvider>classe non associa le informazioni sui ruoli di un&quot;applicazione.</xref:System.Web.Security.WindowsTokenRoleProvider> </xref:System.Web.Security.SqlRoleProvider> Al contrario, le informazioni sui ruoli prelevati i gruppi di Windows nel computer locale. Più applicazioni sullo stesso server che utilizzano il <xref:System.Web.Security.WindowsTokenRoleProvider>classe sempre condividono le stesse informazioni di ruolo.</xref:System.Web.Security.WindowsTokenRoleProvider> Sebbene il `applicationName` può essere configurato nel file Web. config per l&quot;applicazione, ApplicationName proprietà non viene utilizzata per recuperare informazioni sui ruoli."
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.WindowsTokenRoleProvider> instance and sets the ApplicationName property to `MyApplication`.  \n  \n```  \n<roleManager defaultProvider=\"WindowsProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"false\">  \n  <providers>  \n    <add  \n      name=\"WindowsProvider\"  \n      type=\"System.Web.Security.WindowsTokenRoleProvider\"   \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Il nome dell&quot;applicazione."
  overload: System.Web.Security.WindowsTokenRoleProvider.ApplicationName*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "È stato effettuato un tentativo di impostare la proprietà ApplicationName da un chiamante che non dispone di <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> autorizzazione per l&quot;hosting ASP.NET."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "È stato effettuato un tentativo di impostare ApplicationName a una stringa che contiene più di 256 caratteri."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)
  id: CreateRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: CreateRole(String)
  nameWithType: WindowsTokenRoleProvider.CreateRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.CreateRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Questo metodo non è supportato dal provider di ruoli token Windows."
  remarks: "Questo metodo non è supportato dalla <xref:System.Web.Security.WindowsTokenRoleProvider>classe e genera sempre un <xref:System.Configuration.Provider.ProviderException>.</xref:System.Configuration.Provider.ProviderException> </xref:System.Web.Security.WindowsTokenRoleProvider>"
  syntax:
    content: public override void CreateRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Il nome del ruolo da creare."
  overload: System.Web.Security.WindowsTokenRoleProvider.CreateRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "È stato chiamato un metodo non supportato."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)
  id: DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: DeleteRole(String,Boolean)
  nameWithType: WindowsTokenRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Questo metodo non è supportato dal provider di ruoli token Windows."
  syntax:
    content: public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);
    parameters:
    - id: roleName
      type: System.String
      description: "Il nome del ruolo da eliminare."
    - id: throwOnPopulatedRole
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, verrà generata un&quot;eccezione in un tentativo di eliminare un ruolo che contiene uno o più membri."
    return:
      type: System.Boolean
      description: "Nessuna. Il metodo non è supportato per il <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> classe e genera sempre un <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.DeleteRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "È stato chiamato un metodo non supportato."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)
  id: FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: FindUsersInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Questo metodo non è supportato dal provider di ruoli token Windows."
  syntax:
    content: public override string[] FindUsersInRole (string roleName, string usernameToMatch);
    parameters:
    - id: roleName
      type: System.String
      description: "Il ruolo di eseguire la ricerca."
    - id: usernameToMatch
      type: System.String
      description: "Il nome utente da trovare nel ruolo."
    return:
      type: System.String[]
      description: "Nessuna. Il metodo non è supportato per il <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> classe e genera sempre un <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "È stato chiamato un metodo non supportato."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles
  id: GetAllRoles
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: GetAllRoles()
  nameWithType: WindowsTokenRoleProvider.GetAllRoles()
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Questo metodo non è supportato dal provider di ruoli token Windows."
  syntax:
    content: public override string[] GetAllRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "Nessuna. Il metodo non è supportato per il <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> classe e genera sempre un <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "È stato chiamato un metodo non supportato."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)
  id: GetRolesForUser(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: GetRolesForUser(String)
  nameWithType: WindowsTokenRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene un elenco dei gruppi di Windows che un utente."
  remarks: "Questo metodo viene chiamato dalla <xref:System.Web.Security.Roles>classe per recuperare dal sistema operativo Windows un elenco dei gruppi di Windows che l&quot;utente specificato è.</xref:System.Web.Security.Roles> Il metodo GetRolesForUser può essere chiamato solo per l&quot;utente attualmente connesso come identificato dalla variabile server LOGON_USER. Se il valore fornito nel `username` parametro non è il nome dell&quot;utente attualmente connesso, un <xref:System.Configuration.Provider.ProviderException?displayProperty=fullName>viene generata un&quot;eccezione.</xref:System.Configuration.Provider.ProviderException?displayProperty=fullName>       Per ulteriori informazioni ASP.NET e l&quot;autenticazione di Windows, vedere [autenticazione ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the GetRolesForUser method to retrieve a list of roles for a specified user and binds the list of roles to a <xref:System.Web.UI.WebControls.GridView> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.wi_1.aspx)]\n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.wi_1.aspx)]"
  syntax:
    content: public override string[] GetRolesForUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "L&quot;utente per restituire l&quot;elenco di gruppi Windows nel formato dominio omeutente."
    return:
      type: System.String[]
      description: "Matrice di stringhe contenente i nomi di tutti i gruppi di Windows che l&quot;utente specificato."
  overload: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "L&quot;utente attualmente in esecuzione non dispone di un autenticato <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> collegato a &lt;xref:System.Web.UI.Page.User%2A?displayProperty=fullName&gt;. Per gli scenari non HTTP, l&quot;utente attualmente in esecuzione non dispone di un autenticato <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> collegato a &lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;.       - oppure - <code> username </code> non corrisponde la <xref:System.Security.Principal.WindowsIdentity.Name*>corrente <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>.</xref:System.Security.Principal.WindowsIdentity.Name*>       oppure si è verificato un errore durante il recupero delle informazioni sul gruppo di Windows dell&quot;utente."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Il livello di attendibilità è minore di <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)
  id: GetUsersInRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: GetUsersInRole(String)
  nameWithType: WindowsTokenRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Questo metodo non è supportato dal provider di ruoli token Windows."
  syntax:
    content: public override string[] GetUsersInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Il nome del ruolo per ottenere l&quot;elenco di utenti."
    return:
      type: System.String[]
      description: "Nessuna. Il metodo non è supportato per il <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> classe e genera sempre un <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "È stato chiamato un metodo non supportato."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inizializza il provider di ruoli token Windows con i valori di proprietà specificati nel file di configurazione per l&quot;applicazione ASP.NET. Questo metodo non deve essere utilizzato direttamente dal codice."
  remarks: "Il metodo Initialize Inizializza il <xref:System.Web.Security.WindowsTokenRoleProvider>classe con i valori delle proprietà specificate nel file di configurazione dell&quot;applicazione ASP.NET (Web. config) e non deve essere utilizzato direttamente dal codice.</xref:System.Web.Security.WindowsTokenRoleProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> istanza da inizializzare."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "Oggetto <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> costruttore che contiene i nomi e valori di configurazione di opzioni per il <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> classe."
  overload: System.Web.Security.WindowsTokenRoleProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>config</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Il <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> attributo nella configurazione è più lungo di 256 caratteri.       - oppure - file di configurazione dell&quot;applicazione per questo <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> istanza contiene un attributo non riconosciuto."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  id: IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,WindowsBuiltInRole)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene un valore che indica se l&quot;utente specificato è incluso nel ruolo di Windows predefinito specificato."
  remarks: "Il metodo IsUserInRole consente di verificare se un utente si trova in uno dei ruoli Windows comuni descritti dal <xref:System.Security.Principal.WindowsBuiltInRole>enumerazione.</xref:System.Security.Principal.WindowsBuiltInRole> Questo metodo è utile per le applicazioni localizzate in più lingue. Questo overload del metodo IsUserInRole non è parte del <xref:System.Web.Security.RoleProvider>classe di base ed è possibile accedervi solo eseguendo il cast il <xref:System.Web.Security.Roles.Provider%2A>proprietà del <xref:System.Web.Security.Roles>classe come il <xref:System.Web.Security.WindowsTokenRoleProvider>tipo.</xref:System.Web.Security.WindowsTokenRoleProvider> </xref:System.Web.Security.Roles> </xref:System.Web.Security.Roles.Provider%2A> </xref:System.Web.Security.RoleProvider>       È possibile chiamare il metodo IsUserInRole solo per l&quot;utente attualmente connesso come identificato dalla variabile server LOGON_USER. Se il valore fornito nel `username` parametro non è il nome dell&quot;utente attualmente connesso, un <xref:System.Web.HttpException>viene generata un&quot;eccezione.</xref:System.Web.HttpException>       Metodo IsUserInRole può essere chiamato solo per l&quot;utente attualmente connesso identificata dalla variabile server LOGON_USER. L&quot;utente attualmente connesso deve essere un utente autenticato di Windows. Per ulteriori informazioni sull&quot;autenticazione di Windows e ASP.NET, vedere [autenticazione ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example programmatically checks whether the currently logged-on user is in the Administrators role before allowing the user to view roles information for the application. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#2](~/add/codesnippet/csharp/f88a5130-a7a7-46a8-84f9-_1.aspx)]\n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#2](~/add/codesnippet/visualbasic/f88a5130-a7a7-46a8-84f9-_1.aspx)]"
  syntax:
    content: public bool IsUserInRole (string username, System.Security.Principal.WindowsBuiltInRole role);
    parameters:
    - id: username
      type: System.String
      description: "Il nome utente per la ricerca nel formato dominio omeutente."
    - id: role
      type: System.Security.Principal.WindowsBuiltInRole
      description: "Il ruolo di Windows eseguire la ricerca."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;utente specificato è nel ruolo di Windows specificato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "L&quot;utente attualmente in esecuzione non dispone di un autenticato <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> collegato a &lt;xref:System.Web.UI.Page.User%2A?displayProperty=fullName&gt;. Per gli scenari non HTTP, l&quot;utente attualmente in esecuzione non dispone di un autenticato <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> collegato a &lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;.       - oppure - <code> username </code> non corrisponde la <xref:System.Security.Principal.WindowsIdentity.Name*>corrente <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>.</xref:System.Security.Principal.WindowsIdentity.Name*>"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene un valore che indica se l&quot;utente specificato appartiene al gruppo Windows specificato."
  remarks: "Viene chiamato il metodo IsUserInRole dal <xref:System.Web.Security.Roles>classe e <xref:System.Security.Principal.IPrincipal.IsInRole%2A>metodo il <xref:System.Web.UI.Page.User%2A>proprietà per determinare se un utente è in un gruppo di Windows.</xref:System.Web.UI.Page.User%2A> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> </xref:System.Web.Security.Roles> È possibile chiamare il metodo IsUserInRole solo per l&quot;utente attualmente connesso come identificato dalla variabile server LOGON_USER. L&quot;utente corrente connesso deve essere un utente autenticato di Windows. Per ulteriori informazioni sull&quot;autenticazione di Windows e ASP.NET, vedere [autenticazione ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example programmatically checks whether the currently logged-on user is in the Administrators role before allowing the user to view roles information for the application. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/visualbasic/e3ad81d7-d695-40b8-8e62-_1.aspx)]\n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/csharp/e3ad81d7-d695-40b8-8e62-_1.aspx)]"
  syntax:
    content: public override bool IsUserInRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "Il nome utente per la ricerca nel formato dominio omeutente."
    - id: roleName
      type: System.String
      description: "Il gruppo di Windows eseguire la ricerca di dominio\\nomeutente.."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il nome utente specificato è il gruppo di Windows specificato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>roleName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "L&quot;utente attualmente in esecuzione non dispone di un autenticato <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> collegato a &lt;xref:System.Web.UI.Page.User%2A?displayProperty=fullName&gt;. Per gli scenari non HTTP, l&quot;utente attualmente in esecuzione non dispone di un autenticato <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> collegato a &lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;.       - oppure - <code> username </code> non corrisponde la <xref:System.Security.Principal.WindowsIdentity.Name*>corrente <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref>.</xref:System.Security.Principal.WindowsIdentity.Name*>       oppure si è verificato un errore durante il recupero delle informazioni sul gruppo di Windows dell&quot;utente."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  id: RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Questo metodo non è supportato dal provider di ruoli token Windows."
  remarks: "Questo metodo non è supportato dalla <xref:System.Web.Security.WindowsTokenRoleProvider>classe e genera sempre un <xref:System.Configuration.Provider.ProviderException>.</xref:System.Configuration.Provider.ProviderException> </xref:System.Web.Security.WindowsTokenRoleProvider>"
  syntax:
    content: public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "Matrice di stringhe di nomi utente da aggiungere ai ruoli specificati."
    - id: roleNames
      type: System.String[]
      description: "Matrice di stringhe di nomi di ruoli per aggiungere i nomi utente specificati."
  overload: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "È stato chiamato un metodo non supportato."
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)
  id: RoleExists(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: RoleExists(String)
  nameWithType: WindowsTokenRoleProvider.RoleExists(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.RoleExists(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Questo metodo non è supportato dal provider di ruoli token Windows."
  syntax:
    content: public override bool RoleExists (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Il nome del ruolo da cercare nell&quot;origine dati."
    return:
      type: System.Boolean
      description: "Nessuna. Il metodo non è supportato per il <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref> classe e genera sempre un <xref href=&quot;System.Configuration.Provider.ProviderException&quot;> </xref>."
  overload: System.Web.Security.WindowsTokenRoleProvider.RoleExists*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "È stato chiamato un metodo non supportato."
  platform:
  - net462
references:
- uid: System.Web.Security.RoleProvider
  isExternal: false
  name: System.Web.Security.RoleProvider
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.WindowsTokenRoleProvider.#ctor
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: WindowsTokenRoleProvider()
  nameWithType: WindowsTokenRoleProvider.WindowsTokenRoleProvider()
  fullName: System.Web.Security.WindowsTokenRoleProvider.WindowsTokenRoleProvider()
- uid: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: AddUsersToRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: WindowsTokenRoleProvider.ApplicationName
  fullName: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: CreateRole(String)
  nameWithType: WindowsTokenRoleProvider.CreateRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.CreateRole(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: DeleteRole(String,Boolean)
  nameWithType: WindowsTokenRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: FindUsersInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(String,String)
- uid: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetAllRoles()
  nameWithType: WindowsTokenRoleProvider.GetAllRoles()
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles()
- uid: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetRolesForUser(String)
  nameWithType: WindowsTokenRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetUsersInRole(String)
  nameWithType: WindowsTokenRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: IsUserInRole(String,WindowsBuiltInRole)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
- uid: System.Security.Principal.WindowsBuiltInRole
  parent: System.Security.Principal
  isExternal: false
  name: WindowsBuiltInRole
  nameWithType: WindowsBuiltInRole
  fullName: System.Security.Principal.WindowsBuiltInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,String)
- uid: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
- uid: System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RoleExists(String)
  nameWithType: WindowsTokenRoleProvider.RoleExists(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.RoleExists(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.#ctor*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: WindowsTokenRoleProvider
  nameWithType: WindowsTokenRoleProvider.WindowsTokenRoleProvider
- uid: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: AddUsersToRoles
  nameWithType: WindowsTokenRoleProvider.AddUsersToRoles
- uid: System.Web.Security.WindowsTokenRoleProvider.ApplicationName*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: WindowsTokenRoleProvider.ApplicationName
- uid: System.Web.Security.WindowsTokenRoleProvider.CreateRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: CreateRole
  nameWithType: WindowsTokenRoleProvider.CreateRole
- uid: System.Web.Security.WindowsTokenRoleProvider.DeleteRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: DeleteRole
  nameWithType: WindowsTokenRoleProvider.DeleteRole
- uid: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: FindUsersInRole
  nameWithType: WindowsTokenRoleProvider.FindUsersInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetAllRoles
  nameWithType: WindowsTokenRoleProvider.GetAllRoles
- uid: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetRolesForUser
  nameWithType: WindowsTokenRoleProvider.GetRolesForUser
- uid: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetUsersInRole
  nameWithType: WindowsTokenRoleProvider.GetUsersInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.Initialize*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: Initialize
  nameWithType: WindowsTokenRoleProvider.Initialize
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: IsUserInRole
  nameWithType: WindowsTokenRoleProvider.IsUserInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles
  nameWithType: WindowsTokenRoleProvider.RemoveUsersFromRoles
- uid: System.Web.Security.WindowsTokenRoleProvider.RoleExists*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RoleExists
  nameWithType: WindowsTokenRoleProvider.RoleExists
