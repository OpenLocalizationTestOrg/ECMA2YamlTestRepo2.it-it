### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator
  id: Compensator
  children:
  - System.EnterpriseServices.CompensatingResourceManager.Compensator.#ctor
  - System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)
  - System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort(System.Boolean)
  - System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit(System.Boolean)
  - System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare
  - System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk
  - System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)
  - System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort
  - System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit
  - System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare
  - System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)
  langs:
  - csharp
  name: Compensator
  nameWithType: Compensator
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator
  type: Class
  summary: "Rappresenta la classe di base per tutti i file system distribuito (CRM, Compensating Resource Manager) Compensating."
  remarks: "L&quot;utente deve essere esteso da questo oggetto per scrivere una transazione personalizzata alla classe Compensator.       Una classe Compensator deve sempre avere un costruttore pubblico. in caso contrario, il motore di ripristino non Ã¨ possibile crearlo.       Per ulteriori informazioni, vedere [procedura: creare un file system distribuito (CRM, Compensating Resource Manager)](http://msdn.microsoft.com/en-us/0a8a024b-0be1-4519-a659-076577278029)."
  example:
  - "The following code example demonstrates the use of this class.  \n  \n [!code-vb[EnterpriseServices_Crm#20](~/add/codesnippet/visualbasic/t-system.enterpriseservi_0_1.vb)]\n [!code-cpp[EnterpriseServices_Crm#20](~/add/codesnippet/cpp/t-system.enterpriseservi_0_1.cpp)]\n [!code-cs[EnterpriseServices_Crm#20](~/add/codesnippet/csharp/t-system.enterpriseservi_0_1.cs)]  \n  \n This compensator is used by the following worker class.  \n  \n [!code-vb[EnterpriseServices_Crm#10](~/add/codesnippet/visualbasic/t-system.enterpriseservi_0_2.vb)]\n [!code-cpp[EnterpriseServices_Crm#10](~/add/codesnippet/cpp/t-system.enterpriseservi_0_2.cpp)]\n [!code-cs[EnterpriseServices_Crm#10](~/add/codesnippet/csharp/t-system.enterpriseservi_0_2.cs)]  \n  \n The following code example demonstrates a client that exercises this compensator and worker.  \n  \n [!code-cpp[EnterpriseServices_Crm#30](~/add/codesnippet/cpp/t-system.enterpriseservi_0_3.cpp)]\n [!code-cs[EnterpriseServices_Crm#30](~/add/codesnippet/csharp/t-system.enterpriseservi_0_3.cs)]\n [!code-vb[EnterpriseServices_Crm#30](~/add/codesnippet/visualbasic/t-system.enterpriseservi_0_3.vb)]"
  syntax:
    content: 'public class Compensator : System.EnterpriseServices.ServicedComponent'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ContextBoundObject
  - System.EnterpriseServices.ServicedComponent
  implements: []
  inheritedMembers:
  - System.EnterpriseServices.ServicedComponent.Activate
  - System.EnterpriseServices.ServicedComponent.CanBePooled
  - System.EnterpriseServices.ServicedComponent.Construct(System.String)
  - System.EnterpriseServices.ServicedComponent.Deactivate
  - System.EnterpriseServices.ServicedComponent.Dispose
  - System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)
  - System.EnterpriseServices.ServicedComponent.DisposeObject(System.EnterpriseServices.ServicedComponent)
  - System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)
  - System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)
  - System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  langs:
  - csharp
  name: Compensator()
  nameWithType: Compensator.Compensator()
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.Compensator()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.CompensatingResourceManager
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.EnterpriseServices.CompensatingResourceManager.Compensator&quot;> </xref> classe."
  syntax:
    content: public Compensator ();
    parameters: []
  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)
  id: AbortRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  langs:
  - csharp
  name: AbortRecord(LogRecord)
  nameWithType: Compensator.AbortRecord(LogRecord)
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord(LogRecord)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.CompensatingResourceManager
  summary: "Offre un record di log per il file system distribuito (CRM, Compensating Resource Manager) di compensazione durante la fase di interruzione."
  remarks: ''
  example:
  - "The following code example demonstrates the implementation of this method.  \n  \n [!code-vb[EnterpriseServices_Crm#28](~/add/codesnippet/visualbasic/bf259d0d-d4a3-40ee-874a-_1.vb)]\n [!code-cpp[EnterpriseServices_Crm#28](~/add/codesnippet/cpp/bf259d0d-d4a3-40ee-874a-_1.cpp)]\n [!code-cs[EnterpriseServices_Crm#28](~/add/codesnippet/csharp/bf259d0d-d4a3-40ee-874a-_1.cs)]"
  syntax:
    content: public virtual bool AbortRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);
    parameters:
    - id: rec
      type: System.EnterpriseServices.CompensatingResourceManager.LogRecord
      description: "Il record di log da recapitare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il record recapitato deve essere omesso; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort(System.Boolean)
  id: BeginAbort(System.Boolean)
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  langs:
  - csharp
  name: BeginAbort(Boolean)
  nameWithType: Compensator.BeginAbort(Boolean)
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort(Boolean)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.CompensatingResourceManager
  summary: "Notifica il compensatore del file system distribuito (CRM, Compensating Resource Manager) di, la fase di interruzione del completamento della transazione e il recapito futura dei record."
  remarks: ''
  example:
  - "The following code example demonstrates the implementation of this method.  \n  \n [!code-vb[EnterpriseServices_Crm#27](~/add/codesnippet/visualbasic/efebd077-452a-4485-98bc-_1.vb)]\n [!code-cpp[EnterpriseServices_Crm#27](~/add/codesnippet/cpp/efebd077-452a-4485-98bc-_1.cpp)]\n [!code-cs[EnterpriseServices_Crm#27](~/add/codesnippet/csharp/efebd077-452a-4485-98bc-_1.cs)]"
  syntax:
    content: public virtual void BeginAbort (bool fRecovery);
    parameters:
    - id: fRecovery
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>iniziare la fase di interruzione. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit(System.Boolean)
  id: BeginCommit(System.Boolean)
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  langs:
  - csharp
  name: BeginCommit(Boolean)
  nameWithType: Compensator.BeginCommit(Boolean)
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit(Boolean)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.CompensatingResourceManager
  summary: "Notifica il compensatore del file system distribuito (CRM, Compensating Resource Manager) della fase di commit del completamento della transazione e il recapito futura dei record."
  remarks: ''
  example:
  - "The following code example demonstrates the implementation of this method.  \n  \n [!code-vb[EnterpriseServices_Crm#24](~/add/codesnippet/visualbasic/a929af72-5899-4499-aac0-_1.vb)]\n [!code-cpp[EnterpriseServices_Crm#24](~/add/codesnippet/cpp/a929af72-5899-4499-aac0-_1.cpp)]\n [!code-cs[EnterpriseServices_Crm#24](~/add/codesnippet/csharp/a929af72-5899-4499-aac0-_1.cs)]"
  syntax:
    content: public virtual void BeginCommit (bool fRecovery);
    parameters:
    - id: fRecovery
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>iniziare la fase di commit. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare
  id: BeginPrepare
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  langs:
  - csharp
  name: BeginPrepare()
  nameWithType: Compensator.BeginPrepare()
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.CompensatingResourceManager
  summary: "Notifica il compensatore del file system distribuito (CRM, Compensating Resource Manager) della fase di preparazione del completamento della transazione e il recapito futura dei record."
  remarks: ''
  example:
  - "The following code example demonstrates the implementation of this method.  \n  \n [!code-vb[EnterpriseServices_Crm#21](~/add/codesnippet/visualbasic/b4b00685-a222-4032-bae9-_1.vb)]\n [!code-cpp[EnterpriseServices_Crm#21](~/add/codesnippet/cpp/b4b00685-a222-4032-bae9-_1.cpp)]\n [!code-cs[EnterpriseServices_Crm#21](~/add/codesnippet/csharp/b4b00685-a222-4032-bae9-_1.cs)]"
  syntax:
    content: public virtual void BeginPrepare ();
    parameters: []
  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk
  id: Clerk
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  langs:
  - csharp
  name: Clerk
  nameWithType: Compensator.Clerk
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk
  type: Property
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.CompensatingResourceManager
  summary: "Ottiene un valore che rappresenta il file system distribuito (CRM, Compensating Resource Manager) <xref href=&quot;System.EnterpriseServices.CompensatingResourceManager.Clerk&quot;> </xref> oggetto."
  syntax:
    content: public System.EnterpriseServices.CompensatingResourceManager.Clerk Clerk { get; }
    return:
      type: System.EnterpriseServices.CompensatingResourceManager.Clerk
      description: "Il <xref href=&quot;System.EnterpriseServices.CompensatingResourceManager.Clerk&quot;> </xref> oggetto."
  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)
  id: CommitRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  langs:
  - csharp
  name: CommitRecord(LogRecord)
  nameWithType: Compensator.CommitRecord(LogRecord)
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord(LogRecord)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.CompensatingResourceManager
  summary: "Recapita un record di log in avanti durante la fase di commit."
  remarks: ''
  example:
  - "The following code example demonstrates the implementation of this method.  \n  \n [!code-vb[EnterpriseServices_Crm#25](~/add/codesnippet/visualbasic/35b176a0-7924-4158-a97a-_1.vb)]\n [!code-cpp[EnterpriseServices_Crm#25](~/add/codesnippet/cpp/35b176a0-7924-4158-a97a-_1.cpp)]\n [!code-cs[EnterpriseServices_Crm#25](~/add/codesnippet/csharp/35b176a0-7924-4158-a97a-_1.cs)]"
  syntax:
    content: public virtual bool CommitRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);
    parameters:
    - id: rec
      type: System.EnterpriseServices.CompensatingResourceManager.LogRecord
      description: "Il record di log per l&quot;inoltro."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il record recapitato deve essere omesso; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort
  id: EndAbort
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  langs:
  - csharp
  name: EndAbort()
  nameWithType: Compensator.EndAbort()
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.CompensatingResourceManager
  summary: "Notifica il compensatore del file system distribuito (CRM, Compensating Resource Manager) che ha ricevuto tutti i record di log disponibili durante la fase di interruzione."
  remarks: ''
  example:
  - "The following code example demonstrates the implementation of this method.  \n  \n [!code-vb[EnterpriseServices_Crm#29](~/add/codesnippet/visualbasic/m-system.enterpriseservi_32_1.vb)]\n [!code-cpp[EnterpriseServices_Crm#29](~/add/codesnippet/cpp/m-system.enterpriseservi_32_1.cpp)]\n [!code-cs[EnterpriseServices_Crm#29](~/add/codesnippet/csharp/m-system.enterpriseservi_32_1.cs)]"
  syntax:
    content: public virtual void EndAbort ();
    parameters: []
  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit
  id: EndCommit
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  langs:
  - csharp
  name: EndCommit()
  nameWithType: Compensator.EndCommit()
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.CompensatingResourceManager
  summary: "Notifica il compensatore del file system distribuito (CRM, Compensating Resource Manager) che ha recapitato tutti i record di log disponibili durante la fase di commit."
  remarks: ''
  example:
  - "The following code example demonstrates the implementation of this method.  \n  \n [!code-vb[EnterpriseServices_Crm#26](~/add/codesnippet/visualbasic/m-system.enterpriseservi_12_1.vb)]\n [!code-cpp[EnterpriseServices_Crm#26](~/add/codesnippet/cpp/m-system.enterpriseservi_12_1.cpp)]\n [!code-cs[EnterpriseServices_Crm#26](~/add/codesnippet/csharp/m-system.enterpriseservi_12_1.cs)]"
  syntax:
    content: public virtual void EndCommit ();
    parameters: []
  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare
  id: EndPrepare
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  langs:
  - csharp
  name: EndPrepare()
  nameWithType: Compensator.EndPrepare()
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.CompensatingResourceManager
  summary: "Notifica il compensatore del file system distribuito (CRM, Compensating Resource Manager) che ha ricevuto tutti i record di log disponibili durante la fase di preparazione."
  remarks: ''
  example:
  - "The following code example demonstrates the implementation of this method.  \n  \n [!code-vb[EnterpriseServices_Crm#23](~/add/codesnippet/visualbasic/m-system.enterpriseservi_3_1.vb)]\n [!code-cpp[EnterpriseServices_Crm#23](~/add/codesnippet/cpp/m-system.enterpriseservi_3_1.cpp)]\n [!code-cs[EnterpriseServices_Crm#23](~/add/codesnippet/csharp/m-system.enterpriseservi_3_1.cs)]"
  syntax:
    content: public virtual bool EndPrepare ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se ha esito positivo. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)
  id: PrepareRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  langs:
  - csharp
  name: PrepareRecord(LogRecord)
  nameWithType: Compensator.PrepareRecord(LogRecord)
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord(LogRecord)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.CompensatingResourceManager
  summary: "Recapita un record di log in avanti durante la fase di preparazione."
  remarks: ''
  example:
  - "The following code example demonstrates the implementation of this method.  \n  \n [!code-vb[EnterpriseServices_Crm#22](~/add/codesnippet/visualbasic/37b41c14-71b9-4a11-be23-_1.vb)]\n [!code-cpp[EnterpriseServices_Crm#22](~/add/codesnippet/cpp/37b41c14-71b9-4a11-be23-_1.cpp)]\n [!code-cs[EnterpriseServices_Crm#22](~/add/codesnippet/csharp/37b41c14-71b9-4a11-be23-_1.cs)]"
  syntax:
    content: public virtual bool PrepareRecord (System.EnterpriseServices.CompensatingResourceManager.LogRecord rec);
    parameters:
    - id: rec
      type: System.EnterpriseServices.CompensatingResourceManager.LogRecord
      description: "Il record di log per l&quot;inoltro."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il record recapitato deve essere omesso; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EnterpriseServices.ServicedComponent
  isExternal: false
  name: System.EnterpriseServices.ServicedComponent
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.#ctor
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: Compensator()
  nameWithType: Compensator.Compensator()
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.Compensator()
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: AbortRecord(LogRecord)
  nameWithType: Compensator.AbortRecord(LogRecord)
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord(LogRecord)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.CompensatingResourceManager.LogRecord
  parent: System.EnterpriseServices.CompensatingResourceManager
  isExternal: false
  name: LogRecord
  nameWithType: LogRecord
  fullName: System.EnterpriseServices.CompensatingResourceManager.LogRecord
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort(System.Boolean)
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: BeginAbort(Boolean)
  nameWithType: Compensator.BeginAbort(Boolean)
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort(Boolean)
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit(System.Boolean)
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: BeginCommit(Boolean)
  nameWithType: Compensator.BeginCommit(Boolean)
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit(Boolean)
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: BeginPrepare()
  nameWithType: Compensator.BeginPrepare()
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare()
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: Clerk
  nameWithType: Compensator.Clerk
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk
- uid: System.EnterpriseServices.CompensatingResourceManager.Clerk
  parent: System.EnterpriseServices.CompensatingResourceManager
  isExternal: false
  name: Clerk
  nameWithType: Clerk
  fullName: System.EnterpriseServices.CompensatingResourceManager.Clerk
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: CommitRecord(LogRecord)
  nameWithType: Compensator.CommitRecord(LogRecord)
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord(LogRecord)
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: EndAbort()
  nameWithType: Compensator.EndAbort()
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort()
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: EndCommit()
  nameWithType: Compensator.EndCommit()
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit()
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: EndPrepare()
  nameWithType: Compensator.EndPrepare()
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare()
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: PrepareRecord(LogRecord)
  nameWithType: Compensator.PrepareRecord(LogRecord)
  fullName: System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord(LogRecord)
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.#ctor*
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: Compensator
  nameWithType: Compensator.Compensator
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.AbortRecord*
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: AbortRecord
  nameWithType: Compensator.AbortRecord
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginAbort*
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: BeginAbort
  nameWithType: Compensator.BeginAbort
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginCommit*
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: BeginCommit
  nameWithType: Compensator.BeginCommit
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.BeginPrepare*
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: BeginPrepare
  nameWithType: Compensator.BeginPrepare
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.Clerk*
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: Clerk
  nameWithType: Compensator.Clerk
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.CommitRecord*
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: CommitRecord
  nameWithType: Compensator.CommitRecord
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndAbort*
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: EndAbort
  nameWithType: Compensator.EndAbort
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndCommit*
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: EndCommit
  nameWithType: Compensator.EndCommit
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.EndPrepare*
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: EndPrepare
  nameWithType: Compensator.EndPrepare
- uid: System.EnterpriseServices.CompensatingResourceManager.Compensator.PrepareRecord*
  parent: System.EnterpriseServices.CompensatingResourceManager.Compensator
  isExternal: false
  name: PrepareRecord
  nameWithType: Compensator.PrepareRecord
