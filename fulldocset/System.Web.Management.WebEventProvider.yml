### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebEventProvider
  id: WebEventProvider
  children:
  - System.Web.Management.WebEventProvider.#ctor
  - System.Web.Management.WebEventProvider.Flush
  - System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebEventProvider.Shutdown
  langs:
  - csharp
  name: WebEventProvider
  nameWithType: WebEventProvider
  fullName: System.Web.Management.WebEventProvider
  type: Class
  summary: "Fornisce la classe base per provider di eventi senza memorizzazione nel buffer."
  remarks: "Il monitoraggio dello stato ASP.NET consente di produzione e lo staff operativo per la gestione di applicazioni Web distribuite. Il <xref:System.Web.Management>spazio dei nomi contiene i tipi di evento di stato responsabili per comprimere i dati di stato di integrità dell&quot;applicazione e i tipi di provider responsabili dell&quot;elaborazione dei dati.</xref:System.Web.Management> Contiene inoltre i tipi di supporto che semplificano la gestione degli eventi di integrità.       Se si desidera personalizzare l&quot;elaborazione di eventi di stato, è possibile derivare dalla classe WebEventProvider per creare un provider personalizzato.      > [!NOTE] > Nella maggior parte dei casi sarà possibile utilizzare i tipi di monitoraggio dello stato ASP.NET, come implementato e controllare il sistema di monitoraggio dello stato specificando i valori di `healthMonitoring` sezione di configurazione. È anche possibile derivare da tipi di monitoraggio dello stato per creare eventi personalizzati e i provider. Per un esempio di derivazione dalla classe WebEventProvider, vedere l&quot;esempio fornito in questo argomento."
  example:
  - "The following code example shows how to derive from the WebEventProvider class to create a custom provider that writes the configured events to a local file for which appropriate access rights must be granted. This custom provider example is simple and its main intent is to give you as developer full control of its basic mechanisms. In a real-world scenario, you could use this provider and especially the example buffered provider available at <xref:System.Web.Management.BufferedWebEventProvider>, as a preliminary probe into the behavior of an application. This can help you during the design stage to gain an understanding of the information available; then later you can direct this information to a more complex provider.  \n  \n The following configuration file excerpt shows a `healthMonitoring` section configuration that enables ASP.NET to use the custom provider defined above to process all health-monitoring events.  \n  \n```  \n<healthMonitoring   \n  heartBeatInterval=\"0\"   \n  enabled=\"true\">  \n  \n    <providers>  \n  \n      <add name=\"SampleWebEventProvider\"   \n        type=\"SamplesAspNet.SampleEventProvider,webeventprovider, Version=1.0.1773.33989, Culture=neutral, PublicKeyToken=cf85aa6c978d9dea, processorArchitecture=MSIL\" />  \n  \n    </providers>  \n  \n    <rules>  \n  \n      <rule   \n        name=\"Custom Event Provider\"  \n        eventName=\"All Events\"  \n        provider=\"SampleWebEventProvider\"  \n        profile=\"Default\" />  \n    </rules>  \n  \n</healthMonitoring>  \n```  \n  \n [!code-vb[System.Web.Management.WebEventProvider#1](~/add/codesnippet/visualbasic/t-system.web.management._8_1.vb)]\n [!code-cs[System.Web.Management.WebEventProvider#1](~/add/codesnippet/csharp/t-system.web.management._8_1.cs)]"
  syntax:
    content: 'public abstract class WebEventProvider : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.Management.WebEventProvider.#ctor
  id: '#ctor'
  parent: System.Web.Management.WebEventProvider
  langs:
  - csharp
  name: WebEventProvider()
  nameWithType: WebEventProvider.WebEventProvider()
  fullName: System.Web.Management.WebEventProvider.WebEventProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.Management.WebEventProvider&quot;> </xref> classe."
  remarks: "Il costruttore WebEventProvider non deve essere utilizzato direttamente dal codice. Viene chiamato da ASP.NET. È possibile chiamare il costruttore WebEventProvider quando si deriva dalla <xref:System.Web.Management.WebEventProvider>classe.</xref:System.Web.Management.WebEventProvider>"
  example:
  - "The following code example shows how to use this constructor in a custom event provider.  \n  \n [!code-vb[System.Web.Management.WebEventProvider#2](~/add/codesnippet/visualbasic/m-system.web.management._4_1.vb)]\n [!code-cs[System.Web.Management.WebEventProvider#2](~/add/codesnippet/csharp/m-system.web.management._4_1.cs)]"
  syntax:
    content: protected WebEventProvider ();
    parameters: []
  overload: System.Web.Management.WebEventProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebEventProvider.Flush
  id: Flush
  parent: System.Web.Management.WebEventProvider
  langs:
  - csharp
  name: Flush()
  nameWithType: WebEventProvider.Flush()
  fullName: System.Web.Management.WebEventProvider.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Sposta gli eventi dal buffer del provider nel registro eventi."
  remarks: "Quando questo metodo viene chiamato, tutti gli eventi nel buffer vengono immediatamente spostati dal buffer nel registro eventi, indipendentemente dal tempo trascorso dall&quot;ultima scrittura o il numero di eventi è nel buffer. L&quot;ora dell&quot;ultima scrittura viene reimpostato per l&quot;ora dell&quot;operazione di svuotamento."
  example:
  - "The following code example shows how to use the Flush method.  \n  \n [!code-vb[System.Web.Management.WebEventProvider#3](~/add/codesnippet/visualbasic/m-system.web.management._8_1.vb)]\n [!code-cs[System.Web.Management.WebEventProvider#3](~/add/codesnippet/csharp/m-system.web.management._8_1.cs)]"
  syntax:
    content: public abstract void Flush ();
    parameters: []
  overload: System.Web.Management.WebEventProvider.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  id: ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.WebEventProvider
  langs:
  - csharp
  name: ProcessEvent(WebBaseEvent)
  nameWithType: WebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.WebEventProvider.ProcessEvent(WebBaseEvent)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Elabora l&quot;evento passato al provider."
  remarks: "Si tratta del metodo che il monitoraggio dello stato ASP.NET chiama per avviare l&quot;elaborazione dell&quot;evento."
  example:
  - "The following code example shows how to implement the ProcessEvent method. This method appends the customized string representation of the event to a specific log file.  \n  \n [!code-vb[System.Web.Management.WebEventProvider#5](~/add/codesnippet/visualbasic/c7aedb1e-f1f1-4da6-99cd-_1.vb)]\n [!code-cs[System.Web.Management.WebEventProvider#5](~/add/codesnippet/csharp/c7aedb1e-f1f1-4da6-99cd-_1.cs)]"
  syntax:
    content: public abstract void ProcessEvent (System.Web.Management.WebBaseEvent raisedEvent);
    parameters:
    - id: raisedEvent
      type: System.Web.Management.WebBaseEvent
      description: "Il <xref href=&quot;System.Web.Management.WebBaseEvent&quot;> </xref> dell&quot;oggetto da elaborare."
  overload: System.Web.Management.WebEventProvider.ProcessEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebEventProvider.Shutdown
  id: Shutdown
  parent: System.Web.Management.WebEventProvider
  langs:
  - csharp
  name: Shutdown()
  nameWithType: WebEventProvider.Shutdown()
  fullName: System.Web.Management.WebEventProvider.Shutdown()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Esegue le attività associate all&quot;arresto del provider."
  remarks: "ASP.NET chiama il <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A>metodo quando il dominio di applicazione che ospita l&quot;applicazione Web.</xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> Il metodo viene chiamato per eseguire attività che consentono l&quot;applicazione di terminare normalmente, ad esempio la chiusura delle risorse."
  example:
  - "The following code example shows how to use the Shutdown method.  \n  \n [!code-vb[System.Web.Management.WebEventProvider#4](~/add/codesnippet/visualbasic/m-system.web.management._0_1.vb)]\n [!code-cs[System.Web.Management.WebEventProvider#4](~/add/codesnippet/csharp/m-system.web.management._0_1.cs)]"
  syntax:
    content: public abstract void Shutdown ();
    parameters: []
  overload: System.Web.Management.WebEventProvider.Shutdown*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: System.Configuration.Provider.ProviderBase
- uid: System.Web.Management.WebEventProvider.#ctor
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: WebEventProvider()
  nameWithType: WebEventProvider.WebEventProvider()
  fullName: System.Web.Management.WebEventProvider.WebEventProvider()
- uid: System.Web.Management.WebEventProvider.Flush
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: Flush()
  nameWithType: WebEventProvider.Flush()
  fullName: System.Web.Management.WebEventProvider.Flush()
- uid: System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: ProcessEvent(WebBaseEvent)
  nameWithType: WebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.WebEventProvider.ProcessEvent(WebBaseEvent)
- uid: System.Web.Management.WebBaseEvent
  parent: System.Web.Management
  isExternal: false
  name: WebBaseEvent
  nameWithType: WebBaseEvent
  fullName: System.Web.Management.WebBaseEvent
- uid: System.Web.Management.WebEventProvider.Shutdown
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: Shutdown()
  nameWithType: WebEventProvider.Shutdown()
  fullName: System.Web.Management.WebEventProvider.Shutdown()
- uid: System.Web.Management.WebEventProvider.#ctor*
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: WebEventProvider
  nameWithType: WebEventProvider.WebEventProvider
- uid: System.Web.Management.WebEventProvider.Flush*
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: Flush
  nameWithType: WebEventProvider.Flush
- uid: System.Web.Management.WebEventProvider.ProcessEvent*
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: ProcessEvent
  nameWithType: WebEventProvider.ProcessEvent
- uid: System.Web.Management.WebEventProvider.Shutdown*
  parent: System.Web.Management.WebEventProvider
  isExternal: false
  name: Shutdown
  nameWithType: WebEventProvider.Shutdown
