### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleConnection
  id: OracleConnection
  children:
  - System.Data.OracleClient.OracleConnection.#ctor
  - System.Data.OracleClient.OracleConnection.#ctor(System.String)
  - System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.OracleClient.OracleConnection.BeginTransaction
  - System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)
  - System.Data.OracleClient.OracleConnection.ClearAllPools
  - System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)
  - System.Data.OracleClient.OracleConnection.Close
  - System.Data.OracleClient.OracleConnection.ConnectionString
  - System.Data.OracleClient.OracleConnection.ConnectionTimeout
  - System.Data.OracleClient.OracleConnection.CreateCommand
  - System.Data.OracleClient.OracleConnection.CreateDbCommand
  - System.Data.OracleClient.OracleConnection.Database
  - System.Data.OracleClient.OracleConnection.DataSource
  - System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)
  - System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  - System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.OracleClient.OracleConnection.GetSchema
  - System.Data.OracleClient.OracleConnection.GetSchema(System.String)
  - System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])
  - System.Data.OracleClient.OracleConnection.InfoMessage
  - System.Data.OracleClient.OracleConnection.Open
  - System.Data.OracleClient.OracleConnection.ServerVersion
  - System.Data.OracleClient.OracleConnection.State
  - System.Data.OracleClient.OracleConnection.System#ICloneable#Clone
  langs:
  - csharp
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
  type: Class
  summary: "Rappresenta una connessione aperta a un database. Questa classe non può essere ereditata."
  remarks: "Questo tipo è deprecato e verrà rimossa in una futura versione di .NET Framework. Per ulteriori informazioni, vedere [Oracle e ADO.NET](~/add/includes/ajax-current-ext-md.md).       Un oggetto OracleConnection rappresenta una connessione univoca a un database Oracle. Nel caso di un sistema di database client/server, è equivalente a una connessione di rete al server.       Un&quot;applicazione che crea un&quot;istanza dell&quot;oggetto OracleConnection può impostare richieste di sicurezza dichiarativo o imperativo che richiedono tutti i chiamanti diretti e indiretti dispongano di autorizzazioni adeguate per il codice. OracleConnection crea richieste di sicurezza utilizzando il <xref:System.Data.OracleClient.OraclePermission>oggetto.</xref:System.Data.OracleClient.OraclePermission> Gli utenti possono verificare che il codice disponga di autorizzazioni adeguate utilizzando il <xref:System.Data.OracleClient.OraclePermissionAttribute>oggetto.</xref:System.Data.OracleClient.OraclePermissionAttribute> Utenti e amministratori possono inoltre utilizzare lo strumento Criteri di sicurezza dall&quot;accesso di codice (Caspol.exe) per modificare i criteri di sicurezza a livello aziendale, utente e computer. Per ulteriori informazioni, vedere [sicurezza](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > A differenza di **connessione** oggetto in altri Framework .NET provider di dati (SQL Server, OLE DB e ODBC), OracleConnection non supporta un <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>proprietà.</xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> L&quot;impostazione di un timeout di connessione come una proprietà o nella stringa di connessione non ha alcun effetto e il valore restituito è sempre zero. OracleConnection non supporta inoltre un <xref:System.Data.OracleClient.OracleConnection.Database%2A>proprietà o un <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>metodo.</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> </xref:System.Data.OracleClient.OracleConnection.Database%2A>       Se l&quot;oggetto OracleConnection esce dall&quot;ambito, rimane aperto. Pertanto, è necessario chiudere sempre oggetti OracleConnection chiamando <xref:System.Data.OracleClient.OracleConnection.Close%2A>o **Dispose**, o tramite l&quot;oggetto OracleConnection all&quot;interno di un `Using` istruzione.</xref:System.Data.OracleClient.OracleConnection.Close%2A> In caso contrario, l&quot;operazione di garbage collection liberazione potrebbe non immediatamente. Questo ritardo può causare errori se viene raggiunto il numero massimo di connessioni, mentre un numero di connessioni è in attesa di essere eliminato dal garbage collector. Al contrario, la chiusura delle connessioni chiamando <xref:System.Data.OracleClient.OracleConnection.Close%2A>utilizza le risorse native in modo più efficiente, aumento della scalabilità e migliorando le prestazioni complessive dell&quot;applicazione.</xref:System.Data.OracleClient.OracleConnection.Close%2A> Per garantire che le connessioni sono sempre chiusi, aprire la connessione all&quot;interno di un `Using` blocco.      > [!NOTE] > Per distribuire applicazioni ad alte prestazioni, è spesso necessario usare il pool di connessioni. Tuttavia, quando si utilizza il Provider di dati .NET Framework per Oracle, non è necessario abilitare il pool di connessioni perché il provider gestito automaticamente."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and an OracleConnection. The OracleConnection is opened and set as the <xref:System.Data.OracleClient.OracleCommand.Connection%2A?displayProperty=fullName> property. The example then calls <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>, and closes the connection. To accomplish this, the <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.  \n  \n [!code-vb[Classic WebData OracleConnection#1](~/add/codesnippet/visualbasic/t-system.data.oracleclie_5_1.vb)]\n [!code-cs[Classic WebData OracleConnection#1](~/add/codesnippet/csharp/t-system.data.oracleclie_5_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("InfoMessage")]

      [System.Obsolete("OracleConnection has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)]

      public sealed class OracleConnection : System.Data.Common.DbConnection, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.DbProviderFactory
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.#ctor
  id: '#ctor'
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: OracleConnection()
  nameWithType: OracleConnection.OracleConnection()
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection()
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>."
  remarks: ''
  example:
  - "The following example creates and opens an <xref:System.Data.OracleClient.OracleConnection>.  \n  \n [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_0_1.vb)]\n [!code-cs[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/csharp/m-system.data.oracleclie_0_1.cs)]"
  syntax:
    content: public OracleConnection ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: OracleConnection(String)
  nameWithType: OracleConnection.OracleConnection(String)
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection(String)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> classe con la stringa di connessione specificata."
  remarks: ''
  example:
  - "The following example creates and opens an <xref:System.Data.OracleClient.OracleConnection>.  \n  \n [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_9_1.vb)]\n [!code-cs[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/csharp/m-system.data.oracleclie_9_1.cs)]"
  syntax:
    content: public OracleConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "La connessione utilizzata per aprire il database."
  overload: System.Data.OracleClient.OracleConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Da aggiungere."
    return:
      type: System.Data.Common.DbTransaction
      description: "Da aggiungere."
  overload: System.Data.OracleClient.OracleConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: OracleConnection.BeginTransaction()
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Avvia una transazione nel database."
  remarks: "Per eseguire il commit o il rollback della transazione, è necessario utilizzare in modo esplicito il <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>o <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A>metodi.</xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> </xref:System.Data.OracleClient.OracleTransaction.Commit%2A>       Per garantire che il Provider di dati .NET Framework per il modello di gestione delle transazioni Oracle venga eseguito correttamente, evitare di utilizzare altri modelli di gestione delle transazioni, ad esempio quello fornito dal database.      > [!NOTE] > Se non si specifica un livello di isolamento, viene utilizzato il livello di isolamento predefinito. Per specificare un livello di isolamento con il metodo BeginTransaction, utilizzare il <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>rapporto di overload.</xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and an <xref:System.Data.OracleClient.OracleTransaction>. It also demonstrates how to use the BeginTransaction, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, and <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> methods.  \n  \n [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_11_1.vb)]\n [!code-cs[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/csharp/m-system.data.oracleclie_11_1.cs)]"
  syntax:
    content: public System.Data.OracleClient.OracleTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleTransaction
      description: "Oggetto che rappresenta la nuova transazione."
  overload: System.Data.OracleClient.OracleConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Le transazioni parallele non sono supportate."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Avvia una transazione nel database con l&quot;oggetto specificato <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> valore."
  remarks: "Per eseguire il commit o il rollback della transazione, è necessario utilizzare in modo esplicito il <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>o <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A>metodi.</xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> </xref:System.Data.OracleClient.OracleTransaction.Commit%2A>       Per garantire che il Provider di dati .NET Framework per il modello di gestione delle transazioni Oracle venga eseguito correttamente, evitare di utilizzare altri modelli di gestione delle transazioni, ad esempio quello fornito dal database."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and an <xref:System.Data.OracleClient.OracleTransaction>. It also demonstrates how to use the <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, and <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> methods.  \n  \n [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/visualbasic/12fabef6-623c-46b8-b1c3-_1.vb)]\n [!code-cs[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/csharp/12fabef6-623c-46b8-b1c3-_1.cs)]"
  syntax:
    content: public System.Data.OracleClient.OracleTransaction BeginTransaction (System.Data.IsolationLevel il);
    parameters:
    - id: il
      type: System.Data.IsolationLevel
      description: "Il livello di isolamento della transazione per questa connessione."
    return:
      type: System.Data.OracleClient.OracleTransaction
      description: "Oggetto che rappresenta la nuova transazione."
  overload: System.Data.OracleClient.OracleConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Le transazioni parallele non sono supportate."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: OracleConnection.ChangeDatabase(String)
  fullName: System.Data.OracleClient.OracleConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Modifica il database corrente per un oggetto aperto <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>."
  remarks: "Il `value` parametro deve contenere un nome di database valido e non può contenere un valore null, una stringa vuota (&quot;&quot;), o una stringa contenente solo caratteri vuoti.      > [!NOTE] > A differenza di **connessione** oggetto in altri provider di dati .NET Framework (SQL Server, OLE DB e ODBC), <xref:System.Data.OracleClient.OracleConnection>non supporta un <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>proprietà.</xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> </xref:System.Data.OracleClient.OracleConnection> L&quot;impostazione di un timeout di connessione come una proprietà o nella stringa di connessione non ha alcun effetto e il valore restituito è sempre zero. <xref:System.Data.OracleClient.OracleConnection>non supporta inoltre un <xref:System.Data.OracleClient.OracleConnection.Database%2A>proprietà o un metodo ChangeDatabase.</xref:System.Data.OracleClient.OracleConnection.Database%2A></xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: public override void ChangeDatabase (string value);
    parameters:
    - id: value
      type: System.String
      description: "Il nome del database da utilizzare invece il database corrente."
  overload: System.Data.OracleClient.OracleConnection.ChangeDatabase*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nome del database non è valido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione non è aperta."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Non è possibile modificare il database."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ClearAllPools
  id: ClearAllPools
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ClearAllPools()
  nameWithType: OracleConnection.ClearAllPools()
  fullName: System.Data.OracleClient.OracleConnection.ClearAllPools()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Svuota il pool di connessioni."
  remarks: "ClearAllPools Reimposta o Svuota il pool di connessioni. Se le connessioni sono in uso al momento della chiamata, queste vengono contrassegnate in modo appropriato e vengono eliminate quando <xref:System.Data.OracleClient.OracleConnection.Close%2A>viene chiamato su di essi.</xref:System.Data.OracleClient.OracleConnection.Close%2A>"
  syntax:
    content: public static void ClearAllPools ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.ClearAllPools*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)
  id: ClearPool(System.Data.OracleClient.OracleConnection)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ClearPool(OracleConnection)
  nameWithType: OracleConnection.ClearPool(OracleConnection)
  fullName: System.Data.OracleClient.OracleConnection.ClearPool(OracleConnection)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Svuota il pool di connessioni associato alla connessione specificata."
  remarks: "Metodo ClearPool Cancella il pool di connessioni associato `connection`. Se le connessioni aggiuntive associate `connection` sono in uso al momento della chiamata vengono contrassegnate in modo appropriato e vengono eliminate quando <xref:System.Data.OracleClient.OracleConnection.Close%2A>viene chiamato su di essi.</xref:System.Data.OracleClient.OracleConnection.Close%2A>"
  syntax:
    content: public static void ClearPool (System.Data.OracleClient.OracleConnection connection);
    parameters:
    - id: connection
      type: System.Data.OracleClient.OracleConnection
      description: "Il <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> da cancellare dal pool."
  overload: System.Data.OracleClient.OracleConnection.ClearPool*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Close
  id: Close
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Close()
  nameWithType: OracleConnection.Close()
  fullName: System.Data.OracleClient.OracleConnection.Close()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Chiude la connessione al database."
  remarks: "Il metodo Close esegue il rollback di tutte le transazioni in sospeso. È quindi rilascia la connessione al pool di connessioni o chiude la connessione se il pool di connessioni è disabilitato.       Un&quot;applicazione può chiamare Close più volte senza generare un&quot;eccezione.      > [!NOTE] > Quando si utilizza il Provider di dati .NET Framework per Oracle, non è necessaria abilitare il pool di connessioni perché il provider gestito automaticamente.      > [!CAUTION] > Non chiamare Close su un <xref:System.Data.OracleClient.OracleConnection>, <xref:System.Data.OracleClient.OracleDataReader>, o qualsiasi altro oggetto gestito il `Finalize` metodo della classe.</xref:System.Data.OracleClient.OracleDataReader> </xref:System.Data.OracleClient.OracleConnection> In un finalizzatore, è necessario rilasciare solo le risorse non gestite che la classe controlla direttamente. Se la classe non dispone di risorse non gestite, non includere un `Finalize` metodo nella definizione della classe. Per ulteriori informazioni, vedere [Garbage Collection](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: OracleConnection.ConnectionString
  fullName: System.Data.OracleClient.OracleConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene o imposta la stringa utilizzata per aprire un database Oracle."
  remarks: "ConnectionString può essere impostata solo quando la connessione viene chiusa.       È possibile utilizzare la proprietà ConnectionString per connettersi a un database. Nell&quot;esempio seguente viene illustrata una stringa di connessione tipica.      ```   &quot;Data Source=Oracle8i;Integrated Security=yes&quot;   ```Molte delle impostazioni specificate nella stringa di contengono le proprietà di sola lettura corrispondenti (ad esempio, `Data Source=MyServer`, che corrisponde alla <xref:System.Data.OracleClient.OracleConnection.DataSource%2A>proprietà).</xref:System.Data.OracleClient.OracleConnection.DataSource%2A> Quando si imposta la stringa di connessione, tutte queste proprietà vengono aggiornate, a meno che non viene rilevato un errore, nel qual caso nessuna delle proprietà vengono aggiornata. <xref:System.Data.OracleClient.OracleConnection>proprietà restituiscono solo le impostazioni predefinite o quelle specificate in ConnectionString.</xref:System.Data.OracleClient.OracleConnection>       Reimpostare la proprietà ConnectionString su una connessione chiusa Reimposta tutte le connessione stringa valori e le proprietà correlate, inclusa la password.       La stringa di connessione viene analizzata immediatamente dopo l&quot;impostazione. Se l&quot;analisi vengono rilevati errori nella sintassi, un&quot;eccezione in fase di esecuzione, ad esempio <xref:System.ArgumentException>, viene generato.</xref:System.ArgumentException> Altri errori sono disponibili solo quando viene effettuato un tentativo di aprire la connessione.       Il formato di base di una stringa di connessione è una serie di coppie parola chiave/valore separati da punti e virgola. Il segno di uguale (=) connette ogni parola chiave e il relativo valore. Per includere i valori che contengono un punto e virgola, una virgoletta singola o una virgoletta doppia, il valore deve essere racchiuso tra virgolette doppie. Se il valore contiene sia un punto e virgola e un carattere di virgolette doppie, il valore può essere racchiuso tra virgolette singole. La virgoletta singola è utile anche se il valore inizia con un carattere di virgolette doppie. Viceversa, le virgolette doppie possono essere utilizzate se il valore inizia con una virgoletta singola. Se il valore contiene caratteri di virgoletta singola e virgolette doppie, è necessario raddoppiare il carattere virgoletta usato per delimitare il valore ogni volta che si verifica all&quot;interno del valore.       Per includere nel valore stringa spazi iniziali o finali, il valore deve essere racchiuso tra virgolette singole o doppie. Eventuali spazi iniziali o finali integer, Boolean o valori enumerati vengono ignorati, anche se racchiusi tra virgolette. Tuttavia, vengono mantenuti gli spazi all&quot;interno di un valore o la parola chiave della stringa letterale. Virgolette singole o doppie possono essere utilizzate in una stringa di connessione senza delimitatori, a meno che un carattere di virgoletta è il primo o ultimo carattere nel valore, ad esempio, `Data Source= my&quot;Server` o `Data Source= my&quot;Server`.       Per includere un segno di uguale (=) in una parola chiave o un valore, deve essere preceduto da un altro segno di uguale. Ad esempio, nella stringa di connessione ipotetica ```   &quot;key==word=value&quot;   ``` la parola chiave è &quot;chiave = word&quot; e il valore è &quot;value&quot;.       Se una parola chiave specifica una coppia parola chiave/valore è presente più volte in una stringa di connessione, viene utilizzato l&quot;ultima occorrenza del set di valore.       Parole chiave fanno distinzione tra maiuscole e minuscole.       La tabella seguente elenca i nomi validi per i valori della proprietà ConnectionString.      | Nome | Predefinito | Descrizione |   |----------|-------------|-----------------|   | Origine dati<br /><br /> -Oppure-<br /><br /> Server | | Il nome o indirizzo di rete dell&quot;istanza di Oracle a cui connettersi. |   | La sicurezza integrata |&quot; false&quot;| Indica se la connessione è a essere protetta.<br /><br /> Valori riconosciuti sono `true` (consigliato), `false`, `yes`, e `no`. |   | Password | | La password per l&quot;accesso all&quot;account di Oracle. Per mantenere un elevato livello di sicurezza, è consigliabile utilizzare invece la parola chiave di sicurezza integrata. |   | Persist Security Info |&quot; false&quot;| Se impostato su `false` o `no` (consigliato), informazioni riservate, ad esempio la password non viene restituite come parte della connessione se la connessione è aperta o è già stata open <xref:System.Data.OracleClient.OracleConnection.State%2A>.</xref:System.Data.OracleClient.OracleConnection.State%2A> Reimpostare la stringa di connessione Reimposta tutti i valori di stringa di connessione, inclusa la password.<br /><br /> Valori riconosciuti sono `true`, `false`, `yes`, e `no`. |   | Unicode |&quot; false&quot;| Specifica se il Provider di dati .NET Framework per Oracle utilizza le chiamate all&quot;API modalità UTF16. Questa parola chiave viene ignorata, tranne quando si utilizza il software client Oracle9i. |   | ID utente | | L&quot;account di accesso Oracle. Per mantenere un elevato livello di sicurezza, è consigliabile utilizzare invece la parola chiave di sicurezza integrata. |       La tabella seguente elenca i nomi validi per i valori all&quot;interno di ConnectionString del pool di connessioni.      | Nome | Predefinito | Descrizione |   |----------|-------------|-----------------|   | Durata della connessione |&0; | Quando una connessione viene restituita al pool, l&quot;ora di creazione viene confrontata con l&quot;ora corrente e la connessione viene interrotta se tale intervallo di tempo (in secondi) supera il valore specificato da `Connection Lifetime`. Ciò è utile nelle configurazioni cluster per applicare il bilanciamento del carico tra un server in esecuzione e un server appena portato online.<br /><br /> Un valore pari a zero comporta per il timeout di connessione massimo le connessioni in pool. |   | Integrare |&quot; true&quot;| Quando `true` o `yes`, la funzione di pool inserisce automaticamente la connessione nel contesto di transazione corrente del thread di creazione.<br /><br /> Valori riconosciuti sono `true`, `false`, `yes`, e `no`. |   | Dimensione Max Pool |&100; | Numero massimo di connessioni consentite nel pool. L&quot;impostazione di `Max Pool Size` valore della proprietà ConnectionString può influire sulle prestazioni. Se si prevede di creare e attivamente utilizza più di 100 connessioni, è necessario aumentare `Max Pool Size` su un valore vicino all&quot;utilizzo stazionario delle connessioni per l&quot;applicazione. |   | Dimensione min Pool | 0 | Il numero minimo di connessioni consentite nel pool. |   | Il pool |&quot; true&quot;| Quando `true` o `yes`, <xref:System.Data.OracleClient.OracleConnection>oggetto viene creato dal pool appropriato o, se necessario, viene creato e aggiunto al pool appropriato.</xref:System.Data.OracleClient.OracleConnection><br /><br /> Valori riconosciuti sono `true`, `false`, `yes`, e `no`. |       Quando si imposta una parola chiave o valori che richiedono un valore booleano di pool di connessioni, è possibile utilizzare &quot;Sì&quot; anziché &quot;true&quot; e &quot;no&quot; anziché &quot;false&quot;. I valori integer sono rappresentati come stringhe."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and sets some of its properties in the connection string.  \n  \n [!code-vb[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_15_1.vb)]\n [!code-cs[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/csharp/p-system.data.oracleclie_15_1.cs)]"
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "La stringa di connessione Oracle che include le impostazioni, ad esempio il nome del server, è necessaria per stabilire la connessione iniziale. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Data.OracleClient.OracleConnection.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: OracleConnection.ConnectionTimeout
  fullName: System.Data.OracleClient.OracleConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il tempo di attesa per stabilire una connessione prima di terminare il tentativo e generare un errore."
  remarks: "È possibile impostare la quantità di tempo di attesa di una connessione al timeout utilizzando il `Connect Timeout` o `Connection Timeout` parole chiave nella stringa di connessione. Il valore 0 indica nessun limite e devono essere evitato un <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>perché un tentativo di connessione attende indefinitamente.</xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>      > [!NOTE] > A differenza di `Connection` oggetto in altri provider di dati .NET Framework (SQL Server, OLE DB e ODBC), <xref:System.Data.OracleClient.OracleConnection>non supporta una proprietà ConnectionTimeout.</xref:System.Data.OracleClient.OracleConnection> Impostazione di un timeout di connessione con una proprietà o nella stringa di connessione non ha alcun effetto e il valore restituito è sempre zero. <xref:System.Data.OracleClient.OracleConnection>non supporta inoltre un <xref:System.Data.OracleClient.OracleConnection.Database%2A>proprietà o un <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>metodo.</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A> </xref:System.Data.OracleClient.OracleConnection.Database%2A></xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: public override int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "Il tempo (in secondi) di attesa per una connessione per aprirla. Il valore predefinito è 15 secondi."
  overload: System.Data.OracleClient.OracleConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il valore specificato è minore di 0."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: OracleConnection.CreateCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Crea e restituisce un <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> oggetto associato di <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>."
  syntax:
    content: public System.Data.OracleClient.OracleCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "Un <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref> oggetto."
  overload: System.Data.OracleClient.OracleConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: OracleConnection.CreateDbCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Da aggiungere."
  overload: System.Data.OracleClient.OracleConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Database
  id: Database
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Database
  nameWithType: OracleConnection.Database
  fullName: System.Data.OracleClient.OracleConnection.Database
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il nome del database corrente o del database da utilizzare dopo l&quot;apertura di una connessione."
  remarks: "La proprietà del Database viene aggiornato dinamicamente. Se si modifica il database corrente utilizzando un&quot;istruzione SQL o <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>(metodo), viene inviato un messaggio informativo e la proprietà viene aggiornata automaticamente.</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>      > [!NOTE] > A differenza di `Connection` oggetto in altri provider di dati .NET Framework (SQL Server, OLE DB e ODBC), <xref:System.Data.OracleClient.OracleConnection>non supporta un <xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>proprietà.</xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A> </xref:System.Data.OracleClient.OracleConnection> Impostazione di un timeout di connessione con una proprietà o nella stringa di connessione non ha alcun effetto e il valore restituito è sempre zero. <xref:System.Data.OracleClient.OracleConnection>non supporta inoltre una proprietà del Database o un <xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>metodo.</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A></xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "Il nome del database corrente o il nome del database da utilizzare dopo l&quot;apertura di una connessione. Il valore predefinito è una stringa vuota."
  overload: System.Data.OracleClient.OracleConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.DataSource
  id: DataSource
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: OracleConnection.DataSource
  fullName: System.Data.OracleClient.OracleConnection.DataSource
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il nome del server Oracle a cui connettersi."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and displays some of its read-only properties.  \n  \n [!code-vb[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_7_1.vb)]\n [!code-cs[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/csharp/p-system.data.oracleclie_7_1.cs)]"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "Il nome del server Oracle a cui connettersi. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Data.OracleClient.OracleConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OracleConnection.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.Data.OracleClient.OracleConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OracleConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(ITransaction)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Permette l&quot;integrazione nella transazione specificata come transazione distribuita."
  remarks: "Novità in ADO.NET 2.0 è il supporto per l&quot;utilizzo di <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>metodo di integrazione in una transazione distribuita.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Poiché inserisce una connessione in un <xref:System.Transactions.Transaction>istanza, **EnlistTransaction** consente di sfruttare le funzionalità disponibili nel <xref:System.Transactions>dello spazio dei nomi per la gestione transazioni distribuite, rendendola preferibile **EnlistDistributedTransaction** a questo scopo.</xref:System.Transactions> </xref:System.Transactions.Transaction> Per ulteriori informazioni, vedere [transazioni distribuite](~/add/includes/ajax-current-ext-md.md).       È possibile continuare a eseguire l&quot;inserimento di una transazione distribuita esistente mediante il metodo EnlistDistributedTransaction se l&quot;inserimento automatico è disabilitato. L&quot;inserimento in una transazione distribuita esistente assicura che, se è stato eseguito il commit o il rollback della transazione, le modifiche apportate dal codice all&quot;origine dati sono inoltre eseguito il commit o il rollback.       EnlistDistributedTransaction restituisce un&quot;eccezione se <xref:System.Data.OracleClient.OracleConnection>è già avviato una transazione utilizzando <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>.</xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A> </xref:System.Data.OracleClient.OracleConnection> Tuttavia, se la transazione è una transazione locale avviata nell&quot;origine dati (ad esempio eseguendo in modo esplicito l&quot;istruzione BEGIN TRANSACTION tramite un <xref:System.Data.OracleClient.OracleCommand>oggetto), EnlistDistributedTransaction esegue il rollback della transazione locale e permette l&quot;integrazione nella transazione distribuita esistente come richiesto.</xref:System.Data.OracleClient.OracleCommand> Non verrà notificato che è stato eseguito il rollback della transazione locale e responsabile della gestione delle transazioni locali non avviate tramite <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>.</xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>"
  syntax:
    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction distributedTransaction);
    parameters:
    - id: distributedTransaction
      type: System.EnterpriseServices.ITransaction
      description: "Un riferimento a un oggetto esistente <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> in cui si desidera integrare."
  overload: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: OracleConnection.EnlistTransaction(Transaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Permette l&quot;integrazione nella transazione specificata come transazione distribuita."
  remarks: "Novità in ADO.NET 2.0 è il supporto per l&quot;utilizzo di <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>metodo di integrazione in una transazione distribuita.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Poiché inserisce una connessione in un <xref:System.Transactions.Transaction>istanza, **EnlistTransaction** consente di sfruttare le funzionalità disponibili nel <xref:System.Transactions>dello spazio dei nomi per la gestione transazioni distribuite, rendendola preferibile **EnlistDistributedTransaction**, che utilizza un **System.EnterpriseServices.ITransaction** oggetto.</xref:System.Transactions> </xref:System.Transactions.Transaction> Include inoltre una semantica leggermente diversa: quando una connessione in modo esplicito è integrata in una transazione, non può essere rimosso o integrata in un&quot;altra transazione fino al completamento della prima transazione. Per ulteriori informazioni sulle transazioni distribuite, vedere [transazioni distribuite](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Un riferimento a un oggetto esistente <xref href=&quot;System.Transactions.Transaction&quot;> </xref> in cui si desidera integrare."
  overload: System.Data.OracleClient.OracleConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.GetSchema
  id: GetSchema
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: OracleConnection.GetSchema()
  fullName: System.Data.OracleClient.OracleConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Restituisce informazioni sullo schema per l&quot;origine dati di questo <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>."
  syntax:
    content: public override System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Oggetto <xref href=&quot;System.Data.DataTable&quot;> </xref> che contiene informazioni sullo schema."
  overload: System.Data.OracleClient.OracleConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: OracleConnection.GetSchema(String)
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Restituisce informazioni sullo schema per l&quot;origine dati di questo <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> usando la stringa specificata per il nome dello schema."
  remarks: "Le query tramite GetSchema sono tra maiuscole e minuscole. A causa di un trattamento Oracle dei casi quando si crea uno schema, questo può causare risultati imprevisti.       Se lo schema è stato creato senza virgolette`,` Oracle archivia il nome dell&quot;oggetto in lettere maiuscole. Se lo schema è stato creato con le virgolette, Oracle archivia il nome dell&quot;oggetto delle maiuscole e minuscole specificato.       Ad esempio, si supponga di crea una tabella denominata MyTable utilizzando una delle due istruzioni seguenti: `CREATE TABLE MyTable ...` `CREATE TABLE &quot;MyTable&quot; ...` per recuperare informazioni su questa tabella tramite il **GetSchema** metodo nel primo caso, è necessario passare &quot;MYTABLE&quot; come argomento.        Nel secondo caso, è necessario passare &quot;MyTable&quot; come argomento."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "Specifica il nome dello schema da restituire."
    return:
      type: System.Data.DataTable
      description: "Oggetto <xref href=&quot;System.Data.DataTable&quot;> </xref> che contiene informazioni sullo schema."
  overload: System.Data.OracleClient.OracleConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>viene specificato come null."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: OracleConnection.GetSchema(String,String[])
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Restituisce informazioni sullo schema per l&quot;origine dati di questo <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> usando la stringa specificata per il nome dello schema e la matrice di stringa specificata per i valori di restrizione."
  remarks: "Il `restrictionValues` parametro può fornire profondità n di valori specificati dall&quot;insieme di restrizioni per una raccolta specifica. Per impostare i valori per una determinata restrizione e non impostare i valori di altre restrizioni, è necessario impostare le restrizioni precedenti su null e quindi inserire il valore appropriato per la restrizione che si desidera specificare un valore per.       Un esempio di questa è la raccolta &quot;Tabelle&quot;. Se la raccolta &quot;Tables&quot; contiene 3 restrizioni: database, proprietario e nome di tabella. si desidera vengano restituite solo le tabelle associate al proprietario &quot;Carlo&quot;, quindi è necessario passare i valori seguenti (almeno): null, &quot;Carlo&quot;. Se un valore di restrizione non viene passato, i valori predefiniti vengono utilizzati per la restrizione. Questo è lo stesso mapping passare null, che è diverso dal passaggio di una stringa vuota per il valore del parametro. In questo caso, la stringa vuota (&quot;&quot;) viene considerato come valore per il parametro specificato.       Query che utilizzano <xref:System.Data.OracleClient.OracleConnection.GetSchema%2A>tra maiuscole e minuscole.</xref:System.Data.OracleClient.OracleConnection.GetSchema%2A> A causa di un trattamento Oracle dei casi quando si crea uno schema, questo può causare risultati imprevisti.       Se lo schema è stato creato senza virgolette`,` Oracle archivia il nome dell&quot;oggetto in lettere maiuscole. Se lo schema è stato creato con le virgolette, Oracle archivia il nome dell&quot;oggetto delle maiuscole e minuscole specificato.       Ad esempio, si supponga di crea una tabella denominata MyTable utilizzando una delle due istruzioni seguenti: `CREATE TABLE MyTable ...` `CREATE TABLE &quot;MyTable&quot; ...` per recuperare informazioni su questa tabella tramite il **GetSchema** metodo nel primo caso, è necessario passare &quot;MYTABLE&quot; come argomento.        Nel secondo caso, è necessario passare &quot;MyTable&quot; come argomento."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "Specifica il nome dello schema da restituire."
    - id: restrictionValues
      type: System.String[]
      description: "Un set di valori di restrizione per lo schema richiesto."
    return:
      type: System.Data.DataTable
      description: "Oggetto <xref href=&quot;System.Data.DataTable&quot;> </xref> che contiene informazioni sullo schema."
  overload: System.Data.OracleClient.OracleConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>viene specificato come null."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.InfoMessage
  id: InfoMessage
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: InfoMessage
  nameWithType: OracleConnection.InfoMessage
  fullName: System.Data.OracleClient.OracleConnection.InfoMessage
  type: Event
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Si verifica quando Oracle invia un avviso o un messaggio informativo."
  remarks: "Poiché il Provider di dati .NET Framework per Oracle utilizza l&quot;interfaccia Oracle Call Interface (OCI), ogni volta che il provider di dati riceve un messaggio con esito positivo di Info, viene generato un evento InfoMessage. Un esempio possibile creare una stored procedure che contiene un errore di sintassi. La chiamata al <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>metodo potrebbe avere esito positivo.</xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> Tuttavia, essere generato un evento InfoMessage che informa dell&quot;errore di sintassi.       I client che desidera elaborare avvisi o messaggi informativi inviati dal server è necessario creare un <xref:System.Data.OracleClient.OracleInfoMessageEventHandler>delegato per l&quot;ascolto su questo evento.</xref:System.Data.OracleClient.OracleInfoMessageEventHandler>"
  syntax:
    content: public event System.Data.OracleClient.OracleInfoMessageEventHandler InfoMessage;
    return:
      type: System.Data.OracleClient.OracleInfoMessageEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Open
  id: Open
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Open()
  nameWithType: OracleConnection.Open()
  fullName: System.Data.OracleClient.OracleConnection.Open()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Apre una connessione a un database con le impostazioni delle proprietà specificati da <xref:System.Data.OracleClient.OracleConnection.ConnectionString*>.</xref:System.Data.OracleClient.OracleConnection.ConnectionString*>"
  remarks: "Il <xref:System.Data.OracleClient.OracleConnection>Disegna una connessione aperta dal pool di connessioni, se disponibile.</xref:System.Data.OracleClient.OracleConnection> In caso contrario, stabilisce una nuova connessione al database.      > [!NOTE] > Se il <xref:System.Data.OracleClient.OracleConnection>esce dall&quot;ambito, la connessione rappresenta non viene chiusa automaticamente.</xref:System.Data.OracleClient.OracleConnection> Pertanto, è necessario chiudere esplicitamente la connessione, chiamando <xref:System.Data.OracleClient.OracleConnection.Close%2A>.</xref:System.Data.OracleClient.OracleConnection.Close%2A>"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.Open*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione non è aperta."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Non è possibile modificare il database."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: OracleConnection.ServerVersion
  fullName: System.Data.OracleClient.OracleConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene una stringa che contiene la versione del server a cui è connesso il client."
  remarks: "La proprietà ServerVersion è nel formato di versione di Oracle. Ad esempio, il formato per una versione Oracle8 è una stringa nel formato &quot;8.1.7.0.0 Oracle8 Release 8.1.7.0.0 - Production.&quot;"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and displays some of its read-only properties.  \n  \n [!code-vb[Classic WebData OracleConnection.ServerVersion#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_3_1.vb)]\n [!code-cs[Classic WebData OracleConnection.ServerVersion#1](~/add/codesnippet/csharp/p-system.data.oracleclie_3_1.cs)]"
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "La versione del server connesso."
  overload: System.Data.OracleClient.OracleConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione viene chiusa."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.State
  id: State
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: State
  nameWithType: OracleConnection.State
  fullName: System.Data.OracleClient.OracleConnection.State
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene lo stato corrente della connessione."
  remarks: "Le modifiche di stato consentiti sono: - `Closed` per `Open`, usando il `Open` metodo il <xref:System.Data.OracleClient.OracleConnection>oggetto.</xref:System.Data.OracleClient.OracleConnection>      -Da `Open` a `Closed`, usando il <xref:System.Data.OracleClient.OracleConnection.Close%2A>metodo il <xref:System.Data.OracleClient.OracleConnection>oggetto.</xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleConnection.Close%2A>"
  example:
  - "The following example creates an instance of a derived class, <xref:System.Data.OracleClient.OracleConnection>, sets its <xref:System.Data.IDbConnection.ConnectionString%2A>, and displays its State.  \n  \n [!code-cs[Classic WebData OracleConnection.State#1](~/add/codesnippet/csharp/p-system.data.oracleclie_9_1.cs)]\n [!code-vb[Classic WebData OracleConnection.State#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_9_1.vb)]"
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "Combinazione bit per bit di <xref href=&quot;System.Data.ConnectionState&quot;> </xref> valori. Il valore predefinito è <xref uid=&quot;langword_csharp_Closed&quot; name=&quot;Closed&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OracleConnection.System.ICloneable.Clone()
  fullName: System.Data.OracleClient.OracleConnection.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Crea un nuovo oggetto che è una copia dell&quot;istanza corrente."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Data.OracleClient.OracleConnection>esegue il cast dell&quot;istanza di un <xref:System.ICloneable>interfaccia.</xref:System.ICloneable> </xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Un nuovo oggetto che è una copia di questa istanza..."
  overload: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.OracleClient.OracleException
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleException
  nameWithType: OracleException
  fullName: System.Data.OracleClient.OracleException
- uid: System.Data.OracleClient.OracleConnection.#ctor
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: OracleConnection()
  nameWithType: OracleConnection.OracleConnection()
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection()
- uid: System.Data.OracleClient.OracleConnection.#ctor(System.String)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: OracleConnection(String)
  nameWithType: OracleConnection.OracleConnection(String)
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: OracleConnection.BeginTransaction()
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction()
- uid: System.Data.OracleClient.OracleTransaction
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleTransaction
  nameWithType: OracleTransaction
  fullName: System.Data.OracleClient.OracleTransaction
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: OracleConnection.ChangeDatabase(String)
  fullName: System.Data.OracleClient.OracleConnection.ChangeDatabase(String)
- uid: System.Data.OracleClient.OracleConnection.ClearAllPools
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearAllPools()
  nameWithType: OracleConnection.ClearAllPools()
  fullName: System.Data.OracleClient.OracleConnection.ClearAllPools()
- uid: System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearPool(OracleConnection)
  nameWithType: OracleConnection.ClearPool(OracleConnection)
  fullName: System.Data.OracleClient.OracleConnection.ClearPool(OracleConnection)
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleConnection.Close
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Close()
  nameWithType: OracleConnection.Close()
  fullName: System.Data.OracleClient.OracleConnection.Close()
- uid: System.Data.OracleClient.OracleConnection.ConnectionString
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OracleConnection.ConnectionString
  fullName: System.Data.OracleClient.OracleConnection.ConnectionString
- uid: System.Data.OracleClient.OracleConnection.ConnectionTimeout
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OracleConnection.ConnectionTimeout
  fullName: System.Data.OracleClient.OracleConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleConnection.CreateCommand
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: OracleConnection.CreateCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateCommand()
- uid: System.Data.OracleClient.OracleCommand
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleCommand
  nameWithType: OracleCommand
  fullName: System.Data.OracleClient.OracleCommand
- uid: System.Data.OracleClient.OracleConnection.CreateDbCommand
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: OracleConnection.CreateDbCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.OracleClient.OracleConnection.Database
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Database
  nameWithType: OracleConnection.Database
  fullName: System.Data.OracleClient.OracleConnection.Database
- uid: System.Data.OracleClient.OracleConnection.DataSource
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: DataSource
  nameWithType: OracleConnection.DataSource
  fullName: System.Data.OracleClient.OracleConnection.DataSource
- uid: System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OracleConnection.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleConnection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OracleConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(ITransaction)
- uid: System.EnterpriseServices.ITransaction
  parent: System.EnterpriseServices
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: System.EnterpriseServices.ITransaction
- uid: System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: OracleConnection.EnlistTransaction(Transaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.OracleClient.OracleConnection.GetSchema
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema()
  nameWithType: OracleConnection.GetSchema()
  fullName: System.Data.OracleClient.OracleConnection.GetSchema()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: OracleConnection.GetSchema(String)
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String)
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: OracleConnection.GetSchema(String,String[])
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleConnection.InfoMessage
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: InfoMessage
  nameWithType: OracleConnection.InfoMessage
  fullName: System.Data.OracleClient.OracleConnection.InfoMessage
- uid: System.Data.OracleClient.OracleInfoMessageEventHandler
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleInfoMessageEventHandler
  nameWithType: OracleInfoMessageEventHandler
  fullName: System.Data.OracleClient.OracleInfoMessageEventHandler
- uid: System.Data.OracleClient.OracleConnection.Open
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Open()
  nameWithType: OracleConnection.Open()
  fullName: System.Data.OracleClient.OracleConnection.Open()
- uid: System.Data.OracleClient.OracleConnection.ServerVersion
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OracleConnection.ServerVersion
  fullName: System.Data.OracleClient.OracleConnection.ServerVersion
- uid: System.Data.OracleClient.OracleConnection.State
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: State
  nameWithType: OracleConnection.State
  fullName: System.Data.OracleClient.OracleConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OracleConnection.System.ICloneable.Clone()
  fullName: System.Data.OracleClient.OracleConnection.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleConnection.#ctor*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection.OracleConnection
- uid: System.Data.OracleClient.OracleConnection.BeginDbTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: OracleConnection.BeginDbTransaction
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: OracleConnection.BeginTransaction
- uid: System.Data.OracleClient.OracleConnection.ChangeDatabase*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: OracleConnection.ChangeDatabase
- uid: System.Data.OracleClient.OracleConnection.ClearAllPools*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearAllPools
  nameWithType: OracleConnection.ClearAllPools
- uid: System.Data.OracleClient.OracleConnection.ClearPool*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearPool
  nameWithType: OracleConnection.ClearPool
- uid: System.Data.OracleClient.OracleConnection.Close*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Close
  nameWithType: OracleConnection.Close
- uid: System.Data.OracleClient.OracleConnection.ConnectionString*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OracleConnection.ConnectionString
- uid: System.Data.OracleClient.OracleConnection.ConnectionTimeout*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OracleConnection.ConnectionTimeout
- uid: System.Data.OracleClient.OracleConnection.CreateCommand*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateCommand
  nameWithType: OracleConnection.CreateCommand
- uid: System.Data.OracleClient.OracleConnection.CreateDbCommand*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: OracleConnection.CreateDbCommand
- uid: System.Data.OracleClient.OracleConnection.Database*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Database
  nameWithType: OracleConnection.Database
- uid: System.Data.OracleClient.OracleConnection.DataSource*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: DataSource
  nameWithType: OracleConnection.DataSource
- uid: System.Data.OracleClient.OracleConnection.Dispose*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Dispose
  nameWithType: OracleConnection.Dispose
- uid: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistDistributedTransaction
  nameWithType: OracleConnection.EnlistDistributedTransaction
- uid: System.Data.OracleClient.OracleConnection.EnlistTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: OracleConnection.EnlistTransaction
- uid: System.Data.OracleClient.OracleConnection.GetSchema*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema
  nameWithType: OracleConnection.GetSchema
- uid: System.Data.OracleClient.OracleConnection.Open*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Open
  nameWithType: OracleConnection.Open
- uid: System.Data.OracleClient.OracleConnection.ServerVersion*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OracleConnection.ServerVersion
- uid: System.Data.OracleClient.OracleConnection.State*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: State
  nameWithType: OracleConnection.State
- uid: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OracleConnection.System.ICloneable.Clone
