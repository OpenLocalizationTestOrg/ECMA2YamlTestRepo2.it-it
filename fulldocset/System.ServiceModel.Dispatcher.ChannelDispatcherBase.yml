### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  id: ChannelDispatcherBase
  children:
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
  langs:
  - csharp
  name: ChannelDispatcherBase
  nameWithType: ChannelDispatcherBase
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  type: Class
  summary: "Classe base astratta per il dispatcher del canale che accetta canali e li associa a un servizio."
  remarks: "Viene utilizzato dagli sviluppatori che vogliono mantenere il [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] programmazione modello ma sostituire la fase di esecuzione fornita dal sistema. Tali applicazioni verranno pull dei messaggi dai canali e li gestiranno direttamente con i dispatcher definiti dall&quot;utente. Per utilizzare ChannelDispatcherBase, creare una classe derivata, estendere <xref:System.ServiceModel.ServiceHost>ed eseguire l&quot;override <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, aggiungendo istanze della classe derivata da ChannelDispatcherBase a <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> </xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A> </xref:System.ServiceModel.ServiceHost>       Il <xref:System.ServiceModel.Channels.IChannelListener>e <xref:System.ServiceModel.ServiceHost>, associato con l&quot;oggetto ChannelDispatcherBase sono disponibili per essere controllate o modificate tramite il <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A>e <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A>rispettivamente.</xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> </xref:System.ServiceModel.ServiceHost> </xref:System.ServiceModel.Channels.IChannelListener>       <xref:System.ServiceModel.ServiceHost>chiamate di <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29>o <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29>metodi durante l&quot;aggiunta o rimozione di un elemento ChannelDispatcherBase dal relativo <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>insieme.</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29></xref:System.ServiceModel.ServiceHost>       <xref:System.ServiceModel.ServiceHost>chiamate di <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A>durante l&quot;arresto prima di chiudere InstanceContexts.</xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A></xref:System.ServiceModel.ServiceHost> [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]utilizza questa chiamata per chiudere i canali del datagramma e attendere che tutti i messaggi ottengano un InstanceContext."
  syntax:
    content: 'public abstract class ChannelDispatcherBase : System.ServiceModel.Channels.CommunicationObject'
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: ChannelDispatcherBase()
  nameWithType: ChannelDispatcherBase.ChannelDispatcherBase()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.ChannelDispatcherBase()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Dispatcher.ChannelDispatcherBase&quot;> </xref> classe."
  syntax:
    content: protected ChannelDispatcherBase ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)
  id: Attach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: Attach(ServiceHostBase)
  nameWithType: ChannelDispatcherBase.Attach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Quando sottoposto a override in una classe derivata, allega il ChannelDispatcher a un host specifico."
  remarks: "Questo metodo può essere impostato solo quando l&quot;istanza del <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>è il <xref:System.ServiceModel.CommunicationState>dello stato, poiché questa è l&quot;unico stato che è modificabile e non è stato eliminato.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>       A <xref:System.ServiceModel.ServiceHost>chiama questo metodo quando il <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>viene aggiunto alla relativa <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>insieme.</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> </xref:System.ServiceModel.ServiceHost>  In questo modo il <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>la possibilità di associare gli eventi e controllare il <xref:System.ServiceModel.ServiceHost>e fornisce il valore che deve essere restituito dal <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A>proprietà.</xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> </xref:System.ServiceModel.ServiceHost> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>"
  syntax:
    content: protected virtual void Attach (System.ServiceModel.ServiceHostBase host);
    parameters:
    - id: host
      type: System.ServiceModel.ServiceHostBase
      description: "Il <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> per il servizio."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>host</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;oggetto di comunicazione è in un <xref:System.ServiceModel.CommunicationState>o <xref:System.ServiceModel.CommunicationState>stato o l&quot;host è già impostato.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto di comunicazione è in un <xref:System.ServiceModel.CommunicationState>o <xref:System.ServiceModel.CommunicationState>stato.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "L&quot;oggetto di comunicazione è in un <xref:System.ServiceModel.CommunicationState>stato.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput
  id: CloseInput
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: CloseInput()
  nameWithType: ChannelDispatcherBase.CloseInput()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Quando sottoposto a override in una classe derivata, rimuove i dispatcher dell&quot;endpoint associati al ChannelDispatcher."
  remarks: "<xref:System.ServiceModel.ServiceHost>chiama questo metodo durante l&quot;arresto per dare al dispatcher la possibilità di svuotare i messaggi.</xref:System.ServiceModel.ServiceHost> <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>utilizza questa chiamata per chiudere i canali del datagramma.</xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  syntax:
    content: public virtual void CloseInput ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)
  id: Detach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: Detach(ServiceHostBase)
  nameWithType: ChannelDispatcherBase.Detach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Quando sottoposto a override in una classe derivata, disconnette il ChannelDispatcher da un host specifico."
  remarks: "Il <xref:System.ServiceModel.ServiceHostBase>può solo essere scollegato quando l&quot;istanza del <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>è il <xref:System.ServiceModel.CommunicationState>dello stato, poiché questa è l&quot;unico stato che è modificabile e non è stato eliminato.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher> </xref:System.ServiceModel.ServiceHostBase>       Impostare il <xref:System.ServiceModel.ServiceHostBase>associato al ChannelDispatcher su `null`.</xref:System.ServiceModel.ServiceHostBase>       <xref:System.ServiceModel.ServiceHost>Questo metodo viene chiamato quando il <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>viene rimosso dal relativo <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>insieme.</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase></xref:System.ServiceModel.ServiceHost> In questo modo la <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>possibilità di eseguire l&quot;unhook degli eventi ed esaminare <xref:System.ServiceModel.ServiceHost>.</xref:System.ServiceModel.ServiceHost> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>"
  syntax:
    content: protected virtual void Detach (System.ServiceModel.ServiceHostBase host);
    parameters:
    - id: host
      type: System.ServiceModel.ServiceHostBase
      description: "The <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;></xref>."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>host</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;oggetto di comunicazione è in un <xref:System.ServiceModel.CommunicationState>o <xref:System.ServiceModel.CommunicationState>stato o l&quot;host è già impostato.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto di comunicazione è in un <xref:System.ServiceModel.CommunicationState>o <xref:System.ServiceModel.CommunicationState>stato.</xref:System.ServiceModel.CommunicationState> </xref:System.ServiceModel.CommunicationState>"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "L&quot;oggetto di comunicazione è in un <xref:System.ServiceModel.CommunicationState>stato.</xref:System.ServiceModel.CommunicationState>"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
  id: Host
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: Host
  nameWithType: ChannelDispatcherBase.Host
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Quando sottoposto a override in una classe derivata, ottiene l&quot;host del servizio associato al ChannelDispatcher."
  remarks: "Ogni <xref:System.ServiceModel.ServiceHost>oggetto può avere molti <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>oggetti, ognuno associato con un altro <xref:System.ServiceModel.Channels.IChannelListener>per quel servizio.</xref:System.ServiceModel.Channels.IChannelListener> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher> </xref:System.ServiceModel.ServiceHost> L&quot;host conserva un elenco di tali <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>gli oggetti di <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>insieme.</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> </xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>"
  syntax:
    content: public abstract System.ServiceModel.ServiceHostBase Host { get; }
    return:
      type: System.ServiceModel.ServiceHostBase
      description: "Il <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> per il servizio associato al dispatcher."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
  id: Listener
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: Listener
  nameWithType: ChannelDispatcherBase.Listener
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Quando sottoposto a override in una classe derivata, ottiene il listener del canale associato al ChannelDispatcher."
  remarks: "Oggetto <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>Associa un <xref:System.ServiceModel.Channels.IChannelListener>cui canali e messaggi <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>sta inviando.</xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> </xref:System.ServiceModel.Channels.IChannelListener> </xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  syntax:
    content: public abstract System.ServiceModel.Channels.IChannelListener Listener { get; }
    return:
      type: System.ServiceModel.Channels.IChannelListener
      description: "Il <xref href=&quot;System.ServiceModel.Channels.IChannelListener&quot;> </xref> associato al ChannelDispatcher."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: System.ServiceModel.Channels.CommunicationObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ServiceModel.CommunicationObjectFaultedException
  isExternal: true
  name: System.ServiceModel.CommunicationObjectFaultedException
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: ChannelDispatcherBase()
  nameWithType: ChannelDispatcherBase.ChannelDispatcherBase()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.ChannelDispatcherBase()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Attach(ServiceHostBase)
  nameWithType: ChannelDispatcherBase.Attach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(ServiceHostBase)
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: CloseInput()
  nameWithType: ChannelDispatcherBase.CloseInput()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Detach(ServiceHostBase)
  nameWithType: ChannelDispatcherBase.Detach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(ServiceHostBase)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Host
  nameWithType: ChannelDispatcherBase.Host
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Listener
  nameWithType: ChannelDispatcherBase.Listener
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
- uid: System.ServiceModel.Channels.IChannelListener
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener
  nameWithType: IChannelListener
  fullName: System.ServiceModel.Channels.IChannelListener
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: ChannelDispatcherBase
  nameWithType: ChannelDispatcherBase.ChannelDispatcherBase
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Attach
  nameWithType: ChannelDispatcherBase.Attach
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: CloseInput
  nameWithType: ChannelDispatcherBase.CloseInput
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Detach
  nameWithType: ChannelDispatcherBase.Detach
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Host
  nameWithType: ChannelDispatcherBase.Host
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Listener
  nameWithType: ChannelDispatcherBase.Listener
