### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.RoleService
  id: RoleService
  children:
  - System.Web.ApplicationServices.RoleService.#ctor
  - System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  - System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  - System.Web.ApplicationServices.RoleService.SelectingProvider
  langs:
  - csharp
  name: RoleService
  nameWithType: RoleService
  fullName: System.Web.ApplicationServices.RoleService
  type: Class
  summary: "Consente l&quot;accesso al provider di ruoli ASP.NET come servizio Web WCF."
  remarks: "L&quot;oggetto RoleService consente di leggere i ruoli dell&quot;utente tramite un servizio Windows Communication Foundation (WCF). Per utilizzare il servizio di ruolo, è necessario abilitare il servizio ruolo in un server Web e quindi connettersi a un&quot;applicazione client compatibile con WCF al servizio Web. Per informazioni su come configurare il servizio di ruolo, vedere [procedura: abilitare il servizio ruolo WCF](~/add/includes/ajax-current-ext-md.md).       L&quot;utente deve essere autenticato per leggere i ruoli dell&quot;utente. Il servizio ruolo funziona con qualsiasi tipo di autenticazione ASP.NET. Per informazioni sulle modalità di accesso degli utenti tramite un servizio WCF, vedere [panoramica sulle servizio di autenticazione di Windows Communication Foundation](~/add/includes/ajax-current-ext-md.md).       La classe RoleService espone due metodi che devono essere accessibili solo tramite un servizio WCF: il <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A>(metodo) e <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>metodo.</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> </xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> Il <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A>metodo restituisce tutti i ruoli per l&quot;utente connesso.</xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> Il <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>metodo determina se l&quot;utente è un ruolo specificato.</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>       L&quot;oggetto RoleService genera il <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>evento.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider> Creare un gestore eventi per il <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>evento per selezionare il provider di ruoli da utilizzare in fase di esecuzione.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>       Per un esempio di come utilizzare il servizio ruolo WCF da un&quot;applicazione console, vedere [procedura dettagliata: utilizzando i servizi delle applicazioni ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)]

      [System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")]

      [System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")]

      public class RoleService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.#ctor
  id: '#ctor'
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: RoleService()
  nameWithType: RoleService.RoleService()
  fullName: System.Web.ApplicationServices.RoleService.RoleService()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.ApplicationServices.RoleService&quot;> </xref> classe."
  syntax:
    content: public RoleService ();
    parameters: []
  overload: System.Web.ApplicationServices.RoleService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  id: GetRolesForCurrentUser
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: GetRolesForCurrentUser()
  nameWithType: RoleService.GetRolesForCurrentUser()
  fullName: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Restituisce tutti i ruoli per l&quot;utente connesso."
  remarks: "Il metodo GetRolesForCurrentUser restituisce tutti i ruoli per l&quot;utente. Utilizzare il metodo GetRolesForCurrentUser quando è necessario controllare o mantenere tutti i ruoli dell&quot;utente per determinare quali risorse sono disponibili per l&quot;utente. È possibile utilizzare questo metodo per evitare più chiamate al <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>metodo.</xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A>       La chiamata al metodo GetRolesForCurrentUser genera il <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>evento.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>      > [!NOTE] > Non chiamare il metodo GetRolesForCurrentUser dal codice che è in esecuzione nel server Web. Il metodo GetRolesForCurrentUser solo come parte di un servizio WCF. Per ulteriori informazioni sulla lettura dei ruoli dell&quot;utente nel codice che è in esecuzione nel server Web, vedere il <xref:System.Web.Security.Roles.GetRolesForUser%2A>metodo.</xref:System.Web.Security.Roles.GetRolesForUser%2A>"
  syntax:
    content: public string[] GetRolesForCurrentUser ();
    parameters: []
    return:
      type: System.String[]
      description: "Matrice di nomi di ruoli a cui appartiene l&quot;utente."
  overload: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Gestione dei ruoli non è abilitata."
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  id: IsCurrentUserInRole(System.String)
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: IsCurrentUserInRole(String)
  nameWithType: RoleService.IsCurrentUserInRole(String)
  fullName: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Determina se l&quot;utente connesso appartiene al ruolo specificato."
  remarks: "Il metodo IsCurrentUserInRole controlla se l&quot;utente connesso appartiene al ruolo specificato. Il metodo IsCurrentUserInRole genera il <xref:System.Web.ApplicationServices.RoleService.SelectingProvider>evento.</xref:System.Web.ApplicationServices.RoleService.SelectingProvider>      > [!NOTE] > Non chiamare il metodo IsCurrentUserInRole dal codice che è in esecuzione nel server Web. Il metodo IsCurrentUserInRole solo come parte di un servizio WCF. Per ulteriori informazioni su come controllare se un utente appartiene al gruppo specificato dal codice in esecuzione nel server Web, vedere il <xref:System.Web.Security.Roles.IsUserInRole%2A>metodo.</xref:System.Web.Security.Roles.IsUserInRole%2A>"
  syntax:
    content: public bool IsCurrentUserInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "Il nome del ruolo da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;utente è nel ruolo specificato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>role</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> oppure l&quot;utente non è connesso."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Gestione dei ruoli non è abilitata."
  platform:
  - net462
- uid: System.Web.ApplicationServices.RoleService.SelectingProvider
  id: SelectingProvider
  parent: System.Web.ApplicationServices.RoleService
  langs:
  - csharp
  name: SelectingProvider
  nameWithType: RoleService.SelectingProvider
  fullName: System.Web.ApplicationServices.RoleService.SelectingProvider
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Si verifica quando un <xref href=&quot;System.Web.ApplicationServices.RoleService&quot;> </xref> istanza determina quale provider di ruoli da utilizzare per controllare i ruoli dell&quot;utente."
  remarks: "La <xref:System.Web.ApplicationServices.RoleService>classe genera l&quot;evento SelectingProvider quando determina quale provider di ruoli da utilizzare per recuperare i ruoli dell&quot;utente.</xref:System.Web.ApplicationServices.RoleService> È possibile creare un gestore eventi per l&quot;evento SelectingProvider per selezionare in fase di esecuzione quale provider di ruoli da utilizzare."
  example:
  - "The following example shows how to bind an event handler to the SelectingProvider event in the Global.asax file. The event handler determines at run time which role provider to use, based on the user name.  \n  \n [!code-vb[System.Web.Security.SelectingProviderEventHandler#1](~/add/codesnippet/visualbasic/e-system.web.application_3_1.asax)]\n [!code-cs[System.Web.Security.SelectingProviderEventHandler#1](~/add/codesnippet/csharp/e-system.web.application_3_1.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs> SelectingProvider;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.SelectingProviderEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ApplicationServices.RoleService.#ctor
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: RoleService()
  nameWithType: RoleService.RoleService()
  fullName: System.Web.ApplicationServices.RoleService.RoleService()
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: GetRolesForCurrentUser()
  nameWithType: RoleService.GetRolesForCurrentUser()
  fullName: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: IsCurrentUserInRole(String)
  nameWithType: RoleService.IsCurrentUserInRole(String)
  fullName: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ApplicationServices.RoleService.SelectingProvider
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: SelectingProvider
  nameWithType: RoleService.SelectingProvider
  fullName: System.Web.ApplicationServices.RoleService.SelectingProvider
- uid: System.EventHandler{System.Web.ApplicationServices.SelectingProviderEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SelectingProviderEventArgs>
  nameWithType: EventHandler<SelectingProviderEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.SelectingProviderEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.SelectingProviderEventArgs
    name: SelectingProviderEventArgs
    nameWithType: SelectingProviderEventArgs
    fullName: SelectingProviderEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.RoleService.#ctor*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: RoleService
  nameWithType: RoleService.RoleService
- uid: System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: GetRolesForCurrentUser
  nameWithType: RoleService.GetRolesForCurrentUser
- uid: System.Web.ApplicationServices.RoleService.IsCurrentUserInRole*
  parent: System.Web.ApplicationServices.RoleService
  isExternal: false
  name: IsCurrentUserInRole
  nameWithType: RoleService.IsCurrentUserInRole
