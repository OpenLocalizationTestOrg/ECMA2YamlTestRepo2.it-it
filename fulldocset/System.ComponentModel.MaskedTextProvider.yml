### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.MaskedTextProvider
  id: MaskedTextProvider
  children:
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.Add(System.Char)
  - System.ComponentModel.MaskedTextProvider.Add(System.String)
  - System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  - System.ComponentModel.MaskedTextProvider.AsciiOnly
  - System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  - System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  - System.ComponentModel.MaskedTextProvider.Clear
  - System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Clone
  - System.ComponentModel.MaskedTextProvider.Culture
  - System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  - System.ComponentModel.MaskedTextProvider.EditPositionCount
  - System.ComponentModel.MaskedTextProvider.EditPositions
  - System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  - System.ComponentModel.MaskedTextProvider.IncludeLiterals
  - System.ComponentModel.MaskedTextProvider.IncludePrompt
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.InvalidIndex
  - System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)
  - System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)
  - System.ComponentModel.MaskedTextProvider.IsPassword
  - System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)
  - System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)
  - System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)
  - System.ComponentModel.MaskedTextProvider.Item(System.Int32)
  - System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  - System.ComponentModel.MaskedTextProvider.Length
  - System.ComponentModel.MaskedTextProvider.Mask
  - System.ComponentModel.MaskedTextProvider.MaskCompleted
  - System.ComponentModel.MaskedTextProvider.MaskFull
  - System.ComponentModel.MaskedTextProvider.PasswordChar
  - System.ComponentModel.MaskedTextProvider.PromptChar
  - System.ComponentModel.MaskedTextProvider.Remove
  - System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)
  - System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)
  - System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)
  - System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  - System.ComponentModel.MaskedTextProvider.ResetOnSpace
  - System.ComponentModel.MaskedTextProvider.Set(System.String)
  - System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.SkipLiterals
  - System.ComponentModel.MaskedTextProvider.ToDisplayString
  - System.ComponentModel.MaskedTextProvider.ToString
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  - System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  - System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)
  - System.ComponentModel.MaskedTextProvider.VerifyString(System.String)
  - System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  langs:
  - csharp
  name: MaskedTextProvider
  nameWithType: MaskedTextProvider
  fullName: System.ComponentModel.MaskedTextProvider
  type: Class
  summary: "Rappresenta un servizio di analisi di maschera che può essere utilizzato da qualsiasi numero di controlli che supportano la maschera, ad esempio il <xref href=&quot;System.Windows.Forms.MaskedTextBox&quot;> </xref> controllo."
  remarks: "Il <xref:System.Windows.Forms.MaskedTextBox>controllo contiene una maschera, composto da caratteri letterali e formattazione di elementi, che controlla tutti gli input utente rispetto.</xref:System.Windows.Forms.MaskedTextBox> Anziché associare in modo permanente un motore di analisi di maschera specifico con <xref:System.Windows.Forms.MaskedTextBox>, Windows Form fornisce un servizio separato, rappresentato dalla classe MaskedTextProvider, che definisce la sintassi del linguaggio per la descritto nella documentazione per il <xref:System.Windows.Forms.MaskedTextBox.Mask%2A>proprietà.</xref:System.Windows.Forms.MaskedTextBox.Mask%2A> </xref:System.Windows.Forms.MaskedTextBox>       Numero di membri del <xref:System.Windows.Forms.MaskedTextBox>classe fa riferimento l&quot;implementazione con denominato in modo analogo i membri dell&quot;associato MaskedTextProvider.</xref:System.Windows.Forms.MaskedTextBox> Ad esempio, la <xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=fullName>proprietà di <xref:System.Windows.Forms.MaskedTextBox>classe fa riferimento a tutti gli accessi per <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>classe MaskedTextProvider.</xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> </xref:System.Windows.Forms.MaskedTextBox> </xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=fullName>       Il motore di analisi di maschera utilizzato da MaskedTextProvider viene modellato dopo il controllo MaskedEdit incluso in Microsoft Visual Basic versione 6. Il linguaggio di maschera è descritto nella documentazione per il <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>proprietà.</xref:System.ComponentModel.MaskedTextProvider.Mask%2A>       Le tre diverse stringhe seguenti sono utilizzate con la classe MaskedTextProvider.      | Nome della stringa | Descrizione |   |-----------------|-----------------|   | Carattere o una stringa di input | Rappresenta i caratteri utilizzati come input che viene applicata la maschera di base. In realtà, la stringa di input può essere composta da più operazioni di input, tra cui <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>e <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>.</xref:System.ComponentModel.MaskedTextProvider.Remove%2A> </xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> </xref:System.ComponentModel.MaskedTextProvider.Replace%2A> </xref:System.ComponentModel.MaskedTextProvider.Add%2A> Pertanto, la stringa di input non è possibile accedere direttamente. Tuttavia, aspetti della gestione della stringa di input di sono disponibili tramite il <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>e <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A>e le proprietà <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>. |   | Maschera | Rappresenta l&quot;input maschera utilizzato per trasformare la stringa di input nella stringa formattata di formattazione.</xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A> </xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A> </xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> </xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> Questa stringa viene impostata <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>e vi si accede principalmente tramite il <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>proprietà.</xref:System.ComponentModel.MaskedTextProvider.Mask%2A> </xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> Caratteristiche della maschera sono disponibili anche tramite altri membri, ad esempio <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>e le proprietà <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>. |   | Stringa formattata | Rappresenta la stringa risultante quando viene applicato l&quot;intera maschera alla stringa di input.</xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> </xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> </xref:System.ComponentModel.MaskedTextProvider.Length%2A> La stringa formattata è possibile eseguire query con molti membri della classe, inclusi <xref:System.ComponentModel.MaskedTextProvider.Item%2A>, <xref:System.ComponentModel.MaskedTextProvider.Length%2A>, <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A>, <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>, <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>e così via.</xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A> </xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> </xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A> </xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> </xref:System.ComponentModel.MaskedTextProvider.Length%2A> </xref:System.ComponentModel.MaskedTextProvider.Item%2A> Il valore completo della stringa formattata è disponibile il <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>e i metodi <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>. |      > [!NOTE] > La stringa di input può rappresentare l&quot;input diretto dell&quot;utente, come nel caso del <xref:System.Windows.Forms.MaskedTextBox>, oppure può essere generato da altri processi non direttamente associate a operazioni di input/output dell&quot;utente.</xref:System.Windows.Forms.MaskedTextBox> </xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>"
  syntax:
    content: 'public class MaskedTextProvider : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref> classe mediante la maschera specificata."
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , null, true, '_', '\\0', false)`"
  syntax:
    content: public MaskedTextProvider (string mask);
    parameters:
    - id: mask
      type: System.String
      description: "Oggetto <xref:System.String>che rappresenta la maschera di input.</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref> usando la maschera specificata e il valore di restrizione ASCII."
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , null, true, '_', '\\0', restrictToASCII)`"
  syntax:
    content: public MaskedTextProvider (string mask, bool restrictToAscii);
    parameters:
    - id: mask
      type: System.String
      description: "Oggetto <xref:System.String>che rappresenta la maschera di input.</xref:System.String>"
    - id: restrictToAscii
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per limitare l&quot;input di caratteri ASCII compatibile. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per consentire l&quot;intero set di Unicode."
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)
  id: '#ctor(System.String,System.Globalization.CultureInfo)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref> classe utilizzando le impostazioni cultura maschera specificata."
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , culture, true, '_', '\\0', false)`"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture);
    parameters:
    - id: mask
      type: System.String
      description: "Oggetto <xref:System.String>che rappresenta la maschera di input.</xref:System.String>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Oggetto <xref:System.Globalization.CultureInfo>che viene utilizzato per impostare caratteri separatori di area sensibile.</xref:System.Globalization.CultureInfo>"
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)
  id: '#ctor(System.String,System.Char,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref> classe utilizzando maschera specificata, il carattere della password e il valore di utilizzo della richiesta."
  remarks: "Utilizzo di questo costruttore è esattamente equivalente alla chiamata seguente al <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>costruttore: `MaskedTextProvider(mask , null, allowPromptAsInput, &quot;_&quot;, passwordChar, false)` </xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>"
  syntax:
    content: public MaskedTextProvider (string mask, char passwordChar, bool allowPromptAsInput);
    parameters:
    - id: mask
      type: System.String
      description: "Oggetto <xref:System.String>che rappresenta la maschera di input.</xref:System.String>"
    - id: passwordChar
      type: System.Char
      description: "Oggetto <xref:System.Char>che verranno visualizzati per i caratteri inseriti in una stringa di password.</xref:System.Char>"
    - id: allowPromptAsInput
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per consentire il carattere di prompt dei comandi come input. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)
  id: '#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref> usando la maschera specificata, le impostazioni cultura e il valore di restrizione ASCII."
  remarks: "Use of this constructor is exactly equivalent to the following call to the <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName> constructor:  \n  \n `MaskedTextProvider(mask , culture, true, '_', '\\0', restrictToAscii)`"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool restrictToAscii);
    parameters:
    - id: mask
      type: System.String
      description: "Oggetto <xref:System.String>che rappresenta la maschera di input.</xref:System.String>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Oggetto <xref:System.Globalization.CultureInfo>che viene utilizzato per impostare caratteri separatori di area sensibile.</xref:System.Globalization.CultureInfo>"
    - id: restrictToAscii
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per limitare l&quot;input di caratteri ASCII compatibile. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per consentire l&quot;intero set di Unicode."
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)
  id: '#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref> usando la maschera specificata, delle impostazioni cultura, il carattere della password e il valore di utilizzo della richiesta."
  remarks: "Utilizzo di questo costruttore è esattamente equivalente alla chiamata seguente al <xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>costruttore: `MaskedTextProvider(mask , culture, allowPromptAsInput, &quot;_&quot;, passwordChar, false)` </xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName>"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, char passwordChar, bool allowPromptAsInput);
    parameters:
    - id: mask
      type: System.String
      description: "Oggetto <xref:System.String>che rappresenta la maschera di input.</xref:System.String>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Oggetto <xref:System.Globalization.CultureInfo>che viene utilizzato per impostare caratteri separatori di area sensibile.</xref:System.Globalization.CultureInfo>"
    - id: passwordChar
      type: System.Char
      description: "Oggetto <xref:System.Char>che verranno visualizzati per i caratteri inseriti in una stringa di password.</xref:System.Char>"
    - id: allowPromptAsInput
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per consentire il carattere di prompt dei comandi come input. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)
  id: '#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)'
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref> usando la maschera specificata, delle impostazioni cultura, il valore di utilizzo della richiesta, il carattere di richiesta, carattere della password e il valore di restrizione ASCII."
  remarks: "Questo costruttore rappresenta la forma più generale di overload. Il `mask` parametro deve essere conforme al linguaggio di mascheramento definito dalla <xref:System.ComponentModel.MaskedTextProvider>classe, che è descritta in dettaglio nella <xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=fullName>proprietà di <xref:System.Windows.Forms.MaskedTextBox>classe.</xref:System.Windows.Forms.MaskedTextBox> </xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=fullName> </xref:System.ComponentModel.MaskedTextProvider>       Poiché non è possibile eseguire query su impostazioni cultura per informazioni specifiche delle impostazioni cultura, il <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>costruttore utilizzerà il <xref:System.Globalization.CultureInfo.GetCultures%2A>metodo per cercare le impostazioni cultura non indipendente dal primo da usare per determinare i caratteri separatori appropriati.</xref:System.Globalization.CultureInfo.GetCultures%2A> </xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>"
  syntax:
    content: public MaskedTextProvider (string mask, System.Globalization.CultureInfo culture, bool allowPromptAsInput, char promptChar, char passwordChar, bool restrictToAscii);
    parameters:
    - id: mask
      type: System.String
      description: "Oggetto <xref:System.String>che rappresenta la maschera di input.</xref:System.String>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Oggetto <xref:System.Globalization.CultureInfo>che viene utilizzato per impostare caratteri separatori di area sensibile.</xref:System.Globalization.CultureInfo>"
    - id: allowPromptAsInput
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>valore che specifica se il carattere di richiesta deve essere consentito come carattere di input.</xref:System.Boolean>"
    - id: promptChar
      type: System.Char
      description: "Oggetto <xref:System.Char>che verrà visualizzato come segnaposto per l&quot;input dell&quot;utente.</xref:System.Char>"
    - id: passwordChar
      type: System.Char
      description: "Oggetto <xref:System.Char>che verranno visualizzati per i caratteri inseriti in una stringa di password.</xref:System.Char>"
    - id: restrictToAscii
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per limitare l&quot;input di caratteri ASCII compatibile. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per consentire l&quot;intero set di Unicode."
  overload: System.ComponentModel.MaskedTextProvider.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il parametro di maschera è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o <xref:System.String.Empty>.</xref:System.String.Empty>       - oppure - la maschera contiene uno o più caratteri non stampabili."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char)
  id: Add(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(Char)
  nameWithType: MaskedTextProvider.Add(Char)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Aggiunge il carattere di input specificato alla fine della stringa formattata."
  remarks: "Aggiunge il metodo Add di `input` di caratteri dopo la posizione dell&quot;ultima assegnazione, che è rappresentata dal valore nella prima posizione disponibile nella stringa formattata la <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>proprietà.</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> Questo metodo avrà esito negativo per uno dei seguenti motivi:-il valore di input, `input`, non stampabile, o non corrisponde al relativo elemento della maschera.      -Esistono zero disponibili posizioni di modifica nella stringa formattata, o non si sono verificati disponibili posizioni di modifica dopo l&quot;ultima posizione assegnata."
  syntax:
    content: public bool Add (char input);
    parameters:
    - id: input
      type: System.Char
      description: "Oggetto <xref:System.Char>valore da aggiungere alla stringa formattata.</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il carattere di input è stato aggiunto correttamente. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String)
  id: Add(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(String)
  nameWithType: MaskedTextProvider.Add(String)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Aggiunge i caratteri nella stringa di input specificata alla fine della stringa formattata."
  remarks: "Il metodo Add aggiunge i caratteri compresi tra il `input` stringa alla stringa di formato, a partire da nella prima posizione disponibile dopo <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> Questo metodo avrà esito negativo per uno dei seguenti motivi:-caratteri nel valore di input, `input`, non stampabile o il valore di input non corrisponde al relativo elemento maschera.      -Non sono sufficienti le posizioni di modifica disponibili nella stringa formattata dopo l&quot;ultima posizione assegnata.       Se questo metodo ha esito negativo, le aggiunte non vengono eseguite e il metodo restituisce `false`."
  syntax:
    content: public bool Add (string input);
    parameters:
    - id: input
      type: System.String
      description: "Oggetto <xref:System.String>contenenti valori di carattere da accodare alla stringa formattata.</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se tutti i caratteri dalla stringa di input sono stati aggiunti correttamente. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per indicare che non sono stati aggiunti caratteri."
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Aggiunge il carattere di input specificato alla fine della stringa formattata e quindi restituisce informazioni sulla posizione e descrittive."
  remarks: "Il metodo Add tenta di aggiungere il `input` di caratteri dopo la posizione dell&quot;ultima assegnazione, che è rappresentata dal valore nella prima posizione disponibile nella stringa formattata la <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>proprietà.</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> Questo metodo non riuscirà se tutte le posizioni disponibili prima dell&quot;ultima posizione assegnata. Questo metodo avrà esito negativo per uno dei seguenti motivi:-il valore di input, `input`, non stampabile, o non corrisponde al relativo elemento della maschera.      -Esistono zero disponibili posizioni di modifica nella stringa formattata, o non si sono verificati disponibili posizioni di modifica dopo l&quot;ultima posizione assegnata.       Questo metodo funziona nello stesso modo la versione sottoposta a override con un singolo <xref:System.Char>parametro <xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29>, ad eccezione del fatto che genera informazioni aggiuntive.</xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29> </xref:System.Char>"
  syntax:
    content: public bool Add (char input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "Oggetto <xref:System.Char>valore da aggiungere alla stringa formattata.</xref:System.Char>"
    - id: testPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui è stato tentato di aggiungere il carattere. Un parametro di output."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Oggetto <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> che descrive sinteticamente il risultato dell&quot;operazione. Un parametro di output."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il carattere di input è stato aggiunto correttamente. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Add(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Aggiunge i caratteri nella stringa di input specificata alla fine della stringa formattata e quindi restituisce informazioni sulla posizione e descrittive."
  remarks: "Il metodo Add aggiunge i caratteri compresi tra il `input` stringa alla stringa di formato, a partire da nella prima posizione disponibile dopo <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>.</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A> Questo metodo avrà esito negativo per uno dei seguenti motivi:-caratteri nel valore di input, `input`, non stampabile o il valore di input non corrisponde al relativo elemento maschera.      -Non sono sufficienti le posizioni di modifica disponibili nella stringa formattata dopo l&quot;ultima posizione assegnata.       Se questo metodo ha esito negativo, le aggiunte non vengono eseguite e il metodo restituisce `false`.       Questo metodo funziona nello stesso modo la versione sottoposta a override con un singolo <xref:System.String>parametro <xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29>, ad eccezione del fatto che genera informazioni aggiuntive.</xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29> </xref:System.String>"
  syntax:
    content: public bool Add (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "Oggetto <xref:System.String>contenenti valori di carattere da accodare alla stringa formattata.</xref:System.String>"
    - id: testPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui è stato tentato di aggiungere il carattere. Un parametro di output."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Oggetto <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> che descrive sinteticamente il risultato dell&quot;operazione. Un parametro di output."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se tutti i caratteri dalla stringa di input sono stati aggiunti correttamente. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per indicare che non sono stati aggiunti caratteri."
  overload: System.ComponentModel.MaskedTextProvider.Add*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  id: AllowPromptAsInput
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AllowPromptAsInput
  nameWithType: MaskedTextProvider.AllowPromptAsInput
  fullName: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene un valore che indica se il carattere di richiesta deve essere trattato come un carattere di input valido o non."
  remarks: "Il valore della proprietà AllowPromptAsInput è impostato nel <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>costruttore.</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>       Anche se è AllowPromptAsInput `true`, il carattere di richiesta deve essere valido per la posizione corrente nella maschera per essere accettate."
  syntax:
    content: public bool AllowPromptAsInput { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;utente può immettere <xref:System.ComponentModel.MaskedTextProvider.PromptChar*>nel controllo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.MaskedTextProvider.PromptChar*> Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AsciiOnly
  id: AsciiOnly
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AsciiOnly
  nameWithType: MaskedTextProvider.AsciiOnly
  fullName: System.ComponentModel.MaskedTextProvider.AsciiOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene un valore che indica se la maschera accetta caratteri di fuori di set di caratteri ASCII."
  remarks: "Il valore della proprietà AsciiOnly è impostato nel <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>costruttore.</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>       Se `true`, AsciiOnly limita l&quot;input dell&quot;utente per il set di caratteri ASCII."
  syntax:
    content: public bool AsciiOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se solo ASCII è accettata. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref> può accettare qualsiasi carattere Unicode arbitrario. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.AsciiOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  id: AssignedEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AssignedEditPositionCount
  nameWithType: MaskedTextProvider.AssignedEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il numero di posizioni dei caratteri modificabile che è già stato assegnato un valore di input."
  remarks: "Il numero totale di posizioni dei caratteri modificabili, rappresentato dal <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>proprietà, deve essere uguale alla somma di AssignedEditPositionCount e <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A>proprietà.</xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> </xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>"
  syntax:
    content: public int AssignedEditPositionCount { get; }
    return:
      type: System.Int32
      description: "Un <xref:System.Int32>contenente il numero di posizioni dei caratteri modificabili nella maschera di input di cui è già stato assegnato un valore del carattere nella stringa formattata.</xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  id: AvailableEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: AvailableEditPositionCount
  nameWithType: MaskedTextProvider.AvailableEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il numero di posizioni dei caratteri modificabili nella maschera di input di cui non è ancora stato assegnato un valore di input."
  remarks: "Il numero totale di posizioni dei caratteri modificabili, rappresentato dal <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>proprietà, deve essere uguale alla somma di <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A>e le proprietà AvailableEditPositionCount.</xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> </xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>"
  syntax:
    content: public int AvailableEditPositionCount { get; }
    return:
      type: System.Int32
      description: "Un <xref:System.Int32>contenente il numero di caratteri modificabili posizioni che non è ancora stato assegnato un valore del carattere.</xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Clear
  id: Clear
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Clear()
  nameWithType: MaskedTextProvider.Clear()
  fullName: System.ComponentModel.MaskedTextProvider.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Cancella tutti i caratteri di input modificabili dalla stringa formattata, sostituirli con caratteri di prompt."
  remarks: "Il metodo Clear reinizializza la stringa formattata, inserendo il carattere di prompt dei comandi in tutte le posizioni modificabili."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.ComponentModel.MaskedTextProvider.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)
  id: Clear(System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Clear(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Clear(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Clear(MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Cancella tutti i caratteri di input modificabili dalla stringa formattata, sostituirli con caratteri di prompt dei comandi e quindi restituisce informazioni descrittive."
  remarks: "Il metodo Clear reinizializza la stringa formattata, inserendo il carattere di prompt dei comandi in tutte le posizioni modificabili. Funziona analogamente alla versione sottoposta a override che non accetta parametri, <xref:System.ComponentModel.MaskedTextProvider.Clear>, ad eccezione del fatto che genera informazioni aggiuntive.</xref:System.ComponentModel.MaskedTextProvider.Clear>"
  syntax:
    content: public void Clear (out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Oggetto <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> che descrive sinteticamente il risultato dell&quot;operazione. Un parametro di output."
  overload: System.ComponentModel.MaskedTextProvider.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Clone
  id: Clone
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Clone()
  nameWithType: MaskedTextProvider.Clone()
  fullName: System.ComponentModel.MaskedTextProvider.Clone()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Crea una copia dell&quot;oggetto corrente <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref>."
  remarks: "Il metodo Clone restituisce una nuova copia dell&quot;oggetto corrente <xref:System.ComponentModel.MaskedTextProvider>.</xref:System.ComponentModel.MaskedTextProvider>"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Il <xref href=&quot;System.ComponentModel.MaskedTextProvider&quot;> </xref> oggetto creato da questo metodo, di cui è stato eseguito il cast come oggetto."
  overload: System.ComponentModel.MaskedTextProvider.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Culture
  id: Culture
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Culture
  nameWithType: MaskedTextProvider.Culture
  fullName: System.ComponentModel.MaskedTextProvider.Culture
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene le impostazioni cultura che determina il valore di segnaposto nella maschera di input e dei separatori localizzabili."
  remarks: "La proprietà è impostata <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>costruttore.</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>"
  syntax:
    content: public System.Globalization.CultureInfo Culture { get; }
    return:
      type: System.Globalization.CultureInfo
      description: "Oggetto <xref:System.Globalization.CultureInfo>contenente le informazioni sulla lingua associate a una maschera di input.</xref:System.Globalization.CultureInfo>"
  overload: System.ComponentModel.MaskedTextProvider.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  id: DefaultPasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: DefaultPasswordChar
  nameWithType: MaskedTextProvider.DefaultPasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene predefinito password carattere utilizzato oscuri input dell&quot;utente."
  remarks: "La proprietà DefaultPasswordChar è definita nel <xref:System.ComponentModel.MaskedTextProvider>classe sia il carattere asterisco (*).</xref:System.ComponentModel.MaskedTextProvider>"
  syntax:
    content: public static char DefaultPasswordChar { get; }
    return:
      type: System.Char
      description: "Oggetto <xref:System.Char>che rappresenta il carattere predefinito della password.</xref:System.Char>"
  overload: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.EditPositionCount
  id: EditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: EditPositionCount
  nameWithType: MaskedTextProvider.EditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.EditPositionCount
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il numero di posizioni modificabili nella stringa formattata."
  remarks: "Il numero totale di posizioni dei caratteri modificabili, rappresentato dalla proprietà EditPositionCount, deve essere uguale alla somma di <xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A>e <xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A>proprietà.</xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A> </xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A> Questo valore include sia la richiesta che i caratteri modificabili facoltativi."
  syntax:
    content: public int EditPositionCount { get; }
    return:
      type: System.Int32
      description: "Un <xref:System.Int32>contenente il numero di posizioni modificabili nella stringa formattata.</xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.EditPositionCount*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.EditPositions
  id: EditPositions
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: EditPositions
  nameWithType: MaskedTextProvider.EditPositions
  fullName: System.ComponentModel.MaskedTextProvider.EditPositions
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene un enumeratore appena creato per le posizioni modificabili nella stringa formattata."
  remarks: "Ogni accesso della proprietà EditPositions, viene creata una raccolta temporanea di posizioni modificabili recuperato <xref:System.Collections.IEnumerator>opera su.</xref:System.Collections.IEnumerator>       Questa raccolta è di sola lettura."
  syntax:
    content: public System.Collections.IEnumerator EditPositions { get; }
    return:
      type: System.Collections.IEnumerator
      description: "Un <xref:System.Collections.IEnumerator>che supporta l&quot;enumerazione delle posizioni modificabili nella stringa formattata.</xref:System.Collections.IEnumerator>"
  overload: System.ComponentModel.MaskedTextProvider.EditPositions*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  id: FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindAssignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce la posizione della prima posizione modificabile assegnata alla posizione specificata utilizzando la direzione di ricerca specificati."
  remarks: "La stringa formattata è costituita da caratteri modificabili e valori letterali copiati dalla maschera. Le posizioni dei caratteri modificabili saranno occupate dal carattere di richiesta copiato dalla maschera in tal caso non assegnati o con un carattere di input valido, se sono stati assegnati a un input.       Il metodo FindAssignedEditPositionFrom viene utilizzato per la ricerca del primo carattere assegnato dopo una direzione di ricerca e posizione specificata. Il risultato può successivamente essere passato come parametro per il <xref:System.ComponentModel.MaskedTextProvider.Item%2A>indicizzatore per ottenere il valore assegnato in questa posizione.</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       Il <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>e <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A>metodi sono complementari di questo metodo.</xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A> </xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>"
  syntax:
    content: public int FindAssignedEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata per avviare la ricerca."
    - id: direction
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>che indica la ricerca; direzione <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> per eseguire la ricerca o <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per la ricerca all&quot;indietro.</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "Se ha esito positivo, un <xref:System.Int32>che rappresenta la posizione in base zero della prima posizione modificabile assegnata individuata; in caso contrario <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce la posizione del primo assegnato posizione modificabile tra le posizioni specificate utilizzando la direzione di ricerca specificati."
  remarks: "La stringa formattata è costituita da caratteri modificabili e valori letterali copiati dalla maschera. Le posizioni dei caratteri modificabili saranno occupate dal carattere di richiesta copiato dalla maschera in tal caso non assegnati o con un carattere di input valido, se sono stati assegnati a un input.       Il metodo FindAssignedEditPositionInRange viene utilizzato per la ricerca del primo carattere assegnato compreso tra due posizioni specificate, utilizzando la direzione di ricerca specificati. Il risultato può successivamente essere passato come parametro per il <xref:System.ComponentModel.MaskedTextProvider.Item%2A>indicizzatore per ottenere il valore assegnato in questa posizione.</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       Il <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>e <xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A>metodi sono complementari di questo metodo.</xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A> </xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>"
  syntax:
    content: public int FindAssignedEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui inizia la ricerca."
    - id: endPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui termina la ricerca."
    - id: direction
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>che indica la ricerca; direzione <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> per eseguire la ricerca o <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per la ricerca all&quot;indietro.</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "Se ha esito positivo, un <xref:System.Int32>che rappresenta la posizione in base zero della prima posizione modificabile assegnata individuata; in caso contrario <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)
  id: FindEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce la posizione della prima posizione modificabile dopo la posizione specificata utilizzando la direzione di ricerca specificati."
  remarks: "Il metodo FindEditPositionFrom viene utilizzato per la ricerca assegnata o non assegnata modificabile posizione successiva nella stringa formattata nella posizione specificata.       Il <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>metodo rappresenta il complemento di questo metodo.</xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>"
  syntax:
    content: public int FindEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata per avviare la ricerca."
    - id: direction
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>che indica la ricerca; direzione <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> per eseguire la ricerca o <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per la ricerca all&quot;indietro.</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "Se ha esito positivo, un <xref:System.Int32>che rappresenta la posizione in base zero della prima posizione modificabile incontrata; in caso contrario <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce la posizione della prima posizione modificabile tra le posizioni specificate utilizzando la direzione di ricerca specificati."
  remarks: "Il metodo FindEditPositionInRange viene utilizzato per la ricerca del primo carattere modificabile compreso tra due posizioni specificate, utilizzando la direzione di ricerca specificati. Il risultato può successivamente essere passato come parametro per il <xref:System.ComponentModel.MaskedTextProvider.Item%2A>indicizzatore per ottenere il valore assegnato in questa posizione.</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       Il <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>metodo rappresenta il complemento di questo metodo.</xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>"
  syntax:
    content: public int FindEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui inizia la ricerca."
    - id: endPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui termina la ricerca."
    - id: direction
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>che indica la ricerca; direzione <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> per eseguire la ricerca o <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per la ricerca all&quot;indietro.</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "Se ha esito positivo, un <xref:System.Int32>che rappresenta la posizione in base zero della prima posizione modificabile incontrata; in caso contrario <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)
  id: FindNonEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindNonEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce la posizione della prima posizione non è modificabile dopo la posizione specificata utilizzando la direzione di ricerca specificati."
  remarks: "Il metodo FindNonEditPositionFrom viene utilizzato per cercare il carattere successivo nella stringa formattata alla posizione specificata. Il risultato può successivamente essere passato come parametro per il <xref:System.ComponentModel.MaskedTextProvider.Item%2A>indicizzatore per ottenere il valore letterale in questa posizione.</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       Il <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>metodo rappresenta il complemento di questo metodo.</xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A>"
  syntax:
    content: public int FindNonEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata per avviare la ricerca."
    - id: direction
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>che indica la ricerca; direzione <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> per eseguire la ricerca o <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per la ricerca all&quot;indietro.</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "Se ha esito positivo, un <xref:System.Int32>che rappresenta la posizione in base zero della prima posizione letterale incontrata; in caso contrario <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindNonEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce la posizione della prima posizione non modificabile tra le posizioni specificate utilizzando la direzione di ricerca specificati."
  remarks: "Il metodo FindNonEditPositionInRange viene utilizzato per la ricerca del primo carattere letterale tra due posizioni specificate, inclusi, con la direzione di ricerca specificato. Il risultato può successivamente essere passato come parametro per il <xref:System.ComponentModel.MaskedTextProvider.Item%2A>indicizzatore per ottenere il valore letterale in questa posizione.</xref:System.ComponentModel.MaskedTextProvider.Item%2A>       Il <xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A>metodo rappresenta il complemento di questo metodo.</xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A>"
  syntax:
    content: public int FindNonEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui inizia la ricerca."
    - id: endPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui termina la ricerca."
    - id: direction
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>che indica la ricerca; direzione <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> per eseguire la ricerca o <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per la ricerca all&quot;indietro.</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "Se ha esito positivo, un <xref:System.Int32>che rappresenta la posizione in base zero della prima posizione letterale incontrata; in caso contrario <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  id: FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindUnassignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce la posizione della prima posizione modificabile non assegnata alla posizione specificata utilizzando la direzione di ricerca specificati."
  remarks: "La stringa formattata è costituita da caratteri modificabili e valori letterali copiati dalla maschera. Le posizioni dei caratteri modificabili saranno occupate dal carattere di richiesta copiato dalla maschera in tal caso non assegnati o con un carattere di input valido, se sono stati assegnati a un input.       Il metodo FindUnassignedEditPositionFrom viene utilizzato per cercare il primo carattere non assegnato dopo una direzione di ricerca e posizione specificata. Il carattere di richiesta deve occupare questa posizione.       Il <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>e <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A>metodi sono complementari di questo metodo.</xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A> </xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A>"
  syntax:
    content: public int FindUnassignedEditPositionFrom (int position, bool direction);
    parameters:
    - id: position
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata per avviare la ricerca."
    - id: direction
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>che indica la ricerca; direzione <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> per eseguire la ricerca o <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per la ricerca all&quot;indietro.</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "Se ha esito positivo, un <xref:System.Int32>che rappresenta la posizione in base zero della prima posizione modificabile non assegnata rilevata; in caso contrario <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  id: FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce la posizione della prima posizione modificabile non assegnata tra le posizioni specificate utilizzando la direzione di ricerca specificati."
  remarks: "La stringa formattata è costituita da caratteri modificabili e valori letterali copiati dalla maschera. Le posizioni dei caratteri modificabili saranno occupate dal carattere di richiesta copiato dalla maschera in tal caso non assegnati o con un carattere di input valido, se sono stati assegnati a un input.       Il metodo FindUnassignedEditPositionInRange viene utilizzato per la ricerca del primo carattere non assegnato tra due posizioni specificate, utilizzando la direzione di ricerca specificati. Il carattere di richiesta deve occupare questa posizione.       Il <xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>e <xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A>metodi sono complementari di questo metodo.</xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A> </xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A>"
  syntax:
    content: public int FindUnassignedEditPositionInRange (int startPosition, int endPosition, bool direction);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui inizia la ricerca."
    - id: endPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui termina la ricerca."
    - id: direction
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>che indica la ricerca; direzione <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> per eseguire la ricerca o <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per la ricerca all&quot;indietro.</xref:System.Boolean>"
    return:
      type: System.Int32
      description: "Se ha esito positivo, un <xref:System.Int32>che rappresenta la posizione in base zero della prima posizione modificabile non assegnata rilevata; in caso contrario <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  id: GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: GetOperationResultFromHint(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Determina se l&quot;oggetto specificato <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> indica l&quot;esito positivo o negativo."
  remarks: 'I metodi seguenti della <xref:System.ComponentModel.MaskedTextProvider>classe contiene un parametro di tipo <xref:System.ComponentModel.MaskedTextResultHint>utilizzato per restituire informazioni relative all&quot;operazione del metodo: <xref:System.ComponentModel.MaskedTextProvider.Add%2A>, <xref:System.ComponentModel.MaskedTextProvider.Clear%2A>, <xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>, <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>, <xref:System.ComponentModel.MaskedTextProvider.Replace%2A>, <xref:System.ComponentModel.MaskedTextProvider.Set%2A>, <xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A>e <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>.</xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> </xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A> </xref:System.ComponentModel.MaskedTextProvider.Set%2A> </xref:System.ComponentModel.MaskedTextProvider.Replace%2A> </xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> </xref:System.ComponentModel.MaskedTextProvider.Remove%2A> </xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A> </xref:System.ComponentModel.MaskedTextProvider.Clear%2A> </xref:System.ComponentModel.MaskedTextProvider.Add%2A> </xref:System.ComponentModel.MaskedTextResultHint> </xref:System.ComponentModel.MaskedTextProvider> Il metodo GetOperationResultFromHint interpreta questo valore e restituisce un valore booleano che indica se il <xref:System.ComponentModel.MaskedTextResultHint>ha segnalato che l&quot;operazione di esito positivo o negativo.</xref:System.ComponentModel.MaskedTextResultHint>'
  syntax:
    content: public static bool GetOperationResultFromHint (System.ComponentModel.MaskedTextResultHint hint);
    parameters:
    - id: hint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Oggetto <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> valore ottenuto in genere come parametro di output di un&quot;operazione precedente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto specificato <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> valore indica esito positivo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se rappresenta un errore."
  overload: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IncludeLiterals
  id: IncludeLiterals
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IncludeLiterals
  nameWithType: MaskedTextProvider.IncludeLiterals
  fullName: System.ComponentModel.MaskedTextProvider.IncludeLiterals
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene o imposta un valore che indica se i caratteri letterali nella maschera di input devono essere incluso nella stringa formattata."
  remarks: "Il <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>e IncludeLiterals determinano se i caratteri letterali e di prompt vengono visualizzati quando si chiama il <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>metodo.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> Se si impostano entrambe queste proprietà per `false`, la stringa analizzata rappresenterà solo i caratteri immessi dall&quot;utente."
  syntax:
    content: public bool IncludeLiterals { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i valori letterali sono inclusi. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.IncludeLiterals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IncludePrompt
  id: IncludePrompt
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IncludePrompt
  nameWithType: MaskedTextProvider.IncludePrompt
  fullName: System.ComponentModel.MaskedTextProvider.IncludePrompt
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene o imposta un valore che indica se <xref:System.Windows.Forms.MaskedTextBox.PromptChar*>viene utilizzata per rappresentare l&quot;assenza di input dell&quot;utente quando la visualizzazione della stringa formattata.</xref:System.Windows.Forms.MaskedTextBox.PromptChar*>"
  remarks: "Il IncludePrompt e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>determinano se i caratteri letterali e dei messaggi di richiesta vengono visualizzati quando si chiama il <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>metodo.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> Se si impostano entrambe queste proprietà per `false`, la stringa analizzata rappresenterà solo i caratteri immessi dall&quot;utente."
  syntax:
    content: public bool IncludePrompt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il carattere di richiesta viene utilizzato per rappresentare le posizioni in cui è stato fornito alcun input dell&quot;utente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.IncludePrompt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)
  id: InsertAt(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(Char,Int32)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inserisce il carattere specificato in corrispondenza della posizione specificata all&quot;interno della stringa formattata."
  remarks: "Il metodo InsertAt inserisce un carattere nella prima posizione di modifica a o successiva a quella specificata per il `pos` parametro. Questo metodo verrà spostato tutti i caratteri esistenti dopo il punto di inserimento una posizione per consentire l&quot;utilizzo di inserted `input` carattere. Se si verifica uno dei seguenti errori, l&quot;inserimento non viene eseguito e il metodo restituisce `false`.      -La `pos` parametro è minore di zero o maggiore di <xref:System.ComponentModel.MaskedTextProvider.Length%2A>della stringa formattata.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Un carattere modificabile non è stato trovato nella stringa formattata corrispondente o successiva a quella specificata, `pos`.      -Il carattere di inserimento, `input`, non è un carattere di input valido perché non stampabile o non corrisponde al relativo elemento della maschera.      -Non sono disponibili posizioni a destra del punto di inserimento, in modo che non è possibile spostare i caratteri esistenti.      -Lo spostamento di caratteri esistenti produrrebbe una violazione della maschera.       Un oggetto vuoto `input` stringa non produrrà alcuna modifica nell&quot;oggetto formattato stringa, ma restituirà `true`."
  syntax:
    content: public bool InsertAt (char input, int position);
    parameters:
    - id: input
      type: System.Char
      description: "Il <xref:System.Char>da inserire.</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata per inserire il carattere."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;inserimento ha avuto esito positivo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)
  id: InsertAt(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(String,Int32)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inserisce la stringa specificata in una posizione specificata all&quot;interno della stringa formattata."
  remarks: "Il metodo InsertAt inserisce ciascun carattere di `input` stringa nelle posizioni di modifica si trova nella posizione `pos` e oltre. Questo metodo verrà spostato tutti i caratteri esistenti dopo il punto di inserimento di una posizione per ogni carattere inserito. Se si verifica uno dei seguenti errori inserimento non viene eseguito e il metodo restituisce `false`.      -La `pos` parametro è minore di zero o maggiore di <xref:System.ComponentModel.MaskedTextProvider.Length%2A>della stringa formattata.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Esistono non è sufficiente caratteri modificabili nella stringa formattata corrispondente o successiva a quella specificata, `pos`, per tutti i caratteri da inserire il `input` stringa.      -Uno o più caratteri di inserimento non sono un carattere di input valido perché non sono stampabili o del corrispondente elemento maschera non corrispondono.      -Non sono sufficientemente disponibili posizioni a destra del punto di inserimento, in modo che non è possibile spostare i caratteri esistenti.      -Lo spostamento di caratteri esistenti produrrebbe una violazione della maschera. Si noti che questo passaggio si verifica durante l&quot;inserimento di ogni singolo carattere.       Un oggetto vuoto `input` stringa non produrrà alcuna modifica nell&quot;oggetto formattato stringa, ma restituirà `true`."
  syntax:
    content: public bool InsertAt (string input, int position);
    parameters:
    - id: input
      type: System.String
      description: "Il <xref:System.String>da inserire.</xref:System.String>"
    - id: position
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata per inserire la stringa di input."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;inserimento ha avuto esito positivo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inserisce il carattere specificato in corrispondenza della posizione specificata all&quot;interno della stringa formattata, restituendo l&quot;ultima posizione di inserimento e lo stato dell&quot;operazione."
  remarks: "Il metodo InsertAt inserisce un carattere nella prima posizione di modifica a o successiva a quella specificata per il `pos` parametro. Questo metodo verrà spostato tutti i caratteri esistenti dopo il punto di inserimento una posizione per consentire l&quot;utilizzo di inserted `input` carattere. Se si verifica uno dei seguenti errori, l&quot;inserimento non viene eseguito e il metodo restituisce `false`.      -La `pos` parametro è minore di zero o maggiore di <xref:System.ComponentModel.MaskedTextProvider.Length%2A>della stringa formattata.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Un carattere modificabile non è stato trovato nella stringa formattata corrispondente o successiva a quella specificata, `pos`.      -Il carattere di inserimento, `input`, non è un carattere di input valido perché non stampabile o non corrisponde al relativo elemento della maschera.      -Non sono disponibili posizioni a destra del punto di inserimento, in modo che non è possibile spostare i caratteri esistenti.      -Lo spostamento di caratteri esistenti produrrebbe una violazione della maschera.       Un oggetto vuoto `input` stringa non produrrà alcuna modifica nell&quot;oggetto formattato stringa, ma restituirà `true`."
  syntax:
    content: public bool InsertAt (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "Il <xref:System.Char>da inserire.</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata per inserire il carattere."
    - id: testPosition
      type: System.Int32
      description: "Se il metodo ha esito positivo, l&quot;ultima posizione in cui è stato inserito un carattere; in caso contrario, la prima posizione in cui l&quot;inserimento ha esito negativo. Un parametro di output."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Oggetto <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> che descrive sinteticamente il risultato dell&quot;operazione di inserimento. Un parametro di output."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;inserimento ha avuto esito positivo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InsertAt(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inserisce la stringa specificata in una posizione specificata all&quot;interno della stringa formattata, restituendo l&quot;ultima posizione di inserimento e lo stato dell&quot;operazione."
  remarks: "Il metodo InsertAt inserisce ciascun carattere di `input` stringa nelle posizioni di modifica si trova nella posizione `pos` e oltre. Questo metodo verrà spostato tutti i caratteri esistenti dopo il punto di inserimento di una posizione per ogni carattere inserito. Se si verifica uno dei seguenti errori inserimento non viene eseguito e il metodo restituisce `false`.      -La `pos` parametro è minore di zero o maggiore di <xref:System.ComponentModel.MaskedTextProvider.Length%2A>della stringa formattata.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Esistono non è sufficiente caratteri modificabili nella stringa formattata corrispondente o successiva a quella specificata, `pos`, per tutti i caratteri da inserire il `input` stringa.      -Uno o più caratteri di inserimento non sono un carattere di input valido perché non sono stampabili o del corrispondente elemento maschera non corrispondono.      -Non sono sufficientemente disponibili posizioni a destra del punto di inserimento, in modo che non è possibile spostare i caratteri esistenti.      -Lo spostamento di caratteri esistenti produrrebbe una violazione della maschera. Si noti che questo passaggio si verifica durante l&quot;inserimento di ogni singolo carattere.       Un oggetto vuoto `input` stringa non produrrà alcuna modifica nell&quot;oggetto formattato stringa, ma restituirà `true`."
  syntax:
    content: public bool InsertAt (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "Il <xref:System.String>da inserire.</xref:System.String>"
    - id: position
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata per inserire la stringa di input."
    - id: testPosition
      type: System.Int32
      description: "Se il metodo ha esito positivo, l&quot;ultima posizione in cui è stato inserito un carattere; in caso contrario, la prima posizione in cui l&quot;inserimento ha esito negativo. Un parametro di output."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Oggetto <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> che descrive sinteticamente il risultato dell&quot;operazione di inserimento. Un parametro di output."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;inserimento ha avuto esito positivo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.InsertAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.InvalidIndex
  id: InvalidIndex
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: InvalidIndex
  nameWithType: MaskedTextProvider.InvalidIndex
  fullName: System.ComponentModel.MaskedTextProvider.InvalidIndex
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il limite superiore dell&quot;intervallo di indici non validi."
  remarks: "La proprietà InvalidIndex viene utilizzata per rappresentare un risultato che non è valido per le operazioni di indicizzazione, ad esempio il <xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>metodo.</xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A>       Quando si utilizza il provider o implementare soluzioni personalizzate, utilizzare questa proprietà per stabilire se un indice è non valido, anziché a livello di codice i valori non validi."
  syntax:
    content: public static int InvalidIndex { get; }
    return:
      type: System.Int32
      description: "Un valore che rappresenta l&quot;indice più grande non valido, come determinato dall&quot;implementazione del provider. Ad esempio, se l&quot;indice più basso valido è 0, questa proprietà restituirà -1."
  overload: System.ComponentModel.MaskedTextProvider.InvalidIndex*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)
  id: IsAvailablePosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsAvailablePosition(Int32)
  nameWithType: MaskedTextProvider.IsAvailablePosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Determina se è disponibile per l&quot;assegnazione della posizione specificata."
  remarks: "Restituisce il metodo IsAvailablePosition `true` solo se sono vere tutte le condizioni seguenti: - il `pos` parametro all&quot;interno della stringa formattata, il relativo valore è maggiore o uguale a zero e minore rispetto al <xref:System.ComponentModel.MaskedTextProvider.Length%2A>della stringa formattata.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -La posizione specificata è un carattere modificabile.      -Un carattere non è già stato assegnato a questa posizione."
  syntax:
    content: public bool IsAvailablePosition (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "Posizione in base zero nella maschera per eseguire il test."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la posizione specificata nella stringa formattata è modificabile e non è stata assegnata a. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.IsAvailablePosition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)
  id: IsEditPosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsEditPosition(Int32)
  nameWithType: MaskedTextProvider.IsEditPosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsEditPosition(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Determina se la posizione specificata è modificabile."
  remarks: "Restituisce il metodo IsEditPosition `true` solo se si verificano entrambe le condizioni seguenti: - il `pos` parametro all&quot;interno della stringa formattata, il relativo valore è maggiore o uguale a zero e minore rispetto al <xref:System.ComponentModel.MaskedTextProvider.Length%2A>della stringa formattata.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -La posizione specificata è un carattere modificabile."
  syntax:
    content: public bool IsEditPosition (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "Posizione in base zero nella maschera per eseguire il test."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la posizione specificata nella stringa formattata è modificabile. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.IsEditPosition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsPassword
  id: IsPassword
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsPassword
  nameWithType: MaskedTextProvider.IsPassword
  fullName: System.ComponentModel.MaskedTextProvider.IsPassword
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene o imposta un valore che determina se la password di protezione deve essere applicata per la stringa formattata."
  remarks: "Protezione con password può essere avviata utilizzando uno dei seguenti due modi:: impostazione di <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>proprietà da un non -`null` valore.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      -Impostare la proprietà IsPassword su `true`., che imposta inoltre il <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>proprietà per il <xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A>valore.</xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A> </xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>       IsPassword viene usato dai <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>metodi</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> e per determinare se i caratteri di input effettivi debbano essere visualizzati o nascosti con <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> </xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>"
  syntax:
    content: public bool IsPassword { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la stringa di input deve essere considerato come una stringa di password. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.IsPassword*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)
  id: IsValidInputChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsValidInputChar(Char)
  nameWithType: MaskedTextProvider.IsValidInputChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidInputChar(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Determina se il carattere specificato è un carattere di input valido."
  remarks: "Caratteri di input validi includono tutti i caratteri stampabili, quali lettere, cifre, punteggiatura, simboli e il carattere spazio."
  syntax:
    content: public static bool IsValidInputChar (char c);
    parameters:
    - id: c
      type: System.Char
      description: "Il <xref:System.Char>valore da testare.</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il carattere specificato contiene un valore di input valido. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.IsValidInputChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)
  id: IsValidMaskChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsValidMaskChar(Char)
  nameWithType: MaskedTextProvider.IsValidMaskChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Determina se il carattere specificato è un carattere valido."
  remarks: "Caratteri della maschera validi includono tutti i caratteri stampabili, quali lettere, cifre, punteggiatura, simboli e il carattere spazio."
  syntax:
    content: public static bool IsValidMaskChar (char c);
    parameters:
    - id: c
      type: System.Char
      description: "Il <xref:System.Char>valore da testare.</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il carattere specificato contiene un valore di maschera valido. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.IsValidMaskChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)
  id: IsValidPasswordChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: IsValidPasswordChar(Char)
  nameWithType: MaskedTextProvider.IsValidPasswordChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(Char)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Determina se il carattere specificato è un carattere valido della password."
  remarks: "Caratteri della password validi includono tutti i caratteri stampabili e il carattere null, che consente di disabilitare la funzionalità di password. Caratteri stampabili includono lettere, cifre, punteggiatura, simboli e il carattere spazio."
  syntax:
    content: public static bool IsValidPasswordChar (char c);
    parameters:
    - id: c
      type: System.Char
      description: "Il <xref:System.Char>valore da testare.</xref:System.Char>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il carattere specificato contiene un valore di password valida. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: MaskedTextProvider.Item(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene l&quot;elemento in corrispondenza della posizione specificata nella stringa formattata."
  remarks: "La proprietà dell&quot;elemento è l&quot;indicizzatore standard per la <xref:System.ComponentModel.MaskedTextProvider>classe.</xref:System.ComponentModel.MaskedTextProvider>"
  syntax:
    content: public char this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Un indice in base zero dell&quot;elemento da recuperare."
    return:
      type: System.Char
      description: "Il <xref:System.Char>in corrispondenza della posizione specificata nella stringa formattata.</xref:System.Char>"
  overload: System.ComponentModel.MaskedTextProvider.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code>è minore di zero o maggiore di o uguale al <xref:System.ComponentModel.MaskedTextProvider.Length*> della maschera."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  id: LastAssignedPosition
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: LastAssignedPosition
  nameWithType: MaskedTextProvider.LastAssignedPosition
  fullName: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene l&quot;indice nella maschera del carattere di input all&quot;estrema destra è stato assegnato alla maschera."
  remarks: "La proprietà LastAssignedPosition rappresenta la posizione di modifica più lontana nella maschera di origine, che è stato assegnato un carattere di input. Per le lingue con lettura da sinistra a destra (LTR), ad esempio inglese, si tratta di più a destra assegnato posizione. per le lingue di lettura da destra a sinistra (RTL), sarebbe la posizione più a sinistra."
  syntax:
    content: public int LastAssignedPosition { get; }
    return:
      type: System.Int32
      description: "Se almeno un carattere di input è stato assegnato alla maschera, una <xref:System.Int32>contenente l&quot;indice della posizione assegnata a destra; in caso contrario, se nessuna posizione è stato assegnato, <xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*>.</xref:System.ComponentModel.MaskedTextProvider.InvalidIndex*> </xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.LastAssignedPosition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Length
  id: Length
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Length
  nameWithType: MaskedTextProvider.Length
  fullName: System.ComponentModel.MaskedTextProvider.Length
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene la lunghezza della maschera, assente qualsiasi maschera caratteri modificatore."
  remarks: "La proprietà di durata rappresenta il numero totale di caratteri nella maschera, inclusi i caratteri letterali e modificabili. Il numero di caratteri letterali può essere determinato sottraendo il valore del <xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>dalla lunghezza.</xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A>       Lunghezza descrive anche la lunghezza della stringa formattata, inclusi i caratteri di input, valori letterali e caratteri di prompt."
  syntax:
    content: public int Length { get; }
    return:
      type: System.Int32
      description: "Un <xref:System.Int32>contenente il numero di posizioni nella maschera, esclusi i caratteri che modificano l&quot;input di maschera.</xref:System.Int32>"
  overload: System.ComponentModel.MaskedTextProvider.Length*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Mask
  id: Mask
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Mask
  nameWithType: MaskedTextProvider.Mask
  fullName: System.ComponentModel.MaskedTextProvider.Mask
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene la maschera di input."
  remarks: "La proprietà maschera è impostata <xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A>costruttore.</xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A> Questa maschera deve contenere solo caratteri validi come definito dal linguaggio di mascheramento."
  syntax:
    content: public string Mask { get; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>contenente l&quot;intera maschera.</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.Mask*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.MaskCompleted
  id: MaskCompleted
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskCompleted
  nameWithType: MaskedTextProvider.MaskCompleted
  fullName: System.ComponentModel.MaskedTextProvider.MaskCompleted
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene un valore che indica se tutti gli input obbligatori sono stati immessi nella stringa formattata."
  remarks: "La proprietà MaskCompleted controlla solo gli elementi di input obbligatori. Per determinare se sono stati immessi tutti gli elementi di input obbligatori e facoltativi, utilizzare il <xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=fullName>proprietà la <xref:System.Windows.Forms.MaskedTextBox>classe invece.</xref:System.Windows.Forms.MaskedTextBox> </xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=fullName>       Il valore corrente di <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>proprietà determina quali elementi di formattazione vengono considerati obbligatori e facoltativi.</xref:System.ComponentModel.MaskedTextProvider.Mask%2A>"
  syntax:
    content: public bool MaskCompleted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se tutti gli input obbligatorio è stato inserito nella maschera; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.MaskCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.MaskFull
  id: MaskFull
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: MaskFull
  nameWithType: MaskedTextProvider.MaskFull
  fullName: System.ComponentModel.MaskedTextProvider.MaskFull
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene un valore che indica se sono stati immessi tutti gli input obbligatori e facoltativi nella stringa formattata."
  remarks: "Per verificare se solo obbligatori sono stati immessi gli elementi di input, utilizzare il <xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A>proprietà invece.</xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A> Il valore corrente di <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>proprietà determina quali elementi di formattazione vengono considerati obbligatori e facoltativi.</xref:System.ComponentModel.MaskedTextProvider.Mask%2A>"
  syntax:
    content: public bool MaskFull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se sono stati immessi tutti gli input obbligatori e facoltativi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.MaskFull*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.PasswordChar
  id: PasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: PasswordChar
  nameWithType: MaskedTextProvider.PasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.PasswordChar
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene o imposta il carattere da sostituire per i caratteri di input effettivi."
  remarks: "Per l&quot;input utente riservate, è pratica comune per nascondere le informazioni immesse dall&quot;utente durante le operazioni di output. Se la proprietà PasswordChar è impostata su non`null` carattere, ad esempio metodi di output <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>e <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>nasconderà i caratteri di input con il carattere della password specificato.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> Impostando questa proprietà su `null` disabiliterà la funzionalità di protezione tramite password."
  syntax:
    content: public char PasswordChar { get; set; }
    return:
      type: System.Char
      description: "Il <xref:System.Char>valore utilizzato come carattere della password.</xref:System.Char>"
  overload: System.ComponentModel.MaskedTextProvider.PasswordChar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il carattere della password specificato quando si imposta questa proprietà è identico al carattere di richiesta corrente, <xref:System.ComponentModel.MaskedTextProvider.PromptChar*>.</xref:System.ComponentModel.MaskedTextProvider.PromptChar*> Le due devono essere diversi."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il carattere specificato quando si imposta questa proprietà non è un carattere di password valida, come determinato dal <xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>metodo.</xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>"
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.PromptChar
  id: PromptChar
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: PromptChar
  nameWithType: MaskedTextProvider.PromptChar
  fullName: System.ComponentModel.MaskedTextProvider.PromptChar
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene o imposta il carattere utilizzato per rappresentare l&quot;assenza di input dell&quot;utente per tutte le posizioni di modifica disponibili."
  remarks: "La proprietà PromptChar rappresenta il carattere di richiesta che viene utilizzato il <xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A>e <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>metodi per rappresentare lo stato corrente della stringa di input formattata.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> </xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A> Un carattere di prompt viene inserito nelle posizioni modificabili a cui non è ancora stato assegnato un valore di input. Alcune versioni del <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>metodo inoltre dipendono dal valore del <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>proprietà.</xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> </xref:System.ComponentModel.MaskedTextProvider.ToString%2A>"
  syntax:
    content: public char PromptChar { get; set; }
    return:
      type: System.Char
      description: "Il carattere usato per richiedere l&quot;input dell&quot;utente. Il valore predefinito è un carattere di sottolineatura (_)."
  overload: System.ComponentModel.MaskedTextProvider.PromptChar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il carattere di richiesta specificato quando si imposta questa proprietà corrisponde al carattere della password corrente, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*> Le due devono essere diversi."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il carattere specificato quando si imposta questa proprietà non è un carattere di password valida, come determinato dal <xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>metodo.</xref:System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*>"
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Remove
  id: Remove
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Remove()
  nameWithType: MaskedTextProvider.Remove()
  fullName: System.ComponentModel.MaskedTextProvider.Remove()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Rimuove l&quot;ultimo carattere assegnato dalla stringa formattata."
  remarks: "Il <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>metodo non ha effetto se non sono presenti caratteri ancora assegnati alla maschera.</xref:System.ComponentModel.MaskedTextProvider.Remove%2A>       Quando l&quot;ultimo carattere assegnato viene rimosso dalla stringa formattata, il carattere di maschera modificabile viene reimpostato per tale posizione, consentendo l&quot;inserimento successivo."
  syntax:
    content: public bool Remove ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il carattere è stato rimosso correttamente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Remove(Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Rimuove l&quot;ultimo carattere assegnato dalla stringa formattata e quindi restituisce la posizione di rimozione e le informazioni descrittive."
  remarks: "Il <xref:System.ComponentModel.MaskedTextProvider.Remove%2A>metodo non ha effetto se non sono presenti caratteri ancora assegnati alla maschera.</xref:System.ComponentModel.MaskedTextProvider.Remove%2A>       Quando l&quot;ultimo carattere assegnato viene rimosso dalla stringa formattata, il carattere di maschera modificabile viene reimpostato per tale posizione, consentendo l&quot;inserimento successivo."
  syntax:
    content: public bool Remove (out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: testPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui il carattere è stato effettivamente rimosso. Un parametro di output."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Oggetto <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> che descrive sinteticamente il risultato dell&quot;operazione. Un parametro di output."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il carattere è stato rimosso correttamente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Rimuove il carattere assegnato in corrispondenza della posizione specificata dalla stringa formattata."
  remarks: "Il <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>metodo non ha alcun effetto se non sono stati assegnati caratteri nella posizione di rimozione specificata.</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A> Caratteri non sono interessate da questo metodo.       Quando viene rimosso un carattere, i caratteri rimanenti superiore posizionato nella maschera verranno spostati a sinistra per colmare il vuoto creato dalla procedura di rimozione. Posizioni liberate vengono reimpostate per l&quot;input. Se lo spostamento dei caratteri, non per la definizione della maschera si verifica alcuna rimozione, e <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>restituisce `false`.</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>       Questa chiamata al metodo corrisponde esattamente alla chiamata seguente a overload <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29>versione: `RemoveAt(pos, pos);` </xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29>"
  syntax:
    content: public bool RemoveAt (int position);
    parameters:
    - id: position
      type: System.Int32
      description: "La posizione in base zero del carattere assegnato da rimuovere."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il carattere è stato rimosso correttamente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)
  id: RemoveAt(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: RemoveAt(Int32,Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Rimuove i caratteri tra le posizioni specificate dalla stringa formattata assegnati."
  remarks: "Il <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>metodo non ha alcun effetto se non sono stati assegnati caratteri nelle posizioni di rimozione specificata.</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>       Quando viene rimosso un carattere, i caratteri rimanenti superiore posizionato nella maschera verranno spostati a sinistra per colmare il vuoto creato dalla procedura di rimozione. Posizioni liberate vengono reimpostate per l&quot;input. Se lo spostamento dei caratteri, non per la definizione della maschera si verifica alcuna rimozione, e <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>restituisce `false`.</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>"
  syntax:
    content: public bool RemoveAt (int startPosition, int endPosition);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "Indice in base zero del primo carattere assegnato da rimuovere."
    - id: endPosition
      type: System.Int32
      description: "Indice in base zero dell&quot;ultimo carattere assegnato da rimuovere."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il carattere è stato rimosso correttamente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Rimuove i caratteri assegnati tra le posizioni specificate dalla stringa formattata e quindi restituisce la posizione di rimozione e le informazioni descrittive."
  remarks: "Il <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>metodo non ha alcun effetto se non sono stati assegnati caratteri nelle posizioni di rimozione specificata.</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>       Quando viene rimosso un carattere, i caratteri rimanenti superiore posizionato nella maschera verranno spostati a sinistra per colmare il vuoto creato dalla procedura di rimozione. Posizioni liberate vengono reimpostate per l&quot;input. Se lo spostamento dei caratteri, non per la definizione della maschera si verifica alcuna rimozione, e <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>restituisce `false`.</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>       Questa versione di <xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>fornisce due parametri di output aggiuntivi per raccogliere ulteriori informazioni sull&quot;operazione del metodo.</xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A>"
  syntax:
    content: public bool RemoveAt (int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "Indice in base zero del primo carattere assegnato da rimuovere."
    - id: endPosition
      type: System.Int32
      description: "Indice in base zero dell&quot;ultimo carattere assegnato da rimuovere."
    - id: testPosition
      type: System.Int32
      description: "Se ha esito positivo, la posizione in base zero nella stringa formattata di in cui i caratteri sono stati effettivamente rimossi. in caso contrario, la prima posizione in cui l&quot;operazione non riuscita. Un parametro di output."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Oggetto <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> che descrive sinteticamente il risultato dell&quot;operazione. Un parametro di output."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il carattere è stato rimosso correttamente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)
  id: Replace(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(Char,Int32)
  nameWithType: MaskedTextProvider.Replace(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Sostituisce un singolo carattere corrispondente o successiva a quella specificata con il valore del carattere specificato."
  remarks: "Metodo Replace Cerca la prima posizione nella stringa formattata corrispondente o successiva a quella specificata, modificabile `pos`. Se viene trovata, il valore della posizione modificabile viene modificato per il carattere specificato, `input`. Una delle seguenti condizioni comporterà un errore, la sostituzione non deve essere eseguita e il valore `false` da restituire: - il `pos` parametro è minore di zero o maggiore di <xref:System.ComponentModel.MaskedTextProvider.Length%2A>della stringa formattata.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Un carattere modificabile non è stato trovato nella stringa formattata corrispondente o successiva a quella specificata, `pos`.      -Il carattere di sostituzione, `input`, non è un carattere di input valido perché non stampabile o non corrisponde al relativo elemento della maschera."
  syntax:
    content: public bool Replace (char input, int position);
    parameters:
    - id: input
      type: System.Char
      description: "Il <xref:System.Char>valore che sostituisce il valore esistente.</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "La posizione in base zero per la ricerca del primo carattere modificabile da sostituire."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il carattere è stato sostituito; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)
  id: Replace(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(String,Int32)
  nameWithType: MaskedTextProvider.Replace(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Sostituisce un intervallo modificabili di caratteri che inizia in corrispondenza della posizione specificata con la stringa specificata."
  remarks: "Metodo Replace Cerca la prima posizione modificabile corrispondente o successiva a quella specificata, `pos`. Presupponendo che siano sufficienti le posizioni modificabili dopo questo punto, i valori dei caratteri esistenti vengono sostituiti uno a uno con il contenuto del parametro di stringa di sostituzione, `input`.       Le condizioni seguenti sono considerate errori. Quando si verifica un errore, viene eseguita alcuna sostituzione e sostituzione restituisce `false`.      -La `pos` parametro è minore di zero o maggiore di <xref:System.ComponentModel.MaskedTextProvider.Length%2A>della stringa formattata.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Non sono sufficienti le posizioni modificabili nella stringa formattata per i contenuti della stringa di sostituzione.      -Uno dei valori di carattere di sostituzione non è valido perché non stampabile o non corrisponde al relativo elemento della maschera."
  syntax:
    content: public bool Replace (string input, int position);
    parameters:
    - id: input
      type: System.String
      description: "Il <xref:System.String>valore utilizzato per sostituire i caratteri modificabili esistenti.</xref:System.String>"
    - id: position
      type: System.Int32
      description: "La posizione in base zero per la ricerca del primo carattere modificabile da sostituire."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se sono stati sostituiti tutti i caratteri; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Sostituisce un singolo carattere corrispondente o successiva a quella specificata con il valore del carattere specificata e quindi restituisce la posizione di rimozione e le informazioni descrittive."
  remarks: "Metodo Replace Cerca la prima posizione nella stringa formattata corrispondente o successiva a quella specificata, modificabile `pos`. Se viene trovata, il valore della posizione modificabile viene modificato per il carattere specificato, `input`. Una delle seguenti condizioni comporterà una condizione di errore, la sostituzione non deve essere eseguita e il valore `false` da restituire: - il `pos` parametro è minore di zero o maggiore di <xref:System.ComponentModel.MaskedTextProvider.Length%2A>della stringa formattata.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Un carattere modificabile non è stato trovato nella stringa formattata corrispondente o successiva a quella specificata, `pos`.      -Il carattere di sostituzione, `input`, non è un carattere di input valido perché non stampabile o non corrisponde al relativo elemento della maschera.       Oltre il valore restituito, questo metodo presenta due parametri di output per fornire informazioni aggiuntive sull&quot;operazione di sostituzione."
  syntax:
    content: public bool Replace (char input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "Il <xref:System.Char>valore che sostituisce il valore esistente.</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "La posizione in base zero per la ricerca del primo carattere modificabile da sostituire."
    - id: testPosition
      type: System.Int32
      description: "Se ha esito positivo, la posizione in base zero nella stringa formattata in cui l&quot;ultimo carattere è stato effettivamente sostituito; in caso contrario, la prima posizione in cui l&quot;operazione non riuscita. Un parametro di output."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Oggetto <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> che descrive sinteticamente il risultato dell&quot;operazione di sostituzione. Un parametro di output."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il carattere è stato sostituito; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Sostituisce un intervallo di caratteri modificabili a partire dalla posizione specificata con la stringa specificata e quindi restituisce la posizione di rimozione e le informazioni descrittive."
  remarks: "Metodo Replace Cerca la prima posizione modificabile corrispondente o successiva a quella specificata, `pos`. Presupponendo che siano sufficienti le posizioni modificabili dopo questo punto, i valori dei caratteri esistenti vengono sostituiti uno a uno con il contenuto del parametro di stringa di sostituzione, `input`.       Le condizioni seguenti sono considerate errori. Quando si verifica un errore, viene eseguita alcuna sostituzione e sostituzione restituisce `false`.      -La `pos` parametro è minore di zero o maggiore di <xref:System.ComponentModel.MaskedTextProvider.Length%2A>della stringa formattata.</xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Non sono sufficienti le posizioni modificabili nella stringa formattata per i contenuti della stringa di sostituzione.      -Uno dei valori di carattere di sostituzione non è valido perché non stampabile o non corrisponde al relativo elemento della maschera.       Oltre il valore restituito, questo metodo presenta due parametri di output per fornire informazioni aggiuntive sull&quot;operazione di sostituzione."
  syntax:
    content: public bool Replace (string input, int position, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "Il <xref:System.String>valore utilizzato per sostituire i caratteri modificabili esistenti.</xref:System.String>"
    - id: position
      type: System.Int32
      description: "La posizione in base zero per la ricerca del primo carattere modificabile da sostituire."
    - id: testPosition
      type: System.Int32
      description: "Se ha esito positivo, la posizione in base zero nella stringa formattata in cui l&quot;ultimo carattere è stato effettivamente sostituito; in caso contrario, la prima posizione in cui l&quot;operazione non riuscita. Un parametro di output."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Oggetto <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> che descrive sinteticamente il risultato dell&quot;operazione di sostituzione. Un parametro di output."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se sono stati sostituiti tutti i caratteri; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Sostituisce un singolo carattere tra l&quot;iniziale e finale posizioni con il valore del carattere specificata e quindi restituisce la posizione di rimozione e le informazioni descrittive."
  remarks: "Metodo Replace Cerca la prima posizione modificabile nella stringa formattata tra lo specificato posizioni iniziale e finale. Se viene trovata, il valore della posizione modificabile viene modificato per il carattere specificato, `input`. Una delle seguenti condizioni comporterà una condizione di errore, la sostituzione non deve essere eseguita e il valore `false` da restituire: - il `startPos` o `endPos` parametri puntano prima dell&quot;inizio della stringa formattata o successiva alla fine.      -Un carattere modificabile non è stato trovato nell&quot;intervallo specificato.      -Il carattere di sostituzione, `input`, non è un carattere di input valido perché non stampabile o non corrisponde al relativo elemento della maschera.       Oltre il valore restituito, questo metodo presenta due parametri di output per fornire informazioni aggiuntive sull&quot;operazione di sostituzione."
  syntax:
    content: public bool Replace (char input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.Char
      description: "Il <xref:System.Char>valore che sostituisce il valore esistente.</xref:System.Char>"
    - id: startPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui inizia la sostituzione."
    - id: endPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui termina la sostituzione."
    - id: testPosition
      type: System.Int32
      description: "Se ha esito positivo, la posizione in base zero nella stringa formattata in cui l&quot;ultimo carattere è stato effettivamente sostituito; in caso contrario, la prima posizione in cui l&quot;operazione non riuscita. Un parametro di output."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Oggetto <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> che descrive sinteticamente il risultato dell&quot;operazione di sostituzione. Un parametro di output."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il carattere è stato sostituito; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Sostituisce un intervallo di caratteri modificabili tra l&quot;iniziale e finale posizioni con la stringa specificata e quindi restituisce la posizione di rimozione e le informazioni descrittive."
  remarks: "Metodo Replace Cerca la prima posizione modificabile nella stringa formattata tra lo specificato posizioni iniziale e finale. Presupponendo che siano sufficienti le posizioni modificabili dopo questo punto, i valori dei caratteri esistenti vengono sostituiti uno a uno con il contenuto del parametro di stringa di sostituzione, `input`.       Le condizioni seguenti sono considerate errori. Quando si verifica un errore, viene eseguita alcuna sostituzione e sostituzione restituisce `false`.      -La `startPos` o `endPos` parametri puntano prima dell&quot;inizio della stringa formattata o successiva alla fine.      -Non sono sufficienti le posizioni modificabili nella stringa formattata per i contenuti della stringa di sostituzione.      -Uno dei valori di carattere di sostituzione non è valido perché non stampabile o non corrisponde al relativo elemento della maschera.       Oltre il valore restituito, questo metodo presenta due parametri di output per fornire informazioni aggiuntive sull&quot;operazione di sostituzione."
  syntax:
    content: public bool Replace (string input, int startPosition, int endPosition, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "Il <xref:System.String>valore utilizzato per sostituire i caratteri modificabili esistenti.</xref:System.String>"
    - id: startPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui inizia la sostituzione."
    - id: endPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui termina la sostituzione."
    - id: testPosition
      type: System.Int32
      description: "Se ha esito positivo, la posizione in base zero nella stringa formattata in cui l&quot;ultimo carattere è stato effettivamente sostituito; in caso contrario, la prima posizione in cui l&quot;operazione non riuscita. Un parametro di output."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Oggetto <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> che descrive sinteticamente il risultato dell&quot;operazione di sostituzione. Un parametro di output."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se sono stati sostituiti tutti i caratteri; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Replace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  id: ResetOnPrompt
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ResetOnPrompt
  nameWithType: MaskedTextProvider.ResetOnPrompt
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene o imposta un valore che determina la modalità di gestione di un carattere di input che corrisponde al carattere di richiesta."
  remarks: "<xref:System.ComponentModel.MaskedTextProvider>può gestire due categorie di caratteri, spaziatura e caratteri di prompt, in modo speciale.</xref:System.ComponentModel.MaskedTextProvider> In genere, ogni carattere di input viene verificato rispetto alla maschera e accettato o rifiutato. Presupponendo che la <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>proprietà è impostata su un valore diverso da `null`, quindi impostare la proprietà ResetOnPrompt `true` comporterà un&quot;elaborazione speciale del carattere di prompt.</xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> Quando viene aggiunto un carattere di prompt, determina la posizione corrente del carattere maschera la cancellazione e la posizione corrente devono essere avanzato per il successivo carattere modificabile.       ResetOnPrompt ha la precedenza sul <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>proprietà come descritto nella tabella seguente.</xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>      | ResetOnPrompt | <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>| Comportamento risultante |   |---------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|   | `true`|`true`| È possibile aggiungere il carattere di richiesta e diventa la posizione corrente della maschera da reimpostare.</xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A> Il valore predefinito. |   | `true`|`false`| È possibile aggiungere il carattere di richiesta e diventa la posizione corrente della maschera da reimpostare. |   | `false`|`true`| Il carattere di richiesta viene elaborato come un normale carattere di input. |   | `false`|`false`| Il carattere di richiesta non è valido e il tentativo di aggiungere il carattere di metodi avranno esito negativo. |"
  syntax:
    content: public bool ResetOnPrompt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il carattere di richiesta immesso come input determina la posizione corrente modificabile nella maschera di ripristinare; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per indicare che il carattere di richiesta deve essere elaborato come un normale carattere di input. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.ResetOnPrompt*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ResetOnSpace
  id: ResetOnSpace
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ResetOnSpace
  nameWithType: MaskedTextProvider.ResetOnSpace
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnSpace
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene o imposta un valore che determina la modalità di gestione di un carattere di input."
  remarks: "<xref:System.ComponentModel.MaskedTextProvider>può gestire due categorie di caratteri, spazi e caratteri di prompt, in modo speciale.</xref:System.ComponentModel.MaskedTextProvider> In genere, ogni carattere di input viene verificato rispetto alla maschera e accettato o rifiutato. Imposta la proprietà ResetOnSpace `true` comporterà la posizione corrente del carattere di maschera viene cancellato e la posizione corrente al successivo carattere modificabile.       ResetOnSpace è utile quando si assegna il testo che è stato salvato escludendo la richiesta, in cui la richiesta viene sostituita con uno spazio. Prima del ripristino di tale stringa, l&quot;impostazione ResetOnSpace su `true` reimposterà i caratteri di prompt in corrispondenza delle posizioni occupate dagli spazi nella stringa di input."
  syntax:
    content: public bool ResetOnSpace { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il carattere di input determina la posizione modificabile corrente nella maschera di ripristinare; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per indicare che viene elaborato come un normale carattere di input. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.ResetOnSpace*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String)
  id: Set(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Set(String)
  nameWithType: MaskedTextProvider.Set(String)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Imposta la stringa formattata per la stringa di input specificata."
  remarks: "Il <xref:System.ComponentModel.MaskedTextProvider.Set%2A>metodo cancella il contenuto della stringa formattata esistente e quindi applica la maschera di `input` stringa per aggiornare il contenuto della stringa formattata.</xref:System.ComponentModel.MaskedTextProvider.Set%2A>       Le condizioni seguenti sono considerate errori. Quando si verifica un errore, la stringa formattata rimane invariata e <xref:System.ComponentModel.MaskedTextProvider.Set%2A>restituisce `false`.</xref:System.ComponentModel.MaskedTextProvider.Set%2A>      -Non sono sufficienti le posizioni modificabili nella stringa formattata per i contenuti della stringa di sostituzione.      -Uno dei valori di carattere di sostituzione non è valido perché non stampabile o non corrisponde al relativo elemento della maschera."
  syntax:
    content: public bool Set (string input);
    parameters:
    - id: input
      type: System.String
      description: "Il <xref:System.String>valore utilizzato per impostare la stringa formattata.</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se tutti i caratteri sono stati impostati; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Set*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: Set(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Imposta la stringa formattata per la stringa di input specificata e quindi restituisce la posizione di rimozione e le informazioni descrittive."
  remarks: "Il <xref:System.ComponentModel.MaskedTextProvider.Set%2A>metodo cancella il contenuto della stringa formattata esistente e quindi applica la maschera di `input` stringa per aggiornare il contenuto della stringa formattata.</xref:System.ComponentModel.MaskedTextProvider.Set%2A>       Le condizioni seguenti sono considerate errori. Quando si verifica un errore, la stringa formattata rimane invariata e <xref:System.ComponentModel.MaskedTextProvider.Set%2A>restituisce `false`.</xref:System.ComponentModel.MaskedTextProvider.Set%2A>      -Non sono sufficienti le posizioni modificabili nella stringa formattata per i contenuti della stringa di sostituzione.      -Uno dei valori di carattere di sostituzione non è valido perché non stampabile o non corrisponde al relativo elemento della maschera.       Questa versione di <xref:System.ComponentModel.MaskedTextProvider.Set%2A>fornisce due parametri di output aggiuntivi per raccogliere ulteriori informazioni sull&quot;operazione del metodo.</xref:System.ComponentModel.MaskedTextProvider.Set%2A>"
  syntax:
    content: public bool Set (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "Il <xref:System.String>valore utilizzato per impostare la stringa formattata.</xref:System.String>"
    - id: testPosition
      type: System.Int32
      description: "Se ha esito positivo, la posizione in base zero nella stringa formattata in cui l&quot;ultimo carattere è stato effettivamente impostato; in caso contrario, la prima posizione in cui l&quot;operazione non riuscita. Un parametro di output."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Oggetto <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> che descrive sinteticamente il risultato dell&quot;operazione di impostazione. Un parametro di output."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se tutti i caratteri sono stati impostati; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.Set*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The<code> input</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.SkipLiterals
  id: SkipLiterals
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: SkipLiterals
  nameWithType: MaskedTextProvider.SkipLiterals
  fullName: System.ComponentModel.MaskedTextProvider.SkipLiterals
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene o imposta un valore che indica se le posizioni di caratteri letterali nella maschera possono essere sovrascritto con gli stessi valori."
  remarks: "Maschere di input possono contenere caratteri letterali e modificabili. Se viene effettuato un tentativo di aggiungere un carattere di input per la posizione occupata da un valore letterale, il valore di una maschera del <xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>proprietà determina il risultato.</xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A>      -Se questa proprietà è `true`, è possibile sovrascrivere un valore letterale con lo stesso valore durante l&quot;aggiunta di caratteri di input. Ad esempio, un valore del carattere barra rovesciata, `&quot;/&quot;`, è possibile aggiungere alla terza posizione della maschera `&quot;00/00/000&quot;`.      -Se questa proprietà è `false`, non è possibile assegnare qualsiasi valore a una posizione della maschera occupata da un carattere letterale."
  syntax:
    content: public bool SkipLiterals { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per consentire valori letterali riaggiunti; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per non consentire la sovrascrittura dei caratteri letterali. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.SkipLiterals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToDisplayString
  id: ToDisplayString
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToDisplayString()
  nameWithType: MaskedTextProvider.ToDisplayString()
  fullName: System.ComponentModel.MaskedTextProvider.ToDisplayString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce la stringa formattata in un formato visualizzabile."
  remarks: "Il metodo ToDisplayString includerà sempre caratteri letterali e dei messaggi di richiesta nel valore restituito, indipendentemente dal valore della <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>o <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>proprietà.</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> Questo metodo vengono sempre visualizzati i caratteri della password se il <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>proprietà è impostata su un valore di carattere diverso da `null`.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>       ToDisplayString è comunemente utilizzato per ottenere la stringa da visualizzare negli elementi dell&quot;interfaccia utente associato, ad esempio <xref:System.Windows.Forms.MaskedTextBox>.</xref:System.Windows.Forms.MaskedTextBox>"
  syntax:
    content: public string ToDisplayString ();
    parameters: []
    return:
      type: System.String
      description: "Il formato <xref:System.String>che include le richieste e valori letterali di maschera.</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToDisplayString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString
  id: ToString
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString()
  nameWithType: MaskedTextProvider.ToString()
  fullName: System.ComponentModel.MaskedTextProvider.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce la stringa formattata che include tutti i valori di carattere assegnato."
  remarks: "Questa versione di overload <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>metodo include le richieste e valori letterali in base ai valori correnti del <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>proprietà, rispettivamente.</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> </xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Restituisce sempre i caratteri di input originali, ignorando il valore della <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>proprietà.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      > [!IMPORTANT] > Perché questo metodo fornisce informazioni che sono in genere protetto dai caratteri della password nell&quot;interfaccia utente, deve utilizzata con estrema cautela per evitare di rivelare accidentalmente dati riservati dell&quot;utente."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Il formato <xref:System.String>che include tutti i valori di carattere assegnato.</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce la stringa formattata, include facoltativamente i caratteri della password."
  remarks: "Questa versione di overload <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>metodo include le richieste e valori letterali in base ai valori correnti del <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>proprietà, rispettivamente.</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> </xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Se il `ignorePasswordChar` parametro `true`, restituirà i caratteri di input originali, ignorando il valore della <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>proprietà.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> Se questo parametro è `false`, verrà utilizzato il carattere della password per nascondere l&quot;input dell&quot;utente modificabile se il <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>proprietà è impostata su un valore diverso da `null`.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      > [!IMPORTANT] > Poiché potenzialmente, questo metodo fornisce informazioni che sono in genere protetto dai caratteri della password nell&quot;interfaccia utente, deve essere utilizzata con estrema cautela per evitare di rivelare accidentalmente dati riservati dell&quot;utente."
  syntax:
    content: public string ToString (bool ignorePasswordChar);
    parameters:
    - id: ignorePasswordChar
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per restituire i caratteri modificabili effettivi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per indicare che il <xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>è possibile applicare la proprietà.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>"
    return:
      type: System.String
      description: "Il formato <xref:System.String>che include valori letterali, di richiesta e, facoltativamente, i caratteri della password.</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)
  id: ToString(System.Boolean,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce la stringa formattata, include facoltativamente i caratteri letterali e dei messaggi di richiesta."
  remarks: "Questa versione di overload <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>metodo include le richieste e valori letterali in base ai valori di `IncludePrompt` e `IncludeLiterals` parametri, rispettivamente.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> Si noti che questi parametri l&quot;override dei valori del <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>proprietà.</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A></xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> Questo metodo restituirà sempre i caratteri di input originali, ignorando il valore della <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>proprietà.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      > [!IMPORTANT] > Perché questo metodo fornisce informazioni che sono in genere protetto dai caratteri della password nell&quot;interfaccia utente, deve utilizzata con estrema cautela per evitare di rivelare accidentalmente dati riservati dell&quot;utente."
  syntax:
    content: public string ToString (bool includePrompt, bool includeLiterals);
    parameters:
    - id: includePrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per includere i caratteri di prompt nella stringa restituita. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: includeLiterals
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per includere i caratteri nella stringa restituita; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Il formato <xref:System.String>che include tutti i caratteri assegnati i valori e, facoltativamente, includono valori letterali e viene richiesto.</xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)
  id: ToString(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce una sottostringa della stringa formattata."
  remarks: "Questa versione di overload <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>metodo restituisce una sottostringa della stringa formattata, a partire dalla posizione `startPos` e include il numero di caratteri specificato dalla successivi il `length` parametro.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> La stringa restituita include le richieste e valori letterali in base ai valori correnti del <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>proprietà, rispettivamente.</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> La stringa restituita conterrà i caratteri di input originali; il <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>proprietà viene sempre ignorata.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      > [!IMPORTANT] > Perché questo metodo fornisce informazioni che sono in genere protetto dai caratteri della password nell&quot;interfaccia utente, deve utilizzata con estrema cautela per evitare di rivelare accidentalmente dati riservati dell&quot;utente.       ToString esegue le azioni seguenti quando sono presenti discrepanze nei parametri di input:: se `startPos` è minore di zero, la posizione iniziale è impostata su zero.      -Se `startPos` è maggiore o uguale alla proprietà effettiva <xref:System.ComponentModel.MaskedTextProvider.Length%2A>della stringa formattata, il <xref:System.String.Empty>viene restituita una stringa.</xref:System.String.Empty> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Se `length` è maggiore del numero di caratteri precedenti la posizione iniziale, solo i restanti caratteri rimanente vengono restituiti.      -Se `length` è minore o uguale a zero, il <xref:System.String.Empty>viene restituita una stringa.</xref:System.String.Empty>"
  syntax:
    content: public string ToString (int startPosition, int length);
    parameters:
    - id: startPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui inizia l&quot;output."
    - id: length
      type: System.Int32
      description: "Il numero di caratteri da restituire."
    return:
      type: System.String
      description: "Se ha esito positivo, una sottostringa dell&quot;oggetto formattato <xref:System.String>, che include tutti i valori di carattere assegnato; in caso contrario il <xref:System.String>stringa.</xref:System.String> </xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)
  id: ToString(System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce una sottostringa della stringa formattata, include facoltativamente i caratteri della password."
  remarks: "Questa versione di overload <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>metodo restituisce una sottostringa della stringa formattata, a partire dalla posizione `startPos` e include il numero di caratteri specificato dalla successivi il `length` parametro.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> La stringa restituita include le richieste e valori letterali in base ai valori correnti del <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>proprietà, rispettivamente.</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> Se il `ignorePasswordChar` parametro `true`, restituirà i caratteri di input originali, ignorando il valore della <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>proprietà.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> Se questo parametro è `false`, verrà utilizzato il carattere della password per nascondere l&quot;input dell&quot;utente modificabile se il <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>proprietà è impostata su un valore diverso da `null`.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      > [!IMPORTANT] > Poiché potenzialmente, questo metodo fornisce informazioni che sono in genere protetto dai caratteri della password nell&quot;interfaccia utente, deve essere utilizzata con estrema cautela per evitare di rivelare accidentalmente dati riservati dell&quot;utente.       <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>esegue le azioni seguenti quando sono presenti discrepanze nei parametri di input:: se `startPos` è minore di zero, la posizione iniziale è impostata su zero.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A>      -Se `startPos` è maggiore o uguale alla proprietà effettiva <xref:System.ComponentModel.MaskedTextProvider.Length%2A>della stringa formattata, il <xref:System.String.Empty>viene restituita una stringa.</xref:System.String.Empty> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Se `length` è maggiore del numero di caratteri precedenti la posizione iniziale, solo i restanti caratteri rimanente vengono restituiti.      -Se `length` è minore o uguale a zero, il <xref:System.String.Empty>viene restituita una stringa.</xref:System.String.Empty>"
  syntax:
    content: public string ToString (bool ignorePasswordChar, int startPosition, int length);
    parameters:
    - id: ignorePasswordChar
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per restituire i caratteri modificabili effettivi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per indicare che il <xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>è possibile applicare la proprietà.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>"
    - id: startPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui inizia l&quot;output."
    - id: length
      type: System.Int32
      description: "Il numero di caratteri da restituire."
    return:
      type: System.String
      description: "Se ha esito positivo, una sottostringa dell&quot;oggetto formattato <xref:System.String>, che include valori letterali, di richiesta e, facoltativamente, i caratteri della password; in caso contrario il <xref:System.String>stringa.</xref:System.String> </xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  id: ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce una sottostringa della stringa formattata, include facoltativamente i caratteri letterali e dei messaggi di richiesta."
  remarks: "Questa versione di overload <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>metodo restituisce una sottostringa della stringa formattata, a partire dalla posizione `startPos` e include il numero di caratteri specificato dalla successivi il `length` parametro.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> La stringa restituita include le richieste e valori letterali in base ai valori di `IncludePrompt` e `IncludeLiterals` parametri, rispettivamente. Si noti che questi parametri l&quot;override dei valori del <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>proprietà.</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A></xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> Questo metodo restituirà sempre i caratteri di input originali, ignorando il valore della <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>proprietà.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      > [!IMPORTANT] > Perché questo metodo fornisce informazioni che sono in genere protetto dai caratteri della password nell&quot;interfaccia utente, deve utilizzata con estrema cautela per evitare di rivelare accidentalmente dati riservati dell&quot;utente.       <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>esegue le azioni seguenti quando sono presenti discrepanze nei parametri di input:: se `startPos` è minore di zero, la posizione iniziale è impostata su zero.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A>      -Se `startPos` è maggiore o uguale alla proprietà effettiva <xref:System.ComponentModel.MaskedTextProvider.Length%2A>della stringa formattata, il <xref:System.String.Empty>viene restituita una stringa.</xref:System.String.Empty> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Se `length` è maggiore del numero di caratteri precedenti la posizione iniziale, solo i restanti caratteri rimanente vengono restituiti.      -Se `length` è minore o uguale a zero, il <xref:System.String.Empty>viene restituita una stringa.</xref:System.String.Empty>"
  syntax:
    content: public string ToString (bool includePrompt, bool includeLiterals, int startPosition, int length);
    parameters:
    - id: includePrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per includere i caratteri di prompt nella stringa restituita. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: includeLiterals
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per includere i caratteri nella stringa restituita; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: startPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui inizia l&quot;output."
    - id: length
      type: System.Int32
      description: "Il numero di caratteri da restituire."
    return:
      type: System.String
      description: "Se ha esito positivo, una sottostringa dell&quot;oggetto formattato <xref:System.String>, che include tutti i caratteri assegnati i valori e facoltativamente includono valori letterali e richiesta; in caso contrario il <xref:System.String>stringa.</xref:System.String> </xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  id: ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: ToString(Boolean,Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce una sottostringa della stringa formattata, include facoltativamente i caratteri di prompt dei comandi, valore letterale e la password."
  remarks: "Questa versione di overload <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>metodo restituisce una sottostringa della stringa formattata, a partire dalla posizione `startPos` e include il numero di caratteri specificato dalla successivi il `length` parametro.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A> La stringa restituita include le richieste e valori letterali in base ai valori di `IncludePrompt` e `IncludeLiterals` parametri, rispettivamente. Si noti che questi parametri l&quot;override dei valori del <xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A>e <xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A>proprietà.</xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A> Se il `ignorePasswordChar` parametro `true`, restituirà i caratteri di input originali, ignorando il valore della <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>proprietà.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> Se questo parametro è `false`, verrà utilizzato il carattere della password per nascondere l&quot;input dell&quot;utente modificabile se il <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>proprietà è impostata su un valore diverso da `null`.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>      > [!IMPORTANT] > Poiché potenzialmente, questo metodo fornisce informazioni che sono in genere protetto dai caratteri della password nell&quot;interfaccia utente, deve essere utilizzata con estrema cautela per evitare di rivelare accidentalmente dati riservati dell&quot;utente.       <xref:System.ComponentModel.MaskedTextProvider.ToString%2A>esegue le azioni seguenti quando sono presenti discrepanze nei parametri di input:: se `startPos` è minore di zero, la posizione iniziale è impostata su zero.</xref:System.ComponentModel.MaskedTextProvider.ToString%2A>      -Se `startPos` è maggiore o uguale alla proprietà effettiva <xref:System.ComponentModel.MaskedTextProvider.Length%2A>della stringa formattata, il <xref:System.String.Empty>viene restituita una stringa.</xref:System.String.Empty> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Se `length` è maggiore del numero di caratteri precedenti la posizione iniziale, solo i restanti caratteri rimanente vengono restituiti.      -Se `length` è minore o uguale a zero, il <xref:System.String.Empty>viene restituita una stringa.</xref:System.String.Empty>"
  syntax:
    content: public string ToString (bool ignorePasswordChar, bool includePrompt, bool includeLiterals, int startPosition, int length);
    parameters:
    - id: ignorePasswordChar
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per restituire i caratteri modificabili effettivi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per indicare che il <xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>è possibile applicare la proprietà.</xref:System.ComponentModel.MaskedTextProvider.PasswordChar*>"
    - id: includePrompt
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per includere i caratteri di prompt nella stringa restituita. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: includeLiterals
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per restituire i caratteri nella stringa restituita. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: startPosition
      type: System.Int32
      description: "La posizione in base zero nella stringa formattata in cui inizia l&quot;output."
    - id: length
      type: System.Int32
      description: "Il numero di caratteri da restituire."
    return:
      type: System.String
      description: "Se ha esito positivo, una sottostringa dell&quot;oggetto formattato <xref:System.String>, che include tutti i caratteri assegnati i valori e facoltativamente includono valori letterali, le richieste e i caratteri della password; in caso contrario il <xref:System.String>stringa.</xref:System.String> </xref:System.String>"
  overload: System.ComponentModel.MaskedTextProvider.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  id: VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyChar(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Verifica se il carattere specificato è stato possibile impostare correttamente nella posizione specificata."
  remarks: "Il metodo VerifyChar verifica se il valore di un singolo carattere rappresenta un input valido in corrispondenza della posizione specificata nella stringa formattata. Questo metodo restituirà `false` per i motivi seguenti: - il `pos` parametro è minore di zero o maggiore di <xref:System.ComponentModel.MaskedTextProvider.Length%2A> <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</xref:System.ComponentModel.MaskedTextProvider.Mask%2A> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>      -Il carattere `input` non è un carattere di input valido, come determinato dal <xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A>metodo.</xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A>      -La `input` non è compatibile con l&quot;elemento della maschera in corrispondenza della posizione specificata, `pos`.       L&quot;ultima condizione può dipendere dal valore corrente del <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>, <xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A>, <xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A>, <xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A>e <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A>proprietà.</xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A> </xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A> </xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A> </xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A> </xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>       Per testare un&quot;intera stringa di input in base alla maschera, utilizzare uno del <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>metodi invece.</xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>"
  syntax:
    content: public bool VerifyChar (char input, int position, out System.ComponentModel.MaskedTextResultHint hint);
    parameters:
    - id: input
      type: System.Char
      description: "Il <xref:System.Char>valore da testare.</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "Posizione nella maschera per testare il carattere immesso dall&quot;utente."
    - id: hint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Oggetto <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> che descrive sinteticamente il risultato dell&quot;operazione. Un parametro di output."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il carattere specificato è valido per la posizione specificata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.VerifyChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)
  id: VerifyEscapeChar(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyEscapeChar(Char,Int32)
  nameWithType: MaskedTextProvider.VerifyEscapeChar(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(Char,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Verifica se il carattere specificato viene sottoposto a escape in corrispondenza della posizione specificata."
  remarks: "Un carattere è detto *escape* se è un input valido, ma non è assegnato a tale posizione nella stringa formattata. I caratteri di escape rientrano in tre categorie seguenti:-caratteri di Prompt vengono sottoposti a escape se il <xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>proprietà `true`.</xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A>      -Inpui caratteri di escape se hanno lo stesso valore del valore letterale nella maschera e, se il <xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A>proprietà `true`.</xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A>      -Spazi sono caratteri di escape se il <xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>proprietà `true`.</xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A>       Il metodo VerifyEscapeChar restituirà anche `false` se il `pos` parametro è minore di zero o maggiore di <xref:System.ComponentModel.MaskedTextProvider.Length%2A> <xref:System.ComponentModel.MaskedTextProvider.Mask%2A>.</xref:System.ComponentModel.MaskedTextProvider.Mask%2A> </xref:System.ComponentModel.MaskedTextProvider.Length%2A>"
  syntax:
    content: public bool VerifyEscapeChar (char input, int position);
    parameters:
    - id: input
      type: System.Char
      description: "Il <xref:System.Char>valore da testare.</xref:System.Char>"
    - id: position
      type: System.Int32
      description: "Posizione nella maschera per testare il carattere immesso dall&quot;utente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il carattere specificato viene sottoposto a escape; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String)
  id: VerifyString(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyString(String)
  nameWithType: MaskedTextProvider.VerifyString(String)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Verifica se è possibile impostare correttamente la stringa specificata."
  remarks: "Il <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>si applica il `input` stringa in base alla maschera, senza modificare effettivamente la stringa formattata, per verificare se `input` sarebbe valido a un corrispondente <xref:System.ComponentModel.MaskedTextProvider.Set%2A>operazione.</xref:System.ComponentModel.MaskedTextProvider.Set%2A> </xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> Questo metodo restituisce anche `true` se input è `null` o è di lunghezza zero."
  syntax:
    content: public bool VerifyString (string input);
    parameters:
    - id: input
      type: System.String
      description: "Il <xref:System.String>valore da testare.</xref:System.String>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la stringa specificata rappresenta un input valido; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.VerifyString*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  id: VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  langs:
  - csharp
  name: VerifyString(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Verifica se è stato possibile impostare correttamente la stringa specificata e quindi restituisce informazioni sulla posizione e descrittive."
  remarks: "Il <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>si applica il `input` stringa in base alla maschera, senza modificare effettivamente la stringa formattata, per verificare se `input` sarebbe valido a un corrispondente <xref:System.ComponentModel.MaskedTextProvider.Set%2A>operazione.</xref:System.ComponentModel.MaskedTextProvider.Set%2A> </xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A> Questo metodo restituisce anche `true` se input è `null` o è di lunghezza zero.       Questa versione di <xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>fornisce due parametri di output aggiuntivi per raccogliere ulteriori informazioni sull&quot;operazione del metodo.</xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A>"
  syntax:
    content: public bool VerifyString (string input, out int testPosition, out System.ComponentModel.MaskedTextResultHint resultHint);
    parameters:
    - id: input
      type: System.String
      description: "Il <xref:System.String>valore da testare.</xref:System.String>"
    - id: testPosition
      type: System.Int32
      description: "Se ha esito positivo, la posizione in base zero dell&quot;ultimo carattere effettivamente verificato; in caso contrario, la prima posizione in cui il test non è riuscito. Un parametro di output."
    - id: resultHint
      type: System.ComponentModel.MaskedTextResultHint
      description: "Oggetto <xref href=&quot;System.ComponentModel.MaskedTextResultHint&quot;> </xref> che descrive sinteticamente il risultato dell&quot;operazione di verifica. Un parametro di output."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la stringa specificata rappresenta un input valido; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MaskedTextProvider.VerifyString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,Char,Boolean)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Char,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  nameWithType: MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.MaskedTextProvider(String,CultureInfo,Boolean,Char,Char,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(Char)
  nameWithType: MaskedTextProvider.Add(Char)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char)
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(String)
  nameWithType: MaskedTextProvider.Add(String)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String)
- uid: System.ComponentModel.MaskedTextProvider.Add(System.Char,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(Char,Int32,MaskedTextResultHint)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.MaskedTextResultHint
  parent: System.ComponentModel
  isExternal: false
  name: MaskedTextResultHint
  nameWithType: MaskedTextResultHint
  fullName: System.ComponentModel.MaskedTextResultHint
- uid: System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Add(String,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AllowPromptAsInput
  nameWithType: MaskedTextProvider.AllowPromptAsInput
  fullName: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput
- uid: System.ComponentModel.MaskedTextProvider.AsciiOnly
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AsciiOnly
  nameWithType: MaskedTextProvider.AsciiOnly
  fullName: System.ComponentModel.MaskedTextProvider.AsciiOnly
- uid: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AssignedEditPositionCount
  nameWithType: MaskedTextProvider.AssignedEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AvailableEditPositionCount
  nameWithType: MaskedTextProvider.AvailableEditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.Clear
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clear()
  nameWithType: MaskedTextProvider.Clear()
  fullName: System.ComponentModel.MaskedTextProvider.Clear()
- uid: System.ComponentModel.MaskedTextProvider.Clear(System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clear(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Clear(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Clear(MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Clone
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clone()
  nameWithType: MaskedTextProvider.Clone()
  fullName: System.ComponentModel.MaskedTextProvider.Clone()
- uid: System.ComponentModel.MaskedTextProvider.Culture
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Culture
  nameWithType: MaskedTextProvider.Culture
  fullName: System.ComponentModel.MaskedTextProvider.Culture
- uid: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: DefaultPasswordChar
  nameWithType: MaskedTextProvider.DefaultPasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar
- uid: System.ComponentModel.MaskedTextProvider.EditPositionCount
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositionCount
  nameWithType: MaskedTextProvider.EditPositionCount
  fullName: System.ComponentModel.MaskedTextProvider.EditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.EditPositions
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositions
  nameWithType: MaskedTextProvider.EditPositions
  fullName: System.ComponentModel.MaskedTextProvider.EditPositions
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionFrom(Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom(Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(System.Int32,System.Int32,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange(Int32,Int32,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(System.ComponentModel.MaskedTextResultHint)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: GetOperationResultFromHint(MaskedTextResultHint)
  nameWithType: MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint(MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.IncludeLiterals
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludeLiterals
  nameWithType: MaskedTextProvider.IncludeLiterals
  fullName: System.ComponentModel.MaskedTextProvider.IncludeLiterals
- uid: System.ComponentModel.MaskedTextProvider.IncludePrompt
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludePrompt
  nameWithType: MaskedTextProvider.IncludePrompt
  fullName: System.ComponentModel.MaskedTextProvider.IncludePrompt
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(Char,Int32)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32)
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(String,Int32)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32)
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(Char,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.InsertAt(String,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.InvalidIndex
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InvalidIndex
  nameWithType: MaskedTextProvider.InvalidIndex
  fullName: System.ComponentModel.MaskedTextProvider.InvalidIndex
- uid: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsAvailablePosition(Int32)
  nameWithType: MaskedTextProvider.IsAvailablePosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsAvailablePosition(Int32)
- uid: System.ComponentModel.MaskedTextProvider.IsEditPosition(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsEditPosition(Int32)
  nameWithType: MaskedTextProvider.IsEditPosition(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.IsEditPosition(Int32)
- uid: System.ComponentModel.MaskedTextProvider.IsPassword
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsPassword
  nameWithType: MaskedTextProvider.IsPassword
  fullName: System.ComponentModel.MaskedTextProvider.IsPassword
- uid: System.ComponentModel.MaskedTextProvider.IsValidInputChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidInputChar(Char)
  nameWithType: MaskedTextProvider.IsValidInputChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidInputChar(Char)
- uid: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidMaskChar(Char)
  nameWithType: MaskedTextProvider.IsValidMaskChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidMaskChar(Char)
- uid: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidPasswordChar(Char)
  nameWithType: MaskedTextProvider.IsValidPasswordChar(Char)
  fullName: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(Char)
- uid: System.ComponentModel.MaskedTextProvider.Item(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Item(Int32)
  nameWithType: MaskedTextProvider.Item(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Item(Int32)
- uid: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: LastAssignedPosition
  nameWithType: MaskedTextProvider.LastAssignedPosition
  fullName: System.ComponentModel.MaskedTextProvider.LastAssignedPosition
- uid: System.ComponentModel.MaskedTextProvider.Length
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Length
  nameWithType: MaskedTextProvider.Length
  fullName: System.ComponentModel.MaskedTextProvider.Length
- uid: System.ComponentModel.MaskedTextProvider.Mask
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Mask
  nameWithType: MaskedTextProvider.Mask
  fullName: System.ComponentModel.MaskedTextProvider.Mask
- uid: System.ComponentModel.MaskedTextProvider.MaskCompleted
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskCompleted
  nameWithType: MaskedTextProvider.MaskCompleted
  fullName: System.ComponentModel.MaskedTextProvider.MaskCompleted
- uid: System.ComponentModel.MaskedTextProvider.MaskFull
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskFull
  nameWithType: MaskedTextProvider.MaskFull
  fullName: System.ComponentModel.MaskedTextProvider.MaskFull
- uid: System.ComponentModel.MaskedTextProvider.PasswordChar
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PasswordChar
  nameWithType: MaskedTextProvider.PasswordChar
  fullName: System.ComponentModel.MaskedTextProvider.PasswordChar
- uid: System.ComponentModel.MaskedTextProvider.PromptChar
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PromptChar
  nameWithType: MaskedTextProvider.PromptChar
  fullName: System.ComponentModel.MaskedTextProvider.PromptChar
- uid: System.ComponentModel.MaskedTextProvider.Remove
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Remove()
  nameWithType: MaskedTextProvider.Remove()
  fullName: System.ComponentModel.MaskedTextProvider.Remove()
- uid: System.ComponentModel.MaskedTextProvider.Remove(System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Remove(Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Remove(Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32)
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt(Int32,Int32)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt(System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.RemoveAt(Int32,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(Char,Int32)
  nameWithType: MaskedTextProvider.Replace(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(String,Int32)
  nameWithType: MaskedTextProvider.Replace(String,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(Char,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(String,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.Char,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(Char,Int32,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Replace(String,Int32,Int32,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnPrompt
  nameWithType: MaskedTextProvider.ResetOnPrompt
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnPrompt
- uid: System.ComponentModel.MaskedTextProvider.ResetOnSpace
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnSpace
  nameWithType: MaskedTextProvider.ResetOnSpace
  fullName: System.ComponentModel.MaskedTextProvider.ResetOnSpace
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Set(String)
  nameWithType: MaskedTextProvider.Set(String)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String)
- uid: System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Set(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.Set(String,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.SkipLiterals
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: SkipLiterals
  nameWithType: MaskedTextProvider.SkipLiterals
  fullName: System.ComponentModel.MaskedTextProvider.SkipLiterals
- uid: System.ComponentModel.MaskedTextProvider.ToDisplayString
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToDisplayString()
  nameWithType: MaskedTextProvider.ToDisplayString()
  fullName: System.ComponentModel.MaskedTextProvider.ToDisplayString()
- uid: System.ComponentModel.MaskedTextProvider.ToString
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString()
  nameWithType: MaskedTextProvider.ToString()
  fullName: System.ComponentModel.MaskedTextProvider.ToString()
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Boolean)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString(Boolean,Boolean,Boolean,Int32,Int32)
  nameWithType: MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.ToString(Boolean,Boolean,Boolean,Int32,Int32)
- uid: System.ComponentModel.MaskedTextProvider.VerifyChar(System.Char,System.Int32,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyChar(Char,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyChar(Char,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(System.Char,System.Int32)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyEscapeChar(Char,Int32)
  nameWithType: MaskedTextProvider.VerifyEscapeChar(Char,Int32)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar(Char,Int32)
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyString(String)
  nameWithType: MaskedTextProvider.VerifyString(String)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String)
- uid: System.ComponentModel.MaskedTextProvider.VerifyString(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyString(String,Int32,MaskedTextResultHint)
  nameWithType: MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
  fullName: System.ComponentModel.MaskedTextProvider.VerifyString(String,Int32,MaskedTextResultHint)
- uid: System.ComponentModel.MaskedTextProvider.#ctor*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskedTextProvider
  nameWithType: MaskedTextProvider.MaskedTextProvider
- uid: System.ComponentModel.MaskedTextProvider.Add*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Add
  nameWithType: MaskedTextProvider.Add
- uid: System.ComponentModel.MaskedTextProvider.AllowPromptAsInput*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AllowPromptAsInput
  nameWithType: MaskedTextProvider.AllowPromptAsInput
- uid: System.ComponentModel.MaskedTextProvider.AsciiOnly*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AsciiOnly
  nameWithType: MaskedTextProvider.AsciiOnly
- uid: System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AssignedEditPositionCount
  nameWithType: MaskedTextProvider.AssignedEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: AvailableEditPositionCount
  nameWithType: MaskedTextProvider.AvailableEditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.Clear*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clear
  nameWithType: MaskedTextProvider.Clear
- uid: System.ComponentModel.MaskedTextProvider.Clone*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Clone
  nameWithType: MaskedTextProvider.Clone
- uid: System.ComponentModel.MaskedTextProvider.Culture*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Culture
  nameWithType: MaskedTextProvider.Culture
- uid: System.ComponentModel.MaskedTextProvider.DefaultPasswordChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: DefaultPasswordChar
  nameWithType: MaskedTextProvider.DefaultPasswordChar
- uid: System.ComponentModel.MaskedTextProvider.EditPositionCount*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositionCount
  nameWithType: MaskedTextProvider.EditPositionCount
- uid: System.ComponentModel.MaskedTextProvider.EditPositions*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: EditPositions
  nameWithType: MaskedTextProvider.EditPositions
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionFrom
  nameWithType: MaskedTextProvider.FindAssignedEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindAssignedEditPositionInRange
  nameWithType: MaskedTextProvider.FindAssignedEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionFrom
  nameWithType: MaskedTextProvider.FindEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindEditPositionInRange
  nameWithType: MaskedTextProvider.FindEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionFrom
  nameWithType: MaskedTextProvider.FindNonEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindNonEditPositionInRange
  nameWithType: MaskedTextProvider.FindNonEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionFrom
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionFrom
- uid: System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: FindUnassignedEditPositionInRange
  nameWithType: MaskedTextProvider.FindUnassignedEditPositionInRange
- uid: System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: GetOperationResultFromHint
  nameWithType: MaskedTextProvider.GetOperationResultFromHint
- uid: System.ComponentModel.MaskedTextProvider.IncludeLiterals*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludeLiterals
  nameWithType: MaskedTextProvider.IncludeLiterals
- uid: System.ComponentModel.MaskedTextProvider.IncludePrompt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IncludePrompt
  nameWithType: MaskedTextProvider.IncludePrompt
- uid: System.ComponentModel.MaskedTextProvider.InsertAt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InsertAt
  nameWithType: MaskedTextProvider.InsertAt
- uid: System.ComponentModel.MaskedTextProvider.InvalidIndex*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: InvalidIndex
  nameWithType: MaskedTextProvider.InvalidIndex
- uid: System.ComponentModel.MaskedTextProvider.IsAvailablePosition*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsAvailablePosition
  nameWithType: MaskedTextProvider.IsAvailablePosition
- uid: System.ComponentModel.MaskedTextProvider.IsEditPosition*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsEditPosition
  nameWithType: MaskedTextProvider.IsEditPosition
- uid: System.ComponentModel.MaskedTextProvider.IsPassword*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsPassword
  nameWithType: MaskedTextProvider.IsPassword
- uid: System.ComponentModel.MaskedTextProvider.IsValidInputChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidInputChar
  nameWithType: MaskedTextProvider.IsValidInputChar
- uid: System.ComponentModel.MaskedTextProvider.IsValidMaskChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidMaskChar
  nameWithType: MaskedTextProvider.IsValidMaskChar
- uid: System.ComponentModel.MaskedTextProvider.IsValidPasswordChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: IsValidPasswordChar
  nameWithType: MaskedTextProvider.IsValidPasswordChar
- uid: System.ComponentModel.MaskedTextProvider.Item*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Item
  nameWithType: MaskedTextProvider.Item
- uid: System.ComponentModel.MaskedTextProvider.LastAssignedPosition*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: LastAssignedPosition
  nameWithType: MaskedTextProvider.LastAssignedPosition
- uid: System.ComponentModel.MaskedTextProvider.Length*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Length
  nameWithType: MaskedTextProvider.Length
- uid: System.ComponentModel.MaskedTextProvider.Mask*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Mask
  nameWithType: MaskedTextProvider.Mask
- uid: System.ComponentModel.MaskedTextProvider.MaskCompleted*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskCompleted
  nameWithType: MaskedTextProvider.MaskCompleted
- uid: System.ComponentModel.MaskedTextProvider.MaskFull*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: MaskFull
  nameWithType: MaskedTextProvider.MaskFull
- uid: System.ComponentModel.MaskedTextProvider.PasswordChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PasswordChar
  nameWithType: MaskedTextProvider.PasswordChar
- uid: System.ComponentModel.MaskedTextProvider.PromptChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: PromptChar
  nameWithType: MaskedTextProvider.PromptChar
- uid: System.ComponentModel.MaskedTextProvider.Remove*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Remove
  nameWithType: MaskedTextProvider.Remove
- uid: System.ComponentModel.MaskedTextProvider.RemoveAt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: RemoveAt
  nameWithType: MaskedTextProvider.RemoveAt
- uid: System.ComponentModel.MaskedTextProvider.Replace*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Replace
  nameWithType: MaskedTextProvider.Replace
- uid: System.ComponentModel.MaskedTextProvider.ResetOnPrompt*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnPrompt
  nameWithType: MaskedTextProvider.ResetOnPrompt
- uid: System.ComponentModel.MaskedTextProvider.ResetOnSpace*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ResetOnSpace
  nameWithType: MaskedTextProvider.ResetOnSpace
- uid: System.ComponentModel.MaskedTextProvider.Set*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: Set
  nameWithType: MaskedTextProvider.Set
- uid: System.ComponentModel.MaskedTextProvider.SkipLiterals*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: SkipLiterals
  nameWithType: MaskedTextProvider.SkipLiterals
- uid: System.ComponentModel.MaskedTextProvider.ToDisplayString*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToDisplayString
  nameWithType: MaskedTextProvider.ToDisplayString
- uid: System.ComponentModel.MaskedTextProvider.ToString*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: ToString
  nameWithType: MaskedTextProvider.ToString
- uid: System.ComponentModel.MaskedTextProvider.VerifyChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyChar
  nameWithType: MaskedTextProvider.VerifyChar
- uid: System.ComponentModel.MaskedTextProvider.VerifyEscapeChar*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyEscapeChar
  nameWithType: MaskedTextProvider.VerifyEscapeChar
- uid: System.ComponentModel.MaskedTextProvider.VerifyString*
  parent: System.ComponentModel.MaskedTextProvider
  isExternal: false
  name: VerifyString
  nameWithType: MaskedTextProvider.VerifyString
