### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.WellKnownClientTypeEntry
  id: WellKnownClientTypeEntry
  children:
  - System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor(System.Type,System.String)
  - System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor(System.String,System.String,System.String)
  - System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl
  - System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectType
  - System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectUrl
  - System.Runtime.Remoting.WellKnownClientTypeEntry.ToString
  langs:
  - csharp
  name: WellKnownClientTypeEntry
  nameWithType: WellKnownClientTypeEntry
  fullName: System.Runtime.Remoting.WellKnownClientTypeEntry
  type: Class
  summary: "Contiene i valori per un tipo di oggetto registrato sul client come tipo di server attivato (singola chiamata o singleton)."
  remarks: "Server-activated types can be either single call or singleton. If a class is registered as a single call type, a new instance is created each time a call from the client arrives. All calls to a singleton object are handled by one instance of that object, unless that object has been collected.  \n  \n Any client that knows the URI of a registered server-activated object can obtain a proxy for this object by registering the channel it prefers with <xref:System.Runtime.Remoting.Channels.ChannelServices> and activating the object by calling `new` or <xref:System.Activator.GetObject%2A?displayProperty=fullName>. To activate a server-activated object with `new`, you must first register the server-activated object type on the client using the <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A> method. By calling <xref:System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType%2A>, you are giving the remoting infrastructure the location of the remote object, which allows the `new` keyword to create it. If, on the other hand, you use the <xref:System.Activator.GetObject%2A?displayProperty=fullName> method to activate a server-activated object, you must supply it with the object's URL as an argument, so no prior registration on the client is necessary.  \n  \n For a detailed description of server-activated objects and remote object activation, see [&#91;\\<topic://cpconActivation>&#93;](http://msdn.microsoft.com/en-us/e90d0c64-00da-4080-ae78-a6c558825c25)."
  example:
  - >-
    [!code-vb[WellKnownClientTypeEntry_Client#1](~/add/codesnippet/visualbasic/t-system.runtime.remotin_57_1.vb)]
     [!code-cs[WellKnownClientTypeEntry_Client#1](~/add/codesnippet/csharp/t-system.runtime.remotin_57_1.cs)]
     [!code-cpp[WellKnownClientTypeEntry_Client#1](~/add/codesnippet/cpp/t-system.runtime.remotin_57_1.cpp)]
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class WellKnownClientTypeEntry : System.Runtime.Remoting.TypeEntry
  inheritance:
  - System.Object
  - System.Runtime.Remoting.TypeEntry
  implements: []
  inheritedMembers:
  - System.Runtime.Remoting.TypeEntry.AssemblyName
  - System.Runtime.Remoting.TypeEntry.TypeName
  platform:
  - net462
- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: System.Runtime.Remoting.WellKnownClientTypeEntry
  langs:
  - csharp
  name: WellKnownClientTypeEntry(Type,String)
  nameWithType: WellKnownClientTypeEntry.WellKnownClientTypeEntry(Type,String)
  fullName: System.Runtime.Remoting.WellKnownClientTypeEntry.WellKnownClientTypeEntry(Type,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Runtime.Remoting.WellKnownClientTypeEntry&quot;> </xref> classe con il tipo specificato e l&quot;URL."
  syntax:
    content: public WellKnownClientTypeEntry (Type type, string objectUrl);
    parameters:
    - id: type
      type: System.Type
      description: "Il <xref:System.Type>del tipo di server attivato.</xref:System.Type>"
    - id: objectUrl
      type: System.String
      description: "L&quot;URL del tipo di server attivato."
  overload: System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Runtime.Remoting.WellKnownClientTypeEntry
  langs:
  - csharp
  name: WellKnownClientTypeEntry(String,String,String)
  nameWithType: WellKnownClientTypeEntry.WellKnownClientTypeEntry(String,String,String)
  fullName: System.Runtime.Remoting.WellKnownClientTypeEntry.WellKnownClientTypeEntry(String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Runtime.Remoting.WellKnownClientTypeEntry&quot;> </xref> classe con il nome dell&quot;assembly, il tipo specificato e l&quot;URL."
  syntax:
    content: public WellKnownClientTypeEntry (string typeName, string assemblyName, string objectUrl);
    parameters:
    - id: typeName
      type: System.String
      description: "Il nome del tipo del tipo di server attivato."
    - id: assemblyName
      type: System.String
      description: "Il nome dell&quot;assembly del tipo di server attivato."
    - id: objectUrl
      type: System.String
      description: "L&quot;URL del tipo di server attivato."
  overload: System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl
  id: ApplicationUrl
  parent: System.Runtime.Remoting.WellKnownClientTypeEntry
  langs:
  - csharp
  name: ApplicationUrl
  nameWithType: WellKnownClientTypeEntry.ApplicationUrl
  fullName: System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Ottiene o imposta l&quot;URL dell&quot;applicazione per attivare il tipo."
  remarks: "L&quot;URL dell&quot;applicazione Ã¨ facoltativo e deve essere impostato per l&quot;URL dell&quot;applicazione corrispondente all&quot;oggetto server attivato."
  syntax:
    content: public string ApplicationUrl { get; set; }
    return:
      type: System.String
      description: "L&quot;URL dell&quot;applicazione per attivare il tipo."
  overload: System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectType
  id: ObjectType
  parent: System.Runtime.Remoting.WellKnownClientTypeEntry
  langs:
  - csharp
  name: ObjectType
  nameWithType: WellKnownClientTypeEntry.ObjectType
  fullName: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Ottiene il <xref:System.Type>del tipo di client attivato dal server.</xref:System.Type>"
  syntax:
    content: public Type ObjectType { get; }
    return:
      type: System.Type
      description: "Ottiene il <xref:System.Type>del tipo di client attivato dal server.</xref:System.Type>"
  overload: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectUrl
  id: ObjectUrl
  parent: System.Runtime.Remoting.WellKnownClientTypeEntry
  langs:
  - csharp
  name: ObjectUrl
  nameWithType: WellKnownClientTypeEntry.ObjectUrl
  fullName: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectUrl
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Ottiene l&quot;URL dell&quot;oggetto attivato dal server e client."
  syntax:
    content: public string ObjectUrl { get; }
    return:
      type: System.String
      description: "L&quot;URL dell&quot;oggetto attivato dal server e client."
  overload: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ToString
  id: ToString
  parent: System.Runtime.Remoting.WellKnownClientTypeEntry
  langs:
  - csharp
  name: ToString()
  nameWithType: WellKnownClientTypeEntry.ToString()
  fullName: System.Runtime.Remoting.WellKnownClientTypeEntry.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting
  summary: "Restituisce il nome completo del tipo, nome dell&quot;assembly e l&quot;URL dell&quot;oggetto del tipo di client attivato dal server come un <xref:System.String>.</xref:System.String>"
  remarks: "Se <xref:System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl%2A>non `null`, viene restituito alla fine della stringa.</xref:System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Il nome completo del tipo, nome dell&quot;assembly e l&quot;URL dell&quot;oggetto del tipo di client attivato dal server come un <xref:System.String>.</xref:System.String>"
  overload: System.Runtime.Remoting.WellKnownClientTypeEntry.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Remoting.TypeEntry
  isExternal: false
  name: System.Runtime.Remoting.TypeEntry
- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor(System.Type,System.String)
  parent: System.Runtime.Remoting.WellKnownClientTypeEntry
  isExternal: false
  name: WellKnownClientTypeEntry(Type,String)
  nameWithType: WellKnownClientTypeEntry.WellKnownClientTypeEntry(Type,String)
  fullName: System.Runtime.Remoting.WellKnownClientTypeEntry.WellKnownClientTypeEntry(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor(System.String,System.String,System.String)
  parent: System.Runtime.Remoting.WellKnownClientTypeEntry
  isExternal: false
  name: WellKnownClientTypeEntry(String,String,String)
  nameWithType: WellKnownClientTypeEntry.WellKnownClientTypeEntry(String,String,String)
  fullName: System.Runtime.Remoting.WellKnownClientTypeEntry.WellKnownClientTypeEntry(String,String,String)
- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl
  parent: System.Runtime.Remoting.WellKnownClientTypeEntry
  isExternal: false
  name: ApplicationUrl
  nameWithType: WellKnownClientTypeEntry.ApplicationUrl
  fullName: System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl
- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectType
  parent: System.Runtime.Remoting.WellKnownClientTypeEntry
  isExternal: false
  name: ObjectType
  nameWithType: WellKnownClientTypeEntry.ObjectType
  fullName: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectType
- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectUrl
  parent: System.Runtime.Remoting.WellKnownClientTypeEntry
  isExternal: false
  name: ObjectUrl
  nameWithType: WellKnownClientTypeEntry.ObjectUrl
  fullName: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectUrl
- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ToString
  parent: System.Runtime.Remoting.WellKnownClientTypeEntry
  isExternal: false
  name: ToString()
  nameWithType: WellKnownClientTypeEntry.ToString()
  fullName: System.Runtime.Remoting.WellKnownClientTypeEntry.ToString()
- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.#ctor*
  parent: System.Runtime.Remoting.WellKnownClientTypeEntry
  isExternal: false
  name: WellKnownClientTypeEntry
  nameWithType: WellKnownClientTypeEntry.WellKnownClientTypeEntry
- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ApplicationUrl*
  parent: System.Runtime.Remoting.WellKnownClientTypeEntry
  isExternal: false
  name: ApplicationUrl
  nameWithType: WellKnownClientTypeEntry.ApplicationUrl
- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectType*
  parent: System.Runtime.Remoting.WellKnownClientTypeEntry
  isExternal: false
  name: ObjectType
  nameWithType: WellKnownClientTypeEntry.ObjectType
- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ObjectUrl*
  parent: System.Runtime.Remoting.WellKnownClientTypeEntry
  isExternal: false
  name: ObjectUrl
  nameWithType: WellKnownClientTypeEntry.ObjectUrl
- uid: System.Runtime.Remoting.WellKnownClientTypeEntry.ToString*
  parent: System.Runtime.Remoting.WellKnownClientTypeEntry
  isExternal: false
  name: ToString
  nameWithType: WellKnownClientTypeEntry.ToString
