### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.ReliableSessionElement
  id: ReliableSessionElement
  children:
  - System.ServiceModel.Configuration.ReliableSessionElement.#ctor
  - System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
  - System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  - System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
  - System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  - System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement
  - System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
  - System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
  - System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  - System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
  - System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
  - System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
  - System.ServiceModel.Configuration.ReliableSessionElement.Ordered
  - System.ServiceModel.Configuration.ReliableSessionElement.Properties
  - System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
  langs:
  - csharp
  name: ReliableSessionElement
  nameWithType: ReliableSessionElement
  fullName: System.ServiceModel.Configuration.ReliableSessionElement
  type: Class
  summary: "Rappresenta l&quot;impostazione di configurazione per WS-Reliable Messaging."
  remarks: "Quando questo elemento viene aggiunto a un&quot;associazione personalizzata, il canale risultante può supportare esattamente-assicurazioni di recapito una volta."
  syntax:
    content: 'public sealed class ReliableSessionElement : System.ServiceModel.Configuration.BindingElementExtensionElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelExtensionElement
  - System.ServiceModel.Configuration.BindingElementExtensionElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: ReliableSessionElement()
  nameWithType: ReliableSessionElement.ReliableSessionElement()
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableSessionElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Configuration.ReliableSessionElement&quot;> </xref> classe."
  syntax:
    content: public ReliableSessionElement ();
    parameters: []
  overload: System.ServiceModel.Configuration.ReliableSessionElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
  id: AcknowledgementInterval
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: AcknowledgementInterval
  nameWithType: ReliableSessionElement.AcknowledgementInterval
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Ottiene o imposta l&quot;intervallo di tempo che una destinazione attende prima di inviare un acknowledgment all&quot;origine del messaggio sui canali affidabili creati dalla factory."
  syntax:
    content: public TimeSpan AcknowledgementInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "Oggetto <xref:System.TimeSpan>che specifica l&quot;intervallo di tempo che un servizio attende fino a quando invii un acknowledgment all&quot;origine del messaggio.</xref:System.TimeSpan> Il valore predefinito è 2 secondi."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  id: ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: ApplyConfiguration(BindingElement)
  nameWithType: ReliableSessionElement.ApplyConfiguration(BindingElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(BindingElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Applica il contenuto di un elemento di associazione specificato a questa sezione di configurazione di associazione."
  syntax:
    content: public override void ApplyConfiguration (System.ServiceModel.Channels.BindingElement bindingElement);
    parameters:
    - id: bindingElement
      type: System.ServiceModel.Channels.BindingElement
      description: "Un elemento di associazione."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
  id: BindingElementType
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: BindingElementType
  nameWithType: ReliableSessionElement.BindingElementType
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Ottiene il tipo di questo elemento di associazione."
  syntax:
    content: public override Type BindingElementType { get; }
    return:
      type: System.Type
      description: "Il tipo di questo elemento di associazione."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  id: CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Copia il contenuto della sezione di configurazione specificato in questa sezione di configurazione."
  syntax:
    content: public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);
    parameters:
    - id: from
      type: System.ServiceModel.Configuration.ServiceModelExtensionElement
      description: "La sezione di configurazione da copiare."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement
  id: CreateBindingElement
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: CreateBindingElement()
  nameWithType: ReliableSessionElement.CreateBindingElement()
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.ServiceModel.Channels.BindingElement CreateBindingElement ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: "Da aggiungere."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
  id: FlowControlEnabled
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: FlowControlEnabled
  nameWithType: ReliableSessionElement.FlowControlEnabled
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Ottiene o imposta un valore che indica se il controllo di flusso avanzato, un&quot;implementazione specifica di Microsoft del controllo di flusso per WS-Reliable messaging è attivato."
  syntax:
    content: public bool FlowControlEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo di flusso avanzato, un&quot;implementazione specifica di Microsoft del controllo di flusso per WS-Reliable messaging è attivato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
  id: InactivityTimeout
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: InactivityTimeout
  nameWithType: ReliableSessionElement.InactivityTimeout
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Ottiene o imposta un <xref:System.TimeSpan>valore che specifica la durata massima, il canale consente a altra parte della comunicazione di non inviare messaggi prima di generare un errore di canale.</xref:System.TimeSpan>"
  remarks: "Attività in un canale viene definita come ricezione di un messaggio di applicazione o dell&quot;infrastruttura. Questa proprietà controlla la quantità massima di tempo per mantenere attiva una sessione inattiva. Se è presente un periodo più lungo con alcuna attività, la sessione viene interrotta dall&quot;infrastruttura e il canale genera un errore."
  syntax:
    content: public TimeSpan InactivityTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Oggetto <xref:System.TimeSpan>valore che specifica la durata massima, il canale consente a altra parte della comunicazione di non inviare messaggi prima di generare un errore di canale.</xref:System.TimeSpan> Il valore predefinito è 00:10:00."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  id: InitializeFrom(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: InitializeFrom(BindingElement)
  nameWithType: ReliableSessionElement.InitializeFrom(BindingElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(BindingElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override void InitializeFrom (System.ServiceModel.Channels.BindingElement bindingElement);
    parameters:
    - id: bindingElement
      type: System.ServiceModel.Channels.BindingElement
      description: "Da aggiungere."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
  id: MaxPendingChannels
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: MaxPendingChannels
  nameWithType: ReliableSessionElement.MaxPendingChannels
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Ottiene o imposta il numero massimo di canali che possono attendere di essere accettati nel listener."
  remarks: "Questo valore deve essere un numero intero compreso tra 1 e 16384 inclusi.       I canali sono in sospeso quando attendono di essere accettati. Una volta raggiunto tale limite, non vengono creati canali. Invece, questi vengono impostati modalità sospesa finché questo numero non diminuisce (accettando i canali in sospeso). Questo limite è per ogni factory.       Quando viene raggiunta la soglia e un&quot;applicazione remota tenta di stabilire una nuova sessione affidabile, la richiesta è negata e l&quot;operazione di apertura che produce un errore di richiesta. Questo limite non si applica al numero di canali in uscita sospeso."
  syntax:
    content: public int MaxPendingChannels { get; set; }
    return:
      type: System.Int32
      description: "Il numero massimo di canali che possono attendere di essere accettati nel listener. Il valore predefinito è 128."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
  id: MaxRetryCount
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: MaxRetryCount
  nameWithType: ReliableSessionElement.MaxRetryCount
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Ottiene o imposta il numero massimo di volte in cui che un canale affidabile tenta di ritrasmissione di un messaggio che non ha ricevuto un acknowledgment, tramite una chiamata a Send sul canale sottostante."
  remarks: "Questo valore deve essere un numero intero maggiore di zero. Se non viene ricevuto un riconoscimento dopo l&quot;ultima ritrasmissione, il canale genera un errore.       Un messaggio è considerato trasferito se il recapito al destinatario viene riconosciuto dal destinatario.       Se non viene ricevuto un riconoscimento all&quot;interno di un determinato periodo di tempo per un messaggio che è stato trasmesso, l&quot;infrastruttura lo ritrasmette automaticamente. L&quot;infrastruttura tenta a reinviare il messaggio per, al massimo il numero di volte specificato da questa proprietà. Se non viene ricevuto un riconoscimento dopo l&quot;ultima ritrasmissione, il canale genera un errore.       L&quot;infrastruttura Usa un algoritmo di backoff esponenziale per determinare quando ritrasmettere, in base a un tempo di round trip medio calcolato. Il periodo parte inizialmente 1 secondo prima della ritrasmissione raddoppiando il ritardo con ogni tentativo, determinando di circa 8,5 minuti tra il primo tentativo di trasmissione e l&quot;ultimo tentativo di ritrasmissione. L&quot;ora del primo tentativo di ritrasmissione viene regolato in base al tempo di andata e ritorno calcolato e l&quot;adattamento temporale richiesto da tali tentativi varia di conseguenza. In questo modo il tempo di ritrasmissione di adattarsi dinamicamente alle mutevoli condizioni della rete."
  syntax:
    content: public int MaxRetryCount { get; set; }
    return:
      type: System.Int32
      description: "Il numero massimo di volte in cui per che un canale affidabile tentativi di ritrasmissione di un messaggio che non ha ricevuto un acknowledgment, tramite la chiamata Invia sul canale sottostante. Il valore minimo è 1. il valore massimo è 20 e il valore predefinito è 8."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
  id: MaxTransferWindowSize
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionElement.MaxTransferWindowSize
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Ottiene o imposta la dimensione massima del buffer."
  remarks: "Nel client, questa proprietà definisce la dimensione massima del buffer utilizzato da un canale affidabile per contenere i messaggi non riconosciuti dal ricevitore. L&quot;unità della quota è un messaggio. Se il buffer è pieno, ulteriori operazioni Sned vengono bloccate.       Sul ricevitore, questa proprietà definisce la dimensione massima del buffer utilizzato dal canale per memorizzare i messaggi non ancora inviati all&quot;applicazione. Se il buffer è pieno, ulteriori messaggi vengono rilasciati silenziosamente dal ricevitore e richiedono la ritrasmissione dal client."
  syntax:
    content: public int MaxTransferWindowSize { get; set; }
    return:
      type: System.Int32
      description: "La dimensione massima del buffer. I valori validi sono compresi tra 1 e 4096 inclusi."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Ordered
  id: Ordered
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: Ordered
  nameWithType: ReliableSessionElement.Ordered
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Ordered
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Ottiene o imposta un valore che specifica se i messaggi sono garantiti l&quot;arrivo nell&quot;ordine in che cui sono stati inviati."
  syntax:
    content: public bool Ordered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i messaggi sono garantiti l&quot;arrivo nell&quot;ordine in che cui sono stati inviati. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se i messaggi possono arrivare senza ordine. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.Ordered*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: Properties
  nameWithType: ReliableSessionElement.Properties
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Properties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Da aggiungere."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
  id: ReliableMessagingVersion
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionElement.ReliableMessagingVersion
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Ottiene o imposta la versione di WS-ReliableMessaging specificata dall&quot;elemento di configurazione."
  remarks: 'Esistono attualmente due versioni del protocollo WS-ReliableMessaging supportate da [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]: WS-ReliableMessaging&1;.1 e WS-ReliableMessagingFebruary2005. La versione predefinita è WS-ReliableMessagingFebruary2005.'
  syntax:
    content: public System.ServiceModel.ReliableMessagingVersion ReliableMessagingVersion { get; set; }
    return:
      type: System.ServiceModel.ReliableMessagingVersion
      description: "Istanza derivata da <xref href=&quot;System.ServiceModel.ReliableMessagingVersion&quot;> </xref> che rappresenta la versione del protocollo WS-ReliableMessaging utilizzato dall&quot;elemento di configurazione."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Configuration.BindingElementExtensionElement
  isExternal: false
  name: System.ServiceModel.Configuration.BindingElementExtensionElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.#ctor
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ReliableSessionElement()
  nameWithType: ReliableSessionElement.ReliableSessionElement()
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableSessionElement()
- uid: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: AcknowledgementInterval
  nameWithType: ReliableSessionElement.AcknowledgementInterval
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ApplyConfiguration(BindingElement)
  nameWithType: ReliableSessionElement.ApplyConfiguration(BindingElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(BindingElement)
- uid: System.ServiceModel.Channels.BindingElement
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: BindingElementType
  nameWithType: ReliableSessionElement.BindingElementType
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)
- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ServiceModelExtensionElement
  nameWithType: ServiceModelExtensionElement
  fullName: System.ServiceModel.Configuration.ServiceModelExtensionElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: CreateBindingElement()
  nameWithType: ReliableSessionElement.CreateBindingElement()
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement()
- uid: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: FlowControlEnabled
  nameWithType: ReliableSessionElement.FlowControlEnabled
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSessionElement.InactivityTimeout
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: InitializeFrom(BindingElement)
  nameWithType: ReliableSessionElement.InitializeFrom(BindingElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(BindingElement)
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxPendingChannels
  nameWithType: ReliableSessionElement.MaxPendingChannels
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxRetryCount
  nameWithType: ReliableSessionElement.MaxRetryCount
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionElement.MaxTransferWindowSize
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Ordered
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: Ordered
  nameWithType: ReliableSessionElement.Ordered
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Ordered
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Properties
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: Properties
  nameWithType: ReliableSessionElement.Properties
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionElement.ReliableMessagingVersion
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
- uid: System.ServiceModel.ReliableMessagingVersion
  parent: System.ServiceModel
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableMessagingVersion
  fullName: System.ServiceModel.ReliableMessagingVersion
- uid: System.ServiceModel.Configuration.ReliableSessionElement.#ctor*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ReliableSessionElement
  nameWithType: ReliableSessionElement.ReliableSessionElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: AcknowledgementInterval
  nameWithType: ReliableSessionElement.AcknowledgementInterval
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ApplyConfiguration
  nameWithType: ReliableSessionElement.ApplyConfiguration
- uid: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: BindingElementType
  nameWithType: ReliableSessionElement.BindingElementType
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: CopyFrom
  nameWithType: ReliableSessionElement.CopyFrom
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: CreateBindingElement
  nameWithType: ReliableSessionElement.CreateBindingElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: FlowControlEnabled
  nameWithType: ReliableSessionElement.FlowControlEnabled
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSessionElement.InactivityTimeout
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: InitializeFrom
  nameWithType: ReliableSessionElement.InitializeFrom
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxPendingChannels
  nameWithType: ReliableSessionElement.MaxPendingChannels
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxRetryCount
  nameWithType: ReliableSessionElement.MaxRetryCount
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionElement.MaxTransferWindowSize
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Ordered*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: Ordered
  nameWithType: ReliableSessionElement.Ordered
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Properties*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: Properties
  nameWithType: ReliableSessionElement.Properties
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionElement.ReliableMessagingVersion
