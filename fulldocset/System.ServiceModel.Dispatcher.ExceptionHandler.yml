### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.ExceptionHandler
  id: ExceptionHandler
  children:
  - System.ServiceModel.Dispatcher.ExceptionHandler.#ctor
  - System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle
  - System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler
  - System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)
  - System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler
  langs:
  - csharp
  name: ExceptionHandler
  nameWithType: ExceptionHandler
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler
  type: Class
  summary: "Estendere la classe ExceptionHandler per creare un gestore di eccezioni per le eccezioni non gestite che si verificano all&quot;interno di [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] runtime."
  remarks: "Estendere la classe ExceptionHandler ed eseguire l&quot;override di <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A>metodo per determinare se un&quot;eccezione deve terminare l&quot;applicazione.</xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> Quindi creare una nuova istanza della classe ExceptionHandler personalizzata e assegnarla alla proprietà statica <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A>o <xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A>proprietà prima di creare [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] client o servizi.</xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A> </xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A>"
  example:
  - "The following code example shows an implementation of the ExceptionHandler abstract class that overrides the <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> method.  \n  \n [!code-cs[S_UEExceptionHandler#0](~/add/codesnippet/csharp/s_ueexceptionhandler.cs/program.cs#0)]\n [!code-vb[S_UEExceptionHandler#0](~/add/codesnippet/visualbasic/s_ueexceptionhandler.cs/module1.vb#0)]  \n  \n The following code example shows how to enable the custom `MyExceptionHandler` for unhandled exceptions that occur within the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] runtime.  \n  \n [!code-cs[S_UEExceptionHandler#1](~/add/codesnippet/csharp/s_ueexceptionhandler.cs/program.cs#1)]\n [!code-vb[S_UEExceptionHandler#1](~/add/codesnippet/visualbasic/s_ueexceptionhandler.cs/module1.vb#1)]"
  syntax:
    content: public abstract class ExceptionHandler
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  langs:
  - csharp
  name: ExceptionHandler()
  nameWithType: ExceptionHandler.ExceptionHandler()
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.ExceptionHandler()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Dispatcher.ExceptionHandler&quot;> </xref> classe."
  syntax:
    content: protected ExceptionHandler ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ExceptionHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle
  id: AlwaysHandle
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  langs:
  - csharp
  name: AlwaysHandle
  nameWithType: ExceptionHandler.AlwaysHandle
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Ottiene un&quot;istanza di <xref href=&quot;System.ServiceModel.Dispatcher.ExceptionHandler&quot;> </xref> che gestisce tutte le eccezioni."
  syntax:
    content: public static System.ServiceModel.Dispatcher.ExceptionHandler AlwaysHandle { get; }
    return:
      type: System.ServiceModel.Dispatcher.ExceptionHandler
      description: "Un <xref href=&quot;System.ServiceModel.Dispatcher.ExceptionHandler&quot;> </xref> oggetto restituito da <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> per tutte le eccezioni."
  overload: System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler
  id: AsynchronousThreadExceptionHandler
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  langs:
  - csharp
  name: AsynchronousThreadExceptionHandler
  nameWithType: ExceptionHandler.AsynchronousThreadExceptionHandler
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Ottiene o imposta l&quot;oggetto corrente <xref href=&quot;System.ServiceModel.Dispatcher.ExceptionHandler&quot;> </xref> implementazione per il dominio applicazione."
  remarks: "Per impostazione predefinita, la proprietà AsynchronousThreadExceptionHandler è `null`e non gestite in asincrona [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] thread termina l&quot;applicazione.  Impostare questa proprietà su un <xref:System.ServiceModel.Dispatcher.ExceptionHandler>oggetto per ricevere e reagire a queste eccezioni.</xref:System.ServiceModel.Dispatcher.ExceptionHandler>       Se si verifica un&quot;eccezione non gestita in asincrono [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] thread e raggiunge il gestore, lo stato del dominio dell&quot;applicazione potrebbe essere compromessa.  <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A>non deve restituire `true` per le eccezioni.</xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A>"
  syntax:
    content: public static System.ServiceModel.Dispatcher.ExceptionHandler AsynchronousThreadExceptionHandler { get; set; }
    return:
      type: System.ServiceModel.Dispatcher.ExceptionHandler
      description: "Assegnare un oggetto personalizzato <xref href=&quot;System.ServiceModel.Dispatcher.ExceptionHandler&quot;> </xref> oggetto che riceve eccezioni non gestite che si verificano in asincrona [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] thread."
  overload: System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)
  id: HandleException(System.Exception)
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  langs:
  - csharp
  name: HandleException(Exception)
  nameWithType: ExceptionHandler.HandleException(Exception)
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(Exception)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Quando sottoposto a override in una classe derivata, restituisce <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se è stata gestita l&quot;eccezione, o <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se l&quot;eccezione deve essere rigenerata e l&quot;applicazione terminata."
  remarks: "La proprietà restituisce HandleException `true` se è stata gestita l&quot;eccezione. Se restituisce `false` o genera un&quot;eccezione diversa, l&quot;eccezione originale viene generata nuovamente."
  example:
  - "The following code example shows an implementation of the <xref:System.ServiceModel.Dispatcher.ExceptionHandler> abstract class that overrides the HandleException method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following code example shows how to enable the custom `MyExceptionHandler` for unhandled exceptions that occur within the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] runtime.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public abstract bool HandleException (Exception exception);
    parameters:
    - id: exception
      type: System.Exception
      description: "L&quot;eccezione si è verificata all&quot;interno di [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] runtime e che può terminare l&quot;applicazione."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;eccezione è stata gestita; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.ExceptionHandler.HandleException*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler
  id: TransportExceptionHandler
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  langs:
  - csharp
  name: TransportExceptionHandler
  nameWithType: ExceptionHandler.TransportExceptionHandler
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Ottiene o imposta il trasporto corrente <xref href=&quot;System.ServiceModel.Dispatcher.ExceptionHandler&quot;> </xref> implementazione per il dominio applicazione."
  remarks: "Per impostazione predefinita, la proprietà TransportExceptionHandler è impostata sul valore di <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle%2A>, provocando eccezioni non gestite all&quot;interno di [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] trasporti verrà ignorato.</xref:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle%2A>  Impostare questa proprietà su un&quot;istanza di <xref:System.ServiceModel.Dispatcher.ExceptionHandler>per ricevere e reagire a queste eccezioni.</xref:System.ServiceModel.Dispatcher.ExceptionHandler>       Se si verifica un&quot;eccezione non gestita all&quot;interno di un elemento globale [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] di trasporto e raggiunge il gestore, è possibile che lo stato del dominio dell&quot;applicazione sia compromessa. <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A>può restituire `false` per le eccezioni per l&quot;applicazione verrà terminata.</xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A>"
  syntax:
    content: public static System.ServiceModel.Dispatcher.ExceptionHandler TransportExceptionHandler { get; set; }
    return:
      type: System.ServiceModel.Dispatcher.ExceptionHandler
      description: "Un oggetto personalizzato <xref href=&quot;System.ServiceModel.Dispatcher.ExceptionHandler&quot;> </xref> oggetto che riceve eccezioni non gestite che si verificano all&quot;interno di globale [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] trasporti."
  overload: System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.#ctor
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: ExceptionHandler()
  nameWithType: ExceptionHandler.ExceptionHandler()
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.ExceptionHandler()
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: AlwaysHandle
  nameWithType: ExceptionHandler.AlwaysHandle
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle
- uid: System.ServiceModel.Dispatcher.ExceptionHandler
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: ExceptionHandler
  nameWithType: ExceptionHandler
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: AsynchronousThreadExceptionHandler
  nameWithType: ExceptionHandler.AsynchronousThreadExceptionHandler
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: HandleException(Exception)
  nameWithType: ExceptionHandler.HandleException(Exception)
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(Exception)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: TransportExceptionHandler
  nameWithType: ExceptionHandler.TransportExceptionHandler
  fullName: System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.#ctor*
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: ExceptionHandler
  nameWithType: ExceptionHandler.ExceptionHandler
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle*
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: AlwaysHandle
  nameWithType: ExceptionHandler.AlwaysHandle
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler*
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: AsynchronousThreadExceptionHandler
  nameWithType: ExceptionHandler.AsynchronousThreadExceptionHandler
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.HandleException*
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: HandleException
  nameWithType: ExceptionHandler.HandleException
- uid: System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler*
  parent: System.ServiceModel.Dispatcher.ExceptionHandler
  isExternal: false
  name: TransportExceptionHandler
  nameWithType: ExceptionHandler.TransportExceptionHandler
