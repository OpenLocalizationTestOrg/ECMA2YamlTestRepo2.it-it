### YamlMime:ManagedReference
items:
- uid: System.Drawing.BufferedGraphics
  id: BufferedGraphics
  children:
  - System.Drawing.BufferedGraphics.Dispose
  - System.Drawing.BufferedGraphics.Finalize
  - System.Drawing.BufferedGraphics.Graphics
  - System.Drawing.BufferedGraphics.Render
  - System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)
  - System.Drawing.BufferedGraphics.Render(System.IntPtr)
  langs:
  - csharp
  name: BufferedGraphics
  nameWithType: BufferedGraphics
  fullName: System.Drawing.BufferedGraphics
  type: Class
  summary: "Fornisce un buffer di grafica per il doppio buffer."
  remarks: "BufferedGraphics (classe) consente di implementare il doppio buffer personalizzato per le immagini. Fornisce un wrapper per un buffer di grafica, insieme ai metodi che è possibile utilizzare per scrivere nel buffer ed eseguire il rendering del contenuto in un dispositivo di output.       Le immagini che utilizzano il doppio buffer possono ridurre o eliminare lo sfarfallio causato da ridisegnare una superficie di visualizzazione. Quando si usa il doppio buffer, grafica aggiornata prima viene disegnati in un buffer in memoria e il contenuto di questo buffer viene quindi scritti per alcuni o tutti superficie visualizzata rapidamente. In genere, tale sovrascrittura relativamente breve della grafica visualizzata consente di ridurre o Elimina lo sfarfallio che talvolta si verifica quando le immagini vengono aggiornate.      > [!NOTE] > Il modo più semplice per utilizzare il doppio buffer consiste nell&quot;impostare il <xref:System.Windows.Forms.ControlStyles>controllare il flag di stile per un controllo mediante il <xref:System.Windows.Forms.Control.SetStyle%2A>metodo.</xref:System.Windows.Forms.Control.SetStyle%2A> </xref:System.Windows.Forms.ControlStyles> L&quot;impostazione di <xref:System.Windows.Forms.ControlStyles>flag per un controllo reindirizza tutti i disegni per il controllo tramite un buffer grafico predefinito, senza richiedere alcun codice aggiuntivo.</xref:System.Windows.Forms.ControlStyles> Questo flag è impostato su `true` per impostazione predefinita.       BufferedGraphics (classe) non dispone di alcun costruttore pubblico e deve essere creata dal <xref:System.Drawing.BufferedGraphicsContext>per un dominio applicazione con il relativo <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>metodo.</xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> </xref:System.Drawing.BufferedGraphicsContext> È possibile recuperare il <xref:System.Drawing.BufferedGraphicsContext>per il dominio applicazione corrente da statico <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName>proprietà.</xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=fullName> </xref:System.Drawing.BufferedGraphicsContext>       Il <xref:System.Drawing.BufferedGraphics.Graphics%2A>proprietà può essere utilizzata per disegnare la grafica nel buffer.</xref:System.Drawing.BufferedGraphics.Graphics%2A> Questa proprietà fornisce l&quot;accesso per il <xref:System.Drawing.Graphics>oggetto che scrive nel buffer grafico allocato per questo oggetto BufferedGraphics.</xref:System.Drawing.Graphics>       Il <xref:System.Drawing.BufferedGraphics.Render%2A>metodo con nessun disegna argomenti nel buffer il contenuto degli elementi grafici all&quot;area di specificato quando il buffer allocato.</xref:System.Drawing.BufferedGraphics.Render%2A> Altri overload di <xref:System.Drawing.BufferedGraphics.Render%2A>metodo consentono di specificare un <xref:System.Drawing.Graphics>oggetto o un <xref:System.IntPtr>oggetto che punta a un contesto di dispositivo sul quale disegnare il contenuto del buffer grafico.</xref:System.IntPtr> </xref:System.Drawing.Graphics> </xref:System.Drawing.BufferedGraphics.Render%2A>       Per ulteriori informazioni sulla grafica a doppio buffer, vedere [grafica a doppio buffer](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates using a BufferedGraphics object to draw graphics using several types of buffering implementations. Clicking the form alternately starts and stops a timer that causes draw updates. The draw updates allow you to observe the effect of double buffering. Right-clicking the form cycles through the following drawing modes:  \n  \n-   Drawing directly to the <xref:System.Windows.Forms.Control.Handle%2A> for a <xref:System.Windows.Forms.Form>.  \n  \n-   Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method using the <xref:System.Windows.Forms.ControlStyles> control style.  \n  \n-   Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method for the form method without using the <xref:System.Windows.Forms.ControlStyles> control style.  \n  \n In each mode, text is drawn that identifies the current mode and describes the behavior that occurs when each mouse button is pressed.  \n  \n [!code-cpp[BufferedGraphicsExample#1](~/add/codesnippet/cpp/t-system.drawing.buffere_1_1.cpp)]\n [!code-cs[BufferedGraphicsExample#1](~/add/codesnippet/csharp/t-system.drawing.buffere_1_1.cs)]\n [!code-vb[BufferedGraphicsExample#1](~/add/codesnippet/visualbasic/t-system.drawing.buffere_1_1.vb)]"
  syntax:
    content: 'public sealed class BufferedGraphics : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Dispose
  id: Dispose
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Dispose()
  nameWithType: BufferedGraphics.Dispose()
  fullName: System.Drawing.BufferedGraphics.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Rilascia tutte le risorse usate dal <xref href=&quot;System.Drawing.BufferedGraphics&quot;> </xref> oggetto."
  remarks: "Chiamare il metodo Dispose al termine usando il <xref:System.Drawing.BufferedGraphics>oggetto.</xref:System.Drawing.BufferedGraphics> Il metodo Dispose lascia il <xref:System.Drawing.BufferedGraphics>oggetto in uno stato inutilizzabile.</xref:System.Drawing.BufferedGraphics> Dopo aver chiamato Dispose, è necessario rilasciare tutti i riferimenti al <xref:System.Drawing.BufferedGraphics>dell&quot;oggetto in modo che il garbage collector può recuperare la memoria che di <xref:System.Drawing.BufferedGraphics>oggetto occupata.</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphics> Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md) e [implementazione di un metodo Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Chiamare sempre Dispose prima di rilasciare l&quot;ultimo riferimento al <xref:System.Drawing.BufferedGraphics>oggetto.</xref:System.Drawing.BufferedGraphics> In caso contrario, le risorse non vengono liberate finché il garbage collector chiama la <xref:System.Drawing.BufferedGraphics>dell&quot;oggetto `Finalize` metodo.</xref:System.Drawing.BufferedGraphics>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.BufferedGraphics.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Finalize
  id: Finalize
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Finalize()
  nameWithType: BufferedGraphics.Finalize()
  fullName: System.Drawing.BufferedGraphics.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Consente a un oggetto tentare di liberare risorse ed eseguire altre operazioni di pulizia prima che venga recuperato da garbage collection."
  syntax:
    content: ~BufferedGraphics ();
    parameters: []
  overload: System.Drawing.BufferedGraphics.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Graphics
  id: Graphics
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Graphics
  nameWithType: BufferedGraphics.Graphics
  fullName: System.Drawing.BufferedGraphics.Graphics
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Ottiene un <xref href=&quot;System.Drawing.Graphics&quot;> </xref> oggetto con output nel buffer grafico."
  remarks: "Questa proprietà fornisce un <xref:System.Drawing.Graphics>Disegna nel buffer grafico allocato per questo oggetto <xref:System.Drawing.BufferedGraphics>oggetto.</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.Graphics>"
  syntax:
    content: public System.Drawing.Graphics Graphics { get; }
    return:
      type: System.Drawing.Graphics
      description: "Oggetto <xref href=&quot;System.Drawing.Graphics&quot;> </xref> oggetto con output nel buffer grafico."
  overload: System.Drawing.BufferedGraphics.Graphics*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Render
  id: Render
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Render()
  nameWithType: BufferedGraphics.Render()
  fullName: System.Drawing.BufferedGraphics.Render()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Scrive il contenuto del buffer grafico nel dispositivo predefinito."
  remarks: "Questo metodo scrive il contenuto del buffer grafico nel dispositivo specificato chiamando il <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>metodo il <xref:System.Drawing.BufferedGraphicsContext>usato per creare questa <xref:System.Drawing.BufferedGraphics>oggetto.</xref:System.Drawing.BufferedGraphics> </xref:System.Drawing.BufferedGraphicsContext> </xref:System.Drawing.BufferedGraphicsContext.Allocate%2A>"
  syntax:
    content: public void Render ();
    parameters: []
  overload: System.Drawing.BufferedGraphics.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)
  id: Render(System.Drawing.Graphics)
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Render(Graphics)
  nameWithType: BufferedGraphics.Render(Graphics)
  fullName: System.Drawing.BufferedGraphics.Render(Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Scrive il contenuto del buffer grafico specificato <xref href=&quot;System.Drawing.Graphics&quot;> </xref> oggetto."
  remarks: "Questo metodo scrive il contenuto del buffer grafico specificato <xref:System.Drawing.Graphics>oggetto.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example demonstrates rendering the contents of the graphics buffer to a specified <xref:System.Drawing.Graphics> object. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#5](~/add/codesnippet/csharp/m-system.drawing.buffere_1_1.cs)]\n [!code-cpp[BufferingExamples#5](~/add/codesnippet/cpp/m-system.drawing.buffere_1_1.cpp)]\n [!code-vb[BufferingExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.buffere_1_1.vb)]"
  syntax:
    content: public void Render (System.Drawing.Graphics target);
    parameters:
    - id: target
      type: System.Drawing.Graphics
      description: "Oggetto <xref href=&quot;System.Drawing.Graphics&quot;> </xref> oggetto in cui scrivere il contenuto del buffer grafico."
  overload: System.Drawing.BufferedGraphics.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.BufferedGraphics.Render(System.IntPtr)
  id: Render(System.IntPtr)
  parent: System.Drawing.BufferedGraphics
  langs:
  - csharp
  name: Render(IntPtr)
  nameWithType: BufferedGraphics.Render(IntPtr)
  fullName: System.Drawing.BufferedGraphics.Render(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Scrive il contenuto del buffer grafico nel contesto di dispositivo associato all&quot;oggetto specificato <xref:System.IntPtr>gestire.</xref:System.IntPtr>"
  remarks: "Questo metodo scrive il contenuto del buffer grafico nel contesto di dispositivo associato all&quot;oggetto specificato <xref:System.IntPtr>gestire.</xref:System.IntPtr>"
  example:
  - "The following code example demonstrates how to render the contents of the graphics buffer `grafx` to a specified device context. This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.  \n  \n [!code-cs[BufferingExamples#6](~/add/codesnippet/csharp/m-system.drawing.buffere_0_1.cs)]\n [!code-cpp[BufferingExamples#6](~/add/codesnippet/cpp/m-system.drawing.buffere_0_1.cpp)]\n [!code-vb[BufferingExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.buffere_0_1.vb)]"
  syntax:
    content: public void Render (IntPtr targetDC);
    parameters:
    - id: targetDC
      type: System.IntPtr
      description: "Un <xref:System.IntPtr>che punta al contesto di dispositivo in cui scrivere il contenuto del buffer grafico.</xref:System.IntPtr>"
  overload: System.Drawing.BufferedGraphics.Render*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Drawing.BufferedGraphics.Dispose
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Dispose()
  nameWithType: BufferedGraphics.Dispose()
  fullName: System.Drawing.BufferedGraphics.Dispose()
- uid: System.Drawing.BufferedGraphics.Finalize
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Finalize()
  nameWithType: BufferedGraphics.Finalize()
  fullName: System.Drawing.BufferedGraphics.Finalize()
- uid: System.Drawing.BufferedGraphics.Graphics
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Graphics
  nameWithType: BufferedGraphics.Graphics
  fullName: System.Drawing.BufferedGraphics.Graphics
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.BufferedGraphics.Render
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Render()
  nameWithType: BufferedGraphics.Render()
  fullName: System.Drawing.BufferedGraphics.Render()
- uid: System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Render(Graphics)
  nameWithType: BufferedGraphics.Render(Graphics)
  fullName: System.Drawing.BufferedGraphics.Render(Graphics)
- uid: System.Drawing.BufferedGraphics.Render(System.IntPtr)
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Render(IntPtr)
  nameWithType: BufferedGraphics.Render(IntPtr)
  fullName: System.Drawing.BufferedGraphics.Render(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.BufferedGraphics.Dispose*
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Dispose
  nameWithType: BufferedGraphics.Dispose
- uid: System.Drawing.BufferedGraphics.Finalize*
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Finalize
  nameWithType: BufferedGraphics.Finalize
- uid: System.Drawing.BufferedGraphics.Graphics*
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Graphics
  nameWithType: BufferedGraphics.Graphics
- uid: System.Drawing.BufferedGraphics.Render*
  parent: System.Drawing.BufferedGraphics
  isExternal: false
  name: Render
  nameWithType: BufferedGraphics.Render
