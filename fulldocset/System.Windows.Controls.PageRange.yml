### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.PageRange
  id: PageRange
  children:
  - System.Windows.Controls.PageRange.#ctor(System.Int32)
  - System.Windows.Controls.PageRange.#ctor(System.Int32,System.Int32)
  - System.Windows.Controls.PageRange.Equals(System.Object)
  - System.Windows.Controls.PageRange.Equals(System.Windows.Controls.PageRange)
  - System.Windows.Controls.PageRange.GetHashCode
  - System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)
  - System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)
  - System.Windows.Controls.PageRange.PageFrom
  - System.Windows.Controls.PageRange.PageTo
  - System.Windows.Controls.PageRange.ToString
  langs:
  - csharp
  name: PageRange
  nameWithType: PageRange
  fullName: System.Windows.Controls.PageRange
  type: Struct
  summary: "Specifica un intervallo di pagine."
  remarks: "PageRange definisce un intervallo di pagine che devono essere elaborati in un&quot;operazione, ad esempio la stampa."
  syntax:
    content: public struct PageRange
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: PageRange(Int32)
  nameWithType: PageRange.PageRange(Int32)
  fullName: System.Windows.Controls.PageRange.PageRange(Int32)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> classe che include solo la singola pagina specificata."
  remarks: "Il `page` valore del parametro è basato su 1, il numero di pagina 1 è la prima pagina."
  syntax:
    content: public PageRange (int page);
    parameters:
    - id: page
      type: System.Int32
      description: "Pagina stampata o elaborata."
  overload: System.Windows.Controls.PageRange.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: PageRange(Int32,Int32)
  nameWithType: PageRange.PageRange(Int32,Int32)
  fullName: System.Windows.Controls.PageRange.PageRange(Int32,Int32)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> classe con la prima e ultima pagina."
  remarks: "Il `pageFrom` e `PageTo` i valori di parametro sono basati su 1, il numero di pagina 1 è la prima pagina.       Poiché l&quot;intervallo include sia il &quot;da&quot; e &quot;a&quot; pagine, il numero totale di pagine è &quot;<xref:System.Windows.Controls.PageRange.PageTo%2A> - <xref:System.Windows.Controls.PageRange.PageFrom%2A>+ 1&quot;.</xref:System.Windows.Controls.PageRange.PageFrom%2A> </xref:System.Windows.Controls.PageRange.PageTo%2A>"
  syntax:
    content: public PageRange (int pageFrom, int pageTo);
    parameters:
    - id: pageFrom
      type: System.Int32
      description: "La prima pagina dell&quot;intervallo."
    - id: pageTo
      type: System.Int32
      description: "L&quot;ultima pagina dell&quot;intervallo."
  overload: System.Windows.Controls.PageRange.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: PageRange.Equals(Object)
  fullName: System.Windows.Controls.PageRange.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Verifica se un oggetto di tipo sconosciuto è uguale a <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref>."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto sottoposto a test."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto è di tipo <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> ed è uguale all&quot;oggetto <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.PageRange.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.Equals(System.Windows.Controls.PageRange)
  id: Equals(System.Windows.Controls.PageRange)
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: Equals(PageRange)
  nameWithType: PageRange.Equals(PageRange)
  fullName: System.Windows.Controls.PageRange.Equals(PageRange)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Test se un <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> è uguale a <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref>."
  syntax:
    content: public bool Equals (System.Windows.Controls.PageRange pageRange);
    parameters:
    - id: pageRange
      type: System.Windows.Controls.PageRange
      description: "Il <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> testato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i due <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> oggetti sono uguali; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.PageRange.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.GetHashCode
  id: GetHashCode
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: PageRange.GetHashCode()
  fullName: System.Windows.Controls.PageRange.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Ottiene il valore del codice hash per il <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Il valore del codice hash per il <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref>."
  overload: System.Windows.Controls.PageRange.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)
  id: op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: op_Equality(PageRange,PageRange)
  nameWithType: PageRange.op_Equality(PageRange,PageRange)
  fullName: System.Windows.Controls.PageRange.op_Equality(PageRange,PageRange)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Definisce l&quot;operatore &quot;= =&quot; per verificare se due specificate <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> oggetti sono uguali."
  syntax:
    content: public static bool op_Equality (System.Windows.Controls.PageRange pr1, System.Windows.Controls.PageRange pr2);
    parameters:
    - id: pr1
      type: System.Windows.Controls.PageRange
      description: "Il primo <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref>."
    - id: pr2
      type: System.Windows.Controls.PageRange
      description: "Il secondo <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i due <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> oggetti sono uguali; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.PageRange.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)
  id: op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: op_Inequality(PageRange,PageRange)
  nameWithType: PageRange.op_Inequality(PageRange,PageRange)
  fullName: System.Windows.Controls.PageRange.op_Inequality(PageRange,PageRange)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Definisce il &quot;! =&quot; operatore per verificare se due specificate <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> sono oggetti *non* uguale."
  syntax:
    content: public static bool op_Inequality (System.Windows.Controls.PageRange pr1, System.Windows.Controls.PageRange pr2);
    parameters:
    - id: pr1
      type: System.Windows.Controls.PageRange
      description: "Il primo <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref>."
    - id: pr2
      type: System.Windows.Controls.PageRange
      description: "Il secondo <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i due <xref href=&quot;System.Windows.Controls.PageRange&quot;> </xref> sono oggetti *non* uguali; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.PageRange.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.PageFrom
  id: PageFrom
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: PageFrom
  nameWithType: PageRange.PageFrom
  fullName: System.Windows.Controls.PageRange.PageFrom
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Ottiene o imposta il numero di pagina della prima pagina nell&quot;intervallo."
  remarks: "La proprietà PageFrom è in base 1. numero di pagina 1 è la prima pagina."
  syntax:
    content: public int PageFrom { get; set; }
    return:
      type: System.Int32
      description: "Il numero di pagina in base 1 della prima pagina nell&quot;intervallo."
  overload: System.Windows.Controls.PageRange.PageFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.PageTo
  id: PageTo
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: PageTo
  nameWithType: PageRange.PageTo
  fullName: System.Windows.Controls.PageRange.PageTo
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Ottiene o imposta il numero di pagina dell&quot;ultima pagina nell&quot;intervallo."
  remarks: "La proprietà PageTo è in base 1. numero di pagina 1 è la prima pagina."
  syntax:
    content: public int PageTo { get; set; }
    return:
      type: System.Int32
      description: "Il numero di pagina in base 1 dell&quot;ultima pagina nell&quot;intervallo."
  overload: System.Windows.Controls.PageRange.PageTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.PageRange.ToString
  id: ToString
  parent: System.Windows.Controls.PageRange
  langs:
  - csharp
  name: ToString()
  nameWithType: PageRange.ToString()
  fullName: System.Windows.Controls.PageRange.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Ottiene una rappresentazione di stringa dell&quot;intervallo."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Stringa che rappresenta l&quot;intervallo di pagine nel formato &quot;<>*>`-`<>*>&quot;."
  overload: System.Windows.Controls.PageRange.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Controls.PageRange.#ctor(System.Int32)
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: PageRange(Int32)
  nameWithType: PageRange.PageRange(Int32)
  fullName: System.Windows.Controls.PageRange.PageRange(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.PageRange.#ctor(System.Int32,System.Int32)
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: PageRange(Int32,Int32)
  nameWithType: PageRange.PageRange(Int32,Int32)
  fullName: System.Windows.Controls.PageRange.PageRange(Int32,Int32)
- uid: System.Windows.Controls.PageRange.Equals(System.Object)
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: Equals(Object)
  nameWithType: PageRange.Equals(Object)
  fullName: System.Windows.Controls.PageRange.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.PageRange.Equals(System.Windows.Controls.PageRange)
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: Equals(PageRange)
  nameWithType: PageRange.Equals(PageRange)
  fullName: System.Windows.Controls.PageRange.Equals(PageRange)
- uid: System.Windows.Controls.PageRange
  parent: System.Windows.Controls
  isExternal: false
  name: PageRange
  nameWithType: PageRange
  fullName: System.Windows.Controls.PageRange
- uid: System.Windows.Controls.PageRange.GetHashCode
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: GetHashCode()
  nameWithType: PageRange.GetHashCode()
  fullName: System.Windows.Controls.PageRange.GetHashCode()
- uid: System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: op_Equality(PageRange,PageRange)
  nameWithType: PageRange.op_Equality(PageRange,PageRange)
  fullName: System.Windows.Controls.PageRange.op_Equality(PageRange,PageRange)
- uid: System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: op_Inequality(PageRange,PageRange)
  nameWithType: PageRange.op_Inequality(PageRange,PageRange)
  fullName: System.Windows.Controls.PageRange.op_Inequality(PageRange,PageRange)
- uid: System.Windows.Controls.PageRange.PageFrom
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: PageFrom
  nameWithType: PageRange.PageFrom
  fullName: System.Windows.Controls.PageRange.PageFrom
- uid: System.Windows.Controls.PageRange.PageTo
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: PageTo
  nameWithType: PageRange.PageTo
  fullName: System.Windows.Controls.PageRange.PageTo
- uid: System.Windows.Controls.PageRange.ToString
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: ToString()
  nameWithType: PageRange.ToString()
  fullName: System.Windows.Controls.PageRange.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Controls.PageRange.#ctor*
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: PageRange
  nameWithType: PageRange.PageRange
- uid: System.Windows.Controls.PageRange.Equals*
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: Equals
  nameWithType: PageRange.Equals
- uid: System.Windows.Controls.PageRange.GetHashCode*
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: GetHashCode
  nameWithType: PageRange.GetHashCode
- uid: System.Windows.Controls.PageRange.op_Equality*
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: op_Equality
  nameWithType: PageRange.op_Equality
- uid: System.Windows.Controls.PageRange.op_Inequality*
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: op_Inequality
  nameWithType: PageRange.op_Inequality
- uid: System.Windows.Controls.PageRange.PageFrom*
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: PageFrom
  nameWithType: PageRange.PageFrom
- uid: System.Windows.Controls.PageRange.PageTo*
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: PageTo
  nameWithType: PageRange.PageTo
- uid: System.Windows.Controls.PageRange.ToString*
  parent: System.Windows.Controls.PageRange
  isExternal: false
  name: ToString
  nameWithType: PageRange.ToString
