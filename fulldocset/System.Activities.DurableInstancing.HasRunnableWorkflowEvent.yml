### YamlMime:ManagedReference
items:
- uid: System.Activities.DurableInstancing.HasRunnableWorkflowEvent
  id: HasRunnableWorkflowEvent
  children:
  - System.Activities.DurableInstancing.HasRunnableWorkflowEvent.#ctor
  langs:
  - csharp
  name: HasRunnableWorkflowEvent
  nameWithType: HasRunnableWorkflowEvent
  fullName: System.Activities.DurableInstancing.HasRunnableWorkflowEvent
  type: Class
  summary: "Rappresenta un evento generato dall&quot;archivio di istanze del flusso di lavoro SQL per notificare agli host del flusso di lavoro l&quot;esistenza di istanze eseguibili nel database di persistenza."
  remarks: "Un&quot;istanza è *eseguibile*, se non è in stato di sospensione o di completamento e soddisfa le condizioni seguenti:-l&quot;istanza è sbloccata e dispone di un timer in sospeso scaduto.      -L&quot;istanza è sbloccata e il suo stato sia **durante l&quot;esecuzione di**.      -L&quot;istanza presenta un blocco non valido.       Un archivio di istanze deve cercare periodicamente le istanze eseguibili appartenenti a un host del flusso di lavoro che utilizza l&quot;archivio. Deve essere generato HasRunnableWorkflowEvent quando trova un&quot;istanza eseguibile nell&quot;archivio di persistenza che corrisponde al tipo di host del flusso di lavoro. Se l&quot;archivio di istanze non trova un&quot;istanza eseguibile nell&quot;archivio di persistenza, deve continuare a monitorare nell&quot;archivio di persistenza eventuali istanze eseguibili.       Dopo avere generato HasRunnableWorkflowEvent, l&quot;archivio di istanze deve interrompere l&quot;archivio di persistenza per istanze eseguibili finché riceve ed esegue il <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>.</xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand> Il monitoraggio continua solo se l&quot;esecuzione di TryLoadRunnableWorkflowCommand non restituisce istanze eseguibili.       Quando un host del flusso di lavoro riceve HasRunnableWorkflowEvent, esegue il <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>sull&quot;archivio di istanze per caricare l&quot;istanza nella memoria.</xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>"
  syntax:
    content: 'public sealed class HasRunnableWorkflowEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent<System.Activities.DurableInstancing.HasRunnableWorkflowEvent>'
  inheritance:
  - System.Object
  - System.Runtime.DurableInstancing.InstancePersistenceEvent
  - System.Runtime.DurableInstancing.InstancePersistenceEvent`1
  implements: []
  inheritedMembers:
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.Equals(System.Object)
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.Equals(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.GetHashCode
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.Name
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.op_Equality(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstancePersistenceEvent)
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.op_Inequality(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstancePersistenceEvent)
  - System.Runtime.DurableInstancing.InstancePersistenceEvent`1.Value
  platform:
  - net462
- uid: System.Activities.DurableInstancing.HasRunnableWorkflowEvent.#ctor
  id: '#ctor'
  parent: System.Activities.DurableInstancing.HasRunnableWorkflowEvent
  langs:
  - csharp
  name: HasRunnableWorkflowEvent()
  nameWithType: HasRunnableWorkflowEvent.HasRunnableWorkflowEvent()
  fullName: System.Activities.DurableInstancing.HasRunnableWorkflowEvent.HasRunnableWorkflowEvent()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.DurableInstancing
  summary: "Inizializza un&quot;istanza di <xref href=&quot;System.Activities.DurableInstancing.HasRunnableWorkflowEvent&quot;> </xref> classe."
  syntax:
    content: public HasRunnableWorkflowEvent ();
    parameters: []
  overload: System.Activities.DurableInstancing.HasRunnableWorkflowEvent.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.DurableInstancing.InstancePersistenceEvent`1
  isExternal: false
  name: System.Runtime.DurableInstancing.InstancePersistenceEvent<System.Activities.DurableInstancing.HasRunnableWorkflowEvent>
- uid: System.Activities.DurableInstancing.HasRunnableWorkflowEvent.#ctor
  parent: System.Activities.DurableInstancing.HasRunnableWorkflowEvent
  isExternal: false
  name: HasRunnableWorkflowEvent()
  nameWithType: HasRunnableWorkflowEvent.HasRunnableWorkflowEvent()
  fullName: System.Activities.DurableInstancing.HasRunnableWorkflowEvent.HasRunnableWorkflowEvent()
- uid: System.Activities.DurableInstancing.HasRunnableWorkflowEvent.#ctor*
  parent: System.Activities.DurableInstancing.HasRunnableWorkflowEvent
  isExternal: false
  name: HasRunnableWorkflowEvent
  nameWithType: HasRunnableWorkflowEvent.HasRunnableWorkflowEvent
