### YamlMime:ManagedReference
items:
- uid: System.Web.Security.Membership
  id: Membership
  children:
  - System.Web.Security.Membership.ApplicationName
  - System.Web.Security.Membership.CreateUser(System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.DeleteUser(System.String)
  - System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  - System.Web.Security.Membership.EnablePasswordReset
  - System.Web.Security.Membership.EnablePasswordRetrieval
  - System.Web.Security.Membership.FindUsersByEmail(System.String)
  - System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.FindUsersByName(System.String)
  - System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  - System.Web.Security.Membership.GetAllUsers
  - System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GetNumberOfUsersOnline
  - System.Web.Security.Membership.GetUser
  - System.Web.Security.Membership.GetUser(System.Boolean)
  - System.Web.Security.Membership.GetUser(System.Object)
  - System.Web.Security.Membership.GetUser(System.String)
  - System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  - System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  - System.Web.Security.Membership.GetUserNameByEmail(System.String)
  - System.Web.Security.Membership.HashAlgorithmType
  - System.Web.Security.Membership.MaxInvalidPasswordAttempts
  - System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  - System.Web.Security.Membership.MinRequiredPasswordLength
  - System.Web.Security.Membership.PasswordAttemptWindow
  - System.Web.Security.Membership.PasswordStrengthRegularExpression
  - System.Web.Security.Membership.Provider
  - System.Web.Security.Membership.Providers
  - System.Web.Security.Membership.RequiresQuestionAndAnswer
  - System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  - System.Web.Security.Membership.UserIsOnlineTimeWindow
  - System.Web.Security.Membership.ValidateUser(System.String,System.String)
  - System.Web.Security.Membership.ValidatingPassword
  langs:
  - csharp
  name: Membership
  nameWithType: Membership
  fullName: System.Web.Security.Membership
  type: Class
  summary: "Convalida le credenziali utente e gestisce le impostazioni utente. Questa classe non può essere ereditata."
  remarks: "La classe di appartenenza viene utilizzata nelle applicazioni ASP.NET per convalidare le credenziali dell&quot;utente e gestire le impostazioni utente, ad esempio indirizzi di posta elettronica e password. La classe di appartenenza può essere utilizzata autonomamente o in combinazione con il <xref:System.Web.Security.FormsAuthentication>per creare un sistema completo per l&quot;autenticazione degli utenti di un&quot;applicazione Web o del sito.</xref:System.Web.Security.FormsAuthentication> Il <xref:System.Web.UI.WebControls.Login>controllo incapsula la classe di appartenenza per fornire un meccanismo efficace per la convalida degli utenti.</xref:System.Web.UI.WebControls.Login>      > [!NOTE] > Se non si ha familiarità con le funzionalità di appartenenza di ASP.NET, vedere [Introduction to Membership](~/add/includes/ajax-current-ext-md.md) prima di continuare. Per un elenco di altri argomenti correlati all&quot;appartenenza, vedere [gestione degli utenti tramite l&quot;appartenenza](~/add/includes/ajax-current-ext-md.md).       La classe di appartenenza fornisce funzionalità per:-creazione di nuovi utenti.      -L&quot;archiviazione di informazioni sull&quot;appartenenza (nomi utente, password, indirizzi di posta elettronica e i dati di supporto) in Microsoft SQL Server o in un archivio dati alternativo.      -Autenticazione degli utenti che visitano il sito. È possibile autenticare gli utenti a livello di codice oppure è possibile utilizzare il <xref:System.Web.UI.WebControls.Login>controllo per creare un sistema di completare l&quot;autenticazione che richiede il codice senza alcuna.</xref:System.Web.UI.WebControls.Login>      -Gestione delle password, che include la creazione, modifica, recupero e reimpostazione e così via. È possibile configurare l&quot;appartenenza ASP.NET per richiedere la password segreta per autenticare le richieste di reimpostare o recuperare la password per gli utenti che hanno dimenticato la password.       Anche se l&quot;appartenenza ASP.NET è una funzionalità indipendenti di ASP.NET per l&quot;autenticazione, può essere integrato con la gestione dei ruoli ASP.NET per fornire servizi di autorizzazione per il sito. Appartenenza può anche essere integrata con l&quot;utente ASP.NET <xref:System.Web.Profile>per consentire la personalizzazione di specifiche dell&quot;applicazione personalizzata in base a singoli utenti.</xref:System.Web.Profile> Per informazioni dettagliate, vedere [informazioni sulla gestione dei ruoli](~/add/includes/ajax-current-ext-md.md) e [Cenni preliminari sulle proprietà di profilo ASP.NET](~/add/includes/ajax-current-ext-md.md).       La classe di appartenenza si basa sui provider di appartenenze per comunicare con un&quot;origine dati. .NET Framework include un <xref:System.Web.Security.SqlMembershipProvider>, che archivia le informazioni utente in un database di Microsoft SQL Server e un <xref:System.Web.Security.ActiveDirectoryMembershipProvider>, che consente di archiviare informazioni utente in un server Active Directory o Active Directory applicazione Mode (ADAM).</xref:System.Web.Security.ActiveDirectoryMembershipProvider> </xref:System.Web.Security.SqlMembershipProvider> È anche possibile implementare un provider di appartenenze personalizzato per comunicare con un&quot;origine dati alternativa che può essere utilizzata dalla classe di appartenenza. Provider di appartenenze personalizzati ereditano la <xref:System.Web.Security.MembershipProvider>classe astratta.</xref:System.Web.Security.MembershipProvider> Per ulteriori informazioni, vedere [implementa un Provider di appartenenze](~/add/includes/ajax-current-ext-md.md).       Per impostazione predefinita, l&quot;appartenenza ASP.NET è abilitata per tutte le applicazioni ASP.NET. Il provider di appartenenze predefinito è il <xref:System.Web.Security.SqlMembershipProvider>e viene specificato nella configurazione del computer con il nome `AspNetSqlProvider`.</xref:System.Web.Security.SqlMembershipProvider> L&quot;istanza predefinita del <xref:System.Web.Security.SqlMembershipProvider>è configurata per connettersi a un&quot;istanza locale di Microsoft SQL Server.</xref:System.Web.Security.SqlMembershipProvider>       È possibile modificare le impostazioni predefinite per specificare un <xref:System.Web.Security.SqlMembershipProvider>tranne il `AspNetSqlProvider` istanza come provider predefinito o specificare un&quot;istanza di un provider personalizzato come provider predefinito per l&quot;applicazione ASP.NET utilizzando il file Web. config.</xref:System.Web.Security.SqlMembershipProvider> È possibile specificare la configurazione di appartenenze ASP.NET per l&quot;applicazione Web utilizzando la sezione di configurazione nel file Web. config. È possibile utilizzare il `providers` sottosezione della sezione per specificare un provider di appartenenze diverso da uno dei provider predefinito. Ad esempio, nella sezione seguente rimuove il provider di appartenenze predefiniti dalla configurazione dell&quot;applicazione corrente e aggiunge un nuovo provider con un nome di `SqlProvider` che si connette a un&quot;istanza di SQL Server denominata `AspSqlServer`.      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <membership defaultProvider=&quot;SqlProvider&quot; userIsOnlineTimeWindow=&quot;20&quot;>         <providers>           <remove name=&quot;AspNetSqlProvider&quot; />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Security.SqlMembershipProvider&quot;             connectionStringName=&quot;SqlServices&quot;             enablePasswordRetrieval=&quot;false&quot;             enablePasswordReset=&quot;true&quot;             requiresQuestionAndAnswer=&quot;true&quot;             passwordFormat=&quot;Hashed&quot;             applicationName=&quot;/&quot; />         </providers>       </membership>     </system.web>   </configuration>   ```"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL using the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!NOTE]\n>  The ASP.NET login controls (<xref:System.Web.UI.WebControls.Login>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.LoginStatus>, <xref:System.Web.UI.WebControls.LoginName>, and <xref:System.Web.UI.WebControls.PasswordRecovery>) encapsulate virtually all of the logic required to prompt users for credentials and validate the credentials in the membership system and can be used in place of programmatic checking using the Membership class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.me_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.me_1.aspx)]"
  syntax:
    content: public static class Membership
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: System.Web.Security.Membership.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene o imposta il nome dell&quot;applicazione."
  remarks: "ApplicationName viene utilizzato per identificare gli utenti specifici di un&quot;applicazione. Ovvero, lo stesso nome utente può esistere nel database per più applicazioni ASP.NET che specificano un ApplicationName diversi. In questo modo più applicazioni di utilizzare lo stesso database per archiviare informazioni utente senza che si verifichino conflitti di nome utente duplicato. In alternativa, più applicazioni ASP.NET è possono utilizzare lo stesso database utente specificando lo stesso ApplicationName. ApplicationName può essere impostato a livello di programmazione o in modo dichiarativo nella configurazione per l&quot;applicazione Web.      > [!CAUTION] > Poiché un&quot;istanza del provider di appartenenze predefinito singolo viene utilizzata per tutte le richieste gestite da un <xref:System.Web.HttpApplication>dell&quot;oggetto, è possibile avere più richieste in esecuzione contemporaneamente e si tenta di impostare il valore della proprietà ApplicationName.</xref:System.Web.HttpApplication> La proprietà ApplicationName non è thread-safe per più operazioni di scrittura e modifica il valore della proprietà ApplicationName può causare un comportamento imprevisto per più utenti di un&quot;applicazione. È consigliabile evitare di scrivere codice che consente agli utenti di impostare la proprietà ApplicationName, a meno che non è necessario. Un esempio di un&quot;applicazione in cui potrebbe essere necessario impostare la proprietà ApplicationName è un&quot;applicazione amministrativa che gestisce i dati di appartenenza per più applicazioni. Questo tipo di applicazione deve essere un utente singolo e non è un&quot;applicazione Web."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use a <xref:System.Web.Security.SqlMembershipProvider> instance and sets the ApplicationName to `MyApplication`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Il nome dell&quot;applicazione."
  overload: System.Web.Security.Membership.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  id: CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String)
  nameWithType: Membership.CreateUser(String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Aggiunge un nuovo utente nell&quot;archivio dati."
  remarks: "CreateUser aggiunge un nuovo utente nell&quot;archivio dati e restituisce un <xref:System.Web.Security.MembershipUser>oggetto per l&quot;utente appena creato.</xref:System.Web.Security.MembershipUser> Se la creazione dell&quot;utente non riesce, un <xref:System.Web.Security.MembershipCreateUserException>viene generata un&quot;eccezione.</xref:System.Web.Security.MembershipCreateUserException> È possibile recuperare un <xref:System.Web.Security.MembershipCreateStatus>valore il <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>proprietà del <xref:System.Web.Security.MembershipCreateUserException>che indica perché la creazione dell&quot;utente non è riuscita.</xref:System.Web.Security.MembershipCreateUserException> </xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> </xref:System.Web.Security.MembershipCreateStatus>       Dopo che un utente di appartenenza è stato creato e si dispone di un riferimento a un <xref:System.Web.Security.MembershipUser>dell&quot;oggetto per l&quot;utente, è possibile modificare le impostazioni per l&quot;utente con il <xref:System.Web.Security.MembershipUser>metodi pubblici, ad esempio <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>per le applicazioni in cui <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>è `true`, o impostando i valori delle proprietà il <xref:System.Web.Security.MembershipUser>oggetto e passandoli al <xref:System.Web.Security.Membership.UpdateUser%2A>(metodo).</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Se un utente esiste già nell&quot;origine dati per l&quot;applicazione, è possibile ottenere un <xref:System.Web.Security.MembershipUser>per l&quot;utente esistente con il <xref:System.Web.Security.Membership.GetUser%2A>metodo.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Il <xref:System.Web.Security.SqlMembershipProvider>offre un&quot;opzione che richiede un indirizzo di posta elettronica univoco per ogni utente.</xref:System.Web.Security.SqlMembershipProvider> Se il <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>proprietà `true`, sarà necessario utilizzare uno degli overload CreateUser che consente di specificare un indirizzo di posta elettronica per l&quot;utente da creare.</xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> In caso contrario, un <xref:System.Web.Security.MembershipCreateUserException>verrà generata.</xref:System.Web.Security.MembershipCreateUserException>       Spazi iniziali e finali vengono rimossi da tutti i valori di parametro."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.Membership#2](~/add/codesnippet/csharp/m-system.web.security.me_0_1.aspx)]\n [!code-vb[System.Web.Security.Membership#2](~/add/codesnippet/visualbasic/m-system.web.security.me_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "Il nome utente per il nuovo utente."
    - id: password
      type: System.String
      description: "La password per il nuovo utente."
    return:
      type: System.Web.Security.MembershipUser
      description: "Oggetto <xref:System.Web.Security.MembershipUser>per l&quot;utente appena creato.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: "L&quot;utente non è stato creato. Controllare il <xref:System.Web.Security.MembershipCreateUserException.StatusCode*>proprietà per un <xref:System.Web.Security.MembershipCreateStatus>valore.</xref:System.Web.Security.MembershipCreateStatus> </xref:System.Web.Security.MembershipCreateUserException.StatusCode*>"
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  id: CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String)
  nameWithType: Membership.CreateUser(String,String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Aggiunge un nuovo utente con un indirizzo di posta elettronica specificato nell&quot;archivio dati."
  remarks: "<xref:System.Web.Security.Membership.CreateUser%2A>Aggiunge un nuovo utente nell&quot;archivio dati e restituisce un <xref:System.Web.Security.MembershipUser>oggetto per l&quot;utente appena creato.</xref:System.Web.Security.MembershipUser></xref:System.Web.Security.Membership.CreateUser%2A> Se la creazione dell&quot;utente non riesce, un <xref:System.Web.Security.MembershipCreateUserException>viene generata un&quot;eccezione.</xref:System.Web.Security.MembershipCreateUserException> È possibile recuperare un <xref:System.Web.Security.MembershipCreateStatus>valore il <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>proprietà del <xref:System.Web.Security.MembershipCreateUserException>che indica perché la creazione dell&quot;utente non è riuscita.</xref:System.Web.Security.MembershipCreateUserException> </xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> </xref:System.Web.Security.MembershipCreateStatus>       Dopo che un utente di appartenenza è stato creato e si dispone di un riferimento a un <xref:System.Web.Security.MembershipUser>dell&quot;oggetto per l&quot;utente, è possibile modificare le impostazioni per l&quot;utente con il <xref:System.Web.Security.MembershipUser>metodi pubblici, ad esempio <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>per le applicazioni in cui <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>è `true`, o impostando i valori delle proprietà il <xref:System.Web.Security.MembershipUser>oggetto e passandoli al <xref:System.Web.Security.Membership.UpdateUser%2A>(metodo).</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Se un utente esiste già nell&quot;origine dati per l&quot;applicazione, è possibile ottenere un <xref:System.Web.Security.MembershipUser>per l&quot;utente esistente con il <xref:System.Web.Security.Membership.GetUser%2A>metodo.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Spazi iniziali e finali vengono rimossi da tutti i valori di parametro."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#1](~/add/codesnippet/visualbasic/8cf35595-ec0c-4c08-b671-_1.aspx)]\n [!code-cs[System.Web.Security.Membership#1](~/add/codesnippet/csharp/8cf35595-ec0c-4c08-b671-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);
    parameters:
    - id: username
      type: System.String
      description: "Il nome utente per il nuovo utente."
    - id: password
      type: System.String
      description: "La password per il nuovo utente."
    - id: email
      type: System.String
      description: "L&quot;indirizzo di posta elettronica per il nuovo utente."
    return:
      type: System.Web.Security.MembershipUser
      description: "Oggetto <xref:System.Web.Security.MembershipUser>per l&quot;utente appena creato.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: "L&quot;utente non è stato creato. Controllare il <xref:System.Web.Security.MembershipCreateUserException.StatusCode*>proprietà per un <xref:System.Web.Security.MembershipCreateStatus>valore.</xref:System.Web.Security.MembershipCreateStatus> </xref:System.Web.Security.MembershipCreateUserException.StatusCode*>"
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Aggiunge un nuovo utente con valori di proprietà specificato nell&quot;archivio dati e restituisce un parametro di stato che indica che l&quot;utente è stato creato correttamente o non è riuscito il motivo per la creazione dell&quot;utente."
  remarks: "CreateUser aggiunge un nuovo utente nell&quot;archivio dati e restituisce un <xref:System.Web.Security.MembershipUser>oggetto per l&quot;utente appena creato.</xref:System.Web.Security.MembershipUser> Se la creazione dell&quot;utente non riesce, è possibile recuperare un <xref:System.Web.Security.MembershipCreateStatus>valore il `status` parametro di output che indica perché la creazione dell&quot;utente non è riuscita.</xref:System.Web.Security.MembershipCreateStatus>       Verrà restituito dal metodo CreateUser `null` se `password` è una stringa vuota o `null`, `username` è una stringa vuota o `null` o contiene una virgola (,), `passwordQuestion` non `null` ed è una stringa vuota, o `passwordAnswer` non `null` e contiene una stringa vuota.       Dopo che un utente di appartenenza è stato creato e si dispone di un riferimento a un <xref:System.Web.Security.MembershipUser>dell&quot;oggetto per l&quot;utente, è possibile modificare le impostazioni per l&quot;utente con il <xref:System.Web.Security.MembershipUser>metodi pubblici e impostando i valori delle proprietà il <xref:System.Web.Security.MembershipUser>oggetto e quindi passare il <xref:System.Web.Security.MembershipUser>dell&quot;oggetto per il <xref:System.Web.Security.Membership.UpdateUser%2A>(metodo).</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Se un utente esiste già nell&quot;origine dati per l&quot;applicazione, è possibile ottenere un <xref:System.Web.Security.MembershipUser>per l&quot;utente esistente con il <xref:System.Web.Security.Membership.GetUser%2A>metodo.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Spazi iniziali e finali vengono rimossi da tutti i valori di parametro di stringa."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/baa4c01c-297e-4ec6-a9d9-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/baa4c01c-297e-4ec6-a9d9-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "Il nome utente per il nuovo utente."
    - id: password
      type: System.String
      description: "La password per il nuovo utente."
    - id: email
      type: System.String
      description: "L&quot;indirizzo di posta elettronica per il nuovo utente."
    - id: passwordQuestion
      type: System.String
      description: "Il valore della domanda segreta per l&quot;utente di appartenenza."
    - id: passwordAnswer
      type: System.String
      description: "Il valore della risposta segreta per l&quot;utente di appartenenza."
    - id: isApproved
      type: System.Boolean
      description: "Valore booleano che indica se il nuovo utente è approvato per l&quot;accesso."
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "Oggetto <xref:System.Web.Security.MembershipCreateStatus>che indica che l&quot;utente è stato creato correttamente o il motivo per cui creazione non riuscita.</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "Oggetto <xref:System.Web.Security.MembershipUser>per l&quot;utente appena creato.</xref:System.Web.Security.MembershipUser> Se è stato creato alcun utente, questo metodo restituisce <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Aggiunge un nuovo utente con valori di proprietà specificati e un identificatore univoco per l&quot;archivio dati e restituisce un parametro di stato che indica che l&quot;utente è stato creato correttamente o non è riuscito il motivo per la creazione dell&quot;utente."
  remarks: "CreateUser aggiunge un nuovo utente nell&quot;archivio dati e restituisce un <xref:System.Web.Security.MembershipUser>oggetto per l&quot;utente appena creato.</xref:System.Web.Security.MembershipUser> Se la creazione dell&quot;utente non riesce, è possibile recuperare un <xref:System.Web.Security.MembershipCreateStatus>valore il `status` parametro di output che indica perché la creazione dell&quot;utente non è riuscita.</xref:System.Web.Security.MembershipCreateStatus> È possibile specificare un identificatore univoco per l&quot;utente, ad esempio un valore di chiave primaria per un database, tramite il `providerUserKey` parametro.       Verrà restituito dal metodo CreateUser `null` se `password` è una stringa vuota o `null`, `username` è una stringa vuota o `null` o contiene una virgola (,), `passwordQuestion` non `null` e contiene una stringa vuota, o `passwordAnswer` non `null` e contiene una stringa vuota.       Dopo che un utente di appartenenza è stato creato e si dispone di un riferimento a un <xref:System.Web.Security.MembershipUser>dell&quot;oggetto per l&quot;utente, è possibile modificare le impostazioni per l&quot;utente con il <xref:System.Web.Security.MembershipUser>metodi pubblici e impostando i valori delle proprietà il <xref:System.Web.Security.MembershipUser>oggetto e quindi passare il <xref:System.Web.Security.MembershipUser>dell&quot;oggetto per il <xref:System.Web.Security.Membership.UpdateUser%2A>(metodo).</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Se un utente esiste già nell&quot;origine dati per l&quot;applicazione, è possibile ottenere un <xref:System.Web.Security.MembershipUser>per l&quot;utente esistente con il <xref:System.Web.Security.Membership.GetUser%2A>metodo.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Spazi iniziali e finali vengono rimossi da tutti i valori di parametro di stringa."
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "Il nome utente per il nuovo utente."
    - id: password
      type: System.String
      description: "La password per il nuovo utente."
    - id: email
      type: System.String
      description: "L&quot;indirizzo di posta elettronica per il nuovo utente."
    - id: passwordQuestion
      type: System.String
      description: "Il valore della domanda segreta per l&quot;utente di appartenenza."
    - id: passwordAnswer
      type: System.String
      description: "Il valore della risposta segreta per l&quot;utente di appartenenza."
    - id: isApproved
      type: System.Boolean
      description: "Valore booleano che indica se il nuovo utente è approvato per l&quot;accesso."
    - id: providerUserKey
      type: System.Object
      description: "L&quot;identificatore utente per l&quot;utente che deve essere archiviata nell&quot;archivio dati di appartenenza."
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "Oggetto <xref:System.Web.Security.MembershipCreateStatus>che indica che l&quot;utente è stato creato correttamente o non è riuscita la creazione di motivo.</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "Oggetto <xref:System.Web.Security.MembershipUser>per l&quot;utente appena creato.</xref:System.Web.Security.MembershipUser> Se è stato creato alcun utente, questo metodo restituisce <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  id: DeleteUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: System.Web.Security.Membership.DeleteUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Elimina un utente e tutti i dati utente correlate dal database."
  remarks: "Dati utente archiviati nel database per il <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, o <xref:System.Web.UI.WebControls.WebParts.WebPart>personalizzazione viene eliminata anche quando si utilizza il <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, e <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>gli oggetti per l&quot;archiviazione dei dati.</xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> </xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Security.SqlRoleProvider> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n [!code-vb[System.Web.Security.Membership#8](~/add/codesnippet/visualbasic/m-system.web.security.me_11_1.aspx)]\n [!code-cs[System.Web.Security.Membership#8](~/add/codesnippet/csharp/m-system.web.security.me_11_1.aspx)]"
  syntax:
    content: public static bool DeleteUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Il nome dell&quot;utente da eliminare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;utente è stato eliminato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>è una stringa vuota o contiene una virgola (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>è<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  id: DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String,Boolean)
  nameWithType: Membership.DeleteUser(String,Boolean)
  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Elimina un utente dal database."
  remarks: "Gli utenti eliminati dal database eliminati solo dall&quot;applicazione configurata `applicationName`.       Se `deleteAllRelatedData` è `true`, i dati utente archiviati nel database per il <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, o <xref:System.Web.UI.WebControls.WebParts.WebPart>personalizzazione viene eliminata anche quando si utilizza il <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, e <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>gli oggetti per l&quot;archiviazione dei dati.</xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> </xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Security.SqlRoleProvider> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/csharp/m-system.web.security.me_12_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/visualbasic/m-system.web.security.me_12_1.aspx)]"
  syntax:
    content: public static bool DeleteUser (string username, bool deleteAllRelatedData);
    parameters:
    - id: username
      type: System.String
      description: "Il nome dell&quot;utente da eliminare."
    - id: deleteAllRelatedData
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per eliminare i dati relativi all&quot;utente del database. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per lasciare i dati relativi all&quot;account utente nel database."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;utente è stato eliminato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>è una stringa vuota o contiene una virgola (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.EnablePasswordReset
  id: EnablePasswordReset
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: System.Web.Security.Membership.EnablePasswordReset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene un valore che indica se il provider di appartenenze corrente è configurato per consentire agli utenti di reimpostare la password."
  remarks: "Password reset è la possibilità per l&quot;appartenenza ASP.NET sostituire la password corrente per un nome utente con un nuovo oggetto, in modo casuale password generata quando un utente ha dimenticato la password o la password corrente non è più valida. Ciò è particolarmente utile quando il formato della password è impostato su <xref:System.Web.Security.MembershipPasswordFormat>, come gli utenti non possono recuperare i valori hash delle password.</xref:System.Web.Security.MembershipPasswordFormat>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that EnablePasswordReset is `true`, then resets a user's password and returns the new, automatically generated password.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/csharp/p-system.web.security.me_2_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/visualbasic/p-system.web.security.me_2_1.aspx)]"
  syntax:
    content: public static bool EnablePasswordReset { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il provider di appartenenze supporta la reimpostazione della password; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.EnablePasswordReset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  id: EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: System.Web.Security.Membership.EnablePasswordRetrieval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene un valore che indica se il provider di appartenenze corrente è configurato per consentire agli utenti di recuperare la propria password."
  remarks: "Se EnablePasswordRetrieval è `false`, il provider di appartenenze sottostante può generare un <xref:System.Web.HttpException>.</xref:System.Web.HttpException>       I provider inclusi in .NET Framework supportano più formati di password per migliorare la protezione delle password. Se il formato della password è impostato su <xref:System.Web.Security.MembershipPasswordFormat>, gli utenti non saranno in grado di recuperare la password esistente dal database.</xref:System.Web.Security.MembershipPasswordFormat> Il <xref:System.Web.Security.MembershipPasswordFormat>formato di password consente la codifica unidirezionale delle password.</xref:System.Web.Security.MembershipPasswordFormat> Le password sono &quot;hash&quot; e rispetto ai valori archiviati nel database per l&quot;autenticazione. I valori &quot;Hash&quot; non possono essere decodificati per recuperare il valore della password originale. Per ulteriori informazioni, vedere <xref:System.Web.Security.MembershipPasswordFormat>.</xref:System.Web.Security.MembershipPasswordFormat>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"false\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that EnablePasswordRetrieval is `true`, then retrieves the password for a specified user name and sends it to the e-mail address for the specified user.  \n  \n> [!IMPORTANT]\n>  Returning a password in clear text using e-mail is not recommended for sites that require a high level of security. For high-security sites, we recommend that you return passwords using encryption, such as SSL.  \n>   \n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/p-system.web.security.me_4_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/p-system.web.security.me_4_1.aspx)]"
  syntax:
    content: public static bool EnablePasswordRetrieval { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il provider di appartenenze supporta il recupero della password; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.EnablePasswordRetrieval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  id: FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene una raccolta di utenti di appartenenza in cui l&quot;indirizzo di posta elettronica contiene l&quot;indirizzo di posta elettronica specificato per la corrispondenza."
  remarks: "FindUsersByEmail restituisce un elenco degli utenti di appartenenza in cui l&quot;indirizzo di posta elettronica corrisponde al nome `emailToMatch` per l&quot;applicazione configurata `applicationName`.       Il <xref:System.Web.Security.SqlMembershipProvider>esegue la ricerca utilizzando una clausola LIKE contro il `emailToMatch` parametro.</xref:System.Web.Security.SqlMembershipProvider> Tutti i caratteri jolly supportati da SQL Server in, ad esempio possibile utilizzare le clausole nel `emailToMatch` valore del parametro."
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#9](~/add/codesnippet/visualbasic/m-system.web.security.me_10_1.aspx)]\n [!code-cs[System.Web.Security.Membership#9](~/add/codesnippet/csharp/m-system.web.security.me_10_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "L&quot;indirizzo di posta elettronica da cercare."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Oggetto <xref:System.Web.Security.MembershipUserCollection>che contiene tutti gli utenti che soddisfano il <code> emailToMatch </code> parametro.</xref:System.Web.Security.MembershipUserCollection>       Spazi iniziali e finali vengono rimossi dal <code> emailToMatch </code> valore del parametro."
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene una raccolta di utenti di appartenenza, in una pagina di dati, in cui l&quot;indirizzo di posta elettronica contiene l&quot;indirizzo di posta elettronica specificato per la corrispondenza."
  remarks: "FindUsersByEmail restituisce un elenco degli utenti di appartenenza in cui l&quot;indirizzo di posta elettronica corrisponde al nome `emailToMatch` per l&quot;applicazione configurata `applicationName`.       Il <xref:System.Web.Security.SqlMembershipProvider>esegue la ricerca utilizzando una clausola LIKE contro il `emailToMatch` parametro.</xref:System.Web.Security.SqlMembershipProvider> Tutti i caratteri jolly supportati da SQL Server in, ad esempio possibile utilizzare le clausole nel `emailToMatch` valore del parametro.       I risultati restituiti da FindUsersByEmail sono limitati dal `pageIndex` e `pageSize` parametri. Il `pageSize` parametro identifica il numero massimo di <xref:System.Web.Security.MembershipUser>oggetti da restituire in <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> Il `pageIndex` parametro identifica la pagina di risultati da restituire, dove 0 indica la prima pagina. Il `totalRecords` parametro è un `out` parametro che il numero totale di utenti di appartenenza corrispondente viene impostato il `emailToMatch` valore. Ad esempio, se sono stati rilevati 13 utenti il cui `emailToMatch` corrispondano parte o l&quot;indirizzo di posta elettronica e `pageIndex` 1 e un `pageSize` pari a 5, il <xref:System.Web.Security.MembershipUserCollection>restituito conterrebbe dal sesto al decimo utente restituito.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`potrebbe essere impostato su 13.       Spazi iniziali e finali vengono rimossi dal `emailToMatch` valore del parametro."
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/csharp/1954016c-87a4-4acf-9d54-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/visualbasic/1954016c-87a4-4acf-9d54-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "L&quot;indirizzo di posta elettronica da cercare."
    - id: pageIndex
      type: System.Int32
      description: "Indice della pagina di risultati da restituire. `pageIndex`è in base zero."
    - id: pageSize
      type: System.Int32
      description: "Le dimensioni della pagina di risultati da restituire."
    - id: totalRecords
      type: System.Int32
      description: "Numero totale di utenti corrispondenti."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Oggetto <xref:System.Web.Security.MembershipUserCollection>che contiene una pagina di <code> pageSize </code> <xref:System.Web.Security.MembershipUser>oggetti iniziano alla pagina specificata da <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code>è minore di zero.       - oppure - <code>pageSize</code> è minore di 1."
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  id: FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: System.Web.Security.Membership.FindUsersByName(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene una raccolta di utenti di appartenenza in cui il nome utente contiene il nome utente specificato per la corrispondenza."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>Restituisce un elenco degli utenti di appartenenza in cui il nome utente corrisponde al nome `usernameToMatch` per l&quot;applicazione configurata `applicationName`.</xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>       Il <xref:System.Web.Security.SqlMembershipProvider>esegue la ricerca utilizzando una clausola LIKE contro il `usernameToMatch` parametro.</xref:System.Web.Security.SqlMembershipProvider> Tutti i caratteri jolly supportati da SQL Server in, ad esempio possibile utilizzare le clausole nel `usernameToMatch` valore del parametro.       Spazi iniziali e finali vengono rimossi da tutti i valori di parametro."
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#10](~/add/codesnippet/visualbasic/m-system.web.security.me_6_1.aspx)]\n [!code-cs[System.Web.Security.Membership#10](~/add/codesnippet/csharp/m-system.web.security.me_6_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "Il nome utente per la ricerca."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Oggetto <xref:System.Web.Security.MembershipUserCollection>che contiene tutti gli utenti che soddisfano il <code> usernameToMatch </code> parametro.</xref:System.Web.Security.MembershipUserCollection>       Spazi iniziali e finali vengono rimossi dal <code> usernameToMatch </code> valore del parametro."
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>è una stringa vuota."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene una raccolta di utenti di appartenenza, in una pagina di dati, in cui il nome utente contiene il nome utente specificato per la corrispondenza."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>Restituisce un elenco degli utenti di appartenenza in cui il nome utente corrisponde al nome `usernameToMatch` per l&quot;applicazione configurata `applicationName`.</xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>       Il <xref:System.Web.Security.SqlMembershipProvider>esegue la ricerca utilizzando una clausola LIKE contro il `usernameToMatch` parametro.</xref:System.Web.Security.SqlMembershipProvider> Tutti i caratteri jolly supportati da SQL Server in, ad esempio possibile utilizzare le clausole nel `usernameToMatch` valore del parametro.       I risultati restituiti da FindUsersByName sono limitati dal `pageIndex` e `pageSize` parametri. Il `pageSize` parametro identifica il numero massimo di <xref:System.Web.Security.MembershipUser>oggetti da restituire in <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> Il `pageIndex` parametro identifica la pagina di risultati da restituire, dove 0 indica la prima pagina. Il `totalRecords` parametro è un `out` parametro che il numero totale di utenti di appartenenza corrispondente viene impostato il `usernameToMatch` valore. Ad esempio, se sono stati rilevati 13 utenti il cui `usernameToMatch` corrispondano parte o il nome utente e `pageIndex` 1 e un `pageSize` pari a 5, il <xref:System.Web.Security.MembershipUserCollection>restituito conterrebbe dal sesto al decimo utente restituito.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`potrebbe essere impostato su 13."
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/csharp/4f01d951-55a8-446c-be57-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/visualbasic/4f01d951-55a8-446c-be57-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "Il nome utente per la ricerca."
    - id: pageIndex
      type: System.Int32
      description: "Indice della pagina di risultati da restituire. `pageIndex`è in base zero."
    - id: pageSize
      type: System.Int32
      description: "Le dimensioni della pagina di risultati da restituire."
    - id: totalRecords
      type: System.Int32
      description: "Numero totale di utenti corrispondenti."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Oggetto <xref:System.Web.Security.MembershipUserCollection>che contiene una pagina di <code> pageSize </code> <xref:System.Web.Security.MembershipUser>oggetti iniziano alla pagina specificata da <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>       Spazi iniziali e finali vengono rimossi dal <code> usernameToMatch </code> valore del parametro."
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>è una stringa vuota.       - oppure - <code>pageIndex</code> è minore di zero.       - oppure - <code>pageSize</code> è minore di 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  id: GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GeneratePassword(Int32,Int32)
  nameWithType: Membership.GeneratePassword(Int32,Int32)
  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Genera una password casuale della lunghezza specificata."
  remarks: "Il metodo GeneratePassword viene utilizzato per generare una password casuale e viene in genere utilizzato per il <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>metodo implementato da un provider di appartenenze per reimpostare la password per un utente su una nuova password temporanea.</xref:System.Web.Security.MembershipProvider.ResetPassword%2A>       La password generata contiene solo caratteri alfanumerici e i seguenti segni di punteggiatura: `!@#$%^&*()_-+=[{]};:<>|./?`. Nessun carattere di controllo nascosto o non stampabili sono inclusi nella password generata.      > [!NOTE] > La password casuale creata dal metodo GeneratePassword non è garantita da passare all&quot;espressione regolare di <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>proprietà.</xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> Tuttavia, la password casuale soddisferà i criteri stabiliti dal <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>proprietà e `numberOfNonAlphanumericCharacters` parametro.</xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>"
  example:
  - "The following code example creates a new membership user and uses the GeneratePassword method to initialize the password for the new user to a random value, which is displayed to the user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#5](~/add/codesnippet/visualbasic/m-system.web.security.me_1_1.aspx)]\n [!code-cs[System.Web.Security.Membership#5](~/add/codesnippet/csharp/m-system.web.security.me_1_1.aspx)]"
  syntax:
    content: public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);
    parameters:
    - id: length
      type: System.Int32
      description: "Il numero di caratteri nella password generata. La lunghezza deve essere compreso tra 1 e 128 caratteri."
    - id: numberOfNonAlphanumericCharacters
      type: System.Int32
      description: 'Il numero minimo di caratteri non alfanumerici (ad esempio @, #,!, %, &amp;e così via) nella password generata.'
    return:
      type: System.String
      description: "Una password casuale della lunghezza specificata."
  overload: System.Web.Security.Membership.GeneratePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>length</code>è minore di 1 o maggiore di 128 - oppure - <code>numberOfNonAlphanumericCharacters</code> è minore di 0 o maggiore di <code>length</code>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetAllUsers
  id: GetAllUsers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: System.Web.Security.Membership.GetAllUsers()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene una raccolta di tutti gli utenti nel database."
  remarks: "GetAllUsers restituisce le informazioni per tutti gli utenti di appartenenza per un&quot;applicazione come una raccolta di <xref:System.Web.Security.MembershipUser>oggetti.</xref:System.Web.Security.MembershipUser> Prestare attenzione quando si utilizza il metodo GetAllUsers con i database utente di grandi dimensioni, come il valore risultante <xref:System.Web.Security.MembershipUserCollection>ASP.NET pagina può peggiorare le prestazioni dell&quot;applicazione.</xref:System.Web.Security.MembershipUserCollection>"
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_4_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_4_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Oggetto <xref:System.Web.Security.MembershipUserCollection>di <xref:System.Web.Security.MembershipUser>gli oggetti che rappresentano tutti gli utenti nel database.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene una raccolta di tutti gli utenti del database nelle pagine di dati."
  remarks: "I risultati restituiti da GetAllUsers sono limitati dal `pageIndex` e `pageSize` parametri. Il `pageSize` parametro identifica il numero massimo di <xref:System.Web.Security.MembershipUser>oggetti da restituire in <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> Il `pageIndex` parametro identifica la pagina di risultati da restituire, dove 0 indica la prima pagina. Il `totalRecords` parametro è un `out` parametro impostato sul numero totale degli utenti di appartenenza per l&quot;applicazione configurata `applicationName`. Ad esempio, se sono presenti 13 utenti per l&quot;applicazione configurata `applicationName`e `pageIndex` 1 e un `pageSize` pari a 5, il <xref:System.Web.Security.MembershipUserCollection>restituito conterrebbe dal sesto al decimo utente restituito.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`potrebbe essere impostato su 13."
  example:
  - "The following code example returns a list of users in pages of data with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/e84b0b6e-963c-4328-843a-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/e84b0b6e-963c-4328-843a-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: pageIndex
      type: System.Int32
      description: "Indice della pagina di risultati da restituire. Usare 0 per indicare la prima pagina."
    - id: pageSize
      type: System.Int32
      description: "Le dimensioni della pagina di risultati da restituire. `pageIndex`è in base zero."
    - id: totalRecords
      type: System.Int32
      description: "Il numero totale di utenti."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Oggetto <xref:System.Web.Security.MembershipUserCollection>di <xref:System.Web.Security.MembershipUser>gli oggetti che rappresentano tutti gli utenti del database per l&quot;applicazione configurata <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code>è minore di zero.       - oppure - <code>pageSize</code> è minore di 1."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  id: GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene il numero di utenti che accedono attualmente a un&quot;applicazione."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>Restituisce il numero di utenti per il corrente <xref:System.Web.Security.Membership.ApplicationName%2A>in cui la data dell&quot;ultima attività è maggiore rispetto all&quot;ora corrente meno <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>.</xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> </xref:System.Web.Security.Membership.ApplicationName%2A></xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> Indicatore data e ora ultima attività viene aggiornato per la data e ora correnti quando le credenziali utente vengono convalidate per mezzo del <xref:System.Web.Security.Membership.ValidateUser%2A>o <xref:System.Web.Security.Membership.UpdateUser%2A>metodo o quando una chiamata a un <xref:System.Web.Security.Membership.GetUser%2A>overload che accetta senza parametri o con uno che utilizza il `userIsOnline` parametro per specificare che l&quot;indicatore di data/ora deve essere aggiornato.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.Membership.ValidateUser%2A>"
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_2_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_2_1.aspx)]"
  syntax:
    content: public static int GetNumberOfUsersOnline ();
    parameters: []
    return:
      type: System.Int32
      description: "Il numero di utenti che accedono attualmente a un&quot;applicazione."
  overload: System.Web.Security.Membership.GetNumberOfUsersOnline*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser
  id: GetUser
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: System.Web.Security.Membership.GetUser()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene le informazioni dall&quot;origine dati e aggiorna l&quot;indicatore di data e ora per l&quot;utente connesso appartenenza corrente."
  remarks: "GetUser recupera le informazioni utente dall&quot;origine dati e crea un <xref:System.Web.Security.MembershipUser>oggetto popolato con i dati restituiti.</xref:System.Web.Security.MembershipUser> Se si utilizza uno degli overload GetUser che non accetta un `username` , GetUser restituisce le informazioni per l&quot;utente connesso appartenenza corrente. L&quot;utente connesso appartenenza corrente è identificato dalla <xref:System.Security.Principal.IIdentity.Name%2A>dell&quot;utente corrente <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       È inoltre possibile specificare se si desidera GetUser per aggiornare l&quot;ultima attività indicatore data e ora per l&quot;utente da recuperare mediante il `userIsOnline` parametro. Del <xref:System.Web.Security.Membership.GetUser%2A>overload che accettano un `userIsOnline` parametro `GetUser()` in modo implicito indicatore data e ora ultima attività aggiornamenti per l&quot;utente.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`e `GetUser(System.Object)` non."
  example:
  - "The following code example updates the last-activity date/time stamp for the current logged-on membership user and displays the user name in the ASP.NET page.  \n  \n [!code-cs[System.Web.Security.Membership#3](~/add/codesnippet/csharp/m-system.web.security.me_14_1.aspx)]\n [!code-vb[System.Web.Security.Membership#3](~/add/codesnippet/visualbasic/m-system.web.security.me_14_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUser
      description: "Oggetto <xref:System.Web.Security.MembershipUser>che rappresenta l&quot;utente corrente connesso.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nessun utente di appartenenza è attualmente connesso."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  id: GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: System.Web.Security.Membership.GetUser(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene le informazioni dall&quot;origine dati per l&quot;utente connesso appartenenza corrente. Aggiorna l&quot;ultima attività indicatore di data/ora per l&quot;utente connesso appartenenza corrente, se specificato."
  remarks: "Il metodo GetUser recupera le informazioni utente dall&quot;origine dati e crea un <xref:System.Web.Security.MembershipUser>oggetto popolato con i dati restituiti.</xref:System.Web.Security.MembershipUser> Se si utilizza uno del <xref:System.Web.Security.Membership.GetUser%2A>overload che accettano un `username` parametro <xref:System.Web.Security.Membership.GetUser%2A>restituisce le informazioni per l&quot;utente connesso appartenenza corrente.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> L&quot;utente connesso appartenenza corrente è identificato dalla <xref:System.Security.Principal.IIdentity.Name%2A>dell&quot;utente corrente <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       È inoltre possibile specificare se si desidera <xref:System.Web.Security.Membership.GetUser%2A>per aggiornare l&quot;ultima attività indicatore data e ora per l&quot;utente da recuperare mediante il `userIsOnline` parametro.</xref:System.Web.Security.Membership.GetUser%2A> Del <xref:System.Web.Security.Membership.GetUser%2A>overload che accettano un `userIsOnline` parametro `GetUser()` in modo implicito indicatore data e ora ultima attività aggiornamenti per l&quot;utente.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`e `GetUser(System.Object)` non."
  example:
  - "The following code example displays the user name for the current logged-on membership user in the ASP.NET page without updating the last-activity date/time stamp for the user.  \n  \n [!code-cs[System.Web.Security.Membership#4](~/add/codesnippet/csharp/m-system.web.security.me_9_1.aspx)]\n [!code-vb[System.Web.Security.Membership#4](~/add/codesnippet/visualbasic/m-system.web.security.me_9_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);
    parameters:
    - id: userIsOnline
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, indicatore di data/ora aggiornamenti l&quot;ultima attività per l&quot;utente specificato."
    return:
      type: System.Web.Security.MembershipUser
      description: "Oggetto <xref:System.Web.Security.MembershipUser>che rappresenta l&quot;utente corrente connesso.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nessun utente di appartenenza è attualmente connesso."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Object)
  id: GetUser(System.Object)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: System.Web.Security.Membership.GetUser(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene le informazioni dall&quot;origine dati per l&quot;utente di appartenenza associato all&quot;identificatore univoco specificato."
  remarks: "Il metodo GetUser recupera le informazioni utente dall&quot;origine dati e crea un <xref:System.Web.Security.MembershipUser>oggetto popolato con i dati restituiti.</xref:System.Web.Security.MembershipUser> L&quot;utente viene identificato con l&quot;identificatore univoco dell&quot;origine dati specificata tramite il `providerUserKey` parametro.       È inoltre possibile specificare se si desidera <xref:System.Web.Security.Membership.GetUser%2A>per aggiornare l&quot;ultima attività indicatore data e ora per l&quot;utente da recuperare mediante il `userIsOnline` parametro.</xref:System.Web.Security.Membership.GetUser%2A> Del <xref:System.Web.Security.Membership.GetUser%2A>overload che accettano un `userIsOnline` parametro `GetUser()` in modo implicito indicatore data e ora ultima attività aggiornamenti per l&quot;utente.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`e `GetUser(System.Object)` non"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "Identificatore utente univoco dall&quot;origine dati dell&quot;appartenenza dell&quot;utente."
    return:
      type: System.Web.Security.MembershipUser
      description: "Oggetto <xref:System.Web.Security.MembershipUser>oggetto che rappresenta l&quot;utente associato all&quot;identificatore univoco specificato.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.String)
  id: GetUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: System.Web.Security.Membership.GetUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene le informazioni dall&quot;origine dati per l&quot;utente di appartenenza specificato."
  remarks: "Il metodo GetUser recupera le informazioni utente dall&quot;origine dati e crea un <xref:System.Web.Security.MembershipUser>oggetto popolato con i dati restituiti.</xref:System.Web.Security.MembershipUser> Se si utilizza uno del <xref:System.Web.Security.Membership.GetUser%2A>overload che accettano un `username` parametro <xref:System.Web.Security.Membership.GetUser%2A>restituisce le informazioni per l&quot;utente connesso appartenenza corrente.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> L&quot;utente connesso appartenenza corrente è identificato dalla <xref:System.Security.Principal.IIdentity.Name%2A>dell&quot;utente corrente <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       È inoltre possibile specificare se si desidera <xref:System.Web.Security.Membership.GetUser%2A>per aggiornare l&quot;ultima attività indicatore data e ora per l&quot;utente da recuperare mediante il `userIsOnline` parametro.</xref:System.Web.Security.Membership.GetUser%2A> Del <xref:System.Web.Security.Membership.GetUser%2A>overload che accettano un `userIsOnline` parametro <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>in modo implicito indicatore data e ora ultima attività aggiornamenti per l&quot;utente.</xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> </xref:System.Web.Security.Membership.GetUser%2A> GetUser e <xref:System.Web.Security.Membership.GetUser%2A>non.</xref:System.Web.Security.Membership.GetUser%2A>"
  example:
  - "The following code example uses the GetUser method to return a <xref:System.Web.Security.MembershipUser> object for the current logged-on user and updates the e-mail address for the user.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_3_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_3_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Il nome dell&quot;utente da recuperare."
    return:
      type: System.Web.Security.MembershipUser
      description: "Oggetto <xref:System.Web.Security.MembershipUser>oggetto che rappresenta l&quot;utente specificato.</xref:System.Web.Security.MembershipUser> Se il <code> username </code> parametro non corrisponde a un utente esistente, questo metodo restituisce <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>contiene una virgola (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  id: GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object,Boolean)
  nameWithType: Membership.GetUser(Object,Boolean)
  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene le informazioni dall&quot;origine dati per l&quot;utente di appartenenza associato all&quot;identificatore univoco specificato. Aggiorna l&quot;ultima attività indicatore di data/ora per l&quot;utente, se specificato."
  remarks: "Il metodo GetUser recupera le informazioni utente dall&quot;origine dati e crea un <xref:System.Web.Security.MembershipUser>oggetto popolato con i dati restituiti.</xref:System.Web.Security.MembershipUser> L&quot;utente viene identificato con l&quot;identificatore univoco dall&quot;origine dati specificata nel `providerUserKey` parametro."
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "Identificatore utente univoco dall&quot;origine dati dell&quot;appartenenza dell&quot;utente."
    - id: userIsOnline
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, indicatore di data/ora aggiornamenti l&quot;ultima attività per l&quot;utente specificato."
    return:
      type: System.Web.Security.MembershipUser
      description: "Oggetto <xref:System.Web.Security.MembershipUser>oggetto che rappresenta l&quot;utente associato all&quot;identificatore univoco specificato.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  id: GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String,Boolean)
  nameWithType: Membership.GetUser(String,Boolean)
  fullName: System.Web.Security.Membership.GetUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene le informazioni dall&quot;origine dati per l&quot;utente di appartenenza specificato. Aggiorna l&quot;ultima attività indicatore di data/ora per l&quot;utente, se specificato."
  remarks: "Il metodo GetUser recupera le informazioni utente dall&quot;origine dati e crea un <xref:System.Web.Security.MembershipUser>oggetto popolato con i dati restituiti.</xref:System.Web.Security.MembershipUser>       Se si utilizza uno del <xref:System.Web.Security.Membership.GetUser%2A>overload che accettano un `username` parametro <xref:System.Web.Security.Membership.GetUser%2A>restituisce le informazioni per l&quot;utente connesso appartenenza corrente.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> L&quot;utente connesso appartenenza corrente è identificato dalla <xref:System.Security.Principal.IIdentity.Name%2A>dell&quot;utente corrente <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       È inoltre possibile specificare se si desidera <xref:System.Web.Security.Membership.GetUser%2A>per aggiornare l&quot;ultima attività indicatore data e ora per l&quot;utente da recuperare mediante il `userIsOnline` parametro.</xref:System.Web.Security.Membership.GetUser%2A> Del <xref:System.Web.Security.Membership.GetUser%2A>overload che accettano un `userIsOnline` parametro <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>in modo implicito indicatore data e ora ultima attività aggiornamenti per l&quot;utente.</xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> </xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>e <xref:System.Web.Security.Membership.GetUser%2A>non.</xref:System.Web.Security.Membership.GetUser%2A></xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>"
  example:
  - "The following code example retrieves the password for a specified user name and sends it to the e-mail address for the specified user. The call to <xref:System.Web.Security.Membership.GetUser%2A> specifies that the last-activity date/time stamp for the user not be updated.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/m-system.web.security.me_13_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/m-system.web.security.me_13_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);
    parameters:
    - id: username
      type: System.String
      description: "Il nome dell&quot;utente da recuperare."
    - id: userIsOnline
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, indicatore di data/ora aggiornamenti l&quot;ultima attività per l&quot;utente specificato."
    return:
      type: System.Web.Security.MembershipUser
      description: "Oggetto <xref:System.Web.Security.MembershipUser>oggetto che rappresenta l&quot;utente specificato.</xref:System.Web.Security.MembershipUser> Se il <code> username </code> parametro non corrisponde a un utente esistente, questo metodo restituisce <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>contiene una virgola (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  id: GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene un nome utente in cui l&quot;indirizzo di posta elettronica per l&quot;utente corrisponde all&quot;indirizzo di posta elettronica specificato."
  remarks: "GetUserNameByEmail può essere utilizzato per recuperare il nome utente per un utente di appartenenza nel caso in cui un utente non conosce il nome utente, ma conosca il proprio indirizzo di posta elettronica. Se più di un utente nell&quot;archivio dati ha lo stesso indirizzo di posta elettronica, viene restituito il primo nome utente rilevato.       Spazi iniziali e finali vengono rimossi da tutti i valori di parametro."
  example:
  - "The following code example retrieves the user name for a specified e-mail address.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/csharp/m-system.web.security.me_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/visualbasic/m-system.web.security.me_5_1.aspx)]"
  syntax:
    content: public static string GetUserNameByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "L&quot;indirizzo di posta elettronica da cercare."
    return:
      type: System.String
      description: "Il nome utente in cui l&quot;indirizzo di posta elettronica per l&quot;utente corrisponde all&quot;indirizzo di posta elettronica specificato. Se viene trovata alcuna corrispondenza, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> viene restituito."
  overload: System.Web.Security.Membership.GetUserNameByEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.HashAlgorithmType
  id: HashAlgorithmType
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: System.Web.Security.Membership.HashAlgorithmType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Identificatore dell&quot;algoritmo utilizzato per le password hash."
  remarks: "La proprietà HashAlgorithmType identifica l&quot;algoritmo hash personalizzato utilizzato dalla <xref:System.Web.Security.Membership>classe.</xref:System.Web.Security.Membership> Impostare la proprietà HashAlgorithmType utilizzando il `hashAlgorithmType` attributo dell&quot;elemento.       .NET Framework consente di configurare le classi di crittografia personalizzato utilizzando la sezione di configurazione elemento. La proprietà HashAlgorithmType deve corrispondere il `name` attributo dell&quot;elemento in un elemento. Per ulteriori informazioni, vedere [Mapping di nomi di algoritmi a classi di crittografia](~/add/includes/ajax-current-ext-md.md).       Se la proprietà HashAlgorithmType non è impostata, la <xref:System.Web.Security.Membership>classe Usa l&quot;algoritmo hash impostato nel `validation` attributo dell&quot;elemento.</xref:System.Web.Security.Membership>"
  syntax:
    content: public static string HashAlgorithmType { get; }
    return:
      type: System.String
      description: "Identificatore dell&quot;algoritmo utilizzato per le password hash, o vuoto per utilizzare l&quot;algoritmo hash predefinito."
  overload: System.Web.Security.Membership.HashAlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  id: MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene il numero di tentativi di immissione della risposta consentiti prima che l&quot;utente di appartenenza venga bloccato o password non valida."
  remarks: "La proprietà MaxInvalidPasswordAttempts funziona in combinazione con la <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>proprietà salvaguardarsi da un&quot;origine non desiderati utilizzando ripetuti tentativi di indovinare la password o una risposta per la password di un utente di appartenenza.</xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       Se il numero di password non valida o risposte password immessa per un utente di appartenenza è maggiore o uguale al valore della proprietà MaxInvalidPasswordAttempts entro il numero di minuti specificato mediante il <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>proprietà, quindi l&quot;utente è bloccato dal sito Web mediante l&quot;impostazione la <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>proprietà `true` fino a quando l&quot;utente viene sbloccato mediante una chiamata al <xref:System.Web.Security.MembershipUser.UnlockUser%2A>(metodo).</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A> </xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       Se una password valida o la risposta prima che venga raggiunto il valore della proprietà MaxInvalidPasswordAttempts, il contatore che tiene traccia del numero di tentativi non validi è impostato su zero.       Tentativi di risposta per la password e password non valida vengono registrati separatamente. Ad esempio, se la proprietà MaxInvalidPasswordAttempts è impostata su 5, l&quot;utente dispone 5 tentativi per immettere la password corretta e fino a cinque tentativi per immettere una risposta per la password corretta prima di essere bloccati.       Il valore della proprietà MaxInvalidPasswordAttempts è impostato nella configurazione dell&quot;applicazione mediante il `maxInvalidPasswordAttempts` attributo dell&quot;elemento di configurazione.       Se il <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>proprietà `false`, non vengono registrati i tentativi di immissione della risposta non valida.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of an application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MaxInvalidPasswordAttempts { get; }
    return:
      type: System.Int32
      description: "Il numero di tentativi di immissione della risposta consentiti prima che l&quot;utente di appartenenza venga bloccato o password non valida."
  overload: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  id: MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene il numero minimo di caratteri speciali che devono essere presenti in una password valida."
  remarks: "La proprietà MinRequiredNonAlphanumericCharacters restituisce il numero minimo di caratteri speciali e non alfanumerici che devono essere immessi per creare una password valida per il provider di appartenenze specificato nella <xref:System.Web.Security.Membership.Provider%2A>proprietà.</xref:System.Web.Security.Membership.Provider%2A>       Il valore della proprietà MinRequiredNonAlphanumericCharacters è impostato nella configurazione dell&quot;applicazione mediante il `minRequiredNonAlphanumericCharacters` attributo dell&quot;elemento di configurazione.       Un carattere non alfanumerico è un carattere per il quale il <xref:System.Char.IsLetterOrDigit%2A>restituisce `false`.</xref:System.Char.IsLetterOrDigit%2A>"
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonAlphanumericCharacters` attribute to 1 character.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredNonAlphanumericCharacters=\"1\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredNonAlphanumericCharacters { get; }
    return:
      type: System.Int32
      description: "Il numero minimo di caratteri speciali che devono essere presenti in una password valida."
  overload: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  id: MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: System.Web.Security.Membership.MinRequiredPasswordLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene la lunghezza minima richiesta per una password."
  remarks: "La proprietà MinRequiredPasswordLength Ottiene il numero minimo di caratteri che devono essere immessi per creare una password valida per il provider di appartenenze specificato nella <xref:System.Web.Security.Membership.Provider%2A>proprietà.</xref:System.Web.Security.Membership.Provider%2A>       Il valore della proprietà MinRequiredPasswordLength è impostato nella configurazione dell&quot;applicazione mediante il `minRequiredPasswordLength` attributo dell&quot;elemento di configurazione."
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredPasswordLength=\"7\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredPasswordLength { get; }
    return:
      type: System.Int32
      description: "La lunghezza minima richiesta per una password."
  overload: System.Web.Security.Membership.MinRequiredPasswordLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  id: PasswordAttemptWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: System.Web.Security.Membership.PasswordAttemptWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene l&quot;intervallo di tempo in cui consecutivi non riusciti di fornire una password valida o la risposta vengono registrati."
  remarks: "La proprietà PasswordAttemptWindow funziona in combinazione con la <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>proprietà per impedire che un&quot;origine indesiderata riesca a indovinare la password o una risposta per la password di un utente di appartenenza attraverso ripetuti tentativi.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Quando un utente tenta di accedere, modificare o reimpostare la propria password, solo un determinato numero di tentativi consecutivi consentito all&quot;interno di un intervallo di tempo specificato. La lunghezza di questa finestra ora viene specificata nella proprietà PasswordAttemptWindow, che identifica il numero di minuti consentiti tra tentativi non validi.       Se il numero di tentativi consecutivi non riusciti di reimpostazione della password è uguale al valore archiviato nel <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>, proprietà e il tempo trascorso dall&quot;ultimo tentativo non valido è inferiore al numero di minuti specificato nella proprietà PasswordAttemptWindow, l&quot;utente di appartenenza viene bloccato.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> L&quot;utente viene bloccato impostando il <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>proprietà `true` fino a quando l&quot;utente viene sbloccato mediante una chiamata al <xref:System.Web.Security.MembershipUser.UnlockUser%2A>metodo.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A>       Se l&quot;intervallo tra il tentativo corrente e l&quot;ultimo tentativo non riuscito è maggiore dell&quot;impostazione di proprietà PasswordAttemptWindow, il tentativo non valido corrente viene conteggiato come primo. Se prima che venga raggiunto il numero massimo di tentativi non validi consentiti, viene fornita una risposta password valida, il numero di tentativi non validi di immissione della risposta è impostato su 0 (zero). Se viene fornita una password valida prima non valido consentiti il numero massimo di tentativi viene raggiunto il numero di tentativi di password non valida e il numero di tentativi di risposta per la password non validi vengono impostati su 0 (zero).       Tentativi di password e della risposta segreta non validi si accumulano indipendentemente uno da altro. Ad esempio, se il <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>è impostato su 5 e tre tentativi di password non valida vengono effettuati seguiti da due tentativi di immissione della risposta non valida, due tentativi di password non valida (o altri tre tentativi di immissione della risposta non valida) devono essere all&quot;interno di PasswordAttemptWindow dell&quot;utente di appartenenza venga bloccato.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>       Il valore della proprietà PasswordAttemptWindow è impostato nella configurazione dell&quot;applicazione utilizzando il `passwordAttemptWindow` attributo della sezione dell&quot;elemento di configurazione.       Se il <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>è impostata su `false`, non vengono registrati i tentativi di immissione della risposta non valida.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int PasswordAttemptWindow { get; }
    return:
      type: System.Int32
      description: "L&quot;intervallo di tempo, espresso in minuti, durante il quale consecutivi non tenta di fornire una password valida o la risposta viene tenuta traccia. Il valore predefinito è 10 minuti. Se l&quot;intervallo tra il tentativo corrente e l&quot;ultimo tentativo non riuscito è maggiore dell&quot;impostazione di proprietà PasswordAttemptWindow, ogni tentativo non riuscito viene considerato come se fosse il primo tentativo non riuscito."
  overload: System.Web.Security.Membership.PasswordAttemptWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  id: PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene l&quot;espressione regolare utilizzata per valutare una password."
  remarks: "La proprietà PasswordStrengthRegularExpression Ottiene l&quot;espressione regolare utilizzata per valutare la complessità delle password dal provider specificata nel <xref:System.Web.Security.Membership.Provider%2A>proprietà.</xref:System.Web.Security.Membership.Provider%2A>       La proprietà PasswordStrengthRegularExpression è impostata nella configurazione dell&quot;applicazione mediante il `passwordStrengthRegularExpression` attributo dell&quot;elemento di configurazione.       Per ulteriori informazioni sulle espressioni regolari, vedere [espressioni regolari di .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates the password meets the following criteria:  \n  \n-   Is greater than seven characters.  \n  \n-   Contains at least one digit.  \n  \n-   Contains at least one special (non-alphanumeric) character.  \n  \n If the password does not meet these criteria, the password is not accepted by the membership provider.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordStrengthRegularExpression=\" @\\\"(?=.{6,})(?=(.*\\d){1,})(?=(.*\\W){1,})\"  \n      />  \n   </providers>  \n</membership>  \n```"
  syntax:
    content: public static string PasswordStrengthRegularExpression { get; }
    return:
      type: System.String
      description: "Un&quot;espressione regolare usata per valutare una password."
  overload: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.Provider
  id: Provider
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Provider
  nameWithType: Membership.Provider
  fullName: System.Web.Security.Membership.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene un riferimento al provider di appartenenze predefinito per l&quot;applicazione."
  remarks: "La proprietà del Provider consente di fare riferimento direttamente a provider di appartenenze predefinito per un&quot;applicazione. Viene in genere utilizzato per accedere ai membri del provider di appartenenze personalizzati non fanno parte della <xref:System.Web.Security.MembershipProvider>classe base astratta.</xref:System.Web.Security.MembershipProvider>"
  example:
  - "The following code example accesses the default <xref:System.Web.Security.SqlMembershipProvider> enabled for the application using the Provider property in order to determine the value of the custom <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property.  \n  \n [!code-vb[System.Web.Security.Membership#6](~/add/codesnippet/visualbasic/p-system.web.security.me_0_1.aspx)]\n [!code-cs[System.Web.Security.Membership#6](~/add/codesnippet/csharp/p-system.web.security.me_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipProvider Provider { get; }
    return:
      type: System.Web.Security.MembershipProvider
      description: "Il provider di appartenenze predefinito per l&quot;applicazione esposta tramite la <xref:System.Web.Security.MembershipProvider>classe base astratta.</xref:System.Web.Security.MembershipProvider>"
  overload: System.Web.Security.Membership.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.Providers
  id: Providers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Providers
  nameWithType: Membership.Providers
  fullName: System.Web.Security.Membership.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene una raccolta di provider di appartenenze per l&quot;applicazione ASP.NET."
  remarks: "La proprietà provider fa riferimento a tutti i provider di appartenenze abilitati per un&quot;applicazione, compresi i provider aggiunti nel file Web. config per l&quot;applicazione e nel file Machine. config per tutte le applicazioni. È possibile controllare i provider di appartenenze sono disponibili per un&quot;applicazione mediante il `providers` elemento della sezione di configurazione dell&quot;applicazione. Ad esempio, l&quot;esempio seguente viene mostrata la sezione nel file Web. config per un&quot;applicazione che rimuove il <xref:System.Web.Security.SqlMembershipProvider>istanza (`AspNetSqlProvider`) specificato nel file di configurazione del computer e aggiunge un <xref:System.Web.Security.SqlMembershipProvider>istanza denominata `SqlProvider` come provider di appartenenze predefinito per l&quot;applicazione.</xref:System.Web.Security.SqlMembershipProvider> </xref:System.Web.Security.SqlMembershipProvider>      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <membership defaultProvider=&quot;SqlProvider&quot; userIsOnlineTimeWindow=&quot;20&quot;>         <providers>           <remove name=&quot;AspNetSqlProvider&quot; />             <add name=&quot;SqlProvider&quot;               type=&quot;System.Web.Security.SqlMembershipProvider&quot;               connectionStringName=&quot;SqlServices&quot;               enablePasswordRetrieval=&quot;false&quot;               enablePasswordReset=&quot;true&quot;               requiresQuestionAndAnswer=&quot;true&quot;               passwordFormat=&quot;Hashed&quot;               applicationName=&quot;/&quot; />         </providers>       </membership>     </system.web>   </configuration>   ```Quando si specifica il [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) sezione, è necessario specificare il `defaultProvider` attributo. Se non si specifica un [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) sezione nel file Web. config, i valori della configurazione del computer vengono utilizzati e <xref:System.Web.Security.SqlMembershipProvider>istanza denominata `AspNetSqlProvider` è definito come il `defaultProvider`.</xref:System.Web.Security.SqlMembershipProvider>       È possibile ottenere un riferimento fortemente tipizzato a un provider dalla raccolta di provider per l&quot;indicizzazione in base al nome del provider di appartenenze e viene eseguito il cast al tipo desiderato."
  example:
  - "The following code example lists the providers enabled for an application and their respective types.  \n  \n [!code-cs[System.Web.Security.Membership#7](~/add/codesnippet/csharp/p-system.web.security.me_1_1.aspx)]\n [!code-vb[System.Web.Security.Membership#7](~/add/codesnippet/visualbasic/p-system.web.security.me_1_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipProviderCollection Providers { get; }
    return:
      type: System.Web.Security.MembershipProviderCollection
      description: "Oggetto <xref:System.Web.Security.MembershipProviderCollection>dei provider di appartenenze configurato per l&quot;applicazione ASP.NET.</xref:System.Web.Security.MembershipProviderCollection>"
  overload: System.Web.Security.Membership.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  id: RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene un valore che indica se il provider di appartenenze predefinito richiede all&quot;utente di rispondere a una domanda per la reimpostazione della password e il recupero."
  remarks: "La richiesta di una password segreta offre un ulteriore livello di sicurezza durante il recupero o la reimpostazione delle password di un utente. Gli utenti possono fornire una domanda e risposta quando viene creato il proprio nome utente che può successivamente usare per recuperare o reimpostare una password dimenticata.       RequiresQuestionAndAnswer viene controllata quando <xref:System.Web.Security.MembershipUser.ResetPassword%2A>o <xref:System.Web.Security.MembershipUser.GetPassword%2A>viene chiamato.</xref:System.Web.Security.MembershipUser.GetPassword%2A> </xref:System.Web.Security.MembershipUser.ResetPassword%2A> Il provider fornito con .NET Framework genera un <xref:System.NotSupportedException>se RequiresQuestionAndAnswer `true` e la risposta segreta fornita è `null`.</xref:System.NotSupportedException>       Se <xref:System.Web.Security.Membership.EnablePasswordReset%2A>e <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A>sono entrambi `false`, RequiresQuestionAndAnswer possono comunque essere utilizzati per applicare la creazione di domande e risposte quando vengono creati nuovi utenti; tuttavia, la domanda e la risposta non verrà utilizzati.</xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> </xref:System.Web.Security.Membership.EnablePasswordReset%2A> È possibile recuperare la domanda usando la <xref:System.Web.Security.MembershipUser>classe.</xref:System.Web.Security.MembershipUser>       Per ulteriori informazioni, vedere <xref:System.Web.Security.MembershipUser.ResetPassword%2A>e <xref:System.Web.Security.MembershipUser.GetPassword%2A>.</xref:System.Web.Security.MembershipUser.GetPassword%2A> </xref:System.Web.Security.MembershipUser.ResetPassword%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider>, enables password reset, and requires a password answer when performing a reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code sample checks the value of RequiresQuestionAndAnswer and adds the necessary controls for a password question and answer to be supplied when creating a user.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/p-system.web.security.me_3_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/p-system.web.security.me_3_1.aspx)]"
  syntax:
    content: public static bool RequiresQuestionAndAnswer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se una risposta per la password è necessaria per la reimpostazione della password e il recupero; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  id: UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Aggiorna il database con le informazioni per l&quot;utente specificato."
  remarks: "UpdateUser accetta come input, un <xref:System.Web.Security.MembershipUser>oggetto popolato con le informazioni correnti dell&quot;utente di appartenenza e aggiorna l&quot;origine dati con i valori delle proprietà di <xref:System.Web.Security.MembershipUser>oggetto.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> È possibile costruire un nuovo <xref:System.Web.Security.MembershipUser>, o recuperare un <xref:System.Web.Security.MembershipUser>oggetto popolato con i valori correnti nell&quot;origine dati mediante il <xref:System.Web.Security.Membership.GetUser%2A>, <xref:System.Web.Security.Membership.GetAllUsers%2A>, <xref:System.Web.Security.Membership.FindUsersByName%2A>, o <xref:System.Web.Security.Membership.FindUsersByEmail%2A>metodi.</xref:System.Web.Security.Membership.FindUsersByEmail%2A> </xref:System.Web.Security.Membership.FindUsersByName%2A> </xref:System.Web.Security.Membership.GetAllUsers%2A> </xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>"
  example:
  - "The following code example updates the e-mail address for the current logged-on user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_8_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_8_1.aspx)]"
  syntax:
    content: public static void UpdateUser (System.Web.Security.MembershipUser user);
    parameters:
    - id: user
      type: System.Web.Security.MembershipUser
      description: "Oggetto <xref:System.Web.Security.MembershipUser>oggetto che rappresenta l&quot;utente da aggiornare e le informazioni aggiornate per l&quot;utente.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.UpdateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>user</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  id: UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Specifica il numero di minuti dopo l&quot;ultima attività indicatore di data/ora per un utente durante il quale l&quot;utente viene considerato in linea."
  remarks: "Il valore della proprietà UserIsOnlineTimeWindow viene controllato durante la chiamata a <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>.</xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A> Se il <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>per un utente è maggiore di data e ora correnti meno il valore UserIsOnlineTimeWindow in minuti, quindi l&quot;utente viene considerato in linea.</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> È possibile determinare se un utente di appartenenza è considerato in linea con la <xref:System.Web.Security.MembershipUser.IsOnline%2A>proprietà di <xref:System.Web.Security.MembershipUser>classe.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser.IsOnline%2A>       Il <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>per un utente viene aggiornato quando la convalida delle credenziali di un utente mediante correttamente il <xref:System.Web.Security.Membership.ValidateUser%2A>metodo.</xref:System.Web.Security.Membership.ValidateUser%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A> È inoltre possibile aggiornare il <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>per un utente di appartenenza quando si chiama uno del <xref:System.Web.Security.Membership.GetUser%2A>Overload.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Se si chiama un <xref:System.Web.Security.Membership.GetUser%2A>overload che accetta un `userIsOnline` parametro, specificare un valore di `true` per aggiornare il <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>per l&quot;utente.</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> </xref:System.Web.Security.Membership.GetUser%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `userIsOnlineTimeWindow` attribute to 20 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int UserIsOnlineTimeWindow { get; }
    return:
      type: System.Int32
      description: "Il numero di minuti dopo l&quot;ultima attività indicatore di data/ora per un utente durante il quale l&quot;utente viene considerato in linea."
  overload: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  id: ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidateUser(String,String)
  nameWithType: Membership.ValidateUser(String,String)
  fullName: System.Web.Security.Membership.ValidateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Verifica che il nome utente e la password siano validi."
  remarks: "ValidateUser fornisce un modo semplice per verificare un nome utente e una password dall&quot;origine dati. Si noti che, se il `username` parametro è vuoto o `null`, un <xref:System.Web.HttpException>viene generata un&quot;eccezione.</xref:System.Web.HttpException>"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.Membership> class. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL by the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/m-system.web.security.me_7_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.me_7_1.aspx)]"
  syntax:
    content: public static bool ValidateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "Il nome dell&quot;utente da convalidare."
    - id: password
      type: System.String
      description: "La password per l&quot;utente specificato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il nome utente e la password sono validi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.ValidateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ValidatingPassword
  id: ValidatingPassword
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: System.Web.Security.Membership.ValidatingPassword
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Si verifica quando viene creato un utente, viene modificata una password o una password viene reimpostata."
  remarks: "Il <xref:System.Web.Security.MembershipProvider.ValidatingPassword>evento viene generato quando il <xref:System.Web.Security.MembershipProvider.CreateUser%2A>(metodo), il <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>metodo, o <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>viene chiamato metodo del provider di appartenenze.</xref:System.Web.Security.MembershipProvider.ResetPassword%2A> </xref:System.Web.Security.MembershipProvider.ChangePassword%2A> </xref:System.Web.Security.MembershipProvider.CreateUser%2A> </xref:System.Web.Security.MembershipProvider.ValidatingPassword>       È possibile utilizzare il <xref:System.Web.Security.MembershipProvider.ValidatingPassword>evento per convalidare i formati di password e i valori per gli utenti di appartenenza.</xref:System.Web.Security.MembershipProvider.ValidatingPassword>       È possibile annullare corrente <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, o <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>azione impostando il <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>proprietà del metodo <xref:System.Web.Security.ValidatePasswordEventArgs>per `true` durante il <xref:System.Web.Security.MembershipProvider.ValidatingPassword>evento.</xref:System.Web.Security.MembershipProvider.ValidatingPassword> </xref:System.Web.Security.ValidatePasswordEventArgs> </xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> </xref:System.Web.Security.MembershipProvider.ResetPassword%2A> </xref:System.Web.Security.MembershipProvider.ChangePassword%2A> </xref:System.Web.Security.MembershipProvider.CreateUser%2A>       Se si annulla l&quot;azione corrente impostando la <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>proprietà `true`, è possibile impostare il <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>proprietà del metodo <xref:System.Web.Security.ValidatePasswordEventArgs>a un&quot;eccezione che descrive il motivo dell&quot;errore di convalida della password.</xref:System.Web.Security.ValidatePasswordEventArgs> </xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> </xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> La chiamata al metodo genererà l&quot;eccezione che il <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>è impostata su.</xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> Se il <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>proprietà `null`, il chiamante verrà generata un&quot;eccezione generica di errore di convalida della password.</xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>"
  example:
  - "The following code example shows a <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event that validates the format of the password for a user and cancels the action if the password does not match the required format.  \n  \n [!code-cs[System.Web.Security.Membership#11](~/add/codesnippet/csharp/e-system.web.security.me_1.aspx)]\n [!code-vb[System.Web.Security.Membership#11](~/add/codesnippet/visualbasic/e-system.web.security.me_1.aspx)]"
  syntax:
    content: public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;
    return:
      type: System.Web.Security.MembershipValidatePasswordEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Security.MembershipCreateUserException
  isExternal: true
  name: System.Web.Security.MembershipCreateUserException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.Membership.ApplicationName
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: System.Web.Security.Membership.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String)
  nameWithType: Membership.CreateUser(String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String)
- uid: System.Web.Security.MembershipUser
  parent: System.Web.Security
  isExternal: true
  name: MembershipUser
  nameWithType: MembershipUser
  fullName: System.Web.Security.MembershipUser
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String)
  nameWithType: Membership.CreateUser(String,String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String)
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.MembershipCreateStatus
  parent: System.Web.Security
  isExternal: true
  name: MembershipCreateStatus
  nameWithType: MembershipCreateStatus
  fullName: System.Web.Security.MembershipCreateStatus
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: System.Web.Security.Membership.DeleteUser(String)
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String,Boolean)
  nameWithType: Membership.DeleteUser(String,Boolean)
  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)
- uid: System.Web.Security.Membership.EnablePasswordReset
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: System.Web.Security.Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: System.Web.Security.Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String)
- uid: System.Web.Security.MembershipUserCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipUserCollection
  nameWithType: MembershipUserCollection
  fullName: System.Web.Security.MembershipUserCollection
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: System.Web.Security.Membership.FindUsersByName(String)
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword(Int32,Int32)
  nameWithType: Membership.GeneratePassword(Int32,Int32)
  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)
- uid: System.Web.Security.Membership.GetAllUsers
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: System.Web.Security.Membership.GetAllUsers()
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()
- uid: System.Web.Security.Membership.GetUser
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: System.Web.Security.Membership.GetUser()
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: System.Web.Security.Membership.GetUser(Boolean)
- uid: System.Web.Security.Membership.GetUser(System.Object)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: System.Web.Security.Membership.GetUser(Object)
- uid: System.Web.Security.Membership.GetUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: System.Web.Security.Membership.GetUser(String)
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object,Boolean)
  nameWithType: Membership.GetUser(Object,Boolean)
  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String,Boolean)
  nameWithType: Membership.GetUser(String,Boolean)
  fullName: System.Web.Security.Membership.GetUser(String,Boolean)
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)
- uid: System.Web.Security.Membership.HashAlgorithmType
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: System.Web.Security.Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: System.Web.Security.Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: System.Web.Security.Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
  fullName: System.Web.Security.Membership.Provider
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.Web.Security.Membership.Providers
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
  fullName: System.Web.Security.Membership.Providers
- uid: System.Web.Security.MembershipProviderCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipProviderCollection
  nameWithType: MembershipProviderCollection
  fullName: System.Web.Security.MembershipProviderCollection
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser(String,String)
  nameWithType: Membership.ValidateUser(String,String)
  fullName: System.Web.Security.Membership.ValidateUser(String,String)
- uid: System.Web.Security.Membership.ValidatingPassword
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: System.Web.Security.Membership.ValidatingPassword
- uid: System.Web.Security.MembershipValidatePasswordEventHandler
  parent: System.Web.Security
  isExternal: true
  name: MembershipValidatePasswordEventHandler
  nameWithType: MembershipValidatePasswordEventHandler
  fullName: System.Web.Security.MembershipValidatePasswordEventHandler
- uid: System.Web.Security.Membership.ApplicationName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
- uid: System.Web.Security.Membership.CreateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser
  nameWithType: Membership.CreateUser
- uid: System.Web.Security.Membership.DeleteUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser
  nameWithType: Membership.DeleteUser
- uid: System.Web.Security.Membership.EnablePasswordReset*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail
  nameWithType: Membership.FindUsersByEmail
- uid: System.Web.Security.Membership.FindUsersByName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName
  nameWithType: Membership.FindUsersByName
- uid: System.Web.Security.Membership.GeneratePassword*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword
  nameWithType: Membership.GeneratePassword
- uid: System.Web.Security.Membership.GetAllUsers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers
  nameWithType: Membership.GetAllUsers
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline
  nameWithType: Membership.GetNumberOfUsersOnline
- uid: System.Web.Security.Membership.GetUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser
  nameWithType: Membership.GetUser
- uid: System.Web.Security.Membership.GetUserNameByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail
  nameWithType: Membership.GetUserNameByEmail
- uid: System.Web.Security.Membership.HashAlgorithmType*
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
- uid: System.Web.Security.Membership.Providers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser
  nameWithType: Membership.UpdateUser
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser
  nameWithType: Membership.ValidateUser
