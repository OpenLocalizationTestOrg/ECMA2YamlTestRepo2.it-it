### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.MemberDescriptor
  id: MemberDescriptor
  children:
  - System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.MemberDescriptor.#ctor(System.String)
  - System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  - System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])
  - System.ComponentModel.MemberDescriptor.AttributeArray
  - System.ComponentModel.MemberDescriptor.Attributes
  - System.ComponentModel.MemberDescriptor.Category
  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - System.ComponentModel.MemberDescriptor.Description
  - System.ComponentModel.MemberDescriptor.DesignTimeOnly
  - System.ComponentModel.MemberDescriptor.DisplayName
  - System.ComponentModel.MemberDescriptor.Equals(System.Object)
  - System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  - System.ComponentModel.MemberDescriptor.GetHashCode
  - System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  - System.ComponentModel.MemberDescriptor.IsBrowsable
  - System.ComponentModel.MemberDescriptor.Name
  - System.ComponentModel.MemberDescriptor.NameHashCode
  langs:
  - csharp
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
  type: Class
  summary: "Rappresenta un membro di classe, ad esempio una proprietà o evento. Si tratta di una classe base astratta."
  remarks: "MemberDescriptor è la classe base per il <xref:System.ComponentModel.EventDescriptor>e <xref:System.ComponentModel.PropertyDescriptor>classi.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.EventDescriptor> La <xref:System.ComponentModel.EventDescriptor>classe fornisce una descrizione di un evento e <xref:System.ComponentModel.PropertyDescriptor>classe fornisce una descrizione di una proprietà.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.EventDescriptor>       Questa classe definisce le proprietà e metodi per accedere ai relativi attributi memorizzati. Il <xref:System.ComponentModel.MemberDescriptor.Attributes%2A>proprietà ottiene la raccolta di attributi.</xref:System.ComponentModel.MemberDescriptor.Attributes%2A> Il <xref:System.ComponentModel.MemberDescriptor.Category%2A>, <xref:System.ComponentModel.MemberDescriptor.IsBrowsable%2A>, <xref:System.ComponentModel.MemberDescriptor.Description%2A>, e <xref:System.ComponentModel.MemberDescriptor.DesignTimeOnly%2A>recuperano i valori di tali attributi specifici.</xref:System.ComponentModel.MemberDescriptor.DesignTimeOnly%2A> </xref:System.ComponentModel.MemberDescriptor.Description%2A> </xref:System.ComponentModel.MemberDescriptor.IsBrowsable%2A> </xref:System.ComponentModel.MemberDescriptor.Category%2A> Il <xref:System.ComponentModel.MemberDescriptor.Name%2A>e <xref:System.ComponentModel.MemberDescriptor.DisplayName%2A>forniscono il nome del membro.</xref:System.ComponentModel.MemberDescriptor.DisplayName%2A> </xref:System.ComponentModel.MemberDescriptor.Name%2A>       Definisce inoltre la MemberDescriptor un <xref:System.ComponentModel.MemberDescriptor.Equals%2A>confrontare questo MemberDescriptor a un altro metodo.</xref:System.ComponentModel.MemberDescriptor.Equals%2A>      > [!NOTE] > In genere, si eredita dal <xref:System.ComponentModel.EventDescriptor>e <xref:System.ComponentModel.PropertyDescriptor>classi e non da questa classe.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.EventDescriptor>"
  example:
  - Since most of the usage of this class will fall on the inherited classes <xref:System.ComponentModel.EventDescriptor> and <xref:System.ComponentModel.PropertyDescriptor>, refer to the examples in these classes.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class MemberDescriptor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  id: '#ctor(System.ComponentModel.MemberDescriptor)'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: MemberDescriptor(MemberDescriptor)
  nameWithType: MemberDescriptor.MemberDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(MemberDescriptor)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> classe con l&quot;oggetto specificato <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref>."
  syntax:
    content: protected MemberDescriptor (System.ComponentModel.MemberDescriptor descr);
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: "Oggetto <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> che contiene il nome del membro e i relativi attributi."
  overload: System.ComponentModel.MemberDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: MemberDescriptor(String)
  nameWithType: MemberDescriptor.MemberDescriptor(String)
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> classe con il nome specificato del membro."
  syntax:
    content: protected MemberDescriptor (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del membro."
  overload: System.ComponentModel.MemberDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nome è una stringa vuota (&quot;&quot;) o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  id: '#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: MemberDescriptor(MemberDescriptor,Attribute[])
  nameWithType: MemberDescriptor.MemberDescriptor(MemberDescriptor,Attribute[])
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(MemberDescriptor,Attribute[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> classe con il nome specificato <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> e gli attributi in entrambi i vecchi <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> e <xref:System.Attribute>matrice.</xref:System.Attribute>"
  remarks: "Questo costruttore aggiunge gli attributi di <xref:System.Attribute>matrice per gli attributi nel vecchio <xref:System.ComponentModel.MemberDescriptor>.</xref:System.ComponentModel.MemberDescriptor> </xref:System.Attribute>"
  syntax:
    content: protected MemberDescriptor (System.ComponentModel.MemberDescriptor oldMemberDescriptor, Attribute[] newAttributes);
    parameters:
    - id: oldMemberDescriptor
      type: System.ComponentModel.MemberDescriptor
      description: "Oggetto <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> con il nome del membro e i relativi attributi."
    - id: newAttributes
      type: System.Attribute[]
      description: "Matrice di <xref:System.Attribute>oggetti con gli attributi che si desidera aggiungere al membro.</xref:System.Attribute>"
  overload: System.ComponentModel.MemberDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])
  id: '#ctor(System.String,System.Attribute[])'
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: MemberDescriptor(String,Attribute[])
  nameWithType: MemberDescriptor.MemberDescriptor(String,Attribute[])
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(String,Attribute[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> classe con il nome specificato del membro e una matrice di attributi."
  syntax:
    content: protected MemberDescriptor (string name, Attribute[] attributes);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del membro."
    - id: attributes
      type: System.Attribute[]
      description: "Matrice di tipo <xref:System.Attribute>che contiene gli attributi dei membri.</xref:System.Attribute>"
  overload: System.ComponentModel.MemberDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nome è una stringa vuota (&quot;&quot;) o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.AttributeArray
  id: AttributeArray
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: AttributeArray
  nameWithType: MemberDescriptor.AttributeArray
  fullName: System.ComponentModel.MemberDescriptor.AttributeArray
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene o imposta una matrice di attributi."
  remarks: "L&quot;accesso a questo membro consente alle classi derivate di modificare il set predefinito di attributi utilizzati nel <xref:System.ComponentModel.MemberDescriptor.CreateAttributeCollection%2A>metodo.</xref:System.ComponentModel.MemberDescriptor.CreateAttributeCollection%2A>"
  syntax:
    content: protected virtual Attribute[] AttributeArray { get; set; }
    return:
      type: System.Attribute[]
      description: "Matrice di tipo <xref:System.Attribute>che contiene gli attributi di questo membro.</xref:System.Attribute>"
  overload: System.ComponentModel.MemberDescriptor.AttributeArray*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Attributes
  id: Attributes
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Attributes
  nameWithType: MemberDescriptor.Attributes
  fullName: System.ComponentModel.MemberDescriptor.Attributes
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene la raccolta di attributi per questo membro."
  remarks: "Se è presente alcun <xref:System.ComponentModel.AttributeCollection>per questo membro, questa proprietà chiama il <xref:System.ComponentModel.MemberDescriptor.CreateAttributeCollection%2A>metodo per creare un nuovo <xref:System.ComponentModel.AttributeCollection>usando la matrice di <xref:System.Attribute>gli oggetti passati al costruttore.</xref:System.Attribute> </xref:System.ComponentModel.AttributeCollection> </xref:System.ComponentModel.MemberDescriptor.CreateAttributeCollection%2A> </xref:System.ComponentModel.AttributeCollection>"
  syntax:
    content: public virtual System.ComponentModel.AttributeCollection Attributes { get; }
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Un <xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> che fornisce gli attributi per questo membro, o una raccolta vuota se non sono presenti attributi in <xref:System.ComponentModel.MemberDescriptor.AttributeArray*>.</xref:System.ComponentModel.MemberDescriptor.AttributeArray*>"
  overload: System.ComponentModel.MemberDescriptor.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Category
  id: Category
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Category
  nameWithType: MemberDescriptor.Category
  fullName: System.ComponentModel.MemberDescriptor.Category
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il nome della categoria a cui appartiene il membro, come specificato nella <xref href=&quot;System.ComponentModel.CategoryAttribute&quot;> </xref>."
  remarks: "Una finestra di progettazione è possibile utilizzare il valore della proprietà per visualizzare i membri in categorie."
  syntax:
    content: public virtual string Category { get; }
    return:
      type: System.String
      description: "Il nome della categoria a cui appartiene il membro. Se è presente alcun <xref href=&quot;System.ComponentModel.CategoryAttribute&quot;> </xref>, il nome di categoria è impostato per la categoria predefinita, <xref uid=&quot;langword_csharp_Misc&quot; name=&quot;Misc&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MemberDescriptor.Category*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  id: CreateAttributeCollection
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: CreateAttributeCollection()
  nameWithType: MemberDescriptor.CreateAttributeCollection()
  fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Crea una raccolta di attributi usando la matrice di attributi passati al costruttore."
  remarks: "Questo metodo viene chiamato dal <xref:System.ComponentModel.MemberDescriptor.Attributes%2A>proprietà quando è presente alcun <xref:System.ComponentModel.AttributeCollection>per questo membro.</xref:System.ComponentModel.AttributeCollection> </xref:System.ComponentModel.MemberDescriptor.Attributes%2A> Se non sono presenti attributi <xref:System.ComponentModel.MemberDescriptor.AttributeArray%2A>verrà restituito un oggetto vuoto <xref:System.ComponentModel.AttributeCollection>.</xref:System.ComponentModel.AttributeCollection> </xref:System.ComponentModel.MemberDescriptor.AttributeArray%2A>"
  syntax:
    content: protected virtual System.ComponentModel.AttributeCollection CreateAttributeCollection ();
    parameters: []
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Un nuovo <xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> che contiene il <xref:System.ComponentModel.MemberDescriptor.AttributeArray*>attributi.</xref:System.ComponentModel.MemberDescriptor.AttributeArray*>"
  overload: System.ComponentModel.MemberDescriptor.CreateAttributeCollection*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Description
  id: Description
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Description
  nameWithType: MemberDescriptor.Description
  fullName: System.ComponentModel.MemberDescriptor.Description
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene la descrizione del membro, come specificato nella <xref href=&quot;System.ComponentModel.DescriptionAttribute&quot;> </xref>."
  remarks: "Una finestra di progettazione è possibile utilizzare questa descrizione per visualizzare informazioni su questo membro."
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "La descrizione del membro. Se è presente alcun <xref href=&quot;System.ComponentModel.DescriptionAttribute&quot;> </xref>, il valore della proprietà è impostato sul valore predefinito, ovvero una stringa vuota (&quot;&quot;)."
  overload: System.ComponentModel.MemberDescriptor.Description*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly
  id: DesignTimeOnly
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: DesignTimeOnly
  nameWithType: MemberDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.MemberDescriptor.DesignTimeOnly
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se il membro deve essere impostato solo in fase di progettazione, come specificato nella <xref href=&quot;System.ComponentModel.DesignOnlyAttribute&quot;> </xref>."
  remarks: "Se è presente alcun <xref:System.ComponentModel.DesignOnlyAttribute>, il valore restituito è il valore predefinito, ovvero `false`.</xref:System.ComponentModel.DesignOnlyAttribute>"
  syntax:
    content: public virtual bool DesignTimeOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo membro deve essere impostato solo in fase di progettazione. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se il membro può essere impostato in fase di esecuzione."
  overload: System.ComponentModel.MemberDescriptor.DesignTimeOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.DisplayName
  id: DisplayName
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: DisplayName
  nameWithType: MemberDescriptor.DisplayName
  fullName: System.ComponentModel.MemberDescriptor.DisplayName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il nome che può essere visualizzato in una finestra, ad esempio una finestra delle proprietà."
  syntax:
    content: public virtual string DisplayName { get; }
    return:
      type: System.String
      description: "Il nome da visualizzare per il membro."
  overload: System.ComponentModel.MemberDescriptor.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: MemberDescriptor.Equals(Object)
  fullName: System.ComponentModel.MemberDescriptor.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Confronta questa istanza con l&quot;oggetto specificato per verificare se sono equivalenti."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Oggetto da confrontare con l&quot;istanza corrente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se sono equivalenti; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MemberDescriptor.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  id: FillAttributes(System.Collections.IList)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: FillAttributes(IList)
  nameWithType: MemberDescriptor.FillAttributes(IList)
  fullName: System.ComponentModel.MemberDescriptor.FillAttributes(IList)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Quando sottoposto a override in una classe derivata, aggiunge gli attributi della classe che eredita all&quot;elenco di attributi nella classe padre specificata."
  remarks: "L&quot;ultimo attributo aggiunto all&quot;elenco di attributi duplicati, verrà mantenuto.       Il <xref:System.Collections.IList>con gli attributi è stata creata una sola volta.</xref:System.Collections.IList> Se sono presenti attributi duplicati nell&quot;elenco, viene salvata solo la prima istanza; tutti gli attributi duplicati successivi vengono rimossi dall&quot;elenco."
  syntax:
    content: protected virtual void FillAttributes (System.Collections.IList attributeList);
    parameters:
    - id: attributeList
      type: System.Collections.IList
      description: "Un <xref:System.Collections.IList>che elenca gli attributi nella classe padre.</xref:System.Collections.IList> Inizialmente, questo è vuoto."
  overload: System.ComponentModel.MemberDescriptor.FillAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  id: FindMethod(System.Type,System.String,System.Type[],System.Type)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: FindMethod(Type,String,Type[],Type)
  nameWithType: MemberDescriptor.FindMethod(Type,String,Type[],Type)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(Type,String,Type[],Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Consente di trovare il metodo specificato tramite la reflection, la ricerca solo per i metodi pubblici."
  syntax:
    content: protected static System.Reflection.MethodInfo FindMethod (Type componentClass, string name, Type[] args, Type returnType);
    parameters:
    - id: componentClass
      type: System.Type
      description: "Il componente che contiene il metodo."
    - id: name
      type: System.String
      description: "Il nome del metodo da trovare."
    - id: args
      type: System.Type[]
      description: "Matrice di parametri per il metodo utilizzato per scegliere tra i metodi di overload."
    - id: returnType
      type: System.Type
      description: "Tipo da restituire per il metodo."
    return:
      type: System.Reflection.MethodInfo
      description: "Oggetto <xref:System.Reflection.MethodInfo>che rappresenta il metodo, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il metodo non viene trovato.</xref:System.Reflection.MethodInfo>"
  overload: System.ComponentModel.MemberDescriptor.FindMethod*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  id: FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: FindMethod(Type,String,Type[],Type,Boolean)
  nameWithType: MemberDescriptor.FindMethod(Type,String,Type[],Type,Boolean)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(Type,String,Type[],Type,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Consente di trovare il metodo specificato tramite la reflection, con un&quot;opzione per eseguire la ricerca solo metodi pubblici."
  syntax:
    content: protected static System.Reflection.MethodInfo FindMethod (Type componentClass, string name, Type[] args, Type returnType, bool publicOnly);
    parameters:
    - id: componentClass
      type: System.Type
      description: "Il componente che contiene il metodo."
    - id: name
      type: System.String
      description: "Il nome del metodo da trovare."
    - id: args
      type: System.Type[]
      description: "Matrice di parametri per il metodo utilizzato per scegliere tra i metodi di overload."
    - id: returnType
      type: System.Type
      description: "Tipo da restituire per il metodo."
    - id: publicOnly
      type: System.Boolean
      description: "Se si desidera limitare ricerca per i metodi pubblici."
    return:
      type: System.Reflection.MethodInfo
      description: "Oggetto <xref:System.Reflection.MethodInfo>che rappresenta il metodo, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se il metodo non viene trovato.</xref:System.Reflection.MethodInfo>"
  overload: System.ComponentModel.MemberDescriptor.FindMethod*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: MemberDescriptor.GetHashCode()
  fullName: System.ComponentModel.MemberDescriptor.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce il codice hash per questa istanza."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash per l&quot;oggetto corrente <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref>."
  overload: System.ComponentModel.MemberDescriptor.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  id: GetInvocationTarget(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: GetInvocationTarget(Type,Object)
  nameWithType: MemberDescriptor.GetInvocationTarget(Type,Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvocationTarget(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Recupera l&quot;oggetto che deve essere utilizzato durante la chiamata dei membri."
  remarks: "In genere, il valore restituito sarà lo stesso come il `instance` parametro. Se un altro oggetto è stato associato a questa istanza o se l&quot;istanza è un descrittore di tipo personalizzato, il metodo GetInvocationTarget può restituire un valore diverso."
  syntax:
    content: protected virtual object GetInvocationTarget (Type type, object instance);
    parameters:
    - id: type
      type: System.Type
      description: "Il <xref:System.Type>della destinazione della chiamata.</xref:System.Type>"
    - id: instance
      type: System.Object
      description: "Destinazione potenziale della chiamata."
    return:
      type: System.Object
      description: "Oggetto da utilizzare durante le chiamate dei membri."
  overload: System.ComponentModel.MemberDescriptor.GetInvocationTarget*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>instance</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  id: GetInvokee(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: GetInvokee(Type,Object)
  nameWithType: MemberDescriptor.GetInvokee(Type,Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvokee(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il componente su cui richiamare un metodo."
  syntax:
    content: protected static object GetInvokee (Type componentClass, object component);
    parameters:
    - id: componentClass
      type: System.Type
      description: "Oggetto <xref:System.Type>che rappresenta il tipo di componente questo <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> è associato a.</xref:System.Type> Ad esempio, se questo <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> descrive una proprietà, questo parametro deve essere la classe che viene dichiarata la proprietà."
    - id: component
      type: System.Object
      description: "Un&quot;istanza dell&quot;oggetto da chiamare."
    return:
      type: System.Object
      description: "Un&quot;istanza del componente da richiamare. Questo metodo restituisce una finestra di progettazione quando la proprietà è associata a una finestra di progettazione."
  overload: System.ComponentModel.MemberDescriptor.GetInvokee*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>componentClass</code>or <code>component</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  id: GetSite(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: GetSite(Object)
  nameWithType: MemberDescriptor.GetSite(Object)
  fullName: System.ComponentModel.MemberDescriptor.GetSite(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene un sito del componente per il componente specificato."
  syntax:
    content: protected static System.ComponentModel.ISite GetSite (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Il componente per cui si desidera trovare un sito."
    return:
      type: System.ComponentModel.ISite
      description: "Il sito del componente, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se un sito non esiste."
  overload: System.ComponentModel.MemberDescriptor.GetSite*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.IsBrowsable
  id: IsBrowsable
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: IsBrowsable
  nameWithType: MemberDescriptor.IsBrowsable
  fullName: System.ComponentModel.MemberDescriptor.IsBrowsable
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene un valore che indica se il membro è esplorabile, come specificato nella <xref href=&quot;System.ComponentModel.BrowsableAttribute&quot;> </xref>."
  remarks: "In genere una finestra di progettazione consente di visualizzare i membri che sono esplorabili nella finestra Proprietà."
  syntax:
    content: public virtual bool IsBrowsable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il membro è esplorabile. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se è presente alcun <xref href=&quot;System.ComponentModel.BrowsableAttribute&quot;> </xref>, il valore della proprietà è impostato sul valore predefinito, ovvero <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MemberDescriptor.IsBrowsable*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.Name
  id: Name
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: Name
  nameWithType: MemberDescriptor.Name
  fullName: System.ComponentModel.MemberDescriptor.Name
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il nome del membro."
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "Il nome del membro."
  overload: System.ComponentModel.MemberDescriptor.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MemberDescriptor.NameHashCode
  id: NameHashCode
  parent: System.ComponentModel.MemberDescriptor
  langs:
  - csharp
  name: NameHashCode
  nameWithType: MemberDescriptor.NameHashCode
  fullName: System.ComponentModel.MemberDescriptor.NameHashCode
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il codice hash per il nome del membro, come specificato in <xref:System.String.GetHashCode*>.</xref:System.String.GetHashCode*>"
  syntax:
    content: protected virtual int NameHashCode { get; }
    return:
      type: System.Int32
      description: "Il codice hash per il nome del membro."
  overload: System.ComponentModel.MemberDescriptor.NameHashCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor(MemberDescriptor)
  nameWithType: MemberDescriptor.MemberDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(MemberDescriptor)
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.String)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor(String)
  nameWithType: MemberDescriptor.MemberDescriptor(String)
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor(MemberDescriptor,Attribute[])
  nameWithType: MemberDescriptor.MemberDescriptor(MemberDescriptor,Attribute[])
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(MemberDescriptor,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor(String,Attribute[])
  nameWithType: MemberDescriptor.MemberDescriptor(String,Attribute[])
  fullName: System.ComponentModel.MemberDescriptor.MemberDescriptor(String,Attribute[])
- uid: System.ComponentModel.MemberDescriptor.AttributeArray
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: AttributeArray
  nameWithType: MemberDescriptor.AttributeArray
  fullName: System.ComponentModel.MemberDescriptor.AttributeArray
- uid: System.ComponentModel.MemberDescriptor.Attributes
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Attributes
  nameWithType: MemberDescriptor.Attributes
  fullName: System.ComponentModel.MemberDescriptor.Attributes
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.MemberDescriptor.Category
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Category
  nameWithType: MemberDescriptor.Category
  fullName: System.ComponentModel.MemberDescriptor.Category
- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: CreateAttributeCollection()
  nameWithType: MemberDescriptor.CreateAttributeCollection()
  fullName: System.ComponentModel.MemberDescriptor.CreateAttributeCollection()
- uid: System.ComponentModel.MemberDescriptor.Description
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Description
  nameWithType: MemberDescriptor.Description
  fullName: System.ComponentModel.MemberDescriptor.Description
- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DesignTimeOnly
  nameWithType: MemberDescriptor.DesignTimeOnly
  fullName: System.ComponentModel.MemberDescriptor.DesignTimeOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.MemberDescriptor.DisplayName
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: MemberDescriptor.DisplayName
  fullName: System.ComponentModel.MemberDescriptor.DisplayName
- uid: System.ComponentModel.MemberDescriptor.Equals(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Equals(Object)
  nameWithType: MemberDescriptor.Equals(Object)
  fullName: System.ComponentModel.MemberDescriptor.Equals(Object)
- uid: System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FillAttributes(IList)
  nameWithType: MemberDescriptor.FillAttributes(IList)
  fullName: System.ComponentModel.MemberDescriptor.FillAttributes(IList)
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FindMethod(Type,String,Type[],Type)
  nameWithType: MemberDescriptor.FindMethod(Type,String,Type[],Type)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(Type,String,Type[],Type)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FindMethod(Type,String,Type[],Type,Boolean)
  nameWithType: MemberDescriptor.FindMethod(Type,String,Type[],Type,Boolean)
  fullName: System.ComponentModel.MemberDescriptor.FindMethod(Type,String,Type[],Type,Boolean)
- uid: System.ComponentModel.MemberDescriptor.GetHashCode
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetHashCode()
  nameWithType: MemberDescriptor.GetHashCode()
  fullName: System.ComponentModel.MemberDescriptor.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetInvocationTarget(Type,Object)
  nameWithType: MemberDescriptor.GetInvocationTarget(Type,Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvocationTarget(Type,Object)
- uid: System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetInvokee(Type,Object)
  nameWithType: MemberDescriptor.GetInvokee(Type,Object)
  fullName: System.ComponentModel.MemberDescriptor.GetInvokee(Type,Object)
- uid: System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetSite(Object)
  nameWithType: MemberDescriptor.GetSite(Object)
  fullName: System.ComponentModel.MemberDescriptor.GetSite(Object)
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.ComponentModel.MemberDescriptor.IsBrowsable
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: IsBrowsable
  nameWithType: MemberDescriptor.IsBrowsable
  fullName: System.ComponentModel.MemberDescriptor.IsBrowsable
- uid: System.ComponentModel.MemberDescriptor.Name
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Name
  nameWithType: MemberDescriptor.Name
  fullName: System.ComponentModel.MemberDescriptor.Name
- uid: System.ComponentModel.MemberDescriptor.NameHashCode
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: NameHashCode
  nameWithType: MemberDescriptor.NameHashCode
  fullName: System.ComponentModel.MemberDescriptor.NameHashCode
- uid: System.ComponentModel.MemberDescriptor.#ctor*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor.MemberDescriptor
- uid: System.ComponentModel.MemberDescriptor.AttributeArray*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: AttributeArray
  nameWithType: MemberDescriptor.AttributeArray
- uid: System.ComponentModel.MemberDescriptor.Attributes*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Attributes
  nameWithType: MemberDescriptor.Attributes
- uid: System.ComponentModel.MemberDescriptor.Category*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Category
  nameWithType: MemberDescriptor.Category
- uid: System.ComponentModel.MemberDescriptor.CreateAttributeCollection*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: CreateAttributeCollection
  nameWithType: MemberDescriptor.CreateAttributeCollection
- uid: System.ComponentModel.MemberDescriptor.Description*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Description
  nameWithType: MemberDescriptor.Description
- uid: System.ComponentModel.MemberDescriptor.DesignTimeOnly*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DesignTimeOnly
  nameWithType: MemberDescriptor.DesignTimeOnly
- uid: System.ComponentModel.MemberDescriptor.DisplayName*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: DisplayName
  nameWithType: MemberDescriptor.DisplayName
- uid: System.ComponentModel.MemberDescriptor.Equals*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Equals
  nameWithType: MemberDescriptor.Equals
- uid: System.ComponentModel.MemberDescriptor.FillAttributes*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FillAttributes
  nameWithType: MemberDescriptor.FillAttributes
- uid: System.ComponentModel.MemberDescriptor.FindMethod*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: FindMethod
  nameWithType: MemberDescriptor.FindMethod
- uid: System.ComponentModel.MemberDescriptor.GetHashCode*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetHashCode
  nameWithType: MemberDescriptor.GetHashCode
- uid: System.ComponentModel.MemberDescriptor.GetInvocationTarget*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetInvocationTarget
  nameWithType: MemberDescriptor.GetInvocationTarget
- uid: System.ComponentModel.MemberDescriptor.GetInvokee*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetInvokee
  nameWithType: MemberDescriptor.GetInvokee
- uid: System.ComponentModel.MemberDescriptor.GetSite*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: GetSite
  nameWithType: MemberDescriptor.GetSite
- uid: System.ComponentModel.MemberDescriptor.IsBrowsable*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: IsBrowsable
  nameWithType: MemberDescriptor.IsBrowsable
- uid: System.ComponentModel.MemberDescriptor.Name*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: Name
  nameWithType: MemberDescriptor.Name
- uid: System.ComponentModel.MemberDescriptor.NameHashCode*
  parent: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: NameHashCode
  nameWithType: MemberDescriptor.NameHashCode
