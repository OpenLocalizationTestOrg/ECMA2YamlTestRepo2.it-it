### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.PerformanceData.CounterSet
  id: CounterSet
  children:
  - System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)
  - System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  - System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  - System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)
  - System.Diagnostics.PerformanceData.CounterSet.Dispose
  - System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)
  - System.Diagnostics.PerformanceData.CounterSet.Finalize
  langs:
  - csharp
  name: CounterSet
  nameWithType: CounterSet
  fullName: System.Diagnostics.PerformanceData.CounterSet
  type: Class
  summary: "Definisce un set di contatori logici."
  remarks: "Chiamare il <xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>metodo dopo aver terminato per rimuovere la registrazione del provider e per rilasciare tutte le risorse gestite e.</xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>"
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: 'public class CounterSet : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)
  id: '#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)'
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: CounterSet(Guid,Guid,CounterSetInstanceType)
  nameWithType: CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Diagnostics.PerformanceData.CounterSet&quot;> </xref> classe."
  remarks: "Registra il provider. La chiamata di <xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>metodo rimuove la registrazione.</xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>"
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: public CounterSet (Guid providerGuid, Guid counterSetGuid, System.Diagnostics.PerformanceData.CounterSetInstanceType instanceType);
    parameters:
    - id: providerGuid
      type: System.Guid
      description: "GUID che identifica in modo univoco il provider di dati dei contatori. Utilizzare il Guid specificato nel manifesto."
    - id: counterSetGuid
      type: System.Guid
      description: "GUID che identifica in modo univoco l&quot;insieme di contatori per un provider. Utilizzare il Guid specificato nel manifesto."
    - id: instanceType
      type: System.Diagnostics.PerformanceData.CounterSetInstanceType
      description: "Identifica il tipo dell&quot;insieme di contatori, ad esempio, se l&quot;insieme di contatori è un insieme di contatori di istanza di uno o più."
  overload: System.Diagnostics.PerformanceData.CounterSet.#ctor*
  exceptions:
  - type: System.InsufficientMemoryException
    commentId: T:System.InsufficientMemoryException
    description: "Memoria insufficiente è disponibile per completare l&quot;operazione."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Non è supportato precedente a Windows Vista."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uno dei parametri è NULL o non valido."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Una chiamata di funzione Win32 sottostante non è riuscita."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  id: AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: AddCounter(Int32,CounterType)
  nameWithType: CounterSet.AddCounter(Int32,CounterType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Aggiunge un contatore del contatore impostato con l&quot;identificatore del contatore specificato e un tipo."
  remarks: "È necessario aggiungere i contatori per il contatore impostare prima di creare un&quot;istanza dell&quot;insieme di contatori."
  syntax:
    content: public void AddCounter (int counterId, System.Diagnostics.PerformanceData.CounterType counterType);
    parameters:
    - id: counterId
      type: System.Int32
      description: "Identifica il contatore. Utilizzare lo stesso valore utilizzato nel manifesto per definire il contatore."
    - id: counterType
      type: System.Diagnostics.PerformanceData.CounterType
      description: "Identifica il tipo di contatore. Il tipo di contatore determina la modalità di calcolo, Media e visualizzazione i dati del contatore."
  overload: System.Diagnostics.PerformanceData.CounterSet.AddCounter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Identificatore del contatore già presente nel set è negativo, oppure il tipo di contatore è NULL o non valido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È possibile aggiungere contatori all&quot;insieme dopo la creazione di un&quot;istanza del contatore di set di contatori."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  id: AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: AddCounter(Int32,CounterType,String)
  nameWithType: CounterSet.AddCounter(Int32,CounterType,String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Aggiunge un contatore del contatore impostato utilizzando l&quot;identificatore del contatore specificato e tipo e un nome visualizzato per il contatore."
  remarks: "È necessario aggiungere i contatori per il contatore impostare prima di creare un&quot;istanza dell&quot;insieme di contatori."
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: public void AddCounter (int counterId, System.Diagnostics.PerformanceData.CounterType counterType, string counterName);
    parameters:
    - id: counterId
      type: System.Int32
      description: "Identifica il contatore. Utilizzare lo stesso valore utilizzato nel manifesto per definire il contatore."
    - id: counterType
      type: System.Diagnostics.PerformanceData.CounterType
      description: "Identifica il tipo di contatore. Il tipo di contatore determina la modalità di calcolo, Media e visualizzazione i dati del contatore."
    - id: counterName
      type: System.String
      description: "Nome del contatore. È possibile utilizzare questo nome per il contatore nell&quot;istanza di set di contatori di indice. (Vedere &lt;xref:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item%2A?displayProperty=fullName&gt;.)"
  overload: System.Diagnostics.PerformanceData.CounterSet.AddCounter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Identificatore del contatore già presente nel set è negativo, oppure il tipo di contatore è NULL o non valido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È possibile aggiungere contatori all&quot;insieme dopo la creazione di un&quot;istanza del contatore di set di contatori."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)
  id: CreateCounterSetInstance(System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: CreateCounterSetInstance(String)
  nameWithType: CounterSet.CreateCounterSetInstance(String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Crea un&quot;istanza dell&quot;insieme di contatori."
  remarks: "Chiamare questo metodo una volta per insiemi di contatori a istanza singola e uno o più volte per insiemi di contatori di più istanze.       Il provider determina quando viene creata un&quot;istanza. Se i dati del contatore sono più statici, il provider può creare un&quot;istanza in fase di inizializzazione. Ad esempio, il numero di processori in un computer viene considerato statico, in modo da un provider che fornisce i dati del contatore per i processori è stato possibile creare un&quot;istanza per ogni processore del computer in fase di inizializzazione. Per i contatori che sono più dinamici, ad esempio disco o contatori processo, i provider creerà le nuove istanze in risposta a un nuovo processo viene creato o di un nuovo dispositivo USB da aggiungere.       Il provider deve mantenere il contatore dati aggiornati in qualsiasi momento."
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: public System.Diagnostics.PerformanceData.CounterSetInstance CreateCounterSetInstance (string instanceName);
    parameters:
    - id: instanceName
      type: System.String
      description: "Nome dell&quot;istanza. Il nome deve essere univoco."
    return:
      type: System.Diagnostics.PerformanceData.CounterSetInstance
      description: "Un&quot;istanza dell&quot;insieme di contatori che conterrà i dati del contatore."
  overload: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nome dell&quot;istanza è NULL."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "È necessario aggiungere i contatori per il contatore impostare prima di creare un&quot;istanza dell&quot;insieme di contatori."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose
  id: Dispose
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: Dispose()
  nameWithType: CounterSet.Dispose()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Rilascia tutte le risorse non gestite utilizzate dall&quot;oggetto."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Diagnostics.PerformanceData.CounterSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CounterSet.Dispose(Boolean)
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Rilascia tutte le risorse non gestite utilizzate da questo oggetto e, facoltativamente, rilascia le risorse gestite."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se è stato chiamato dal metodo Dispose, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> se viene chiamato dal finalizzatore."
  overload: System.Diagnostics.PerformanceData.CounterSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.Finalize
  id: Finalize
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: Finalize()
  nameWithType: CounterSet.Finalize()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Libera le risorse prima che l&quot;oggetto venga recuperato da garbage collection."
  remarks: "Questo metodo viene chiamato automaticamente dal runtime."
  syntax:
    content: ~CounterSet ();
    parameters: []
  overload: System.Diagnostics.PerformanceData.CounterSet.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InsufficientMemoryException
  parent: System
  isExternal: false
  name: InsufficientMemoryException
  nameWithType: InsufficientMemoryException
  fullName: System.InsufficientMemoryException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CounterSet(Guid,Guid,CounterSetInstanceType)
  nameWithType: CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.PerformanceData.CounterSetInstanceType
  parent: System.Diagnostics.PerformanceData
  isExternal: false
  name: CounterSetInstanceType
  nameWithType: CounterSetInstanceType
  fullName: System.Diagnostics.PerformanceData.CounterSetInstanceType
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: AddCounter(Int32,CounterType)
  nameWithType: CounterSet.AddCounter(Int32,CounterType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.PerformanceData.CounterType
  parent: System.Diagnostics.PerformanceData
  isExternal: false
  name: CounterType
  nameWithType: CounterType
  fullName: System.Diagnostics.PerformanceData.CounterType
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: AddCounter(Int32,CounterType,String)
  nameWithType: CounterSet.AddCounter(Int32,CounterType,String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CreateCounterSetInstance(String)
  nameWithType: CounterSet.CreateCounterSetInstance(String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(String)
- uid: System.Diagnostics.PerformanceData.CounterSetInstance
  parent: System.Diagnostics.PerformanceData
  isExternal: false
  name: CounterSetInstance
  nameWithType: CounterSetInstance
  fullName: System.Diagnostics.PerformanceData.CounterSetInstance
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Dispose()
  nameWithType: CounterSet.Dispose()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose()
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CounterSet.Dispose(Boolean)
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.PerformanceData.CounterSet.Finalize
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Finalize()
  nameWithType: CounterSet.Finalize()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Finalize()
- uid: System.Diagnostics.PerformanceData.CounterSet.#ctor*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CounterSet
  nameWithType: CounterSet.CounterSet
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: AddCounter
  nameWithType: CounterSet.AddCounter
- uid: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CreateCounterSetInstance
  nameWithType: CounterSet.CreateCounterSetInstance
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Dispose
  nameWithType: CounterSet.Dispose
- uid: System.Diagnostics.PerformanceData.CounterSet.Finalize*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Finalize
  nameWithType: CounterSet.Finalize
