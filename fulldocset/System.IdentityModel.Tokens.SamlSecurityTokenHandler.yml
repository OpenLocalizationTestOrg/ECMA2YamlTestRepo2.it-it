### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  id: SamlSecurityTokenHandler
  children:
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: SamlSecurityTokenHandler
  nameWithType: SamlSecurityTokenHandler
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  type: Class
  summary: "Rappresenta un gestore di token di sicurezza che crea i token di sicurezza da asserzioni di SAML 1.1."
  remarks: "La classe SamlSecurityTokenHandler serializza e deserializza i token di sicurezza supportati da SAML 1.1 asserzioni in <xref:System.IdentityModel.Tokens.SamlSecurityToken>oggetti.</xref:System.IdentityModel.Tokens.SamlSecurityToken> Gestori di token di sicurezza sono responsabili della creazione, lettura, scrittura e convalida dei token.       È possibile configurare un servizio token di sicurezza (STS) o l&quot;applicazione per l&quot;elaborazione di sicurezza basato su SAML 1.1 asserzione relying party (RP) i token mediante l&quot;aggiunta di un&quot;istanza della classe SamlSecurityTokenHandler il <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection>oggetto configurato per il servizio (o l&quot;applicazione).</xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> Questa operazione può essere eseguita a livello di codice o nel file di configurazione. Il gestore stesso viene configurato dalla configurazione specificata per la raccolta tramite la raccolta <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration%2A>proprietà quando viene aggiunto alla raccolta.</xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration%2A> Sebbene sia possibile configurare il gestore singolarmente impostando il relativo <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A>proprietà, questo non è in genere necessario; tuttavia, se il gestore deve essere configurato singolarmente, la proprietà deve essere impostata dopo aver aggiunto il gestore alla raccolta.</xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A>       Per molti scenari, la classe SamlSecurityTokenHandler può essere utilizzata come-è; Tuttavia, la classe fornisce che molti punti di estensione tramite i metodi espone. Derivazione da di SamlSecurityTokenHandler ed eseguendo l&quot;override di metodi specifici, è possibile modificare la funzionalità dell&quot;elaborazione del token fornito nell&quot;implementazione predefinita oppure è possibile aggiungere l&quot;elaborazione per le estensioni alla specifica di asserzione SAML che può essere necessari in alcuni scenari personalizzati."
  syntax:
    content: 'public class SamlSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityTokenHandler
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: SamlSecurityTokenHandler()
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenHandler()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityTokenHandler&quot;> </xref> classe con i requisiti del token di sicurezza predefinito."
  remarks: "Il <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement%2A>è impostata su un&quot;istanza di <xref:System.IdentityModel.Tokens.SamlSecurityTokenRequirement>che viene creato con il costruttore predefinito.</xref:System.IdentityModel.Tokens.SamlSecurityTokenRequirement> </xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement%2A>"
  syntax:
    content: public SamlSecurityTokenHandler ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  id: '#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)'
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: SamlSecurityTokenHandler(SamlSecurityTokenRequirement)
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenHandler(SamlSecurityTokenRequirement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenHandler(SamlSecurityTokenRequirement)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityTokenHandler&quot;> </xref> classe con i requisiti di token di sicurezza specificati."
  syntax:
    content: public SamlSecurityTokenHandler (System.IdentityModel.Tokens.SamlSecurityTokenRequirement samlSecurityTokenRequirement);
    parameters:
    - id: samlSecurityTokenRequirement
      type: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
      description: "Il <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityTokenRequirement&quot;> </xref> utilizzabile da questa istanza durante la convalida dei token. Imposta il <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement*>proprietà.</xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement*>"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlSecurityTokenRequirement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: AddDelegateToAttributes(ClaimsIdentity,ICollection<SamlAttribute>,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<SamlAttribute>,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<SamlAttribute>,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Aggiunge tutti i delegati associati all&quot;oggetto ActAs nella raccolta di attributi."
  syntax:
    content: protected virtual void AddDelegateToAttributes (System.Security.Claims.ClaimsIdentity subject, System.Collections.Generic.ICollection<System.IdentityModel.Tokens.SamlAttribute> attributes, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "Il delegato di questo <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> oggetto verrà serializzato in un <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref>. Il delegato specificato dal <xref:System.Security.Claims.ClaimsIdentity.Actor*>proprietà.</xref:System.Security.Claims.ClaimsIdentity.Actor*>"
    - id: attributes
      type: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute}
      description: "Raccolta di attributi a cui verrà serializzato il token ActAs."
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "Il descrittore di token."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subject</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>tokenDescriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion
  id: Assertion
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: Assertion
  nameWithType: SamlSecurityTokenHandler.Assertion
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "urn: oasis: nomi: tc: SAML:1.0:assertion"
  syntax:
    content: public const string Assertion;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod
  id: BearerConfirmationMethod
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: BearerConfirmationMethod
  nameWithType: SamlSecurityTokenHandler.BearerConfirmationMethod
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "urn: oasis: nomi: tc: SAML:1.0:cm:bearer"
  syntax:
    content: public const string BearerConfirmationMethod;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  id: CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CanReadToken(XmlReader)
  nameWithType: SamlSecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Indica se l&quot;elemento XML corrente può essere letto come un token del tipo gestito da questa istanza."
  syntax:
    content: public override bool CanReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Lettore XML posizionato in corrispondenza di un elemento di inizio. Il lettore non deve essere anticipato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken*>metodo può leggere l&quot;elemento; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken*>"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken
  id: CanValidateToken
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CanValidateToken
  nameWithType: SamlSecurityTokenHandler.CanValidateToken
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene un valore che indica se questo gestore è possibile convalidare i token di tipo <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>."
  remarks: "Questo metodo esegue l&quot;override del metodo della classe base e restituisce sempre `true`."
  syntax:
    content: public override bool CanValidateToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, che indica che il gestore può convalidare i token di tipo <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken
  id: CanWriteToken
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CanWriteToken
  nameWithType: SamlSecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene un valore che indica se il gestore può serializzare i token di tipo <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>."
  remarks: "Questo metodo esegue l&quot;override del metodo della classe base e restituisce sempre `true`."
  syntax:
    content: public override bool CanWriteToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>; che indica che il gestore può serializzare i token di tipo <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator
  id: CertificateValidator
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CertificateValidator
  nameWithType: SamlSecurityTokenHandler.CertificateValidator
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene o imposta il validator del certificato x.&509; utilizzato dall&quot;istanza corrente per la convalida dei certificati x.&509;."
  syntax:
    content: public System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator { get; set; }
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "Un <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> che rappresenta il validator."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})
  id: CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CollectAttributeValues(ICollection<SamlAttribute>)
  nameWithType: SamlSecurityTokenHandler.CollectAttributeValues(ICollection<SamlAttribute>)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(ICollection<SamlAttribute>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gli attributi con un tipo di attestazione comuni, il tipo di valore di attestazione e autorità di certificazione originale vengono raccolti in un singolo attributo con più valori."
  syntax:
    content: protected virtual System.Collections.Generic.ICollection<System.IdentityModel.Tokens.SamlAttribute> CollectAttributeValues (System.Collections.Generic.ICollection<System.IdentityModel.Tokens.SamlAttribute> attributes);
    parameters:
    - id: attributes
      type: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute}
      description: "Una raccolta di tipo <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref> che contiene gli attributi generati da attestazioni."
    return:
      type: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute}
      description: "Una raccolta di <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref> che contiene gli attributi derivati da una raccolta di input. Gli attributi nella raccolta di input che condividono un tipo di attestazione comuni, il valore dell&quot;attestazione e autorità di certificazione originale con gli altri attributi sono consolidati in un singolo attributo con più valori nella raccolta di output. Gli attributi nella raccolta di input che non condividono il tipo di attestazione, il valore dell&quot;attestazione o autorità di certificazione originale con gli altri attributi appaiono inalterati nella raccolta di output."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateAdvice(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Quando sottoposto a override in una classe derivata, crea un <xref href=&quot;System.IdentityModel.Tokens.SamlAdvice&quot;> </xref> oggetto per l&quot;asserzione."
  remarks: "Per impostazione predefinita, questo metodo restituisce `null`."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAdvice CreateAdvice (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "Il descrittore di token."
    return:
      type: System.IdentityModel.Tokens.SamlAdvice
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAdvice&quot;></xref> object. Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})
  id: CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateAssertion(String,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  nameWithType: SamlSecurityTokenHandler.CreateAssertion(String,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(String,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Crea un <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref> oggetto tramite l&quot;autorità emittente specificata, le condizioni, consigli e istruzioni. È possibile eseguire l&quot;override di questo metodo per personalizzare i parametri utilizzati per creare l&quot;asserzione."
  remarks: "Viene creato un id univoco casuale per l&quot;asserzione e <xref:System.IdentityModel.Tokens.SamlAssertion.AssertionId%2A>è impostata su questo valore.</xref:System.IdentityModel.Tokens.SamlAssertion.AssertionId%2A> <xref:System.IdentityModel.Tokens.SamlAssertion.IssueInstant%2A>È impostato su <xref:System.DateTime.UtcNow%2A>.</xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SamlAssertion.IssueInstant%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAssertion CreateAssertion (string issuer, System.IdentityModel.Tokens.SamlConditions conditions, System.IdentityModel.Tokens.SamlAdvice advice, System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlStatement> statements);
    parameters:
    - id: issuer
      type: System.String
      description: "L&quot;autorità emittente dell&quot;asserzione."
    - id: conditions
      type: System.IdentityModel.Tokens.SamlConditions
      description: "Il <xref href=&quot;System.IdentityModel.Tokens.SamlConditions&quot;> </xref> per aggiungere l&quot;asserzione."
    - id: advice
      type: System.IdentityModel.Tokens.SamlAdvice
      description: "Il <xref href=&quot;System.IdentityModel.Tokens.SamlAdvice&quot;> </xref> per aggiungere l&quot;asserzione."
    - id: statements
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement}
      description: "La raccolta di <xref href=&quot;System.IdentityModel.Tokens.SamlStatement&quot;> </xref> per aggiungere l&quot;asserzione."
    return:
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "L&quot;asserzione SAML che è stato creato."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateAttribute(Claim,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Crea un <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref> oggetto da un&quot;attestazione."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAttribute CreateAttribute (System.Security.Claims.Claim claim, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: "Il <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> da cui generare l&quot;attributo SAML."
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "Il descrittore di token."
    return:
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref> che contiene l&quot;attestazione convertito."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claim</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateAttributeStatement(SamlSubject,ClaimsIdentity,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAttributeStatement(SamlSubject,ClaimsIdentity,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(SamlSubject,ClaimsIdentity,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Crea un <xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;> </xref> oggetto da un descrittore del token."
  remarks: "Questo metodo può restituire `null` se il descrittore di token non contiene alcun oggetto o l&quot;oggetto dispone di tutte le attestazioni."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAttributeStatement CreateAttributeStatement (System.IdentityModel.Tokens.SamlSubject samlSubject, System.Security.Claims.ClaimsIdentity subject, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: samlSubject
      type: System.IdentityModel.Tokens.SamlSubject
      description: "Il <xref href=&quot;System.IdentityModel.Tokens.SamlSubject&quot;> </xref> per utilizzare il <xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;> </xref> creato."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "Il <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> oggetto che contiene le attestazioni che verranno convertite in attributi SAML."
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "Il descrittore di token."
    return:
      type: System.IdentityModel.Tokens.SamlAttributeStatement
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;> </xref> che contiene le attestazioni convertite."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateAuthenticationStatement(SamlSubject,AuthenticationInformation,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAuthenticationStatement(SamlSubject,AuthenticationInformation,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(SamlSubject,AuthenticationInformation,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Crea un&quot;istruzione di autenticazione SAML 1.1 dalle informazioni di autenticazione specificato."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAuthenticationStatement CreateAuthenticationStatement (System.IdentityModel.Tokens.SamlSubject samlSubject, System.Security.Claims.AuthenticationInformation authInfo, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: samlSubject
      type: System.IdentityModel.Tokens.SamlSubject
      description: "SamlSubject dell&quot;istruzione."
    - id: authInfo
      type: System.Security.Claims.AuthenticationInformation
      description: "Il <xref href=&quot;System.Security.Claims.AuthenticationInformation&quot;> </xref> da cui generare l&quot;istruzione di autenticazione SAML."
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "Contiene tutte le altre informazioni che viene utilizzate nel rilascio dei token."
    return:
      type: System.IdentityModel.Tokens.SamlAuthenticationStatement
      description: "L&quot;istruzione di autenticazione SAML che è stato creato."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlSubject</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>tokenDescriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)
  id: CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateClaims(SamlSecurityToken)
  nameWithType: SamlSecurityTokenHandler.CreateClaims(SamlSecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(SamlSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Consente di creare attestazioni da un token SAML 1.1."
  syntax:
    content: protected virtual System.Security.Claims.ClaimsIdentity CreateClaims (System.IdentityModel.Tokens.SamlSecurityToken samlSecurityToken);
    parameters:
    - id: samlSecurityToken
      type: System.IdentityModel.Tokens.SamlSecurityToken
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> che rappresenta il token di sicurezza da cui creare le attestazioni."
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "Oggetto <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> che contiene le attestazioni estratte dal token."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlSecurityToken</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.IdentityModel.Tokens.SamlSecurityToken.Assertion*> property of <code>samlSecurityToken</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.IdentityModel.Tokens.SamlSecurityToken.Assertion*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gestore non è configurato o un registro di sistema di nome dell&quot;autorità di certificazione non è configurato per il gestore. (Il <> </> *> proprietà <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o è impostata su un <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration&quot;> </xref> con un <> </> *> proprietà <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "Il nome dell&quot;autorità emittente restituito dal Registro di sistema di nome dell&quot;autorità di certificazione configurato per il token di sicurezza (<code>samlSecurityToken</code>) è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o vuoto."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Crea le condizioni per l&quot;asserzione."
  remarks: "In genere, le condizioni devono essere incluso in asserzioni per limitare l&quot;impatto dell&quot;utilizzo improprio dell&quot;asserzione. Specificare le condizioni NotBefore e NotOnOrAfter, è possibile limitare il periodo di vulnerabilità nel caso di un&quot;asserzione di compromessa. Il AudienceRestrictionCondition può essere utilizzato in modo esplicito la relying party desiderata o entità dell&quot;asserzione, cui è associato l&quot;imposizione delle restrizioni di destinatari appropriato alla relying party può contribuire a ridurre gli attacchi di spoofing tra relying party.       L&quot;implementazione predefinita crea NotBefore e NotOnOrAfter le condizioni in base il <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A>proprietà del `tokenDescriptor`.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> Viene inoltre generata una AudienceRestrictionCondition limitazione dell&quot;utilizzo dell&quot;asserzione per la <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A>proprietà del `tokenDescriptor`.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlConditions CreateConditions (System.IdentityModel.Protocols.WSTrust.Lifetime tokenLifetime, string relyingPartyAddress, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenLifetime
      type: System.IdentityModel.Protocols.WSTrust.Lifetime
      description: "La durata del token."
    - id: relyingPartyAddress
      type: System.String
      description: "L&quot;indirizzo dell&quot;endpoint per cui viene creato il token. L&quot;indirizzo viene modellato come una condizione di AudienceRestriction."
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "Il descrittore di token."
    return:
      type: System.IdentityModel.Tokens.SamlConditions
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlConditions&quot;> </xref> oggetto che contiene le condizioni per l&quot;asserzione."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateSamlSubject(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Crea un SAML 1.1 soggetto per l&quot;asserzione."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlSubject CreateSamlSubject (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "Descrittore di token di sicurezza da cui creare l&quot;oggetto."
    return:
      type: System.IdentityModel.Tokens.SamlSubject
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlSubject&quot;> </xref> che rappresenta l&quot;oggetto dell&quot;asserzione."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  id: CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateSecurityTokenReference(SecurityToken,Boolean)
  nameWithType: SamlSecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Crea il riferimento al token di sicurezza quando il token non è collegato al messaggio."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference (System.IdentityModel.Tokens.SecurityToken token, bool attached);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Il token SAML."
    - id: attached
      type: System.Boolean
      description: "Un valore che indica se è necessario creare un riferimento collegato o scollegato."
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> che rappresenta il riferimento al token. (Un&quot;istanza di <xref href=&quot;System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause&quot;> </xref> effettivamente restituito.)"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateStatements(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Consente di creare istruzioni SAML 1.1 da includere nell&quot;asserzione."
  remarks: "Le istruzioni non sono richiesti in un&quot;asserzione SAML 1.1. Questo metodo può restituire una raccolta vuota."
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlStatement> CreateStatements (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "Il descrittore di token da cui creare le istruzioni."
    return:
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement}
      description: "Un&quot;enumerazione di <xref href=&quot;System.IdentityModel.Tokens.SamlStatement&quot;> </xref> che contiene le istruzioni."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateToken(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Crea un token di sicurezza in base a un descrittore del token."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "Il descrittore di token da cui creare il token di sicurezza."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> che rappresenta il token di sicurezza SAML 1.1. (Il token restituito è effettivamente un&quot;istanza di <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>.)"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(System.String)
  id: CreateWindowsIdentity(System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateWindowsIdentity(String)
  nameWithType: SamlSecurityTokenHandler.CreateWindowsIdentity(String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Crea un <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref> utilizzando lo specificato principale nome utente (UPN) dell&quot;oggetto."
  syntax:
    content: protected virtual System.Security.Principal.WindowsIdentity CreateWindowsIdentity (string upn);
    parameters:
    - id: upn
      type: System.String
      description: "Da utilizzare per creare l&quot;identità UPN."
    return:
      type: System.Security.Principal.WindowsIdentity
      description: "L&quot;identità di Windows che è stato creato."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>upn</code>è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o una stringa vuota."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})
  id: CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateXmlStringFromAttributes(IEnumerable<SamlAttribute>)
  nameWithType: SamlSecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<SamlAttribute>)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<SamlAttribute>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Compila una stringa di formato XML da una raccolta di attributi SAML 1.1 che rappresentano l&quot;attore."
  remarks: "La stringa è nel formato &quot;\\<attore >\\<nome dell&quot;attributo, ns >\\<AttributeValue >... \\</AttributeValue >,...  \\< /Attributo >... \\</Actor>&quot;"
  syntax:
    content: protected virtual string CreateXmlStringFromAttributes (System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlAttribute> attributes);
    parameters:
    - id: attributes
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute}
      description: "Un&quot;enumerazione di tipo <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref> che contiene gli attributi."
    return:
      type: System.String
      description: "Una stringa XML ben formata costruite usando gli attributi."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)
  id: DenormalizeAuthenticationType(System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: DenormalizeAuthenticationType(String)
  nameWithType: SamlSecurityTokenHandler.DenormalizeAuthenticationType(String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Restituisce l&quot;identificatore del metodo di autenticazione di SAML11 che corrisponde al valore normalizzato specificato per un metodo di autenticazione SAML."
  remarks: 'Il metodo DenormalizeAuthenticationType restituisce l&quot;identificatore del metodo di autenticazione di SAML11 che corrisponde all&quot;URI specificato normalizzato. Ad esempio, se <xref:System.IdentityModel.Tokens.AuthenticationMethods.X509>specificato per `normalizedAuthenticationType`, viene restituito il seguente URI: `urn:oasis:names:tc:SAML:1.0:am:X509-PKI`.</xref:System.IdentityModel.Tokens.AuthenticationMethods.X509> Se non esiste un mapping per `normalizedAuthenticationType`, viene restituito invariato.'
  syntax:
    content: protected virtual string DenormalizeAuthenticationType (string normalizedAuthenticationType);
    parameters:
    - id: normalizedAuthenticationType
      type: System.String
      description: "Il valore normalizzato. Uno del <xref href=&quot;System.IdentityModel.Tokens.AuthenticationMethods&quot;> </xref> valori."
    return:
      type: System.String
      description: "Identificatore metodo autenticazione SAML11 (URI) che corrisponde all&quot;identificatore specificato normalizzato. Se non viene trovato alcun metodo di autenticazione SAML11 corrispondente, il <code> normalizedAuthenticationType </code> URI viene restituito invariato."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  id: DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: DetectReplayedToken(SecurityToken)
  nameWithType: SamlSecurityTokenHandler.DetectReplayedToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Genera un&quot;eccezione se il token specificato esiste già nella cache di riproduzione token. in caso contrario, il token viene aggiunto alla cache."
  remarks: "Il comportamento predefinito consiste nel controllare solo i token di connessione (i token che non dispongono di chiavi). La cache di riproduzione token è il <xref:System.IdentityModel.Tokens.TokenReplayCache>oggetto configurato per questo gestore tramite il <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.TokenReplayCache%2A>proprietà del <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration>oggetto cui viene fatto riferimento tramite il <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A>proprietà.</xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> </xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> </xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.TokenReplayCache%2A> </xref:System.IdentityModel.Tokens.TokenReplayCache>"
  syntax:
    content: protected override void DetectReplayedToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> che rappresenta il token di sicurezza SAML 1.1 (il token deve essere di tipo <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>) da controllare."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - o - <> </> *> proprietà di configurazione del gestore (tramite la <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>proprietà) è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code>Impossibile eseguire il cast come istanza di <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenValidationException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException
    description: "L&quot;ID dell&quot;asserzione associato al token è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o vuoto. (Il <> </> *> proprietà dei riferimenti token un <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref> che ha un <> </> *> proprietà che fa riferimento un <xref:System.IdentityModel.Tokens.SamlId>con un <xref:System.IdentityModel.Tokens.SamlId.Value*>proprietà <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o vuoto.)</xref:System.IdentityModel.Tokens.SamlId.Value*> </xref:System.IdentityModel.Tokens.SamlId>"
  - type: System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
    description: "Il token contiene già il <xref href=&quot;System.IdentityModel.Tokens.TokenReplayCache&quot;> </xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)
  id: FindUpn(System.Security.Claims.ClaimsIdentity)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: FindUpn(ClaimsIdentity)
  nameWithType: SamlSecurityTokenHandler.FindUpn(ClaimsIdentity)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(ClaimsIdentity)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Valore specificato di attestazione UPN trova <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> oggetto allo scopo di mapping delle identità per un <xref:System.Security.Claims.WindowsClaimsIdentity>oggetto.</xref:System.Security.Claims.WindowsClaimsIdentity>"
  syntax:
    content: protected virtual string FindUpn (System.Security.Claims.ClaimsIdentity claimsIdentity);
    parameters:
    - id: claimsIdentity
      type: System.Security.Claims.ClaimsIdentity
      description: "L&quot;oggetto identità di attestazioni contenente l&quot;attestazione UPN desiderato."
    return:
      type: System.String
      description: "Trovato valore attestazione in una stringa che contiene l&quot;UPN."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: GetEncryptingCredentials(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene il token di crittografia delle credenziali. Eseguire l&quot;override di questo metodo per modificare il token di crittografia delle credenziali."
  remarks: "L&quot;implementazione predefinita recupera le credenziali della crittografia il <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A>proprietà del `tokenDescriptor`.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.EncryptingCredentials GetEncryptingCredentials (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "Recupera un ambito la crittografia delle credenziali dall&quot;oggetto ambito."
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Un <xref:System.IdentityModel.SecurityTokenService.EncryptingCredentials>che rappresenta il token di crittografia delle credenziali.</xref:System.IdentityModel.SecurityTokenService.EncryptingCredentials>"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "Le credenziali di crittografia recuperate dal descrittore di token sono asimmetriche."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: GetSigningCredentials(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene le credenziali per la firma l&quot;asserzione."
  remarks: "Asserzioni SAML2 utilizzate come token di sicurezza devono essere firmate.       L&quot;implementazione predefinita utilizza la <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A>proprietà del `tokenDescriptor` per recuperare le credenziali.</xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SigningCredentials GetSigningCredentials (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "Il descrittore di token."
    return:
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SigningCredentials&quot;> </xref> che rappresenta le credenziali per la firma l&quot;asserzione."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)
  id: GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: GetTokenReplayCacheEntryExpirationTime(SamlSecurityToken)
  nameWithType: SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(SamlSecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(SamlSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Restituisce l&quot;ora fino alla quale il token deve essere mantenuto nella cache di riproduzione token."
  remarks: "Per impostazione predefinita, questo metodo restituisce NotOnOrAfter della condizione SAML, se presente.       Se tale valore non esiste, verrà restituito NotOnOrAfter di SubjectConfirmationData il primo.       Questa funzione non restituisce mai un valore diverso dall&quot;ora corrente (<xref:System.DateTime.Now%2A>) rispetto a Configuration.TokenReplayCacheExpirationPeriod.</xref:System.DateTime.Now%2A>"
  syntax:
    content: protected virtual DateTime GetTokenReplayCacheEntryExpirationTime (System.IdentityModel.Tokens.SamlSecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SamlSecurityToken
      description: "Il token per il quale restituire l&quot;ora di scadenza."
    return:
      type: System.DateTime
      description: "Oggetto <xref:System.DateTime>che rappresenta l&quot;ora di scadenza.</xref:System.DateTime>"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers
  id: GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: GetTokenTypeIdentifiers()
  nameWithType: SamlSecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene l&quot;identificatore/i tipo di token è supportati da questo gestore."
  syntax:
    content: public override string[] GetTokenTypeIdentifiers ();
    parameters: []
    return:
      type: System.String[]
      description: "Una matrice di stringhe che contiene il token di tipo identificatore/i supportato da questo gestore."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer
  id: KeyInfoSerializer
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: KeyInfoSerializer
  nameWithType: SamlSecurityTokenHandler.KeyInfoSerializer
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene o imposta il serializzatore di token di sicurezza utilizzato per serializzare e deserializzare gli identificatori di chiave."
  remarks: "Serializza e deserializza <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>oggetti.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>"
  syntax:
    content: public System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer { get; set; }
    return:
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "Oggetto <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> che rappresenta il serializzatore."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Tentativo di impostare il valore su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> si verifica."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: SamlSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Configurazione personalizzata di caricamento da XML."
  syntax:
    content: public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);
    parameters:
    - id: customConfigElements
      type: System.Xml.XmlNodeList
      description: "Un <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> che specifica i requisiti di autenticazione del token SAML."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>customConfigElements</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La configurazione specificata in <code> customConfigElements </code> non è valido."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace
  id: Namespace
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: Namespace
  nameWithType: SamlSecurityTokenHandler.Namespace
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "urn: oasis: nomi: tc: SAML:1.0"
  syntax:
    content: public const string Namespace;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)
  id: NormalizeAuthenticationType(System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: NormalizeAuthenticationType(String)
  nameWithType: SamlSecurityTokenHandler.NormalizeAuthenticationType(String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Restituisce il valore normalizzato che corrisponde a un identificatore di metodo di autenticazione SAML 1.1."
  remarks: "Il metodo NormalizeAuthenticationType restituisce il <xref:System.IdentityModel.Tokens.AuthenticationMethods>valore che corrisponde all&quot;identificatore di metodo di autenticazione SAML11 specificato.</xref:System.IdentityModel.Tokens.AuthenticationMethods> Ad esempio, se `urn:oasis:names:tc:SAML:1.0:am:X509-PKI` specificato per `saml11AuthenticationMethod`, <xref:System.IdentityModel.Tokens.AuthenticationMethods.X509>viene restituito.</xref:System.IdentityModel.Tokens.AuthenticationMethods.X509> Se non esiste un mapping per `saml11AuthenticationMethod`, viene restituito invariato."
  syntax:
    content: protected virtual string NormalizeAuthenticationType (string saml11AuthenticationMethod);
    parameters:
    - id: saml11AuthenticationMethod
      type: System.String
      description: "Identificatore URI () per la normalizzazione del metodo di autenticazione il SAML 1.1."
    return:
      type: System.String
      description: "Il valore normalizzato, ovvero una del <xref href=&quot;System.IdentityModel.Tokens.AuthenticationMethods&quot;> </xref> valori. Se non esiste alcun valore corrispondente, <code> saml11AuthenticationMethod </code> viene restituito, senza modifiche."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ProcessAttributeStatement(SamlAttributeStatement,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessAttributeStatement(SamlAttributeStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(SamlAttributeStatement,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Consente di creare attestazioni da un&quot;istruzione di attributi SAML 1.1 e li aggiunge all&quot;oggetto specificato."
  remarks: "Le attestazioni create vengono aggiunte all&quot;oggetto."
  syntax:
    content: protected virtual void ProcessAttributeStatement (System.IdentityModel.Tokens.SamlAttributeStatement samlStatement, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: samlStatement
      type: System.IdentityModel.Tokens.SamlAttributeStatement
      description: "Il <xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;> </xref> da cui vengono create le attestazioni."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "L&quot;oggetto a cui le attestazioni vengono aggiunte."
    - id: issuer
      type: System.String
      description: "Ente emittente."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlStatement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>subject</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ProcessAuthenticationStatement(SamlAuthenticationStatement,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessAuthenticationStatement(SamlAuthenticationStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(SamlAuthenticationStatement,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Consente di creare attestazioni da un&quot;istruzione di autenticazione SAML 1.1 e li aggiunge all&quot;oggetto specificato."
  syntax:
    content: protected virtual void ProcessAuthenticationStatement (System.IdentityModel.Tokens.SamlAuthenticationStatement samlStatement, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: samlStatement
      type: System.IdentityModel.Tokens.SamlAuthenticationStatement
      description: "Il <xref href=&quot;System.IdentityModel.Tokens.SamlAuthenticationStatement&quot;> </xref> da cui vengono create le attestazioni."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "L&quot;oggetto a cui le attestazioni vengono aggiunte."
    - id: issuer
      type: System.String
      description: "Ente emittente."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlStatement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>subject</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ProcessAuthorizationDecisionStatement(SamlAuthorizationDecisionStatement,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(SamlAuthorizationDecisionStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(SamlAuthorizationDecisionStatement,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Consente di creare attestazioni da un&quot;istruzione di decisione di autorizzazione SAML 1.1 e li aggiunge all&quot;oggetto specificato."
  remarks: "L&quot;implementazione predefinita non esegue alcuna operazione."
  syntax:
    content: protected virtual void ProcessAuthorizationDecisionStatement (System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement samlStatement, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: samlStatement
      type: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
      description: "Il <xref href=&quot;System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement&quot;> </xref> da cui vengono create le attestazioni."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "L&quot;oggetto a cui le attestazioni vengono aggiunte."
    - id: issuer
      type: System.String
      description: "Ente emittente."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ProcessSamlSubject(SamlSubject,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessSamlSubject(SamlSubject,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(SamlSubject,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Consente di creare attestazioni dal soggetto SAML 1.1 e li aggiunge all&quot;oggetto specificato."
  syntax:
    content: protected virtual void ProcessSamlSubject (System.IdentityModel.Tokens.SamlSubject samlSubject, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: samlSubject
      type: System.IdentityModel.Tokens.SamlSubject
      description: "Il <xref href=&quot;System.IdentityModel.Tokens.SamlSubject&quot;> </xref> da cui vengono create le attestazioni."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "L&quot;oggetto a cui le attestazioni vengono aggiunte."
    - id: issuer
      type: System.String
      description: "Ente emittente."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlSubject</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ProcessStatement(IList<SamlStatement>,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessStatement(IList<SamlStatement>,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(IList<SamlStatement>,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Consente di creare attestazioni da un insieme di istruzioni SAML 1.1 e li aggiunge all&quot;oggetto specificato."
  syntax:
    content: protected virtual void ProcessStatement (System.Collections.Generic.IList<System.IdentityModel.Tokens.SamlStatement> statements, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: statements
      type: System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement}
      description: "Le istruzioni SAML da cui vengono create le attestazioni."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "L&quot;oggetto a cui le attestazioni vengono aggiunte."
    - id: issuer
      type: System.String
      description: "Ente emittente."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statements</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(System.Xml.XmlReader)
  id: ReadAction(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAction(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAction(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Legge il &lt;saml:Action&gt; elemento."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAction ReadAction (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>posizionato in corrispondenza dell&quot;elemento da leggere.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlAction
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlAction&quot;> </xref> che rappresenta l&quot;elemento di azione che viene letto."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)
  id: ReadAdvice(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAdvice(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAdvice(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Legge il &lt;SAML: advice&gt; elemento."
  remarks: "L&quot;elemento avviso ha un punto di estensibilità per consentire di elementi XML dal - SAML 1.1 gli spazi dei nomi da includere. Per impostazione predefinita, in quanto l&quot;avviso può essere ignorato senza modificare la semantica dell&quot;asserzione, tali elementi vengono ignorati. Per gestire l&quot;elaborazione di tali elementi, eseguire l&quot;override di questo metodo."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAdvice ReadAdvice (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>posizionato in corrispondenza dell&quot;elemento da leggere.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlAdvice
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlAdvice&quot;> </xref> che rappresenta l&quot;elemento di avviso che viene letto."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)
  id: ReadAssertion(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAssertion(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAssertion(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Legge il &lt;SAML: Assertion&gt; elemento."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAssertion ReadAssertion (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>posizionato in corrispondenza dell&quot;elemento da leggere.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref> che rappresenta l&quot;elemento asserzione letto."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)
  id: ReadAttribute(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAttribute(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAttribute(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Legge il &lt;saml:Attribute&gt; elemento."
  remarks: "L&quot;implementazione predefinita richiede che il contenuto dell&quot;elemento di attributo sia una stringa semplice. Per gestire contenuto complesso o tipi semplici dichiarati diverso da xs: String, eseguire l&quot;override di questo metodo."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAttribute ReadAttribute (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>posizionato in corrispondenza dell&quot;elemento da leggere.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref> che rappresenta l&quot;elemento asserzione letto."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)
  id: ReadAttributeStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAttributeStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAttributeStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Legge il &lt;saml:AttributeStatement&gt; elemento o un &lt;saml:Statement&gt; elemento che specifica un valore xsi: Type di saml:AttributeStatementType."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAttributeStatement ReadAttributeStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>posizionato in corrispondenza dell&quot;elemento da leggere.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlAttributeStatement
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;> </xref> che rappresenta l&quot;elemento che viene letto."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)
  id: ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAttributeValue(XmlReader,SamlAttribute)
  nameWithType: SamlSecurityTokenHandler.ReadAttributeValue(XmlReader,SamlAttribute)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(XmlReader,SamlAttribute)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Legge un valore di attributo."
  syntax:
    content: protected virtual string ReadAttributeValue (System.Xml.XmlReader reader, System.IdentityModel.Tokens.SamlAttribute attribute);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>posizionato in corrispondenza dell&quot;elemento da leggere.</xref:System.Xml.XmlReader>"
    - id: attribute
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "L&quot;attributo da leggere."
    return:
      type: System.String
      description: "Stringa che contiene il valore dell&quot;attributo."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(System.Xml.XmlReader)
  id: ReadAudienceRestrictionCondition(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAudienceRestrictionCondition(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Legge il &lt;saml:AudienceRestrictionCondition&gt; elemento dal lettore XML specificato."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAudienceRestrictionCondition ReadAudienceRestrictionCondition (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un lettore XML posizionato in corrispondenza di &lt;saml:AudienceRestrictionCondition&gt; elemento da leggere."
    return:
      type: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;> </xref> che rappresenta l&quot;elemento che è stato letto."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)
  id: ReadAuthenticationStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAuthenticationStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Legge il &lt;saml:AuthnStatement&gt; elemento o un &lt;saml:Statement&gt; elemento che specifica un valore xsi: Type di saml:AuthnStatementType."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAuthenticationStatement ReadAuthenticationStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>posizionato in corrispondenza dell&quot;elemento da leggere.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlAuthenticationStatement
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlAuthenticationStatement&quot;> </xref> che rappresenta l&quot;elemento che viene letto."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(System.Xml.XmlReader)
  id: ReadAuthorityBinding(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAuthorityBinding(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAuthorityBinding(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lettura di &lt;saml:AuthorityBinding&gt; elemento."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAuthorityBinding ReadAuthorityBinding (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un lettore XML posizionato in corrispondenza di &lt;saml:AuthorityBinding&gt; elemento"
    return:
      type: System.IdentityModel.Tokens.SamlAuthorityBinding
      description: "Il <xref href=&quot;System.IdentityModel.Tokens.SamlAuthorityBinding&quot;> </xref> che è stato letto."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code>non è posizionato in corrispondenza di un elemento saml:AuthorityBinding o contiene un elemento figlio non riconosciuto o un elemento figlio che non è valido."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  id: ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAuthorizationDecisionStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Legge il &lt;saml:AuthzDecisionStatement&gt; elemento o un &lt;saml:Statement&gt; elemento che specifica un valore xsi: Type di saml:AuthzDecisionStatementType."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement ReadAuthorizationDecisionStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>posizionato in corrispondenza dell&quot;elemento da leggere.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
      description: "Oggetto <xref:System.IdentityModel.Tokens.SamlAuthorizationStatement>che rappresenta l&quot;elemento che viene letto.</xref:System.IdentityModel.Tokens.SamlAuthorizationStatement>"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(System.Xml.XmlReader)
  id: ReadCondition(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadCondition(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadCondition(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Legge un saml:AudienceRestrictionCondition o un saml:DoNotCacheCondition dal lettore specificato"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlCondition ReadCondition (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Lettore da cui leggere l&quot;elemento."
    return:
      type: System.IdentityModel.Tokens.SamlCondition
      description: "Il <xref href=&quot;System.IdentityModel.Tokens.SamlCondition&quot;> </xref> che è stato letto il file XML."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code>è posizionato in corrispondenza di un elemento sconosciuto."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)
  id: ReadConditions(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadConditions(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadConditions(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Legge il &lt;SAML: Conditions&gt; elemento."
  remarks: "Per la gestione personalizzata \\<saml:Condition > elementi, eseguire l&quot;override di questo metodo."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlConditions ReadConditions (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>posizionato in corrispondenza dell&quot;elemento da leggere.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlConditions
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlConditions&quot;> </xref> che rappresenta l&quot;elemento di condizioni che viene letto."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code>non è posizionato in un elemento di condizioni."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(System.Xml.XmlReader)
  id: ReadDoNotCacheCondition(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadDoNotCacheCondition(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadDoNotCacheCondition(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Legge un elemento saml:DoNotCacheCondition dal lettore XML specificato."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlDoNotCacheCondition ReadDoNotCacheCondition (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un lettore XML posizionato in corrispondenza di un elemento saml:DoNotCacheCondition"
    return:
      type: System.IdentityModel.Tokens.SamlDoNotCacheCondition
      description: "Il <xref href=&quot;System.IdentityModel.Tokens.SamlDoNotCacheCondition&quot;> </xref> che è stato letto."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code>non è posizionato in un elemento saml:DoNotCacheCondition."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)
  id: ReadEvidence(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadEvidence(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadEvidence(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Legge il &lt;saml:Evidence&gt; elemento."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlEvidence ReadEvidence (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>posizionato in corrispondenza dell&quot;elemento da leggere.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlEvidence
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlEvidence&quot;> </xref> che rappresenta l&quot;elemento di prova che viene letto."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)
  id: ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadSigningKeyInfo(XmlReader,SamlAssertion)
  nameWithType: SamlSecurityTokenHandler.ReadSigningKeyInfo(XmlReader,SamlAssertion)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(XmlReader,SamlAssertion)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Deserializza SAML firma KeyInfo."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityKeyIdentifier ReadSigningKeyInfo (System.Xml.XmlReader reader, System.IdentityModel.Tokens.SamlAssertion assertion);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Oggetto XmlReader che può essere posizionato in corrispondenza di un elemento ds:KeyInfo."
    - id: assertion
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "L&quot;asserzione che si verificano la firma verificata."
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Il <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> che rappresenta la chiave da usare per verificare la firma."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)
  id: ReadStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Legge il &lt;saml:Statement&gt; elemento."
  remarks: "L&quot;implementazione predefinita gestisce solo elementi di istruzione che specificano un valore xsi: Type di saml:AttributeStatementType, saml:AuthnStatementType e saml:AuthzDecisionStatementType. Per gestire istruzioni personalizzate, eseguire l&quot;override di questo metodo."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlStatement ReadStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>posizionato in corrispondenza dell&quot;elemento da leggere.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlStatement
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlStatement&quot;> </xref> che rappresenta l&quot;elemento di istruzione che è stato letto."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)
  id: ReadSubject(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadSubject(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadSubject(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Legge il &lt;saml:Subject&gt; elemento."
  remarks: "L&quot;implementazione predefinita non consente di gestire facoltativo \\<EncryptedID > elemento. Per gestire gli ID encryped nell&quot;oggetto, eseguire l&quot;override di questo metodo."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlSubject ReadSubject (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>posizionato in corrispondenza dell&quot;elemento da leggere.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SamlSubject
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlSubject&quot;> </xref> che rappresenta l&quot;elemento di interesse che è stato letto."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)
  id: ReadSubjectKeyInfo(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadSubjectKeyInfo(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Deserializza l&quot;oggetto SAML &lt;ds:KeyInfo&gt; elemento."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityKeyIdentifier ReadSubjectKeyInfo (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Un <xref:System.Xml.XmlReader>posizionato in corrispondenza di un &lt;ds:KeyInfo&gt; elemento.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> che rappresenta il contenuto del &lt;ds:KeyInfo&gt; elemento."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  id: ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadToken(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Legge un token SAML 1.1 dal flusso specificato."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Oggetto <xref:System.Xml.XmlReader>stream per un Token di sicurezza di SAML 1.1.</xref:System.Xml.XmlReader>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Un&quot;istanza di <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - o - <> </> *> proprietà della configurazione specificata dal <> </> *> proprietà <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - o - <> </> *> proprietà della configurazione specificata dal <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>proprietà <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ResolveIssuerToken(SamlAssertion,SecurityTokenResolver)
  nameWithType: SamlSecurityTokenHandler.ResolveIssuerToken(SamlAssertion,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(SamlAssertion,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Consente di risolvere l&quot;identificatore di chiave di firma per un <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken ResolveIssuerToken (System.IdentityModel.Tokens.SamlAssertion assertion, System.IdentityModel.Selectors.SecurityTokenResolver issuerResolver);
    parameters:
    - id: assertion
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "Il <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref> per cui il token dell&quot;autorità di certificazione deve essere risolto."
    - id: issuerResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "Corrente <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> associata a questo gestore."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> che rappresenta il token risolto."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assertion</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "Il gestore è in grado di risolvere il token."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ResolveSubjectKeyIdentifier(SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Risolve il <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> specificata in un elemento saml:Subject."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityKey ResolveSubjectKeyIdentifier (System.IdentityModel.Tokens.SecurityKeyIdentifier subjectKeyIdentifier);
    parameters:
    - id: subjectKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "L&quot;identificatore di chiave da risolvere in una chiave."
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "La chiave di risolvere l&quot;identificatore di chiave."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement
  id: SamlSecurityTokenRequirement
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: SamlSecurityTokenRequirement
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenRequirement
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene o imposta la sicurezza requisiti del token per questa istanza."
  syntax:
    content: public System.IdentityModel.Tokens.SamlSecurityTokenRequirement SamlSecurityTokenRequirement { get; set; }
    return:
      type: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityTokenRequirement&quot;> </xref> che specifica i requisiti."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Tentativo di impostare il valore su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> si verifica."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)
  id: SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: SetDelegateFromAttribute(SamlAttribute,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.SetDelegateFromAttribute(SamlAttribute,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(SamlAttribute,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Questo metodo viene chiamato quando un tipo speciale di <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref> viene rilevato. Il <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref> passato esegue il wrapping un <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref> che contiene una raccolta di valori di attributo (nel <xref:System.IdentityModel.Tokens.SamlAttribute.Values*>proprietà), ognuno dei quali verrà vengono mappato a un&quot;attestazione.</xref:System.IdentityModel.Tokens.SamlAttribute.Values*> Tutte le attestazioni verrà restituite un <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> con l&quot;autorità emittente specificata."
  syntax:
    content: protected virtual void SetDelegateFromAttribute (System.IdentityModel.Tokens.SamlAttribute attribute, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: attribute
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref> to use."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "Il <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> che corrisponde al soggetto di questo token."
    - id: issuer
      type: System.String
      description: "L&quot;autorità emittente dell&quot;attestazione."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref> non deve contenere i valori di attributo valido."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType
  id: TokenType
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: TokenType
  nameWithType: SamlSecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene il tipo di token è supportato da questo gestore."
  syntax:
    content: public override Type TokenType { get; }
    return:
      type: System.Type
      description: "Il <xref:System.Type>del <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> classe</xref:System.Type>"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: TryResolveIssuerToken(SamlAssertion,SecurityTokenResolver,SecurityToken)
  nameWithType: SamlSecurityTokenHandler.TryResolveIssuerToken(SamlAssertion,SecurityTokenResolver,SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(SamlAssertion,SecurityTokenResolver,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Risolve l&quot;identificatore di chiave di firma in un SecurityToken."
  syntax:
    content: protected virtual bool TryResolveIssuerToken (System.IdentityModel.Tokens.SamlAssertion assertion, System.IdentityModel.Selectors.SecurityTokenResolver issuerResolver, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: assertion
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "Il <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref> per cui il token dell&quot;autorità di certificazione deve essere risolto."
    - id: issuerResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "Corrente <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> associata a questo gestore."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Quando termina, questo metodo contiene il token di sicurezza risolto se un token è stato risolto correttamente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il token viene risolto."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
  id: UnspecifiedAuthenticationMethod
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: UnspecifiedAuthenticationMethod
  nameWithType: SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "urn: oasis: nomi: tc: SAML:1.0:am: non specificato"
  syntax:
    content: public const string UnspecifiedAuthenticationMethod;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)
  id: ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ValidateConditions(SamlConditions,Boolean)
  nameWithType: SamlSecurityTokenHandler.ValidateConditions(SamlConditions,Boolean)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(SamlConditions,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Convalida l&quot;oggetto specificato <xref href=&quot;System.IdentityModel.Tokens.SamlConditions&quot;> </xref> oggetto."
  remarks: "Se la condizione non è valida, genera un&quot;eccezione appropriata. Il token potrebbe non essere valido per una serie di motivi. Ad esempio, l&quot;ora corrente potrebbe non essere entro il periodo di validità del token, il token potrebbe contenere dati contraddittorie sono non valido o il token può contenere elementi SAML 1.1 non supportati."
  syntax:
    content: protected virtual void ValidateConditions (System.IdentityModel.Tokens.SamlConditions conditions, bool enforceAudienceRestriction);
    parameters:
    - id: conditions
      type: System.IdentityModel.Tokens.SamlConditions
      description: "La condizione SAML 1.1 da convalidare."
    - id: enforceAudienceRestriction
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per controllare la condizione di Audience Restriction."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ValidateToken(SecurityToken)
  nameWithType: SamlSecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Convalida i dati del token e restituisce le relative attestazioni."
  remarks: "Genera un&quot;eccezione appropriata se il token non è valido."
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Il token SAML 1.1 da convalidare."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: "Le identità contenute nel token."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)
  id: WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAction(XmlWriter,SamlAction)
  nameWithType: SamlSecurityTokenHandler.WriteAction(XmlWriter,SamlAction)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(XmlWriter,SamlAction)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Scrive il &lt;saml:Action&gt; elemento."
  syntax:
    content: protected virtual void WriteAction (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAction action);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il <xref:System.Xml.XmlWriter>con cui scrivere i dati.</xref:System.Xml.XmlWriter>"
    - id: action
      type: System.IdentityModel.Tokens.SamlAction
      description: "I dati da scrivere."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>action</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)
  id: WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAdvice(XmlWriter,SamlAdvice)
  nameWithType: SamlSecurityTokenHandler.WriteAdvice(XmlWriter,SamlAdvice)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(XmlWriter,SamlAdvice)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Scrive il &lt;SAML: advice&gt; elemento."
  syntax:
    content: protected virtual void WriteAdvice (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAdvice advice);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il <xref:System.Xml.XmlWriter>con cui scrivere i dati.</xref:System.Xml.XmlWriter>"
    - id: advice
      type: System.IdentityModel.Tokens.SamlAdvice
      description: "I dati da scrivere."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>advice</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)
  id: WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAssertion(XmlWriter,SamlAssertion)
  nameWithType: SamlSecurityTokenHandler.WriteAssertion(XmlWriter,SamlAssertion)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(XmlWriter,SamlAssertion)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Serializza l&quot;asserzione SAML specificata per il writer XML specificato."
  syntax:
    content: protected virtual void WriteAssertion (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAssertion assertion);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il <xref:System.Xml.XmlWriter>da utilizzare per la serializzazione.</xref:System.Xml.XmlWriter>"
    - id: assertion
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref> che rappresenta l&quot;asserzione da serializzare."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>assertion</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;asserzione specificato da <code> assertion </code> contiene sia il <xref:System.IdentityModel.SecurityTokenService.EncryptingCredentials>e <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReceivedEncryptingCredentials>le proprietà impostate su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReceivedEncryptingCredentials> </xref:System.IdentityModel.SecurityTokenService.EncryptingCredentials>       - oppure - esistono alcuna istruzione e nessun oggetto nell&quot;asserzione specificato da <code> data </code>. (Entrambi il <> </> *> proprietà e <> </> *> sono proprietà <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.) Se un&quot;asserzione non contiene istruzioni, deve contenere un oggetto.       - oppure - l&quot;asserzione specificato da <code> assertion </code> contiene un&quot;istruzione di decisione di autorizzazione, un attributo o l&quot;autenticazione e nessun oggetto, queste istruzioni richiedono un argomento. (Il <> </> *> proprietà contiene un&quot;istruzione di tipo <xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;> </xref>, <xref href=&quot;System.IdentityModel.Tokens.SamlAuthenticationStatement&quot;> </xref>, o <xref href=&quot;System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement&quot;> </xref> e <> </> *> proprietà <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>)."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Le credenziali di crittografia del token non dispone di una chiave simmetrica specificata."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)
  id: WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAttribute(XmlWriter,SamlAttribute)
  nameWithType: SamlSecurityTokenHandler.WriteAttribute(XmlWriter,SamlAttribute)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(XmlWriter,SamlAttribute)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Scrive il &lt;saml:Attribute&gt; elemento."
  syntax:
    content: protected virtual void WriteAttribute (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAttribute attribute);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il <xref:System.Xml.XmlWriter>con cui scrivere i dati.</xref:System.Xml.XmlWriter>"
    - id: attribute
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "I dati da scrivere."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>attribute</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)
  id: WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAttributeStatement(XmlWriter,SamlAttributeStatement)
  nameWithType: SamlSecurityTokenHandler.WriteAttributeStatement(XmlWriter,SamlAttributeStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(XmlWriter,SamlAttributeStatement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Scrive il &lt;saml:AttributeStatement&gt; elemento."
  syntax:
    content: protected virtual void WriteAttributeStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAttributeStatement statement);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il <xref:System.Xml.XmlWriter>con cui scrivere i dati.</xref:System.Xml.XmlWriter>"
    - id: statement
      type: System.IdentityModel.Tokens.SamlAttributeStatement
      description: "I dati da scrivere."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)
  id: WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAttributeValue(XmlWriter,String,SamlAttribute)
  nameWithType: SamlSecurityTokenHandler.WriteAttributeValue(XmlWriter,String,SamlAttribute)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(XmlWriter,String,SamlAttribute)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Scrive il valore saml:Attribute."
  remarks: "Per impostazione predefinita il metodo scrive il valore come stringa."
  syntax:
    content: protected virtual void WriteAttributeValue (System.Xml.XmlWriter writer, string value, System.IdentityModel.Tokens.SamlAttribute attribute);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il <xref:System.Xml.XmlWriter>con cui scrivere.</xref:System.Xml.XmlWriter>"
    - id: value
      type: System.String
      description: "Stringa che contiene il valore dell&quot;attributo da scrivere."
    - id: attribute
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref> che rappresenta l&quot;attributo il cui valore viene scritto."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  id: WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAudienceRestrictionCondition(XmlWriter,SamlAudienceRestrictionCondition)
  nameWithType: SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(XmlWriter,SamlAudienceRestrictionCondition)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(XmlWriter,SamlAudienceRestrictionCondition)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Scrive il &lt;saml:AudienceRestriction&gt; elemento."
  syntax:
    content: protected virtual void WriteAudienceRestrictionCondition (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAudienceRestrictionCondition condition);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il <xref:System.Xml.XmlWriter>con cui scrivere i dati.</xref:System.Xml.XmlWriter>"
    - id: condition
      type: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition
      description: "I dati da scrivere."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref:System.IdentityModel.Tokens.SamlConditions.Conditions*>proprietà del <xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;> </xref> specificato in <code> condition </code> è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o una raccolta vuota.</xref:System.IdentityModel.Tokens.SamlConditions.Conditions*>"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)
  id: WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAuthenticationStatement(XmlWriter,SamlAuthenticationStatement)
  nameWithType: SamlSecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,SamlAuthenticationStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,SamlAuthenticationStatement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Scrive il &lt;saml:AuthnStatement&gt; elemento."
  syntax:
    content: protected virtual void WriteAuthenticationStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAuthenticationStatement statement);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il <xref:System.Xml.XmlWriter>con cui scrivere i dati.</xref:System.Xml.XmlWriter>"
    - id: statement
      type: System.IdentityModel.Tokens.SamlAuthenticationStatement
      description: "I dati da scrivere."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)
  id: WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAuthorityBinding(XmlWriter,SamlAuthorityBinding)
  nameWithType: SamlSecurityTokenHandler.WriteAuthorityBinding(XmlWriter,SamlAuthorityBinding)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(XmlWriter,SamlAuthorityBinding)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Scrive il &lt;saml:AuthorityBinding&gt; elemento."
  syntax:
    content: protected virtual void WriteAuthorityBinding (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAuthorityBinding authorityBinding);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il <xref:System.Xml.XmlWriter>con cui scrivere i dati.</xref:System.Xml.XmlWriter>"
    - id: authorityBinding
      type: System.IdentityModel.Tokens.SamlAuthorityBinding
      description: "I dati da scrivere."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authorityBinding</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)
  id: WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAuthorizationDecisionStatement(XmlWriter,SamlAuthorizationDecisionStatement)
  nameWithType: SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,SamlAuthorizationDecisionStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,SamlAuthorizationDecisionStatement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Scrive il &lt;saml:AuthzDecisionStatement&gt; elemento."
  syntax:
    content: protected virtual void WriteAuthorizationDecisionStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement statement);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il <xref:System.Xml.XmlWriter>con cui scrivere i dati.</xref:System.Xml.XmlWriter>"
    - id: statement
      type: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
      description: "I dati da scrivere."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)
  id: WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteCondition(XmlWriter,SamlCondition)
  nameWithType: SamlSecurityTokenHandler.WriteCondition(XmlWriter,SamlCondition)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(XmlWriter,SamlCondition)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Serializza l&quot;oggetto specificato <xref href=&quot;System.IdentityModel.Tokens.SamlCondition&quot;> </xref> oggetto."
  remarks: "Per impostazione predefinita, il metodo richiama il <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition%2A>o <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition%2A>metodo per serializzare la condizione in base al tipo di <xref:System.IdentityModel.Tokens.SamlCondition>specificato.</xref:System.IdentityModel.Tokens.SamlCondition> </xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition%2A> </xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition%2A>"
  syntax:
    content: protected virtual void WriteCondition (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlCondition condition);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il <xref:System.Xml.XmlWriter>con cui scrivere i dati.</xref:System.Xml.XmlWriter>"
    - id: condition
      type: System.IdentityModel.Tokens.SamlCondition
      description: "I dati da scrivere. Per impostazione predefinita, solo <xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;> </xref> e <xref href=&quot;System.IdentityModel.Tokens.SamlDoNotCacheCondition&quot;> </xref> sono supportati."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>condition</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "<code>condition</code>non è supportata. . Per impostazione predefinita, solo <xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;> </xref> e <xref href=&quot;System.IdentityModel.Tokens.SamlDoNotCacheCondition&quot;> </xref> sono supportati."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)
  id: WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteConditions(XmlWriter,SamlConditions)
  nameWithType: SamlSecurityTokenHandler.WriteConditions(XmlWriter,SamlConditions)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(XmlWriter,SamlConditions)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Scrive il &lt;SAML: Conditions&gt; elemento."
  syntax:
    content: protected virtual void WriteConditions (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlConditions conditions);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il <xref:System.Xml.XmlWriter>con cui scrivere i dati.</xref:System.Xml.XmlWriter>"
    - id: conditions
      type: System.IdentityModel.Tokens.SamlConditions
      description: "I dati da scrivere."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>conditions</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)
  id: WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteDoNotCacheCondition(XmlWriter,SamlDoNotCacheCondition)
  nameWithType: SamlSecurityTokenHandler.WriteDoNotCacheCondition(XmlWriter,SamlDoNotCacheCondition)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(XmlWriter,SamlDoNotCacheCondition)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Scrive il &lt;saml:DoNotCacheCondition&gt; elemento."
  syntax:
    content: protected virtual void WriteDoNotCacheCondition (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlDoNotCacheCondition condition);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il writer XML con cui scrivere i dati."
    - id: condition
      type: System.IdentityModel.Tokens.SamlDoNotCacheCondition
      description: "I dati da scrivere."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>condition</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)
  id: WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteEvidence(XmlWriter,SamlEvidence)
  nameWithType: SamlSecurityTokenHandler.WriteEvidence(XmlWriter,SamlEvidence)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(XmlWriter,SamlEvidence)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Scrive il &lt;saml:Evidence&gt; elemento."
  syntax:
    content: protected virtual void WriteEvidence (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlEvidence evidence);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il <xref:System.Xml.XmlWriter>con cui scrivere i dati.</xref:System.Xml.XmlWriter>"
    - id: evidence
      type: System.IdentityModel.Tokens.SamlEvidence
      description: "I dati da scrivere."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>evidence</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Scrive la firma &lt;ds:KeyInfo&gt; elemento utilizzando il writer XML specificato."
  syntax:
    content: protected virtual void WriteSigningKeyInfo (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il <xref:System.Xml.XmlWriter>con cui serializzare l&quot;identificatore di chiave.</xref:System.Xml.XmlWriter>"
    - id: signingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Il <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> che rappresenta l&quot;identificatore di chiave da scrivere."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>signingKeyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il gestore non è possibile serializzare l&quot;identificatore di chiave specificata da <code> signingKeyIdentifier </code>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)
  id: WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteStatement(XmlWriter,SamlStatement)
  nameWithType: SamlSecurityTokenHandler.WriteStatement(XmlWriter,SamlStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(XmlWriter,SamlStatement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Scrive un SamlStatement."
  remarks: "Questo metodo è possibile scrivere un \\<saml:AttributeStatement >, \\<saml:AuthnStatement >, o \\<saml:AuthzDecisionStatement > elemento. Per la gestione personalizzata <xref:System.IdentityModel.Tokens.SamlStatement>classi per la scrittura un \\<saml:Statement > elemento, eseguire l&quot;override di questo metodo.</xref:System.IdentityModel.Tokens.SamlStatement>"
  syntax:
    content: protected virtual void WriteStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlStatement statement);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il <xref:System.Xml.XmlWriter>con cui scrivere i dati.</xref:System.Xml.XmlWriter>"
    - id: statement
      type: System.IdentityModel.Tokens.SamlStatement
      description: "I dati da scrivere."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)
  id: WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteSubject(XmlWriter,SamlSubject)
  nameWithType: SamlSecurityTokenHandler.WriteSubject(XmlWriter,SamlSubject)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(XmlWriter,SamlSubject)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Scrive il &lt;saml:Subject&gt; elemento."
  syntax:
    content: protected virtual void WriteSubject (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlSubject subject);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il <xref:System.Xml.XmlWriter>con cui scrivere i dati.</xref:System.Xml.XmlWriter>"
    - id: subject
      type: System.IdentityModel.Tokens.SamlSubject
      description: "I dati da scrivere."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subject</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Serializza l&quot;oggetto &lt;ds:KeyInfo&gt; elemento utilizzando il writer XML specificato."
  syntax:
    content: protected virtual void WriteSubjectKeyInfo (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier subjectSki);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il <xref:System.Xml.XmlWriter>con cui serializzare l&quot;identificatore di chiave.</xref:System.Xml.XmlWriter>"
    - id: subjectSki
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Il <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> che rappresenta l&quot;identificatore di chiave da scrivere."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subjectSki</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: SamlSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Scrive un Saml Token nel writer XML specificato."
  syntax:
    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "Il <xref:System.Xml.XmlWriter>con cui scrivere i dati.</xref:System.Xml.XmlWriter>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Token da scrivere."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code>non è un <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> oggetto."
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityTokenHandler
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.IdentityModel.Tokens.SecurityTokenValidationException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenValidationException
  nameWithType: SecurityTokenValidationException
  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException
- uid: System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenReplayDetectedException
  nameWithType: SecurityTokenReplayDetectedException
  fullName: System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenHandler()
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenHandler()
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenHandler(SamlSecurityTokenRequirement)
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenHandler(SamlSecurityTokenRequirement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenHandler(SamlSecurityTokenRequirement)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSecurityTokenRequirement
  nameWithType: SamlSecurityTokenRequirement
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: AddDelegateToAttributes(ClaimsIdentity,ICollection<SamlAttribute>,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<SamlAttribute>,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<SamlAttribute>,SecurityTokenDescriptor)
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<SamlAttribute>
  nameWithType: ICollection<SamlAttribute>
  fullName: System.Collections.Generic.ICollection<System.IdentityModel.Tokens.SamlAttribute>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.IdentityModel.Tokens.SamlAttribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SamlAttribute
    name: SamlAttribute
    nameWithType: SamlAttribute
    fullName: SamlAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenDescriptor
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: Assertion
  nameWithType: SamlSecurityTokenHandler.Assertion
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: BearerConfirmationMethod
  nameWithType: SamlSecurityTokenHandler.BearerConfirmationMethod
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CanReadToken(XmlReader)
  nameWithType: SamlSecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(XmlReader)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: SamlSecurityTokenHandler.CanValidateToken
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: SamlSecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CertificateValidator
  nameWithType: SamlSecurityTokenHandler.CertificateValidator
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator
- uid: System.IdentityModel.Selectors.X509CertificateValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: System.IdentityModel.Selectors.X509CertificateValidator
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CollectAttributeValues(ICollection<SamlAttribute>)
  nameWithType: SamlSecurityTokenHandler.CollectAttributeValues(ICollection<SamlAttribute>)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(ICollection<SamlAttribute>)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAdvice(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlAdvice
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAdvice
  nameWithType: SamlAdvice
  fullName: System.IdentityModel.Tokens.SamlAdvice
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAssertion(String,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  nameWithType: SamlSecurityTokenHandler.CreateAssertion(String,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(String,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
- uid: System.IdentityModel.Tokens.SamlAssertion
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAssertion
  nameWithType: SamlAssertion
  fullName: System.IdentityModel.Tokens.SamlAssertion
- uid: System.IdentityModel.Tokens.SamlConditions
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlConditions
  nameWithType: SamlConditions
  fullName: System.IdentityModel.Tokens.SamlConditions
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<SamlStatement>
  nameWithType: IEnumerable<SamlStatement>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlStatement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Tokens.SamlStatement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SamlStatement
    name: SamlStatement
    nameWithType: SamlStatement
    fullName: SamlStatement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAttribute(Claim,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlAttribute
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAttribute
  nameWithType: SamlAttribute
  fullName: System.IdentityModel.Tokens.SamlAttribute
- uid: System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAttributeStatement(SamlSubject,ClaimsIdentity,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAttributeStatement(SamlSubject,ClaimsIdentity,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(SamlSubject,ClaimsIdentity,SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlAttributeStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAttributeStatement
  nameWithType: SamlAttributeStatement
  fullName: System.IdentityModel.Tokens.SamlAttributeStatement
- uid: System.IdentityModel.Tokens.SamlSubject
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSubject
  nameWithType: SamlSubject
  fullName: System.IdentityModel.Tokens.SamlSubject
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAuthenticationStatement(SamlSubject,AuthenticationInformation,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAuthenticationStatement(SamlSubject,AuthenticationInformation,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(SamlSubject,AuthenticationInformation,SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlAuthenticationStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAuthenticationStatement
  nameWithType: SamlAuthenticationStatement
  fullName: System.IdentityModel.Tokens.SamlAuthenticationStatement
- uid: System.Security.Claims.AuthenticationInformation
  parent: System.Security.Claims
  isExternal: false
  name: AuthenticationInformation
  nameWithType: AuthenticationInformation
  fullName: System.Security.Claims.AuthenticationInformation
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateClaims(SamlSecurityToken)
  nameWithType: SamlSecurityTokenHandler.CreateClaims(SamlSecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(SamlSecurityToken)
- uid: System.IdentityModel.Tokens.SamlSecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSecurityToken
  nameWithType: SamlSecurityToken
  fullName: System.IdentityModel.Tokens.SamlSecurityToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
- uid: System.IdentityModel.Protocols.WSTrust.Lifetime
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: Lifetime
  nameWithType: Lifetime
  fullName: System.IdentityModel.Protocols.WSTrust.Lifetime
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateSamlSubject(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateSecurityTokenReference(SecurityToken,Boolean)
  nameWithType: SamlSecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateStatements(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateToken(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateWindowsIdentity(String)
  nameWithType: SamlSecurityTokenHandler.CreateWindowsIdentity(String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(String)
- uid: System.Security.Principal.WindowsIdentity
  parent: System.Security.Principal
  isExternal: false
  name: WindowsIdentity
  nameWithType: WindowsIdentity
  fullName: System.Security.Principal.WindowsIdentity
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateXmlStringFromAttributes(IEnumerable<SamlAttribute>)
  nameWithType: SamlSecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<SamlAttribute>)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<SamlAttribute>)
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<SamlAttribute>
  nameWithType: IEnumerable<SamlAttribute>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlAttribute>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Tokens.SamlAttribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SamlAttribute
    name: SamlAttribute
    nameWithType: SamlAttribute
    fullName: SamlAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: DenormalizeAuthenticationType(String)
  nameWithType: SamlSecurityTokenHandler.DenormalizeAuthenticationType(String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(String)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: DetectReplayedToken(SecurityToken)
  nameWithType: SamlSecurityTokenHandler.DetectReplayedToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(SecurityToken)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: FindUpn(ClaimsIdentity)
  nameWithType: SamlSecurityTokenHandler.FindUpn(ClaimsIdentity)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(ClaimsIdentity)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetEncryptingCredentials(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetSigningCredentials(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SigningCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetTokenReplayCacheEntryExpirationTime(SamlSecurityToken)
  nameWithType: SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(SamlSecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(SamlSecurityToken)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers()
  nameWithType: SamlSecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: KeyInfoSerializer
  nameWithType: SamlSecurityTokenHandler.KeyInfoSerializer
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: SamlSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: Namespace
  nameWithType: SamlSecurityTokenHandler.Namespace
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: NormalizeAuthenticationType(String)
  nameWithType: SamlSecurityTokenHandler.NormalizeAuthenticationType(String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(String)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessAttributeStatement(SamlAttributeStatement,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessAttributeStatement(SamlAttributeStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(SamlAttributeStatement,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessAuthenticationStatement(SamlAuthenticationStatement,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessAuthenticationStatement(SamlAuthenticationStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(SamlAuthenticationStatement,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessAuthorizationDecisionStatement(SamlAuthorizationDecisionStatement,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(SamlAuthorizationDecisionStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(SamlAuthorizationDecisionStatement,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAuthorizationDecisionStatement
  nameWithType: SamlAuthorizationDecisionStatement
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessSamlSubject(SamlSubject,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessSamlSubject(SamlSubject,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(SamlSubject,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessStatement(IList<SamlStatement>,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessStatement(IList<SamlStatement>,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(IList<SamlStatement>,ClaimsIdentity,String)
- uid: System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<SamlStatement>
  nameWithType: IList<SamlStatement>
  fullName: System.Collections.Generic.IList<System.IdentityModel.Tokens.SamlStatement>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.IdentityModel.Tokens.SamlStatement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SamlStatement
    name: SamlStatement
    nameWithType: SamlStatement
    fullName: SamlStatement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAction(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAction(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(XmlReader)
- uid: System.IdentityModel.Tokens.SamlAction
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAction
  nameWithType: SamlAction
  fullName: System.IdentityModel.Tokens.SamlAction
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAdvice(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAdvice(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAssertion(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAssertion(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAttribute(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAttribute(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAttributeStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAttributeStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAttributeValue(XmlReader,SamlAttribute)
  nameWithType: SamlSecurityTokenHandler.ReadAttributeValue(XmlReader,SamlAttribute)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(XmlReader,SamlAttribute)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAudienceRestrictionCondition(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(XmlReader)
- uid: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAudienceRestrictionCondition
  nameWithType: SamlAudienceRestrictionCondition
  fullName: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAuthenticationStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAuthorityBinding(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAuthorityBinding(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(XmlReader)
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAuthorityBinding
  nameWithType: SamlAuthorityBinding
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAuthorizationDecisionStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadCondition(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadCondition(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(XmlReader)
- uid: System.IdentityModel.Tokens.SamlCondition
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlCondition
  nameWithType: SamlCondition
  fullName: System.IdentityModel.Tokens.SamlCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadConditions(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadConditions(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadDoNotCacheCondition(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadDoNotCacheCondition(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(XmlReader)
- uid: System.IdentityModel.Tokens.SamlDoNotCacheCondition
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlDoNotCacheCondition
  nameWithType: SamlDoNotCacheCondition
  fullName: System.IdentityModel.Tokens.SamlDoNotCacheCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadEvidence(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadEvidence(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(XmlReader)
- uid: System.IdentityModel.Tokens.SamlEvidence
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlEvidence
  nameWithType: SamlEvidence
  fullName: System.IdentityModel.Tokens.SamlEvidence
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadSigningKeyInfo(XmlReader,SamlAssertion)
  nameWithType: SamlSecurityTokenHandler.ReadSigningKeyInfo(XmlReader,SamlAssertion)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(XmlReader,SamlAssertion)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(XmlReader)
- uid: System.IdentityModel.Tokens.SamlStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlStatement
  nameWithType: SamlStatement
  fullName: System.IdentityModel.Tokens.SamlStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadSubject(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadSubject(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadSubjectKeyInfo(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadToken(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ResolveIssuerToken(SamlAssertion,SecurityTokenResolver)
  nameWithType: SamlSecurityTokenHandler.ResolveIssuerToken(SamlAssertion,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(SamlAssertion,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ResolveSubjectKeyIdentifier(SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenRequirement
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenRequirement
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SetDelegateFromAttribute(SamlAttribute,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.SetDelegateFromAttribute(SamlAttribute,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(SamlAttribute,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: SamlSecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: TryResolveIssuerToken(SamlAssertion,SecurityTokenResolver,SecurityToken)
  nameWithType: SamlSecurityTokenHandler.TryResolveIssuerToken(SamlAssertion,SecurityTokenResolver,SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(SamlAssertion,SecurityTokenResolver,SecurityToken)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: UnspecifiedAuthenticationMethod
  nameWithType: SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ValidateConditions(SamlConditions,Boolean)
  nameWithType: SamlSecurityTokenHandler.ValidateConditions(SamlConditions,Boolean)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(SamlConditions,Boolean)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ValidateToken(SecurityToken)
  nameWithType: SamlSecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimsIdentity>
  nameWithType: ReadOnlyCollection<ClaimsIdentity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: ClaimsIdentity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAction(XmlWriter,SamlAction)
  nameWithType: SamlSecurityTokenHandler.WriteAction(XmlWriter,SamlAction)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(XmlWriter,SamlAction)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAdvice(XmlWriter,SamlAdvice)
  nameWithType: SamlSecurityTokenHandler.WriteAdvice(XmlWriter,SamlAdvice)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(XmlWriter,SamlAdvice)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAssertion(XmlWriter,SamlAssertion)
  nameWithType: SamlSecurityTokenHandler.WriteAssertion(XmlWriter,SamlAssertion)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(XmlWriter,SamlAssertion)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAttribute(XmlWriter,SamlAttribute)
  nameWithType: SamlSecurityTokenHandler.WriteAttribute(XmlWriter,SamlAttribute)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(XmlWriter,SamlAttribute)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAttributeStatement(XmlWriter,SamlAttributeStatement)
  nameWithType: SamlSecurityTokenHandler.WriteAttributeStatement(XmlWriter,SamlAttributeStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(XmlWriter,SamlAttributeStatement)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAttributeValue(XmlWriter,String,SamlAttribute)
  nameWithType: SamlSecurityTokenHandler.WriteAttributeValue(XmlWriter,String,SamlAttribute)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(XmlWriter,String,SamlAttribute)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAudienceRestrictionCondition(XmlWriter,SamlAudienceRestrictionCondition)
  nameWithType: SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(XmlWriter,SamlAudienceRestrictionCondition)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(XmlWriter,SamlAudienceRestrictionCondition)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAuthenticationStatement(XmlWriter,SamlAuthenticationStatement)
  nameWithType: SamlSecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,SamlAuthenticationStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,SamlAuthenticationStatement)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAuthorityBinding(XmlWriter,SamlAuthorityBinding)
  nameWithType: SamlSecurityTokenHandler.WriteAuthorityBinding(XmlWriter,SamlAuthorityBinding)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(XmlWriter,SamlAuthorityBinding)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAuthorizationDecisionStatement(XmlWriter,SamlAuthorizationDecisionStatement)
  nameWithType: SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,SamlAuthorizationDecisionStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,SamlAuthorizationDecisionStatement)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteCondition(XmlWriter,SamlCondition)
  nameWithType: SamlSecurityTokenHandler.WriteCondition(XmlWriter,SamlCondition)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(XmlWriter,SamlCondition)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteConditions(XmlWriter,SamlConditions)
  nameWithType: SamlSecurityTokenHandler.WriteConditions(XmlWriter,SamlConditions)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(XmlWriter,SamlConditions)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteDoNotCacheCondition(XmlWriter,SamlDoNotCacheCondition)
  nameWithType: SamlSecurityTokenHandler.WriteDoNotCacheCondition(XmlWriter,SamlDoNotCacheCondition)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(XmlWriter,SamlDoNotCacheCondition)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteEvidence(XmlWriter,SamlEvidence)
  nameWithType: SamlSecurityTokenHandler.WriteEvidence(XmlWriter,SamlEvidence)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(XmlWriter,SamlEvidence)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteStatement(XmlWriter,SamlStatement)
  nameWithType: SamlSecurityTokenHandler.WriteStatement(XmlWriter,SamlStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(XmlWriter,SamlStatement)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteSubject(XmlWriter,SamlSubject)
  nameWithType: SamlSecurityTokenHandler.WriteSubject(XmlWriter,SamlSubject)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(XmlWriter,SamlSubject)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: SamlSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenHandler
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenHandler
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: AddDelegateToAttributes
  nameWithType: SamlSecurityTokenHandler.AddDelegateToAttributes
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CanReadToken
  nameWithType: SamlSecurityTokenHandler.CanReadToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: SamlSecurityTokenHandler.CanValidateToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: SamlSecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CertificateValidator
  nameWithType: SamlSecurityTokenHandler.CertificateValidator
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CollectAttributeValues
  nameWithType: SamlSecurityTokenHandler.CollectAttributeValues
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAdvice
  nameWithType: SamlSecurityTokenHandler.CreateAdvice
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAssertion
  nameWithType: SamlSecurityTokenHandler.CreateAssertion
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAttribute
  nameWithType: SamlSecurityTokenHandler.CreateAttribute
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAttributeStatement
  nameWithType: SamlSecurityTokenHandler.CreateAttributeStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAuthenticationStatement
  nameWithType: SamlSecurityTokenHandler.CreateAuthenticationStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateClaims
  nameWithType: SamlSecurityTokenHandler.CreateClaims
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateConditions
  nameWithType: SamlSecurityTokenHandler.CreateConditions
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateSamlSubject
  nameWithType: SamlSecurityTokenHandler.CreateSamlSubject
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateSecurityTokenReference
  nameWithType: SamlSecurityTokenHandler.CreateSecurityTokenReference
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateStatements
  nameWithType: SamlSecurityTokenHandler.CreateStatements
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateToken
  nameWithType: SamlSecurityTokenHandler.CreateToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateWindowsIdentity
  nameWithType: SamlSecurityTokenHandler.CreateWindowsIdentity
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateXmlStringFromAttributes
  nameWithType: SamlSecurityTokenHandler.CreateXmlStringFromAttributes
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: DenormalizeAuthenticationType
  nameWithType: SamlSecurityTokenHandler.DenormalizeAuthenticationType
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: DetectReplayedToken
  nameWithType: SamlSecurityTokenHandler.DetectReplayedToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: FindUpn
  nameWithType: SamlSecurityTokenHandler.FindUpn
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetEncryptingCredentials
  nameWithType: SamlSecurityTokenHandler.GetEncryptingCredentials
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetSigningCredentials
  nameWithType: SamlSecurityTokenHandler.GetSigningCredentials
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetTokenReplayCacheEntryExpirationTime
  nameWithType: SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers
  nameWithType: SamlSecurityTokenHandler.GetTokenTypeIdentifiers
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: KeyInfoSerializer
  nameWithType: SamlSecurityTokenHandler.KeyInfoSerializer
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: SamlSecurityTokenHandler.LoadCustomConfiguration
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: NormalizeAuthenticationType
  nameWithType: SamlSecurityTokenHandler.NormalizeAuthenticationType
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessAttributeStatement
  nameWithType: SamlSecurityTokenHandler.ProcessAttributeStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessAuthenticationStatement
  nameWithType: SamlSecurityTokenHandler.ProcessAuthenticationStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessAuthorizationDecisionStatement
  nameWithType: SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessSamlSubject
  nameWithType: SamlSecurityTokenHandler.ProcessSamlSubject
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessStatement
  nameWithType: SamlSecurityTokenHandler.ProcessStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAction
  nameWithType: SamlSecurityTokenHandler.ReadAction
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAdvice
  nameWithType: SamlSecurityTokenHandler.ReadAdvice
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAssertion
  nameWithType: SamlSecurityTokenHandler.ReadAssertion
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAttribute
  nameWithType: SamlSecurityTokenHandler.ReadAttribute
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAttributeStatement
  nameWithType: SamlSecurityTokenHandler.ReadAttributeStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAttributeValue
  nameWithType: SamlSecurityTokenHandler.ReadAttributeValue
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAudienceRestrictionCondition
  nameWithType: SamlSecurityTokenHandler.ReadAudienceRestrictionCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAuthenticationStatement
  nameWithType: SamlSecurityTokenHandler.ReadAuthenticationStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAuthorityBinding
  nameWithType: SamlSecurityTokenHandler.ReadAuthorityBinding
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAuthorizationDecisionStatement
  nameWithType: SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadCondition
  nameWithType: SamlSecurityTokenHandler.ReadCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadConditions
  nameWithType: SamlSecurityTokenHandler.ReadConditions
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadDoNotCacheCondition
  nameWithType: SamlSecurityTokenHandler.ReadDoNotCacheCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadEvidence
  nameWithType: SamlSecurityTokenHandler.ReadEvidence
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadSigningKeyInfo
  nameWithType: SamlSecurityTokenHandler.ReadSigningKeyInfo
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadStatement
  nameWithType: SamlSecurityTokenHandler.ReadStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadSubject
  nameWithType: SamlSecurityTokenHandler.ReadSubject
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadSubjectKeyInfo
  nameWithType: SamlSecurityTokenHandler.ReadSubjectKeyInfo
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadToken
  nameWithType: SamlSecurityTokenHandler.ReadToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ResolveIssuerToken
  nameWithType: SamlSecurityTokenHandler.ResolveIssuerToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ResolveSubjectKeyIdentifier
  nameWithType: SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenRequirement
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenRequirement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SetDelegateFromAttribute
  nameWithType: SamlSecurityTokenHandler.SetDelegateFromAttribute
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: SamlSecurityTokenHandler.TokenType
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: TryResolveIssuerToken
  nameWithType: SamlSecurityTokenHandler.TryResolveIssuerToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ValidateConditions
  nameWithType: SamlSecurityTokenHandler.ValidateConditions
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ValidateToken
  nameWithType: SamlSecurityTokenHandler.ValidateToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAction
  nameWithType: SamlSecurityTokenHandler.WriteAction
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAdvice
  nameWithType: SamlSecurityTokenHandler.WriteAdvice
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAssertion
  nameWithType: SamlSecurityTokenHandler.WriteAssertion
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAttribute
  nameWithType: SamlSecurityTokenHandler.WriteAttribute
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAttributeStatement
  nameWithType: SamlSecurityTokenHandler.WriteAttributeStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAttributeValue
  nameWithType: SamlSecurityTokenHandler.WriteAttributeValue
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAudienceRestrictionCondition
  nameWithType: SamlSecurityTokenHandler.WriteAudienceRestrictionCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAuthenticationStatement
  nameWithType: SamlSecurityTokenHandler.WriteAuthenticationStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAuthorityBinding
  nameWithType: SamlSecurityTokenHandler.WriteAuthorityBinding
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAuthorizationDecisionStatement
  nameWithType: SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteCondition
  nameWithType: SamlSecurityTokenHandler.WriteCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteConditions
  nameWithType: SamlSecurityTokenHandler.WriteConditions
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteDoNotCacheCondition
  nameWithType: SamlSecurityTokenHandler.WriteDoNotCacheCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteEvidence
  nameWithType: SamlSecurityTokenHandler.WriteEvidence
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteSigningKeyInfo
  nameWithType: SamlSecurityTokenHandler.WriteSigningKeyInfo
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteStatement
  nameWithType: SamlSecurityTokenHandler.WriteStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteSubject
  nameWithType: SamlSecurityTokenHandler.WriteSubject
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteSubjectKeyInfo
  nameWithType: SamlSecurityTokenHandler.WriteSubjectKeyInfo
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteToken
  nameWithType: SamlSecurityTokenHandler.WriteToken
