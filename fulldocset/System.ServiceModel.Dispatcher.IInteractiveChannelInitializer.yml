### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  id: IInteractiveChannelInitializer
  children:
  - System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  - System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)
  langs:
  - csharp
  name: IInteractiveChannelInitializer
  nameWithType: IInteractiveChannelInitializer
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  type: Interface
  summary: "Definisce i metodi che consentono a un&quot;applicazione client visualizzare un&quot;interfaccia utente per raccogliere informazioni di identità prima di creare il canale."
  remarks: "Implementare l&quot;interfaccia IInteractiveChannelInitializer per abilitare un&quot;applicazione client per visualizzare un&quot;interfaccia utente che consente all&quot;utente dell&quot;applicazione creare o selezionare le credenziali prima di aprire un canale.       Per implementare IInteractiveChannelInitializer, eseguire la procedura seguente in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>: 1.</xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName>  Richiedere all&quot;utente e ottenere un <xref:System.Net.NetworkCredential?displayProperty=fullName>.</xref:System.Net.NetworkCredential?displayProperty=fullName> appropriato      2.  Aggiungere un oggetto parametro del canale personalizzato alla raccolta restituita dal <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName>metodo nell&quot; <xref:System.ServiceModel.IClientChannel>oggetto con un parametro di tipo <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>.</xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> Questo oggetto parametro del canale viene utilizzato dall&quot;oggetto personalizzato <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>per stabilire i token di sicurezza per il canale.</xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>      3.  Restituire.       Per inserire IInteractiveChannelInitializer: 1.  Override del <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=fullName>metodo nella <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=fullName>classe.</xref:System.ServiceModel.Description.ClientCredentials?displayProperty=fullName> </xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=fullName>      2.  In questo metodo, determinare se l&quot;endpoint richiede un IInteractiveChannelInitializer e in tal caso, aggiungere il IInteractiveChannelInitializer per il <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=fullName>insieme.</xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=fullName>       Esistono due modi gli sviluppatori di applicazioni possono avvalersi di un IInteractiveChannelInitializer inserito. L&quot;applicazione client può chiamare <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>o <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName>(o una versione asincrona) prima di aprire il canale (il *esplicita* approccio) o semplicemente chiamare la prima operazione (di *implicita* approccio).</xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> </xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>       Se si utilizza l&quot;approccio implicito, l&quot;applicazione deve chiamare la prima operazione su un <xref:System.ServiceModel.ClientBase%601>o <xref:System.ServiceModel.IClientChannel>estensione.</xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.ClientBase%601> Se chiama un elemento diverso dalla prima operazione, viene generata un&quot;eccezione.       Se si utilizza l&quot;approccio esplicito, l&quot;applicazione deve eseguire i passaggi seguenti nell&quot;ordine: 1.  Chiamare <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>o <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName>(o una versione asincrona).</xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> </xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName>      2.  Quando gli inizializzatori hanno restituito, chiamare il <xref:System.ServiceModel.ICommunicationObject.Open%2A>metodo sul <xref:System.ServiceModel.IClientChannel>oggetto oppure il <xref:System.ServiceModel.IClientChannel>oggetto restituito dal <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=fullName>proprietà.</xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=fullName> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.ICommunicationObject.Open%2A>      3.  Chiamare le operazioni.       È consigliabile che controllano le applicazioni di produzione di qualità del processo dell&quot;interfaccia utente adottando l&quot;approccio esplicito.       Le applicazioni che usano l&quot;approccio implicito richiamano gli inizializzatori dell&quot;interfaccia utente, ma se l&quot;utente dell&quot;applicazione non risponde entro il periodo di timeout di invio dell&quot;associazione, viene generata un&quot;eccezione quando viene restituito l&quot;interfaccia utente."
  syntax:
    content: public interface IInteractiveChannelInitializer
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  id: BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  langs:
  - csharp
  name: BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Una chiamata asincrona per iniziare a utilizzare un&quot;interfaccia utente per ottenere informazioni sulle credenziali."
  remarks: "Per implementare <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, eseguire la procedura seguente in BeginDisplayInitializationUI: 1.</xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>  Richiedere all&quot;utente in che modo si necessità e ottenere un <xref:System.Net.NetworkCredential?displayProperty=fullName>.</xref:System.Net.NetworkCredential?displayProperty=fullName> appropriato      2.  Aggiungere un oggetto parametro del canale personalizzato alla raccolta restituita dal <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName>metodo nell&quot; <xref:System.ServiceModel.IClientChannel>oggetto con un parametro di tipo <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName>.</xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName> </xref:System.ServiceModel.IClientChannel> </xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> Questo oggetto parametro del canale viene utilizzato dall&quot;oggetto personalizzato <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>per stabilire i token di sicurezza per il canale.</xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName>      3.  Restituire."
  syntax:
    content: public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);
    parameters:
    - id: channel
      type: System.ServiceModel.IClientChannel
      description: "Il canale del client."
    - id: callback
      type: System.AsyncCallback
      description: "Oggetto di callback."
    - id: state
      type: System.Object
      description: "I dati di stato."
    return:
      type: System.IAsyncResult
      description: "Il &lt;xref:System.IAsyncResult?displayProperty=fullName&gt; da utilizzare per richiamare una volta completata l&quot;elaborazione."
  overload: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)
  id: EndDisplayInitializationUI(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  langs:
  - csharp
  name: EndDisplayInitializationUI(IAsyncResult)
  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Chiamato quando il <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*>è terminata.</xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*>"
  syntax:
    content: public void EndDisplayInitializationUI (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Il &lt;xref:System.IAsyncResult?displayProperty=fullName&gt;."
  overload: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(IClientChannel,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.ServiceModel.IClientChannel
  parent: System.ServiceModel
  isExternal: true
  name: IClientChannel
  nameWithType: IClientChannel
  fullName: System.ServiceModel.IClientChannel
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: EndDisplayInitializationUI(IAsyncResult)
  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(IAsyncResult)
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI*
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: BeginDisplayInitializationUI
  nameWithType: IInteractiveChannelInitializer.BeginDisplayInitializationUI
- uid: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI*
  parent: System.ServiceModel.Dispatcher.IInteractiveChannelInitializer
  isExternal: false
  name: EndDisplayInitializationUI
  nameWithType: IInteractiveChannelInitializer.EndDisplayInitializationUI
