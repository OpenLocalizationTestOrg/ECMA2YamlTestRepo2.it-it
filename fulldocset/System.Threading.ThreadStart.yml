### YamlMime:ManagedReference
items:
- uid: System.Threading.ThreadStart
  id: ThreadStart
  langs:
  - csharp
  name: ThreadStart
  nameWithType: ThreadStart
  fullName: System.Threading.ThreadStart
  type: Delegate
  summary: "Rappresenta il metodo che viene eseguito in un <xref href=&quot;System.Threading.Thread&quot;> </xref>."
  remarks: "Quando viene creato un thread gestito, il metodo che viene eseguita sul thread viene rappresentato da un delegato ThreadStart o <xref:System.Threading.ParameterizedThreadStart>delegato che viene passato per il <xref:System.Threading.Thread.%23ctor%2A>costruttore.</xref:System.Threading.Thread.%23ctor%2A> </xref:System.Threading.ParameterizedThreadStart> Il thread non avviato l&quot;esecuzione fino a quando il <xref:System.Threading.Thread.Start%2A?displayProperty=fullName>metodo viene chiamato.</xref:System.Threading.Thread.Start%2A?displayProperty=fullName> L&quot;esecuzione inizia dalla prima riga del metodo rappresentato dal ThreadStart o <xref:System.Threading.ParameterizedThreadStart>delegare.</xref:System.Threading.ParameterizedThreadStart>      > [!NOTE] > Agli utenti di Visual Basic e c# è possono omettere il ThreadStart o <xref:System.Threading.ParameterizedThreadStart>costruttore di delegato durante la creazione di un thread.</xref:System.Threading.ParameterizedThreadStart> In Visual Basic, usare il `AddressOf` operatore quando si passa il metodo per il <xref:System.Threading.Thread.%23ctor%2A>costruttore, ad esempio `Dim t As New Thread(AddressOf ThreadProc)`.</xref:System.Threading.Thread.%23ctor%2A> In c#, è sufficiente specificare il nome della routine del thread. Il compilatore seleziona il costruttore di delegato corretto.       [C++] > [!NOTE] > nella versione 2.0 di .NET Framework, la creazione di un delegato ThreadStart per un metodo statico in C++ richiede un solo parametro: l&quot;indirizzo del metodo di callback, qualificato dal nome della classe. Nelle versioni precedenti erano necessari due parametri quando si crea un delegato per un metodo statico: (null) e l&quot;indirizzo del metodo. Per un metodo di istanza, tutte le versioni richiedono due parametri: la variabile di istanza e l&quot;indirizzo del metodo."
  example:
  - "The following code example shows the syntax for creating and using a ThreadStart delegate with an instance method and with a static method.  \n  \n For another simple example that demonstrates how to create a ThreadStart delegate, see the <xref:System.Threading.Thread.Start?displayProperty=fullName> method overload. For more information about thread creation, see [Creating Threads and Passing Data at Start Time](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Threading.ThreadStart2#1](~/add/codesnippet/cpp/t-system.threading.threa_6_1.cpp)]\n [!code-cs[System.Threading.ThreadStart2#1](~/add/codesnippet/csharp/t-system.threading.threa_6_1.cs)]\n [!code-vb[System.Threading.ThreadStart2#1](~/add/codesnippet/visualbasic/t-system.threading.threa_6_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public delegate void ThreadStart();
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
