### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Pkcs.SignedCms
  id: SignedCms
  children:
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.Certificates
  - System.Security.Cryptography.Pkcs.SignedCms.CheckHash
  - System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature
  - System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  - System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  - System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])
  - System.Security.Cryptography.Pkcs.SignedCms.Detached
  - System.Security.Cryptography.Pkcs.SignedCms.Encode
  - System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)
  - System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  - System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  - System.Security.Cryptography.Pkcs.SignedCms.Version
  langs:
  - csharp
  name: SignedCms
  nameWithType: SignedCms
  fullName: System.Security.Cryptography.Pkcs.SignedCms
  type: Class
  summary: 'La classe SignedCms consente la firma e la verifica dei messaggi CMS/PKCS #7.'
  remarks: "Il servizio di crittografia RFC sintassi messaggio specifica i seguenti tipi MIME e le estensioni di file per i messaggi CMS/PKCS #7 con questi tipi di contenuto.      | Tipo di contenuto | Tipo MIME | Estensione |   |------------------|---------------|---------------|   | envelopedData | applicazione/pkcs7-mime |. p7m |   | signedData | pkcs7/applicazione-signature |. p7s.p7c|"
  syntax:
    content: public sealed class SignedCms
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms()
  nameWithType: SignedCms.SignedCms()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Il costruttore SignedCms crea un&quot;istanza di <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> classe."
  remarks: "La <xref:System.Security.Cryptography.Pkcs.SignedCms>classe ha i seguenti valori di proprietà predefiniti.</xref:System.Security.Cryptography.Pkcs.SignedCms>      | Proprietà | Il valore predefinito |   |--------------|-------------------|   | <xref:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo%2A>| 1.2.840.113549.1.7.1 (dati), lunghezza: zero |   | <xref:System.Security.Cryptography.Pkcs.SignedCms.Detached%2A>| Stato disconnesso: `false` contenuto firmato è incluso nel messaggio CMS/PKCS #7 con le informazioni sulla firma. |       Il valore predefinito <xref:System.Security.Cryptography.Pkcs.SubjectIdentifierType>per firmatari è IssuerAndSerialNumber.</xref:System.Security.Cryptography.Pkcs.SubjectIdentifierType> </xref:System.Security.Cryptography.Pkcs.SignedCms.Detached%2A> </xref:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo%2A>       Se è stato disconnesso `false` (impostazione predefinita), il contenuto firmato è incluso nel messaggio CMS/PKCS #7 con le informazioni sulla firma. Se è stato disconnesso `true`, i client che non possono decodificare i messaggi S/MIME comunque visualizzare il contenuto del messaggio se viene inviato separatamente. Questo può essere utile in un&quot;applicazione di archiviazione che consente di archiviare il contenuto del messaggio se è possibile verificare l&quot;autenticità del mittente del messaggio."
  syntax:
    content: public SignedCms ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "È stato passato un riferimento null a un metodo che non lo accetta come argomento valido."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)
  id: '#ctor(System.Security.Cryptography.Pkcs.ContentInfo)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(ContentInfo)
  nameWithType: SignedCms.SignedCms(ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Il costruttore SignedCms crea un&quot;istanza di <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> classe utilizzando le informazioni sul contenuto specificati come contenuto interno."
  remarks: "Per i valori di proprietà predefiniti utilizzati con questo costruttore, vedere <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Se è stato disconnesso `false` (impostazione predefinita), il contenuto firmato è incluso nel messaggio CMS/PKCS #7 con le informazioni sulla firma. Se è stato disconnesso `true`, i client che non possono decodificare i messaggi S/MIME comunque visualizzare il contenuto del messaggio se viene inviato separatamente. Questo potrebbe essere utile in un&quot;applicazione di archiviazione che consente di archiviare il contenuto del messaggio se è possibile verificare l&quot;autenticità del mittente del messaggio."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo contentInfo);
    parameters:
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "Oggetto <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> oggetto che specifica le informazioni sul contenuto come contenuto interno del <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> messaggio."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "È stato passato un riferimento null a un metodo che non lo accetta come argomento valido."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)
  id: '#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(SubjectIdentifierType)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Il costruttore SignedCms crea un&quot;istanza di <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> classe utilizzando il tipo di identificatore del soggetto specificato come il tipo di identificatore di oggetto predefinito per i firmatari."
  remarks: "Per i valori di proprietà predefiniti utilizzati con questo costruttore, vedere <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Se è stato disconnesso `false` (impostazione predefinita), il contenuto firmato è incluso nel messaggio CMS/PKCS #7 con le informazioni sulla firma. Se è stato disconnesso `true`, i client che non possono decodificare i messaggi S/MIME comunque visualizzare il contenuto del messaggio se viene inviato separatamente. Questo potrebbe essere utile in un&quot;applicazione di archiviazione che consente di archiviare il contenuto del messaggio se è possibile verificare l&quot;autenticità del mittente del messaggio."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType);
    parameters:
    - id: signerIdentifierType
      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType
      description: "Oggetto <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;> </xref> membro che specifica il tipo di identificatore di oggetto predefinito per i firmatari."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "È stato passato un riferimento null a un metodo che non lo accetta come argomento valido."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  id: '#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo,Boolean)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Il costruttore SignedCms crea un&quot;istanza di <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> classe utilizzando le informazioni sul contenuto specificati come contenuto interno e lo stato disconnesso."
  remarks: "Per i valori di proprietà predefiniti utilizzati con questo costruttore, vedere <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Se è stato disconnesso `false` (impostazione predefinita), il contenuto firmato è incluso nel messaggio CMS/PKCS #7 con le informazioni sulla firma. Se è stato disconnesso `true`, i client che non possono decodificare i messaggi S/MIME comunque visualizzare il contenuto del messaggio se viene inviato separatamente. Questo potrebbe essere utile in un&quot;applicazione di archiviazione che consente di archiviare il contenuto del messaggio se è possibile verificare l&quot;autenticità del mittente del messaggio."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached);
    parameters:
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "Oggetto <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> oggetto che specifica le informazioni sul contenuto come contenuto interno del <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> messaggio."
    - id: detached
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>valore che specifica se il <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> oggetto è per una firma disconnessa.</xref:System.Boolean> Se `detached` è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, la firma viene disconnessa. Se `detached` è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, la firma non viene disconnessa."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "È stato passato un riferimento null a un metodo che non lo accetta come argomento valido."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)
  id: '#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(SubjectIdentifierType,ContentInfo)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Il costruttore SignedCms crea un&quot;istanza di <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> classe utilizzando il tipo di identificatore del soggetto specificato come il tipo di identificatore di oggetto predefinito per firmatari e informazioni sul contenuto come contenuto interno."
  remarks: "Per i valori di proprietà predefiniti utilizzati con questo costruttore, vedere <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Se è stato disconnesso `false` (impostazione predefinita), il contenuto firmato è incluso nel messaggio CMS/PKCS #7 con le informazioni sulla firma. Se è stato disconnesso `true`, i client che non possono decodificare i messaggi S/MIME comunque visualizzare il contenuto del messaggio se viene inviato separatamente. Questo potrebbe essere utile in un&quot;applicazione di archiviazione che consente di archiviare il contenuto del messaggio se è possibile verificare l&quot;autenticità del mittente del messaggio."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo contentInfo);
    parameters:
    - id: signerIdentifierType
      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType
      description: "Oggetto <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;> </xref> membro che specifica il tipo di identificatore di oggetto predefinito per i firmatari."
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "Oggetto <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> oggetto che specifica le informazioni sul contenuto come contenuto interno del <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> messaggio."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "È stato passato un riferimento null a un metodo che non lo accetta come argomento valido."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  id: '#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Il costruttore SignedCms crea un&quot;istanza di <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> classe utilizzando il tipo di identificatore del soggetto specificato come il tipo di identificatore di oggetto predefinito per firmatari, le informazioni sul contenuto come contenuto interno e lo stato disconnesso."
  remarks: 'Se è stato disconnesso `false` (impostazione predefinita), il contenuto firmato è incluso nel messaggio CMS/PKCS #7 con le informazioni sulla firma. Se è stato disconnesso `true`, i client che non possono decodificare i messaggi S/MIME comunque visualizzare il contenuto del messaggio se viene inviato separatamente. Questo può essere utile in un&quot;applicazione di archiviazione che consente di archiviare il contenuto del messaggio o meno possibile verificare l&quot;autenticità del mittente del messaggio.'
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached);
    parameters:
    - id: signerIdentifierType
      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType
      description: "Oggetto <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;> </xref> membro che specifica il tipo di identificatore di oggetto predefinito per i firmatari."
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "Oggetto <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> oggetto che specifica le informazioni sul contenuto come contenuto interno del <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> messaggio."
    - id: detached
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>valore che specifica se il <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> oggetto è per una firma disconnessa.</xref:System.Boolean> Se `detached` è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, la firma viene disconnessa. Se scollegato è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, la firma non viene disconnessa."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "È stato passato un riferimento null a un metodo che non lo accetta come argomento valido."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Certificates
  id: Certificates
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Certificates
  nameWithType: SignedCms.Certificates
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Certificates
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'La proprietà certificati recupera i certificati associati al messaggio CMS/PKCS #7 codificato.'
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: 'Un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref> raccolta che rappresenta il set di certificati per il messaggio CMS/PKCS #7 codificato.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.Certificates*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckHash
  id: CheckHash
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: CheckHash()
  nameWithType: SignedCms.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckHash()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Il metodo CheckHash verifica l&quot;integrità dei dati del messaggio CMS/PKCS #7. CheckHash è un metodo specializzato utilizzato in applicazioni di infrastruttura di sicurezza specifiche che si desiderano solo per verificare l&quot;hash del messaggio CMS anziché eseguire una verifica della firma digitale completo. CheckHash non autentica l&quot;autore né il mittente del messaggio poiché questo metodo non prevede la verifica di una firma digitale. Per un controllo dell&quot;integrità e autenticità di un messaggio CMS/PKCS #7, utilizzare il &lt;xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Boolean%29&gt; o &lt;xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Security.Cryptography.X509Certificates.X509Certificate2Collection%2CSystem.Boolean%29&gt; metodi.'
  remarks: 'Questo metodo non fornisce l&quot;autenticazione del messaggio CMS/PKCS #7.'
  syntax:
    content: public void CheckHash ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignedCms.CheckHash*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata al metodo non è valida per lo stato dell&quot;oggetto corrente."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)
  id: CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: CheckSignature(Boolean)
  nameWithType: SignedCms.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'The CheckSignature method verifies the digital signatures on the signed CMS/PKCS #7 message and, optionally, validates the signers'' certificates.'
  remarks: "Questo metodo verifica tutte le firme, incluse le controfirme, nel messaggio CMS/PKCS #7. Se sono presenti attributi firmati inclusi nel messaggio, questi attributi vengono inoltre verificati. Se si sceglie l&quot;opzione per convalidare i certificati, l&quot;intera parte inclusa della catena di certificati viene convalidato.       Questo metodo genera un&quot;eccezione se la verifica della firma digitale non riesce o non vengono soddisfatti i requisiti di convalida."
  example:
  - "The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is not detached. The message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#1](~/add/codesnippet/visualbasic/m-system.security.crypto_31_1.vb)]\n [!code-cs[mpkcs_SignedCMS#1](~/add/codesnippet/csharp/m-system.security.crypto_31_1.cs)]  \n  \n The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is detached, so the message content must verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#2](~/add/codesnippet/visualbasic/m-system.security.crypto_31_2.vb)]\n [!code-cs[mpkcs_SignedCMS#2](~/add/codesnippet/csharp/m-system.security.crypto_31_2.cs)]"
  syntax:
    content: public void CheckSignature (bool verifySignatureOnly);
    parameters:
    - id: verifySignatureOnly
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>valore che specifica se vengono verificate solo le firme digitali senza il certificato del firmatario da convalidare.</xref:System.Boolean>       Se `verifySignatureOnly` è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, vengono verificate solo le firme digitali. Se è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, vengono verificate le firme digitali, vengono convalidati i certificati del firmatario e gli scopi dei certificati. Gli scopi di un certificato sono considerati validi se il certificato non dispone di alcun utilizzo chiave o l&quot;utilizzo della chiave supporta le firme digitali o non ripudio."
  overload: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "È stato passato un riferimento null a un metodo che non lo accetta come argomento valido."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile completare un&quot;operazione di crittografia."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata al metodo non è valida per lo stato dell&quot;oggetto corrente."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  id: CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'The CheckSignature method verifies the digital signatures on the signed CMS/PKCS #7 message by using the specified collection of certificates and, optionally, validates the signers'' certificates.'
  remarks: "Questo metodo verifica tutte le firme, incluse le controfirme, nel messaggio CMS/PKCS #7. Se sono presenti attributi firmati inclusi nel messaggio, questi attributi vengono inoltre verificati. Se si sceglie l&quot;opzione per convalidare i certificati, l&quot;intera parte inclusa della catena di certificati viene convalidato.       Questo metodo genera un&quot;eccezione se la verifica della firma digitale non riesce o non vengono soddisfatti i requisiti di convalida."
  example:
  - "The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is not detached, so the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#1](~/add/codesnippet/visualbasic/3c3d2469-0f69-4cc2-8a35-_1.vb)]\n [!code-cs[mpkcs_SignedCMS#1](~/add/codesnippet/csharp/3c3d2469-0f69-4cc2-8a35-_1.cs)]  \n  \n The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is detached, so the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#2](~/add/codesnippet/visualbasic/3c3d2469-0f69-4cc2-8a35-_2.vb)]\n [!code-cs[mpkcs_SignedCMS#2](~/add/codesnippet/csharp/3c3d2469-0f69-4cc2-8a35-_2.cs)]"
  syntax:
    content: public void CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly);
    parameters:
    - id: extraStore
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "Un <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref> oggetto che può essere usato per convalidare la catena di certificati. Se nessun certificati aggiuntivi da utilizzare per convalidare la catena di certificati, utilizzare &lt;xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Boolean%29&gt; anziché CheckSignature."
    - id: verifySignatureOnly
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>valore che specifica se vengono verificate solo le firme digitali senza il certificato del firmatario da convalidare.</xref:System.Boolean>       Se `verifySignatureOnly` è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, vengono verificate solo le firme digitali. Se è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, vengono verificate le firme digitali, vengono convalidati i certificati del firmatario e gli scopi dei certificati. Gli scopi di un certificato sono considerati validi se il certificato non dispone di alcun utilizzo chiave o l&quot;utilizzo della chiave supporta le firme digitali o non ripudio."
  overload: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "È stato passato un riferimento null a un metodo che non lo accetta come argomento valido."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile completare un&quot;operazione di crittografia."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata al metodo non è valida per lo stato dell&quot;oggetto corrente."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature
  id: ComputeSignature
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ComputeSignature()
  nameWithType: SignedCms.ComputeSignature()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Il metodo ComputeSignature richiesto all&quot;utente di selezionare un certificato di firma, viene creata una firma e aggiunge la firma al messaggio CMS/PKCS #7.'
  remarks: "Questo metodo consente di visualizzare un&quot;interfaccia utente in cui si sceglie di firmatari per questo messaggio. Ciò richiede che il processo corrente è in esecuzione *modalità interattiva utente*, ovvero che la <xref:System.Environment.UserInteractive%2A?displayProperty=fullName>proprietà è impostata su `true`.</xref:System.Environment.UserInteractive%2A?displayProperty=fullName> Un processo è in genere in modalità interattiva utente a meno che non è un processo del servizio o l&quot;esecuzione all&quot;interno di un&quot;applicazione Web.       Verranno visualizzati nell&quot;elenco di firmatari i cui certificati soddisfano le condizioni seguenti:-il certificato ha una chiave privata associata.      -Il certificato è all&quot;interno del periodo di validità.      -Il certificato dispone di alcun utilizzo chiave o l&quot;utilizzo di una chiave che supporta le firme digitali o non ripudio.       I certificati firmatario vengono scelti dall&quot;archivio personale.      ## Le autorizzazioni seguenti sono necessarie per visualizzare l&quot;interfaccia utente di sicurezza di .NET framework:- <xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>le autorizzazioni seguenti sono necessarie per accedere alla chiave di firma:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>"
  example:
  - "The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is not detached. In this case, the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#3](~/add/codesnippet/visualbasic/m-system.security.crypto_77_1.vb)]\n [!code-cs[mpkcs_SignedCMS#3](~/add/codesnippet/csharp/m-system.security.crypto_77_1.cs)]  \n  \n The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is detached. In this case, the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#4](~/add/codesnippet/visualbasic/m-system.security.crypto_77_2.vb)]\n [!code-cs[mpkcs_SignedCMS#4](~/add/codesnippet/csharp/m-system.security.crypto_77_2.cs)]"
  syntax:
    content: public void ComputeSignature ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "È stato passato un riferimento null a un metodo che non lo accetta come argomento valido."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile completare un&quot;operazione di crittografia."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  id: ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ComputeSignature(CmsSigner)
  nameWithType: SignedCms.ComputeSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Il metodo ComputeSignature viene creata una firma utilizzando il firmatario specificato e aggiunge la firma al messaggio CMS/PKCS #7.'
  remarks: "## Le autorizzazioni seguenti sono necessarie per accedere alla chiave di firma di sicurezza di .NET framework:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>"
  example:
  - "The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is not detached. In this case, the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#3](~/add/codesnippet/visualbasic/07c3dd2c-cd35-4b97-996c-_1.vb)]\n [!code-cs[mpkcs_SignedCMS#3](~/add/codesnippet/csharp/07c3dd2c-cd35-4b97-996c-_1.cs)]  \n  \n The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is detached. In this case, the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#4](~/add/codesnippet/visualbasic/07c3dd2c-cd35-4b97-996c-_2.vb)]\n [!code-cs[mpkcs_SignedCMS#4](~/add/codesnippet/csharp/07c3dd2c-cd35-4b97-996c-_2.cs)]"
  syntax:
    content: public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer);
    parameters:
    - id: signer
      type: System.Security.Cryptography.Pkcs.CmsSigner
      description: "Oggetto <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> oggetto che rappresenta il firmatario."
  overload: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "È stato passato un riferimento null a un metodo che non lo accetta come argomento valido."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile completare un&quot;operazione di crittografia."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  id: ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ComputeSignature(CmsSigner,Boolean)
  nameWithType: SignedCms.ComputeSignature(CmsSigner,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Crea una firma utilizzando il firmatario specificato e aggiunge la firma al messaggio CMS/PKCS #7. Se il valore del parametro invisibile all&quot;utente è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> e <xref:System.Security.Cryptography.Pkcs.CmsSigner.Certificate*>proprietà del <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> l&quot;oggetto specificato dal parametro firmatario non è impostata su un certificato valido, questo metodo richiede all&quot;utente di selezionare un certificato di firma.</xref:System.Security.Cryptography.Pkcs.CmsSigner.Certificate*>'
  remarks: "## Le autorizzazioni seguenti sono necessarie per visualizzare l&quot;interfaccia utente di sicurezza di .NET framework:- <xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>le autorizzazioni seguenti sono necessarie per accedere alla chiave di firma:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>"
  syntax:
    content: public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer, bool silent);
    parameters:
    - id: signer
      type: System.Security.Cryptography.Pkcs.CmsSigner
      description: "Oggetto <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> oggetto che rappresenta il firmatario."
    - id: silent
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>per richiedere all&quot;utente di selezionare un certificato di firma."
  overload: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "È stato passato un riferimento null a un metodo che non lo accetta come argomento valido."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile completare un&quot;operazione di crittografia."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il valore di <code> silent </code> parametro <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e non è specificato un certificato di firma."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  id: ContentInfo
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ContentInfo
  nameWithType: SignedCms.ContentInfo
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'La proprietà ContentInfo recupera il contenuto interno del messaggio CMS/PKCS #7 codificato.'
  syntax:
    content: public System.Security.Cryptography.Pkcs.ContentInfo ContentInfo { get; }
    return:
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: 'Oggetto <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> oggetto che rappresenta il contenuto del messaggio CMS/PKCS #7 codificato.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])
  id: Decode(System.Byte[])
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Decode(Byte[])
  nameWithType: SignedCms.Decode(Byte[])
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Decode(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Il metodo Decode decodifica un codificato <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> messaggio. Al completamento della decodifica, è possano recuperare le informazioni decodificate dalle proprietà del <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> oggetto."
  remarks: "Questo metodo reimposta tutte le variabili membro dell&quot;oggetto in base alle informazioni ottenute dalla decodifica di esito positivo."
  example:
  - "The following example shows the placement of the Decode method in the process of verifying the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is not detached, so the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#1](~/add/codesnippet/visualbasic/m-system.security.crypto_48_1.vb)]\n [!code-cs[mpkcs_SignedCMS#1](~/add/codesnippet/csharp/m-system.security.crypto_48_1.cs)]  \n  \n The following example shows the placement of the Decode method in the process of verifying the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is detached, so the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#2](~/add/codesnippet/visualbasic/m-system.security.crypto_48_2.vb)]\n [!code-cs[mpkcs_SignedCMS#2](~/add/codesnippet/csharp/m-system.security.crypto_48_2.cs)]"
  syntax:
    content: public void Decode (byte[] encodedMessage);
    parameters:
    - id: encodedMessage
      type: System.Byte[]
      description: 'Matrice di valori byte che rappresenta il messaggio CMS/PKCS #7 codificato da decodificare.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.Decode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "È stato passato un riferimento null a un metodo che non lo accetta come argomento valido."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile completare un&quot;operazione di crittografia."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Detached
  id: Detached
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Detached
  nameWithType: SignedCms.Detached
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Detached
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "La proprietà disconnessa recupera se il <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> oggetto è per una firma disconnessa."
  syntax:
    content: public bool Detached { get; }
    return:
      type: System.Boolean
      description: "Oggetto <xref:System.Boolean>valore che specifica se il <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> oggetto è per una firma disconnessa.</xref:System.Boolean> Se questa proprietà è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, la firma viene disconnessa. Se questa proprietà è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, la firma non viene disconnessa."
  overload: System.Security.Cryptography.Pkcs.SignedCms.Detached*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Encode
  id: Encode
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Encode()
  nameWithType: SignedCms.Encode()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Encode()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Il metodo di codifica codifica le informazioni nell&quot;oggetto in un messaggio CMS/PKCS #7.'
  syntax:
    content: public byte[] Encode ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Matrice di valori di byte che rappresenta il messaggio codificato. Il messaggio codificato può essere decodificato dal <xref:System.Security.Cryptography.Pkcs.SignedCms.Decode*>metodo.</xref:System.Security.Cryptography.Pkcs.SignedCms.Decode*>"
  overload: System.Security.Cryptography.Pkcs.SignedCms.Encode*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile completare un&quot;operazione di crittografia."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata al metodo non è valida per lo stato dell&quot;oggetto corrente."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)
  id: RemoveSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: RemoveSignature(Int32)
  nameWithType: SignedCms.RemoveSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(Int32)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Rimuove la firma in corrispondenza dell&quot;indice specificato del <xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*>insieme.</xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*>"
  syntax:
    content: public void RemoveSignature (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Indice in base zero della firma da rimuovere."
  overload: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'Un messaggio CMS/PKCS #7 non è firmato e <code> index </code> non è valido.'
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>è minore di zero.       - oppure - <code>index</code> è maggiore del numero di firma meno 1."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile rimuovere la firma.       oppure si è verificato un errore interno di crittografia."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  id: RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: RemoveSignature(SignerInfo)
  nameWithType: SignedCms.RemoveSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(SignerInfo)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Il metodo RemoveSignature rimuove la firma per l&quot;oggetto specificato <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref> oggetto."
  syntax:
    content: public void RemoveSignature (System.Security.Cryptography.Pkcs.SignerInfo signerInfo);
    parameters:
    - id: signerInfo
      type: System.Security.Cryptography.Pkcs.SignerInfo
      description: "Oggetto <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref> oggetto che rappresenta la controfirma rimossa."
  overload: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "È stato passato un riferimento null a un metodo che non lo accetta come argomento valido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore di un argomento non compreso nell&quot;intervallo consentito di valori come definito dal metodo chiamato."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Impossibile completare un&quot;operazione di crittografia."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  id: SignerInfos
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignerInfos
  nameWithType: SignedCms.SignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'La proprietà recupera SignerInfos il <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfoCollection&quot;> </xref> raccolta associata al messaggio CMS/PKCS #7.'
  syntax:
    content: public System.Security.Cryptography.Pkcs.SignerInfoCollection SignerInfos { get; }
    return:
      type: System.Security.Cryptography.Pkcs.SignerInfoCollection
      description: 'Oggetto <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfoCollection&quot;> </xref> oggetto che rappresenta le informazioni del firmatario per il messaggio CMS/PKCS #7.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Version
  id: Version
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Version
  nameWithType: SignedCms.Version
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Version
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'La proprietà Version recupera la versione del messaggio CMS/PKCS #7.'
  remarks: 'La versione determina se il messaggio è un messaggio PKCS #7 o una sintassi CMS (Cryptographic Message). CMS è un superset più recente di PKCS #7.'
  syntax:
    content: public int Version { get; }
    return:
      type: System.Int32
      description: 'Un valore int che rappresenta la versione del messaggio CMS/PKCS #7.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms()
  nameWithType: SignedCms.SignedCms()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms()
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(ContentInfo)
  nameWithType: SignedCms.SignedCms(ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo)
- uid: System.Security.Cryptography.Pkcs.ContentInfo
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: ContentInfo
  nameWithType: ContentInfo
  fullName: System.Security.Cryptography.Pkcs.ContentInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(SubjectIdentifierType)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType)
- uid: System.Security.Cryptography.Pkcs.SubjectIdentifierType
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SubjectIdentifierType
  nameWithType: SubjectIdentifierType
  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifierType
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(SubjectIdentifierType,ContentInfo)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.Certificates
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Certificates
  nameWithType: SignedCms.Certificates
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Certificates
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2Collection
  nameWithType: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckHash
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckHash()
  nameWithType: SignedCms.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckHash()
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckSignature(Boolean)
  nameWithType: SignedCms.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature()
  nameWithType: SignedCms.ComputeSignature()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature()
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature(CmsSigner)
  nameWithType: SignedCms.ComputeSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner)
- uid: System.Security.Cryptography.Pkcs.CmsSigner
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: CmsSigner
  nameWithType: CmsSigner
  fullName: System.Security.Cryptography.Pkcs.CmsSigner
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature(CmsSigner,Boolean)
  nameWithType: SignedCms.ComputeSignature(CmsSigner,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner,Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ContentInfo
  nameWithType: SignedCms.ContentInfo
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Decode(Byte[])
  nameWithType: SignedCms.Decode(Byte[])
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Decode(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Pkcs.SignedCms.Detached
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Detached
  nameWithType: SignedCms.Detached
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Detached
- uid: System.Security.Cryptography.Pkcs.SignedCms.Encode
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Encode()
  nameWithType: SignedCms.Encode()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Encode()
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: RemoveSignature(Int32)
  nameWithType: SignedCms.RemoveSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: RemoveSignature(SignerInfo)
  nameWithType: SignedCms.RemoveSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(SignerInfo)
- uid: System.Security.Cryptography.Pkcs.SignerInfo
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfo
  nameWithType: SignerInfo
  fullName: System.Security.Cryptography.Pkcs.SignerInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignerInfos
  nameWithType: SignedCms.SignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
- uid: System.Security.Cryptography.Pkcs.SignerInfoCollection
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfoCollection
  nameWithType: SignerInfoCollection
  fullName: System.Security.Cryptography.Pkcs.SignerInfoCollection
- uid: System.Security.Cryptography.Pkcs.SignedCms.Version
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Version
  nameWithType: SignedCms.Version
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Version
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms
  nameWithType: SignedCms.SignedCms
- uid: System.Security.Cryptography.Pkcs.SignedCms.Certificates*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Certificates
  nameWithType: SignedCms.Certificates
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckHash*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckHash
  nameWithType: SignedCms.CheckHash
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckSignature
  nameWithType: SignedCms.CheckSignature
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature
  nameWithType: SignedCms.ComputeSignature
- uid: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ContentInfo
  nameWithType: SignedCms.ContentInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.Decode*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Decode
  nameWithType: SignedCms.Decode
- uid: System.Security.Cryptography.Pkcs.SignedCms.Detached*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Detached
  nameWithType: SignedCms.Detached
- uid: System.Security.Cryptography.Pkcs.SignedCms.Encode*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Encode
  nameWithType: SignedCms.Encode
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: RemoveSignature
  nameWithType: SignedCms.RemoveSignature
- uid: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignerInfos
  nameWithType: SignedCms.SignerInfos
- uid: System.Security.Cryptography.Pkcs.SignedCms.Version*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Version
  nameWithType: SignedCms.Version
