### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.DictationGrammar
  id: DictationGrammar
  children:
  - System.Speech.Recognition.DictationGrammar.#ctor
  - System.Speech.Recognition.DictationGrammar.#ctor(System.String)
  - System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)
  langs:
  - csharp
  name: DictationGrammar
  nameWithType: DictationGrammar
  fullName: System.Speech.Recognition.DictationGrammar
  type: Class
  summary: "Rappresenta una grammatica di riconoscimento vocale utilizzata per la dettatura testo libero."
  remarks: "Questa classe fornisce applicazioni con un modello di lingua predefinito che può elaborare l&quot;input dell&quot;utente parlata in testo. Questa classe supporta predefinite e personalizzati oggetti DictationGrammar. Per informazioni sulla selezione di una grammatica dettatura, vedere il <xref:System.Speech.Recognition.DictationGrammar.%23ctor%28System.String%29>costruttore.</xref:System.Speech.Recognition.DictationGrammar.%23ctor%28System.String%29>       Per impostazione predefinita, il modello di lingua DictationGrammar è libero di contesto. Non consente l&quot;utilizzo di parole specifiche o word di ordine per identificare e interpretare l&quot;input audio. Per aggiungere contesto la grammatica di dettatura, utilizzare il <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A>metodo.</xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A>      > [!NOTE] > Oggetti DictationGrammar non supportano il <xref:System.Speech.Recognition.Grammar.Priority%2A>proprietà.</xref:System.Speech.Recognition.Grammar.Priority%2A> DictationGrammar genera un <xref:System.NotSupportedException>Se <xref:System.Speech.Recognition.Grammar.Priority%2A>è impostata.</xref:System.Speech.Recognition.Grammar.Priority%2A> </xref:System.NotSupportedException>"
  example:
  - "The following example creates three dictation grammars, adds them to a new <xref:System.Speech.Recognition.SpeechRecognitionEngine> object, and returns the new object. The first grammar is the default dictation grammar. The second grammar is the spelling dictation grammar. The third grammar is the default dictation grammar that includes a context phrase. The <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> method is used to associate the context phrase with the dictation grammar after it is loaded to the <xref:System.Speech.Recognition.SpeechRecognitionEngine> object.  \n  \n```c#  \n  \nprivate SpeechRecognitionEngine LoadDictationGrammars()  \n{  \n  \n  // Create a default dictation grammar.  \n  DictationGrammar defaultDictationGrammar = new DictationGrammar();  \n  defaultDictationGrammar.Name = \"default dictation\";  \n  defaultDictationGrammar.Enabled = true;  \n  \n  // Create the spelling dictation grammar.  \n  DictationGrammar spellingDictationGrammar =  \n    new DictationGrammar(\"grammar:dictation#spelling\");  \n  spellingDictationGrammar.Name = \"spelling dictation\";  \n  spellingDictationGrammar.Enabled = true;  \n  \n  // Create the question dictation grammar.  \n  DictationGrammar customDictationGrammar =  \n    new DictationGrammar(\"grammar:dictation\");  \n  customDictationGrammar.Name = \"question dictation\";  \n  customDictationGrammar.Enabled = true;  \n  \n  // Create a SpeechRecognitionEngine object and add the grammars to it.  \n  SpeechRecognitionEngine recoEngine = new SpeechRecognitionEngine();  \n  recoEngine.LoadGrammar(defaultDictationGrammar);  \n  recoEngine.LoadGrammar(spellingDictationGrammar);  \n  recoEngine.LoadGrammar(customDictationGrammar);  \n  \n  // Add a context to customDictationGrammar.  \n  customDictationGrammar.SetDictationContext(\"How do you\", null);  \n  \n  return recoEngine;  \n}  \n  \n```"
  syntax:
    content: 'public class DictationGrammar : System.Speech.Recognition.Grammar'
  inheritance:
  - System.Object
  - System.Speech.Recognition.Grammar
  implements: []
  inheritedMembers:
  - System.Speech.Recognition.Grammar.Enabled
  - System.Speech.Recognition.Grammar.IsStg
  - System.Speech.Recognition.Grammar.Loaded
  - System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  - System.Speech.Recognition.Grammar.Name
  - System.Speech.Recognition.Grammar.Priority
  - System.Speech.Recognition.Grammar.ResourceName
  - System.Speech.Recognition.Grammar.RuleName
  - System.Speech.Recognition.Grammar.SpeechRecognized
  - System.Speech.Recognition.Grammar.StgInit(System.Object[])
  - System.Speech.Recognition.Grammar.Weight
  platform:
  - net462
- uid: System.Speech.Recognition.DictationGrammar.#ctor
  id: '#ctor'
  parent: System.Speech.Recognition.DictationGrammar
  langs:
  - csharp
  name: DictationGrammar()
  nameWithType: DictationGrammar.DictationGrammar()
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Speech.Recognition.DictationGrammar&quot;> </xref> classe per la grammatica di dettatura predefinito fornita da Windows Desktop vocale Technology."
  remarks: "La grammatica di dettatura predefinito emula consigliate dettatura standard, inclusi i segni di punteggiatura. Non supporta l&quot;ortografia di una parola."
  syntax:
    content: public DictationGrammar ();
    parameters: []
  overload: System.Speech.Recognition.DictationGrammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.DictationGrammar.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.DictationGrammar
  langs:
  - csharp
  name: DictationGrammar(String)
  nameWithType: DictationGrammar.DictationGrammar(String)
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Speech.Recognition.DictationGrammar&quot;> </xref> classe con una grammatica dettatura specifico."
  remarks: "Piattaforma di riconoscimento vocale utilizza una sintassi URI specializzata per definire la grammatica di dettatura personalizzato. Il valore `grammar:dictation` indica la grammatica di dettatura predefinito. Il valore `grammar:dictation#spelling` indica l&quot;ortografia e grammatica dettatura."
  syntax:
    content: public DictationGrammar (string topic);
    parameters:
    - id: topic
      type: System.String
      description: "Un conforme a XML Universal identificatore URI (Resource) che specifica la grammatica di dettatura `grammar:dictation` o `grammar:dictation#spelling`."
  overload: System.Speech.Recognition.DictationGrammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)
  id: SetDictationContext(System.String,System.String)
  parent: System.Speech.Recognition.DictationGrammar
  langs:
  - csharp
  name: SetDictationContext(String,String)
  nameWithType: DictationGrammar.SetDictationContext(String,String)
  fullName: System.Speech.Recognition.DictationGrammar.SetDictationContext(String,String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Aggiunge un contesto a una grammatica dettatura che è stata caricata da un <xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;> </xref> o <xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;> </xref> oggetto."
  remarks: "Per impostazione predefinita, la grammatica di dettatura non consente di utilizzare parole specifiche o word di ordine per identificare e interpretare l&quot;input audio. Quando un contesto viene aggiunto a una grammatica dettatura, utilizza il motore di riconoscimento di `precedingText` e `subsequentText` per identificare quando interpretare vocale come dettatura.      > [!NOTE] > Una grammatica dettatura deve essere caricata da un <xref:System.Speech.Recognition.SpeechRecognizer>o <xref:System.Speech.Recognition.SpeechRecognitionEngine>prima di poter usare SetDictationContext per aggiungere un contesto dell&quot;oggetto.</xref:System.Speech.Recognition.SpeechRecognitionEngine> </xref:System.Speech.Recognition.SpeechRecognizer>       La tabella seguente descrive come il motore di riconoscimento utilizza i due parametri per determinare quando usare la grammatica di dettatura.      | `precedingText`|`subsequentText`| Descrizione |   |---------------------|----------------------|-----------------|   |not `null`|not `null`| Il motore di riconoscimento utilizza le condizioni per racchiudere tra parentesi quadre frasi candidate possibili. |   | `null`|not `null`| Il motore di riconoscimento utilizza il `subsequentText` completamento dettatura. |   |not `null`|`null`| Il motore di riconoscimento utilizza il `precedingText` per avviare la dettatura. |   | `null`|`null`| Il motore di riconoscimento non utilizza un contesto quando si utilizza la grammatica di dettatura. |"
  syntax:
    content: public void SetDictationContext (string precedingText, string subsequentText);
    parameters:
    - id: precedingText
      type: System.String
      description: "Testo che indica l&quot;inizio di un contesto di dettatura."
    - id: subsequentText
      type: System.String
      description: "Testo che indica la fine di un contesto di dettatura."
  overload: System.Speech.Recognition.DictationGrammar.SetDictationContext*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Speech.Recognition.Grammar
  isExternal: false
  name: System.Speech.Recognition.Grammar
- uid: System.Speech.Recognition.DictationGrammar.#ctor
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: DictationGrammar()
  nameWithType: DictationGrammar.DictationGrammar()
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar()
- uid: System.Speech.Recognition.DictationGrammar.#ctor(System.String)
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: DictationGrammar(String)
  nameWithType: DictationGrammar.DictationGrammar(String)
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: SetDictationContext(String,String)
  nameWithType: DictationGrammar.SetDictationContext(String,String)
  fullName: System.Speech.Recognition.DictationGrammar.SetDictationContext(String,String)
- uid: System.Speech.Recognition.DictationGrammar.#ctor*
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: DictationGrammar
  nameWithType: DictationGrammar.DictationGrammar
- uid: System.Speech.Recognition.DictationGrammar.SetDictationContext*
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: SetDictationContext
  nameWithType: DictationGrammar.SetDictationContext
