### YamlMime:ManagedReference
items:
- uid: System.Data.IDbConnection
  id: IDbConnection
  children:
  - System.Data.IDbConnection.BeginTransaction
  - System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.IDbConnection.ChangeDatabase(System.String)
  - System.Data.IDbConnection.Close
  - System.Data.IDbConnection.ConnectionString
  - System.Data.IDbConnection.ConnectionTimeout
  - System.Data.IDbConnection.CreateCommand
  - System.Data.IDbConnection.Database
  - System.Data.IDbConnection.Open
  - System.Data.IDbConnection.State
  langs:
  - csharp
  name: IDbConnection
  nameWithType: IDbConnection
  fullName: System.Data.IDbConnection
  type: Interface
  summary: "Rappresenta una connessione aperta a un&quot;origine dati e viene implementata dai provider di dati .NET Framework che accedono a database relazionali."
  remarks: "L&quot;interfaccia IDbConnection consente di implementare una classe Connection, che rappresenta una sessione univoca con un&quot;origine dati (ad esempio, una connessione di rete a un server di) una classe che eredita. Per ulteriori informazioni sulle classi di connessione, vedere [la connessione a un&quot;origine dati](~/add/includes/ajax-current-ext-md.md).       Un&quot;applicazione non crea un&quot;istanza dell&quot;interfaccia IDbConnection direttamente, ma crea un&quot;istanza di una classe che eredita IDbConnection.       Le classi che ereditano IDbConnection devono implementare tutti i membri ereditati e in genere definire membri aggiuntivi per aggiungere funzionalità specifiche del provider. Ad esempio, l&quot;interfaccia IDbConnection definisce il <xref:System.Data.IDbConnection.ConnectionTimeout%2A>proprietà.</xref:System.Data.IDbConnection.ConnectionTimeout%2A> A sua volta, la <xref:System.Data.SqlClient.SqlConnection>classe questa proprietà viene ereditata e definisce anche la <xref:System.Data.SqlClient.SqlConnection.PacketSize%2A>proprietà.</xref:System.Data.SqlClient.SqlConnection.PacketSize%2A> </xref:System.Data.SqlClient.SqlConnection>"
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlCommand> and <xref:System.Data.SqlClient.SqlConnection>. The <xref:System.Data.SqlClient.SqlConnection> is opened and set as the <xref:System.Data.SqlClient.SqlCommand.Connection%2A> for the <xref:System.Data.SqlClient.SqlCommand>. The example then calls <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A>, and closes the connection. To accomplish this, the <xref:System.Data.SqlClient.SqlCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is a Transact-SQL INSERT statement.  \n  \n [!code-cs[Classic WebData SqlConnection Example#1](~/add/codesnippet/csharp/t-system.data.idbconnect_1.cs)]\n [!code-vb[Classic WebData SqlConnection Example#1](~/add/codesnippet/visualbasic/t-system.data.idbconnect_1.vb)]"
  syntax:
    content: 'public interface IDbConnection : IDisposable'
  implements:
  - System.IDisposable
  platform:
  - net462
- uid: System.Data.IDbConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: IDbConnection.BeginTransaction()
  fullName: System.Data.IDbConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Avvia una transazione di database."
  remarks: "Una volta completata la transazione, in modo esplicito è necessario eseguire il commit o il rollback della transazione utilizzando il <xref:System.Data.IDbTransaction.Commit%2A>o <xref:System.Data.IDbTransaction.Rollback%2A>metodi.</xref:System.Data.IDbTransaction.Rollback%2A> </xref:System.Data.IDbTransaction.Commit%2A>"
  syntax:
    content: public System.Data.IDbTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.IDbTransaction
      description: "Oggetto che rappresenta la nuova transazione."
  overload: System.Data.IDbConnection.BeginTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: IDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.IDbConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inizia una transazione di database con l&quot;oggetto specificato <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> valore."
  remarks: "Una volta completata la transazione, in modo esplicito è necessario eseguire il commit o il rollback della transazione utilizzando il <xref:System.Data.IDbTransaction.Commit%2A>o <xref:System.Data.IDbTransaction.Rollback%2A>metodi.</xref:System.Data.IDbTransaction.Rollback%2A> </xref:System.Data.IDbTransaction.Commit%2A>"
  syntax:
    content: public System.Data.IDbTransaction BeginTransaction (System.Data.IsolationLevel il);
    parameters:
    - id: il
      type: System.Data.IsolationLevel
      description: "Uno del <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> valori."
    return:
      type: System.Data.IDbTransaction
      description: "Oggetto che rappresenta la nuova transazione."
  overload: System.Data.IDbConnection.BeginTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: IDbConnection.ChangeDatabase(String)
  fullName: System.Data.IDbConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Modifica il database corrente per un oggetto aperto <xref uid=&quot;langword_csharp_Connection&quot; name=&quot;Connection&quot; href=&quot;&quot;> </xref> oggetto."
  syntax:
    content: public void ChangeDatabase (string databaseName);
    parameters:
    - id: databaseName
      type: System.String
      description: "Il nome del database da utilizzare al posto del database corrente."
  overload: System.Data.IDbConnection.ChangeDatabase*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbConnection.Close
  id: Close
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: Close()
  nameWithType: IDbConnection.Close()
  fullName: System.Data.IDbConnection.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Chiude la connessione al database."
  remarks: "Il metodo Close esegue il rollback di tutte le transazioni in sospeso. È quindi rilascia la connessione al pool di connessioni o chiude la connessione se il pool di connessioni è disabilitato.       Un&quot;applicazione può chiamare `Close` più volte senza generare un&quot;eccezione."
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Data.IDbConnection.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: IDbConnection.ConnectionString
  fullName: System.Data.IDbConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene o imposta la stringa utilizzata per aprire un database."
  remarks: "Il `ConnectionString` proprietà può essere impostata solo durante la connessione viene chiusa."
  example:
  - "The following example creates an instance of a derived class, <xref:System.Data.OleDb.OleDbConnection>, sets its <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>, and displays its <xref:System.Data.OleDb.OleDbConnection.State%2A>.  \n  \n [!code-cs[Classic WebData IDbConnection.ConnectionString Example#1](~/add/codesnippet/csharp/p-system.data.idbconnect_0_1.cs)]\n [!code-vb[Classic WebData IDbConnection.ConnectionString Example#1](~/add/codesnippet/visualbasic/p-system.data.idbconnect_0_1.vb)]"
  syntax:
    content: public string ConnectionString { get; set; }
    return:
      type: System.String
      description: "Stringa contenente le impostazioni di connessione."
  overload: System.Data.IDbConnection.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: IDbConnection.ConnectionTimeout
  fullName: System.Data.IDbConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il tempo di attesa durante il tentativo di stabilire una connessione prima di terminare il tentativo e generare un errore."
  remarks: "Il valore 0 indica nessun limite per il tempo di attesa, anziché alcun tempo di attesa e deve essere evitato in un <xref:System.Data.IDbConnection.ConnectionString%2A>poiché determinerebbe il tentativo di connessione per un&quot;attesa indefinita.</xref:System.Data.IDbConnection.ConnectionString%2A>"
  syntax:
    content: public int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "Il tempo (in secondi) di attesa per una connessione per aprirla. Il valore predefinito è 15 secondi."
  overload: System.Data.IDbConnection.ConnectionTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: IDbConnection.CreateCommand()
  fullName: System.Data.IDbConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Crea e restituisce un oggetto Command associato alla connessione."
  syntax:
    content: public System.Data.IDbCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.IDbCommand
      description: "Oggetto Command associato alla connessione."
  overload: System.Data.IDbConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbConnection.Database
  id: Database
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: Database
  nameWithType: IDbConnection.Database
  fullName: System.Data.IDbConnection.Database
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il nome del database corrente o del database da utilizzare dopo l&quot;apertura di una connessione."
  remarks: "Il `Database` proprietà può essere aggiornata in modo dinamico tramite il <xref:System.Data.IDbConnection.ChangeDatabase%2A>metodo oppure passando un&quot;istruzione SQL mediante uno dei metodi Execute.</xref:System.Data.IDbConnection.ChangeDatabase%2A> (Inizialmente il database viene impostato tramite la stringa di connessione). Se si modifica il database corrente utilizzando un&quot;istruzione SQL o `ChangeDatabase` (metodo), viene inviato un messaggio informativo e quindi la proprietà viene aggiornata."
  syntax:
    content: public string Database { get; }
    return:
      type: System.String
      description: "Il nome del database corrente o il nome del database da utilizzare una sola volta, viene aperta una connessione. Il valore predefinito è una stringa vuota."
  overload: System.Data.IDbConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbConnection.Open
  id: Open
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: Open()
  nameWithType: IDbConnection.Open()
  fullName: System.Data.IDbConnection.Open()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Apre una connessione di database con le impostazioni specificate per il <xref uid=&quot;langword_csharp_ConnectionString&quot; name=&quot;ConnectionString&quot; href=&quot;&quot;> </xref> proprietà dell&quot;oggetto di connessione specifica del provider."
  syntax:
    content: public void Open ();
    parameters: []
  overload: System.Data.IDbConnection.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbConnection.State
  id: State
  parent: System.Data.IDbConnection
  langs:
  - csharp
  name: State
  nameWithType: IDbConnection.State
  fullName: System.Data.IDbConnection.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene lo stato corrente della connessione."
  remarks: "Le modifiche di stato consentiti sono: - `Closed` a `Open`, usando il `Open` metodo dell&quot;oggetto connessione.      -Da `Open` a `Closed`, utilizzando il `Close` metodo o `Dispose` metodo dell&quot;oggetto connessione."
  example:
  - "The following example creates an instance of a derived class, <xref:System.Data.OleDb.OleDbConnection>, sets its <xref:System.Data.IDbConnection.ConnectionString%2A>, and displays its State.  \n  \n [!code-cs[Classic WebData IDbConnection.ConnectionString Example#1](~/add/codesnippet/csharp/p-system.data.idbconnect_1_1.cs)]\n [!code-vb[Classic WebData IDbConnection.ConnectionString Example#1](~/add/codesnippet/visualbasic/p-system.data.idbconnect_1_1.vb)]"
  syntax:
    content: public System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "Uno del <xref href=&quot;System.Data.ConnectionState&quot;> </xref> valori."
  overload: System.Data.IDbConnection.State*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.IDbConnection.BeginTransaction
  parent: System.Data.IDbConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: IDbConnection.BeginTransaction()
  fullName: System.Data.IDbConnection.BeginTransaction()
- uid: System.Data.IDbTransaction
  parent: System.Data
  isExternal: false
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
- uid: System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.IDbConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: IDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.IDbConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.IDbConnection.ChangeDatabase(System.String)
  parent: System.Data.IDbConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: IDbConnection.ChangeDatabase(String)
  fullName: System.Data.IDbConnection.ChangeDatabase(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.IDbConnection.Close
  parent: System.Data.IDbConnection
  isExternal: false
  name: Close()
  nameWithType: IDbConnection.Close()
  fullName: System.Data.IDbConnection.Close()
- uid: System.Data.IDbConnection.ConnectionString
  parent: System.Data.IDbConnection
  isExternal: false
  name: ConnectionString
  nameWithType: IDbConnection.ConnectionString
  fullName: System.Data.IDbConnection.ConnectionString
- uid: System.Data.IDbConnection.ConnectionTimeout
  parent: System.Data.IDbConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: IDbConnection.ConnectionTimeout
  fullName: System.Data.IDbConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDbConnection.CreateCommand
  parent: System.Data.IDbConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: IDbConnection.CreateCommand()
  fullName: System.Data.IDbConnection.CreateCommand()
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.IDbConnection.Database
  parent: System.Data.IDbConnection
  isExternal: false
  name: Database
  nameWithType: IDbConnection.Database
  fullName: System.Data.IDbConnection.Database
- uid: System.Data.IDbConnection.Open
  parent: System.Data.IDbConnection
  isExternal: false
  name: Open()
  nameWithType: IDbConnection.Open()
  fullName: System.Data.IDbConnection.Open()
- uid: System.Data.IDbConnection.State
  parent: System.Data.IDbConnection
  isExternal: false
  name: State
  nameWithType: IDbConnection.State
  fullName: System.Data.IDbConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.IDbConnection.BeginTransaction*
  parent: System.Data.IDbConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: IDbConnection.BeginTransaction
- uid: System.Data.IDbConnection.ChangeDatabase*
  parent: System.Data.IDbConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: IDbConnection.ChangeDatabase
- uid: System.Data.IDbConnection.Close*
  parent: System.Data.IDbConnection
  isExternal: false
  name: Close
  nameWithType: IDbConnection.Close
- uid: System.Data.IDbConnection.ConnectionString*
  parent: System.Data.IDbConnection
  isExternal: false
  name: ConnectionString
  nameWithType: IDbConnection.ConnectionString
- uid: System.Data.IDbConnection.ConnectionTimeout*
  parent: System.Data.IDbConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: IDbConnection.ConnectionTimeout
- uid: System.Data.IDbConnection.CreateCommand*
  parent: System.Data.IDbConnection
  isExternal: false
  name: CreateCommand
  nameWithType: IDbConnection.CreateCommand
- uid: System.Data.IDbConnection.Database*
  parent: System.Data.IDbConnection
  isExternal: false
  name: Database
  nameWithType: IDbConnection.Database
- uid: System.Data.IDbConnection.Open*
  parent: System.Data.IDbConnection
  isExternal: false
  name: Open
  nameWithType: IDbConnection.Open
- uid: System.Data.IDbConnection.State*
  parent: System.Data.IDbConnection
  isExternal: false
  name: State
  nameWithType: IDbConnection.State
