### YamlMime:ManagedReference
items:
- uid: System.Data.IDataRecord
  id: IDataRecord
  children:
  - System.Data.IDataRecord.FieldCount
  - System.Data.IDataRecord.GetBoolean(System.Int32)
  - System.Data.IDataRecord.GetByte(System.Int32)
  - System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.IDataRecord.GetChar(System.Int32)
  - System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.IDataRecord.GetData(System.Int32)
  - System.Data.IDataRecord.GetDataTypeName(System.Int32)
  - System.Data.IDataRecord.GetDateTime(System.Int32)
  - System.Data.IDataRecord.GetDecimal(System.Int32)
  - System.Data.IDataRecord.GetDouble(System.Int32)
  - System.Data.IDataRecord.GetFieldType(System.Int32)
  - System.Data.IDataRecord.GetFloat(System.Int32)
  - System.Data.IDataRecord.GetGuid(System.Int32)
  - System.Data.IDataRecord.GetInt16(System.Int32)
  - System.Data.IDataRecord.GetInt32(System.Int32)
  - System.Data.IDataRecord.GetInt64(System.Int32)
  - System.Data.IDataRecord.GetName(System.Int32)
  - System.Data.IDataRecord.GetOrdinal(System.String)
  - System.Data.IDataRecord.GetString(System.Int32)
  - System.Data.IDataRecord.GetValue(System.Int32)
  - System.Data.IDataRecord.GetValues(System.Object[])
  - System.Data.IDataRecord.IsDBNull(System.Int32)
  - System.Data.IDataRecord.Item(System.Int32)
  - System.Data.IDataRecord.Item(System.String)
  langs:
  - csharp
  name: IDataRecord
  nameWithType: IDataRecord
  fullName: System.Data.IDataRecord
  type: Interface
  summary: "Fornisce l&quot;accesso ai valori di colonna all&quot;interno di ogni riga per un <xref uid=&quot;langword_csharp_DataReader&quot; name=&quot;DataReader&quot; href=&quot;&quot;> </xref>ed è implementata dai provider di dati .NET Framework che accedono a database relazionali."
  remarks: "Il <xref:System.Data.IDataReader>IDataRecord interfacce e consentono a una classe che eredita implementare un `DataReader` classe</xref:System.Data.IDataReader> Consente di leggere uno o più flussi forward-only di set di risultati. Per ulteriori informazioni su `DataReader` classi, vedere [recupero di dati mediante DataReader](~/add/includes/ajax-current-ext-md.md).       Un&quot;applicazione non crea un&quot;istanza dell&quot;interfaccia IDataRecord direttamente, ma crea un&quot;istanza di una classe che eredita IDataRecord. In genere, questo caso ottenendo un `DataReader` tramite il `ExecuteReader` metodo il `Command` oggetto.       Le classi che ereditano IDataRecord devono implementare tutti i membri ereditati e in genere definire membri aggiuntivi per aggiungere funzionalità specifiche del provider.       I provider che implementano un `DataReader` sono necessari per esporre i dati in tipi common language runtime (CLR). Coercizione del tipo è definito per alcuni tipi non inclusi in CLR. Questi valori sono accessibili come tipi conformi con i tipi CLR. Ad esempio, nella tabella seguente sono elencati i mapping suggeriti da tipi di dati OLE DB a tipi CLR, con alternativo tra parentesi.      | Tipo OLE DB | Tipo CLR |   |-----------------|--------------|   | DBTYPE_BOOL | Int16 |   | DBTYPE_BSTR | stringa |   | DBTYPE_BYTES | byte [] |   | DBTYPE_CY | Decimale |   | DBTYPE_DATE | DateTime |   | DBTYPE_DBDATE | DateTime |   | DBTYPE_DBTIME | DateTime |   | DBTYPE_DBTIMESTAMP | DateTime |   | DBTYPE_DECIMAL | Decimale |   | DBTYPE_EMPTY | null |   | DBTYPE_ERROR | ExternalException |   | DBTYPE_FILETIME | DateTime |   | DBTYPE_GUID | GUID |   | DBTYPE_HCHAPTER | non supportata |   | DBTYPE_I1 | SByte |   | DBTYPE_I2 | Int16 |   | DBTYPE_I4 | Int32 |   | DBTYPE_I8 | Int64 |   | DBTYPE_IDISPATCH | oggetto |   | DBTYPE_IUNKNOWN | oggetto |   | DBTYPE_NULL | DBNull.Value|   | DBTYPE_NUMERIC | Decimale |   | DBTYPE_PROPVARIANT | oggetto |   | DBTYPE_R4 | Singolo |   | DBTYPE_R8 | Double |   | DBTYPE_STR | stringa |   | DBTYPE_UDT | non supportata |   | DBTYPE_UI1 | byte (Int16) |   | DBTYPE_UI2 | UInt16 (Int32) |   | DBTYPE_UI4 | UInt32 (Int64) |   | DBTYPE_UI8 | UInt64 (decimale) |   | DBTYPE_VARIANT | oggetto |   | Per informazioni sul | non supportata |   | DBTYPE_WSTR | stringa |"
  example:
  - "The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, and then the <xref:System.Data.SqlClient.SqlConnection>.  \n  \n [!code-cs[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/csharp/t-system.data.idatarecord_1.cs)]\n [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/add/codesnippet/visualbasic/t-system.data.idatarecord_1.vb)]"
  syntax:
    content: public interface IDataRecord
  implements: []
  platform:
  - net462
- uid: System.Data.IDataRecord.FieldCount
  id: FieldCount
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: FieldCount
  nameWithType: IDataRecord.FieldCount
  fullName: System.Data.IDataRecord.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il numero di colonne nella riga corrente."
  remarks: "Dopo l&quot;esecuzione di una query che non restituisce righe (ad esempio, usando il <xref:System.Data.IDbCommand.ExecuteNonQuery%2A>metodo), FieldCount restituisce -1.</xref:System.Data.IDbCommand.ExecuteNonQuery%2A>"
  syntax:
    content: public int FieldCount { get; }
    return:
      type: System.Int32
      description: "Se non posizionato in un recordset valido, 0. in caso contrario, il numero di colonne nel record corrente. Il valore predefinito è -1."
  overload: System.Data.IDataRecord.FieldCount*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataRecord.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: IDataRecord.GetBoolean(Int32)
  fullName: System.Data.IDataRecord.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore della colonna specificata come valore Boolean."
  remarks: "Viene eseguita alcuna conversione. Pertanto, i dati recuperati devono già a un valore booleano; in caso contrario viene generata un&quot;eccezione."
  syntax:
    content: public bool GetBoolean (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Boolean
      description: "Il valore della colonna."
  overload: System.Data.IDataRecord.GetBoolean*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: IDataRecord.GetByte(Int32)
  fullName: System.Data.IDataRecord.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore intero senza segno a 8 bit della colonna specificata."
  syntax:
    content: public byte GetByte (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Byte
      description: "Il valore intero senza segno a 8 bit della colonna specificata."
  overload: System.Data.IDataRecord.GetByte*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: IDataRecord.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.IDataRecord.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Legge un flusso di byte dall&quot;offset della colonna specificata nel buffer come una matrice, iniziando in corrispondenza dell&quot;offset del buffer specificato."
  remarks: "GetBytes restituisce il numero di byte disponibili nel campo. Spesso si tratta della lunghezza esatta del campo. Tuttavia, il numero restituito può essere inferiore alla lunghezza del campo se `GetBytes` è già stato utilizzato per ottenere i byte del campo.       Se si passa un buffer `null`, GetBytes restituisce la lunghezza della riga in byte.       Viene eseguita alcuna conversione; pertanto i dati recuperati devono già essere una matrice di byte."
  syntax:
    content: public long GetBytes (int i, long fieldOffset, byte[] buffer, int bufferoffset, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    - id: fieldOffset
      type: System.Int64
      description: "L&quot;indice all&quot;interno del campo da cui iniziare l&quot;operazione di lettura."
    - id: buffer
      type: System.Byte[]
      description: "Buffer in cui leggere il flusso di byte."
    - id: bufferoffset
      type: System.Int32
      description: "L&quot;indice per `buffer` per avviare l&quot;operazione di lettura."
    - id: length
      type: System.Int32
      description: "Il numero di byte da leggere."
    return:
      type: System.Int64
      description: "Il numero effettivo di byte letti."
  overload: System.Data.IDataRecord.GetBytes*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: IDataRecord.GetChar(Int32)
  fullName: System.Data.IDataRecord.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore del carattere della colonna specificata."
  syntax:
    content: public char GetChar (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Char
      description: "Il valore del carattere della colonna specificata."
  overload: System.Data.IDataRecord.GetChar*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: IDataRecord.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.IDataRecord.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Legge un flusso di caratteri dall&quot;offset della colonna specificata nel buffer come una matrice, iniziando in corrispondenza dell&quot;offset del buffer specificato."
  remarks: "GetChars restituisce il numero di caratteri disponibili nel campo. Spesso si tratta della lunghezza esatta del campo. Tuttavia, il numero restituito può essere minore della lunghezza esatta del campo se `GetChars` è già stato utilizzato per ottenere i caratteri del campo.       Se si passa un buffer `null`, `GetChars` restituisce la lunghezza del campo in caratteri.       Viene eseguita alcuna conversione; pertanto i dati recuperati devono già essere una matrice di caratteri."
  syntax:
    content: public long GetChars (int i, long fieldoffset, char[] buffer, int bufferoffset, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    - id: fieldoffset
      type: System.Int64
      description: "L&quot;indice all&quot;interno della riga da cui iniziare l&quot;operazione di lettura."
    - id: buffer
      type: System.Char[]
      description: "Buffer in cui leggere il flusso di byte."
    - id: bufferoffset
      type: System.Int32
      description: "L&quot;indice per `buffer` per avviare l&quot;operazione di lettura."
    - id: length
      type: System.Int32
      description: "Il numero di byte da leggere."
    return:
      type: System.Int64
      description: "Il numero effettivo di caratteri letti."
  overload: System.Data.IDataRecord.GetChars*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetData(System.Int32)
  id: GetData(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetData(Int32)
  nameWithType: IDataRecord.GetData(Int32)
  fullName: System.Data.IDataRecord.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Restituisce un <xref href=&quot;System.Data.IDataReader&quot;> </xref> per il numero ordinale di colonna specificato."
  syntax:
    content: public System.Data.IDataReader GetData (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "L&quot;indice del campo da trovare."
    return:
      type: System.Data.IDataReader
      description: "Il <xref href=&quot;System.Data.IDataReader&quot;> </xref> per il numero ordinale di colonna specificato."
  overload: System.Data.IDataRecord.GetData*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: IDataRecord.GetDataTypeName(Int32)
  fullName: System.Data.IDataRecord.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene le informazioni sul tipo di dati per il campo specificato."
  remarks: "Le informazioni sul tipo di dati possono essere diverse dalle informazioni sul tipo restituite da `GetFieldType`, in particolare in cui i tipi di dati sottostante non eseguano il mapping uno dei tipi di runtime supportati dal linguaggio. (ad esempio, `DataTypeName` potrebbe essere &quot;integer&quot;, mentre `Type.Name` può essere &quot;Int32&quot;.)"
  syntax:
    content: public string GetDataTypeName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "L&quot;indice del campo da trovare."
    return:
      type: System.String
      description: "Il tipo di dati informazioni per il campo specificato."
  overload: System.Data.IDataRecord.GetDataTypeName*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: IDataRecord.GetDateTime(Int32)
  fullName: System.Data.IDataRecord.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore di dati data e ora del campo specificato."
  syntax:
    content: public DateTime GetDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "L&quot;indice del campo da trovare."
    return:
      type: System.DateTime
      description: "Il valore data e ora dati del campo specificato."
  overload: System.Data.IDataRecord.GetDateTime*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: IDataRecord.GetDecimal(Int32)
  fullName: System.Data.IDataRecord.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore numerico con posizione fissa del campo specificato."
  syntax:
    content: public decimal GetDecimal (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "L&quot;indice del campo da trovare."
    return:
      type: System.Decimal
      description: "Il valore numerico posizione fissa del campo specificato."
  overload: System.Data.IDataRecord.GetDecimal*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: IDataRecord.GetDouble(Int32)
  fullName: System.Data.IDataRecord.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il numero a virgola mobile e precisione doppia del campo specificato."
  syntax:
    content: public double GetDouble (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "L&quot;indice del campo da trovare."
    return:
      type: System.Double
      description: "Numero in virgola mobile e precisione doppia del campo specificato."
  overload: System.Data.IDataRecord.GetDouble*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: IDataRecord.GetFieldType(Int32)
  fullName: System.Data.IDataRecord.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene le <xref:System.Type>informazioni corrispondenti al tipo di <xref:System.Object>che verrebbe restituito da <xref:System.Data.IDataRecord.GetValue*>.</xref:System.Data.IDataRecord.GetValue*> </xref:System.Object> </xref:System.Type>"
  remarks: "Queste informazioni è utilizzabile per migliorare le prestazioni indicando la funzione di accesso fortemente tipizzata da chiamare. (ad esempio, usando `GetInt32` è circa dieci volte più veloci rispetto a `GetValue`.)"
  syntax:
    content: public Type GetFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "L&quot;indice del campo da trovare."
    return:
      type: System.Type
      description: "Le <xref:System.Type>informazioni corrispondenti al tipo di <xref:System.Object>che verrebbe restituito da <xref:System.Data.IDataRecord.GetValue*>.</xref:System.Data.IDataRecord.GetValue*> </xref:System.Object> </xref:System.Type>"
  overload: System.Data.IDataRecord.GetFieldType*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: IDataRecord.GetFloat(Int32)
  fullName: System.Data.IDataRecord.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il numero a virgola mobile e precisione singola del campo specificato."
  syntax:
    content: public float GetFloat (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "L&quot;indice del campo da trovare."
    return:
      type: System.Single
      description: "Numero in virgola mobile e precisione singola del campo specificato."
  overload: System.Data.IDataRecord.GetFloat*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: IDataRecord.GetGuid(Int32)
  fullName: System.Data.IDataRecord.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Restituisce il valore GUID del campo specificato."
  syntax:
    content: public Guid GetGuid (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "L&quot;indice del campo da trovare."
    return:
      type: System.Guid
      description: "Il valore GUID del campo specificato."
  overload: System.Data.IDataRecord.GetGuid*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: IDataRecord.GetInt16(Int32)
  fullName: System.Data.IDataRecord.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore intero con segno a 16 bit del campo specificato."
  syntax:
    content: public short GetInt16 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "L&quot;indice del campo da trovare."
    return:
      type: System.Int16
      description: "Il valore intero con segno a 16 bit del campo specificato."
  overload: System.Data.IDataRecord.GetInt16*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: IDataRecord.GetInt32(Int32)
  fullName: System.Data.IDataRecord.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore intero con segno a 32 bit del campo specificato."
  syntax:
    content: public int GetInt32 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "L&quot;indice del campo da trovare."
    return:
      type: System.Int32
      description: "Il valore intero con segno a 32 bit del campo specificato."
  overload: System.Data.IDataRecord.GetInt32*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: IDataRecord.GetInt64(Int32)
  fullName: System.Data.IDataRecord.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore intero con segno a 64 bit del campo specificato."
  syntax:
    content: public long GetInt64 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "L&quot;indice del campo da trovare."
    return:
      type: System.Int64
      description: "Il valore intero con segno a 64 bit del campo specificato."
  overload: System.Data.IDataRecord.GetInt64*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: IDataRecord.GetName(Int32)
  fullName: System.Data.IDataRecord.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il nome per il campo da ricercare."
  syntax:
    content: public string GetName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "L&quot;indice del campo da trovare."
    return:
      type: System.String
      description: "Il nome del campo o una stringa vuota (&quot;&quot;), se è presente alcun valore da restituire."
  overload: System.Data.IDataRecord.GetName*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: IDataRecord.GetOrdinal(String)
  fullName: System.Data.IDataRecord.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Restituisce l&quot;indice del campo denominato."
  remarks: "`GetOrdinal`Innanzitutto, esegue una ricerca con distinzione maiuscole/minuscole. In caso contrario, viene eseguita una ricerca con distinzione tra maiuscole e secondo. `GetOrdinal`è senza distinzione di larghezza dei caratteri kana. Se non viene trovato l&quot;indice del campo denominato, un `IndexOutOfRangeException` viene generata un&quot;eccezione.       Poiché le ricerche basate su valori ordinali sono più efficienti ricerche denominate, non è opportuno chiamare `GetOrdinal` all&quot;interno di un ciclo. Risparmiare tempo chiamando `GetOrdinal` una sola volta e assegnando i risultati a una variabile integer per l&quot;utilizzo all&quot;interno del ciclo."
  example:
  - "The following example demonstrates how to use the inherited <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> method.  \n  \n [!code-vb[Classic WebData OdbcDataReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.idatarecor_1.vb)]\n [!code-cs[Classic WebData OdbcDataReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.idatarecor_1.cs)]"
  syntax:
    content: public int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del campo da ricercare."
    return:
      type: System.Int32
      description: "L&quot;indice del campo denominato."
  overload: System.Data.IDataRecord.GetOrdinal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataRecord.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: IDataRecord.GetString(Int32)
  fullName: System.Data.IDataRecord.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene il valore di stringa del campo specificato."
  syntax:
    content: public string GetString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "L&quot;indice del campo da trovare."
    return:
      type: System.String
      description: "Il valore di stringa del campo specificato."
  overload: System.Data.IDataRecord.GetString*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: IDataRecord.GetValue(Int32)
  fullName: System.Data.IDataRecord.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Restituisce il valore del campo specificato."
  syntax:
    content: public object GetValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "L&quot;indice del campo da trovare."
    return:
      type: System.Object
      description: "Il <xref:System.Object>che conterrà il valore del campo al momento della restituzione.</xref:System.Object>"
  overload: System.Data.IDataRecord.GetValue*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: IDataRecord.GetValues(Object[])
  fullName: System.Data.IDataRecord.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Popola una matrice di oggetti con i valori della colonna del record corrente."
  remarks: "Per la maggior parte delle applicazioni, il metodo GetValues fornisce un mezzo efficiente per il recupero di tutte le colonne, anziché recuperare ciascuna colonna singolarmente.       È possibile passare un <xref:System.Object>matrice che contiene un valore minore rispetto al numero di colonne contenute nella riga risultante.</xref:System.Object> Solo la quantità di dati di <xref:System.Object>contenuti nella matrice vengono copiati nella matrice.</xref:System.Object> È inoltre possibile passare un <xref:System.Object>matrice la cui lunghezza è maggiore del numero di colonne contenute nella riga risultante.</xref:System.Object>"
  syntax:
    content: public int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Matrice di <xref:System.Object>per copiare i campi attributo.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Il numero di istanze di <xref:System.Object>nella matrice.</xref:System.Object>"
  overload: System.Data.IDataRecord.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDataRecord.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: IDataRecord.IsDBNull(Int32)
  fullName: System.Data.IDataRecord.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Verifica se il campo specificato è impostato su null."
  remarks: "Chiamare questo metodo per verificare se sono presenti valori null della colonna prima di chiamare i metodi get tipizzati (ad esempio, <xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>, <xref:System.Data.SqlClient.SqlDataReader.GetChar%2A>e così via) per evitare la generazione di un errore.</xref:System.Data.SqlClient.SqlDataReader.GetChar%2A> </xref:System.Data.SqlClient.SqlDataReader.GetByte%2A>"
  syntax:
    content: public bool IsDBNull (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "L&quot;indice del campo da trovare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il campo specificato è impostato su null. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.IDataRecord.IsDBNull*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: IDataRecord.Item(Int32)
  fullName: System.Data.IDataRecord.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene la colonna in corrispondenza dell&quot;indice specificato."
  syntax:
    content: public object this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: "Indice in base zero della colonna da ottenere."
    return:
      type: System.Object
      description: "La colonna in corrispondenza dell&quot;indice specificato come un <xref:System.Object>.</xref:System.Object>"
  overload: System.Data.IDataRecord.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.IDataRecord.Item(System.String)
  id: Item(System.String)
  parent: System.Data.IDataRecord
  langs:
  - csharp
  name: Item(String)
  nameWithType: IDataRecord.Item(String)
  fullName: System.Data.IDataRecord.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ottiene la colonna con il nome specificato."
  remarks: "Innanzitutto viene eseguita una ricerca tra maiuscole e minuscole. In caso contrario, viene eseguita una ricerca con distinzione tra maiuscole e secondo.       Questo metodo è senza distinzione kana-width."
  syntax:
    content: public object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Il nome della colonna da trovare."
    return:
      type: System.Object
      description: "La colonna con il nome specificato come un <xref:System.Object>.</xref:System.Object>"
  overload: System.Data.IDataRecord.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "È stata trovata alcuna colonna con il nome specificato."
  platform:
  - net462
references:
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.IDataRecord.FieldCount
  parent: System.Data.IDataRecord
  isExternal: false
  name: FieldCount
  nameWithType: IDataRecord.FieldCount
  fullName: System.Data.IDataRecord.FieldCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDataRecord.GetBoolean(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: IDataRecord.GetBoolean(Int32)
  fullName: System.Data.IDataRecord.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.IDataRecord.GetByte(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetByte(Int32)
  nameWithType: IDataRecord.GetByte(Int32)
  fullName: System.Data.IDataRecord.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: IDataRecord.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.IDataRecord.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.IDataRecord.GetChar(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetChar(Int32)
  nameWithType: IDataRecord.GetChar(Int32)
  fullName: System.Data.IDataRecord.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: IDataRecord.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.IDataRecord.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.IDataRecord.GetData(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetData(Int32)
  nameWithType: IDataRecord.GetData(Int32)
  fullName: System.Data.IDataRecord.GetData(Int32)
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.IDataRecord.GetDataTypeName(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: IDataRecord.GetDataTypeName(Int32)
  fullName: System.Data.IDataRecord.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.IDataRecord.GetDateTime(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: IDataRecord.GetDateTime(Int32)
  fullName: System.Data.IDataRecord.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.IDataRecord.GetDecimal(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: IDataRecord.GetDecimal(Int32)
  fullName: System.Data.IDataRecord.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.IDataRecord.GetDouble(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: IDataRecord.GetDouble(Int32)
  fullName: System.Data.IDataRecord.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.IDataRecord.GetFieldType(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: IDataRecord.GetFieldType(Int32)
  fullName: System.Data.IDataRecord.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.IDataRecord.GetFloat(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: IDataRecord.GetFloat(Int32)
  fullName: System.Data.IDataRecord.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.IDataRecord.GetGuid(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: IDataRecord.GetGuid(Int32)
  fullName: System.Data.IDataRecord.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.IDataRecord.GetInt16(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: IDataRecord.GetInt16(Int32)
  fullName: System.Data.IDataRecord.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.IDataRecord.GetInt32(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: IDataRecord.GetInt32(Int32)
  fullName: System.Data.IDataRecord.GetInt32(Int32)
- uid: System.Data.IDataRecord.GetInt64(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: IDataRecord.GetInt64(Int32)
  fullName: System.Data.IDataRecord.GetInt64(Int32)
- uid: System.Data.IDataRecord.GetName(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetName(Int32)
  nameWithType: IDataRecord.GetName(Int32)
  fullName: System.Data.IDataRecord.GetName(Int32)
- uid: System.Data.IDataRecord.GetOrdinal(System.String)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: IDataRecord.GetOrdinal(String)
  fullName: System.Data.IDataRecord.GetOrdinal(String)
- uid: System.Data.IDataRecord.GetString(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetString(Int32)
  nameWithType: IDataRecord.GetString(Int32)
  fullName: System.Data.IDataRecord.GetString(Int32)
- uid: System.Data.IDataRecord.GetValue(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetValue(Int32)
  nameWithType: IDataRecord.GetValue(Int32)
  fullName: System.Data.IDataRecord.GetValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.IDataRecord.GetValues(System.Object[])
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetValues(Object[])
  nameWithType: IDataRecord.GetValues(Object[])
  fullName: System.Data.IDataRecord.GetValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.IDataRecord.IsDBNull(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: IDataRecord.IsDBNull(Int32)
  fullName: System.Data.IDataRecord.IsDBNull(Int32)
- uid: System.Data.IDataRecord.Item(System.Int32)
  parent: System.Data.IDataRecord
  isExternal: false
  name: Item(Int32)
  nameWithType: IDataRecord.Item(Int32)
  fullName: System.Data.IDataRecord.Item(Int32)
- uid: System.Data.IDataRecord.Item(System.String)
  parent: System.Data.IDataRecord
  isExternal: false
  name: Item(String)
  nameWithType: IDataRecord.Item(String)
  fullName: System.Data.IDataRecord.Item(String)
- uid: System.Data.IDataRecord.FieldCount*
  parent: System.Data.IDataRecord
  isExternal: false
  name: FieldCount
  nameWithType: IDataRecord.FieldCount
- uid: System.Data.IDataRecord.GetBoolean*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetBoolean
  nameWithType: IDataRecord.GetBoolean
- uid: System.Data.IDataRecord.GetByte*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetByte
  nameWithType: IDataRecord.GetByte
- uid: System.Data.IDataRecord.GetBytes*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetBytes
  nameWithType: IDataRecord.GetBytes
- uid: System.Data.IDataRecord.GetChar*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetChar
  nameWithType: IDataRecord.GetChar
- uid: System.Data.IDataRecord.GetChars*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetChars
  nameWithType: IDataRecord.GetChars
- uid: System.Data.IDataRecord.GetData*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetData
  nameWithType: IDataRecord.GetData
- uid: System.Data.IDataRecord.GetDataTypeName*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDataTypeName
  nameWithType: IDataRecord.GetDataTypeName
- uid: System.Data.IDataRecord.GetDateTime*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDateTime
  nameWithType: IDataRecord.GetDateTime
- uid: System.Data.IDataRecord.GetDecimal*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDecimal
  nameWithType: IDataRecord.GetDecimal
- uid: System.Data.IDataRecord.GetDouble*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetDouble
  nameWithType: IDataRecord.GetDouble
- uid: System.Data.IDataRecord.GetFieldType*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetFieldType
  nameWithType: IDataRecord.GetFieldType
- uid: System.Data.IDataRecord.GetFloat*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetFloat
  nameWithType: IDataRecord.GetFloat
- uid: System.Data.IDataRecord.GetGuid*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetGuid
  nameWithType: IDataRecord.GetGuid
- uid: System.Data.IDataRecord.GetInt16*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt16
  nameWithType: IDataRecord.GetInt16
- uid: System.Data.IDataRecord.GetInt32*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt32
  nameWithType: IDataRecord.GetInt32
- uid: System.Data.IDataRecord.GetInt64*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetInt64
  nameWithType: IDataRecord.GetInt64
- uid: System.Data.IDataRecord.GetName*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetName
  nameWithType: IDataRecord.GetName
- uid: System.Data.IDataRecord.GetOrdinal*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetOrdinal
  nameWithType: IDataRecord.GetOrdinal
- uid: System.Data.IDataRecord.GetString*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetString
  nameWithType: IDataRecord.GetString
- uid: System.Data.IDataRecord.GetValue*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetValue
  nameWithType: IDataRecord.GetValue
- uid: System.Data.IDataRecord.GetValues*
  parent: System.Data.IDataRecord
  isExternal: false
  name: GetValues
  nameWithType: IDataRecord.GetValues
- uid: System.Data.IDataRecord.IsDBNull*
  parent: System.Data.IDataRecord
  isExternal: false
  name: IsDBNull
  nameWithType: IDataRecord.IsDBNull
- uid: System.Data.IDataRecord.Item*
  parent: System.Data.IDataRecord
  isExternal: false
  name: Item
  nameWithType: IDataRecord.Item
