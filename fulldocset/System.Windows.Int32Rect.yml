### YamlMime:ManagedReference
items:
- uid: System.Windows.Int32Rect
  id: Int32Rect
  children:
  - System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Int32Rect.Empty
  - System.Windows.Int32Rect.Equals(System.Object)
  - System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)
  - System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)
  - System.Windows.Int32Rect.GetHashCode
  - System.Windows.Int32Rect.HasArea
  - System.Windows.Int32Rect.Height
  - System.Windows.Int32Rect.IsEmpty
  - System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  - System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  - System.Windows.Int32Rect.Parse(System.String)
  - System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Int32Rect.ToString
  - System.Windows.Int32Rect.ToString(System.IFormatProvider)
  - System.Windows.Int32Rect.Width
  - System.Windows.Int32Rect.X
  - System.Windows.Int32Rect.Y
  langs:
  - csharp
  name: Int32Rect
  nameWithType: Int32Rect
  fullName: System.Windows.Int32Rect
  type: Struct
  summary: "Descrive la larghezza, altezza e posizione di un rettangolo integer."
  remarks: "<a name=&quot;xamlAttributeUsage_Duration&quot;></a># # Utilizzo dell&quot;attributo XAML ```   <object property=&quot;X,Y,Width,Height&quot;/>   - or    <object property=&quot;Empty&quot;/>   ``` <a name=&quot;xamlValues_MinWidth&quot;> </a> # # valori XAML *X* <xref:System.Int32?displayProperty=fullName> la coordinata x dell&quot;angolo superiore sinistro del rettangolo di.</xref:System.Int32?displayProperty=fullName>                 *Y* <xref:System.Int32?displayProperty=fullName> coordinata y dell&quot;angolo superiore sinistro del rettangolo.</xref:System.Int32?displayProperty=fullName>           *Larghezza* <xref:System.Int32?displayProperty=fullName> la larghezza del rettangolo.</xref:System.Int32?displayProperty=fullName>           *Altezza* <xref:System.Int32?displayProperty=fullName> l&quot;altezza del rettangolo.</xref:System.Int32?displayProperty=fullName>          <a name=&quot;xamlTextUsage_Int32Rect&quot;></a># # XAML testo utilizzo anche utilizzare gli spazi vuoti anziché di virgole per delimitare i valori. Gli spazi vuoti è utilizzabile anche con il valore impostato delimitato da virgole."
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Int32RectConverter))]

      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.Int32RectValueSerializer))]

      public struct Int32Rect : IFormattable
  inheritance:
  - System.ValueType
  implements:
  - System.IFormattable
  platform:
  - net462
- uid: System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Int32Rect(Int32,Int32,Int32,Int32)
  nameWithType: Int32Rect.Int32Rect(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Int32Rect.Int32Rect(Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Inizializza una nuova istanza di un <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> con l&quot;oggetto specificato <> </> *> e <> </> *> coordinate e il valore specificato <> </> *> e <> </> *>."
  syntax:
    content: public Int32Rect (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "Il <xref:System.Windows.Int32Rect.X*>del nuovo <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> istanza che specifica la coordinata x dell&quot;angolo superiore sinistro del rettangolo di.</xref:System.Windows.Int32Rect.X*>"
    - id: y
      type: System.Int32
      description: "Il <xref:System.Windows.Int32Rect.Y*>del nuovo <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> istanza che specifica la coordinata y dell&quot;angolo superiore sinistro del rettangolo di.</xref:System.Windows.Int32Rect.Y*>"
    - id: width
      type: System.Int32
      description: "Il <xref:System.Windows.Int32Rect.Width*>del nuovo <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> istanza che specifica la larghezza del rettangolo.</xref:System.Windows.Int32Rect.Width*>"
    - id: height
      type: System.Int32
      description: "Il <xref:System.Windows.Int32Rect.Height*>del nuovo <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> istanza che specifica l&quot;altezza del rettangolo.</xref:System.Windows.Int32Rect.Height*>"
  overload: System.Windows.Int32Rect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Empty
  id: Empty
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Empty
  nameWithType: Int32Rect.Empty
  fullName: System.Windows.Int32Rect.Empty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Ottiene il rettangolo vuoto, un valore speciale che rappresenta un rettangolo senza posizione o area."
  remarks: "Questa proprietà è equivalente alla chiamata al costruttore utilizzando 0 per tutti i valori di parametro.      <a name=&quot;xamlAttributeUsage_Automatic&quot;></a># # Utilizzo dell&quot;attributo XAML ```   <object property=&quot;Empty&quot; />   ``` <a name=&quot;xamlValues_Automatic&quot;> </a> # # valori XAML *proprietà* una proprietà che accetta un <xref:System.Windows.Int32Rect>valore.</xref:System.Windows.Int32Rect>      "
  syntax:
    content: public static System.Windows.Int32Rect Empty { get; }
    return:
      type: System.Windows.Int32Rect
      description: "Un rettangolo vuoto senza posizione o area."
  overload: System.Windows.Int32Rect.Empty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Int32Rect.Equals(Object)
  fullName: System.Windows.Int32Rect.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determina se il rettangolo specificato è uguale a questo rettangolo."
  remarks: "Questa operazione verifica l&quot;uguaglianza dell&quot;oggetto."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Oggetto da confrontare con il rettangolo corrente."
    return:
      type: System.Boolean
      description: '**true** if *o* is an <xref href=&quot;System.Windows.Int32Rect&quot;></xref> and the same <>*>, <>*>, <>*>, and <>*> as this rectangle; otherwise, **false**.'
  overload: System.Windows.Int32Rect.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)
  id: Equals(System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Equals(Int32Rect)
  nameWithType: Int32Rect.Equals(Int32Rect)
  fullName: System.Windows.Int32Rect.Equals(Int32Rect)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determina se il rettangolo specificato è uguale a questo rettangolo."
  remarks: "Questa operazione verifica l&quot;uguaglianza dell&quot;oggetto."
  syntax:
    content: public bool Equals (System.Windows.Int32Rect value);
    parameters:
    - id: value
      type: System.Windows.Int32Rect
      description: "Il rettangolo da confrontare con il rettangolo corrente."
    return:
      type: System.Boolean
      description: '**true** se entrambi i rettangoli hanno lo stesso <> </> *>, <> </> *>, <> </> *>, e <> </> *> questo rettangolo; in caso contrario, **false**.'
  overload: System.Windows.Int32Rect.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)
  id: Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Equals(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.Equals(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.Equals(Int32Rect,Int32Rect)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determina se i rettangoli specificati sono uguali."
  remarks: "Questa operazione verifica l&quot;uguaglianza dell&quot;oggetto."
  syntax:
    content: public static bool Equals (System.Windows.Int32Rect int32Rect1, System.Windows.Int32Rect int32Rect2);
    parameters:
    - id: int32Rect1
      type: System.Windows.Int32Rect
      description: "Il primo rettangolo da confrontare."
    - id: int32Rect2
      type: System.Windows.Int32Rect
      description: "Il secondo rettangolo da confrontare."
    return:
      type: System.Boolean
      description: '**true** if *int32Rect1* and *int32Rect2* have the same <>*>, <>*>, <>*>, and <>*>; otherwise, **false**.'
  overload: System.Windows.Int32Rect.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.GetHashCode
  id: GetHashCode
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Int32Rect.GetHashCode()
  fullName: System.Windows.Int32Rect.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Crea un codice hash di questo rettangolo <> </> *>, <> </> *>, <> </> *>, e <> </> *> valori."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash di questo rettangolo."
  overload: System.Windows.Int32Rect.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.HasArea
  id: HasArea
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: HasArea
  nameWithType: Int32Rect.HasArea
  fullName: System.Windows.Int32Rect.HasArea
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Ottiene un valore che indica se il <> </> *> e <> </> *> le proprietà del <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> sono maggiori di 0."
  syntax:
    content: public bool HasArea { get; }
    return:
      type: System.Boolean
      description: "true se il <> </> *> e <> </> *> le proprietà del <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> maggiore di 0; in caso contrario, <code> false </code>."
  overload: System.Windows.Int32Rect.HasArea*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Height
  id: Height
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Height
  nameWithType: Int32Rect.Height
  fullName: System.Windows.Int32Rect.Height
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Ottiene o imposta l&quot;altezza del rettangolo."
  syntax:
    content: public int Height { get; set; }
    return:
      type: System.Int32
      description: "L&quot;altezza del rettangolo. Il valore predefinito è `0`."
  overload: System.Windows.Int32Rect.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.IsEmpty
  id: IsEmpty
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: IsEmpty
  nameWithType: Int32Rect.IsEmpty
  fullName: System.Windows.Int32Rect.IsEmpty
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Ottiene un valore che indica se il rettangolo è vuoto."
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: '**true** se il rettangolo è vuoto; in caso contrario, **false**. Il valore predefinito è **true**.'
  overload: System.Windows.Int32Rect.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  id: op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: op_Equality(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.op_Equality(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.op_Equality(Int32Rect,Int32Rect)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Confronta due rettangoli per verificarne l&quot;uguaglianza esatta."
  syntax:
    content: public static bool op_Equality (System.Windows.Int32Rect int32Rect1, System.Windows.Int32Rect int32Rect2);
    parameters:
    - id: int32Rect1
      type: System.Windows.Int32Rect
      description: "Il primo rettangolo da confrontare."
    - id: int32Rect2
      type: System.Windows.Int32Rect
      description: "Il secondo rettangolo da confrontare."
    return:
      type: System.Boolean
      description: '**true** if *int32Rect1* and *int32Rect2* have the same <>*>, <>*>, <>*>, and <>*>; otherwise, **false**.'
  overload: System.Windows.Int32Rect.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  id: op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: op_Inequality(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.op_Inequality(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.op_Inequality(Int32Rect,Int32Rect)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Confronta due rettangoli per stabilirne la disuguaglianza."
  syntax:
    content: public static bool op_Inequality (System.Windows.Int32Rect int32Rect1, System.Windows.Int32Rect int32Rect2);
    parameters:
    - id: int32Rect1
      type: System.Windows.Int32Rect
      description: "Il primo rettangolo da confrontare."
    - id: int32Rect2
      type: System.Windows.Int32Rect
      description: "Il secondo rettangolo da confrontare."
    return:
      type: System.Boolean
      description: '**false** se *int32Rect1* e *int32Rect2* hanno lo stesso <> </> *>, <> </> *>, <> </> *>, e <> </> *>; in caso contrario, se tutti questi valori sono identici, quindi **true**.'
  overload: System.Windows.Int32Rect.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Parse(System.String)
  id: Parse(System.String)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Parse(String)
  nameWithType: Int32Rect.Parse(String)
  fullName: System.Windows.Int32Rect.Parse(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Crea un <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> struttura dall&quot;oggetto specificato <xref:System.String>rappresentazione.</xref:System.String>"
  syntax:
    content: public static System.Windows.Int32Rect Parse (string source);
    parameters:
    - id: source
      type: System.String
      description: "Rappresentazione di stringa di un <xref href=&quot;System.Windows.Int32Rect&quot;> </xref>."
    return:
      type: System.Windows.Int32Rect
      description: "L&quot;equivalente <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> struttura."
  overload: System.Windows.Int32Rect.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)
  id: System#IFormattable#ToString(System.String,System.IFormatProvider)
  isEii: true
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Int32Rect.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Int32Rect.System.IFormattable.ToString(String,IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Formatta il valore dell&quot;istanza corrente usando il formato specificato."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Windows.Int32Rect>esegue il cast dell&quot;istanza di un <xref:System.IFormattable>interfaccia.</xref:System.IFormattable> </xref:System.Windows.Int32Rect>"
  syntax:
    content: string IFormattable.ToString (string format, IFormatProvider provider);
    parameters:
    - id: format
      type: System.String
      description: "Il formato da utilizzare."
    - id: provider
      type: System.IFormatProvider
      description: "Il provider da utilizzare per formattare il valore"
    return:
      type: System.String
      description: "Il valore dell&quot;istanza corrente nel formato specificato."
  overload: System.Windows.Int32Rect.System#IFormattable#ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.ToString
  id: ToString
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: ToString()
  nameWithType: Int32Rect.ToString()
  fullName: System.Windows.Int32Rect.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Crea una rappresentazione di stringa del <xref href=&quot;System.Windows.Int32Rect&quot;> </xref>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Stringa che contiene lo stesso <> </> *>, <> </> *>, <> </> *>, e <> </> *> i valori di questo <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> struttura."
  overload: System.Windows.Int32Rect.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: ToString(IFormatProvider)
  nameWithType: Int32Rect.ToString(IFormatProvider)
  fullName: System.Windows.Int32Rect.ToString(IFormatProvider)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Crea una rappresentazione di stringa del <xref href=&quot;System.Windows.Int32Rect&quot;> </xref> in base a fornito <xref:System.IFormatProvider>.</xref:System.IFormatProvider>"
  syntax:
    content: public string ToString (IFormatProvider provider);
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: "Il provider di formato da utilizzare. Se il provider è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, viene utilizzata la lingua corrente."
    return:
      type: System.String
      description: "Una rappresentazione di stringa dell&quot;istanza corrente di <xref href=&quot;System.Windows.Int32Rect&quot;> </xref>."
  overload: System.Windows.Int32Rect.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Width
  id: Width
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Width
  nameWithType: Int32Rect.Width
  fullName: System.Windows.Int32Rect.Width
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Ottiene o imposta la larghezza del rettangolo."
  syntax:
    content: public int Width { get; set; }
    return:
      type: System.Int32
      description: "La larghezza del rettangolo. Il valore predefinito è `0`."
  overload: System.Windows.Int32Rect.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.X
  id: X
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: X
  nameWithType: Int32Rect.X
  fullName: System.Windows.Int32Rect.X
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Ottiene o imposta la coordinata x dell&quot;angolo superiore sinistro del rettangolo."
  syntax:
    content: public int X { get; set; }
    return:
      type: System.Int32
      description: "La coordinata x dell&quot;angolo superiore sinistro del rettangolo. Il valore predefinito è `0`."
  overload: System.Windows.Int32Rect.X*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Int32Rect.Y
  id: Y
  parent: System.Windows.Int32Rect
  langs:
  - csharp
  name: Y
  nameWithType: Int32Rect.Y
  fullName: System.Windows.Int32Rect.Y
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Ottiene o imposta la coordinata y dell&quot;angolo superiore sinistro del rettangolo."
  syntax:
    content: public int Y { get; set; }
    return:
      type: System.Int32
      description: "La coordinata y dell&quot;angolo superiore sinistro del rettangolo. Il valore predefinito è `0`."
  overload: System.Windows.Int32Rect.Y*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Int32Rect.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Int32Rect(Int32,Int32,Int32,Int32)
  nameWithType: Int32Rect.Int32Rect(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Int32Rect.Int32Rect(Int32,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Int32Rect.Empty
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Empty
  nameWithType: Int32Rect.Empty
  fullName: System.Windows.Int32Rect.Empty
- uid: System.Windows.Int32Rect
  parent: System.Windows
  isExternal: false
  name: Int32Rect
  nameWithType: Int32Rect
  fullName: System.Windows.Int32Rect
- uid: System.Windows.Int32Rect.Equals(System.Object)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Equals(Object)
  nameWithType: Int32Rect.Equals(Object)
  fullName: System.Windows.Int32Rect.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Int32Rect.Equals(System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Equals(Int32Rect)
  nameWithType: Int32Rect.Equals(Int32Rect)
  fullName: System.Windows.Int32Rect.Equals(Int32Rect)
- uid: System.Windows.Int32Rect.Equals(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Equals(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.Equals(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.Equals(Int32Rect,Int32Rect)
- uid: System.Windows.Int32Rect.GetHashCode
  parent: System.Windows.Int32Rect
  isExternal: false
  name: GetHashCode()
  nameWithType: Int32Rect.GetHashCode()
  fullName: System.Windows.Int32Rect.GetHashCode()
- uid: System.Windows.Int32Rect.HasArea
  parent: System.Windows.Int32Rect
  isExternal: false
  name: HasArea
  nameWithType: Int32Rect.HasArea
  fullName: System.Windows.Int32Rect.HasArea
- uid: System.Windows.Int32Rect.Height
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Height
  nameWithType: Int32Rect.Height
  fullName: System.Windows.Int32Rect.Height
- uid: System.Windows.Int32Rect.IsEmpty
  parent: System.Windows.Int32Rect
  isExternal: false
  name: IsEmpty
  nameWithType: Int32Rect.IsEmpty
  fullName: System.Windows.Int32Rect.IsEmpty
- uid: System.Windows.Int32Rect.op_Equality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: op_Equality(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.op_Equality(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.op_Equality(Int32Rect,Int32Rect)
- uid: System.Windows.Int32Rect.op_Inequality(System.Windows.Int32Rect,System.Windows.Int32Rect)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: op_Inequality(Int32Rect,Int32Rect)
  nameWithType: Int32Rect.op_Inequality(Int32Rect,Int32Rect)
  fullName: System.Windows.Int32Rect.op_Inequality(Int32Rect,Int32Rect)
- uid: System.Windows.Int32Rect.Parse(System.String)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Parse(String)
  nameWithType: Int32Rect.Parse(String)
  fullName: System.Windows.Int32Rect.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: System.IFormattable.ToString(String,IFormatProvider)
  nameWithType: Int32Rect.System.IFormattable.ToString(String,IFormatProvider)
  fullName: System.Windows.Int32Rect.System.IFormattable.ToString(String,IFormatProvider)
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Windows.Int32Rect.ToString
  parent: System.Windows.Int32Rect
  isExternal: false
  name: ToString()
  nameWithType: Int32Rect.ToString()
  fullName: System.Windows.Int32Rect.ToString()
- uid: System.Windows.Int32Rect.ToString(System.IFormatProvider)
  parent: System.Windows.Int32Rect
  isExternal: false
  name: ToString(IFormatProvider)
  nameWithType: Int32Rect.ToString(IFormatProvider)
  fullName: System.Windows.Int32Rect.ToString(IFormatProvider)
- uid: System.Windows.Int32Rect.Width
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Width
  nameWithType: Int32Rect.Width
  fullName: System.Windows.Int32Rect.Width
- uid: System.Windows.Int32Rect.X
  parent: System.Windows.Int32Rect
  isExternal: false
  name: X
  nameWithType: Int32Rect.X
  fullName: System.Windows.Int32Rect.X
- uid: System.Windows.Int32Rect.Y
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Y
  nameWithType: Int32Rect.Y
  fullName: System.Windows.Int32Rect.Y
- uid: System.Windows.Int32Rect.#ctor*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Int32Rect
  nameWithType: Int32Rect.Int32Rect
- uid: System.Windows.Int32Rect.Empty*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Empty
  nameWithType: Int32Rect.Empty
- uid: System.Windows.Int32Rect.Equals*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Equals
  nameWithType: Int32Rect.Equals
- uid: System.Windows.Int32Rect.GetHashCode*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: GetHashCode
  nameWithType: Int32Rect.GetHashCode
- uid: System.Windows.Int32Rect.HasArea*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: HasArea
  nameWithType: Int32Rect.HasArea
- uid: System.Windows.Int32Rect.Height*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Height
  nameWithType: Int32Rect.Height
- uid: System.Windows.Int32Rect.IsEmpty*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: IsEmpty
  nameWithType: Int32Rect.IsEmpty
- uid: System.Windows.Int32Rect.op_Equality*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: op_Equality
  nameWithType: Int32Rect.op_Equality
- uid: System.Windows.Int32Rect.op_Inequality*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: op_Inequality
  nameWithType: Int32Rect.op_Inequality
- uid: System.Windows.Int32Rect.Parse*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Parse
  nameWithType: Int32Rect.Parse
- uid: System.Windows.Int32Rect.System#IFormattable#ToString*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: System.IFormattable.ToString
  nameWithType: Int32Rect.System.IFormattable.ToString
- uid: System.Windows.Int32Rect.ToString*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: ToString
  nameWithType: Int32Rect.ToString
- uid: System.Windows.Int32Rect.Width*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Width
  nameWithType: Int32Rect.Width
- uid: System.Windows.Int32Rect.X*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: X
  nameWithType: Int32Rect.X
- uid: System.Windows.Int32Rect.Y*
  parent: System.Windows.Int32Rect
  isExternal: false
  name: Y
  nameWithType: Int32Rect.Y
