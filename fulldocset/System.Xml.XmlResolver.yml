### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlResolver
  id: XmlResolver
  children:
  - System.Xml.XmlResolver.#ctor
  - System.Xml.XmlResolver.Credentials
  - System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
  type: Class
  summary: "Risolve risorse XML esterne denominate da un URI (Uniform Resource Identifier)."
  remarks: "Il tipo di XmlResolver viene utilizzato per risolvere risorse XML esterne, ad esempio entità, le definizioni di tipo di documento (DTD) o schemi. È inoltre utilizzato per processo di inclusione e importazione di elementi presenti in fogli di stile di foglio di stile XSL (Extensible Language) o schemi XML Schema definition language (XSD).       XmlResolver gestisce tutti gli aspetti della negoziazione della connessione alle risorse, tra cui la gestione delle credenziali di sicurezza, aprire la connessione all&quot;origine dati e la restituzione della risorsa in forma di un flusso o di altro tipo di oggetto. L&quot;oggetto che chiama XmlResolver ha il compito di interpretare il flusso.       Il <xref:System.Xml>spazio dei nomi include due implementazioni concrete della classe XmlResolver:- <xref:System.Xml.XmlUrlResolver>è l&quot;impostazione predefinita per tutte le classi di <xref:System.Xml>dello spazio dei nomi.</xref:System.Xml> </xref:System.Xml.XmlUrlResolver> </xref:System.Xml> Supporta il `file://` e `http://` protocolli e le richieste dalla <xref:System.Net.WebRequest?displayProperty=fullName>classe.</xref:System.Net.WebRequest?displayProperty=fullName> Per esempi di estensione della classe per migliorare le prestazioni, vedere il <xref:System.Xml.XmlUrlResolver>pagina di riferimento.</xref:System.Xml.XmlUrlResolver>      - <xref:System.Xml.XmlSecureResolver>consente di proteggere il wrapping dell&quot;oggetto di oggetto e limitando le risorse che può accedere a un altro oggetto XmlResolver.</xref:System.Xml.XmlSecureResolver> Ad esempio, il <xref:System.Xml.XmlSecureResolver>può impedire l&quot;accesso a specifici siti Internet o nelle zone.</xref:System.Xml.XmlSecureResolver>       È possibile creare e specificare il proprio resolver. Se non si specifica un resolver, il visualizzatore utilizza un valore predefinito <xref:System.Xml.XmlUrlResolver>senza credenziali utente.</xref:System.Xml.XmlUrlResolver>       Specificare XmlResolver da utilizzare impostando il <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName>proprietà e passando il <xref:System.Xml.XmlReaderSettings>dell&quot;oggetto per il <xref:System.Xml.XmlReader.Create%2A>metodo.</xref:System.Xml.XmlReader.Create%2A> </xref:System.Xml.XmlReaderSettings> </xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName>       Se la risorsa viene archiviata in un sistema che richiede l&quot;autenticazione, utilizzare il <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName>proprietà per specificare le credenziali necessarie.</xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName>      ## Fornire le credenziali di autenticazione il file che contiene i dati XML da leggere potrebbe contenere un criterio di accesso con restrizioni. Se è necessaria l&quot;autenticazione per accedere a una risorsa di rete, utilizzare il <xref:System.Xml.XmlResolver.Credentials%2A>proprietà per specificare le credenziali necessarie.</xref:System.Xml.XmlResolver.Credentials%2A> Se il <xref:System.Xml.XmlResolver.Credentials%2A>non è impostata, le credenziali vengono impostate su `null`.</xref:System.Xml.XmlResolver.Credentials%2A>       Si supponga, ad esempio, che sono necessarie le credenziali quando si richiedono dati dal web per scopi di autenticazione. A meno che la directory virtuale web consente l&quot;accesso anonimo, è necessario impostare il <xref:System.Xml.XmlResolver.Credentials%2A>proprietà per fornire le credenziali.</xref:System.Xml.XmlResolver.Credentials%2A> Nell&quot;esempio seguente viene creato un <xref:System.Xml.XmlReader>oggetto che utilizza un <xref:System.Xml.XmlUrlResolver>con le credenziali predefinite per accedere al sito http://localhost/bookstore/inventory.xml.</xref:System.Xml.XmlUrlResolver> </xref:System.Xml.XmlReader>       [!code-cpp[XmlReaderSettings.cctor#2](~/add/codesnippet/cpp/t-system.xml.xmlresolver_1.cpp)][!code-cs[XmlReaderSettings.cctor#2](~/add/codesnippet/csharp/t-system.xml.xmlresolver_1.cs)][!code-vb[XmlReaderSettings.cctor#2](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_1.vb) ] è possibile specificare credenziali diverse per diversi URI e aggiungerli a una cache.     Queste credenziali vengono utilizzate per verificare l&quot;autenticazione dei diversi URI, indipendentemente dall&quot;origine del codice XML. Nell&quot;esempio seguente viene illustrato come aggiungere le credenziali a una cache.       [!code-vb[XslCompiledTransform.Load#11](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_2.vb)][!code-cs[XslCompiledTransform.Load#11](~/add/codesnippet/csharp/t-system.xml.xmlresolver_2.cs) ] # # considerazioni sulla sicurezza tenere presente quanto segue quando si utilizza la classe XmlResolver.        -XmlResolver oggetti possono contenere informazioni sensibili quali le credenziali utente. È necessario prestare attenzione quando la memorizzazione nella cache XmlResolver oggetti e non passare l&quot;oggetto XmlResolver a un componente non attendibile.      -Se si progetta una proprietà di classe che utilizza la classe XmlResolver, la proprietà deve essere definita come una proprietà di sola scrittura. La proprietà può essere utilizzata per specificare XmlResolver da utilizzare, ma non può essere utilizzato per restituire un oggetto XmlResolver.      -Se l&quot;applicazione accetta oggetti XmlResolver da codice non attendibile, non è possibile presumere che l&quot;URI passato il <xref:System.Xml.XmlResolver.GetEntity%2A>sarà uguale a quello restituito dal metodo di <xref:System.Xml.XmlResolver.ResolveUri%2A>metodo.</xref:System.Xml.XmlResolver.ResolveUri%2A> </xref:System.Xml.XmlResolver.GetEntity%2A> Le classi derivate dalla classe XmlResolver possono eseguire l&quot;override di <xref:System.Xml.XmlResolver.GetEntity%2A>metodo e restituire dati diversi da quelli contenuti nell&quot;URI originale.</xref:System.Xml.XmlResolver.GetEntity%2A>      -L&quot;applicazione consente di ridurre memoria attacchi denial of service per il <xref:System.Xml.XmlResolver.GetEntity%2A>metodo implementando un <xref:System.Runtime.InteropServices.ComTypes.IStream>che limita il numero di byte letti.</xref:System.Runtime.InteropServices.ComTypes.IStream> </xref:System.Xml.XmlResolver.GetEntity%2A> Questo aiuta a proteggersi da situazioni in cui codice dannoso tenta di passare un flusso di byte da infinito di <xref:System.Xml.XmlResolver.GetEntity%2A>metodo.</xref:System.Xml.XmlResolver.GetEntity%2A>"
  example:
  - "The following example creates an <xref:System.Xml.XmlUrlResolver> with default credentials. A <xref:System.Xml.XmlReader> is used to read and display the resulting data stream.  \n  \n [!code-cs[XmlResolver_ex#1](~/add/codesnippet/csharp/t-system.xml.xmlresolver_3.cs)]\n [!code-vb[XmlResolver_ex#1](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_3.vb)]"
  syntax:
    content: public abstract class XmlResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.#ctor
  id: '#ctor'
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: XmlResolver()
  nameWithType: XmlResolver.XmlResolver()
  fullName: System.Xml.XmlResolver.XmlResolver()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> classe."
  remarks: "Questo costruttore viene chiamato da costruttori di classi derivate per inizializzare lo stato in questo tipo."
  syntax:
    content: protected XmlResolver ();
    parameters: []
  overload: System.Xml.XmlResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.Credentials
  id: Credentials
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlResolver.Credentials
  fullName: System.Xml.XmlResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Quando sottoposto a override in una classe derivata, imposta le credenziali utilizzate per autenticare le richieste web."
  remarks: "Se la directory virtuale non richiede l&quot;autenticazione, questa proprietà non deve essere impostato. In caso contrario, è necessario specificare le credenziali dell&quot;utente.       Il codice c# seguente imposta le credenziali nel <xref:System.Xml.XmlResolver>oggetto.</xref:System.Xml.XmlResolver>      ```   NetworkCredential nc = new NetWorkCredential(UserName,SecurelyStoredPassword,Domain);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = nc;   ```È possibile associare credenziali differenti a diversi URI e aggiungerli a una cache. È quindi possibile utilizzare le credenziali per verificare l&quot;autenticazione per diversi URI indipendentemente dall&quot;origine del codice XML.      ```   NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);    CredentialCache myCache = new CredentialCache();    myCache.Add(new Uri(&quot;http://www.contoso.com/&quot;), &quot;Basic&quot;, myCred);    myCache.Add(new Uri(&quot;http://app.contoso.com/&quot;), &quot;Basic&quot;, myCred);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = myCache;   ```"
  example:
  - See <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName> for an example that uses this property.
  syntax:
    content: public virtual System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "Le credenziali da utilizzare per autenticare le richieste web. Se questa proprietà non è impostata, il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, vale a dire il <xref uid=&quot;langword_csharp_XmlResolver&quot; name=&quot;XmlResolver&quot; href=&quot;&quot;> </xref> non ha credenziali utente."
  overload: System.Xml.XmlResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Quando sottoposto a override in una classe derivata, esegue il mapping di un URI a un oggetto che contiene la risorsa effettiva."
  remarks: "Questo metodo viene utilizzato quando il chiamante desidera eseguire il mapping di un URI specificato nell&quot;oggetto che contiene la risorsa effettiva che rappresenta l&quot;URI. Il tipo di oggetto restituito è negoziabile; Tuttavia, l&quot;implementazione deve supportare sempre <xref:System.IO.Stream?displayProperty=fullName>.</xref:System.IO.Stream?displayProperty=fullName>       Per la versione asincrona del metodo, vedere <xref:System.Xml.XmlResolver.GetEntityAsync%2A>.</xref:System.Xml.XmlResolver.GetEntityAsync%2A>      > [!IMPORTANT] > L&quot;applicazione può ridurre i memoria attacchi denial of service al metodo GetEntity implementando un <xref:System.Runtime.InteropServices.ComTypes.IStream>che limita il numero di byte letti.</xref:System.Runtime.InteropServices.ComTypes.IStream> Questo aiuta a proteggersi da situazioni in cui codice dannoso tenta di passare un flusso di byte infinito per il metodo GetEntity."
  example:
  - See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> for an example using this method.
  syntax:
    content: public abstract object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "URI restituito da <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "Attualmente non utilizzato."
    - id: ofObjectToReturn
      type: System.Type
      description: "Il tipo di oggetto da restituire. La versione corrente restituisce solo oggetti System.IO. Stream."
    return:
      type: System.Object
      description: "Un oggetto flusso o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se viene specificato un tipo diverso dal flusso."
  overload: System.Xml.XmlResolver.GetEntity*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>ofObjectToReturn</code>non è un <xref uid=&quot;langword_csharp_Stream&quot; name=&quot;Stream&quot; href=&quot;&quot;> </xref> tipo."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "L&quot;URI specificato non è un URI assoluto."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Si verifica un errore di runtime (ad esempio, una connessione server interrotto)."
  platform:
  - net462
- uid: System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Esegue il mapping in modo asincrono un URI a un oggetto che contiene la risorsa effettiva."
  remarks: "Si tratta della versione asincrona di <xref:System.Xml.XmlResolver.GetEntity%2A>, con la stessa funzionalità.</xref:System.Xml.XmlResolver.GetEntity%2A> Per utilizzare questo metodo, è necessario impostare il <xref:System.Xml.XmlReaderSettings.Async%2A>flag `true`.</xref:System.Xml.XmlReaderSettings.Async%2A>"
  syntax:
    content: public virtual System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "URI restituito da <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "Attualmente non utilizzato."
    - id: ofObjectToReturn
      type: System.Type
      description: "Il tipo di oggetto da restituire. La versione corrente restituisce soltanto <xref:System.IO.Stream>oggetti.</xref:System.IO.Stream>"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Un oggetto flusso o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se viene specificato un tipo diverso dal flusso."
  overload: System.Xml.XmlResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Quando sottoposto a override in una classe derivata, risolve l&quot;URI assoluto dagli URI di base e relativi."
  remarks: "L&quot;URI assoluto può essere utilizzato come URI di base per le successive richieste per le entità che riguardano questo URI."
  example:
  - See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> for an example that uses this method.
  syntax:
    content: public virtual Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "L&quot;URI di base usato per risolvere l&quot;URI relativo."
    - id: relativeUri
      type: System.String
      description: "URI da risolvere. L&quot;URI può essere assoluto o relativo. Se assoluto, questo valore sostituisce il `baseUri` valore. Se relativo, viene combinato con il `baseUri` per ottenere un URI assoluto."
    return:
      type: System.Uri
      description: "L&quot;URI assoluto o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non è possibile risolta l&quot;URI relativo."
  overload: System.Xml.XmlResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relativeUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  id: SupportsType(System.Uri,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: SupportsType(Uri,Type)
  nameWithType: XmlResolver.SupportsType(Uri,Type)
  fullName: System.Xml.XmlResolver.SupportsType(Uri,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Consente il resolver di tipi restituiti diversi da &lt;xref:System.IO.Stream?displayProperty=fullName&gt;."
  syntax:
    content: public virtual bool SupportsType (Uri absoluteUri, Type type);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "L&quot;URI."
    - id: type
      type: System.Type
      description: "Tipo da restituire."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <code> type </code> è supportato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlResolver.SupportsType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.XmlResolver.#ctor
  parent: System.Xml.XmlResolver
  isExternal: false
  name: XmlResolver()
  nameWithType: XmlResolver.XmlResolver()
  fullName: System.Xml.XmlResolver.XmlResolver()
- uid: System.Xml.XmlResolver.Credentials
  parent: System.Xml.XmlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlResolver.Credentials
  fullName: System.Xml.XmlResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntity(Uri,String,Type)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlResolver.ResolveUri(Uri,String)
- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: SupportsType(Uri,Type)
  nameWithType: XmlResolver.SupportsType(Uri,Type)
  fullName: System.Xml.XmlResolver.SupportsType(Uri,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlResolver.#ctor*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver.XmlResolver
- uid: System.Xml.XmlResolver.Credentials*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlResolver.Credentials
- uid: System.Xml.XmlResolver.GetEntity*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlResolver.GetEntity
- uid: System.Xml.XmlResolver.GetEntityAsync*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlResolver.GetEntityAsync
- uid: System.Xml.XmlResolver.ResolveUri*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlResolver.ResolveUri
- uid: System.Xml.XmlResolver.SupportsType*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: SupportsType
  nameWithType: XmlResolver.SupportsType
