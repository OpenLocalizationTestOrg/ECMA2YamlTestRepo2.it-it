### YamlMime:ManagedReference
items:
- uid: System.Data.EnumerableRowCollection
  id: EnumerableRowCollection
  children:
  - System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: EnumerableRowCollection
  nameWithType: EnumerableRowCollection
  fullName: System.Data.EnumerableRowCollection
  type: Class
  summary: "Rappresenta una raccolta di <xref href=&quot;System.Data.DataRow&quot;> </xref> gli oggetti restituiti da una [!INCLUDE[linq_dataset](~/add/includes/linq-dataset-md.md)] query. Questa API supporta l&quot;infrastruttura .NET Framework e non deve essere utilizzato direttamente dal codice."
  remarks: "EnumerableRowCollection fornisce un punto di ingresso in modo che l&quot;operazione di cast può essere intercettata all&quot;interno di un metodo di estensione. La classe generica derivata <xref:System.Data.EnumerableRowCollection%601>viene effettivamente utilizzato da .NET Framework per contenere i risultati di una query.</xref:System.Data.EnumerableRowCollection%601>       Questa classe non può essere creata un&quot;istanza."
  syntax:
    content: 'public abstract class EnumerableRowCollection : System.Collections.IEnumerable'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Data.EnumerableRowCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: EnumerableRowCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Data.EnumerableRowCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: "Restituisce un enumeratore per la raccolta di <xref href=&quot;System.Data.DataRow&quot;> </xref> oggetti. Questa API supporta l&quot;infrastruttura .NET Framework e non deve essere utilizzato direttamente dal codice."
  remarks: "L&quot;implementazione predefinita restituisce sempre `null`."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Un <xref:System.Collections.IEnumerator>che può essere utilizzato per scorrere la raccolta di <xref href=&quot;System.Data.DataRow&quot;> </xref> oggetti.</xref:System.Collections.IEnumerator>"
  overload: System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Data.EnumerableRowCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: EnumerableRowCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Data.EnumerableRowCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Data.EnumerableRowCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: EnumerableRowCollection.System.Collections.IEnumerable.GetEnumerator
