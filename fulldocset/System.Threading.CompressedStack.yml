### YamlMime:ManagedReference
items:
- uid: System.Threading.CompressedStack
  id: CompressedStack
  children:
  - System.Threading.CompressedStack.Capture
  - System.Threading.CompressedStack.CreateCopy
  - System.Threading.CompressedStack.GetCompressedStack
  - System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)
  langs:
  - csharp
  name: CompressedStack
  nameWithType: CompressedStack
  fullName: System.Threading.CompressedStack
  type: Class
  summary: "Fornisce metodi per l&quot;impostazione e acquisire lo stack compresso sul thread corrente. Questa classe non può essere ereditata."
  remarks: "Lo stack compresso è una rappresentazione compatta tutte le informazioni accesso di codice sicurezza nello stack di chiamate, ad esempio <xref:System.Security.CodeAccessPermission.Deny%2A>e <xref:System.Security.CodeAccessPermission.Assert%2A>Azioni.</xref:System.Security.CodeAccessPermission.Assert%2A> </xref:System.Security.CodeAccessPermission.Deny%2A> Ad esempio, se un <xref:System.Security.CodeAccessPermission.Deny%2A>action è due stack frame in alto rispetto al frame corrente e non sono presenti altri codice accesso annotazioni di sicurezza tra tale posizione e il frame corrente, lo stack compresso registrerà solo tali informazioni, senza la necessità di serializzare l&quot;intero stack di chiamate.</xref:System.Security.CodeAccessPermission.Deny%2A>       Il CompressedStackclass utilizzato internamente dalla <xref:System.Security.SecurityContext>classe.</xref:System.Security.SecurityContext> Ad esempio, il <xref:System.Security.SecurityContext.Capture%2A?displayProperty=fullName>metodo acquisisce lo stack compresso per lo stack di chiamate corrente, insieme alle informazioni di rappresentazione e le impostazioni cultura.</xref:System.Security.SecurityContext.Capture%2A?displayProperty=fullName> La <xref:System.Security.SecurityContext>classe viene utilizzata a sua volta dalla <xref:System.Threading.ExecutionContext>classe per il flusso del contesto tra i thread, ad esempio durante la pianificazione delle attività del pool di thread.</xref:System.Threading.ExecutionContext> </xref:System.Security.SecurityContext>       Questa classe non viene utilizzata nella programmazione di applicazioni comuni."
  syntax:
    content: 'public sealed class CompressedStack : System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.CompressedStack.Capture
  id: Capture
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: Capture()
  nameWithType: CompressedStack.Capture()
  fullName: System.Threading.CompressedStack.Capture()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Acquisisce lo stack compresso dal thread corrente."
  remarks: "Acquisisce tutte le codice accesso sicurezza informazioni nello stack di chiamate, ad esempio <xref:System.Security.CodeAccessPermission.Deny%2A>e <xref:System.Security.CodeAccessPermission.Assert%2A>Azioni, in un formato compresso.</xref:System.Security.CodeAccessPermission.Assert%2A> </xref:System.Security.CodeAccessPermission.Deny%2A> Ad esempio, se un <xref:System.Security.CodeAccessPermission.Deny%2A>action è due stack frame in alto rispetto al frame corrente e non sono presenti altri codice accesso annotazioni di sicurezza tra tale posizione e il frame corrente, lo stack compresso registrerà solo tali informazioni, senza la necessità di serializzare l&quot;intero stack di chiamate.</xref:System.Security.CodeAccessPermission.Deny%2A>       Lo stack compresso acquisito può essere applicato a un altro thread."
  syntax:
    content: public static System.Threading.CompressedStack Capture ();
    parameters: []
    return:
      type: System.Threading.CompressedStack
      description: "A <xref href=&quot;System.Threading.CompressedStack&quot;></xref> object."
  overload: System.Threading.CompressedStack.Capture*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.CompressedStack.CreateCopy
  id: CreateCopy
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: CreateCopy()
  nameWithType: CompressedStack.CreateCopy()
  fullName: System.Threading.CompressedStack.CreateCopy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Crea una copia dello stack compresso corrente."
  remarks: "Questo metodo è utile per la creazione di una copia dello stack corrente compresso da applicare a un altro thread."
  syntax:
    content: public System.Threading.CompressedStack CreateCopy ();
    parameters: []
    return:
      type: System.Threading.CompressedStack
      description: "Oggetto <xref href=&quot;System.Threading.CompressedStack&quot;> </xref> oggetto che rappresenta lo stack compresso corrente."
  overload: System.Threading.CompressedStack.CreateCopy*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.CompressedStack.GetCompressedStack
  id: GetCompressedStack
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: GetCompressedStack()
  nameWithType: CompressedStack.GetCompressedStack()
  fullName: System.Threading.CompressedStack.GetCompressedStack()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Ottiene lo stack compresso per il thread corrente."
  remarks: "Se la sicurezza è attivata, viene restituito lo stack compresso corrente. Se la sicurezza è disabilitata, GetCompressedStack restituisce un oggetto vuoto <xref:System.Threading.CompressedStack>oggetto.</xref:System.Threading.CompressedStack>      > [!NOTE] > Questo metodo utilizza <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName>per evitare che venga chiamato da codice non attendibile, è necessario solo il chiamante immediato abbia <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName>autorizzazione.</xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName> </xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> Per le principali limitazioni sull&quot;utilizzo di `LinkDemand` membro, vedere [Demand e. LinkDemand](http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5).      > [!NOTE] > Questo membro esegue anche una richiesta di collegamento per la chiave pubblica ECMA, non è una chiave di crittografia valida ma una pseudo-chiave. In .NET Framework la richiesta di collegamento per la pseudo-chiave ECMA viene automaticamente convertita in una richiesta di collegamento per la chiave pubblica di Microsoft. L&quot;eccezione di sicurezza è basato sulla chiave pubblica Microsoft, non la pseudo-chiave ECMA."
  syntax:
    content: public static System.Threading.CompressedStack GetCompressedStack ();
    parameters: []
    return:
      type: System.Threading.CompressedStack
      description: "Oggetto <xref href=&quot;System.Threading.CompressedStack&quot;> </xref> per il thread corrente."
  overload: System.Threading.CompressedStack.GetCompressedStack*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Un chiamante nella catena di chiamate non dispone dell&quot;autorizzazione di accesso di codice non gestito.       - oppure - la richiesta di <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref> non riuscita."
  platform:
  - net462
- uid: System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: CompressedStack.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Threading.CompressedStack.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Imposta il <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> oggetto con le informazioni logiche sul contesto necessarie per ricreare un&quot;istanza del contesto di esecuzione."
  remarks: "GetObjectData imposta un <xref:System.Runtime.Serialization.SerializationInfo>con la chiamata logica informazioni sul contesto.</xref:System.Runtime.Serialization.SerializationInfo> Durante la deserializzazione, l&quot;oggetto di contesto di esecuzione viene ricostituita dal <xref:System.Runtime.Serialization.SerializationInfo>trasmesso sul flusso.</xref:System.Runtime.Serialization.SerializationInfo>       Per ulteriori informazioni, vedere <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Il <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> oggetto da popolare con le informazioni di serializzazione."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Il <xref:System.Runtime.Serialization.StreamingContext>struttura che rappresenta il contesto di destinazione della serializzazione.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Threading.CompressedStack.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)
  id: Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: Run(CompressedStack,ContextCallback,Object)
  nameWithType: CompressedStack.Run(CompressedStack,ContextCallback,Object)
  fullName: System.Threading.CompressedStack.Run(CompressedStack,ContextCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Esegue un metodo nello stack compresso specificato sul thread corrente."
  remarks: "Lo stack compresso viene restituito lo stato precedente al completamento del metodo."
  syntax:
    content: public static void Run (System.Threading.CompressedStack compressedStack, System.Threading.ContextCallback callback, object state);
    parameters:
    - id: compressedStack
      type: System.Threading.CompressedStack
      description: "The <xref href=&quot;System.Threading.CompressedStack&quot;></xref> to set."
    - id: callback
      type: System.Threading.ContextCallback
      description: "Oggetto <xref:System.Threading.ContextCallback>che rappresenta il metodo da eseguire nel contesto di sicurezza specificato.</xref:System.Threading.ContextCallback>"
    - id: state
      type: System.Object
      description: "L&quot;oggetto deve essere passato al metodo di callback."
  overload: System.Threading.CompressedStack.Run*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>compressedStack</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Threading.CompressedStack.Capture
  parent: System.Threading.CompressedStack
  isExternal: false
  name: Capture()
  nameWithType: CompressedStack.Capture()
  fullName: System.Threading.CompressedStack.Capture()
- uid: System.Threading.CompressedStack
  parent: System.Threading
  isExternal: false
  name: CompressedStack
  nameWithType: CompressedStack
  fullName: System.Threading.CompressedStack
- uid: System.Threading.CompressedStack.CreateCopy
  parent: System.Threading.CompressedStack
  isExternal: false
  name: CreateCopy()
  nameWithType: CompressedStack.CreateCopy()
  fullName: System.Threading.CompressedStack.CreateCopy()
- uid: System.Threading.CompressedStack.GetCompressedStack
  parent: System.Threading.CompressedStack
  isExternal: false
  name: GetCompressedStack()
  nameWithType: CompressedStack.GetCompressedStack()
  fullName: System.Threading.CompressedStack.GetCompressedStack()
- uid: System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Threading.CompressedStack
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: CompressedStack.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Threading.CompressedStack.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)
  parent: System.Threading.CompressedStack
  isExternal: false
  name: Run(CompressedStack,ContextCallback,Object)
  nameWithType: CompressedStack.Run(CompressedStack,ContextCallback,Object)
  fullName: System.Threading.CompressedStack.Run(CompressedStack,ContextCallback,Object)
- uid: System.Threading.ContextCallback
  parent: System.Threading
  isExternal: true
  name: ContextCallback
  nameWithType: ContextCallback
  fullName: System.Threading.ContextCallback
- uid: System.Threading.CompressedStack.Capture*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: Capture
  nameWithType: CompressedStack.Capture
- uid: System.Threading.CompressedStack.CreateCopy*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: CreateCopy
  nameWithType: CompressedStack.CreateCopy
- uid: System.Threading.CompressedStack.GetCompressedStack*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: GetCompressedStack
  nameWithType: CompressedStack.GetCompressedStack
- uid: System.Threading.CompressedStack.GetObjectData*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: GetObjectData
  nameWithType: CompressedStack.GetObjectData
- uid: System.Threading.CompressedStack.Run*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: Run
  nameWithType: CompressedStack.Run
