### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerRequest
  id: HttpListenerRequest
  children:
  - System.Net.HttpListenerRequest.AcceptTypes
  - System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)
  - System.Net.HttpListenerRequest.ClientCertificateError
  - System.Net.HttpListenerRequest.ContentEncoding
  - System.Net.HttpListenerRequest.ContentLength64
  - System.Net.HttpListenerRequest.ContentType
  - System.Net.HttpListenerRequest.Cookies
  - System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)
  - System.Net.HttpListenerRequest.GetClientCertificate
  - System.Net.HttpListenerRequest.GetClientCertificateAsync
  - System.Net.HttpListenerRequest.HasEntityBody
  - System.Net.HttpListenerRequest.Headers
  - System.Net.HttpListenerRequest.HttpMethod
  - System.Net.HttpListenerRequest.InputStream
  - System.Net.HttpListenerRequest.IsAuthenticated
  - System.Net.HttpListenerRequest.IsLocal
  - System.Net.HttpListenerRequest.IsSecureConnection
  - System.Net.HttpListenerRequest.IsWebSocketRequest
  - System.Net.HttpListenerRequest.KeepAlive
  - System.Net.HttpListenerRequest.LocalEndPoint
  - System.Net.HttpListenerRequest.ProtocolVersion
  - System.Net.HttpListenerRequest.QueryString
  - System.Net.HttpListenerRequest.RawUrl
  - System.Net.HttpListenerRequest.RemoteEndPoint
  - System.Net.HttpListenerRequest.RequestTraceIdentifier
  - System.Net.HttpListenerRequest.ServiceName
  - System.Net.HttpListenerRequest.TransportContext
  - System.Net.HttpListenerRequest.Url
  - System.Net.HttpListenerRequest.UrlReferrer
  - System.Net.HttpListenerRequest.UserAgent
  - System.Net.HttpListenerRequest.UserHostAddress
  - System.Net.HttpListenerRequest.UserHostName
  - System.Net.HttpListenerRequest.UserLanguages
  langs:
  - csharp
  name: HttpListenerRequest
  nameWithType: HttpListenerRequest
  fullName: System.Net.HttpListenerRequest
  type: Class
  summary: "Descrive una richiesta HTTP in ingresso a un <xref href=&quot;System.Net.HttpListener&quot;> </xref> oggetto. Questa classe non può essere ereditata."
  remarks: "Quando un client effettua una richiesta a un URI (Uniform Resource Identifier) gestiti da un <xref:System.Net.HttpListener>oggetto, il <xref:System.Net.HttpListener>fornisce un <xref:System.Net.HttpListenerContext>oggetto che contiene informazioni sul mittente, la richiesta e risposta che viene inviata al client.</xref:System.Net.HttpListenerContext> </xref:System.Net.HttpListener> </xref:System.Net.HttpListener> Il <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName>proprietà restituisce l&quot;oggetto HttpListenerRequest che descrive la richiesta.</xref:System.Net.HttpListenerContext.Request%2A?displayProperty=fullName>       L&quot;oggetto HttpListenerRequest contiene informazioni sulla richiesta, ad esempio la richiesta <xref:System.Net.HttpListenerRequest.HttpMethod%2A>stringa <xref:System.Net.HttpListenerRequest.UserAgent%2A>stringa e i dati del corpo della richiesta (vedere la <xref:System.Net.HttpListenerRequest.InputStream%2A>proprietà).</xref:System.Net.HttpListenerRequest.InputStream%2A> </xref:System.Net.HttpListenerRequest.UserAgent%2A> </xref:System.Net.HttpListenerRequest.HttpMethod%2A>       Per rispondere alla richiesta, è necessario ottenere la risposta associata tramite il <xref:System.Net.HttpListenerContext.Response%2A>proprietà.</xref:System.Net.HttpListenerContext.Response%2A>"
  example:
  - "The following code example demonstrates how to receive and respond to a HttpListenerRequest.  \n  \n [!code-cs[Net_Listener_Basic#2](~/add/codesnippet/csharp/t-system.net.httplistene_3_1.cs)]"
  syntax:
    content: public sealed class HttpListenerRequest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.AcceptTypes
  id: AcceptTypes
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: AcceptTypes
  nameWithType: HttpListenerRequest.AcceptTypes
  fullName: System.Net.HttpListenerRequest.AcceptTypes
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene i tipi MIME accettati dal client."
  remarks: "Il `Accept` intestazione è una stringa di nomi di tipi MIME Multipurpose Internet Mail Extensions () separati da spazi (ad esempio, `image/jpeg`), che indicano i tipi MIME che il client è pronto ad accettare ed elaborare in una risposta. Il `*/*` indica che il client accetta qualsiasi tipo MIME. Per una descrizione dettagliata del `Accept` intestazione, vedere RFC 2616, disponibile all&quot;indirizzo [http://www.rfc-editor.org](http://www.rfc-editor.org/).       Per un elenco completo di intestazioni di richiesta, vedere il <xref:System.Net.HttpRequestHeader>enumerazione.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_37_1.cs)]"
  syntax:
    content: public string[] AcceptTypes { get; }
    return:
      type: System.String[]
      description: "Oggetto <xref:System.String>matrice che contiene i nomi del tipo specificati con la richiesta <xref uid=&quot;langword_csharp_Accept&quot; name=&quot;Accept&quot; href=&quot;&quot;> </xref> intestazione o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se la richiesta del client non include un <xref uid=&quot;langword_csharp_Accept&quot; name=&quot;Accept&quot; href=&quot;&quot;> </xref> intestazione.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.AcceptTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)
  id: BeginGetClientCertificate(System.AsyncCallback,System.Object)
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: BeginGetClientCertificate(AsyncCallback,Object)
  nameWithType: HttpListenerRequest.BeginGetClientCertificate(AsyncCallback,Object)
  fullName: System.Net.HttpListenerRequest.BeginGetClientCertificate(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Avvia una richiesta asincrona per il certificato del client x.&509; v.&3;."
  syntax:
    content: public IAsyncResult BeginGetClientCertificate (AsyncCallback requestCallback, object state);
    parameters:
    - id: requestCallback
      type: System.AsyncCallback
      description: "Un <xref:System.AsyncCallback>delegato che fa riferimento al metodo da richiamare quando l&quot;operazione è stata completata.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Un oggetto definito dall&quot;utente che contiene informazioni sull&quot;operazione. Questo oggetto viene passato al delegato di callback al completamento dell&quot;operazione."
    return:
      type: System.IAsyncResult
      description: "Un <xref:System.IAsyncResult>che indica lo stato dell&quot;operazione.</xref:System.IAsyncResult>"
  overload: System.Net.HttpListenerRequest.BeginGetClientCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ClientCertificateError
  id: ClientCertificateError
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ClientCertificateError
  nameWithType: HttpListenerRequest.ClientCertificateError
  fullName: System.Net.HttpListenerRequest.ClientCertificateError
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene un codice di errore che identifica un problema con il <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate&quot;> </xref> fornito dal client."
  remarks: "Questa proprietà contiene un codice di errore Windows restituito dal Secure Channel (Schannel) Provider interfaccia SSPI (Security Support), viene utilizzato per convalidare il certificato. Per ulteriori informazioni sul supporto SSPI per Schannel, vedere &quot;Creazione di una connessione protetta tramite Schannel&quot; nella documentazione di protezione [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  example:
  - "The following code example checks this property to determine whether the request includes a valid client certificate.  \n  \n [!code-vb[NCLListener#3](~/add/codesnippet/visualbasic/p-system.net.httplistene_33_1.vb)]\n [!code-cs[NCLListener#3](~/add/codesnippet/csharp/p-system.net.httplistene_33_1.cs)]"
  syntax:
    content: public int ClientCertificateError { get; }
    return:
      type: System.Int32
      description: "Un <xref:System.Int32>valore che contiene un codice di errore di Windows.</xref:System.Int32>"
  overload: System.Net.HttpListenerRequest.ClientCertificateError*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il certificato client non è stato inizializzato ancora da una chiamata al <> </> *> o <> </> *> metodi - oppure - l&quot;operazione è ancora in corso."
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ContentEncoding
  id: ContentEncoding
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ContentEncoding
  nameWithType: HttpListenerRequest.ContentEncoding
  fullName: System.Net.HttpListenerRequest.ContentEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene la codifica del contenuto che può essere utilizzato con i dati inviati con la richiesta"
  remarks: "Un <xref:System.Text.Encoding>oggetto può essere utilizzato per convertire le sequenze di byte in caratteri in sequenze di byte e il set di caratteri (codici).</xref:System.Text.Encoding> Questa proprietà Usa il set di caratteri, compreso il `Content-Type` intestazione per determinare la codifica. Se tali informazioni non sono disponibile, questa proprietà restituisce <xref:System.Text.Encoding.Default%2A?displayProperty=fullName>.</xref:System.Text.Encoding.Default%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates using the ContentEncoding property.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_40_1.cs)]"
  syntax:
    content: public System.Text.Encoding ContentEncoding { get; }
    return:
      type: System.Text.Encoding
      description: "Un <xref:System.Text.Encoding>adatto per l&quot;uso con i dati nell&quot;oggetto di <xref:System.Net.HttpListenerRequest.InputStream*>proprietà.</xref:System.Net.HttpListenerRequest.InputStream*> </xref:System.Text.Encoding>"
  overload: System.Net.HttpListenerRequest.ContentEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ContentLength64
  id: ContentLength64
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ContentLength64
  nameWithType: HttpListenerRequest.ContentLength64
  fullName: System.Net.HttpListenerRequest.ContentLength64
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene la lunghezza dei dati del corpo della richiesta."
  remarks: "Il `Content-Length` intestazione esprime la lunghezza, espressa in byte, dei dati del corpo che accompagna la richiesta.       Per un elenco completo di intestazioni di richiesta, vedere il <xref:System.Net.HttpRequestHeader>enumerazione.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example uses the ContentLength64 property while processing body data.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_8_1.cs)]"
  syntax:
    content: public long ContentLength64 { get; }
    return:
      type: System.Int64
      description: "Il valore della richiesta <xref uid=&quot;langword_csharp_Content-Length&quot; name=&quot;Content-Length&quot; href=&quot;&quot;> </xref> intestazione. Questo valore è -1 se la lunghezza del contenuto non è noto."
  overload: System.Net.HttpListenerRequest.ContentLength64*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ContentType
  id: ContentType
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpListenerRequest.ContentType
  fullName: System.Net.HttpListenerRequest.ContentType
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene il tipo MIME dei dati del corpo della richiesta."
  remarks: "Se un client include i dati del corpo in una richiesta, dichiara il tipo MIME Multipurpose Internet Mail Extensions () dei dati del corpo nel `Content-Type` intestazione. Ad esempio, il tipo MIME predefinito dei dati restituiti da un modulo Web mediante il `POST` metodo `application/x-www-form-urlencoded`.       Per un elenco completo di intestazioni di richiesta, vedere il <xref:System.Net.HttpRequestHeader>enumerazione e RFC 2616, disponibile all&quot;indirizzo [http://www.rfc-editor.org](http://www.rfc-editor.org/).</xref:System.Net.HttpRequestHeader>       ContentType è null, quando è presente alcun `Content-Type` intestazione nella richiesta."
  example:
  - "The following code example demonstrates how to use this property.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_12_1.cs)]"
  syntax:
    content: public string ContentType { get; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>che contiene il testo della richiesta <xref uid=&quot;langword_csharp_Content-Type&quot; name=&quot;Content-Type&quot; href=&quot;&quot;> </xref> intestazione.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.Cookies
  id: Cookies
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpListenerRequest.Cookies
  fullName: System.Net.HttpListenerRequest.Cookies
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene i cookie inviati con la richiesta."
  remarks: "Un cookie è dati di testo Nome/valore da un server Web che viene archiviato nel computer locale (client)."
  example:
  - "The following code example displays the values of cookies sent with the request.  \n  \n [!code-cs[Net_Listener_Basic#18](~/add/codesnippet/csharp/p-system.net.httplistene_7_1.cs)]"
  syntax:
    content: public System.Net.CookieCollection Cookies { get; }
    return:
      type: System.Net.CookieCollection
      description: "Oggetto <xref:System.Net.CookieCollection>contenente i cookie associati alla richiesta.</xref:System.Net.CookieCollection> Questa proprietà restituisce una raccolta vuota se la richiesta non contiene i cookie."
  overload: System.Net.HttpListenerRequest.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)
  id: EndGetClientCertificate(System.IAsyncResult)
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: EndGetClientCertificate(IAsyncResult)
  nameWithType: HttpListenerRequest.EndGetClientCertificate(IAsyncResult)
  fullName: System.Net.HttpListenerRequest.EndGetClientCertificate(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Termina una richiesta asincrona per il certificato del client x.&509; v.&3;."
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "La richiesta in sospeso per il certificato."
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "Il <xref:System.IAsyncResult>oggetto restituito all&quot;avvio dell&quot;operazione.</xref:System.IAsyncResult>"
  overload: System.Net.HttpListenerRequest.EndGetClientCertificate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>non è stato ottenuto chiamando<xref:System.Net.HttpListenerRequest.BeginGetClientCertificate*><code>e.</code>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Questo metodo è stato già chiamato per l&quot;operazione identificata da <code> asyncResult </code>."
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.GetClientCertificate
  id: GetClientCertificate
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: GetClientCertificate()
  nameWithType: HttpListenerRequest.GetClientCertificate()
  fullName: System.Net.HttpListenerRequest.GetClientCertificate()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Recupera il certificato del client x.&509; v.&3;."
  remarks: "Questo metodo si blocca fino a quando non viene recuperato il certificato."
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate ();
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "Oggetto <xref href=&quot;System.Security.Cryptography.X509Certificates&quot;> </xref> oggetto che contiene il certificato del client x.&509; v.&3;."
  overload: System.Net.HttpListenerRequest.GetClientCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una chiamata a questo metodo per recuperare il certificato del client x.&509; v.&3; è in corso e quindi un&quot;altra chiamata a questo metodo non può essere reso."
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.GetClientCertificateAsync
  id: GetClientCertificateAsync
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: GetClientCertificateAsync()
  nameWithType: HttpListenerRequest.GetClientCertificateAsync()
  fullName: System.Net.HttpListenerRequest.GetClientCertificateAsync()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Recupera il certificato del client x.&509; v.&3; come operazione asincrona."
  remarks: "Questa operazione non verrà bloccata. L&quot;oggetto restituito <xref:System.Threading.Tasks.Task%601>oggetto verrà completata quando il certificato è stato recuperato.</xref:System.Threading.Tasks.Task%601>       Se una chiamata a questo metodo per recuperare il certificato del client x.&509; v.&3; è in corso, non è possibile effettuare un&quot;altra chiamata a questo metodo."
  syntax:
    content: public System.Threading.Tasks.Task<System.Security.Cryptography.X509Certificates.X509Certificate2> GetClientCertificateAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.Security.Cryptography.X509Certificates.X509Certificate2}
      description: "Restituisce &lt;xref:System.Threading.Tasks.Task%601&gt;.       Oggetto dell&quot;attività che rappresenta l&quot;operazione asincrona. Il &lt;xref:System.Threading.Tasks.Task%601.Result%2A&gt; proprietà nell&quot;oggetto attività restituisce un <xref href=&quot;System.Security.Cryptography.X509Certificates&quot;> </xref> oggetto che contiene il certificato del client x.&509; v.&3;."
  overload: System.Net.HttpListenerRequest.GetClientCertificateAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.HasEntityBody
  id: HasEntityBody
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: HasEntityBody
  nameWithType: HttpListenerRequest.HasEntityBody
  fullName: System.Net.HttpListenerRequest.HasEntityBody
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene un <xref:System.Boolean>valore che indica se la richiesta è associati i dati del corpo.</xref:System.Boolean>"
  remarks: "Una richiesta che invia dati al server utilizzando il `POST` metodo, ad esempio, deve avere un corpo dell&quot;entità."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_17_1.cs)]"
  syntax:
    content: public bool HasEntityBody { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la richiesta è associata a dati del corpo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.HasEntityBody*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.Headers
  id: Headers
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: Headers
  nameWithType: HttpListenerRequest.Headers
  fullName: System.Net.HttpListenerRequest.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene la raccolta di coppie nome/valore di intestazione inviato nella richiesta."
  remarks: "Le intestazioni di richiesta contengono informazioni sui metadati. Ad esempio, le intestazioni possono contenere l&quot;identificatore URI (Uniform Resource) della risorsa di cui il client al server, l&quot;identità dell&quot;agente utente utilizzata dal client e MIME accettabile di tipi per i dati nel corpo della risposta.       Per un elenco completo di intestazioni di richiesta, vedere il <xref:System.Net.HttpRequestHeader>enumerazione.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example displays all the information in a given <xref:System.Net.WebHeaderCollection> object.  \n  \n [!code-cs[Net_Listener_Basic#21](~/add/codesnippet/csharp/p-system.net.httplistene_14_1.cs)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Headers { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "Oggetto <xref:System.Net.WebHeaderCollection>che contiene le intestazioni HTTP incluse nella richiesta.</xref:System.Net.WebHeaderCollection>"
  overload: System.Net.HttpListenerRequest.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.HttpMethod
  id: HttpMethod
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: HttpMethod
  nameWithType: HttpListenerRequest.HttpMethod
  fullName: System.Net.HttpListenerRequest.HttpMethod
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene il metodo HTTP specificato dal client."
  remarks: "Il metodo HTTP è in genere GET o POST, a seconda dell&quot;azione desiderata dal client."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_10_1.cs)]"
  syntax:
    content: public string HttpMethod { get; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>che contiene il metodo utilizzato nella richiesta.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.HttpMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.InputStream
  id: InputStream
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: InputStream
  nameWithType: HttpListenerRequest.InputStream
  fullName: System.Net.HttpListenerRequest.InputStream
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene un flusso che contiene i dati del corpo inviati dal client."
  remarks: "Se il client trasmette i dati (ad esempio, tramite il protocollo HTTP `POST` metodo), il flusso restituito da questo metodo contiene i dati.      > [!NOTE] > La chiusura della richiesta non chiude il flusso restituito da questa proprietà. Quando non è più necessario il flusso, è necessario chiuderlo chiamando il <xref:System.IO.Stream.Close%2A>metodo.</xref:System.IO.Stream.Close%2A>"
  example:
  - "The following code example demonstrates using this property to read the data sent with a request.  \n  \n [!code-cs[Net_Listener_Basic#16](~/add/codesnippet/csharp/p-system.net.httplistene_27_1.cs)]"
  syntax:
    content: public System.IO.Stream InputStream { get; }
    return:
      type: System.IO.Stream
      description: "Leggibile <xref:System.IO.Stream>oggetto che contiene i byte inviati dal client nel corpo della richiesta.</xref:System.IO.Stream> Questa proprietà restituisce <xref:System.IO.Stream>Se con la richiesta viene inviato alcun dato.</xref:System.IO.Stream>"
  overload: System.Net.HttpListenerRequest.InputStream*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.IsAuthenticated
  id: IsAuthenticated
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: HttpListenerRequest.IsAuthenticated
  fullName: System.Net.HttpListenerRequest.IsAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene un <xref:System.Boolean>valore che indica se il client invia la richiesta viene autenticato.</xref:System.Boolean>"
  remarks: "L&quot;applicazione richiede l&quot;autenticazione del client usando il <xref:System.Net.HttpListener.AuthenticationSchemes%2A>o <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A>proprietà.</xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> </xref:System.Net.HttpListener.AuthenticationSchemes%2A>       L&quot;applicazione non riceve un <xref:System.Net.HttpListenerContext>per le richieste dai client che non sono autenticati.</xref:System.Net.HttpListenerContext>"
  example:
  - "The following code example displays the value of the IsAuthenticated property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_1_1.cs)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il client è stato autenticato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.IsLocal
  id: IsLocal
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: IsLocal
  nameWithType: HttpListenerRequest.IsLocal
  fullName: System.Net.HttpListenerRequest.IsLocal
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene un <xref:System.Boolean>valore che indica se la richiesta viene inviata dal computer locale.</xref:System.Boolean>"
  remarks: "Le applicazioni possono utilizzare questa proprietà per eseguire un&quot;elaborazione speciale quando vengono richieste dal computer locale."
  example:
  - "The following code example demonstrates using the IsLocal property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_28_1.cs)]"
  syntax:
    content: public bool IsLocal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la richiesta ha avuto origine nello stesso computer come il <xref href=&quot;System.Net.HttpListener&quot;> </xref> oggetto che ha fornito la richiesta; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.IsLocal*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.IsSecureConnection
  id: IsSecureConnection
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: IsSecureConnection
  nameWithType: HttpListenerRequest.IsSecureConnection
  fullName: System.Net.HttpListenerRequest.IsSecureConnection
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene un <xref:System.Boolean>valore che indica se la connessione TCP utilizzata per inviare la richiesta utilizza il protocollo Secure Sockets Layer (SSL).</xref:System.Boolean>"
  remarks: "Per richiedere una connessione sicura, la richiesta del client utilizza <xref:System.Uri.UriSchemeHttps>anziché <xref:System.Uri.UriSchemeHttp>.</xref:System.Uri.UriSchemeHttp> </xref:System.Uri.UriSchemeHttps> Se non viene stabilita la connessione mediante SSL, il client riceve un <xref:System.Net.WebException>che fornisce informazioni sull&quot;errore.</xref:System.Net.WebException>"
  example:
  - "The following code example demonstrates using the IsSecureConnection property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_3_1.cs)]"
  syntax:
    content: public bool IsSecureConnection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la connessione TCP utilizza SSL. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.IsSecureConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.IsWebSocketRequest
  id: IsWebSocketRequest
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: IsWebSocketRequest
  nameWithType: HttpListenerRequest.IsWebSocketRequest
  fullName: System.Net.HttpListenerRequest.IsWebSocketRequest
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene un <xref:System.Boolean>valore che indica se la connessione TCP è una richiesta WebSocket.</xref:System.Boolean>"
  syntax:
    content: public bool IsWebSocketRequest { get; }
    return:
      type: System.Boolean
      description: "Restituisce <xref:System.Boolean>.</xref:System.Boolean>       <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la connessione TCP è una richiesta WebSocket. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.IsWebSocketRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.KeepAlive
  id: KeepAlive
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: KeepAlive
  nameWithType: HttpListenerRequest.KeepAlive
  fullName: System.Net.HttpListenerRequest.KeepAlive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene un <xref:System.Boolean>valore che indica se il client richiede una connessione permanente.</xref:System.Boolean>"
  remarks: "Se un client HTTP e un server prevede di scambiare dati più volte in un breve periodo di tempo, una connessione permanente di velocizzare le comunicazioni e consente di evitare l&quot;overhead necessario per aprire e chiudere una connessione TCP per ogni messaggio. Per i client utilizzano HTTP/1.1, il valore predefinito per questa proprietà è `true`."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_5_1.cs)]"
  syntax:
    content: public bool KeepAlive { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la connessione deve essere mantenuta attiva; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.HttpListenerRequest.KeepAlive*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.LocalEndPoint
  id: LocalEndPoint
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: LocalEndPoint
  nameWithType: HttpListenerRequest.LocalEndPoint
  fullName: System.Net.HttpListenerRequest.LocalEndPoint
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottenere il server numero porta e indirizzo IP a cui è indirizzata la richiesta."
  remarks: "Questa proprietà è utile quando si desidera rispondere alle richieste in base al modo in cui che siano stati risolti."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_38_1.cs)]"
  syntax:
    content: public System.Net.IPEndPoint LocalEndPoint { get; }
    return:
      type: System.Net.IPEndPoint
      description: "Un <xref:System.Net.IPEndPoint>che rappresenta l&quot;indirizzo IP che la richiesta viene inviata a.</xref:System.Net.IPEndPoint>"
  overload: System.Net.HttpListenerRequest.LocalEndPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ProtocolVersion
  id: ProtocolVersion
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ProtocolVersion
  nameWithType: HttpListenerRequest.ProtocolVersion
  fullName: System.Net.HttpListenerRequest.ProtocolVersion
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene la versione HTTP utilizzata dal client richiedente."
  remarks: "Le funzionalità di versioni diverse di HTTP sono specificate nei documenti disponibili all&quot;indirizzo [http://www.rfc-editor.org](http://www.rfc-editor.org/)."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_9_1.cs)]"
  syntax:
    content: public Version ProtocolVersion { get; }
    return:
      type: System.Version
      description: "Oggetto <xref:System.Version>che identifica la versione del client HTTP.</xref:System.Version>"
  overload: System.Net.HttpListenerRequest.ProtocolVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.QueryString
  id: QueryString
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: QueryString
  nameWithType: HttpListenerRequest.QueryString
  fullName: System.Net.HttpListenerRequest.QueryString
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene la stringa di query inclusa nella richiesta."
  remarks: "In un URL, le informazioni di query sono separate dalle informazioni sul percorso da un punto interrogativo (?). Coppie nome/valore sono separate da un segno di uguale (=). Per accedere ai dati di query come un&quot;unica stringa, ottenere il <xref:System.Uri.Query%2A>valore della proprietà dall&quot; <xref:System.Uri>oggetto restituito da <xref:System.Net.HttpListenerRequest.Url%2A>.</xref:System.Net.HttpListenerRequest.Url%2A> </xref:System.Uri> </xref:System.Uri.Query%2A>      > [!NOTE] > Le query senza un segno di uguale (esempio: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) vengono aggiunti per il `null` chiave <xref:System.Collections.Specialized.NameValueCollection>.</xref:System.Collections.Specialized.NameValueCollection>"
  example:
  - "The following code example demonstrates using the QueryString property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_4_1.cs)]"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection QueryString { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "Oggetto <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> oggetto che contiene i dati di query inclusi nella richiesta <xref:System.Net.HttpListenerRequest.Url*>.</xref:System.Net.HttpListenerRequest.Url*>"
  overload: System.Net.HttpListenerRequest.QueryString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.RawUrl
  id: RawUrl
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: RawUrl
  nameWithType: HttpListenerRequest.RawUrl
  fullName: System.Net.HttpListenerRequest.RawUrl
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene le informazioni sull&quot;URL (senza l&quot;host e porta) richiesti dal client."
  remarks: "L&quot;URL non elaborato è definito come parte dell&quot;URL dopo le informazioni di dominio. Nella stringa dell&quot;URL `http://www.contoso.com/articles/recent.aspx`, l&quot;URL non elaborato è `/articles/recent.aspx`. L&quot;URL non elaborato include la stringa di query, se presente.       Per ottenere le informazioni host e la porta, utilizzare il <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A>proprietà.</xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A>"
  example:
  - "The following code example demonstrates using the RawUrl property.  \n  \n [!code-cs[Net_Listener_Basic#11](~/add/codesnippet/csharp/p-system.net.httplistene_29_1.cs)]"
  syntax:
    content: public string RawUrl { get; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>che contiene l&quot;URL non elaborato per la richiesta.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.RawUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.RemoteEndPoint
  id: RemoteEndPoint
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: RemoteEndPoint
  nameWithType: HttpListenerRequest.RemoteEndPoint
  fullName: System.Net.HttpListenerRequest.RemoteEndPoint
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene il client numero porta e indirizzo IP da cui proviene la richiesta."
  remarks: ''
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#17](~/add/codesnippet/csharp/p-system.net.httplistene_11_1.cs)]"
  syntax:
    content: public System.Net.IPEndPoint RemoteEndPoint { get; }
    return:
      type: System.Net.IPEndPoint
      description: "Un <xref:System.Net.IPEndPoint>che rappresenta il numero di porta e indirizzo IP da cui proviene la richiesta.</xref:System.Net.IPEndPoint>"
  overload: System.Net.HttpListenerRequest.RemoteEndPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.RequestTraceIdentifier
  id: RequestTraceIdentifier
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: RequestTraceIdentifier
  nameWithType: HttpListenerRequest.RequestTraceIdentifier
  fullName: System.Net.HttpListenerRequest.RequestTraceIdentifier
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene l&quot;identificatore della richiesta della richiesta HTTP in ingresso."
  syntax:
    content: public Guid RequestTraceIdentifier { get; }
    return:
      type: System.Guid
      description: "Oggetto <xref:System.Guid>oggetto che contiene l&quot;identificatore della richiesta HTTP.</xref:System.Guid>"
  overload: System.Net.HttpListenerRequest.RequestTraceIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.ServiceName
  id: ServiceName
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: ServiceName
  nameWithType: HttpListenerRequest.ServiceName
  fullName: System.Net.HttpListenerRequest.ServiceName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene il Provider nome servizio (SPN) che il client ha inviato nella richiesta."
  remarks: "Un&quot;applicazione può utilizzare la proprietà ServiceName per eseguire la convalida di nome fornire servizio (SPN) personalizzato."
  syntax:
    content: public string ServiceName { get; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>che contiene il nome SPN del client inviato nella richiesta.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.ServiceName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.TransportContext
  id: TransportContext
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: TransportContext
  nameWithType: HttpListenerRequest.TransportContext
  fullName: System.Net.HttpListenerRequest.TransportContext
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene il <xref:System.Net.TransportContext>per la richiesta del client.</xref:System.Net.TransportContext>"
  remarks: "Il <xref:System.Net.TransportContext>proprietà può essere utilizzata per recuperare il token di associazione di canale (CBT) per un <xref:System.Net.HttpListenerRequest>inviato utilizzando HTTPS.</xref:System.Net.HttpListenerRequest> </xref:System.Net.TransportContext>       Un&quot;applicazione può usare il <xref:System.Net.TransportContext>proprietà per eseguire l&quot;autenticazione personalizzata tramite chiamate a Win32 nativo [AcceptSecurityContext](http://go.microsoft.com/fwlink/?LinkId=147021) funzione.</xref:System.Net.TransportContext>       Se un&quot;applicazione tenta di recuperare il token di associazione di canale (CBT) da questa proprietà TransportContext mediante il <xref:System.Net.TransportContext.GetChannelBinding%2A>(metodo) e <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind>non <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind>, quindi <xref:System.Net.HttpListenerRequest>genererà <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.Net.HttpListenerRequest> </xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> </xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> </xref:System.Net.TransportContext.GetChannelBinding%2A> Il <xref:System.Net.HttpListenerRequest>esegue l&quot;override di <xref:System.Net.TransportContext.GetChannelBinding%2A>(metodo) con un&quot;implementazione interna.</xref:System.Net.TransportContext.GetChannelBinding%2A> </xref:System.Net.HttpListenerRequest>"
  syntax:
    content: public System.Net.TransportContext TransportContext { get; }
    return:
      type: System.Net.TransportContext
      description: "Oggetto <xref:System.Net.TransportContext>oggetto per la richiesta del client.</xref:System.Net.TransportContext>"
  overload: System.Net.HttpListenerRequest.TransportContext*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.Url
  id: Url
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: Url
  nameWithType: HttpListenerRequest.Url
  fullName: System.Net.HttpListenerRequest.Url
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene il <xref:System.Uri>oggetto richiesto dal client.</xref:System.Uri>"
  remarks: "La proprietà Url consente di ottenere tutte le informazioni disponibili da un <xref:System.Uri>oggetto.</xref:System.Uri> Se è necessario conoscere solo il testo non elaborato della richiesta URI, è consigliabile utilizzare il <xref:System.Net.HttpListenerRequest.RawUrl%2A>proprietà invece.</xref:System.Net.HttpListenerRequest.RawUrl%2A>       La proprietà Url è null se il <xref:System.Uri>dal client non può essere analizzato.</xref:System.Uri>       Il <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>proprietà indica se <xref:System.Net.HttpListener>utilizza l&quot;URI senza caratteri escape non elaborato anziché l&quot;URI convertito in cui vengono convertiti i valori codificati in percentuale e vengono eseguiti altri passaggi di normalizzazione.</xref:System.Net.HttpListener> </xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>       Quando un <xref:System.Net.HttpListener>istanza riceve una richiesta tramite il `http.sys` servizio, crea un&quot;istanza della stringa URI fornita da `http.sys`e lo espone come la proprietà Url.</xref:System.Net.HttpListener>       Il `http.sys` servizio espone due stringhe URI di richiesta: URI convertito - URI non elaborato - l&quot;URI non elaborato è il <xref:System.Uri?displayProperty=fullName>fornito nella riga della richiesta di una richiesta HTTP: `GET /path/` `Host: www.contoso.com` l&quot;URI non elaborato fornito da `http.sys` per è indicata in precedenza, la richiesta di &quot;percorso /&quot;.       </xref:System.Uri?displayProperty=fullName> Rappresenta la stringa che segue il verbo HTTP, come è stato inviato in rete.       Il `http.sys` servizio crea un URI convertito dalle informazioni fornite nella richiesta utilizzando l&quot;URI fornito nella riga della richiesta HTTP e l&quot;intestazione Host per determinare il server di origine la richiesta deve essere inoltrato a. Questa operazione viene eseguita confrontando le informazioni della richiesta con un set di prefissi URI registrati. Per poter essere in grado di confrontare tali valori, deve essere eseguita la normalizzazione della richiesta. Per l&quot;esempio precedente l&quot;URI convertito come segue: `http://www.contoso.com/path/` il `http.sys` servizio combina il <xref:System.Uri.Host%2A?displayProperty=fullName>valore della proprietà e la stringa nella riga della richiesta per creare un URI convertito.</xref:System.Uri.Host%2A?displayProperty=fullName> Inoltre, `http.sys` e <xref:System.Uri?displayProperty=fullName>classe anche eseguire le operazioni seguenti:-tutte le percentuali di valori codificati non consente l&quot;escape.</xref:System.Uri?displayProperty=fullName>      -Converte i caratteri non ASCII codificati in percentuale in una rappresentazione dei caratteri UTF-16. Si noti che i caratteri UTF-8 e ANSI o DBCS sono supportati anche i caratteri Unicode (codifica Unicode utilizzando il formato % uXXXX).      -Consente di eseguire altri passaggi di normalizzazione, come la compressione del percorso.       Poiché la richiesta non contiene alcuna informazione sulla codifica utilizzata per i valori codificati in percentuale, potrebbe non essere possibile determinare la codifica corretta solo analizzando i valori codificati in percentuale.       Pertanto `http.sys` fornisce due chiavi del Registro di sistema per la modifica del processo: | Chiave del Registro di sistema | Il valore predefinito | Descrizione |   |------------------|-------------------|-----------------|   | EnableNonUTF8 |&1; | Se è zero, `http.sys` accetta solo URL con codifica UTF-8.<br /><br /> Se diverso da zero, `http.sys` accetta anche URL con codifica ANSI o DBCS nelle richieste. |   | FavorUTF8 |&1; | Se diverso da zero, `http.sys` sempre eseguito un tentativo di decodificare un URL come UTF-8 per primo; se tale conversione non riesce ed EnableNonUTF8 è diverso da zero, Http.sys quindi tenta di decodificarlo come ANSI o DBCS.<br /><br /> Se è zero (ed EnableNonUTF8 è diverso da zero), `http.sys` eseguito un tentativo di decodificare come ANSI o DBCS; se non è riuscita, prova una conversione di UTF-8. |       Quando <xref:System.Net.HttpListener>riceve una richiesta, viene utilizzato l&quot;URI convertito da `http.sys` come input per la proprietà Url.</xref:System.Net.HttpListener>       È necessario supportare i caratteri oltre ai caratteri e numeri negli URI. Un esempio è il seguente URI utilizzato per recuperare informazioni sul cliente per il cliente numero &quot;1/3812&quot;: `http://www.contoso.com/Customer(&quot;1%2F3812&quot;)/` notare la barra codificati in percentuale nell&quot;Uri (%&2;F). Questa operazione è necessaria, poiché in questo caso il carattere di barra rappresenta dati e non un delimitatore di percorso.       Passare la stringa al costruttore Uri determinerà l&quot;URI seguente: `http://www.contoso.com/Customer(&quot;1/3812&quot;)/` la suddivisione del percorso in segmenti comporta i seguenti elementi: `Customer(&quot;1` `3812&quot;)` non lo scopo del mittente della richiesta.              Se il <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>è impostata su false, successivamente, quando il <xref:System.Net.HttpListener>riceve una richiesta, viene utilizzato l&quot;URI non elaborato anziché l&quot;URI convertito da `http.sys` come input per la proprietà Url.</xref:System.Net.HttpListener> </xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>"
  example:
  - "The following code example demonstrates using the Url property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_20_1.cs)]"
  syntax:
    content: public Uri Url { get; }
    return:
      type: System.Uri
      description: "Oggetto <xref:System.Uri>oggetto che identifica la risorsa richiesta dal client.</xref:System.Uri>"
  overload: System.Net.HttpListenerRequest.Url*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UrlReferrer
  id: UrlReferrer
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UrlReferrer
  nameWithType: HttpListenerRequest.UrlReferrer
  fullName: System.Net.HttpListenerRequest.UrlReferrer
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene l&quot;identificatore URI (Uniform Resource) della risorsa di cui il client al server."
  remarks: "Se un client ha seguito un collegamento ipertestuale all&quot;URI richiesto, la richiesta potrebbe contenere un `Referrer` intestazione che identifica l&quot;URI della risorsa contenente il collegamento ipertestuale.       I client possono falsificare o scegliere di non presentare un <xref:System.Net.HttpRequestHeader>intestazione.</xref:System.Net.HttpRequestHeader> Pertanto, mentre il UrlReferrer proprietà può essere utile per identificare le tendenze di base del traffico Web; è non utilizzarla come parte di uno schema di autorizzazione per controllare l&quot;accesso ai dati.       Per un elenco completo di intestazioni di richiesta, vedere il <xref:System.Net.HttpRequestHeader>enumerazione.</xref:System.Net.HttpRequestHeader>       Il UrlReferrer è null, quando è presente alcun `Referrer` intestazione nella richiesta o quando il `Referrer` intestazione è presente nella richiesta ma non viene analizzato come un <xref:System.Uri>.</xref:System.Uri> valido"
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_22_1.cs)]"
  syntax:
    content: public Uri UrlReferrer { get; }
    return:
      type: System.Uri
      description: "Oggetto <xref:System.Uri>oggetto che contiene il testo della richiesta <xref:System.Net.HttpRequestHeader>intestazione, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se l&quot;intestazione non è stato incluso nella richiesta.</xref:System.Net.HttpRequestHeader> </xref:System.Uri>"
  overload: System.Net.HttpListenerRequest.UrlReferrer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UserAgent
  id: UserAgent
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UserAgent
  nameWithType: HttpListenerRequest.UserAgent
  fullName: System.Net.HttpListenerRequest.UserAgent
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene l&quot;agente utente presentato dal client."
  remarks: "Il `User-Agent` intestazione contiene in genere il testo che identifica il nome e numero di versione del software utilizzato per generare la richiesta.       Per un elenco completo di intestazioni di richiesta, vedere il <xref:System.Net.HttpRequestHeader>enumerazione.</xref:System.Net.HttpRequestHeader>       UserAgent è null, quando è presente alcun `User-Agent` intestazione nella richiesta."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_42_1.cs)]"
  syntax:
    content: public string UserAgent { get; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>oggetto che contiene il testo della richiesta <xref uid=&quot;langword_csharp_User-Agent&quot; name=&quot;User-Agent&quot; href=&quot;&quot;> </xref> intestazione.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.UserAgent*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UserHostAddress
  id: UserHostAddress
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UserHostAddress
  nameWithType: HttpListenerRequest.UserHostAddress
  fullName: System.Net.HttpListenerRequest.UserHostAddress
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene il server numero porta e indirizzo IP a cui è indirizzata la richiesta."
  remarks: "Le informazioni restituite da questa proprietà sono disponibile in anche il <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A>valore della proprietà.</xref:System.Net.HttpListenerRequest.LocalEndPoint%2A>"
  example:
  - "The following code example displays the value of this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_6_1.cs)]"
  syntax:
    content: public string UserHostAddress { get; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>che contiene le informazioni sull&quot;indirizzo host.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.UserHostAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UserHostName
  id: UserHostName
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UserHostName
  nameWithType: HttpListenerRequest.UserHostName
  fullName: System.Net.HttpListenerRequest.UserHostName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene il nome DNS e, se fornito, il numero di porta specificato dal client."
  remarks: "Il `Host` intestazione contiene il nome host server richiesto e il numero di porta, se specificato, separati da due punti (ad esempio, `www.contoso.com:8080`).       È possibile utilizzare questa proprietà per restituire risultati diversi a seconda il nome host specificato nella richiesta.       Per un elenco completo di intestazioni di richiesta, vedere il <xref:System.Net.HttpRequestHeader>enumerazione.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_39_1.cs)]"
  syntax:
    content: public string UserHostName { get; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>valore contenente il testo della richiesta <xref uid=&quot;langword_csharp_Host&quot; name=&quot;Host&quot; href=&quot;&quot;> </xref> intestazione.</xref:System.String>"
  overload: System.Net.HttpListenerRequest.UserHostName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerRequest.UserLanguages
  id: UserLanguages
  parent: System.Net.HttpListenerRequest
  langs:
  - csharp
  name: UserLanguages
  nameWithType: HttpListenerRequest.UserLanguages
  fullName: System.Net.HttpListenerRequest.UserLanguages
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Ottiene i linguaggi naturali preferiti per la risposta."
  remarks: "Per una descrizione dettagliata del `Accept-Language` intestazione, vedere RFC 2616 Section 14.4, disponibile all&quot;indirizzo [http://www.rfc-editor.org](http://www.rfc-editor.org/).       Per un elenco completo di intestazioni di richiesta, vedere il <xref:System.Net.HttpRequestHeader>enumerazione.</xref:System.Net.HttpRequestHeader>"
  example:
  - "The following code example displays the languages from the request's `Accept-Language` header.  \n  \n [!code-cs[Net_Listener_Basic#15](~/add/codesnippet/csharp/p-system.net.httplistene_18_1.cs)]"
  syntax:
    content: public string[] UserLanguages { get; }
    return:
      type: System.String[]
      description: "Oggetto <xref:System.String>matrice che contiene le lingue specificate nella richiesta <xref:System.Net.HttpRequestHeader>intestazione o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se la richiesta del client non include un <xref:System.Net.HttpRequestHeader>intestazione.</xref:System.Net.HttpRequestHeader> </xref:System.Net.HttpRequestHeader> </xref:System.String>"
  overload: System.Net.HttpListenerRequest.UserLanguages*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.HttpListenerRequest.AcceptTypes
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: AcceptTypes
  nameWithType: HttpListenerRequest.AcceptTypes
  fullName: System.Net.HttpListenerRequest.AcceptTypes
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: BeginGetClientCertificate(AsyncCallback,Object)
  nameWithType: HttpListenerRequest.BeginGetClientCertificate(AsyncCallback,Object)
  fullName: System.Net.HttpListenerRequest.BeginGetClientCertificate(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Net.HttpListenerRequest.ClientCertificateError
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ClientCertificateError
  nameWithType: HttpListenerRequest.ClientCertificateError
  fullName: System.Net.HttpListenerRequest.ClientCertificateError
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.HttpListenerRequest.ContentEncoding
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerRequest.ContentEncoding
  fullName: System.Net.HttpListenerRequest.ContentEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Net.HttpListenerRequest.ContentLength64
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerRequest.ContentLength64
  fullName: System.Net.HttpListenerRequest.ContentLength64
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.HttpListenerRequest.ContentType
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerRequest.ContentType
  fullName: System.Net.HttpListenerRequest.ContentType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.HttpListenerRequest.Cookies
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerRequest.Cookies
  fullName: System.Net.HttpListenerRequest.Cookies
- uid: System.Net.CookieCollection
  parent: System.Net
  isExternal: true
  name: CookieCollection
  nameWithType: CookieCollection
  fullName: System.Net.CookieCollection
- uid: System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: EndGetClientCertificate(IAsyncResult)
  nameWithType: HttpListenerRequest.EndGetClientCertificate(IAsyncResult)
  fullName: System.Net.HttpListenerRequest.EndGetClientCertificate(IAsyncResult)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Net.HttpListenerRequest.GetClientCertificate
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: GetClientCertificate()
  nameWithType: HttpListenerRequest.GetClientCertificate()
  fullName: System.Net.HttpListenerRequest.GetClientCertificate()
- uid: System.Net.HttpListenerRequest.GetClientCertificateAsync
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: GetClientCertificateAsync()
  nameWithType: HttpListenerRequest.GetClientCertificateAsync()
  fullName: System.Net.HttpListenerRequest.GetClientCertificateAsync()
- uid: System.Threading.Tasks.Task{System.Security.Cryptography.X509Certificates.X509Certificate2}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<X509Certificate2>
  nameWithType: Task<X509Certificate2>
  fullName: System.Threading.Tasks.Task<System.Security.Cryptography.X509Certificates.X509Certificate2>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Security.Cryptography.X509Certificates.X509Certificate2>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: X509Certificate2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.HttpListenerRequest.HasEntityBody
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: HasEntityBody
  nameWithType: HttpListenerRequest.HasEntityBody
  fullName: System.Net.HttpListenerRequest.HasEntityBody
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.HttpListenerRequest.Headers
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Headers
  nameWithType: HttpListenerRequest.Headers
  fullName: System.Net.HttpListenerRequest.Headers
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Net.HttpListenerRequest.HttpMethod
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: HttpMethod
  nameWithType: HttpListenerRequest.HttpMethod
  fullName: System.Net.HttpListenerRequest.HttpMethod
- uid: System.Net.HttpListenerRequest.InputStream
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: InputStream
  nameWithType: HttpListenerRequest.InputStream
  fullName: System.Net.HttpListenerRequest.InputStream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.HttpListenerRequest.IsAuthenticated
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsAuthenticated
  nameWithType: HttpListenerRequest.IsAuthenticated
  fullName: System.Net.HttpListenerRequest.IsAuthenticated
- uid: System.Net.HttpListenerRequest.IsLocal
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsLocal
  nameWithType: HttpListenerRequest.IsLocal
  fullName: System.Net.HttpListenerRequest.IsLocal
- uid: System.Net.HttpListenerRequest.IsSecureConnection
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsSecureConnection
  nameWithType: HttpListenerRequest.IsSecureConnection
  fullName: System.Net.HttpListenerRequest.IsSecureConnection
- uid: System.Net.HttpListenerRequest.IsWebSocketRequest
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsWebSocketRequest
  nameWithType: HttpListenerRequest.IsWebSocketRequest
  fullName: System.Net.HttpListenerRequest.IsWebSocketRequest
- uid: System.Net.HttpListenerRequest.KeepAlive
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerRequest.KeepAlive
  fullName: System.Net.HttpListenerRequest.KeepAlive
- uid: System.Net.HttpListenerRequest.LocalEndPoint
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: LocalEndPoint
  nameWithType: HttpListenerRequest.LocalEndPoint
  fullName: System.Net.HttpListenerRequest.LocalEndPoint
- uid: System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net.HttpListenerRequest.ProtocolVersion
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerRequest.ProtocolVersion
  fullName: System.Net.HttpListenerRequest.ProtocolVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Net.HttpListenerRequest.QueryString
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: QueryString
  nameWithType: HttpListenerRequest.QueryString
  fullName: System.Net.HttpListenerRequest.QueryString
- uid: System.Net.HttpListenerRequest.RawUrl
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RawUrl
  nameWithType: HttpListenerRequest.RawUrl
  fullName: System.Net.HttpListenerRequest.RawUrl
- uid: System.Net.HttpListenerRequest.RemoteEndPoint
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RemoteEndPoint
  nameWithType: HttpListenerRequest.RemoteEndPoint
  fullName: System.Net.HttpListenerRequest.RemoteEndPoint
- uid: System.Net.HttpListenerRequest.RequestTraceIdentifier
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RequestTraceIdentifier
  nameWithType: HttpListenerRequest.RequestTraceIdentifier
  fullName: System.Net.HttpListenerRequest.RequestTraceIdentifier
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Net.HttpListenerRequest.ServiceName
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ServiceName
  nameWithType: HttpListenerRequest.ServiceName
  fullName: System.Net.HttpListenerRequest.ServiceName
- uid: System.Net.HttpListenerRequest.TransportContext
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: TransportContext
  nameWithType: HttpListenerRequest.TransportContext
  fullName: System.Net.HttpListenerRequest.TransportContext
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.HttpListenerRequest.Url
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Url
  nameWithType: HttpListenerRequest.Url
  fullName: System.Net.HttpListenerRequest.Url
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.HttpListenerRequest.UrlReferrer
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UrlReferrer
  nameWithType: HttpListenerRequest.UrlReferrer
  fullName: System.Net.HttpListenerRequest.UrlReferrer
- uid: System.Net.HttpListenerRequest.UserAgent
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserAgent
  nameWithType: HttpListenerRequest.UserAgent
  fullName: System.Net.HttpListenerRequest.UserAgent
- uid: System.Net.HttpListenerRequest.UserHostAddress
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserHostAddress
  nameWithType: HttpListenerRequest.UserHostAddress
  fullName: System.Net.HttpListenerRequest.UserHostAddress
- uid: System.Net.HttpListenerRequest.UserHostName
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserHostName
  nameWithType: HttpListenerRequest.UserHostName
  fullName: System.Net.HttpListenerRequest.UserHostName
- uid: System.Net.HttpListenerRequest.UserLanguages
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserLanguages
  nameWithType: HttpListenerRequest.UserLanguages
  fullName: System.Net.HttpListenerRequest.UserLanguages
- uid: System.Net.HttpListenerRequest.AcceptTypes*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: AcceptTypes
  nameWithType: HttpListenerRequest.AcceptTypes
- uid: System.Net.HttpListenerRequest.BeginGetClientCertificate*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: BeginGetClientCertificate
  nameWithType: HttpListenerRequest.BeginGetClientCertificate
- uid: System.Net.HttpListenerRequest.ClientCertificateError*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ClientCertificateError
  nameWithType: HttpListenerRequest.ClientCertificateError
- uid: System.Net.HttpListenerRequest.ContentEncoding*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpListenerRequest.ContentEncoding
- uid: System.Net.HttpListenerRequest.ContentLength64*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentLength64
  nameWithType: HttpListenerRequest.ContentLength64
- uid: System.Net.HttpListenerRequest.ContentType*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ContentType
  nameWithType: HttpListenerRequest.ContentType
- uid: System.Net.HttpListenerRequest.Cookies*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Cookies
  nameWithType: HttpListenerRequest.Cookies
- uid: System.Net.HttpListenerRequest.EndGetClientCertificate*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: EndGetClientCertificate
  nameWithType: HttpListenerRequest.EndGetClientCertificate
- uid: System.Net.HttpListenerRequest.GetClientCertificate*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: GetClientCertificate
  nameWithType: HttpListenerRequest.GetClientCertificate
- uid: System.Net.HttpListenerRequest.GetClientCertificateAsync*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: GetClientCertificateAsync
  nameWithType: HttpListenerRequest.GetClientCertificateAsync
- uid: System.Net.HttpListenerRequest.HasEntityBody*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: HasEntityBody
  nameWithType: HttpListenerRequest.HasEntityBody
- uid: System.Net.HttpListenerRequest.Headers*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Headers
  nameWithType: HttpListenerRequest.Headers
- uid: System.Net.HttpListenerRequest.HttpMethod*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: HttpMethod
  nameWithType: HttpListenerRequest.HttpMethod
- uid: System.Net.HttpListenerRequest.InputStream*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: InputStream
  nameWithType: HttpListenerRequest.InputStream
- uid: System.Net.HttpListenerRequest.IsAuthenticated*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsAuthenticated
  nameWithType: HttpListenerRequest.IsAuthenticated
- uid: System.Net.HttpListenerRequest.IsLocal*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsLocal
  nameWithType: HttpListenerRequest.IsLocal
- uid: System.Net.HttpListenerRequest.IsSecureConnection*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsSecureConnection
  nameWithType: HttpListenerRequest.IsSecureConnection
- uid: System.Net.HttpListenerRequest.IsWebSocketRequest*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: IsWebSocketRequest
  nameWithType: HttpListenerRequest.IsWebSocketRequest
- uid: System.Net.HttpListenerRequest.KeepAlive*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: KeepAlive
  nameWithType: HttpListenerRequest.KeepAlive
- uid: System.Net.HttpListenerRequest.LocalEndPoint*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: LocalEndPoint
  nameWithType: HttpListenerRequest.LocalEndPoint
- uid: System.Net.HttpListenerRequest.ProtocolVersion*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ProtocolVersion
  nameWithType: HttpListenerRequest.ProtocolVersion
- uid: System.Net.HttpListenerRequest.QueryString*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: QueryString
  nameWithType: HttpListenerRequest.QueryString
- uid: System.Net.HttpListenerRequest.RawUrl*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RawUrl
  nameWithType: HttpListenerRequest.RawUrl
- uid: System.Net.HttpListenerRequest.RemoteEndPoint*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RemoteEndPoint
  nameWithType: HttpListenerRequest.RemoteEndPoint
- uid: System.Net.HttpListenerRequest.RequestTraceIdentifier*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: RequestTraceIdentifier
  nameWithType: HttpListenerRequest.RequestTraceIdentifier
- uid: System.Net.HttpListenerRequest.ServiceName*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: ServiceName
  nameWithType: HttpListenerRequest.ServiceName
- uid: System.Net.HttpListenerRequest.TransportContext*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: TransportContext
  nameWithType: HttpListenerRequest.TransportContext
- uid: System.Net.HttpListenerRequest.Url*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: Url
  nameWithType: HttpListenerRequest.Url
- uid: System.Net.HttpListenerRequest.UrlReferrer*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UrlReferrer
  nameWithType: HttpListenerRequest.UrlReferrer
- uid: System.Net.HttpListenerRequest.UserAgent*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserAgent
  nameWithType: HttpListenerRequest.UserAgent
- uid: System.Net.HttpListenerRequest.UserHostAddress*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserHostAddress
  nameWithType: HttpListenerRequest.UserHostAddress
- uid: System.Net.HttpListenerRequest.UserHostName*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserHostName
  nameWithType: HttpListenerRequest.UserHostName
- uid: System.Net.HttpListenerRequest.UserLanguages*
  parent: System.Net.HttpListenerRequest
  isExternal: false
  name: UserLanguages
  nameWithType: HttpListenerRequest.UserLanguages
