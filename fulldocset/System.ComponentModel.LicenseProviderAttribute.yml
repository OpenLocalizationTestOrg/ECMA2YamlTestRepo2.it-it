### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.LicenseProviderAttribute
  id: LicenseProviderAttribute
  children:
  - System.ComponentModel.LicenseProviderAttribute.#ctor
  - System.ComponentModel.LicenseProviderAttribute.#ctor(System.String)
  - System.ComponentModel.LicenseProviderAttribute.#ctor(System.Type)
  - System.ComponentModel.LicenseProviderAttribute.Default
  - System.ComponentModel.LicenseProviderAttribute.Equals(System.Object)
  - System.ComponentModel.LicenseProviderAttribute.GetHashCode
  - System.ComponentModel.LicenseProviderAttribute.LicenseProvider
  - System.ComponentModel.LicenseProviderAttribute.TypeId
  langs:
  - csharp
  name: LicenseProviderAttribute
  nameWithType: LicenseProviderAttribute
  fullName: System.ComponentModel.LicenseProviderAttribute
  type: Class
  summary: "Specifica il <xref href=&quot;System.ComponentModel.LicenseProvider&quot;> </xref> da usare con una classe. Questa classe non può essere ereditata."
  remarks: "Quando si crea un componente che si desidera concedere in licenza, è necessario specificare il <xref:System.ComponentModel.LicenseProvider>contrassegnando il componente con LicenseProviderAttribute.</xref:System.ComponentModel.LicenseProvider>       Utilizzare la <xref:System.ComponentModel.LicenseProviderAttribute.LicenseProvider%2A>proprietà da ottenere <xref:System.Type> <xref:System.ComponentModel.LicenseProvider>.</xref:System.ComponentModel.LicenseProvider> </xref:System.Type> </xref:System.ComponentModel.LicenseProviderAttribute.LicenseProvider%2A>       Per ulteriori informazioni sugli attributi, vedere [attributi](~/add/includes/ajax-current-ext-md.md). Per ulteriori informazioni sulle licenze, vedere [come: licenza componenti e controlli](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Il <xref:System.Security.Permissions.HostProtectionAttribute>attributo applicato a questa classe ha i seguenti elementi <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A>valore della proprietà: <xref:System.Security.Permissions.HostProtectionResource>.</xref:System.Security.Permissions.HostProtectionResource> </xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> </xref:System.Security.Permissions.HostProtectionAttribute> Il <xref:System.Security.Permissions.HostProtectionAttribute>non influiscono sulle applicazioni desktop (che in genere vengono avviate facendo doppio clic su un&quot;icona, digitando un comando oppure immettendo un URL in un browser).</xref:System.Security.Permissions.HostProtectionAttribute> Per ulteriori informazioni, vedere la <xref:System.Security.Permissions.HostProtectionAttribute>classe o [programmazione in SQL Server e attributi di protezione Host](~/add/includes/ajax-current-ext-md.md).</xref:System.Security.Permissions.HostProtectionAttribute>"
  example:
  - "The following code example uses the <xref:System.ComponentModel.LicFileLicenseProvider> as the license provider for `MyControl`.  \n  \n [!code-cs[Classic LicenseProviderAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._84_1.cs)]\n [!code-cpp[Classic LicenseProviderAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._84_1.cpp)]\n [!code-vb[Classic LicenseProviderAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._84_1.vb)]  \n  \n The next code example creates an instance of the `MyControl` class. Then, it gets the attributes for the class, and prints the name of the license provider used by `myNewControl`.  \n  \n [!code-cs[Classic LicenseProviderAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._84_2.cs)]\n [!code-cpp[Classic LicenseProviderAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._84_2.cpp)]\n [!code-vb[Classic LicenseProviderAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._84_2.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)]

      public sealed class LicenseProviderAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseProviderAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.LicenseProviderAttribute
  langs:
  - csharp
  name: LicenseProviderAttribute()
  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute()
  fullName: System.ComponentModel.LicenseProviderAttribute.LicenseProviderAttribute()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.LicenseProviderAttribute&quot;> </xref> classe senza un provider di licenze."
  syntax:
    content: public LicenseProviderAttribute ();
    parameters: []
  overload: System.ComponentModel.LicenseProviderAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseProviderAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.LicenseProviderAttribute
  langs:
  - csharp
  name: LicenseProviderAttribute(String)
  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute(String)
  fullName: System.ComponentModel.LicenseProviderAttribute.LicenseProviderAttribute(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.LicenseProviderAttribute&quot;> </xref> classe con il tipo specificato."
  syntax:
    content: public LicenseProviderAttribute (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "Il nome completo della classe di provider di licenza."
  overload: System.ComponentModel.LicenseProviderAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseProviderAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.LicenseProviderAttribute
  langs:
  - csharp
  name: LicenseProviderAttribute(Type)
  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute(Type)
  fullName: System.ComponentModel.LicenseProviderAttribute.LicenseProviderAttribute(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.LicenseProviderAttribute&quot;> </xref> classe con il tipo di provider di licenze specificato."
  syntax:
    content: public LicenseProviderAttribute (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Che rappresenta il tipo di classe di provider di licenza.</xref:System.Type>"
  overload: System.ComponentModel.LicenseProviderAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseProviderAttribute.Default
  id: Default
  parent: System.ComponentModel.LicenseProviderAttribute
  langs:
  - csharp
  name: Default
  nameWithType: LicenseProviderAttribute.Default
  fullName: System.ComponentModel.LicenseProviderAttribute.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Specifica il valore predefinito, ovvero nessun provider. Questo <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> campo è di sola lettura."
  syntax:
    content: public static readonly System.ComponentModel.LicenseProviderAttribute Default;
    return:
      type: System.ComponentModel.LicenseProviderAttribute
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseProviderAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.LicenseProviderAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: LicenseProviderAttribute.Equals(Object)
  fullName: System.ComponentModel.LicenseProviderAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica se questa istanza e un oggetto specificato sono uguali."
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Un altro oggetto da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> value </code> è uguale a questa istanza; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.LicenseProviderAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseProviderAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.LicenseProviderAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: LicenseProviderAttribute.GetHashCode()
  fullName: System.ComponentModel.LicenseProviderAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Restituisce il codice hash per questa istanza."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash per l&quot;oggetto corrente <xref href=&quot;System.ComponentModel.LicenseProviderAttribute&quot;> </xref>."
  overload: System.ComponentModel.LicenseProviderAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseProviderAttribute.LicenseProvider
  id: LicenseProvider
  parent: System.ComponentModel.LicenseProviderAttribute
  langs:
  - csharp
  name: LicenseProvider
  nameWithType: LicenseProviderAttribute.LicenseProvider
  fullName: System.ComponentModel.LicenseProviderAttribute.LicenseProvider
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ottiene il provider di licenza che deve essere utilizzato con la classe associata."
  syntax:
    content: public Type LicenseProvider { get; }
    return:
      type: System.Type
      description: "Oggetto <xref:System.Type>che rappresenta il tipo del provider di licenza.</xref:System.Type> Il valore predefinito è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.LicenseProviderAttribute.LicenseProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseProviderAttribute.TypeId
  id: TypeId
  parent: System.ComponentModel.LicenseProviderAttribute
  langs:
  - csharp
  name: TypeId
  nameWithType: LicenseProviderAttribute.TypeId
  fullName: System.ComponentModel.LicenseProviderAttribute.TypeId
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Indica un ID univoco per questo tipo di attributo."
  syntax:
    content: public override object TypeId { get; }
    return:
      type: System.Object
      description: "Un ID univoco per questo tipo di attributo."
  overload: System.ComponentModel.LicenseProviderAttribute.TypeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.LicenseProviderAttribute.#ctor
  parent: System.ComponentModel.LicenseProviderAttribute
  isExternal: false
  name: LicenseProviderAttribute()
  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute()
  fullName: System.ComponentModel.LicenseProviderAttribute.LicenseProviderAttribute()
- uid: System.ComponentModel.LicenseProviderAttribute.#ctor(System.String)
  parent: System.ComponentModel.LicenseProviderAttribute
  isExternal: false
  name: LicenseProviderAttribute(String)
  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute(String)
  fullName: System.ComponentModel.LicenseProviderAttribute.LicenseProviderAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.LicenseProviderAttribute.#ctor(System.Type)
  parent: System.ComponentModel.LicenseProviderAttribute
  isExternal: false
  name: LicenseProviderAttribute(Type)
  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute(Type)
  fullName: System.ComponentModel.LicenseProviderAttribute.LicenseProviderAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.LicenseProviderAttribute.Default
  parent: System.ComponentModel.LicenseProviderAttribute
  isExternal: false
  name: Default
  nameWithType: LicenseProviderAttribute.Default
  fullName: System.ComponentModel.LicenseProviderAttribute.Default
- uid: System.ComponentModel.LicenseProviderAttribute
  parent: System.ComponentModel
  isExternal: false
  name: LicenseProviderAttribute
  nameWithType: LicenseProviderAttribute
  fullName: System.ComponentModel.LicenseProviderAttribute
- uid: System.ComponentModel.LicenseProviderAttribute.Equals(System.Object)
  parent: System.ComponentModel.LicenseProviderAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: LicenseProviderAttribute.Equals(Object)
  fullName: System.ComponentModel.LicenseProviderAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.LicenseProviderAttribute.GetHashCode
  parent: System.ComponentModel.LicenseProviderAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: LicenseProviderAttribute.GetHashCode()
  fullName: System.ComponentModel.LicenseProviderAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.LicenseProviderAttribute.LicenseProvider
  parent: System.ComponentModel.LicenseProviderAttribute
  isExternal: false
  name: LicenseProvider
  nameWithType: LicenseProviderAttribute.LicenseProvider
  fullName: System.ComponentModel.LicenseProviderAttribute.LicenseProvider
- uid: System.ComponentModel.LicenseProviderAttribute.TypeId
  parent: System.ComponentModel.LicenseProviderAttribute
  isExternal: false
  name: TypeId
  nameWithType: LicenseProviderAttribute.TypeId
  fullName: System.ComponentModel.LicenseProviderAttribute.TypeId
- uid: System.ComponentModel.LicenseProviderAttribute.#ctor*
  parent: System.ComponentModel.LicenseProviderAttribute
  isExternal: false
  name: LicenseProviderAttribute
  nameWithType: LicenseProviderAttribute.LicenseProviderAttribute
- uid: System.ComponentModel.LicenseProviderAttribute.Equals*
  parent: System.ComponentModel.LicenseProviderAttribute
  isExternal: false
  name: Equals
  nameWithType: LicenseProviderAttribute.Equals
- uid: System.ComponentModel.LicenseProviderAttribute.GetHashCode*
  parent: System.ComponentModel.LicenseProviderAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: LicenseProviderAttribute.GetHashCode
- uid: System.ComponentModel.LicenseProviderAttribute.LicenseProvider*
  parent: System.ComponentModel.LicenseProviderAttribute
  isExternal: false
  name: LicenseProvider
  nameWithType: LicenseProviderAttribute.LicenseProvider
- uid: System.ComponentModel.LicenseProviderAttribute.TypeId*
  parent: System.ComponentModel.LicenseProviderAttribute
  isExternal: false
  name: TypeId
  nameWithType: LicenseProviderAttribute.TypeId
