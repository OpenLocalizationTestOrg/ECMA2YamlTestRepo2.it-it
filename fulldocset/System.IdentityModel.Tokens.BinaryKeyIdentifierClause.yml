### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  id: BinaryKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  langs:
  - csharp
  name: BinaryKeyIdentifierClause
  nameWithType: BinaryKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  type: Class
  summary: "Rappresenta una classe base per clausole identificatore di chiave che si basano su dati binari."
  remarks: "In genere, non è necessario che il BinaryKeyIdentifierClause essere utilizzata solo quando viene creato un servizio token di sicurezza personalizzato. Quando un servizio token di sicurezza restituisce un token di sicurezza, il token di sicurezza emesso contiene riferimenti a token di sicurezza associati e. I riferimenti associati si riferiscono ai token di sicurezza contenuti nell&quot;intestazione di sicurezza di un messaggio SOAP e i riferimenti non associati sono token di sicurezza che non sono inclusi nell&quot;intestazione di sicurezza del messaggio SOAP. Questi riferimenti confermano in genere l&quot;autenticità del token di sicurezza emesso."
  syntax:
    content: 'public abstract class BinaryKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)
  id: '#ctor(System.String,System.Byte[],System.Boolean)'
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Tokens.BinaryKeyIdentifierClause&quot;> </xref> classe utilizzando il tipo di clausola identificatore di chiave specificato, i dati binari e un valore che indica se i dati binari devono essere duplicati."
  syntax:
    content: protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer);
    parameters:
    - id: clauseType
      type: System.String
      description: "Il tipo di clausola identificatore di chiave. Imposta il valore della <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>proprietà.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>"
    - id: identificationData
      type: System.Byte[]
      description: "Matrice di <xref:System.Byte>che contiene i dati binari che rappresenta l&quot;identificatore di chiave.</xref:System.Byte>"
    - id: cloneBuffer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per duplicare la matrice passata nel `identificationData` parametro; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identificationData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>identificationData</code>è di lunghezza zero."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)
  id: '#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)'
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Tokens.BinaryKeyIdentifierClause&quot;> </xref> classe utilizzando il tipo di clausola identificatore di chiave specificato, i dati binari, un valore che indica se i dati binari devono essere duplicati, un parametro nonce e la lunghezza della chiave."
  remarks: "Quando il `derivationNonce` e `derivationLength` vengono specificati parametri, viene utilizzata la chiave derivata implicita anziché la chiave di sicurezza diretta del token.       Indipendentemente dal valore passato il `cloneBuffer` parametro, il <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>metodo restituisce sempre un clone della matrice passato il `identificationData` parametro.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>"
  syntax:
    content: protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer, byte[] derivationNonce, int derivationLength);
    parameters:
    - id: clauseType
      type: System.String
      description: "Il tipo di clausola identificatore di chiave. Imposta il valore della <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>proprietà.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*>"
    - id: identificationData
      type: System.Byte[]
      description: "Matrice di <xref:System.Byte>che contiene i dati binari che rappresenta l&quot;identificatore di chiave.</xref:System.Byte> Imposta i dati binari viene restituiti dal <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>metodo.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
    - id: cloneBuffer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per duplicare la matrice passata nel `identificationData` parametro; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: derivationNonce
      type: System.Byte[]
      description: "Matrice di <xref:System.Byte>che contiene il parametro nonce utilizzato per creare una chiave derivata.</xref:System.Byte> Imposta il valore restituito dal <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>metodo.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*>"
    - id: derivationLength
      type: System.Int32
      description: "Le dimensioni della chiave derivata. Imposta il valore della <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>proprietà.</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identificationData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>identificationData</code>è di lunghezza zero."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  id: GetBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: GetBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene i dati binari che rappresenta l&quot;identificatore di chiave."
  remarks: "Indipendentemente dal valore passato al costruttore `cloneBuffer` parametro GetBuffer (metodo) restituisce sempre un clone della matrice passata al costruttore `identificationData` parametro."
  syntax:
    content: public byte[] GetBuffer ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Matrice di <xref:System.Byte>che contiene i dati binari che rappresenta l&quot;identificatore di chiave.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  id: GetRawBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: GetRawBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene i dati binari che rappresenta l&quot;identificatore di chiave."
  remarks: "La matrice restituita dal metodo GetRawBuffer è un duplicato del costruttore `identificationData` parametro quando il valore passato nel `cloneBuffer` è `true`; in caso contrario, è la matrice stessa.       Il <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>metodo restituisce sempre un clone della matrice passata al costruttore `identificationData` parametro.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A>"
  syntax:
    content: protected byte[] GetRawBuffer ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Matrice di <xref:System.Byte>che contiene i dati binari che rappresenta l&quot;identificatore di chiave.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  id: Matches(System.Byte[])
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: Matches(Byte[])
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[])
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[])
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Restituisce un valore che indica se i dati binari per l&quot;istanza corrente corrispondano a dati binari specificati."
  syntax:
    content: public bool Matches (byte[] data);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Matrice di <xref:System.Byte>da confrontare.</xref:System.Byte>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> data  </code>equivale a dati binari restituiti dal <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>metodo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Restituisce un valore che indica se l&quot;identificatore di chiave per questa istanza è equivalente alla clausola dell&quot;identificatore di chiave specificato."
  syntax:
    content: public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Oggetto <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> keyIdentifierClause </code> è di tipo <xref href=&quot;System.IdentityModel.Tokens.BinaryKeyIdentifierClause&quot;> </xref> e dati binari restituiti dal <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>metodo è identico per i <code> keyIdentifierClause </code> parametro e l&quot;istanza corrente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  id: Matches(System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  langs:
  - csharp
  name: Matches(Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[],Int32)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Restituisce un valore che indica se i dati binari per l&quot;istanza corrente sono equivalenti a dati binari specificati in corrispondenza dell&quot;offset specificato."
  syntax:
    content: public bool Matches (byte[] data, int offset);
    parameters:
    - id: data
      type: System.Byte[]
      description: "Matrice di <xref:System.Byte>da confrontare.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "L&quot;indice nella matrice in corrispondenza del quale viene avviato il confronto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i dati binari nel <code> data  </code>a partire dall&quot;indice specificato nel parametro il <code> offset </code> parametro è equivalente ai dati binari restituiti dal <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>(metodo) (a partire dall&quot;indice zero); in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*>"
  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String,Byte[],Boolean,Byte[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer()
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetRawBuffer()
  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer()
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer()
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches(Byte[])
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[])
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[])
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches(Byte[],Int32)
  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[],Int32)
  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(Byte[],Int32)
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: BinaryKeyIdentifierClause
  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetBuffer
  nameWithType: BinaryKeyIdentifierClause.GetBuffer
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: GetRawBuffer
  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: BinaryKeyIdentifierClause.Matches
