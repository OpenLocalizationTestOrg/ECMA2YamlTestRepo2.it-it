### YamlMime:ManagedReference
items:
- uid: System.Web.UI.DataSourceView
  id: DataSourceView
  children:
  - System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)
  - System.Web.UI.DataSourceView.CanDelete
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.CanInsert
  - System.Web.UI.DataSourceView.CanPage
  - System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.DataSourceView.CanSort
  - System.Web.UI.DataSourceView.CanUpdate
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  langs:
  - csharp
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
  type: Class
  summary: "Funge da classe base per tutte le classi di vista origine dati, che definiscono le funzionalità dei controlli origine dati."
  remarks: "ASP.NET supporta un&quot;architettura di associazione di dati che consente ai controlli server Web da associare a dati in modo coerente. I controlli server Web da associare ai dati vengono definiti per i controlli con associazione a dati e le classi che semplificano che i binding vengono chiamati dai controlli origine dati. I controlli origine dati possono rappresentare qualsiasi origine dati: un database relazionale, un file, un flusso, un oggetto business e così via. Origine dati consentono di controllare i dati presenti in modo coerente a controlli con associazione a dati, indipendentemente dall&quot;origine o al formato dei dati sottostanti.       Utilizzare i controlli origine dati che vengono forniti con ASP.NET, tra cui <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, e <xref:System.Web.UI.WebControls.XmlDataSource>, per eseguire la maggior parte delle attività di sviluppo Web.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.AccessDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> Utilizzare la base <xref:System.Web.UI.DataSourceControl>e controllo del codice sorgente DataSourceView classi quando si desidera implementare i propri dati personalizzati.</xref:System.Web.UI.DataSourceControl>       È possibile considerare la combinazione di un controllo origine dati di <xref:System.Web.UI.IDataSource>oggetto e i relativi elenchi di dati, denominato viste origine dati associati.</xref:System.Web.UI.IDataSource> Ogni elenco di dati è rappresentato da un oggetto DataSourceView. La classe DataSourceView è la classe base per tutte le viste origine dati, o elenchi di dati, associati a controlli origine dati. Viste origine dati definiscono le funzionalità di un controllo origine dati. Poiché l&quot;archivio dati sottostante contiene uno o più elenchi di dati, un controllo origine dati è sempre associato a uno o più viste origine dati denominata. Il controllo origine dati utilizza il <xref:System.Web.UI.DataSourceControl.GetViewNames%2A>viste attualmente associate al controllo origine dati di origine di metodo per enumerare i dati e <xref:System.Web.UI.DataSourceControl.GetView%2A>metodo per recuperare un&quot;istanza di vista origine dati specifica in base al nome.</xref:System.Web.UI.DataSourceControl.GetView%2A> </xref:System.Web.UI.DataSourceControl.GetViewNames%2A>       Tutti gli oggetti DataSourceView supportano il recupero di dati dall&quot;origine dati sottostante tramite il <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>metodo.</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> Tutte le visualizzazioni supportano facoltativamente un set di base di operazioni, incluse le operazioni, ad esempio <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>, <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>e <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>.</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> </xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> </xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> Un controllo con associazione a dati può rilevare le funzionalità di un controllo origine dati mediante il recupero di un&quot;origine dati associata visualizzazione utilizzando il <xref:System.Web.UI.DataSourceControl.GetView%2A>e <xref:System.Web.UI.DataSourceControl.GetViewNames%2A>metodi e dalla query alla visualizzazione in fase di progettazione o di esecuzione.</xref:System.Web.UI.DataSourceControl.GetViewNames%2A> </xref:System.Web.UI.DataSourceControl.GetView%2A>"
  example:
  - "The following code example demonstrates how to extend the DataSourceView class to create a strongly typed view class for a data source control. The `CsVDataSourceView` class defines the capabilities of the `CsvDataSource` data source control and provides an implementation for data-bound controls to use data stored in comma-separated value (.csv) files. For more information on the `CsvDataSource` data source control, see the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/add/codesnippet/csharp/t-system.web.ui.datasour_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/add/codesnippet/visualbasic/t-system.web.ui.datasour_1_1.vb)]"
  syntax:
    content: public abstract class DataSourceView
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)
  id: '#ctor(System.Web.UI.IDataSource,System.String)'
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: DataSourceView(IDataSource,String)
  nameWithType: DataSourceView.DataSourceView(IDataSource,String)
  fullName: System.Web.UI.DataSourceView.DataSourceView(IDataSource,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> classe."
  syntax:
    content: protected DataSourceView (System.Web.UI.IDataSource owner, string viewName);
    parameters:
    - id: owner
      type: System.Web.UI.IDataSource
      description: "Il controllo origine dati che il <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> è associato."
    - id: viewName
      type: System.String
      description: "Il nome del <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> oggetto."
  overload: System.Web.UI.DataSourceView.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>viewName</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: DataSourceView.CanDelete
  fullName: System.Web.UI.DataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> oggetto associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.DataSourceControl&quot;> </xref> oggetto supporta la <xref:System.Web.UI.DataSourceView.ExecuteDelete*>operazione.</xref:System.Web.UI.DataSourceView.ExecuteDelete*>"
  remarks: "La proprietà CanDelete riflette non solo una funzionalità del controllo origine dati, ma anche se è attualmente necessario per eseguire un&quot;operazione. Ad esempio, anche se una vista origine dati supporta la <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>operazione in generale, se una proprietà obbligatoria o alcuni altri dati non sono impostati, la proprietà CanDelete restituisce `false`, come un&quot;operazione di eliminazione avrà esito negativo.</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>"
  example:
  - "The following code example demonstrates how to override the CanDelete property and the <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/csharp/p-system.web.ui.datasour_3_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_3_1.vb)]"
  syntax:
    content: public virtual bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;operazione è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Restituisce l&quot;implementazione della classe base <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.DataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanExecute(System.String)
  id: CanExecute(System.String)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanExecute(String)
  nameWithType: DataSourceView.CanExecute(String)
  fullName: System.Web.UI.DataSourceView.CanExecute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se è possibile eseguire il comando specificato."
  syntax:
    content: public virtual bool CanExecute (string commandName);
    parameters:
    - id: commandName
      type: System.String
      description: "Il nome del comando."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il comando può essere eseguito; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.DataSourceView.CanExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: DataSourceView.CanInsert
  fullName: System.Web.UI.DataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> oggetto associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.DataSourceControl&quot;> </xref> oggetto supporta la <xref:System.Web.UI.DataSourceView.ExecuteInsert*>operazione.</xref:System.Web.UI.DataSourceView.ExecuteInsert*>"
  remarks: "La proprietà CanInsert riflette non solo una funzionalità del controllo origine dati, ma anche se è attualmente necessario per eseguire un&quot;operazione. Ad esempio, anche se un controllo origine dati supporta la <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>operazione, se un comando di inserimento o alcuni altri dati non sono impostati, la proprietà CanInsert restituisce `false`, come un&quot;operazione di inserimento avrà esito negativo.</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>"
  example:
  - "The following code example demonstrates how to override the CanInsert property and the <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/csharp/p-system.web.ui.datasour_2_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_2_1.vb)]"
  syntax:
    content: public virtual bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;operazione è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Restituisce l&quot;implementazione della classe base <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.DataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: DataSourceView.CanPage
  fullName: System.Web.UI.DataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> oggetto associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.DataSourceControl&quot;> </xref> oggetto supporta il paging dei dati recuperati tramite il <xref:System.Web.UI.DataSourceView.ExecuteSelect*>metodo.</xref:System.Web.UI.DataSourceView.ExecuteSelect*>"
  remarks: "Aggiungendo un controllo con associazione a dati può richiedere lo spostamento di <xref:System.Web.UI.DataSourceCapabilities>campo il <xref:System.Web.UI.DataSourceSelectArguments>oggetto passato al <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>(metodo).</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceCapabilities> Se un controllo con associazione a dati richiede lo spostamento, ma la proprietà CanPage restituisce `false`, la vista origine dati genera un&quot;eccezione."
  syntax:
    content: public virtual bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;operazione è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Restituisce l&quot;implementazione della classe base <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.DataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: DataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> oggetto associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.DataSourceControl&quot;> </xref> oggetto supporta il recupero del numero totale di righe di dati, anziché i dati."
  remarks: "Un controllo con associazione a dati può richiedere un conteggio totale delle righe tramite l&quot;aggiunta di <xref:System.Web.UI.DataSourceCapabilities?displayProperty=fullName>campo il <xref:System.Web.UI.DataSourceSelectArguments?displayProperty=fullName>oggetto passato al <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>(metodo).</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.DataSourceSelectArguments?displayProperty=fullName> </xref:System.Web.UI.DataSourceCapabilities?displayProperty=fullName> Se un controllo con associazione a dati richiede un numero totale di righe, ma la proprietà CanRetrieveTotalRowCount restituisce `false`, la vista origine dati genera un&quot;eccezione."
  syntax:
    content: public virtual bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;operazione è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Restituisce l&quot;implementazione della classe base <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: DataSourceView.CanSort
  fullName: System.Web.UI.DataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> oggetto associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.DataSourceControl&quot;> </xref> oggetto supporta una visualizzazione ordinata dell&quot;origine dati sottostante."
  remarks: "Un controllo con associazione a dati può richiedere l&quot;ordinamento aggiungendo il <xref:System.Web.UI.DataSourceCapabilities>campo il <xref:System.Web.UI.DataSourceSelectArguments>oggetto passato al <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>(metodo).</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceCapabilities> Se un&quot;associazione a dati ha il controllo richiede l&quot;ordinamento, ma la proprietà restituisce CanSort `false`, la vista origine dati genera un&quot;eccezione."
  example:
  - "The following code example demonstrates how to override the CanSort property in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/add/codesnippet/csharp/p-system.web.ui.datasour_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_1_1.vb)]"
  syntax:
    content: public virtual bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;operazione è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. L&quot;implementazione predefinita restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.DataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: DataSourceView.CanUpdate
  fullName: System.Web.UI.DataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> oggetto associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.DataSourceControl&quot;> </xref> oggetto supporta la <xref:System.Web.UI.DataSourceView.ExecuteUpdate*>operazione.</xref:System.Web.UI.DataSourceView.ExecuteUpdate*>"
  remarks: "La proprietà CanUpdate riflette non solo una funzionalità del controllo origine dati, ma anche se è attualmente necessario per eseguire un&quot;operazione. Ad esempio, anche se un controllo con associazione a dati supporta la <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>operazione, se un comando di aggiornamento obbligatorio o alcuni altri dati non sono impostati, la proprietà CanUpdate restituisce `false`, come un&quot;operazione di aggiornamento avrà esito negativo.</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>"
  example:
  - "The following code example demonstrates how to override the CanUpdate property and the <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> method in a class that extends the <xref:System.Web.UI.DataSourceView> class. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/csharp/p-system.web.ui.datasour_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/visualbasic/p-system.web.ui.datasour_0_1.vb)]"
  syntax:
    content: public virtual bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;operazione è supportata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. L&quot;implementazione predefinita restituisce <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.DataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.DataSourceViewChanged
  id: DataSourceViewChanged
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: DataSourceViewChanged
  nameWithType: DataSourceView.DataSourceViewChanged
  fullName: System.Web.UI.DataSourceView.DataSourceViewChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Si verifica quando la vista origine dati è stata modificata."
  remarks: "La modifica alla vista origine dati può essere dovuto a una modifica i valori delle relative proprietà o a una modifica nei dati a causa di un&quot;operazione di dati eseguita dalla vista origine dati.       Per ulteriori informazioni sulla gestione degli eventi, vedere [NIB: utilizzo degli eventi](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler DataSourceViewChanged;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Esegue un&quot;operazione di eliminazione asincrona nell&quot;elenco di dati che il <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> oggetto rappresenta."
  remarks: "Il metodo Delete è l&quot;interfaccia di eliminazione asincrona dei dati per tutti gli oggetti di vista origine dati. Le chiamate al metodo elimina il <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>utilizzando qualsiasi metodo `keys` e `oldValues` valori dei parametri forniti.</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> Il `callback` parametro è un delegato che un controllo con associazione a dati passa all&quot;origine dati controllo di visualizzazione, che viene utilizzata per notificare l&quot;associazione a dati quando il <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>operazione è stata completata.</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> Il metodo utilizza i parametri del <xref:System.Web.UI.DataSourceViewOperationCallback>delegato da restituire il numero di record interessati e qualsiasi <xref:System.Exception>eccezione generata dal <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>metodo.</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> </xref:System.Exception> </xref:System.Web.UI.DataSourceViewOperationCallback>"
  syntax:
    content: public virtual void Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>delle chiavi di riga o oggetto da eliminare mediante il <xref:System.Web.UI.DataSourceView.ExecuteDelete*>operazione.</xref:System.Web.UI.DataSourceView.ExecuteDelete*> </xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>di coppie nome/valore che rappresentano gli elementi di dati e i valori originali.</xref:System.Collections.IDictionary>"
    - id: callback
      type: System.Web.UI.DataSourceViewOperationCallback
      description: "Oggetto <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;> </xref> delegato utilizzato per notificare a un controllo con associazione a dati una volta completata l&quot;operazione asincrona."
  overload: System.Web.UI.DataSourceView.Delete*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;></xref> supplied is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Events
  id: Events
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Events
  nameWithType: DataSourceView.Events
  fullName: System.Web.UI.DataSourceView.Events
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un elenco di delegati del gestore eventi per la vista origine dati."
  remarks: "Questa proprietà è di tipo <xref:System.ComponentModel.EventHandlerList>, che utilizza un algoritmo di ricerca lineare per trovare le voci dell&quot;elenco di delegati.</xref:System.ComponentModel.EventHandlerList> Algoritmo di ricerca lineare è inefficiente quando si lavora con un numero elevato di voci. Pertanto, quando si dispone di un elenco di grandi dimensioni, la ricerca di voci con questa proprietà sarà lente."
  syntax:
    content: protected System.ComponentModel.EventHandlerList Events { get; }
    return:
      type: System.ComponentModel.EventHandlerList
      description: "Elenco di delegati del gestore eventi."
  overload: System.Web.UI.DataSourceView.Events*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteCommand(String,IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Esegue il comando specificato."
  syntax:
    content: protected virtual int ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values);
    parameters:
    - id: commandName
      type: System.String
      description: "Il nome del comando."
    - id: keys
      type: System.Collections.IDictionary
      description: "Un dizionario di chiavi dell&quot;oggetto o di riga per agire su."
    - id: values
      type: System.Collections.IDictionary
      description: "Un dizionario di coppie nome/valore che rappresentano gli elementi di dati e i relativi valori."
    return:
      type: System.Int32
      description: "Il numero di elementi che sono stati interessati dall&quot;operazione."
  overload: System.Web.UI.DataSourceView.ExecuteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  id: ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Esegue il comando specificato."
  remarks: "Questo metodo non restituisce un valore."
  syntax:
    content: public virtual void ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);
    parameters:
    - id: commandName
      type: System.String
      description: "Il nome del comando."
    - id: keys
      type: System.Collections.IDictionary
      description: "Un dizionario di chiavi dell&quot;oggetto o di riga per agire su."
    - id: values
      type: System.Collections.IDictionary
      description: "Un dizionario di coppie nome/valore che rappresentano gli elementi di dati e i relativi valori."
    - id: callback
      type: System.Web.UI.DataSourceViewOperationCallback
      description: "A <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;></xref> object."
  overload: System.Web.UI.DataSourceView.ExecuteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Esegue un&quot;operazione di eliminazione nell&quot;elenco di dati che il <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> oggetto rappresenta."
  remarks: "Controlli con associazione a dati è possono determinare se l&quot;operazione ExecuteDelete è supportata da un controllo origine dati recuperando il <xref:System.Web.UI.DataSourceView>utilizzando il <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName>metodo e verifica il <xref:System.Web.UI.DataSourceView.CanDelete%2A>proprietà.</xref:System.Web.UI.DataSourceView.CanDelete%2A> </xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName> </xref:System.Web.UI.DataSourceView>       Il `keys` parametro rappresenta le chiavi degli oggetti o delle righe di dati da eliminare. Per le origini dati che rappresentano dati relazionali, ad esempio il <xref:System.Web.UI.WebControls.SqlDataSource>(controllo), il `keys` parametro è una raccolta di chiavi primarie del database.</xref:System.Web.UI.WebControls.SqlDataSource> In altri scenari, il `keys` parametro è una raccolta di coppie nome/valore e viene utilizzato per filtrare un elenco di dati. Tutti i dati corrispondenti a una coppia nome/valore viene eliminati.      > [!NOTE] > Il <xref:System.Web.UI.DataSourceView>implementazione predefinita della classe consiste nel generare un <xref:System.NotSupportedException>eccezione.</xref:System.NotSupportedException> </xref:System.Web.UI.DataSourceView> Se si estende la <xref:System.Web.UI.DataSourceView>classe, eseguire l&quot;override del metodo ExecuteDelete se la classe supporta l&quot;eliminazione dell&quot;archivio dati sottostante.</xref:System.Web.UI.DataSourceView>"
  example:
  - "The following code example demonstrates how a class that extends the <xref:System.Web.UI.DataSourceView> class can override the <xref:System.Web.UI.DataSourceView.CanDelete%2A> property and the ExecuteDelete method. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/csharp/84991e4a-bbbd-47a3-bfea-_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/add/codesnippet/visualbasic/84991e4a-bbbd-47a3-bfea-_1.vb)]"
  syntax:
    content: protected virtual int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>delle chiavi di riga o oggetto da eliminare dall&quot;operazione ExecuteDelete.</xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>di coppie nome/valore che rappresentano gli elementi di dati e i valori originali.</xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "Il numero di elementi che sono stati eliminati dall&quot;archivio dati sottostante."
  overload: System.Web.UI.DataSourceView.ExecuteDelete*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "L&quot;operazione di ExecuteDelete non è supportata per il <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: DataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Esegue un&quot;operazione di inserimento nell&quot;elenco di dati che il <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> oggetto rappresenta."
  remarks: "Controlli con associazione a dati è possono determinare se l&quot;operazione ExecuteInsert è supportata da un controllo origine dati recuperando il <xref:System.Web.UI.DataSourceView>utilizzando il <xref:System.Web.UI.DataSourceControl.GetView%2A>metodo e verifica il <xref:System.Web.UI.DataSourceView.CanInsert%2A>proprietà.</xref:System.Web.UI.DataSourceView.CanInsert%2A> </xref:System.Web.UI.DataSourceControl.GetView%2A> </xref:System.Web.UI.DataSourceView>       Il `values` parametro è un set di coppie nome/valore che rappresenta le colonne di dati o i campi e valori corrispondenti da inserire.      > [!NOTE] > Il <xref:System.Web.UI.DataSourceView>implementazione predefinita della classe consiste nel generare un <xref:System.NotSupportedException>eccezione.</xref:System.NotSupportedException> </xref:System.Web.UI.DataSourceView> Se si estende la <xref:System.Web.UI.DataSourceView>classe, eseguire l&quot;override del metodo ExecuteInsert se la classe supporta l&quot;inserimento nell&quot;archivio dati sottostante.</xref:System.Web.UI.DataSourceView>"
  example:
  - "The following code example demonstrates how a class that extends the <xref:System.Web.UI.DataSourceView> class can override the <xref:System.Web.UI.DataSourceView.CanInsert%2A> property and the ExecuteInsert method. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/csharp/m-system.web.ui.datasour_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/add/codesnippet/visualbasic/m-system.web.ui.datasour_0_1.vb)]"
  syntax:
    content: protected virtual int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>delle coppie nome/valore utilizzate durante un&quot;operazione di inserimento.</xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "Il numero di elementi che sono stati inseriti nell&quot;archivio dati sottostante."
  overload: System.Web.UI.DataSourceView.ExecuteInsert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "L&quot;operazione di ExecuteInsert non è supportata per il <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: DataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.DataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un elenco di dati dall&quot;archivio dati sottostante."
  remarks: "Viene chiamato il metodo ExecuteSelect per recuperare dati dall&quot;archivio dati sottostante e restituirlo come un <xref:System.Collections.IEnumerable>oggetto.</xref:System.Collections.IEnumerable> Tutti i controlli origine dati supportano il recupero di dati dall&quot;archivio dati sottostante, anche se non sono supportate altre operazioni, ad esempio l&quot;inserimento e l&quot;ordinamento. Poiché un controllo con associazione a dati può richiedere un elenco di dati in qualsiasi momento come risultato di una <xref:System.Web.UI.IDataSource.DataSourceChanged>evento o un <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>chiamata al metodo, il recupero di dati deve essere eseguito su richiesta.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> </xref:System.Web.UI.IDataSource.DataSourceChanged>"
  example:
  - "The following code example demonstrates how to override the ExecuteSelect method in a class that extends the <xref:System.Web.UI.DataSourceView> class. The `CsvDataSourceView` opens a comma-separated value (.csv) file, parses it line by line, and creates a <xref:System.Data.DataTable> object and a <xref:System.Data.DataView> object to hold the data in memory. Finally, a sort expression is applied if one is supplied by the <xref:System.Web.UI.DataSourceSelectArguments> object, and the <xref:System.Data.DataView> object is returned as an <xref:System.Collections.IEnumerable> instance. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/add/codesnippet/csharp/9907e30e-e760-42a4-aba2-_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/add/codesnippet/visualbasic/9907e30e-e760-42a4-aba2-_1.vb)]"
  syntax:
    content: protected abstract System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "Oggetto <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> che viene usato per richiedere operazioni sui dati oltre il recupero dei dati di base."
    return:
      type: System.Collections.IEnumerable
      description: "Un <xref:System.Collections.IEnumerable>elenco di dati dall&quot;archivio dati sottostante.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.DataSourceView.ExecuteSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Esegue un&quot;operazione di aggiornamento nell&quot;elenco di dati che il <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> oggetto rappresenta."
  remarks: "Controlli con associazione a dati è possono determinare se l&quot;operazione ExecuteUpdate è supportato da un controllo origine dati utilizzando il <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName>metodo per recuperare il <xref:System.Web.UI.DataSourceView>oggetto e controllando il valore del <xref:System.Web.UI.DataSourceView.CanUpdate%2A>proprietà.</xref:System.Web.UI.DataSourceView.CanUpdate%2A> </xref:System.Web.UI.DataSourceView> </xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=fullName>       Il `keys` parametro rappresenta le chiavi di oggetto o della riga di dati da aggiornare. Per le origini dati che rappresentano dati relazionali, ad esempio il <xref:System.Web.UI.WebControls.SqlDataSource>(controllo), il `keys` parametro è una raccolta di chiavi primarie del database.</xref:System.Web.UI.WebControls.SqlDataSource> In altri scenari, il `keys` parametro è una raccolta di coppie nome/valore e viene utilizzato per filtrare un elenco di dati. Tutti i dati corrispondenti a una coppia nome/valore viene aggiornati con i valori, vedere il `values` parametro, che è un set di coppie nome/valore che rappresenta i nuovi valori per colonne o campi esistenti.      > [!NOTE] > Il <xref:System.Web.UI.DataSourceView>implementazione predefinita della classe consiste nel generare un <xref:System.NotSupportedException>eccezione.</xref:System.NotSupportedException> </xref:System.Web.UI.DataSourceView> Se si estende la <xref:System.Web.UI.DataSourceView>classe, sostituire il metodo ExecuteUpdate se la classe supporta l&quot;aggiornamento dei dati nell&quot;archivio dati sottostante.</xref:System.Web.UI.DataSourceView>"
  example:
  - "The following code example demonstrates how a class that extends the <xref:System.Web.UI.DataSourceView> class can override the <xref:System.Web.UI.DataSourceView.CanUpdate%2A> property and the ExecuteUpdate method. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceView> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/csharp/41646def-d513-4cd2-ab48-_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/add/codesnippet/visualbasic/41646def-d513-4cd2-ab48-_1.vb)]"
  syntax:
    content: protected virtual int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>delle chiavi di riga o oggetto da aggiornare tramite l&quot;operazione di aggiornamento.</xref:System.Collections.IDictionary>"
    - id: values
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>di coppie nome/valore che rappresentano gli elementi di dati e i nuovi valori.</xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>di coppie nome/valore che rappresentano gli elementi di dati e i valori originali.</xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "Il numero di elementi che sono stati aggiornati nell&quot;archivio dati sottostante."
  overload: System.Web.UI.DataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "L&quot;operazione di ExecuteUpdate non è supportata per il <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  id: Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Insert(IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Esegue un&quot;operazione asincrona di inserimento nell&quot;elenco di dati che il <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> oggetto rappresenta."
  remarks: "Il metodo di inserimento è l&quot;interfaccia di inserimento dati asincrona per tutti gli oggetti di vista origine dati. Le chiamate del metodo Insert di <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>utilizzando qualsiasi metodo `values` fornito.</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> Il `callback` parametro è un delegato che un controllo con associazione a dati passa all&quot;origine dati controllo di visualizzazione, che viene utilizzata per notificare l&quot;associazione a dati quando il <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>operazione è stata completata.</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> Il metodo utilizza i parametri del <xref:System.Web.UI.DataSourceViewOperationCallback>delegato da restituire il numero di record interessati e qualsiasi <xref:System.Exception>eccezione generata dal <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>chiamata al metodo.</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> </xref:System.Exception> </xref:System.Web.UI.DataSourceViewOperationCallback>"
  syntax:
    content: public virtual void Insert (System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>delle coppie nome/valore utilizzate durante un&quot;operazione di inserimento.</xref:System.Collections.IDictionary>"
    - id: callback
      type: System.Web.UI.DataSourceViewOperationCallback
      description: "Oggetto <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;> </xref> delegato utilizzato per notificare a un controllo con associazione a dati una volta completata l&quot;operazione asincrona."
  overload: System.Web.UI.DataSourceView.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;></xref> supplied is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Name
  id: Name
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Name
  nameWithType: DataSourceView.Name
  fullName: System.Web.UI.DataSourceView.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene il nome della vista origine dati."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Il nome del <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref>, se presente. Il valore predefinito è &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.DataSourceView.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  id: OnDataSourceViewChanged(System.EventArgs)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: OnDataSourceViewChanged(EventArgs)
  nameWithType: DataSourceView.OnDataSourceViewChanged(EventArgs)
  fullName: System.Web.UI.DataSourceView.OnDataSourceViewChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Genera il <xref href=&quot;System.Web.UI.DataSourceView.DataSourceViewChanged&quot;> </xref> evento."
  remarks: "Il metodo OnDataSourceViewChanged notifica a un controllo con associazione a dati che l&quot;origine dati sottostante è stata modificata e che il controllo deve riassociare ed eseguire le operazioni necessarie. In genere, il metodo OnDataSourceViewChanged viene chiamato quando viene modificata una proprietà della vista origine dati.       Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: generazione di un evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Il metodo OnDataSourceViewChanged consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected virtual void OnDataSourceViewChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.DataSourceView.OnDataSourceViewChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  id: RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Chiamato dal <> </> *> metodo per confrontare le funzionalità richieste per un <> </> *> operazione rispetto a quelle che supporta la visualizzazione."
  remarks: "Il metodo RaiseUnsupportedCapabilityError viene utilizzato dalla vista origine dati per esaminare tutte le funzionalità richieste da un controllo con associazione a dati, rappresentato dal <xref:System.Web.UI.DataSourceSelectArguments>oggetto passato per il <xref:System.Web.UI.DataSourceView.Select%2A>(metodo) e confronto per le funzionalità supportata dalla vista origine dati.</xref:System.Web.UI.DataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments>"
  syntax:
    content: protected virtual void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);
    parameters:
    - id: capability
      type: System.Web.UI.DataSourceCapabilities
      description: "Uno del <xref href=&quot;System.Web.UI.DataSourceCapabilities&quot;> </xref> valori che viene confrontato con le funzionalità che supporta la visualizzazione."
  overload: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La vista origine dati non supporta la funzionalità dell&quot;origine dati specificata."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  id: Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  nameWithType: DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  fullName: System.Web.UI.DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ottiene un elenco di dati in modo asincrono dall&quot;archivio dati sottostante."
  remarks: "Il metodo Select è l&quot;interfaccia di recupero asincrono dei dati per tutti gli oggetti di vista origine dati. Le chiamate del metodo Select di <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>, passando qualsiasi <xref:System.Web.UI.DataSourceSelectArguments>fornito.</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> Il `callback` parametro è un delegato che un controllo con associazione a dati passa all&quot;origine dati controllo di visualizzazione, che viene utilizzata per notificare l&quot;associazione a dati quando il <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>operazione è stata completata.</xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> I dati restituiti dal <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>chiamata viene restituita nel parametro di <xref:System.Web.UI.DataSourceViewSelectCallback>delegare.</xref:System.Web.UI.DataSourceViewSelectCallback> </xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>"
  syntax:
    content: public virtual void Select (System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.DataSourceViewSelectCallback callback);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "Oggetto <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> che viene usato per richiedere operazioni sui dati oltre il recupero dei dati di base."
    - id: callback
      type: System.Web.UI.DataSourceViewSelectCallback
      description: "Oggetto <xref href=&quot;System.Web.UI.DataSourceViewSelectCallback&quot;> </xref> delegato utilizzato per notificare a un controllo con associazione a dati una volta completata l&quot;operazione asincrona."
  overload: System.Web.UI.DataSourceView.Select*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.DataSourceViewSelectCallback&quot;></xref> supplied is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Esegue un&quot;operazione di aggiornamento asincrono nell&quot;elenco di dati che il <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> oggetto rappresenta."
  remarks: "Il metodo di aggiornamento è l&quot;interfaccia di modifica dati asincrona per tutti gli oggetti di vista origine dati. Le chiamate al metodo Update di <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>utilizzando qualsiasi metodo `keys`, `values`, e `oldValues` valori dei parametri forniti.</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> Il `callback` parametro è un delegato che un controllo con associazione a dati passa all&quot;origine dati controllo di visualizzazione, che viene utilizzata per notificare l&quot;associazione a dati quando il <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>operazione è stata completata.</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> Il metodo utilizza i parametri del <xref:System.Web.UI.DataSourceViewOperationCallback>delegato da restituire il numero di record interessati e qualsiasi <xref:System.Exception>eccezione generata dal <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>chiamare.</xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> </xref:System.Exception> </xref:System.Web.UI.DataSourceViewOperationCallback>"
  syntax:
    content: public virtual void Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>delle chiavi di riga o oggetto da aggiornare tramite l&quot;operazione di aggiornamento.</xref:System.Collections.IDictionary>"
    - id: values
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>di coppie nome/valore che rappresentano gli elementi di dati e i nuovi valori.</xref:System.Collections.IDictionary>"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Un <xref:System.Collections.IDictionary>di coppie nome/valore che rappresentano gli elementi di dati e i valori originali.</xref:System.Collections.IDictionary>"
    - id: callback
      type: System.Web.UI.DataSourceViewOperationCallback
      description: "Oggetto <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;> </xref> delegato utilizzato per notificare a un controllo con associazione a dati una volta completata l&quot;operazione asincrona."
  overload: System.Web.UI.DataSourceView.Update*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.DataSourceViewOperationCallback&quot;></xref> supplied is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: DataSourceView(IDataSource,String)
  nameWithType: DataSourceView.DataSourceView(IDataSource,String)
  fullName: System.Web.UI.DataSourceView.DataSourceView(IDataSource,String)
- uid: System.Web.UI.IDataSource
  parent: System.Web.UI
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.DataSourceView.CanDelete
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: DataSourceView.CanDelete
  fullName: System.Web.UI.DataSourceView.CanDelete
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.DataSourceView.CanExecute(System.String)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanExecute(String)
  nameWithType: DataSourceView.CanExecute(String)
  fullName: System.Web.UI.DataSourceView.CanExecute(String)
- uid: System.Web.UI.DataSourceView.CanInsert
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: DataSourceView.CanInsert
  fullName: System.Web.UI.DataSourceView.CanInsert
- uid: System.Web.UI.DataSourceView.CanPage
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanPage
  nameWithType: DataSourceView.CanPage
  fullName: System.Web.UI.DataSourceView.CanPage
- uid: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: DataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.DataSourceView.CanSort
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanSort
  nameWithType: DataSourceView.CanSort
  fullName: System.Web.UI.DataSourceView.CanSort
- uid: System.Web.UI.DataSourceView.CanUpdate
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: DataSourceView.CanUpdate
  fullName: System.Web.UI.DataSourceView.CanUpdate
- uid: System.Web.UI.DataSourceView.DataSourceViewChanged
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: DataSourceViewChanged
  nameWithType: DataSourceView.DataSourceViewChanged
  fullName: System.Web.UI.DataSourceView.DataSourceViewChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Delete(IDictionary,IDictionary,DataSourceViewOperationCallback)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.DataSourceViewOperationCallback
  parent: System.Web.UI
  isExternal: false
  name: DataSourceViewOperationCallback
  nameWithType: DataSourceViewOperationCallback
  fullName: System.Web.UI.DataSourceViewOperationCallback
- uid: System.Web.UI.DataSourceView.Events
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Events
  nameWithType: DataSourceView.Events
  fullName: System.Web.UI.DataSourceView.Events
- uid: System.ComponentModel.EventHandlerList
  parent: System.ComponentModel
  isExternal: false
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteCommand(String,IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.ExecuteCommand(String,IDictionary,IDictionary,DataSourceViewOperationCallback)
- uid: System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: DataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: DataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.DataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.DataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Insert(IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Insert(IDictionary,DataSourceViewOperationCallback)
- uid: System.Web.UI.DataSourceView.Name
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Name
  nameWithType: DataSourceView.Name
  fullName: System.Web.UI.DataSourceView.Name
- uid: System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: OnDataSourceViewChanged(EventArgs)
  nameWithType: DataSourceView.OnDataSourceViewChanged(EventArgs)
  fullName: System.Web.UI.DataSourceView.OnDataSourceViewChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
- uid: System.Web.UI.DataSourceCapabilities
  parent: System.Web.UI
  isExternal: false
  name: DataSourceCapabilities
  nameWithType: DataSourceCapabilities
  fullName: System.Web.UI.DataSourceCapabilities
- uid: System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  nameWithType: DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
  fullName: System.Web.UI.DataSourceView.Select(DataSourceSelectArguments,DataSourceViewSelectCallback)
- uid: System.Web.UI.DataSourceViewSelectCallback
  parent: System.Web.UI
  isExternal: false
  name: DataSourceViewSelectCallback
  nameWithType: DataSourceViewSelectCallback
  fullName: System.Web.UI.DataSourceViewSelectCallback
- uid: System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  nameWithType: DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
  fullName: System.Web.UI.DataSourceView.Update(IDictionary,IDictionary,IDictionary,DataSourceViewOperationCallback)
- uid: System.Web.UI.DataSourceView.#ctor*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView.DataSourceView
- uid: System.Web.UI.DataSourceView.CanDelete*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: DataSourceView.CanDelete
- uid: System.Web.UI.DataSourceView.CanExecute*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanExecute
  nameWithType: DataSourceView.CanExecute
- uid: System.Web.UI.DataSourceView.CanInsert*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: DataSourceView.CanInsert
- uid: System.Web.UI.DataSourceView.CanPage*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanPage
  nameWithType: DataSourceView.CanPage
- uid: System.Web.UI.DataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: DataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.DataSourceView.CanSort*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanSort
  nameWithType: DataSourceView.CanSort
- uid: System.Web.UI.DataSourceView.CanUpdate*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: DataSourceView.CanUpdate
- uid: System.Web.UI.DataSourceView.Delete*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Delete
  nameWithType: DataSourceView.Delete
- uid: System.Web.UI.DataSourceView.Events*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Events
  nameWithType: DataSourceView.Events
- uid: System.Web.UI.DataSourceView.ExecuteCommand*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteCommand
  nameWithType: DataSourceView.ExecuteCommand
- uid: System.Web.UI.DataSourceView.ExecuteDelete*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: DataSourceView.ExecuteDelete
- uid: System.Web.UI.DataSourceView.ExecuteInsert*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: DataSourceView.ExecuteInsert
- uid: System.Web.UI.DataSourceView.ExecuteSelect*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: DataSourceView.ExecuteSelect
- uid: System.Web.UI.DataSourceView.ExecuteUpdate*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: DataSourceView.ExecuteUpdate
- uid: System.Web.UI.DataSourceView.Insert*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Insert
  nameWithType: DataSourceView.Insert
- uid: System.Web.UI.DataSourceView.Name*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Name
  nameWithType: DataSourceView.Name
- uid: System.Web.UI.DataSourceView.OnDataSourceViewChanged*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: OnDataSourceViewChanged
  nameWithType: DataSourceView.OnDataSourceViewChanged
- uid: System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError
  nameWithType: DataSourceView.RaiseUnsupportedCapabilityError
- uid: System.Web.UI.DataSourceView.Select*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Select
  nameWithType: DataSourceView.Select
- uid: System.Web.UI.DataSourceView.Update*
  parent: System.Web.UI.DataSourceView
  isExternal: false
  name: Update
  nameWithType: DataSourceView.Update
