### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Model.AttachedProperty
  id: AttachedProperty
  children:
  - System.Activities.Presentation.Model.AttachedProperty.#ctor
  - System.Activities.Presentation.Model.AttachedProperty.GetValue(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
  - System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
  - System.Activities.Presentation.Model.AttachedProperty.Name
  - System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.AttachedProperty.OwnerType
  - System.Activities.Presentation.Model.AttachedProperty.ResetValue(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.AttachedProperty.SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)
  - System.Activities.Presentation.Model.AttachedProperty.Type
  langs:
  - csharp
  name: AttachedProperty
  nameWithType: AttachedProperty
  fullName: System.Activities.Presentation.Model.AttachedProperty
  type: Class
  summary: "Utilizzato per associare o allegare informazioni aggiuntive all&quot;istanza di un oggetto."
  remarks: "Viene utilizzato dal [!INCLUDE[wfd1](~/add/includes/wfd1-md.md)] per tenere traccia di dati significativi durante una sessione di modifica per i dati che sarebbero altrimenti temporanei e che verranno rimossi (praticamente tutti) alla fine di una sessione di modifica. Proprietà associata è utile come elementi di `View` possibile associare i valori e le modifiche. Ad esempio, si tratta di modo che venga visualizzato il modello di elemento selezionato (deriva da una proprietà associata per la selezione)."
  syntax:
    content: public abstract class AttachedProperty
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: AttachedProperty()
  nameWithType: AttachedProperty.AttachedProperty()
  fullName: System.Activities.Presentation.Model.AttachedProperty.AttachedProperty()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Activities.Presentation.Model.AttachedProperty&quot;> </xref> classe."
  syntax:
    content: protected AttachedProperty ();
    parameters: []
  overload: System.Activities.Presentation.Model.AttachedProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.GetValue(System.Activities.Presentation.Model.ModelItem)
  id: GetValue(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: GetValue(ModelItem)
  nameWithType: AttachedProperty.GetValue(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.GetValue(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Recupera il valore dell&quot;elemento del modello specificato."
  syntax:
    content: public abstract object GetValue (System.Activities.Presentation.Model.ModelItem modelItem);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "Elemento del modello."
    return:
      type: System.Object
      description: "Restituisce un <xref:System.Object>che contiene il valore dell&quot;elemento del modello.</xref:System.Object>"
  overload: System.Activities.Presentation.Model.AttachedProperty.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
  id: IsBrowsable
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: IsBrowsable
  nameWithType: AttachedProperty.IsBrowsable
  fullName: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Ottiene o imposta un valore booleano che indica se il <xref href=&quot;System.Activities.Presentation.Model.AttachedProperty&quot;> </xref> è esplorabile."
  remarks: "L&quot;impatto di questa impostazione primario `true` è che il <xref:System.Activities.Presentation.Model.AttachedProperty>potranno essere individuati all&quot;interno di <xref:System.Activities.Presentation.Model.ModelItem.Properties%2A>insieme del <xref:System.Activities.Presentation.Model.ModelItem>a cui è collegata.</xref:System.Activities.Presentation.Model.ModelItem> </xref:System.Activities.Presentation.Model.ModelItem.Properties%2A> </xref:System.Activities.Presentation.Model.AttachedProperty>"
  syntax:
    content: public bool IsBrowsable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Activities.Presentation.Model.AttachedProperty&quot;> </xref> può essere esaminato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
  id: IsReadOnly
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: AttachedProperty.IsReadOnly
  fullName: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Ottiene un valore che determina se la proprietà associata è di sola lettura."
  syntax:
    content: public abstract bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la proprietà è di sola lettura. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.Name
  id: Name
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: Name
  nameWithType: AttachedProperty.Name
  fullName: System.Activities.Presentation.Model.AttachedProperty.Name
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Ottiene o imposta il nome della proprietà."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Restituisce un <xref:System.String>che contiene il nome della proprietà.</xref:System.String>"
  overload: System.Activities.Presentation.Model.AttachedProperty.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)
  id: NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: NotifyPropertyChanged(ModelItem)
  nameWithType: AttachedProperty.NotifyPropertyChanged(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Crea una notifica che indica che l&quot;elemento del modello specificato è stato modificato."
  syntax:
    content: public void NotifyPropertyChanged (System.Activities.Presentation.Model.ModelItem modelItem);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "L&quot;elemento che è stato modificato."
  overload: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.OwnerType
  id: OwnerType
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: OwnerType
  nameWithType: AttachedProperty.OwnerType
  fullName: System.Activities.Presentation.Model.AttachedProperty.OwnerType
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Ottiene o imposta il tipo di proprietario."
  syntax:
    content: public Type OwnerType { get; set; }
    return:
      type: System.Type
      description: "Restituisce un <xref:System.Type>che contiene il tipo di proprietario.</xref:System.Type>"
  overload: System.Activities.Presentation.Model.AttachedProperty.OwnerType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.ResetValue(System.Activities.Presentation.Model.ModelItem)
  id: ResetValue(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: ResetValue(ModelItem)
  nameWithType: AttachedProperty.ResetValue(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.ResetValue(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Reimposta il valore predefinito l&quot;elemento del modello specificato."
  syntax:
    content: public abstract void ResetValue (System.Activities.Presentation.Model.ModelItem modelItem);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "Elemento del modello da reimpostare."
  overload: System.Activities.Presentation.Model.AttachedProperty.ResetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)
  id: SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: SetValue(ModelItem,Object)
  nameWithType: AttachedProperty.SetValue(ModelItem,Object)
  fullName: System.Activities.Presentation.Model.AttachedProperty.SetValue(ModelItem,Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Imposta l&quot;elemento del modello specificato sul valore specificato."
  syntax:
    content: public abstract void SetValue (System.Activities.Presentation.Model.ModelItem modelItem, object value);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "Elemento del modello da impostare."
    - id: value
      type: System.Object
      description: "Il valore da impostare."
  overload: System.Activities.Presentation.Model.AttachedProperty.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.Type
  id: Type
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: Type
  nameWithType: AttachedProperty.Type
  fullName: System.Activities.Presentation.Model.AttachedProperty.Type
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Ottiene il tipo."
  syntax:
    content: public abstract Type Type { get; }
    return:
      type: System.Type
      description: "Restituisce un <xref:System.Type>che contiene il tipo.</xref:System.Type>"
  overload: System.Activities.Presentation.Model.AttachedProperty.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.Model.AttachedProperty.#ctor
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: AttachedProperty()
  nameWithType: AttachedProperty.AttachedProperty()
  fullName: System.Activities.Presentation.Model.AttachedProperty.AttachedProperty()
- uid: System.Activities.Presentation.Model.AttachedProperty.GetValue(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: GetValue(ModelItem)
  nameWithType: AttachedProperty.GetValue(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.GetValue(ModelItem)
- uid: System.Activities.Presentation.Model.ModelItem
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
- uid: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: IsBrowsable
  nameWithType: AttachedProperty.IsBrowsable
  fullName: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: IsReadOnly
  nameWithType: AttachedProperty.IsReadOnly
  fullName: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
- uid: System.Activities.Presentation.Model.AttachedProperty.Name
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: Name
  nameWithType: AttachedProperty.Name
  fullName: System.Activities.Presentation.Model.AttachedProperty.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: NotifyPropertyChanged(ModelItem)
  nameWithType: AttachedProperty.NotifyPropertyChanged(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(ModelItem)
- uid: System.Activities.Presentation.Model.AttachedProperty.OwnerType
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: OwnerType
  nameWithType: AttachedProperty.OwnerType
  fullName: System.Activities.Presentation.Model.AttachedProperty.OwnerType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Model.AttachedProperty.ResetValue(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: ResetValue(ModelItem)
  nameWithType: AttachedProperty.ResetValue(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.ResetValue(ModelItem)
- uid: System.Activities.Presentation.Model.AttachedProperty.SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: SetValue(ModelItem,Object)
  nameWithType: AttachedProperty.SetValue(ModelItem,Object)
  fullName: System.Activities.Presentation.Model.AttachedProperty.SetValue(ModelItem,Object)
- uid: System.Activities.Presentation.Model.AttachedProperty.Type
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: Type
  nameWithType: AttachedProperty.Type
  fullName: System.Activities.Presentation.Model.AttachedProperty.Type
- uid: System.Activities.Presentation.Model.AttachedProperty.#ctor*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: AttachedProperty
  nameWithType: AttachedProperty.AttachedProperty
- uid: System.Activities.Presentation.Model.AttachedProperty.GetValue*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: GetValue
  nameWithType: AttachedProperty.GetValue
- uid: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: IsBrowsable
  nameWithType: AttachedProperty.IsBrowsable
- uid: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: IsReadOnly
  nameWithType: AttachedProperty.IsReadOnly
- uid: System.Activities.Presentation.Model.AttachedProperty.Name*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: Name
  nameWithType: AttachedProperty.Name
- uid: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: NotifyPropertyChanged
  nameWithType: AttachedProperty.NotifyPropertyChanged
- uid: System.Activities.Presentation.Model.AttachedProperty.OwnerType*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: OwnerType
  nameWithType: AttachedProperty.OwnerType
- uid: System.Activities.Presentation.Model.AttachedProperty.ResetValue*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: ResetValue
  nameWithType: AttachedProperty.ResetValue
- uid: System.Activities.Presentation.Model.AttachedProperty.SetValue*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: SetValue
  nameWithType: AttachedProperty.SetValue
- uid: System.Activities.Presentation.Model.AttachedProperty.Type*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: Type
  nameWithType: AttachedProperty.Type
