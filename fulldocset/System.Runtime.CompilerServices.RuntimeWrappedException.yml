### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.RuntimeWrappedException
  id: RuntimeWrappedException
  children:
  - System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  langs:
  - csharp
  name: RuntimeWrappedException
  nameWithType: RuntimeWrappedException
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException
  type: Class
  summary: "Esegue il wrapping di un&quot;eccezione che non deriva dalla <xref:System.Exception>classe.</xref:System.Exception> Questa classe non può essere ereditata."
  remarks: "Alcuni linguaggi, ad esempio C++, consentono di generare eccezioni di qualsiasi tipo gestito.  Altri linguaggi, ad esempio Microsoft c# e Visual Basic, è necessario che ogni eccezione generata sia derivata dalla <xref:System.Exception>classe.</xref:System.Exception>  Per mantenere la compatibilità tra i linguaggi, common language runtime (CLR) esegue il wrapping di oggetti che non derivano da <xref:System.Exception>in un oggetto RuntimeWrappedException.</xref:System.Exception>       È possibile utilizzare la <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute>classe per specificare se le eccezioni devono apparire incapsulate in blocchi catch e i filtri eccezioni per un assembly.</xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute>  Per impostazione predefinita per specificare il comportamento di ritorno a capo, molti compilatori di linguaggio, inclusi i compilatori Microsoft c# e Visual Basic, applicano questo attributo.       Si noti che il runtime esegue l&quot;incapsulamento delle eccezioni anche se si utilizza la <xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute>classe per specificare che devono essere incapsulate.</xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute>  In questo caso, le eccezioni vengono annullato il wrapping solo all&quot;interno di blocchi catch o i filtri eccezioni."
  example:
  - "The following code example demonstrates how to throw a <xref:System.String> object as an exception in C++ and catch it using a RuntimeWrappedException object.  \n  \n [!code-cpp[System.Runtime.CompilerServices.RuntimeWrappedException#1](~/add/codesnippet/cpp/t-system.runtime.compile_12_1.cpp)]"
  syntax:
    content: 'public sealed class RuntimeWrappedException : Exception'
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: "Imposta il <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> oggetto con le informazioni sull&quot;eccezione."
  remarks: "Il metodo GetObjectData imposta un <xref:System.Runtime.Serialization.SerializationInfo>oggetto con tutti i dati dell&quot;oggetto eccezione destinati alla serializzazione.</xref:System.Runtime.Serialization.SerializationInfo> Durante la deserializzazione, l&quot;eccezione viene ricostituita dal `SerializationInfo` trasmesso sul flusso."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Il <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> oggetto che contiene i dati oggetto serializzati relativi all&quot;eccezione generata."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Il <xref:System.Runtime.Serialization.StreamingContext>oggetto che contiene le informazioni contestuali sull&quot;origine o destinazione.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>info</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  id: WrappedException
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  langs:
  - csharp
  name: WrappedException
  nameWithType: RuntimeWrappedException.WrappedException
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.CompilerServices
  summary: "Ottiene l&quot;oggetto che è stato eseguito il wrapping di <xref href=&quot;System.Runtime.CompilerServices.RuntimeWrappedException&quot;> </xref> oggetto."
  remarks: "La proprietà WrappedException Ottiene un oggetto che è stato generato un&quot;eccezione da un linguaggio che supporta le eccezioni che non derivano dalla <xref:System.Exception>classe.</xref:System.Exception>"
  syntax:
    content: public object WrappedException { get; }
    return:
      type: System.Object
      description: "L&quot;oggetto che è stato eseguito il wrapping di <xref href=&quot;System.Runtime.CompilerServices.RuntimeWrappedException&quot;> </xref> oggetto."
  overload: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: WrappedException
  nameWithType: RuntimeWrappedException.WrappedException
  fullName: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.GetObjectData*
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: GetObjectData
  nameWithType: RuntimeWrappedException.GetObjectData
- uid: System.Runtime.CompilerServices.RuntimeWrappedException.WrappedException*
  parent: System.Runtime.CompilerServices.RuntimeWrappedException
  isExternal: false
  name: WrappedException
  nameWithType: RuntimeWrappedException.WrappedException
