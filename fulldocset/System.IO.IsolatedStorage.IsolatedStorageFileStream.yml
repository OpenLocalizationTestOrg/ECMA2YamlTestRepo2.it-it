### YamlMime:ManagedReference
items:
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream
  id: IsolatedStorageFileStream
  children:
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(System.IAsyncResult)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(System.Boolean)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Length
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Position
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(System.Int64,System.Int64)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)
  langs:
  - csharp
  name: IsolatedStorageFileStream
  nameWithType: IsolatedStorageFileStream
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream
  type: Class
  summary: "Espone un file all&quot;interno di memorizzazione isolato."
  remarks: "Utilizzare questa classe per leggere, scrivere e creare i file nell&quot;archiviazione isolata.       Poiché questa classe estende <xref:System.IO.FileStream>, è possibile utilizzare un&quot;istanza di IsolatedStorageFileStream nella maggior parte dei casi in cui un <xref:System.IO.FileStream>potrebbero essere utilizzate in caso contrario, ad esempio per costruire un <xref:System.IO.StreamReader>o <xref:System.IO.StreamWriter>.</xref:System.IO.StreamWriter> </xref:System.IO.StreamReader> </xref:System.IO.FileStream> </xref:System.IO.FileStream>       Questo tipo implementa il <xref:System.IDisposable>interfaccia.</xref:System.IDisposable> Dopo aver utilizzando il tipo, è necessario eliminarlo di esso direttamente o indirettamente. Per eliminare direttamente il tipo, chiamare il relativo <xref:System.IDisposable.Dispose%2A>metodo in un `try` / `catch` blocco.</xref:System.IDisposable.Dispose%2A> Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio, ad esempio `using` (in c#) o `Using` (in Visual Basic). Per ulteriori informazioni, vedere la sezione &quot;Utilizzo di oggetti che implementano IDisposable&quot; nel <xref:System.IDisposable>argomento relativo all&quot;interfaccia.</xref:System.IDisposable>      > [!IMPORTANT] > Spazio di memorizzazione isolato non è disponibile per [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] app. Utilizzare invece le classi di dati nell&quot;applicazione di `Windows.Storage` spazi dei nomi inclusi nel [!INCLUDE[wrt](~/add/includes/wrt-md.md)] API per archiviare i dati e file locali. Per ulteriori informazioni, vedere [dati dell&quot;applicazione](http://go.microsoft.com/fwlink/?LinkId=229175) in Windows Dev Center."
  example:
  - "The following console application demonstrates how you can use <xref:System.IO.IsolatedStorage.IsolatedStorageFile> and IsolatedStorageFileStream to write data to an Isolated Storage file. The user is requested to log in. If the user is a new user, a News URL and a Sports URL are recorded as personal preferences in Isolated Storage. If the user is a returning user, the user's current preferences are displayed. The code examples used throughout this namespace are presented in the context of this sample application. You can use the [Storeadm.exe (Isolated Storage Tool)](~/add/includes/ajax-current-ext-md.md) utility to list and remove the Isolated Storage files that are created with this console application.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#1](~/add/codesnippet/visualbasic/t-system.io.isolatedstor_2_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#1](~/add/codesnippet/cpp/t-system.io.isolatedstor_2_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#1](~/add/codesnippet/csharp/t-system.io.isolatedstor_2_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class IsolatedStorageFileStream : System.IO.FileStream
  inheritance:
  - System.IO.Stream
  - System.IO.FileStream
  implements: []
  inheritedMembers:
  - System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.FileStream.GetAccessControl
  - System.IO.FileStream.Name
  - System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)
  - System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)
  id: '#ctor(System.String,System.IO.FileMode)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: IsolatedStorageFileStream(String,FileMode)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Inizializza una nuova istanza di un <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto dando accesso al file designato da <code> path </code> specificato <code> mode </code>."
  remarks: "L&quot;archivio isolato che viene utilizzato l&quot;ambito è dall&quot;identità dell&quot;assembly in esecuzione corrente e quello del dominio di applicazione in cui è in esecuzione. Questo archivio rimarrà aperto solo per la durata di <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>oggetto.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> Per specificare un ambito diverso di memorizzazione isolato, o per consentire all&quot;archivio di rimanere aperti (in modo più <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>gli oggetti possono essere aperti da esso), utilizzare la forma del costruttore che accetta un <xref:System.IO.IsolatedStorage.IsolatedStorageFile>oggetto.</xref:System.IO.IsolatedStorage.IsolatedStorageFile> </xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>       Il `mode` parametro indica se è necessario creare un nuovo file, usata uno esistente e così via.      > [!CAUTION] > Quando si esegue la compilazione di un set di caratteri con una lingua specifica e recuperano gli stessi caratteri con una lingua diversa, i caratteri potrebbero non essere interpretati e può provocare un&quot;eccezione generata."
  syntax:
    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso relativo del file nell&quot;archiviazione isolata."
    - id: mode
      type: System.IO.FileMode
      description: "Uno del <xref href=&quot;System.IO.FileMode&quot;> </xref> valori."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> path </code> non è corretto."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "La directory in <code> path </code> non esiste."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "È stato trovato alcun file e <code> mode </code> è impostato su<xref href=&quot;System.IO.FileMode&quot;></xref>"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: IsolatedStorageFileStream(String,FileMode,FileAccess)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> classe dando accesso al file designato da <code> path </code>, nell&quot;oggetto specificato <code> mode </code>, con il tipo di <code> access </code> richiesto."
  remarks: "L&quot;archivio isolato che viene utilizzato l&quot;ambito è dall&quot;identità dell&quot;assembly in esecuzione corrente e quello del dominio di applicazione in cui è in esecuzione. Questo archivio rimarrà aperto solo per la durata di <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>oggetto.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> Per specificare un ambito diverso di memorizzazione isolato, o per consentire all&quot;archivio di rimanere aperti (in modo più <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>gli oggetti possono essere aperti da esso), utilizzare la forma del costruttore che accetta un <xref:System.IO.IsolatedStorage.IsolatedStorageFile>oggetto.</xref:System.IO.IsolatedStorage.IsolatedStorageFile> </xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>       Il `mode` parametro indica se è necessario creare un nuovo file o utilizzarne uno esistente. Il `access` parametro include di sola lettura, lettura/scrittura, lettura e scrittura.      > [!CAUTION] > Quando si esegue la compilazione di un set di caratteri con una lingua specifica e recuperano gli stessi caratteri con una lingua diversa, i caratteri potrebbero non essere interpretati e può provocare un&quot;eccezione generata."
  syntax:
    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso relativo del file nell&quot;archiviazione isolata."
    - id: mode
      type: System.IO.FileMode
      description: "Uno del <xref href=&quot;System.IO.FileMode&quot;> </xref> valori."
    - id: access
      type: System.IO.FileAccess
      description: "Combinazione bit per bit di <xref href=&quot;System.IO.FileAccess&quot;> </xref> valori."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> path </code> non è corretto."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "È stato trovato alcun file e <code> mode </code> è impostato su <xref href=&quot;System.IO.FileMode&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: IsolatedStorageFileStream(String,FileMode,IsolatedStorageFile)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,IsolatedStorageFile)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Inizializza una nuova istanza del <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> classe dando accesso al file designato da <code> path </code>, nell&quot;oggetto specificato <code> mode </code>e nel contesto di <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFile&quot;> </xref> specificato da <code> isf </code>."
  remarks: "Il `mode` parametro indica se è necessario creare un nuovo file, usata uno esistente e così via.      > [!CAUTION] > Quando si esegue la compilazione di un set di caratteri con una lingua specifica e recuperano gli stessi caratteri con una lingua diversa, i caratteri potrebbero non essere interpretati e può provocare un&quot;eccezione generata."
  example:
  - "The following code example demonstrates the use of this constructor. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/visualbasic/ed0ff8fa-778f-4b06-9af8-_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/cpp/ed0ff8fa-778f-4b06-9af8-_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/csharp/ed0ff8fa-778f-4b06-9af8-_1.cs)]"
  syntax:
    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.IsolatedStorage.IsolatedStorageFile isf);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso relativo del file nell&quot;archiviazione isolata."
    - id: mode
      type: System.IO.FileMode
      description: "Uno del <xref href=&quot;System.IO.FileMode&quot;> </xref> valori."
    - id: isf
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: "Il <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFile&quot;> </xref> in cui aprire il <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> path </code> non è corretto."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "È stato trovato alcun file e <code> mode </code> è impostato su <xref href=&quot;System.IO.FileMode&quot;> </xref>."
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "<code>isf</code>non dispone di una quota."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> classe dando accesso al file designato da <code> path </code>, nell&quot;oggetto specificato <code> mode </code>, con il file specificato <code> access </code>, utilizzando la modalità specificata dalla condivisione file <code> share </code>."
  remarks: "L&quot;archivio isolato che viene utilizzato l&quot;ambito è dall&quot;identità dell&quot;assembly in esecuzione corrente e quello del dominio di applicazione in cui è in esecuzione. Questo archivio rimarrà aperto solo per la durata di <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>oggetto.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> Per specificare un ambito diverso di memorizzazione isolato, o per consentire all&quot;archivio di rimanere aperti (in modo più <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>gli oggetti possono essere aperti da esso), utilizzare la forma del costruttore che accetta un <xref:System.IO.IsolatedStorage.IsolatedStorageFile>oggetto.</xref:System.IO.IsolatedStorage.IsolatedStorageFile> </xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>      > [!CAUTION] > Quando si esegue la compilazione di un set di caratteri con una lingua specifica e recuperano gli stessi caratteri con una lingua diversa, i caratteri potrebbero non essere interpretati e può provocare un&quot;eccezione generata."
  example:
  - "The following code example demonstrates the use of this constructor. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#15](~/add/codesnippet/visualbasic/16e66ff6-8db3-485d-ac06-_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#15](~/add/codesnippet/cpp/16e66ff6-8db3-485d-ac06-_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#15](~/add/codesnippet/csharp/16e66ff6-8db3-485d-ac06-_1.cs)]"
  syntax:
    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso relativo del file nell&quot;archiviazione isolata."
    - id: mode
      type: System.IO.FileMode
      description: "Uno del <xref href=&quot;System.IO.FileMode&quot;> </xref> valori."
    - id: access
      type: System.IO.FileAccess
      description: "Combinazione bit per bit di <xref href=&quot;System.IO.FileAccess&quot;> </xref> valori."
    - id: share
      type: System.IO.FileShare
      description: "Combinazione bit per bit di <xref href=&quot;System.IO.FileShare&quot;> </xref> valori."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> path </code> non è corretto."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "È stato trovato alcun file e <code> mode </code> è impostato su <xref href=&quot;System.IO.FileMode&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,IsolatedStorageFile)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,IsolatedStorageFile)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> classe dando accesso al file designato da <code> path </code> nell&quot;oggetto specificato <code> mode </code>, con il file specificato <code> access </code>e nel contesto del <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFile&quot;> </xref> specificato da <code> isf </code>."
  remarks: "Il `mode` parametro indica se è necessario creare un nuovo file o utilizzarne uno esistente. Il `access` parametro include di sola lettura, lettura/scrittura, lettura e scrittura.      > [!CAUTION] > Quando si esegue la compilazione di un set di caratteri con una lingua specifica e recuperano gli stessi caratteri con una lingua diversa, i caratteri potrebbero non essere interpretati e può provocare un&quot;eccezione generata."
  example:
  - "The following code example demonstrates the use of this constructor. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#10](~/add/codesnippet/visualbasic/404bef15-453e-4818-ab5f-_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#10](~/add/codesnippet/cpp/404bef15-453e-4818-ab5f-_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#10](~/add/codesnippet/csharp/404bef15-453e-4818-ab5f-_1.cs)]"
  syntax:
    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.IsolatedStorage.IsolatedStorageFile isf);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso relativo del file nell&quot;archiviazione isolata."
    - id: mode
      type: System.IO.FileMode
      description: "Uno del <xref href=&quot;System.IO.FileMode&quot;> </xref> valori."
    - id: access
      type: System.IO.FileAccess
      description: "Combinazione bit per bit di <xref href=&quot;System.IO.FileAccess&quot;> </xref> valori."
    - id: isf
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: "Il <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFile&quot;> </xref> in cui aprire il <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> path </code> non è corretto."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;archivio isolato è chiuso."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "È stato trovato alcun file e <code> mode </code> è impostato su <xref href=&quot;System.IO.FileMode&quot;> </xref>."
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "<code>isf</code>non dispone di una quota."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> classe dando accesso al file designato da <code> path </code>, nell&quot;oggetto specificato <code> mode </code>, con il file specificato <code> access </code>, usando la modalità specificata dalla condivisione file <code> share </code>, con il <code> buffersize </code> specificato."
  remarks: "L&quot;archivio isolato che viene utilizzato l&quot;ambito è dall&quot;identità dell&quot;assembly in esecuzione corrente e quello del dominio di applicazione in cui è in esecuzione. Questo archivio rimarrà aperto solo per la durata di <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>oggetto.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> Per specificare un ambito diverso di memorizzazione isolato, o per consentire all&quot;archivio di rimanere aperti (in modo più <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>gli oggetti possono essere aperti da esso), utilizzare la forma del costruttore che accetta un <xref:System.IO.IsolatedStorage.IsolatedStorageFile>oggetto.</xref:System.IO.IsolatedStorage.IsolatedStorageFile> </xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>       Il `mode` parametro indica se è necessario creare un nuovo file o utilizzarne uno esistente. Il `access` parametro include di sola lettura, lettura/scrittura, lettura e scrittura.      > [!CAUTION] > Quando si esegue la compilazione di un set di caratteri con una lingua specifica e recuperano gli stessi caratteri con una lingua diversa, i caratteri potrebbero non essere interpretati e può provocare un&quot;eccezione generata."
  syntax:
    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso relativo del file nell&quot;archiviazione isolata."
    - id: mode
      type: System.IO.FileMode
      description: "Uno del <xref href=&quot;System.IO.FileMode&quot;> </xref> valori."
    - id: access
      type: System.IO.FileAccess
      description: "Combinazione bit per bit di <xref href=&quot;System.IO.FileAccess&quot;> </xref> valori."
    - id: share
      type: System.IO.FileShare
      description: "Combinazione bit per bit di <xref href=&quot;System.IO.FileShare&quot;> </xref> valori."
    - id: bufferSize
      type: System.Int32
      description: "Il <xref href=&quot;System.IO.FileStream&quot;> </xref> la dimensione del buffer."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> path </code> non è corretto."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "È stato trovato alcun file e <code> mode </code> è impostato su <xref href=&quot;System.IO.FileMode&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Inizializza una nuova istanza del <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> classe dando accesso al file designato da <code> path </code>, nell&quot;oggetto specificato <code> mode </code>, con il file specificato <code> access </code>, utilizzando la modalità specificata dalla condivisione file <code> share </code>e nel contesto del <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFile&quot;> </xref> specificato da <code> isf </code>."
  remarks: "Il `mode` parametro indica se è necessario creare un nuovo file o utilizzarne uno esistente. Il `access` parametro include di sola lettura, lettura/scrittura, lettura e scrittura.      > [!CAUTION] > Quando si esegue la compilazione di un set di caratteri con una lingua specifica e recuperano gli stessi caratteri con una lingua diversa, i caratteri potrebbero non essere interpretati e può provocare un&quot;eccezione generata."
  example:
  - "The following code example demonstrates the use of this constructor. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/visualbasic/d6e9d0e2-c3f3-4d3d-941f-_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/cpp/d6e9d0e2-c3f3-4d3d-941f-_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/csharp/d6e9d0e2-c3f3-4d3d-941f-_1.cs)]"
  syntax:
    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.IO.IsolatedStorage.IsolatedStorageFile isf);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso relativo del file nell&quot;archiviazione isolata."
    - id: mode
      type: System.IO.FileMode
      description: "Uno del <xref href=&quot;System.IO.FileMode&quot;> </xref> valori."
    - id: access
      type: System.IO.FileAccess
      description: "Combinazione bit per bit di <xref href=&quot;System.IO.FileAccess&quot;> </xref> valori."
    - id: share
      type: System.IO.FileShare
      description: "Combinazione bit per bit di <xref href=&quot;System.IO.FileShare&quot;> </xref> valori."
    - id: isf
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: "Il <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFile&quot;> </xref> in cui aprire il <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> path </code> non è corretto."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "È stato trovato alcun file e <code> mode </code> è impostato su <xref href=&quot;System.IO.FileMode&quot;> </xref>."
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "<code>isf</code>non dispone di una quota."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32,IsolatedStorageFile)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32,IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32,IsolatedStorageFile)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Inizializza una nuova istanza del <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> classe dando accesso al file designato da <code> path </code>, nell&quot;oggetto specificato <code> mode </code>, con il file specificato <code> access </code>, utilizzando la modalità specificata dalla condivisione file <code> share </code>, con la <code> buffersize </code> specificate e nel contesto del <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFile&quot;> </xref> specificato da <code> isf </code>."
  remarks: "Il `mode` parametro indica se è necessario creare un nuovo file o utilizzarne uno esistente. Il `access` parametro include di sola lettura, lettura/scrittura, lettura e scrittura.      > [!CAUTION] > Quando si esegue la compilazione di un set di caratteri con una lingua specifica e recuperano gli stessi caratteri con una lingua diversa, i caratteri potrebbero non essere interpretati e può provocare un&quot;eccezione generata."
  example:
  - "The following code example demonstrates the use of this constructor. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#12](~/add/codesnippet/visualbasic/992df1ce-aff0-4ca4-9ce4-_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#12](~/add/codesnippet/cpp/992df1ce-aff0-4ca4-9ce4-_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#12](~/add/codesnippet/csharp/992df1ce-aff0-4ca4-9ce4-_1.cs)]"
  syntax:
    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize, System.IO.IsolatedStorage.IsolatedStorageFile isf);
    parameters:
    - id: path
      type: System.String
      description: "Il percorso relativo del file nell&quot;archiviazione isolata."
    - id: mode
      type: System.IO.FileMode
      description: "Uno del <xref href=&quot;System.IO.FileMode&quot;> </xref> valori."
    - id: access
      type: System.IO.FileAccess
      description: "Combinazione bit per bit di <xref href=&quot;System.IO.FileAccess&quot;> </xref> valori."
    - id: share
      type: System.IO.FileShare
      description: "Combinazione bit per bit di <xref href=&quot;System.IO.FileShare&quot;> </xref> valori"
    - id: bufferSize
      type: System.Int32
      description: "Il <xref href=&quot;System.IO.FileStream&quot;> </xref> la dimensione del buffer."
    - id: isf
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: "Il <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFile&quot;> </xref> in cui aprire il <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> path </code> non è corretto."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "È stato trovato alcun file e <code> mode </code> è impostato su <xref href=&quot;System.IO.FileMode&quot;> </xref>."
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "<code>isf</code>non dispone di una quota."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: IsolatedStorageFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Inizia una lettura asincrona."
  remarks: "La posizione corrente nel flusso viene aggiornata quando si esegue la lettura o scrittura asincrona, non al completamento dell&quot;operazione dei / o.       È necessario chiamare <xref:System.IO.Stream.EndRead%2A>con questo <xref:System.IAsyncResult>per verificare il numero di byte letti.</xref:System.IAsyncResult> </xref:System.IO.Stream.EndRead%2A>"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int numBytes, AsyncCallback userCallback, object stateObject);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Il buffer per leggere i dati."
    - id: offset
      type: System.Int32
      description: "Offset dei byte in `buffer` in corrispondenza del quale iniziare la lettura."
    - id: numBytes
      type: System.Int32
      description: "Numero massimo di byte da leggere."
    - id: userCallback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di lettura asincrona viene completata. Questo parametro è facoltativo."
    - id: stateObject
      type: System.Object
      description: "Lo stato della lettura asincrona."
    return:
      type: System.IAsyncResult
      description: "Un <xref:System.IAsyncResult>leggere l&quot;oggetto che rappresenta asincrona, che è probabilmente è ancora in sospeso.</xref:System.IAsyncResult> Questo <xref:System.IAsyncResult>deve essere passato a questo flusso <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead*>metodo per determinare il numero di byte letti.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead*> </xref:System.IAsyncResult> Questa operazione può essere eseguita tramite lo stesso codice che ha chiamato BeginRead o in un callback passato a BeginRead."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Tentativo di lettura asincrona oltre la fine del file."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: IsolatedStorageFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Inizia una scrittura asincrona."
  remarks: "Se un <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>oggetto sia accessibile in scrittura, il flusso di scrittura alla fine del flusso espande.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>       La posizione corrente nel flusso viene aggiornata quando si esegue la lettura o scrittura asincrona, non al completamento dell&quot;operazione dei / o.       È necessario chiamare <xref:System.IO.Stream.EndWrite%2A>con il <xref:System.IAsyncResult>oggetto restituito da questo metodo per determinare il numero di byte scritti.</xref:System.IAsyncResult> </xref:System.IO.Stream.EndWrite%2A>"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int numBytes, AsyncCallback userCallback, object stateObject);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Buffer in cui scrivere i dati."
    - id: offset
      type: System.Int32
      description: "Offset dei byte in `buffer` in corrispondenza del quale iniziare la scrittura."
    - id: numBytes
      type: System.Int32
      description: "Numero massimo di byte da scrivere."
    - id: userCallback
      type: System.AsyncCallback
      description: "Il metodo da chiamare quando l&quot;operazione di scrittura asincrona viene completata. Questo parametro è facoltativo."
    - id: stateObject
      type: System.Object
      description: "Lo stato della scrittura asincrona."
    return:
      type: System.IAsyncResult
      description: "Un <xref:System.IAsyncResult>che rappresenta la scrittura asincrona, che probabilmente è ancora in sospeso.</xref:System.IAsyncResult> Questo <xref:System.IAsyncResult>deve essere passato a questo flusso <> </> *> metodo per assicurarsi che la scrittura venga completata, le risorse liberate in modo appropriato.</xref:System.IAsyncResult> Questa operazione può essere eseguita tramite lo stesso codice che ha chiamato <> </> *> o in un callback passato a <xref:System.IO.Stream.BeginWrite*>.</xref:System.IO.Stream.BeginWrite*>"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Tentativo di scrittura asincrona oltre la fine del file."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead
  id: CanRead
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: CanRead
  nameWithType: IsolatedStorageFileStream.CanRead
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Ottiene un valore booleano che indica se è possibile leggere il file."
  remarks: "Utilizzare questa proprietà per determinare se il <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>oggetto può essere letti.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>"
  example:
  - "The following code example demonstrates how you could use the CanRead property, as a check to see whether a stream can be read before calling the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A> or <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A> methods. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/visualbasic/p-system.io.isolatedstor_1_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/cpp/p-system.io.isolatedstor_1_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/csharp/p-system.io.isolatedstor_1_1.cs)]"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se un <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto può essere letto; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek
  id: CanSeek
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: IsolatedStorageFileStream.CanSeek
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Ottiene un valore booleano che indica se cercare le operazioni sono supportate."
  remarks: "Utilizzare questa proprietà per determinare se il <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>oggetto supporta le operazioni di ricerca.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se un <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto supporta le operazioni di ricerca; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite
  id: CanWrite
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: IsolatedStorageFileStream.CanWrite
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Ottiene un valore booleano che indica se è possibile scrivere nel file."
  remarks: "Utilizzare questa proprietà per determinare se il <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>oggetto può essere scritti.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>"
  example:
  - "The following code example demonstrates how you could use the CanWrite property, as a check to see whether a stream can be read before calling the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write%2A> or <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A> methods. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#13](~/add/codesnippet/visualbasic/p-system.io.isolatedstor_3_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#13](~/add/codesnippet/cpp/p-system.io.isolatedstor_3_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#13](~/add/codesnippet/csharp/p-system.io.isolatedstor_3_1.cs)]"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se un <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto può essere scritto; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: IsolatedStorageFileStream.Dispose(Boolean)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Rilascia le risorse non gestite usate da di <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> e facoltativamente rilascia le risorse gestite."
  remarks: "Questo metodo viene chiamato dal metodo pubblico <xref:System.IDisposable.Dispose%2A>metodo e <xref:System.Object.Finalize%2A>metodo.</xref:System.Object.Finalize%2A> </xref:System.IDisposable.Dispose%2A> <xref:System.IDisposable.Dispose%2A>richiama il metodo Dispose protetto con il `disposing` parametro impostato su true.</xref:System.IDisposable.Dispose%2A> <xref:System.Object.Finalize%2A>richiama Dispose con `disposing` impostato su false.</xref:System.Object.Finalize%2A>       Quando il `disposing` parametro è true, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>riferimenti.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> Questo metodo richiama il <xref:System.IDisposable.Dispose%2A>metodo di ciascun oggetto cui viene fatto riferimento.</xref:System.IDisposable.Dispose%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite e non gestite. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per rilasciare solo le risorse non gestite"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: IsolatedStorageFileStream.EndRead(IAsyncResult)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Termina una richiesta di lettura asincrona in sospeso."
  remarks: "EndRead deve essere chiamato esattamente una volta per ogni <xref:System.IAsyncResult>oggetto <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A>, e la chiamata a EndRead è l&quot;unico modo per conoscere il numero di byte letti da <xref:System.IO.Stream>.</xref:System.IO.Stream> </xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A> </xref:System.IAsyncResult> EndRead verrà bloccata finché non viene completata l&quot;operazione dei / o."
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "La richiesta asincrona in sospeso."
    return:
      type: System.Int32
      description: "Il numero di byte letti dal flusso, tra zero e il numero di byte richiesto. I flussi restituiranno zero alla fine del flusso solo. In caso contrario, verranno bloccati fino a quando non è disponibile almeno&1; byte."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>asyncResult</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: IsolatedStorageFileStream.EndWrite(IAsyncResult)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Termina una scrittura asincrona."
  remarks: "EndWrite deve essere chiamato esattamente una volta ogni <xref:System.IAsyncResult> <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A>.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A> </xref:System.IAsyncResult>       EndWrite verrà bloccata finché non viene completata l&quot;operazione dei / o."
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Richiesta i/o asincrona in sospeso da terminare."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>asyncResult</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush
  id: Flush
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Flush()
  nameWithType: IsolatedStorageFileStream.Flush()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Cancella i buffer del flusso e fa sì che tutti i dati memorizzati nel buffer in cui scrivere il file."
  remarks: "Poiché un buffer può essere utilizzato per la lettura o scrittura, ma non entrambi contemporaneamente, scaricare svolge due funzioni. Innanzitutto, tutti i dati scritti in precedenza per il buffer viene copiati il file e il buffer è deselezionato. Quindi, se <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A>è `true` e dati sono stati copiati in precedenza dal file nel buffer per la lettura, la posizione corrente all&quot;interno del file viene applicata il numero di byte letti nel buffer.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A> Il buffer viene quindi cancellato.       Utilizzo di <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush%28System.Boolean%29>overload del metodo quando si desidera assicurarsi che tutti i dati memorizzati nel buffer di file intermedi vengono scritti su disco.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush%28System.Boolean%29>"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(System.Boolean)
  id: Flush(System.Boolean)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Flush(Boolean)
  nameWithType: IsolatedStorageFileStream.Flush(Boolean)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Cancella i buffer del flusso e fa sì che tutti i dati memorizzati nel buffer in cui scrivere il file e Cancella tutti i buffer di file intermedi."
  remarks: "Utilizzare questo overload quando si desidera assicurarsi che tutti i dati memorizzati nel buffer di file intermedi sia scritti su disco."
  syntax:
    content: public override void Flush (bool flushToDisk);
    parameters:
    - id: flushToDisk
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per scaricare tutti i buffer di file intermedio. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle
  id: Handle
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Handle
  nameWithType: IsolatedStorageFileStream.Handle
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Ottiene l&quot;handle di file per il file corrente <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> incapsulata dall&quot;oggetto. Accedere a questa proprietà non è consentito in un <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto e genera un <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageException&quot;> </xref>."
  remarks: "Per ulteriori informazioni, vedere <xref:System.IO.FileStream.Handle%2A>.</xref:System.IO.FileStream.Handle%2A>"
  example:
  - "The following code example demonstrates the Handle property.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#4](~/add/codesnippet/visualbasic/p-system.io.isolatedstor_4_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#4](~/add/codesnippet/cpp/p-system.io.isolatedstor_4_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#4](~/add/codesnippet/csharp/p-system.io.isolatedstor_4_1.cs)]"
  syntax:
    content: public override IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "L&quot;handle di file per il file che corrente <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> incapsulata dall&quot;oggetto."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle*
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "La proprietà Handle genera sempre questa eccezione."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync
  id: IsAsync
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: IsAsync
  nameWithType: IsolatedStorageFileStream.IsAsync
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Ottiene un valore booleano che indica se il <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto è stato aperto in modalità sincrona o asincrona."
  remarks: "Asincrona <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>non è possibile creare oggetti, a differenza di <xref:System.IO.FileStream>.</xref:System.IO.FileStream> </xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> Tuttavia, il <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A>, e <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A>i metodi sono supportati nelle istanze sincrone, con alcuni effetti negativi sulle prestazioni.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A> </xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A> </xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A> </xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A>"
  example:
  - "The following code example demonstrates how you can use the IsAsync property to verify that an <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> is synchronous. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#7](~/add/codesnippet/visualbasic/p-system.io.isolatedstor_7_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#7](~/add/codesnippet/cpp/p-system.io.isolatedstor_7_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#7](~/add/codesnippet/csharp/p-system.io.isolatedstor_7_1.cs)]"
  syntax:
    content: public override bool IsAsync { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto supporta l&quot;accesso asincrono; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length
  id: Length
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Length
  nameWithType: IsolatedStorageFileStream.Length
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Ottiene la lunghezza del <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto."
  remarks: "Lunghezza rappresenta il numero di byte attualmente presenti nel file. Non è interessato dalla quota di spazio di memorizzazione isolato."
  example:
  - "The following code example demonstrates the Length property.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/visualbasic/p-system.io.isolatedstor_6_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/cpp/p-system.io.isolatedstor_6_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/csharp/p-system.io.isolatedstor_6_1.cs)]"
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "La lunghezza di <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto in byte."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)
  id: Lock(System.Int64,System.Int64)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Lock(Int64,Int64)
  nameWithType: IsolatedStorageFileStream.Lock(Int64,Int64)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(Int64,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Impedisce ad altri processi di leggere o scrivere nel flusso."
  remarks: "Bloccando l&quot;intervallo di un flusso di file offre i thread dell&quot;accesso esclusivo processo blocco di intervallo del flusso di file."
  syntax:
    content: public override void Lock (long position, long length);
    parameters:
    - id: position
      type: System.Int64
      description: "Posizione iniziale dell&quot;intervallo da bloccare. Il valore di questo parametro deve essere uguale o maggiore di 0 (zero)."
    - id: length
      type: System.Int64
      description: "Il numero di byte da bloccare."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>position</code>o <code>length</code> è negativo."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il file viene chiuso."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Il processo non è possibile accedere al file perché un altro processo ha bloccato una parte del file."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position
  id: Position
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Position
  nameWithType: IsolatedStorageFileStream.Position
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Ottiene o imposta la posizione corrente dell&quot;oggetto corrente <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto."
  remarks: "Impostazione di questa proprietà funziona quando la <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A>proprietà `true`.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A>"
  example:
  - "The following code example uses the Position property to write data to a file.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/visualbasic/p-system.io.isolatedstor_0_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/cpp/p-system.io.isolatedstor_0_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/csharp/p-system.io.isolatedstor_0_1.cs)]"
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "La posizione corrente di questo <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "La posizione non può essere impostata su un numero negativo."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: IsolatedStorageFileStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Copia i byte dall&quot;oggetto corrente memorizzato nel buffer <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto in una matrice."
  remarks: "Il `buffer` parametro può essere un&quot;istanza del <xref:System.Buffer>, classe o una matrice di uno dei seguenti tipi: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Char>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, o <xref:System.Double>.</xref:System.Double> </xref:System.Single> </xref:System.UInt64> </xref:System.UInt32> </xref:System.UInt16> </xref:System.Int64> </xref:System.Int32> </xref:System.Int16> </xref:System.Char> </xref:System.SByte> </xref:System.Byte> </xref:System.Buffer> Il `offset` parametro fornisce l&quot;offset del byte nel buffer in corrispondenza del quale iniziare la scrittura (indice nel buffer) e `count` parametro fornisce il numero massimo di byte che verranno letti dal flusso corrente. Il valore restituito è il numero effettivo di byte letti, oppure zero se viene raggiunta la fine del flusso. Se l&quot;operazione di lettura ha esito positivo, la posizione corrente del flusso viene anticipata per il numero di byte letti. Se si verifica un&quot;eccezione, la posizione corrente del flusso viene modificata.       Il metodo Read considera il `buffer` parametro come un blocco di byte, indipendentemente dal tipo effettivo. Analogamente, il `offset` e `count` i parametri vengono sempre specificati in byte. Per `buffer` parametri diversi da matrici di byte, ciò significa che un indice di elemento deve essere moltiplicato per la dimensione dell&quot;elemento in byte, per formare un valore corretto per `offset` o `count`.       Il metodo Read restituirà zero solo se viene raggiunta la fine del flusso. In tutti gli altri casi, lettura legge sempre almeno un byte dal flusso prima della restituzione. Se non sono disponibili da dati di <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>dell&quot;oggetto al momento della chiamata di lettura, il metodo verrà bloccato fino a quando non può essere restituito almeno un byte di dati.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Buffer in cui leggere."
    - id: offset
      type: System.Int32
      description: "Offset nel buffer da cui iniziare la scrittura."
    - id: count
      type: System.Int32
      description: "Numero massimo di byte da leggere."
    return:
      type: System.Int32
      description: "Il numero totale di byte letti nel <code> buffer </code>. Questo può essere minore del numero di byte richiesti se tale numero di byte non è attualmente disponibili oppure zero se viene raggiunta la fine del flusso."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte
  id: ReadByte
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: ReadByte()
  nameWithType: IsolatedStorageFileStream.ReadByte()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Legge un singolo byte dal <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto nell&quot;archiviazione isolata."
  remarks: ''
  example:
  - "The following code example demonstrates how the ReadByte method can be used to read data from an <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/visualbasic/m-system.io.isolatedstor_13_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/cpp/m-system.io.isolatedstor_13_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/csharp/m-system.io.isolatedstor_13_1.cs)]"
  syntax:
    content: public override int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: "Il valore intero senza segno a 8 bit letto dal file di spazio di memorizzazione isolato."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle
  id: SafeFileHandle
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: SafeFileHandle
  nameWithType: IsolatedStorageFileStream.SafeFileHandle
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Ottiene un <xref href=&quot;Microsoft.Win32.SafeHandles.SafeFileHandle&quot;> </xref> oggetto che rappresenta l&quot;handle di file del sistema operativo per il file che corrente <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> incapsulata dall&quot;oggetto."
  remarks: "La proprietà SafeFileHandle non è supportata e genera sempre un&quot; <xref:System.IO.IsolatedStorage.IsolatedStorageException>eccezione.</xref:System.IO.IsolatedStorage.IsolatedStorageException>"
  syntax:
    content: public override Microsoft.Win32.SafeHandles.SafeFileHandle SafeFileHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeFileHandle
      description: "Oggetto <xref href=&quot;Microsoft.Win32.SafeHandles.SafeFileHandle&quot;> </xref> oggetto che rappresenta l&quot;handle di file del sistema operativo per il file che corrente <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> incapsulata dall&quot;oggetto."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle*
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "La proprietà SafeFileHandle genera sempre questa eccezione."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: IsolatedStorageFileStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Imposta la posizione corrente di questo <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto sul valore specificato."
  remarks: "Alcuni <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>oggetti supporta il posizionamento oltre la lunghezza del flusso, altri genererà un&quot;eccezione in questo caso.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "La nuova posizione del <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Uno del <xref:System.IO.SeekOrigin>valori.</xref:System.IO.SeekOrigin>"
    return:
      type: System.Int64
      description: "Nuova posizione all&quot;interno di <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> origin </code> deve essere uno del <xref:System.IO.SeekOrigin>valori.</xref:System.IO.SeekOrigin>"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: IsolatedStorageFileStream.SetLength(Int64)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Imposta la lunghezza di questo <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto specificata <code> value </code>."
  remarks: "Se l&quot;oggetto specificato `value` è minore della lunghezza corrente del <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>dell&quot;oggetto, il flusso viene troncato.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> Se l&quot;oggetto specificato `value` è maggiore della lunghezza corrente del flusso, il flusso viene esteso. Se il flusso è espanso, il contenuto del flusso tra il vecchio e la nuova lunghezza non è definito. Per utilizzare questo metodo, un <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>oggetto deve supportare la scrittura e ricerca.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "La lunghezza di nuovo il <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>value</code>è un numero negativo."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(System.Int64,System.Int64)
  id: Unlock(System.Int64,System.Int64)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Unlock(Int64,Int64)
  nameWithType: IsolatedStorageFileStream.Unlock(Int64,Int64)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(Int64,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Consente di accedere a tutte o parte di un file bloccato in precedenza altri processi."
  syntax:
    content: public override void Unlock (long position, long length);
    parameters:
    - id: position
      type: System.Int64
      description: "Posizione iniziale dell&quot;intervallo da sbloccare. Il valore di questo parametro deve essere uguale o maggiore di 0 (zero)."
    - id: length
      type: System.Int64
      description: "Il numero di byte da sbloccare."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>position</code>o <code>length</code> è negativo."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: IsolatedStorageFileStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Scrive un blocco di byte per il <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto usando i dati letti da una matrice di byte."
  remarks: "Il `offset` parametro fornisce l&quot;offset del byte nel `buffer` in corrispondenza del quale iniziare la lettura e `count` parametro fornisce il numero di byte che verranno scritte in questo <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>oggetto.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> Se l&quot;operazione di scrittura ha esito positivo, la posizione corrente del <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>avanzare l&quot;oggetto per il numero di byte scritti.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> Se si verifica un&quot;eccezione, la posizione corrente di <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>oggetto non viene modificato.</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Buffer in cui scrivere."
    - id: offset
      type: System.Int32
      description: "Offset dei byte nel buffer da cui iniziare."
    - id: count
      type: System.Int32
      description: "Numero massimo di byte da scrivere."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write*
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "Il tentativo di scrittura supera la quota per il <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: IsolatedStorageFileStream.WriteByte(Byte)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(Byte)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "Scrive un singolo byte di <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto."
  remarks: ''
  example:
  - "The following code example demonstrates how the WriteByte method can be used to read data from an <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/visualbasic/m-system.io.isolatedstor_8_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/cpp/m-system.io.isolatedstor_8_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/csharp/m-system.io.isolatedstor_8_1.cs)]"
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "Valore di byte da scrivere nel file di memorizzazione isolato."
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte*
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "Il tentativo di scrittura supera la quota per il <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref> oggetto."
  platform:
  - net462
references:
- uid: System.IO.FileStream
  isExternal: false
  name: System.IO.FileStream
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.IsolatedStorage.IsolatedStorageException
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageException
  nameWithType: IsolatedStorageException
  fullName: System.IO.IsolatedStorage.IsolatedStorageException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsolatedStorageFileStream(String,FileMode)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsolatedStorageFileStream(String,FileMode,FileAccess)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsolatedStorageFileStream(String,FileMode,IsolatedStorageFile)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,IsolatedStorageFile)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,IsolatedStorageFile)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,IsolatedStorageFile)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32,IsolatedStorageFile)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32,IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32,IsolatedStorageFile)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: IsolatedStorageFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: IsolatedStorageFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: CanRead
  nameWithType: IsolatedStorageFileStream.CanRead
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: CanSeek
  nameWithType: IsolatedStorageFileStream.CanSeek
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: CanWrite
  nameWithType: IsolatedStorageFileStream.CanWrite
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: IsolatedStorageFileStream.Dispose(Boolean)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(Boolean)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: IsolatedStorageFileStream.EndRead(IAsyncResult)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(IAsyncResult)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(System.IAsyncResult)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: IsolatedStorageFileStream.EndWrite(IAsyncResult)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(IAsyncResult)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Flush()
  nameWithType: IsolatedStorageFileStream.Flush()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush()
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(System.Boolean)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Flush(Boolean)
  nameWithType: IsolatedStorageFileStream.Flush(Boolean)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(Boolean)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Handle
  nameWithType: IsolatedStorageFileStream.Handle
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsAsync
  nameWithType: IsolatedStorageFileStream.IsAsync
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Length
  nameWithType: IsolatedStorageFileStream.Length
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Lock(Int64,Int64)
  nameWithType: IsolatedStorageFileStream.Lock(Int64,Int64)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(Int64,Int64)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Position
  nameWithType: IsolatedStorageFileStream.Position
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: IsolatedStorageFileStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(Byte[],Int32,Int32)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: ReadByte()
  nameWithType: IsolatedStorageFileStream.ReadByte()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte()
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: SafeFileHandle
  nameWithType: IsolatedStorageFileStream.SafeFileHandle
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle
- uid: Microsoft.Win32.SafeHandles.SafeFileHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeFileHandle
  nameWithType: SafeFileHandle
  fullName: Microsoft.Win32.SafeHandles.SafeFileHandle
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: IsolatedStorageFileStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: IsolatedStorageFileStream.SetLength(Int64)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(Int64)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(System.Int64,System.Int64)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Unlock(Int64,Int64)
  nameWithType: IsolatedStorageFileStream.Unlock(Int64,Int64)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(Int64,Int64)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: IsolatedStorageFileStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(Byte[],Int32,Int32)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: IsolatedStorageFileStream.WriteByte(Byte)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsolatedStorageFileStream
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: BeginRead
  nameWithType: IsolatedStorageFileStream.BeginRead
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: BeginWrite
  nameWithType: IsolatedStorageFileStream.BeginWrite
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: CanRead
  nameWithType: IsolatedStorageFileStream.CanRead
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: CanSeek
  nameWithType: IsolatedStorageFileStream.CanSeek
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: CanWrite
  nameWithType: IsolatedStorageFileStream.CanWrite
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Dispose
  nameWithType: IsolatedStorageFileStream.Dispose
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: EndRead
  nameWithType: IsolatedStorageFileStream.EndRead
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: EndWrite
  nameWithType: IsolatedStorageFileStream.EndWrite
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Flush
  nameWithType: IsolatedStorageFileStream.Flush
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Handle
  nameWithType: IsolatedStorageFileStream.Handle
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsAsync
  nameWithType: IsolatedStorageFileStream.IsAsync
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Length
  nameWithType: IsolatedStorageFileStream.Length
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Lock
  nameWithType: IsolatedStorageFileStream.Lock
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Position
  nameWithType: IsolatedStorageFileStream.Position
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Read
  nameWithType: IsolatedStorageFileStream.Read
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: ReadByte
  nameWithType: IsolatedStorageFileStream.ReadByte
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: SafeFileHandle
  nameWithType: IsolatedStorageFileStream.SafeFileHandle
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Seek
  nameWithType: IsolatedStorageFileStream.Seek
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: SetLength
  nameWithType: IsolatedStorageFileStream.SetLength
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Unlock
  nameWithType: IsolatedStorageFileStream.Unlock
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Write
  nameWithType: IsolatedStorageFileStream.Write
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: WriteByte
  nameWithType: IsolatedStorageFileStream.WriteByte
