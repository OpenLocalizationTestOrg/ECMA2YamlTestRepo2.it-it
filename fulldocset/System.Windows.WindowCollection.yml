### YamlMime:ManagedReference
items:
- uid: System.Windows.WindowCollection
  id: WindowCollection
  children:
  - System.Windows.WindowCollection.#ctor
  - System.Windows.WindowCollection.CopyTo(System.Windows.Window[],System.Int32)
  - System.Windows.WindowCollection.Count
  - System.Windows.WindowCollection.GetEnumerator
  - System.Windows.WindowCollection.IsSynchronized
  - System.Windows.WindowCollection.Item(System.Int32)
  - System.Windows.WindowCollection.SyncRoot
  - System.Windows.WindowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  langs:
  - csharp
  name: WindowCollection
  nameWithType: WindowCollection
  fullName: System.Windows.WindowCollection
  type: Class
  summary: "Rappresenta una raccolta di <xref href=&quot;System.Windows.Window&quot;> </xref> oggetti. Questa classe non può essere ereditata."
  syntax:
    content: 'public sealed class WindowCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.WindowCollection.#ctor
  id: '#ctor'
  parent: System.Windows.WindowCollection
  langs:
  - csharp
  name: WindowCollection()
  nameWithType: WindowCollection.WindowCollection()
  fullName: System.Windows.WindowCollection.WindowCollection()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.WindowCollection&quot;> </xref> classe."
  syntax:
    content: public WindowCollection ();
    parameters: []
  overload: System.Windows.WindowCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WindowCollection.CopyTo(System.Windows.Window[],System.Int32)
  id: CopyTo(System.Windows.Window[],System.Int32)
  parent: System.Windows.WindowCollection
  langs:
  - csharp
  name: CopyTo(Window[],Int32)
  nameWithType: WindowCollection.CopyTo(Window[],Int32)
  fullName: System.Windows.WindowCollection.CopyTo(Window[],Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Copia ogni <xref href=&quot;System.Windows.Window&quot;> </xref> oggetto nella raccolta in una matrice, iniziando dall&quot;indice specificato."
  syntax:
    content: public void CopyTo (System.Windows.Window[] array, int index);
    parameters:
    - id: array
      type: System.Windows.Window[]
      description: "Matrice di tipo <xref href=&quot;System.Windows.Window&quot;> </xref> che il <xref href=&quot;System.Windows.Window&quot;> </xref> vengono copiati gli oggetti nella raccolta."
    - id: index
      type: System.Int32
      description: "Posizione nella raccolta da cui avviare la copia da."
  overload: System.Windows.WindowCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WindowCollection.Count
  id: Count
  parent: System.Windows.WindowCollection
  langs:
  - csharp
  name: Count
  nameWithType: WindowCollection.Count
  fullName: System.Windows.WindowCollection.Count
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Ottiene il numero di <xref href=&quot;System.Windows.Window&quot;> </xref> gli oggetti contenuti nel <xref href=&quot;System.Windows.WindowCollection&quot;> </xref>."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Il numero di <xref href=&quot;System.Windows.Window&quot;> </xref> gli oggetti contenuti nel <xref href=&quot;System.Windows.WindowCollection&quot;> </xref>."
  overload: System.Windows.WindowCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WindowCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.WindowCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: WindowCollection.GetEnumerator()
  fullName: System.Windows.WindowCollection.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Restituisce un <xref:System.Collections.IEnumerator>che consente di enumerare il <xref href=&quot;System.Windows.Window&quot;> </xref> oggetti nella raccolta.</xref:System.Collections.IEnumerator>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Un <xref:System.Collections.IEnumerator>che consente di enumerare il <xref href=&quot;System.Windows.Window&quot;> </xref> oggetti nella raccolta.</xref:System.Collections.IEnumerator>"
  overload: System.Windows.WindowCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WindowCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.WindowCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: WindowCollection.IsSynchronized
  fullName: System.Windows.WindowCollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Windows.WindowCollection&quot;> </xref> oggetto è thread-safe."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: '**true** se l&quot;oggetto è thread-safe; in caso contrario, **false**.'
  overload: System.Windows.WindowCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WindowCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.WindowCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: WindowCollection.Item(Int32)
  fullName: System.Windows.WindowCollection.Item(Int32)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Ottiene il <xref href=&quot;System.Windows.Window&quot;> </xref> o <xref href=&quot;System.Windows.Navigation.NavigationWindow&quot;> </xref> oggetto in corrispondenza dell&quot;indice specificato."
  syntax:
    content: public System.Windows.Window this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "L&quot;indice dell&quot;oggetto specificato <xref href=&quot;System.Windows.Window&quot;> </xref> o <xref href=&quot;System.Windows.Navigation.NavigationWindow&quot;> </xref>."
    return:
      type: System.Windows.Window
      description: "A <xref href=&quot;System.Windows.Window&quot;></xref> or <xref href=&quot;System.Windows.Navigation.NavigationWindow&quot;></xref> object."
  overload: System.Windows.WindowCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WindowCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.WindowCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: WindowCollection.SyncRoot
  fullName: System.Windows.WindowCollection.SyncRoot
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Ottiene un oggetto che può essere usato per sincronizzare l&quot;accesso alla raccolta."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Oggetto che può essere usato per sincronizzare l&quot;accesso alla raccolta."
  overload: System.Windows.WindowCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.WindowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Windows.WindowCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: WindowCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.WindowCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia un membro. E può essere utilizzato solo quando il <xref:System.Windows.WindowCollection>esegue il cast dell&quot;istanza di un <xref:System.Collections.ICollection>interfaccia.</xref:System.Collections.ICollection> </xref:System.Windows.WindowCollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "In base zero <xref:System.Array>che riceve gli elementi copiati dal <xref href=&quot;System.Windows.WindowCollection&quot;> </xref>.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "La prima posizione nell&quot;oggetto specificato <xref:System.Array>per ricevere il contenuto copiato.</xref:System.Array>"
  overload: System.Windows.WindowCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.WindowCollection.#ctor
  parent: System.Windows.WindowCollection
  isExternal: false
  name: WindowCollection()
  nameWithType: WindowCollection.WindowCollection()
  fullName: System.Windows.WindowCollection.WindowCollection()
- uid: System.Windows.WindowCollection.CopyTo(System.Windows.Window[],System.Int32)
  parent: System.Windows.WindowCollection
  isExternal: false
  name: CopyTo(Window[],Int32)
  nameWithType: WindowCollection.CopyTo(Window[],Int32)
  fullName: System.Windows.WindowCollection.CopyTo(Window[],Int32)
- uid: System.Windows.Window[]
  parent: System.Windows
  isExternal: false
  name: Window
  nameWithType: Window
  fullName: System.Windows.Window[]
  spec.csharp:
  - uid: System.Windows.Window
    name: Window
    nameWithType: Window
    fullName: Window[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.WindowCollection.Count
  parent: System.Windows.WindowCollection
  isExternal: false
  name: Count
  nameWithType: WindowCollection.Count
  fullName: System.Windows.WindowCollection.Count
- uid: System.Windows.WindowCollection.GetEnumerator
  parent: System.Windows.WindowCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: WindowCollection.GetEnumerator()
  fullName: System.Windows.WindowCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.WindowCollection.IsSynchronized
  parent: System.Windows.WindowCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: WindowCollection.IsSynchronized
  fullName: System.Windows.WindowCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.WindowCollection.Item(System.Int32)
  parent: System.Windows.WindowCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: WindowCollection.Item(Int32)
  fullName: System.Windows.WindowCollection.Item(Int32)
- uid: System.Windows.Window
  parent: System.Windows
  isExternal: false
  name: Window
  nameWithType: Window
  fullName: System.Windows.Window
- uid: System.Windows.WindowCollection.SyncRoot
  parent: System.Windows.WindowCollection
  isExternal: false
  name: SyncRoot
  nameWithType: WindowCollection.SyncRoot
  fullName: System.Windows.WindowCollection.SyncRoot
- uid: System.Windows.WindowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Windows.WindowCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: WindowCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.WindowCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.WindowCollection.#ctor*
  parent: System.Windows.WindowCollection
  isExternal: false
  name: WindowCollection
  nameWithType: WindowCollection.WindowCollection
- uid: System.Windows.WindowCollection.CopyTo*
  parent: System.Windows.WindowCollection
  isExternal: false
  name: CopyTo
  nameWithType: WindowCollection.CopyTo
- uid: System.Windows.WindowCollection.Count*
  parent: System.Windows.WindowCollection
  isExternal: false
  name: Count
  nameWithType: WindowCollection.Count
- uid: System.Windows.WindowCollection.GetEnumerator*
  parent: System.Windows.WindowCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: WindowCollection.GetEnumerator
- uid: System.Windows.WindowCollection.IsSynchronized*
  parent: System.Windows.WindowCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: WindowCollection.IsSynchronized
- uid: System.Windows.WindowCollection.Item*
  parent: System.Windows.WindowCollection
  isExternal: false
  name: Item
  nameWithType: WindowCollection.Item
- uid: System.Windows.WindowCollection.SyncRoot*
  parent: System.Windows.WindowCollection
  isExternal: false
  name: SyncRoot
  nameWithType: WindowCollection.SyncRoot
- uid: System.Windows.WindowCollection.System#Collections#ICollection#CopyTo*
  parent: System.Windows.WindowCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: WindowCollection.System.Collections.ICollection.CopyTo
