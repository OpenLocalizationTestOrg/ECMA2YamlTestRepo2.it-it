### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter
  id: ServiceXNameTypeConverter
  children:
  - System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.#ctor
  - System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: ServiceXNameTypeConverter
  nameWithType: ServiceXNameTypeConverter
  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter
  type: Class
  summary: "Un&quot;implementazione specifica di WCF di un <xref:System.Xml.Linq.XName>convertitore di tipi che non richiede <xref:System.Xml.Linq.XName>istanze per specificare uno spazio dei nomi.</xref:System.Xml.Linq.XName> </xref:System.Xml.Linq.XName>"
  syntax:
    content: 'public class ServiceXNameTypeConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.#ctor
  id: '#ctor'
  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter
  langs:
  - csharp
  name: ServiceXNameTypeConverter()
  nameWithType: ServiceXNameTypeConverter.ServiceXNameTypeConverter()
  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ServiceXNameTypeConverter()
  type: Constructor
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.XamlIntegration
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter&quot;> </xref> classe."
  syntax:
    content: public ServiceXNameTypeConverter ();
    parameters: []
  overload: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: ServiceXNameTypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.XamlIntegration
  summary: "Ottiene un valore che indica se il convertitore può convertire un oggetto di uno tipo a un <xref:System.Xml.Linq.XName>.</xref:System.Xml.Linq.XName>"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Il contesto del descrittore del tipo"
    - id: sourceType
      type: System.Type
      description: "Tipo su cui eseguire la conversione da."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il convertitore può eseguire la conversione. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: ServiceXNameTypeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.XamlIntegration
  summary: "Ottiene un valore che indica se il convertitore può convertire un <xref:System.Xml.Linq.XName>istanza a un oggetto del tipo specificato.</xref:System.Xml.Linq.XName>"
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Il contesto del descrittore del tipo."
    - id: destinationType
      type: System.Type
      description: "Tipo da convertire."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il convertitore può eseguire la conversione. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: ServiceXNameTypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.XamlIntegration
  summary: "Converte il valore specificato in un <xref:System.Xml.Linq.XName>istanza.</xref:System.Xml.Linq.XName>"
  remarks: "Questo metodo non aggiungerà uno spazio dei nomi predefinito se non è specificata nell&quot;oggetto da convertire."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Il contesto del descrittore del tipo."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Le impostazioni cultura correnti."
    - id: value
      type: System.Object
      description: "Oggetto da convertire."
    return:
      type: System.Object
      description: "Valore convertito."
  overload: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: ServiceXNameTypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.ServiceModel.Activities
  namespace: System.ServiceModel.XamlIntegration
  summary: "Converte un <xref:System.Xml.Linq.XName>istanza a un oggetto del tipo specificato.</xref:System.Xml.Linq.XName>"
  remarks: "Questo metodo restituisce un nome locale non qualificato se è disponibile nessuno spazio dei nomi di <xref:System.Xml.Linq.XName>da convertire.</xref:System.Xml.Linq.XName> Un nome locale non qualificato è un <xref:System.Xml.Linq.XName>che contiene nessuno spazio dei nomi.</xref:System.Xml.Linq.XName>"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Il contesto del descrittore del tipo."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Le impostazioni cultura correnti."
    - id: value
      type: System.Object
      description: "Valore da convertire."
    - id: destinationType
      type: System.Type
      description: "Il tipo per convertire il valore."
    return:
      type: System.Object
      description: "Valore convertito."
  overload: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.#ctor
  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter
  isExternal: false
  name: ServiceXNameTypeConverter()
  nameWithType: ServiceXNameTypeConverter.ServiceXNameTypeConverter()
  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ServiceXNameTypeConverter()
- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: ServiceXNameTypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: ServiceXNameTypeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: ServiceXNameTypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: ServiceXNameTypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.#ctor*
  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter
  isExternal: false
  name: ServiceXNameTypeConverter
  nameWithType: ServiceXNameTypeConverter.ServiceXNameTypeConverter
- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertFrom*
  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: ServiceXNameTypeConverter.CanConvertFrom
- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.CanConvertTo*
  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: ServiceXNameTypeConverter.CanConvertTo
- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertFrom*
  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: ServiceXNameTypeConverter.ConvertFrom
- uid: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter.ConvertTo*
  parent: System.ServiceModel.XamlIntegration.ServiceXNameTypeConverter
  isExternal: false
  name: ConvertTo
  nameWithType: ServiceXNameTypeConverter.ConvertTo
