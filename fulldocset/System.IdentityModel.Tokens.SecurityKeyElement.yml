### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SecurityKeyElement
  id: SecurityKeyElement
  children:
  - System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SecurityKeyElement.DecryptKey(System.String,System.Byte[])
  - System.IdentityModel.Tokens.SecurityKeyElement.EncryptKey(System.String,System.Byte[])
  - System.IdentityModel.Tokens.SecurityKeyElement.IsAsymmetricAlgorithm(System.String)
  - System.IdentityModel.Tokens.SecurityKeyElement.IsSupportedAlgorithm(System.String)
  - System.IdentityModel.Tokens.SecurityKeyElement.IsSymmetricAlgorithm(System.String)
  - System.IdentityModel.Tokens.SecurityKeyElement.KeySize
  langs:
  - csharp
  name: SecurityKeyElement
  nameWithType: SecurityKeyElement
  fullName: System.IdentityModel.Tokens.SecurityKeyElement
  type: Class
  summary: "Fornisce la risoluzione ritardata di chiavi di sicurezza mediante la risoluzione di <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref> o <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref> solo quando sono necessari funzioni di crittografia. In questo modo un identificatore di chiave o di clausola identificatore di chiave che non viene mai utilizzato da un&quot;applicazione per la serializzazione e deserialzied e disattivare la trasmissione senza problemi."
  syntax:
    content: 'public class SecurityKeyElement : System.IdentityModel.Tokens.SecurityKey'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKey
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: '#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Selectors.SecurityTokenResolver)'
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  langs:
  - csharp
  name: SecurityKeyElement(SecurityKeyIdentifier,SecurityTokenResolver)
  nameWithType: SecurityKeyElement.SecurityKeyElement(SecurityKeyIdentifier,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SecurityKeyElement.SecurityKeyElement(SecurityKeyIdentifier,SecurityTokenResolver)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyElement&quot;> </xref> classe dall&quot;identificatore di chiave specificato."
  syntax:
    content: public SecurityKeyElement (System.IdentityModel.Tokens.SecurityKeyIdentifier securityKeyIdentifier, System.IdentityModel.Selectors.SecurityTokenResolver securityTokenResolver);
    parameters:
    - id: securityKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "Un identificatore di chiave che rappresenta un <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref>."
    - id: securityTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "Un resolver dei token che può essere risolta in un <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SecurityKeyElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityKeyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: '#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Selectors.SecurityTokenResolver)'
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  langs:
  - csharp
  name: SecurityKeyElement(SecurityKeyIdentifierClause,SecurityTokenResolver)
  nameWithType: SecurityKeyElement.SecurityKeyElement(SecurityKeyIdentifierClause,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SecurityKeyElement.SecurityKeyElement(SecurityKeyIdentifierClause,SecurityTokenResolver)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyElement&quot;> </xref> classe da una clausola dell&quot;identificatore di chiave specificata."
  syntax:
    content: public SecurityKeyElement (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause, System.IdentityModel.Selectors.SecurityTokenResolver securityTokenResolver);
    parameters:
    - id: securityKeyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "Una clausola identificatore di chiave che rappresenta un <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref>."
    - id: securityTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "Un resolver dei token che può essere risolta in un <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SecurityKeyElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityKeyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyElement.DecryptKey(System.String,System.Byte[])
  id: DecryptKey(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  langs:
  - csharp
  name: DecryptKey(String,Byte[])
  nameWithType: SecurityKeyElement.DecryptKey(String,Byte[])
  fullName: System.IdentityModel.Tokens.SecurityKeyElement.DecryptKey(String,Byte[])
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Decrittografa la chiave specificata utilizzando l&quot;algoritmo specificato."
  syntax:
    content: public override byte[] DecryptKey (string algorithm, byte[] keyData);
    parameters:
    - id: algorithm
      type: System.String
      description: "L&quot;algoritmo da utilizzare per decrittografare la chiave."
    - id: keyData
      type: System.Byte[]
      description: "Matrice che contiene la chiave crittografata."
    return:
      type: System.Byte[]
      description: "Matrice che contiene la chiave decrittografata."
  overload: System.IdentityModel.Tokens.SecurityKeyElement.DecryptKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyElement.EncryptKey(System.String,System.Byte[])
  id: EncryptKey(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  langs:
  - csharp
  name: EncryptKey(String,Byte[])
  nameWithType: SecurityKeyElement.EncryptKey(String,Byte[])
  fullName: System.IdentityModel.Tokens.SecurityKeyElement.EncryptKey(String,Byte[])
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Crittografa la chiave specificata utilizzando l&quot;algoritmo specificato."
  syntax:
    content: public override byte[] EncryptKey (string algorithm, byte[] keyData);
    parameters:
    - id: algorithm
      type: System.String
      description: "L&quot;algoritmo da utilizzare per decrittografare la chiave."
    - id: keyData
      type: System.Byte[]
      description: "Matrice che contiene la chiave da crittografare."
    return:
      type: System.Byte[]
      description: "Matrice che contiene la chiave crittografata."
  overload: System.IdentityModel.Tokens.SecurityKeyElement.EncryptKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyElement.IsAsymmetricAlgorithm(System.String)
  id: IsAsymmetricAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  langs:
  - csharp
  name: IsAsymmetricAlgorithm(String)
  nameWithType: SecurityKeyElement.IsAsymmetricAlgorithm(String)
  fullName: System.IdentityModel.Tokens.SecurityKeyElement.IsAsymmetricAlgorithm(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Restituisce un valore che indica se l&quot;algoritmo specificato è asimmetrica."
  syntax:
    content: public override bool IsAsymmetricAlgorithm (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "L&quot;algoritmo da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;algoritmo verrà elaborato dal runtime come asimmetrica; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SecurityKeyElement.IsAsymmetricAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyElement.IsSupportedAlgorithm(System.String)
  id: IsSupportedAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  langs:
  - csharp
  name: IsSupportedAlgorithm(String)
  nameWithType: SecurityKeyElement.IsSupportedAlgorithm(String)
  fullName: System.IdentityModel.Tokens.SecurityKeyElement.IsSupportedAlgorithm(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Restituisce un valore che indica se l&quot;algoritmo specificato è supportato da questa chiave."
  syntax:
    content: public override bool IsSupportedAlgorithm (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "L&quot;algoritmo da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;algoritmo è supportato da questa chiave. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SecurityKeyElement.IsSupportedAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyElement.IsSymmetricAlgorithm(System.String)
  id: IsSymmetricAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  langs:
  - csharp
  name: IsSymmetricAlgorithm(String)
  nameWithType: SecurityKeyElement.IsSymmetricAlgorithm(String)
  fullName: System.IdentityModel.Tokens.SecurityKeyElement.IsSymmetricAlgorithm(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Restituisce un valore che indica se l&quot;algoritmo specificato è simmetrica."
  syntax:
    content: public override bool IsSymmetricAlgorithm (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "L&quot;algoritmo da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;algoritmo verrà elaborato dal runtime come simmetrica. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SecurityKeyElement.IsSymmetricAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyElement.KeySize
  id: KeySize
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  langs:
  - csharp
  name: KeySize
  nameWithType: SecurityKeyElement.KeySize
  fullName: System.IdentityModel.Tokens.SecurityKeyElement.KeySize
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ottiene le dimensioni della chiave in bit."
  syntax:
    content: public override int KeySize { get; }
    return:
      type: System.Int32
      description: "Le dimensioni della chiave in bit."
  overload: System.IdentityModel.Tokens.SecurityKeyElement.KeySize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityKey
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityKey
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  isExternal: false
  name: SecurityKeyElement(SecurityKeyIdentifier,SecurityTokenResolver)
  nameWithType: SecurityKeyElement.SecurityKeyElement(SecurityKeyIdentifier,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SecurityKeyElement.SecurityKeyElement(SecurityKeyIdentifier,SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  isExternal: false
  name: SecurityKeyElement(SecurityKeyIdentifierClause,SecurityTokenResolver)
  nameWithType: SecurityKeyElement.SecurityKeyElement(SecurityKeyIdentifierClause,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SecurityKeyElement.SecurityKeyElement(SecurityKeyIdentifierClause,SecurityTokenResolver)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityKeyElement.DecryptKey(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  isExternal: false
  name: DecryptKey(String,Byte[])
  nameWithType: SecurityKeyElement.DecryptKey(String,Byte[])
  fullName: System.IdentityModel.Tokens.SecurityKeyElement.DecryptKey(String,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SecurityKeyElement.EncryptKey(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  isExternal: false
  name: EncryptKey(String,Byte[])
  nameWithType: SecurityKeyElement.EncryptKey(String,Byte[])
  fullName: System.IdentityModel.Tokens.SecurityKeyElement.EncryptKey(String,Byte[])
- uid: System.IdentityModel.Tokens.SecurityKeyElement.IsAsymmetricAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  isExternal: false
  name: IsAsymmetricAlgorithm(String)
  nameWithType: SecurityKeyElement.IsAsymmetricAlgorithm(String)
  fullName: System.IdentityModel.Tokens.SecurityKeyElement.IsAsymmetricAlgorithm(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyElement.IsSupportedAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  isExternal: false
  name: IsSupportedAlgorithm(String)
  nameWithType: SecurityKeyElement.IsSupportedAlgorithm(String)
  fullName: System.IdentityModel.Tokens.SecurityKeyElement.IsSupportedAlgorithm(String)
- uid: System.IdentityModel.Tokens.SecurityKeyElement.IsSymmetricAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  isExternal: false
  name: IsSymmetricAlgorithm(String)
  nameWithType: SecurityKeyElement.IsSymmetricAlgorithm(String)
  fullName: System.IdentityModel.Tokens.SecurityKeyElement.IsSymmetricAlgorithm(String)
- uid: System.IdentityModel.Tokens.SecurityKeyElement.KeySize
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  isExternal: false
  name: KeySize
  nameWithType: SecurityKeyElement.KeySize
  fullName: System.IdentityModel.Tokens.SecurityKeyElement.KeySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SecurityKeyElement.#ctor*
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  isExternal: false
  name: SecurityKeyElement
  nameWithType: SecurityKeyElement.SecurityKeyElement
- uid: System.IdentityModel.Tokens.SecurityKeyElement.DecryptKey*
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  isExternal: false
  name: DecryptKey
  nameWithType: SecurityKeyElement.DecryptKey
- uid: System.IdentityModel.Tokens.SecurityKeyElement.EncryptKey*
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  isExternal: false
  name: EncryptKey
  nameWithType: SecurityKeyElement.EncryptKey
- uid: System.IdentityModel.Tokens.SecurityKeyElement.IsAsymmetricAlgorithm*
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  isExternal: false
  name: IsAsymmetricAlgorithm
  nameWithType: SecurityKeyElement.IsAsymmetricAlgorithm
- uid: System.IdentityModel.Tokens.SecurityKeyElement.IsSupportedAlgorithm*
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  isExternal: false
  name: IsSupportedAlgorithm
  nameWithType: SecurityKeyElement.IsSupportedAlgorithm
- uid: System.IdentityModel.Tokens.SecurityKeyElement.IsSymmetricAlgorithm*
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  isExternal: false
  name: IsSymmetricAlgorithm
  nameWithType: SecurityKeyElement.IsSymmetricAlgorithm
- uid: System.IdentityModel.Tokens.SecurityKeyElement.KeySize*
  parent: System.IdentityModel.Tokens.SecurityKeyElement
  isExternal: false
  name: KeySize
  nameWithType: SecurityKeyElement.KeySize
