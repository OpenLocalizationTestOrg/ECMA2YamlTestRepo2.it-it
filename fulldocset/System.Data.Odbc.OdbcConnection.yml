### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcConnection
  id: OdbcConnection
  children:
  - System.Data.Odbc.OdbcConnection.#ctor
  - System.Data.Odbc.OdbcConnection.#ctor(System.String)
  - System.Data.Odbc.OdbcConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.Odbc.OdbcConnection.BeginTransaction
  - System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)
  - System.Data.Odbc.OdbcConnection.Close
  - System.Data.Odbc.OdbcConnection.ConnectionString
  - System.Data.Odbc.OdbcConnection.ConnectionTimeout
  - System.Data.Odbc.OdbcConnection.CreateCommand
  - System.Data.Odbc.OdbcConnection.CreateDbCommand
  - System.Data.Odbc.OdbcConnection.Database
  - System.Data.Odbc.OdbcConnection.DataSource
  - System.Data.Odbc.OdbcConnection.Dispose(System.Boolean)
  - System.Data.Odbc.OdbcConnection.Driver
  - System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  - System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.Odbc.OdbcConnection.GetSchema
  - System.Data.Odbc.OdbcConnection.GetSchema(System.String)
  - System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])
  - System.Data.Odbc.OdbcConnection.InfoMessage
  - System.Data.Odbc.OdbcConnection.Open
  - System.Data.Odbc.OdbcConnection.ReleaseObjectPool
  - System.Data.Odbc.OdbcConnection.ServerVersion
  - System.Data.Odbc.OdbcConnection.State
  - System.Data.Odbc.OdbcConnection.System#ICloneable#Clone
  langs:
  - csharp
  name: OdbcConnection
  nameWithType: OdbcConnection
  fullName: System.Data.Odbc.OdbcConnection
  type: Class
  summary: "Rappresenta una connessione aperta a un&quot;origine dati."
  remarks: "Un oggetto OdbcConnection rappresenta una connessione univoca a un&quot;origine dati creata utilizzando una stringa di connessione o il nome di origine dati ODBC (DSN). Con un sistema di database client/server, è equivalente a una connessione di rete al server. A seconda delle funzionalità supportate dal driver ODBC native, alcuni metodi o proprietà di un oggetto OdbcConnection potrebbe non essere disponibili.       L&quot;oggetto OdbcConnection utilizza le risorse native, ad esempio gli handle di connessione e dell&quot;ambiente ODBC. È necessario chiudere sempre in modo esplicito qualsiasi oggetto OdbcConnection aperto chiamando <xref:System.Data.Odbc.OdbcConnection.Close%2A>o **Dispose** prima OdbcConnection oggetto esce dall&quot;ambito o inserendo la connessione all&quot;interno di un `Using` istruzione.</xref:System.Data.Odbc.OdbcConnection.Close%2A> Ciò non lascia la liberazione di tali risorse native a garbage collection. La liberazione potrebbe non essere immediatamente. Questa operazione, a sua volta, può infine che il driver sottostante esaurimento delle risorse o raggiungere un limite massimo. Questo ha comportato errori intermittenti. Ad esempio, potrebbero verificarsi `Maximum Connections` -errori correlati, mentre un numero di connessioni in attesa di essere eliminato dal garbage collector. In modo esplicito la chiusura delle connessioni consente un utilizzo più efficiente delle risorse native, aumento della scalabilità e migliorando le prestazioni complessive dell&quot;applicazione.      > [!NOTE] > Per distribuire applicazioni ad alte prestazioni, è spesso necessario usare il pool di connessioni. Tuttavia, quando si utilizza il Provider di dati .NET Framework per ODBC, non è necessario abilitare il pool di connessioni perché il provider gestito automaticamente.       Se uno del `Execute` metodi la <xref:System.Data.Odbc.OdbcCommand>classe causa un errore irreversibile <xref:System.Data.Odbc.OdbcException>(ad esempio, SQL Server livello di gravità pari a 20 o superiore), è possibile chiudere OdbcConnection.</xref:System.Data.Odbc.OdbcException> </xref:System.Data.Odbc.OdbcCommand> L&quot;utente può tuttavia riaprire la connessione e continuare.       Un&quot;applicazione che crea un&quot;istanza dell&quot;oggetto OdbcConnection può richiedere a tutti i chiamanti diretti e indiretti disporre di autorizzazioni sufficienti per il codice dalle richieste di sicurezza dichiarativo o imperativo di impostazione. OdbcConnection crea richieste di sicurezza utilizzando il <xref:System.Data.Odbc.OdbcPermission>oggetto.</xref:System.Data.Odbc.OdbcPermission> Gli utenti possono verificare che il codice disponga di autorizzazioni sufficienti mediante il <xref:System.Data.Odbc.OdbcPermissionAttribute>oggetto.</xref:System.Data.Odbc.OdbcPermissionAttribute> Utenti e amministratori possono inoltre utilizzare lo strumento Criteri di sicurezza dall&quot;accesso di codice (Caspol.exe) per modificare i criteri di sicurezza a livello aziendale, computer e utente. Per ulteriori informazioni, vedere [sicurezza dall&quot;accesso di codice e ADO.NET](~/add/includes/ajax-current-ext-md.md).       Per ulteriori informazioni sulla gestione dei messaggi di avviso e informativi dall&quot;origine dati, vedere [gli eventi di connessione](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcCommand> and an OdbcConnection. The OdbcConnection is opened and set as the <xref:System.Data.Odbc.OdbcCommand.Connection%2A> property. The example then calls <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>, and closes the connection. To accomplish this, the <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.  \n  \n [!code-vb[Classic WebData OdbcConnection#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcc_3_1.vb)]\n [!code-cs[Classic WebData OdbcConnection#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcc_3_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("InfoMessage")]

      public sealed class OdbcConnection : System.Data.Common.DbConnection, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.DbProviderFactory
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: OdbcConnection()
  nameWithType: OdbcConnection.OdbcConnection()
  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> classe."
  remarks: "Quando una nuova istanza della <xref:System.Data.Odbc.OdbcConnection>viene creata, la sola scrittura e lettura proprietà vengono impostate sui valori iniziali di seguito, a meno che non siano impostate in modo specifico mediante le parole chiave associate nel <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>proprietà.</xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> </xref:System.Data.Odbc.OdbcConnection>      | Proprietà | Il valore iniziale |   |----------------|-------------------|   | <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>| una stringa vuota (&quot;&quot;) |   | <xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.Odbc.OdbcConnection.Database%2A>| una stringa vuota (&quot;&quot;) |       È possibile modificare il valore per queste proprietà solo se si utilizza il <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>proprietà.</xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> </xref:System.Data.Odbc.OdbcConnection.Database%2A> </xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A> </xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>"
  example:
  - "The following example creates and opens an <xref:System.Data.Odbc.OdbcConnection>.  \n  \n [!code-cs[Classic WebData OdbcConnection.OdbcConnection#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_9_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.OdbcConnection#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_9_1.vb)]"
  syntax:
    content: public OdbcConnection ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: OdbcConnection(String)
  nameWithType: OdbcConnection.OdbcConnection(String)
  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> classe con la stringa di connessione specificata."
  remarks: "Quando una nuova istanza della <xref:System.Data.Odbc.OdbcConnection>viene creata, la sola scrittura e lettura proprietà vengono impostate sui valori iniziali di seguito, a meno che non siano impostate in modo specifico mediante le parole chiave associate nel <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>proprietà.</xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> </xref:System.Data.Odbc.OdbcConnection>      | Proprietà | Il valore iniziale |   |----------------|-------------------|   | <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>| `connectionString`|   | <xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|&15; |   | <xref:System.Data.Odbc.OdbcConnection.Database%2A>| una stringa vuota (&quot;&quot;) |       È possibile modificare il valore per queste proprietà solo se si utilizza il <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>proprietà.</xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> </xref:System.Data.Odbc.OdbcConnection.Database%2A> </xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A> </xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>"
  example:
  - "The following example creates and opens an <xref:System.Data.Odbc.OdbcConnection>.  \n  \n [!code-vb[Classic WebData OdbcConnection.OdbcConnection1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_3_1.vb)]\n [!code-cs[Classic WebData OdbcConnection.OdbcConnection1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_3_1.cs)]"
  syntax:
    content: public OdbcConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "La connessione utilizzata per aprire l&quot;origine dati."
  overload: System.Data.Odbc.OdbcConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OdbcConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.Odbc.OdbcConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "Da aggiungere."
    return:
      type: System.Data.Common.DbTransaction
      description: "Da aggiungere."
  overload: System.Data.Odbc.OdbcConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: OdbcConnection.BeginTransaction()
  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Avvia una transazione all&quot;origine dati."
  remarks: "Per eseguire il commit o il rollback della transazione, è necessario utilizzare in modo esplicito il <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>o <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A>metodi.</xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> </xref:System.Data.Odbc.OdbcTransaction.Commit%2A>       Per assicurarsi che venga eseguito correttamente il Provider di dati .NET Framework per il modello di gestione delle transazioni ODBC, evitare di utilizzare altri modelli di gestione delle transazioni, ad esempio quelli forniti dall&quot;origine dati.      > [!NOTE] > Se non si specifica un livello di isolamento, il livello di isolamento dipenderanno dal driver in uso. Per specificare un livello di isolamento con il metodo BeginTransaction, utilizzare l&quot;overload che accetta il `isolevel` parametro."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and an <xref:System.Data.Odbc.OdbcTransaction>. It also demonstrates how to use the BeginTransaction, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, and <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_6_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_6_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcTransaction
      description: "Oggetto che rappresenta la nuova transazione."
  overload: System.Data.Odbc.OdbcConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una transazione è attiva. Le transazioni parallele non sono supportate."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: OdbcConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Avvia una transazione all&quot;origine dati con l&quot;oggetto specificato <xref href=&quot;System.Data.IsolationLevel&quot;> </xref> valore."
  remarks: "Per eseguire il commit o il rollback della transazione, è necessario utilizzare in modo esplicito il <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>o <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A>metodi.</xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> </xref:System.Data.Odbc.OdbcTransaction.Commit%2A>       Per assicurarsi che venga eseguito correttamente il Provider di dati .NET Framework per il modello di gestione delle transazioni ODBC, evitare di utilizzare altri modelli di gestione delle transazioni, ad esempio quelli forniti dall&quot;origine dati."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and an <xref:System.Data.Odbc.OdbcTransaction>. It also demonstrates how to use the <xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>, <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>, and <xref:System.Data.Odbc.OdbcTransaction.Rollback%2A> methods.  \n  \n [!code-cs[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_4_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.BeginTransaction1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_4_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcTransaction BeginTransaction (System.Data.IsolationLevel isolevel);
    parameters:
    - id: isolevel
      type: System.Data.IsolationLevel
      description: "Il livello di isolamento della transazione per questa connessione. Se non si specifica un livello di isolamento, viene utilizzato il livello di isolamento predefinito per il driver."
    return:
      type: System.Data.Odbc.OdbcTransaction
      description: "Oggetto che rappresenta la nuova transazione."
  overload: System.Data.Odbc.OdbcConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Una transazione è attiva. Le transazioni parallele non sono supportate."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: OdbcConnection.ChangeDatabase(String)
  fullName: System.Data.Odbc.OdbcConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Modifica il database corrente associato a un oggetto aperto <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>."
  remarks: "Il `value` parametro deve contenere un nome di database valido e non può contenere un valore null, una stringa vuota (&quot;&quot;), o una stringa contenente solo caratteri vuoti."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and changes the current database.  \n  \n [!code-cs[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_1_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_1_1.vb)]"
  syntax:
    content: public override void ChangeDatabase (string value);
    parameters:
    - id: value
      type: System.String
      description: "Nome del database."
  overload: System.Data.Odbc.OdbcConnection.ChangeDatabase*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il nome del database non è valido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione non è aperta."
  - type: System.Data.Odbc.OdbcException
    commentId: T:System.Data.Odbc.OdbcException
    description: "Non è possibile modificare il database."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Close
  id: Close
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Close()
  nameWithType: OdbcConnection.Close()
  fullName: System.Data.Odbc.OdbcConnection.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Chiude la connessione all&quot;origine dati."
  remarks: "Il metodo Close esegue il rollback di tutte le transazioni in sospeso. È quindi rilascia la connessione al pool di connessioni o chiude la connessione se il pool di connessioni è disabilitato. Se Chiudi viene chiamato durante la gestione un <xref:System.Data.Common.DbConnection.StateChange>evento, alcuna ulteriore <xref:System.Data.Common.DbConnection.StateChange>gli eventi vengono attivati.</xref:System.Data.Common.DbConnection.StateChange> </xref:System.Data.Common.DbConnection.StateChange>       Un&quot;applicazione può chiamare Close più volte senza generare un&quot;eccezione.      > [!NOTE] > Quando si utilizza il Provider di dati .NET Framework per ODBC, non è necessario abilitare il pool di connessioni perché questa operazione è gestita automaticamente da Gestione Driver ODBC. Per ulteriori informazioni su come abilitare e disabilitare il pool di connessioni, vedere la documentazione di Microsoft Open Database Connectivity (ODBC).      > [!CAUTION] > Non chiamare Close o `Dispose` su una connessione, un DataReader o qualsiasi altro oggetto gestito di `Finalize` metodo della classe. In un finalizzatore, è necessario rilasciare solo le risorse non gestite che la classe controlla direttamente. Se la classe non dispone di risorse non gestite, non includere un `Finalize` metodo nella definizione della classe. Per ulteriori informazioni, vedere [Garbage Collection](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection>, opens it, displays some of its properties, and then closes the connection.  \n  \n [!code-vb[Classic WebData OdbcConnection.Close#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_0_1.vb)]\n [!code-cs[Classic WebData OdbcConnection.Close#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_0_1.cs)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnection.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: OdbcConnection.ConnectionString
  fullName: System.Data.Odbc.OdbcConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene o imposta la stringa utilizzata per aprire un&quot;origine dati."
  remarks: "The ConnectionString property is designed to match ODBC connection string format as closely as possible. The ConnectionString can be set only when the connection is closed, and as soon as it is set it is passed, unchanged, to the Driver Manager and the underlying driver. Therefore, the syntax for the ConnectionString must exactly match what the Driver Manager and underlying driver support.  \n  \n You can use the ConnectionString property to connect to a variety of data sources. This includes an ODBC data source name (DSN). The following example illustrates several possible connection strings.  \n  \n```  \n\"Driver={SQL Server};Server=(local);Trusted_Connection=Yes;Database=AdventureWorks;\"  \n  \n\"Driver={Microsoft ODBC for Oracle};Server=ORACLE8i7;Persist Security Info=False;Trusted_Connection=Yes\"  \n  \n\"Driver={Microsoft Access Driver (*.mdb)};DBQ=c:\\bin\\Northwind.mdb\"  \n  \n\"Driver={Microsoft Excel Driver (*.xls)};DBQ=c:\\bin\\book1.xls\"  \n  \n\"Driver={Microsoft Text Driver (*.txt; *.csv)};DBQ=c:\\bin\"  \n  \n\"DSN=dsnname\"  \n```  \n  \n> [!NOTE]\n>  The .NET Framework Data Provider for ODBC does not support the `Persist Security Info` keyword that is supported by other .NET Framework data providers. However, the ConnectionString property behaves as if `Persist Security Info` were set to `false`. This means that you cannot retrieve the password from the ConnectionString property if the connection has been opened. When the ConnectionString property is read from an <xref:System.Data.Odbc.OdbcConnection> object that has been opened, the connection string is returned minus the password. You cannot change this behavior; therefore, if the application requires the password, store it separately before calling <xref:System.Data.Odbc.OdbcConnection.Open%2A>.  \n  \n Many of the settings specified in the string have corresponding read-only properties (for example, `Server=(local)`, which corresponds to the <xref:System.Data.Odbc.OdbcConnection.DataSource%2A> property). These properties are updated after the connection is opened, except when an error is detected. In this case, none of the properties are updated. <xref:System.Data.Odbc.OdbcConnection> properties (such as <xref:System.Data.Odbc.OdbcConnection.Database%2A>) return only default settings or those settings specified in the ConnectionString.  \n  \n In the Microsoft .NET Framework version 1.0, validation of the connection string does not occur until an application calls the <xref:System.Data.Odbc.OdbcConnection.Open%2A> method. It is the responsibility of the underlying ODBC driver to validate the connection string. If the connection string contains invalid or unsupported properties, the driver may raise an <xref:System.Data.Odbc.OdbcException> at run time.  \n  \n However, in the .NET Framework version 1.1 and later versions, some basic validation of the connection string occurs as soon as you set the ConnectionString property. At that time, the data provider verifies that the connection string meets the \"keyword=value;...\" format, but it does not verify whether keywords or values are valid. The remaining verification is performed by the underlying ODBC driver when the application calls the <xref:System.Data.Odbc.OdbcConnection.Open%2A> method.  \n  \n An ODBC connection string has the following syntax:  \n  \n```  \nconnection-string ::= empty-string[;] | attribute[;] | attribute; connection-string  \nempty-string ::=  \nattribute ::= attribute-keyword=attribute-value | DRIVER=[{]attribute-value[}]  \nattribute-keyword ::= DSN | UID | PWD  \n | driver-defined-attribute-keyword  \nattribute-value ::= character-string  \ndriver-defined-attribute-keyword ::= identifier  \n```  \n  \n where `character-string` has zero or more characters; `identifier` has one or more characters; `attribute-keyword` is not case sensitive; `attribute-value` can be case sensitive; and the value of the DSN keyword does not consist only of blanks.  \n  \n Because of connection string and initialization file grammar, keywords and attribute values should be avoided that contain the characters []{}(),;?*=!@ not enclosed with braces. The value of the DSN keyword cannot consist only of blanks and should not contain leading blanks. Because of the grammar of the system information, keywords and data source names cannot contain the backslash (\\\\) character.  \n  \n Applications do not have to add braces around the attribute value after the Driver keyword unless the attribute contains a semicolon (;), in which case the braces are required. If the attribute value that the driver receives includes braces, the driver should not remove them but they should be part of the returned connection string.  \n  \n A DSN or connection string value enclosed with braces ({}) that contains any of the characters []{}(),;?*=!@ is passed intact to the driver. However, when you use these characters in a keyword, the Driver Manager returns an error when you work with file DSNs, but passes the connection string to the driver for regular connection strings. Avoid using embedded braces in a keyword value.  \n  \n The connection string may include any number of driver-defined keywords. Because the DRIVER keyword does not use information from the system, the driver must define enough keywords so that a driver can connect to a data source using only the information in the connection string. The driver defines which keywords are required to connect to the data source.  \n  \n If any keywords are repeated in the connection string, there is no guarantee which value will be selected.  \n  \n> [!NOTE]\n>  If an ODBC driver supports connection strings longer than 1024 characters, you can use a data source name (DSN) to exceed the maximum length limitation."
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "La stringa di connessione del driver ODBC che include le impostazioni, ad esempio il nome dell&quot;origine dati, necessari per stabilire la connessione iniziale. Il valore predefinito è una stringa vuota (&quot;&quot;). La lunghezza massima è di 1024 caratteri."
  overload: System.Data.Odbc.OdbcConnection.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: OdbcConnection.ConnectionTimeout
  fullName: System.Data.Odbc.OdbcConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene o imposta il tempo di attesa durante il tentativo di stabilire una connessione prima di terminare il tentativo e generare un errore."
  remarks: "A differenza dei provider di dati .NET Framework per SQL Server e OLE DB, il Provider di dati .NET Framework per ODBC non supporta l&quot;impostazione di questa proprietà come valore di stringa di connessione, perché non è una parola chiave di connessione ODBC valida. Per specificare un timeout di connessione, impostare la proprietà ConnectionTimeout prima di chiamare <xref:System.Data.Odbc.OdbcConnection.Open%2A>.</xref:System.Data.Odbc.OdbcConnection.Open%2A> Ciò equivale all&quot;impostazione ODBC `SQLSetConnectAttr` attributo SQL_ATTR_LOGIN_TIMOUT."
  syntax:
    content: public int ConnectionTimeout { get; set; }
    return:
      type: System.Int32
      description: "Tempo in secondi di attesa per una connessione per aprirla. Il valore predefinito è 15 secondi."
  overload: System.Data.Odbc.OdbcConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il valore impostato è minore di 0."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: OdbcConnection.CreateCommand()
  fullName: System.Data.Odbc.OdbcConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Crea e restituisce un <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> oggetto associato di <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>."
  syntax:
    content: public System.Data.Odbc.OdbcCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "Un <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> oggetto."
  overload: System.Data.Odbc.OdbcConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: OdbcConnection.CreateDbCommand()
  fullName: System.Data.Odbc.OdbcConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Da aggiungere."
  overload: System.Data.Odbc.OdbcConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Database
  id: Database
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Database
  nameWithType: OdbcConnection.Database
  fullName: System.Data.Odbc.OdbcConnection.Database
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il nome del database corrente o del database da utilizzare dopo l&quot;apertura di una connessione."
  remarks: "Inizialmente, la proprietà di Database è impostata nella stringa di connessione. La proprietà del Database può essere aggiornata utilizzando il <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A>metodo.</xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A> Se si modifica il database corrente utilizzando un&quot;istruzione SQL o <xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A>(metodo), viene inviato un messaggio informativo e quindi la proprietà viene aggiornata.</xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A>       Il recupero della proprietà di Database equivale a chiamare la funzione ODBC `SQLGetInfo` con il `Attribute` parametro impostato su SQL_ATTR_CURRENT_CATALOG."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and changes the current database.  \n  \n [!code-cs[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcc_1_1.cs)]\n [!code-vb[Classic WebData OdbcConnection.Database#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcc_1_1.vb)]"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "Il nome del database corrente. Il valore predefinito è una stringa vuota (&quot;&quot;) fino a quando non viene aperta la connessione."
  overload: System.Data.Odbc.OdbcConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.DataSource
  id: DataSource
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: OdbcConnection.DataSource
  fullName: System.Data.Odbc.OdbcConnection.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il nome del server o il nome file dell&quot;origine dati."
  remarks: "Il recupero della proprietà DataSource equivale a chiamare la funzione ODBC `SQLGetInfo` con il `InfoType` parametro impostato su SQL_SERVER_NAME."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection> and displays the backend data source name.  \n  \n [!code-vb[Classic WebData OdbcConnection.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcc_3_1.vb)]\n [!code-cs[Classic WebData OdbcConnection.DataSource#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcc_3_1.cs)]"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "Il nome del server o il nome del file dell&quot;origine dati. Il valore predefinito è una stringa vuota (&quot;&quot;) fino a quando non viene aperta la connessione."
  overload: System.Data.Odbc.OdbcConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OdbcConnection.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.Data.Odbc.OdbcConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Driver
  id: Driver
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Driver
  nameWithType: OdbcConnection.Driver
  fullName: System.Data.Odbc.OdbcConnection.Driver
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il nome del driver ODBC specificato per la connessione corrente."
  remarks: "Il recupero della proprietà del Driver equivale a chiamare la funzione ODBC `SQLGetInfo` con il `InfoType` parametro impostato su SQL_DRIVER_NAME."
  syntax:
    content: public string Driver { get; }
    return:
      type: System.String
      description: "Il nome del driver ODBC. Si tratta in genere il nome della DLL (ad esempio, Sqlsrv32.dll). Il valore predefinito è una stringa vuota (&quot;&quot;) fino a quando non viene aperta la connessione."
  overload: System.Data.Odbc.OdbcConnection.Driver*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OdbcConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(ITransaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Permette l&quot;integrazione nella transazione specificata come transazione distribuita."
  remarks: "Novità in ADO.NET 2.0 è il supporto per l&quot;utilizzo di <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>metodo di integrazione in una transazione distribuita.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Poiché inserisce una connessione in un <xref:System.Transactions.Transaction>istanza, **EnlistTransaction** consente di sfruttare le funzionalità disponibili nel <xref:System.Transactions>dello spazio dei nomi per la gestione transazioni distribuite, rendendola preferibile **EnlistDistributedTransaction** a questo scopo.</xref:System.Transactions> </xref:System.Transactions.Transaction> Per ulteriori informazioni, vedere [transazioni distribuite](~/add/includes/ajax-current-ext-md.md).       È possibile continuare a eseguire l&quot;inserimento di una transazione distribuita esistente usando il <xref:System.Data.OdbcClient.OdbcConnection.EnlistDistributedTransaction%2A>metodo se l&quot;inserimento automatico è disabilitato.</xref:System.Data.OdbcClient.OdbcConnection.EnlistDistributedTransaction%2A> L&quot;integrazione in una transazione distribuita esistente assicura che, se è stato eseguito il commit o il rollback della transazione, le modifiche apportate dal codice all&quot;origine dati sono inoltre eseguito il commit o il rollback. Per ulteriori informazioni sulle transazioni distribuite, vedere [transazioni distribuite](../Topic/Distributed%20Transactions.md).       EnlistDistributedTransaction restituisce un&quot;eccezione se <xref:System.Data.OdbcClient.OdbcConnection>è già avviato una transazione utilizzando <xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A>.</xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A> </xref:System.Data.OdbcClient.OdbcConnection> Tuttavia, se la transazione è una transazione locale avviata nell&quot;origine dati (ad esempio eseguendo in modo esplicito l&quot;istruzione BEGIN TRANSACTION tramite un <xref:System.Data.OdbcClient.OdbcCommand>oggetto), EnlistDistributedTransaction esegue il rollback della transazione locale e permette l&quot;integrazione nella transazione distribuita esistente come richiesto.</xref:System.Data.OdbcClient.OdbcCommand> Non verrà notificato che è stato eseguito il rollback della transazione locale e responsabile della gestione delle transazioni locali non avviate tramite <xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A>.</xref:System.Data.OdbcClient.OdbcConnection.BeginTransaction%2A>"
  syntax:
    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);
    parameters:
    - id: transaction
      type: System.EnterpriseServices.ITransaction
      description: "Un riferimento a un oggetto esistente <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> in cui si desidera integrare."
  overload: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: OdbcConnection.EnlistTransaction(Transaction)
  fullName: System.Data.Odbc.OdbcConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Permette l&quot;integrazione nella transazione specificata come transazione distribuita."
  remarks: 'Novità in ADO.NET 2.0 è il supporto per l&quot;utilizzo di <xref:System.Data.Common.DbConnection.EnlistTransaction%2A>metodo di integrazione in una transazione distribuita.</xref:System.Data.Common.DbConnection.EnlistTransaction%2A> Poiché inserisce una connessione in un <xref:System.Transactions.Transaction>istanza, **EnlistTransaction** consente di sfruttare le funzionalità disponibili nel <xref:System.Transactions>dello spazio dei nomi per la gestione transazioni distribuite, rendendola preferibile **EnlistDistributedTransaction**, che utilizza un **System.EnterpriseServices.ITransaction** oggetto.</xref:System.Transactions> </xref:System.Transactions.Transaction> Include inoltre una semantica leggermente diversa: quando una connessione in modo esplicito è integrata in una transazione, non può essere rimosso o integrata in un&quot;altra transazione fino al completamento della prima transazione. Per ulteriori informazioni sulle transazioni distribuite, vedere [transazioni distribuite](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "Un riferimento a un oggetto esistente <xref href=&quot;System.Transactions.Transaction&quot;> </xref> in cui si desidera integrare."
  overload: System.Data.Odbc.OdbcConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.GetSchema
  id: GetSchema
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: OdbcConnection.GetSchema()
  fullName: System.Data.Odbc.OdbcConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Restituisce informazioni sullo schema per l&quot;origine dati di questo <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>."
  syntax:
    content: public override System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Oggetto <xref href=&quot;System.Data.DataTable&quot;> </xref> che contiene informazioni sullo schema."
  overload: System.Data.Odbc.OdbcConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: OdbcConnection.GetSchema(String)
  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Restituisce informazioni sullo schema per l&quot;origine dati di questo <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> utilizzando il nome specificato per il nome dello schema."
  remarks: "Quando `collectionName` è null, il <xref:System.Data.DataTable>contiene informazioni su tutti i metadati disponibili e le eventuali restrizioni.</xref:System.Data.DataTable>      > [!NOTE] > Tutte le restrizioni che si applicano al `SQLStatistics` metodo si applicano anche al `ODBCConnection.GetSchema(&quot;`indici`&quot;)` insieme."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "Specifica il nome dello schema da restituire."
    return:
      type: System.Data.DataTable
      description: "Oggetto <xref href=&quot;System.Data.DataTable&quot;> </xref> che contiene informazioni sullo schema."
  overload: System.Data.Odbc.OdbcConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: OdbcConnection.GetSchema(String,String[])
  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Restituisce informazioni sullo schema per l&quot;origine dati di questo <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> usando la stringa specificata per il nome dello schema e la matrice di stringa specificata per i valori di restrizione."
  remarks: "Quando `collectionName` è specificato come null, il <xref:System.Data.DataTable>contiene informazioni su tutti i metadati che sono disponibili e le relative restrizioni.</xref:System.Data.DataTable>       Il `restrictionValues` parametro può fornire *n* profondità dei valori specificati dall&quot;insieme di restrizioni per una raccolta specifica. Per impostare i valori per una determinata restrizione e non impostare i valori di altre restrizioni, è necessario impostare le restrizioni precedenti su null e quindi immettere il valore appropriato per la restrizione che si desidera specificare un valore per.       Un esempio di questa è la raccolta &quot;Tabelle&quot;. Se la raccolta &quot;Tables&quot; presenta tre restrizioni (database, proprietario e nome di tabella) e si desidera vengano restituite solo le tabelle associate al proprietario &quot;Carlo&quot;, quindi è necessario passare almeno i seguenti valori: null, &quot;Carlo&quot;. Se un valore di restrizione non viene passato, i valori predefiniti vengono utilizzati per la restrizione. Questo è lo stesso mapping passare null, che è diverso dal passaggio di una stringa vuota per il valore del parametro. In questo caso, la stringa vuota (&quot;&quot;) viene considerato come valore per il parametro specificato.      > [!NOTE] > Tutte le restrizioni che si applicano al metodo SQLStatistics verranno applicate alla raccolta valide."
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "Specifica il nome dello schema da restituire."
    - id: restrictionValues
      type: System.String[]
      description: "Specifica un set di valori di restrizione per lo schema richiesto."
    return:
      type: System.Data.DataTable
      description: "Oggetto <xref href=&quot;System.Data.DataTable&quot;> </xref> che contiene informazioni sullo schema."
  overload: System.Data.Odbc.OdbcConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.InfoMessage
  id: InfoMessage
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: InfoMessage
  nameWithType: OdbcConnection.InfoMessage
  fullName: System.Data.Odbc.OdbcConnection.InfoMessage
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Si verifica quando il driver ODBC invia un avviso o un messaggio informativo."
  remarks: "I client che desidera elaborare avvisi o messaggi informativi inviati dal server è necessario creare un <xref:System.Data.Odbc.OdbcInfoMessageEventHandler>delegato per l&quot;ascolto su questo evento.</xref:System.Data.Odbc.OdbcInfoMessageEventHandler>"
  syntax:
    content: public event System.Data.Odbc.OdbcInfoMessageEventHandler InfoMessage;
    return:
      type: System.Data.Odbc.OdbcInfoMessageEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.Open
  id: Open
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: Open()
  nameWithType: OdbcConnection.Open()
  fullName: System.Data.Odbc.OdbcConnection.Open()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Apre una connessione a un&quot;origine dati con le impostazioni delle proprietà specificati da <xref:System.Data.Odbc.OdbcConnection.ConnectionString*>.</xref:System.Data.Odbc.OdbcConnection.ConnectionString*>"
  remarks: "Il <xref:System.Data.Odbc.OdbcConnection>Disegna una connessione aperta dal pool di connessioni, se disponibile.</xref:System.Data.Odbc.OdbcConnection> In caso contrario, stabilisce una nuova connessione all&quot;origine dati.      > [!NOTE] > Se il <xref:System.Data.Odbc.OdbcConnection>esce dall&quot;ambito, la connessione rappresenta non viene chiusa automaticamente.</xref:System.Data.Odbc.OdbcConnection> Pertanto, è necessario chiudere esplicitamente la connessione, chiamando <xref:System.Data.Odbc.OdbcConnection.Close%2A>, **Dispose**, o inserendo la connessione all&quot;interno di un `Using` istruzione.</xref:System.Data.Odbc.OdbcConnection.Close%2A>"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnection.Open*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "La funzionalità di questo metodo non è supportata nella classe base e deve essere implementata in una classe derivata invece."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ReleaseObjectPool
  id: ReleaseObjectPool
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ReleaseObjectPool()
  nameWithType: OdbcConnection.ReleaseObjectPool()
  fullName: System.Data.Odbc.OdbcConnection.ReleaseObjectPool()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Indica che l&quot;handle dell&quot;ambiente di gestione Driver ODBC può essere rilasciato quando viene rilasciato l&quot;ultima connessione sottostante."
  remarks: "`ReleaseObjectPool`può essere chiamato per rilasciare l&quot;handle di ambiente ODBC. Si potrebbe essere necessario chiamare questo metodo se, ad esempio, l&quot;oggetto connessione non essere utilizzato nuovamente. Quando vengono chiuse tutte le connessioni nell&quot;ambiente, l&quot;ambiente può essere eliminato. Si noti che sola chiamata del metodo non consente di rilasciare le connessioni attive esistenti nell&quot;ambiente.       Le operazioni seguenti devono verificarsi prima che l&quot;ambiente viene infine eliminato: 1.  Chiamare <xref:System.Data.Odbc.OdbcConnection.Close%2A>per rilasciare il <xref:System.Data.Odbc.OdbcConnection>oggetto dall&quot;ambiente.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcConnection.Close%2A>      2.  Consente di ogni oggetto connessione timeout.      3.  Chiamare il metodo ReleaseObjectPool.      4.  Richiamare l&quot;operazione di garbage collection.       Viceversa, se si chiama <xref:System.Data.Odbc.OdbcConnection.Close%2A>su tutte le connessioni attive e richiamare l&quot;operazione di garbage collection, ma non si chiama il metodo ReleaseObjectPool, le risorse riservate per l&quot;ambiente rimangono disponibili.</xref:System.Data.Odbc.OdbcConnection.Close%2A>       Dopo il rilascio di un handle di ambiente, una richiesta per un nuovo <xref:System.Data.Odbc.OdbcConnection>Crea un nuovo ambiente.</xref:System.Data.Odbc.OdbcConnection>"
  syntax:
    content: public static void ReleaseObjectPool ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnection.ReleaseObjectPool*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: OdbcConnection.ServerVersion
  fullName: System.Data.Odbc.OdbcConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene una stringa che contiene la versione del server a cui è connesso il client."
  remarks: "Se ServerVersion non è supportata dal driver ODBC sottostante, una stringa vuota (&quot;&quot;) viene restituito.       La proprietà ServerVersion assume il formato &quot;*# #. # #. # # #*,&quot; in cui le prime due cifre indicano la versione principale, le due cifre successive sono la versione secondaria e le ultime quattro cifre rappresentano la versione di rilascio. Il driver deve eseguire il rendering la versione del prodotto in questo modulo tuttavia anche possibile aggiungere la versione specifica del prodotto sotto forma di stringa (ad esempio, &quot;04.01.0000 Rdb 4.1&quot;). Questa stringa Usa il formato &quot;*Major*&quot; dove *principali* e *secondaria* sono esattamente due cifre e *compilare* esattamente quattro cifre."
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "La versione del server connesso."
  overload: System.Data.Odbc.OdbcConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione viene chiusa."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.State
  id: State
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: State
  nameWithType: OdbcConnection.State
  fullName: System.Data.Odbc.OdbcConnection.State
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene lo stato corrente della connessione."
  remarks: "Le operazioni seguenti sono consentite le modifiche dello stato: - `Closed` a `Open`, usando il <xref:System.Data.Odbc.OdbcConnection.Open%2A>(metodo).</xref:System.Data.Odbc.OdbcConnection.Open%2A>      -Da `Open` a `Closed`, utilizzando il <xref:System.Data.Odbc.OdbcConnection.Close%2A>o **Dispose** metodo.</xref:System.Data.Odbc.OdbcConnection.Close%2A>      > [!NOTE] > Chiamando la proprietà State su una connessione aperta aumenta il sovraccarico dell&quot;applicazione, poiché ogni chiamata di questo tipo comporta una chiamata SQL_ATTR_CONNECTION_DEAD al driver ODBC sottostante per determinare se la connessione è ancora valida."
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "Combinazione bit per bit di <xref href=&quot;System.Data.ConnectionState&quot;> </xref> valori. Il valore predefinito è <xref uid=&quot;langword_csharp_Closed&quot; name=&quot;Closed&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.Odbc.OdbcConnection
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OdbcConnection.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcConnection.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Data.Odbc.OdbcConnection>esegue il cast dell&quot;istanza di un <xref:System.ICloneable>interfaccia.</xref:System.ICloneable> </xref:System.Data.Odbc.OdbcConnection>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Un nuovo <xref:System.Object>che rappresenta una copia di questa istanza.</xref:System.Object>"
  overload: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Odbc.OdbcException
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcException
  nameWithType: OdbcException
  fullName: System.Data.Odbc.OdbcException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Data.Odbc.OdbcConnection.#ctor
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: OdbcConnection()
  nameWithType: OdbcConnection.OdbcConnection()
  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection()
- uid: System.Data.Odbc.OdbcConnection.#ctor(System.String)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: OdbcConnection(String)
  nameWithType: OdbcConnection.OdbcConnection(String)
  fullName: System.Data.Odbc.OdbcConnection.OdbcConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OdbcConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.Odbc.OdbcConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: OdbcConnection.BeginTransaction()
  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction()
- uid: System.Data.Odbc.OdbcTransaction
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcTransaction
  nameWithType: OdbcTransaction
  fullName: System.Data.Odbc.OdbcTransaction
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: OdbcConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.Odbc.OdbcConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: OdbcConnection.ChangeDatabase(String)
  fullName: System.Data.Odbc.OdbcConnection.ChangeDatabase(String)
- uid: System.Data.Odbc.OdbcConnection.Close
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Close()
  nameWithType: OdbcConnection.Close()
  fullName: System.Data.Odbc.OdbcConnection.Close()
- uid: System.Data.Odbc.OdbcConnection.ConnectionString
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OdbcConnection.ConnectionString
  fullName: System.Data.Odbc.OdbcConnection.ConnectionString
- uid: System.Data.Odbc.OdbcConnection.ConnectionTimeout
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OdbcConnection.ConnectionTimeout
  fullName: System.Data.Odbc.OdbcConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcConnection.CreateCommand
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: OdbcConnection.CreateCommand()
  fullName: System.Data.Odbc.OdbcConnection.CreateCommand()
- uid: System.Data.Odbc.OdbcCommand
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcCommand
  nameWithType: OdbcCommand
  fullName: System.Data.Odbc.OdbcCommand
- uid: System.Data.Odbc.OdbcConnection.CreateDbCommand
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: OdbcConnection.CreateDbCommand()
  fullName: System.Data.Odbc.OdbcConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.Odbc.OdbcConnection.Database
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Database
  nameWithType: OdbcConnection.Database
  fullName: System.Data.Odbc.OdbcConnection.Database
- uid: System.Data.Odbc.OdbcConnection.DataSource
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: DataSource
  nameWithType: OdbcConnection.DataSource
  fullName: System.Data.Odbc.OdbcConnection.DataSource
- uid: System.Data.Odbc.OdbcConnection.Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OdbcConnection.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcConnection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcConnection.Driver
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Driver
  nameWithType: OdbcConnection.Driver
  fullName: System.Data.Odbc.OdbcConnection.Driver
- uid: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OdbcConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(ITransaction)
- uid: System.EnterpriseServices.ITransaction
  parent: System.EnterpriseServices
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: System.EnterpriseServices.ITransaction
- uid: System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: OdbcConnection.EnlistTransaction(Transaction)
  fullName: System.Data.Odbc.OdbcConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.Odbc.OdbcConnection.GetSchema
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: GetSchema()
  nameWithType: OdbcConnection.GetSchema()
  fullName: System.Data.Odbc.OdbcConnection.GetSchema()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String)
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: OdbcConnection.GetSchema(String)
  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String)
- uid: System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: OdbcConnection.GetSchema(String,String[])
  fullName: System.Data.Odbc.OdbcConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Odbc.OdbcConnection.InfoMessage
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: InfoMessage
  nameWithType: OdbcConnection.InfoMessage
  fullName: System.Data.Odbc.OdbcConnection.InfoMessage
- uid: System.Data.Odbc.OdbcInfoMessageEventHandler
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcInfoMessageEventHandler
  nameWithType: OdbcInfoMessageEventHandler
  fullName: System.Data.Odbc.OdbcInfoMessageEventHandler
- uid: System.Data.Odbc.OdbcConnection.Open
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Open()
  nameWithType: OdbcConnection.Open()
  fullName: System.Data.Odbc.OdbcConnection.Open()
- uid: System.Data.Odbc.OdbcConnection.ReleaseObjectPool
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ReleaseObjectPool()
  nameWithType: OdbcConnection.ReleaseObjectPool()
  fullName: System.Data.Odbc.OdbcConnection.ReleaseObjectPool()
- uid: System.Data.Odbc.OdbcConnection.ServerVersion
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OdbcConnection.ServerVersion
  fullName: System.Data.Odbc.OdbcConnection.ServerVersion
- uid: System.Data.Odbc.OdbcConnection.State
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: State
  nameWithType: OdbcConnection.State
  fullName: System.Data.Odbc.OdbcConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OdbcConnection.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcConnection.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcConnection.#ctor*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: OdbcConnection
  nameWithType: OdbcConnection.OdbcConnection
- uid: System.Data.Odbc.OdbcConnection.BeginDbTransaction*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: OdbcConnection.BeginDbTransaction
- uid: System.Data.Odbc.OdbcConnection.BeginTransaction*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: OdbcConnection.BeginTransaction
- uid: System.Data.Odbc.OdbcConnection.ChangeDatabase*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: OdbcConnection.ChangeDatabase
- uid: System.Data.Odbc.OdbcConnection.Close*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Close
  nameWithType: OdbcConnection.Close
- uid: System.Data.Odbc.OdbcConnection.ConnectionString*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OdbcConnection.ConnectionString
- uid: System.Data.Odbc.OdbcConnection.ConnectionTimeout*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OdbcConnection.ConnectionTimeout
- uid: System.Data.Odbc.OdbcConnection.CreateCommand*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: CreateCommand
  nameWithType: OdbcConnection.CreateCommand
- uid: System.Data.Odbc.OdbcConnection.CreateDbCommand*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: OdbcConnection.CreateDbCommand
- uid: System.Data.Odbc.OdbcConnection.Database*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Database
  nameWithType: OdbcConnection.Database
- uid: System.Data.Odbc.OdbcConnection.DataSource*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: DataSource
  nameWithType: OdbcConnection.DataSource
- uid: System.Data.Odbc.OdbcConnection.Dispose*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Dispose
  nameWithType: OdbcConnection.Dispose
- uid: System.Data.Odbc.OdbcConnection.Driver*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Driver
  nameWithType: OdbcConnection.Driver
- uid: System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: EnlistDistributedTransaction
  nameWithType: OdbcConnection.EnlistDistributedTransaction
- uid: System.Data.Odbc.OdbcConnection.EnlistTransaction*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: OdbcConnection.EnlistTransaction
- uid: System.Data.Odbc.OdbcConnection.GetSchema*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: GetSchema
  nameWithType: OdbcConnection.GetSchema
- uid: System.Data.Odbc.OdbcConnection.Open*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: Open
  nameWithType: OdbcConnection.Open
- uid: System.Data.Odbc.OdbcConnection.ReleaseObjectPool*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ReleaseObjectPool
  nameWithType: OdbcConnection.ReleaseObjectPool
- uid: System.Data.Odbc.OdbcConnection.ServerVersion*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OdbcConnection.ServerVersion
- uid: System.Data.Odbc.OdbcConnection.State*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: State
  nameWithType: OdbcConnection.State
- uid: System.Data.Odbc.OdbcConnection.System#ICloneable#Clone*
  parent: System.Data.Odbc.OdbcConnection
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OdbcConnection.System.ICloneable.Clone
