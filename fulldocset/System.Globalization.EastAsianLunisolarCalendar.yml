### YamlMime:ManagedReference
items:
- uid: System.Globalization.EastAsianLunisolarCalendar
  id: EastAsianLunisolarCalendar
  children:
  - System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  - System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: EastAsianLunisolarCalendar
  nameWithType: EastAsianLunisolarCalendar
  fullName: System.Globalization.EastAsianLunisolarCalendar
  type: Class
  summary: "Rappresenta un calendario che divide il tempo in mesi, giorni, anni ed ere e include le date sono basate su cicli solari e lunari."
  remarks: "La classe EastAsianLunisolarCalendar supporta il ciclo sessagenario (che si ripete ogni 60 anni) oltre agli anni solari e lunari mesi. Ogni anno solare il calendario è associata a un anno sessagenario (vedere <xref:System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear%2A>), un tronco celeste (vedere <xref:System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem%2A>) e un ramo terrestre (vedere <xref:System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch%2A>).</xref:System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch%2A> </xref:System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem%2A> </xref:System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear%2A>      > [!NOTE] > Per informazioni sull&quot;utilizzo di <xref:System.Globalization.HebrewCalendar>classe e l&quot;altro calendario classi in .NET Framework, vedere [utilizzo di calendari](~/add/includes/ajax-current-ext-md.md).</xref:System.Globalization.HebrewCalendar>       Un anno può avere un mese intercalare dopo un mese dell&quot;anno e mese può includere un giorno intercalare. Ad esempio, il <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>metodo restituisce un numero intero positivo che indica il mese associato a una data specificata.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Se non c&quot;è un mese intercalare tra l&quot;ottavo e nono mesi dell&quot;anno, la <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>restituisce 8 per il mese ottavo, 9 per l&quot;ottavo mese intercalare e 10 per il mese nono.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>       Ogni <xref:System.Globalization.CultureInfo>supporta un set di calendari.</xref:System.Globalization.CultureInfo> Attualmente, nessuna delle classi di calendario lunisolare che derivano da EastAsianLunisolarCalendar è utilizzata da una delle impostazioni cultura supportate dalla <xref:System.Globalization.CultureInfo>classe.</xref:System.Globalization.CultureInfo> Pertanto, questa classe e quelle che derivano da essa è utilizzabile solo per calcolare le date in calendari lunisolari dell&quot;Asia orientale. Questa classe supporta diversi metodi &quot;get&quot; per descrivere un <xref:System.DateTime>in termini utilizzati dai calendari lunisolari e il <xref:System.Globalization.EastAsianLunisolarCalendar.ToDateTime%2A>metodo per la conversione dei dati di base al calendario lunisolare da un <xref:System.DateTime>.</xref:System.DateTime> </xref:System.Globalization.EastAsianLunisolarCalendar.ToDateTime%2A> </xref:System.DateTime>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class EastAsianLunisolarCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: EastAsianLunisolarCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcola la data che rappresenta il numero specificato di mesi dalla data specificata."
  remarks: "La parte del giorno dell&quot;oggetto risultante <xref:System.DateTime>verrà modificata se il giorno risultante non è un giorno del mese dell&quot;anno risultante risultante valido.</xref:System.DateTime> In questo caso, la parte del giorno viene modificata per ultimo giorno del mese dell&quot;anno risultante risultante valido. La parte dell&quot;anno risultante <xref:System.DateTime>verrà modificata se il mese risulta è all&quot;esterno dell&quot;anno specificato <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Questa implementazione supporta solo l&quot;era corrente. Di conseguenza, <xref:System.ArgumentException>viene generata se l&quot;anno risultante è all&quot;esterno dell&quot;era specificata <xref:System.DateTime>.</xref:System.DateTime> </xref:System.ArgumentException> La parte dell&quot;ora del giorno di risultante <xref:System.DateTime>rimane invariata specificata <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Ad esempio, il mese specificato è ottobre, che ha 31 giorni, il giorno specificato è il trentunesimo di tale mese e il valore di `months` parametro è 6, l&quot;anno risultante è maggiore di uno rispetto a quello specificato, il mese risultante è aprile e il giorno risultante è il trentesimo, ovvero l&quot;ultimo giorno nel mese di aprile.       Se il valore di `months` parametro è negativo, risultante <xref:System.DateTime>è precedente a specificata <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       La<xref:System.DateTime.Kind%2A> proprietà di restituito <xref:System.DateTime>sempre valore è uguale a <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> È possibile mantenere la <xref:System.DateTime.Kind%2A>proprietà del `time` parametro chiamando il <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>metodo, come illustrato nell&quot;esempio seguente.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/d86a04c2-1ef4-4a8d-ab7c-_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/d86a04c2-1ef4-4a8d-ab7c-_1.cs)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "Il <xref:System.DateTime>a cui aggiungere `months`.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "Il numero di mesi da aggiungere."
    return:
      type: System.DateTime
      description: "Un nuovo <xref:System.DateTime>che risulta dalla somma del numero specificato di mesi per il <code> time </code> parametro.</xref:System.DateTime>"
  overload: System.Globalization.EastAsianLunisolarCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il risultato è compreso nell&quot;intervallo supportato di un <xref:System.DateTime>.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>è minore di -120000 o maggiore di 120000.       - oppure - <code>time</code> è minore di <xref:System.Globalization.Calendar.MinSupportedDateTime*> o maggiore di <xref:System.Globalization.Calendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: EastAsianLunisolarCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcola la data che rappresenta il numero specificato di anni dalla data specificata."
  remarks: "La parte del giorno dell&quot;oggetto risultante <xref:System.DateTime>verrà modificata se il giorno risultante non è un giorno del mese dell&quot;anno risultante risultante valido.</xref:System.DateTime> In questo caso, la parte del giorno viene modificata per ultimo giorno del mese dell&quot;anno risultante risultante valido. La parte del mese di risultante <xref:System.DateTime>rimane invariata specificata <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Questa implementazione supporta solo l&quot;era corrente. Di conseguenza, <xref:System.ArgumentException>viene generata se l&quot;anno risultante è all&quot;esterno dell&quot;era specificata <xref:System.DateTime>.</xref:System.DateTime> </xref:System.ArgumentException> La parte dell&quot;ora del giorno di risultante <xref:System.DateTime>rimane invariata specificata <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Ad esempio, febbraio ha 28 giorni, eccetto durante gli anni bisestili quando ne ha 29 giorni. Se la data specificata è venti nono giorno del mese di febbraio di un anno bisestile e il valore della `years` parametro è 1, la data risultante sarà il ventottesimo giorno del mese di febbraio nell&quot;anno successivo.       Se `years` è negativo, risultante <xref:System.DateTime>è precedente a specificata <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       La<xref:System.DateTime.Kind%2A> proprietà di restituito <xref:System.DateTime>sempre valore è uguale a <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> È possibile mantenere la <xref:System.DateTime.Kind%2A>proprietà del `time` parametro chiamando il <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>metodo, come illustrato nell&quot;esempio seguente.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/6f9d0244-83a4-4a86-acea-_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/6f9d0244-83a4-4a86-acea-_1.cs)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "Il <xref:System.DateTime>a cui aggiungere `years`.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "Il numero di anni da aggiungere."
    return:
      type: System.DateTime
      description: "Un nuovo <xref:System.DateTime>che risulta dalla somma del numero specificato di anni per la <code> time </code> parametro.</xref:System.DateTime>"
  overload: System.Globalization.EastAsianLunisolarCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il risultato è compreso nell&quot;intervallo supportato di un <xref:System.DateTime>.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>è minore di <xref:System.Globalization.Calendar.MinSupportedDateTime*> o maggiore di <xref:System.Globalization.Calendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: EastAsianLunisolarCalendar.AlgorithmType
  fullName: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Ottiene un valore che indica se il calendario corrente è solare, lunare o una combinazione di entrambi."
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Restituisce sempre <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  id: GetCelestialStem(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetCelestialStem(Int32)
  nameWithType: EastAsianLunisolarCalendar.GetCelestialStem(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcola il tronco celeste dell&quot;anno specificato nel ciclo sessagenario (60 anni)."
  syntax:
    content: public int GetCelestialStem (int sexagenaryYear);
    parameters:
    - id: sexagenaryYear
      type: System.Int32
      description: "Numero intero compreso tra 1 e 60 che rappresenta l&quot;anno nel ciclo sessagenario."
    return:
      type: System.Int32
      description: "Un numero compreso tra 1 e 10."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>sexagenaryYear</code>è minore di 1 o maggiore di 60."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcola il giorno del mese della data specificata."
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Il <xref:System.DateTime>da leggere.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Un numero intero compreso tra 1 e 31 che rappresenta il giorno del mese specificato nel <code> time </code> parametro."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcola il giorno della settimana della data specificata."
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Il <xref:System.DateTime>da leggere.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "Uno del <xref:System.DayOfWeek>valori che rappresenta il giorno della settimana specificato nella <code> time </code> parametro.</xref:System.DayOfWeek>"
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>è minore di <xref:System.Globalization.Calendar.MinSupportedDateTime*> o maggiore di <xref:System.Globalization.Calendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcola il giorno dell&quot;anno della data specificata."
  remarks: "Il giorno dell&quot;anno è definito come il numero di giorni dal primo giorno dell&quot;anno. Ad esempio, GetDayOfYear per il primo giorno del mese prima restituisce 1 e GetDayOfYear per l&quot;ultimo giorno del mese scorso restituisce il numero totale di giorni nell&quot;anno, che corrisponde al valore restituito da <xref:System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear%2A>.</xref:System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear%2A>"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Il <xref:System.DateTime>da leggere.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Un numero intero compreso tra 1 e 354 in un anno normale o tra 1 e 384 in un anno bisestile, che rappresenta il giorno dell&quot;anno specificato nella <code> time </code> parametro."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcola il numero di giorni del mese dell&quot;anno specificato e dell&quot;era specificato."
  remarks: "Dimenticata `month` parametro è il secondo mese, il metodo GetDaysInMonth restituisce 28 o 29, a seconda che il `year` parametro è un anno bisestile."
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;anno."
    - id: month
      type: System.Int32
      description: "Un numero intero compreso tra 1 e 12 in un anno normale o tra 1 e 13 in un anno bisestile, che rappresenta il mese."
    - id: era
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;era."
    return:
      type: System.Int32
      description: "Il numero di giorni del mese dell&quot;anno specificato e dell&quot;era specificato."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, o <code>era</code> è compreso nell&quot;intervallo supportato dal calendario."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcola il numero di giorni nell&quot;anno specificato e nell&quot;era."
  remarks: "Il metodo GetDaysInYear restituisce 365 o 366, a seconda che la `year` parametro è un anno bisestile."
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;anno."
    - id: era
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;era."
    return:
      type: System.Int32
      description: "Il numero di giorni nell&quot;anno specificato e nell&quot;era."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>o <code>era</code> è compreso nell&quot;intervallo supportato dal calendario."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcola il mese intercalare per l&quot;anno ed era specificati."
  remarks: "In un calendario che supporta un mese intercalare, il mese intercalare può verificarsi dopo un determinato mese o dopo un mese di un anno. Ad esempio, il <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>metodo restituisce un numero compreso tra 1 e 13 che indica il mese associato a una data specificata.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Se non c&quot;è un mese intercalare tra l&quot;ottavo e nono mesi dell&quot;anno, la <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>restituisce 8 per il mese ottavo, 9 per l&quot;ottavo mese intercalare e 10 per il mese nono.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;anno."
    - id: era
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;era."
    return:
      type: System.Int32
      description: "Un numero intero positivo compreso tra 1 e 13 che indica il mese intercalare nell&quot;anno specificato e nell&quot;era.       - oppure - Zero se il calendario non supporta un mese intercalare o se il <code> year </code> e <code> era </code> parametri non si specificano un anno bisestile."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce il mese nella data specificata."
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Il <xref:System.DateTime>da leggere.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Intero compreso tra 1 e 13 che rappresenta il mese specificato nella <code> time </code> parametro."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcola il numero di mesi nell&quot;anno specificato e nell&quot;era."
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;anno."
    - id: era
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;era."
    return:
      type: System.Int32
      description: "Il numero di mesi nell&quot;anno specificato dell&quot;era specificata. Il valore restituito è 12 mesi in un anno normale o 13 mesi in un anno bisestile."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>o <code>era</code> è compreso nell&quot;intervallo supportato dal calendario."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  id: GetSexagenaryYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetSexagenaryYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetSexagenaryYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcola l&quot;anno nel ciclo sessagenario (60 anni) che corrisponde alla data specificata."
  syntax:
    content: public virtual int GetSexagenaryYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Oggetto <xref:System.DateTime>da leggere.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Un numero compreso tra 1 e 60 nel ciclo sessagenario che corrisponde alla <code> date </code> parametro."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  id: GetTerrestrialBranch(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetTerrestrialBranch(Int32)
  nameWithType: EastAsianLunisolarCalendar.GetTerrestrialBranch(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcola il ramo terrestre dell&quot;anno specificato nel ciclo sessagenario (60 anni)."
  syntax:
    content: public int GetTerrestrialBranch (int sexagenaryYear);
    parameters:
    - id: sexagenaryYear
      type: System.Int32
      description: "Numero intero compreso tra 1 e 60 che rappresenta l&quot;anno nel ciclo sessagenario."
    return:
      type: System.Int32
      description: "Numero intero compreso tra 1 e 12."
  overload: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>sexagenaryYear</code>è minore di 1 o maggiore di 60."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce l&quot;anno della data specificata."
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "Il <xref:System.DateTime>da leggere.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;anno specificato <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.EastAsianLunisolarCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se la data specificata nell&quot;era specificata è un giorno intercalare."
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;anno."
    - id: month
      type: System.Int32
      description: "Numero intero compreso tra 1 e 13 che rappresenta il mese."
    - id: day
      type: System.Int32
      description: "Numero intero compreso tra 1 e 31 che rappresenta il giorno."
    - id: era
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il giorno specificato è intercalare; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, <code>day</code>, o <code>era</code> è compreso nell&quot;intervallo supportato dal calendario."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se il mese nell&quot;anno specificato e nell&quot;era specificato è intercalare."
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;anno."
    - id: month
      type: System.Int32
      description: "Numero intero compreso tra 1 e 13 che rappresenta il mese."
    - id: era
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <code> month </code> parametro è intercalare; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, o <code>era</code> è compreso nell&quot;intervallo supportato dal calendario."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se l&quot;anno specificato dell&quot;era specificata è bisestile."
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;anno."
    - id: era
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;anno specificato è bisestile; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>o <code>era</code> è compreso nell&quot;intervallo supportato dal calendario."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Restituisce un <xref:System.DateTime>che è impostato su data, ora e nell&quot;era.</xref:System.DateTime>"
  remarks: "Il metodo ToDateTime possa convertire qualsiasi data del calendario corrente in una data del calendario gregoriano. La data del calendario gregoriano può essere usata in seguito, ad esempio, per confrontare le date in calendari diversi o creare una data equivalente in un determinato calendario."
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;anno."
    - id: month
      type: System.Int32
      description: "Numero intero compreso tra 1 e 13 che rappresenta il mese."
    - id: day
      type: System.Int32
      description: "Numero intero compreso tra 1 e 31 che rappresenta il giorno."
    - id: hour
      type: System.Int32
      description: "Numero intero compreso tra 0 e 23 che rappresenta l&quot;ora."
    - id: minute
      type: System.Int32
      description: "Numero intero compreso tra 0 e 59 che rappresenta il minuto."
    - id: second
      type: System.Int32
      description: "Numero intero compreso tra 0 e 59 che rappresenta il secondo."
    - id: millisecond
      type: System.Int32
      description: "Numero intero compreso tra 0 e 999 che rappresenta il millisecondo."
    - id: era
      type: System.Int32
      description: "Valore intero che rappresenta l&quot;era."
    return:
      type: System.DateTime
      description: "Oggetto <xref:System.DateTime>che è impostato su data, ora e nell&quot;era.</xref:System.DateTime>"
  overload: System.Globalization.EastAsianLunisolarCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code>, <code>second</code>, <code>millisecond</code>, o <code>era</code> è compreso nell&quot;intervallo supportato dal calendario."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: EastAsianLunisolarCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Converte l&quot;anno specificato in un anno a quattro cifre."
  remarks: "Il metodo ToFourDigitYear utilizza il <xref:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax%2A>proprietà per determinare il secolo.</xref:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax%2A>       ToFourDigitYear supporta un anno a due cifre o un anno a quattro cifre. Passaggio di un valore di anno a due cifre (minore di 100), il metodo convertire il valore in un valore a quattro cifre in base al <xref:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax%2A>valore che rappresenta il secolo.</xref:System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax%2A> Se viene fornito un valore di anno a quattro cifre che rientra nell&quot;intervallo supportato dal calendario a ToFourDigitYear, il metodo restituisce il valore di input effettivo. Se viene fornito un valore a quattro cifre che rientra nell&quot;intervallo supportato dal calendario oppure se viene fornito un valore negativo, il metodo genera un&quot;eccezione."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Intero a due o quattro cifre che rappresenta l&quot;anno da convertire."
    return:
      type: System.Int32
      description: "Valore intero che contiene la rappresentazione a quattro cifre del <code> year </code> parametro."
  overload: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>non è compreso nell&quot;intervallo supportato dal calendario."
  platform:
  - net462
- uid: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.EastAsianLunisolarCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: EastAsianLunisolarCalendar.TwoDigitYearMax
  fullName: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Ottiene o imposta l&quot;ultimo anno di un intervallo di 100 anni che può essere rappresentato da un anno a 2 cifre."
  remarks: "Questa proprietà consente a un anno a 2 cifre da convertire in modo corretto a un anno a 4 cifre. Ad esempio, nel calendario gregoriano, se questa proprietà è impostata su 2029, l&quot;intervallo di 100 anni è dal 1930 2029. Pertanto, un valore di 2 cifre pari a 30 viene interpretato come 1930, mentre un valore di 2 cifre 29 viene interpretato come 2029.       Il valore iniziale di questa proprietà è derivato dalle impostazioni delle opzioni internazionali e della lingua nel Pannello di controllo. Tuttavia, tali informazioni possono variare nel corso della durata di <xref:System.AppDomain>.</xref:System.AppDomain> La <xref:System.Globalization.EastAsianLunisolarCalendar>classe non rileva le modifiche nelle impostazioni di sistema automaticamente.</xref:System.Globalization.EastAsianLunisolarCalendar>"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "L&quot;ultimo anno di un intervallo di 100 anni che può essere rappresentato da un anno a 2 cifre."
  overload: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Corrente <xref href=&quot;System.Globalization.EastAsianLunisolarCalendar&quot;> </xref> è di sola lettura."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore in un&quot;operazione set è minore di 99 o maggiore rispetto a quello massimo supportato nel calendario corrente."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: EastAsianLunisolarCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: EastAsianLunisolarCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: EastAsianLunisolarCalendar.AlgorithmType
  fullName: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetCelestialStem(Int32)
  nameWithType: EastAsianLunisolarCalendar.GetCelestialStem(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetMonth(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonth(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetSexagenaryYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetSexagenaryYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetTerrestrialBranch(Int32)
  nameWithType: EastAsianLunisolarCalendar.GetTerrestrialBranch(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: EastAsianLunisolarCalendar.GetYear(DateTime)
  fullName: System.Globalization.EastAsianLunisolarCalendar.GetYear(DateTime)
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: EastAsianLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: EastAsianLunisolarCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: EastAsianLunisolarCalendar.TwoDigitYearMax
  fullName: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
- uid: System.Globalization.EastAsianLunisolarCalendar.AddMonths*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AddMonths
  nameWithType: EastAsianLunisolarCalendar.AddMonths
- uid: System.Globalization.EastAsianLunisolarCalendar.AddYears*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AddYears
  nameWithType: EastAsianLunisolarCalendar.AddYears
- uid: System.Globalization.EastAsianLunisolarCalendar.AlgorithmType*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: EastAsianLunisolarCalendar.AlgorithmType
- uid: System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetCelestialStem
  nameWithType: EastAsianLunisolarCalendar.GetCelestialStem
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: EastAsianLunisolarCalendar.GetDayOfMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: EastAsianLunisolarCalendar.GetDayOfWeek
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: EastAsianLunisolarCalendar.GetDayOfYear
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: EastAsianLunisolarCalendar.GetDaysInMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: EastAsianLunisolarCalendar.GetDaysInYear
- uid: System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: EastAsianLunisolarCalendar.GetLeapMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetMonth
  nameWithType: EastAsianLunisolarCalendar.GetMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: EastAsianLunisolarCalendar.GetMonthsInYear
- uid: System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetSexagenaryYear
  nameWithType: EastAsianLunisolarCalendar.GetSexagenaryYear
- uid: System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetTerrestrialBranch
  nameWithType: EastAsianLunisolarCalendar.GetTerrestrialBranch
- uid: System.Globalization.EastAsianLunisolarCalendar.GetYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: GetYear
  nameWithType: EastAsianLunisolarCalendar.GetYear
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapDay*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: EastAsianLunisolarCalendar.IsLeapDay
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: EastAsianLunisolarCalendar.IsLeapMonth
- uid: System.Globalization.EastAsianLunisolarCalendar.IsLeapYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: EastAsianLunisolarCalendar.IsLeapYear
- uid: System.Globalization.EastAsianLunisolarCalendar.ToDateTime*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: EastAsianLunisolarCalendar.ToDateTime
- uid: System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: EastAsianLunisolarCalendar.ToFourDigitYear
- uid: System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax*
  parent: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: EastAsianLunisolarCalendar.TwoDigitYearMax
