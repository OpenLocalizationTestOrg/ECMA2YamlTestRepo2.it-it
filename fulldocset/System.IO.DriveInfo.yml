### YamlMime:ManagedReference
items:
- uid: System.IO.DriveInfo
  id: DriveInfo
  children:
  - System.IO.DriveInfo.#ctor(System.String)
  - System.IO.DriveInfo.AvailableFreeSpace
  - System.IO.DriveInfo.DriveFormat
  - System.IO.DriveInfo.DriveType
  - System.IO.DriveInfo.GetDrives
  - System.IO.DriveInfo.IsReady
  - System.IO.DriveInfo.Name
  - System.IO.DriveInfo.RootDirectory
  - System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.DriveInfo.ToString
  - System.IO.DriveInfo.TotalFreeSpace
  - System.IO.DriveInfo.TotalSize
  - System.IO.DriveInfo.VolumeLabel
  langs:
  - csharp
  name: DriveInfo
  nameWithType: DriveInfo
  fullName: System.IO.DriveInfo
  type: Class
  summary: "Fornisce accesso alle informazioni su un&quot;unità."
  remarks: "Questa classe modella un&quot;unità e fornisce metodi e proprietà per ottenere informazioni sull&quot;unità. Utilizzare DriveInfo per determinare quali unità sono disponibili e il tipo di unità siano. È anche possibile eseguire una query per determinare la capacità e spazio libero sul disco."
  example:
  - "The following code example demonstrates the use of the DriveInfo class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/t-system.io.driveinfo_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/t-system.io.driveinfo_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class DriveInfo : System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.DriveInfo.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: DriveInfo(String)
  nameWithType: DriveInfo.DriveInfo(String)
  fullName: System.IO.DriveInfo.DriveInfo(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Fornisce accesso alle informazioni nell&quot;unità specificata."
  remarks: "Utilizzare questa classe per ottenere informazioni sulle unità. Il nome dell&quot;unità deve essere una lettera maiuscola o minuscola tra &quot;a&quot; a &quot;z&quot;. È possibile utilizzare questo metodo per ottenere informazioni sui nomi delle unità che sono `null` o percorso UNC (\\\\\\server\\share) percorsi."
  syntax:
    content: public DriveInfo (string driveName);
    parameters:
    - id: driveName
      type: System.String
      description: "Un percorso di unità valida o una lettera di unità. Può essere in maiuscolo o minuscolo, &quot;a&quot; a &quot;z&quot;. Un valore null non è valido."
  overload: System.IO.DriveInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La lettera di unità non può essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La prima lettera della <code> driveName </code> non è una lettera maiuscola o minuscola tra &quot;a&quot; a &quot;z&quot;.       - oppure - <code> driveName </code> non fa riferimento a un&quot;unità valida."
  platform:
  - net462
- uid: System.IO.DriveInfo.AvailableFreeSpace
  id: AvailableFreeSpace
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: AvailableFreeSpace
  nameWithType: DriveInfo.AvailableFreeSpace
  fullName: System.IO.DriveInfo.AvailableFreeSpace
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Indica la quantità di spazio libero su un&quot;unità, in byte."
  remarks: "Questa proprietà indica la quantità di spazio libero disponibile nell&quot;unità. Si noti che questo numero può essere diverso dal <xref:System.IO.DriveInfo.TotalFreeSpace%2A>numero poiché questa proprietà tiene conto delle quote del disco.</xref:System.IO.DriveInfo.TotalFreeSpace%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.av_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.av_1.vb)]"
  syntax:
    content: public long AvailableFreeSpace { get; }
    return:
      type: System.Int64
      description: "La quantità di spazio libero disponibile sul disco, in byte."
  overload: System.IO.DriveInfo.AvailableFreeSpace*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Accesso alle informazioni unità negato."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si è verificato un errore dei / o (ad esempio, un errore del disco o un&quot;unità non pronta)."
  platform:
  - net462
- uid: System.IO.DriveInfo.DriveFormat
  id: DriveFormat
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: DriveFormat
  nameWithType: DriveInfo.DriveFormat
  fullName: System.IO.DriveInfo.DriveFormat
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Ottiene il nome del file system, ad esempio NTFS o FAT32."
  remarks: "Utilizzare DriveFormat per determinare quale formattazione di un&quot;unità viene utilizzata."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.dr_0_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.dr_0_1.vb)]"
  syntax:
    content: public string DriveFormat { get; }
    return:
      type: System.String
      description: "Il nome del file system nell&quot;unità specificata."
  overload: System.IO.DriveInfo.DriveFormat*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Accesso alle informazioni unità negato."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "L&quot;unità non esiste o non è stato eseguito il mapping."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si è verificato un errore dei / o (ad esempio, un errore del disco o un&quot;unità non pronta)."
  platform:
  - net462
- uid: System.IO.DriveInfo.DriveType
  id: DriveType
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: DriveType
  nameWithType: DriveInfo.DriveType
  fullName: System.IO.DriveInfo.DriveType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Ottiene il tipo di unità, ad esempio CD-ROM, rimovibile, di rete o fissa."
  remarks: 'La proprietà DriveType indica se un&quot;unità è uno dei seguenti: `CDRom`, `Fixed`, `Network`, `NoRootDirectory`, `Ram`, `Removable`, o `Unknown`. Questi valori sono descritti nel <xref:System.IO.DriveType>enumerazione.</xref:System.IO.DriveType>'
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.dr_1_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.dr_1_1.vb)]"
  syntax:
    content: public System.IO.DriveType DriveType { get; }
    return:
      type: System.IO.DriveType
      description: "Uno dei valori di enumerazione che specifica un tipo di unità."
  overload: System.IO.DriveInfo.DriveType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.GetDrives
  id: GetDrives
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: GetDrives()
  nameWithType: DriveInfo.GetDrives()
  fullName: System.IO.DriveInfo.GetDrives()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Recupera i nomi di tutte le unità logiche in un computer."
  remarks: "Questo metodo recupera tutti i nomi di unità logica in un computer. È possibile utilizzare queste informazioni per scorrere la matrice e ottenere informazioni sulle unità utilizzando altri <xref:System.IO.DriveInfo>metodi e proprietà.</xref:System.IO.DriveInfo> Utilizzare la <xref:System.IO.DriveInfo.IsReady%2A>proprietà per verificare se un&quot;unità è pronta perché questo metodo in un&quot;unità non pronta genererà un <xref:System.IO.IOException>.</xref:System.IO.IOException> </xref:System.IO.DriveInfo.IsReady%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/m-system.io.driveinfo.ge_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/m-system.io.driveinfo.ge_1.vb)]"
  syntax:
    content: public static System.IO.DriveInfo[] GetDrives ();
    parameters: []
    return:
      type: System.IO.DriveInfo[]
      description: "Matrice di tipo <xref href=&quot;System.IO.DriveInfo&quot;> </xref> che rappresenta le unità logiche in un computer."
  overload: System.IO.DriveInfo.GetDrives*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si è verificato un errore dei / o (ad esempio, un errore del disco o un&quot;unità non pronta)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Il chiamante non dispone dell&quot;autorizzazione richiesta."
  platform:
  - net462
- uid: System.IO.DriveInfo.IsReady
  id: IsReady
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: IsReady
  nameWithType: DriveInfo.IsReady
  fullName: System.IO.DriveInfo.IsReady
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Ottiene un valore che indica se un&quot;unità è pronta."
  remarks: "IsReady indica se un&quot;unità è pronta. Ad esempio, indica se un CD è un&quot;unità CD o se un dispositivo di archiviazione rimovibile è pronto per le operazioni di lettura/scrittura. Se non si verifica se un&quot;unità non è pronta e non è pronto, l&quot;unità usando <xref:System.IO.DriveInfo>genererà un <xref:System.IO.IOException>.</xref:System.IO.IOException> </xref:System.IO.DriveInfo> l&quot;esecuzione di query       Non fare affidamento su IsReady per evitare di rilevare eccezioni dagli altri membri, ad esempio <xref:System.IO.DriveInfo.TotalSize%2A>, <xref:System.IO.DriveInfo.TotalFreeSpace%2A>e <xref:System.IO.DriveInfo.DriveFormat%2A>.</xref:System.IO.DriveInfo.DriveFormat%2A> </xref:System.IO.DriveInfo.TotalFreeSpace%2A> </xref:System.IO.DriveInfo.TotalSize%2A> Tra l&quot;ora che il codice controlla IsReady e quindi si accede a una delle altre proprietà (anche se l&quot;accesso venga eseguito immediatamente dopo il controllo), un&quot;unità potrebbe essere stato disconnesso o un disco potrebbe essere stato rimosso."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.is_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.is_1.vb)]"
  syntax:
    content: public bool IsReady { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;unità sia pronta; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se l&quot;unità non è pronta."
  overload: System.IO.DriveInfo.IsReady*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.Name
  id: Name
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: Name
  nameWithType: DriveInfo.Name
  fullName: System.IO.DriveInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Ottiene il nome di un&quot;unità, ad esempio c:\\\\."
  remarks: "Questa proprietà è il nome assegnato all&quot;unità, ad esempio C:\\ o e:\\\\."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.name_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.name_1.vb)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Il nome dell&quot;unità."
  overload: System.IO.DriveInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.RootDirectory
  id: RootDirectory
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: RootDirectory
  nameWithType: DriveInfo.RootDirectory
  fullName: System.IO.DriveInfo.RootDirectory
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Ottiene la directory radice dell&quot;unità."
  syntax:
    content: public System.IO.DirectoryInfo RootDirectory { get; }
    return:
      type: System.IO.DirectoryInfo
      description: "Oggetto che contiene la directory radice dell&quot;unità."
  overload: System.IO.DriveInfo.RootDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IO.DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Popola un <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> oggetto con i dati necessari per serializzare l&quot;oggetto di destinazione."
  remarks: "Tutti gli oggetti inclusi nel <xref:System.Runtime.Serialization.SerializationInfo>oggetto vengono automaticamente rilevati e serializzati dal formattatore.</xref:System.Runtime.Serialization.SerializationInfo>       Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.IO.DriveInfo>esegue il cast dell&quot;istanza di un <xref:System.Runtime.Serialization.ISerializable>interfaccia.</xref:System.Runtime.Serialization.ISerializable> </xref:System.IO.DriveInfo>"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Oggetto da popolare con i dati."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "La destinazione (vedere <xref:System.Runtime.Serialization.StreamingContext>) per questa serializzazione.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.ToString
  id: ToString
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: DriveInfo.ToString()
  fullName: System.IO.DriveInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Restituisce un nome di unità come stringa."
  remarks: "Questo metodo restituisce il <xref:System.IO.DriveInfo.Name%2A>proprietà.</xref:System.IO.DriveInfo.Name%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Il nome dell&quot;unità."
  overload: System.IO.DriveInfo.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.TotalFreeSpace
  id: TotalFreeSpace
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: TotalFreeSpace
  nameWithType: DriveInfo.TotalFreeSpace
  fullName: System.IO.DriveInfo.TotalFreeSpace
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Ottiene la quantità totale di spazio libero disponibile in un&quot;unità, in byte."
  remarks: "Questa proprietà indica la quantità totale di spazio libero disponibile nell&quot;unità, non solo ciò che è disponibile per l&quot;utente corrente."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.to_0_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.to_0_1.vb)]"
  syntax:
    content: public long TotalFreeSpace { get; }
    return:
      type: System.Int64
      description: "Lo spazio disponibile totale disponibile in un&quot;unità, in byte."
  overload: System.IO.DriveInfo.TotalFreeSpace*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Accesso alle informazioni unità negato."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "L&quot;unità non mappata o non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si è verificato un errore dei / o (ad esempio, un errore del disco o un&quot;unità non pronta)."
  platform:
  - net462
- uid: System.IO.DriveInfo.TotalSize
  id: TotalSize
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: TotalSize
  nameWithType: DriveInfo.TotalSize
  fullName: System.IO.DriveInfo.TotalSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Ottiene la dimensione totale di spazio di archiviazione in un&quot;unità, in byte."
  remarks: "Questa proprietà indica le dimensioni totali dell&quot;unità in byte, cosa non appena è disponibile per l&quot;utente corrente."
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.to_1_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.to_1_1.vb)]"
  syntax:
    content: public long TotalSize { get; }
    return:
      type: System.Int64
      description: "Le dimensioni totali dell&quot;unità, in byte."
  overload: System.IO.DriveInfo.TotalSize*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Accesso alle informazioni unità negato."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "L&quot;unità non mappata o non esiste."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si è verificato un errore dei / o (ad esempio, un errore del disco o un&quot;unità non pronta)."
  platform:
  - net462
- uid: System.IO.DriveInfo.VolumeLabel
  id: VolumeLabel
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: VolumeLabel
  nameWithType: DriveInfo.VolumeLabel
  fullName: System.IO.DriveInfo.VolumeLabel
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Ottiene o imposta l&quot;etichetta di volume dell&quot;unità."
  remarks: "La lunghezza dell&quot;etichetta è determinata dal sistema operativo. Ad esempio, NTFS consente un&quot;etichetta di volume per un massimo di 32 caratteri. Si noti che `null` è un VolumeLabel valido."
  example:
  - "The following example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.vo_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.vo_1.vb)]"
  syntax:
    content: public string VolumeLabel { get; set; }
    return:
      type: System.String
      description: "L&quot;etichetta di volume."
  overload: System.IO.DriveInfo.VolumeLabel*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si è verificato un errore dei / o (ad esempio, un errore del disco o un&quot;unità non pronta)."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "L&quot;unità non mappata o non esiste."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante non dispone dell&quot;autorizzazione richiesta."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "L&quot;etichetta di volume viene impostata su una rete o unità CD-ROM.       - oppure - accesso negato a informazioni sull&quot;unità."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.IO.DriveNotFoundException
  parent: System.IO
  isExternal: false
  name: DriveNotFoundException
  nameWithType: DriveNotFoundException
  fullName: System.IO.DriveNotFoundException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.IO.DriveInfo.#ctor(System.String)
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveInfo(String)
  nameWithType: DriveInfo.DriveInfo(String)
  fullName: System.IO.DriveInfo.DriveInfo(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.DriveInfo.AvailableFreeSpace
  parent: System.IO.DriveInfo
  isExternal: false
  name: AvailableFreeSpace
  nameWithType: DriveInfo.AvailableFreeSpace
  fullName: System.IO.DriveInfo.AvailableFreeSpace
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.DriveInfo.DriveFormat
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveFormat
  nameWithType: DriveInfo.DriveFormat
  fullName: System.IO.DriveInfo.DriveFormat
- uid: System.IO.DriveInfo.DriveType
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveType
  nameWithType: DriveInfo.DriveType
  fullName: System.IO.DriveInfo.DriveType
- uid: System.IO.DriveType
  parent: System.IO
  isExternal: false
  name: DriveType
  nameWithType: DriveType
  fullName: System.IO.DriveType
- uid: System.IO.DriveInfo.GetDrives
  parent: System.IO.DriveInfo
  isExternal: false
  name: GetDrives()
  nameWithType: DriveInfo.GetDrives()
  fullName: System.IO.DriveInfo.GetDrives()
- uid: System.IO.DriveInfo[]
  parent: System.IO
  isExternal: false
  name: DriveInfo
  nameWithType: DriveInfo
  fullName: System.IO.DriveInfo[]
  spec.csharp:
  - uid: System.IO.DriveInfo
    name: DriveInfo
    nameWithType: DriveInfo
    fullName: DriveInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.DriveInfo.IsReady
  parent: System.IO.DriveInfo
  isExternal: false
  name: IsReady
  nameWithType: DriveInfo.IsReady
  fullName: System.IO.DriveInfo.IsReady
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.DriveInfo.Name
  parent: System.IO.DriveInfo
  isExternal: false
  name: Name
  nameWithType: DriveInfo.Name
  fullName: System.IO.DriveInfo.Name
- uid: System.IO.DriveInfo.RootDirectory
  parent: System.IO.DriveInfo
  isExternal: false
  name: RootDirectory
  nameWithType: DriveInfo.RootDirectory
  fullName: System.IO.DriveInfo.RootDirectory
- uid: System.IO.DirectoryInfo
  parent: System.IO
  isExternal: false
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.DriveInfo
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IO.DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.IO.DriveInfo.ToString
  parent: System.IO.DriveInfo
  isExternal: false
  name: ToString()
  nameWithType: DriveInfo.ToString()
  fullName: System.IO.DriveInfo.ToString()
- uid: System.IO.DriveInfo.TotalFreeSpace
  parent: System.IO.DriveInfo
  isExternal: false
  name: TotalFreeSpace
  nameWithType: DriveInfo.TotalFreeSpace
  fullName: System.IO.DriveInfo.TotalFreeSpace
- uid: System.IO.DriveInfo.TotalSize
  parent: System.IO.DriveInfo
  isExternal: false
  name: TotalSize
  nameWithType: DriveInfo.TotalSize
  fullName: System.IO.DriveInfo.TotalSize
- uid: System.IO.DriveInfo.VolumeLabel
  parent: System.IO.DriveInfo
  isExternal: false
  name: VolumeLabel
  nameWithType: DriveInfo.VolumeLabel
  fullName: System.IO.DriveInfo.VolumeLabel
- uid: System.IO.DriveInfo.#ctor*
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveInfo
  nameWithType: DriveInfo.DriveInfo
- uid: System.IO.DriveInfo.AvailableFreeSpace*
  parent: System.IO.DriveInfo
  isExternal: false
  name: AvailableFreeSpace
  nameWithType: DriveInfo.AvailableFreeSpace
- uid: System.IO.DriveInfo.DriveFormat*
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveFormat
  nameWithType: DriveInfo.DriveFormat
- uid: System.IO.DriveInfo.DriveType*
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveType
  nameWithType: DriveInfo.DriveType
- uid: System.IO.DriveInfo.GetDrives*
  parent: System.IO.DriveInfo
  isExternal: false
  name: GetDrives
  nameWithType: DriveInfo.GetDrives
- uid: System.IO.DriveInfo.IsReady*
  parent: System.IO.DriveInfo
  isExternal: false
  name: IsReady
  nameWithType: DriveInfo.IsReady
- uid: System.IO.DriveInfo.Name*
  parent: System.IO.DriveInfo
  isExternal: false
  name: Name
  nameWithType: DriveInfo.Name
- uid: System.IO.DriveInfo.RootDirectory*
  parent: System.IO.DriveInfo
  isExternal: false
  name: RootDirectory
  nameWithType: DriveInfo.RootDirectory
- uid: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.IO.DriveInfo
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.IO.DriveInfo.ToString*
  parent: System.IO.DriveInfo
  isExternal: false
  name: ToString
  nameWithType: DriveInfo.ToString
- uid: System.IO.DriveInfo.TotalFreeSpace*
  parent: System.IO.DriveInfo
  isExternal: false
  name: TotalFreeSpace
  nameWithType: DriveInfo.TotalFreeSpace
- uid: System.IO.DriveInfo.TotalSize*
  parent: System.IO.DriveInfo
  isExternal: false
  name: TotalSize
  nameWithType: DriveInfo.TotalSize
- uid: System.IO.DriveInfo.VolumeLabel*
  parent: System.IO.DriveInfo
  isExternal: false
  name: VolumeLabel
  nameWithType: DriveInfo.VolumeLabel
