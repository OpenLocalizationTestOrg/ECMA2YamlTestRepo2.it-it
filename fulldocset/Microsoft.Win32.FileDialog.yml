### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.FileDialog
  id: FileDialog
  children:
  - Microsoft.Win32.FileDialog.#ctor
  - Microsoft.Win32.FileDialog.AddExtension
  - Microsoft.Win32.FileDialog.CheckFileExists
  - Microsoft.Win32.FileDialog.CheckPathExists
  - Microsoft.Win32.FileDialog.CustomPlaces
  - Microsoft.Win32.FileDialog.DefaultExt
  - Microsoft.Win32.FileDialog.DereferenceLinks
  - Microsoft.Win32.FileDialog.FileName
  - Microsoft.Win32.FileDialog.FileNames
  - Microsoft.Win32.FileDialog.FileOk
  - Microsoft.Win32.FileDialog.Filter
  - Microsoft.Win32.FileDialog.FilterIndex
  - Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  - Microsoft.Win32.FileDialog.InitialDirectory
  - Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  - Microsoft.Win32.FileDialog.Options
  - Microsoft.Win32.FileDialog.Reset
  - Microsoft.Win32.FileDialog.RestoreDirectory
  - Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  - Microsoft.Win32.FileDialog.SafeFileName
  - Microsoft.Win32.FileDialog.SafeFileNames
  - Microsoft.Win32.FileDialog.Title
  - Microsoft.Win32.FileDialog.ToString
  - Microsoft.Win32.FileDialog.ValidateNames
  langs:
  - csharp
  name: FileDialog
  nameWithType: FileDialog
  fullName: Microsoft.Win32.FileDialog
  type: Class
  summary: "Una classe base astratta che incapsula funzionalità comuni alle finestre di dialogo file, tra cui <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref> e <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>."
  syntax:
    content: 'public abstract class FileDialog : Microsoft.Win32.CommonDialog'
  inheritance:
  - System.Object
  - Microsoft.Win32.CommonDialog
  implements: []
  inheritedMembers:
  - Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog
  - Microsoft.Win32.CommonDialog.ShowDialog
  - Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)
  - Microsoft.Win32.CommonDialog.Tag
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.#ctor
  id: '#ctor'
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileDialog()
  nameWithType: FileDialog.FileDialog()
  fullName: Microsoft.Win32.FileDialog.FileDialog()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Inizializza una nuova istanza di <xref href=&quot;Microsoft.Win32.FileDialog&quot;> </xref> classe."
  syntax:
    content: protected FileDialog ();
    parameters: []
  overload: Microsoft.Win32.FileDialog.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.AddExtension
  id: AddExtension
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: Microsoft.Win32.FileDialog.AddExtension
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Ottiene o imposta un valore che indica se una finestra di dialogo file aggiunge automaticamente un&quot;estensione a un nome di file quando l&quot;utente non la specifica un&quot;estensione."
  syntax:
    content: public bool AddExtension { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se le estensioni vengono aggiunte; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.FileDialog.AddExtension*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.CheckFileExists
  id: CheckFileExists
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: Microsoft.Win32.FileDialog.CheckFileExists
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Ottiene o imposta un valore che indica se una finestra di dialogo file viene visualizzato un avviso se l&quot;utente specifica un nome di file che non esiste."
  remarks: "La <xref:Microsoft.Win32.OpenFileDialog>classe imposta questa proprietà su `true` nel relativo costruttore.</xref:Microsoft.Win32.OpenFileDialog>"
  syntax:
    content: public virtual bool CheckFileExists { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se gli avvisi vengono visualizzati; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito di questa classe di base è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.FileDialog.CheckFileExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.CheckPathExists
  id: CheckPathExists
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: Microsoft.Win32.FileDialog.CheckPathExists
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Ottiene o imposta un valore che specifica se gli avvisi vengono visualizzati quando l&quot;utente digita percorsi non validi e i nomi di file."
  syntax:
    content: public bool CheckPathExists { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se gli avvisi vengono visualizzati; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.FileDialog.CheckPathExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.CustomPlaces
  id: CustomPlaces
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: Microsoft.Win32.FileDialog.CustomPlaces
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Ottiene o imposta l&quot;elenco di percorsi personalizzati per finestre di dialogo file."
  remarks: "A partire da [!INCLUDE[TLA2#tla_winvista](~/add/includes/tla2sharptla-winvista-md.md)], aprire e salvare le finestre di dialogo file hanno un **collegamenti Preferiti** pannello sul lato sinistro della finestra di dialogo che consente all&quot;utente di spostarsi rapidamente in un percorso diverso. Questi collegamenti sono detti posizioni personalizzate. Questa proprietà consente di modificare l&quot;elenco visualizzato quando l&quot;applicazione utilizza una finestra di dialogo."
  syntax:
    content: public System.Collections.Generic.IList<Microsoft.Win32.FileDialogCustomPlace> CustomPlaces { get; set; }
    return:
      type: System.Collections.Generic.IList{Microsoft.Win32.FileDialogCustomPlace}
      description: "Elenco di posizioni personalizzate."
  overload: Microsoft.Win32.FileDialog.CustomPlaces*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.DefaultExt
  id: DefaultExt
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: Microsoft.Win32.FileDialog.DefaultExt
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Ottiene o imposta un valore che specifica la stringa dell&quot;estensione predefinita da utilizzare per filtrare l&quot;elenco di file che vengono visualizzati."
  remarks: "La stringa dell&quot;estensione deve contenere il punto iniziale. Ad esempio, impostare la proprietà di DefaultExt a &quot;txt&quot; per selezionare tutti i file di testo.       Per impostazione predefinita, il <xref:Microsoft.Win32.FileDialog.AddExtension%2A>proprietà tenta di determinare l&quot;estensione per filtrare l&quot;elenco di file visualizzati dal <xref:Microsoft.Win32.FileDialog.Filter%2A>proprietà.</xref:Microsoft.Win32.FileDialog.Filter%2A> </xref:Microsoft.Win32.FileDialog.AddExtension%2A> Se non è possibile determinare l&quot;estensione dal <xref:Microsoft.Win32.FileDialog.Filter%2A>verrà utilizzato proprietà DefaultExt.</xref:Microsoft.Win32.FileDialog.Filter%2A>"
  example:
  - "The following example shows how to create an <xref:Microsoft.Win32.OpenFileDialog> that contains a default file name and extension type.  \n  \n [!code-cs[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/add/codesnippet/csharp/DialogBoxesOverviewSnippets.CSharp/Window1.xaml.cs#openfiledialogboxcodebehind)]\n [!code-vb[DialogBoxesOverviewSnippets#OpenFileDialogBoxCODEBEHIND](~/add/codesnippet/visualbasic/dialogboxesoverviewsnippets/window1.xaml.vb#openfiledialogboxcodebehind)]"
  syntax:
    content: public string DefaultExt { get; set; }
    return:
      type: System.String
      description: "Stringa dell&quot;estensione predefinita. Il valore predefinito è <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.DefaultExt*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.DereferenceLinks
  id: DereferenceLinks
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: Microsoft.Win32.FileDialog.DereferenceLinks
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Ottiene o imposta un valore che indica se una finestra di dialogo file restituisce il percorso del file a cui fa riferimento un collegamento o il percorso del file del collegamento (lnk)."
  syntax:
    content: public bool DereferenceLinks { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per restituire la posizione in cui che si fa riferimento. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per restituire il percorso del collegamento. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.FileDialog.DereferenceLinks*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FileName
  id: FileName
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: Microsoft.Win32.FileDialog.FileName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Ottiene o imposta una stringa contenente il percorso completo del file selezionato nella finestra di dialogo file."
  remarks: "Se si seleziona più di un nome di file (lunghezza <xref:Microsoft.Win32.FileDialog.FileNames%2A>è maggiore di uno), nome del file contiene il primo nome file selezionato.</xref:Microsoft.Win32.FileDialog.FileNames%2A> Se è selezionato alcun nome file, questa proprietà contiene <xref:System.String.Empty>anziché `null`.</xref:System.String.Empty>"
  syntax:
    content: public string FileName { get; set; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>che è il percorso completo del file selezionato nella finestra di dialogo file.</xref:System.String> Il valore predefinito è <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.FileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FileNames
  id: FileNames
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: Microsoft.Win32.FileDialog.FileNames
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Ottiene una matrice che contiene un nome di file per ogni file selezionato."
  syntax:
    content: public string[] FileNames { get; }
    return:
      type: System.String[]
      description: "Matrice di <xref:System.String>che contiene un nome di file per ogni file selezionato.</xref:System.String> Il valore predefinito è una matrice con un solo elemento il cui valore è <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.FileNames*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FileOk
  id: FileOk
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FileOk
  nameWithType: FileDialog.FileOk
  fullName: Microsoft.Win32.FileDialog.FileOk
  type: Event
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Si verifica quando l&quot;utente seleziona un nome file facendo clic di **aprire** pulsante del <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref> o **salvare** pulsante del <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>."
  remarks: "FileOk viene generato dopo che l&quot;utente seleziona un nome di file, ma prima che venga chiuso la finestra di dialogo, che consente di elaborare la selezione. Se necessario, è possibile annullare la selezione dell&quot;utente impostando il <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>proprietà del <xref:System.ComponentModel.CancelEventArgs>argomento `true`.</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>"
  syntax:
    content: public event System.ComponentModel.CancelEventHandler FileOk;
    return:
      type: System.ComponentModel.CancelEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Filter
  id: Filter
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: Microsoft.Win32.FileDialog.Filter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Ottiene o imposta la stringa di filtro che determina i tipi di file visualizzati dal <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref> o <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>."
  remarks: "If Filter is either `null` or <xref:System.String>, all files are displayed, and folders are always displayed.  \n  \n You can specify a subset of file types to be displayed by setting the Filter property. Each file type can represent a specific type of file, such as the following:  \n  \n-   Word Documents (*.doc)  \n  \n-   Excel Worksheets (*.xls)  \n  \n-   PowerPoint Presentations (*.ppt)  \n  \n Alternatively, a file type can represent a group of related file types, such as the following:  \n  \n-   Office Files (*.doc, \\*.xls, \\*.ppt)  \n  \n-   All Files (*.\\*)  \n  \n To specify a subset of the types of files that are displayed, you set the Filter property with a string value (the *filter string*) that specifies one or more types of files to filter by. The following shows the expected format of the filter string:  \n  \n `FileType1[[|FileType2]...[|FileTypeN]]`  \n  \n You use the following format to describe each file type:  \n  \n `Label|Extension1[[;Extension2]...[;ExtensionN]]`  \n  \n The *Label* part is a human-readable string value that describes the file type, such as the following:  \n  \n-   \"Word Documents\"  \n  \n-   \"Excel Worksheets\"  \n  \n-   \"PowerPoint Presentations\"  \n  \n-   \"Office Files\"  \n  \n-   \"All Files\"  \n  \n Each file type must be described by at least one *Extension*. If more than one *Extension* is used, each *Extension* must be separated by a semicolon (\";\"). For example:  \n  \n-   \"*.doc\"  \n  \n-   \"*.xls;\"  \n  \n-   \"*.ppt\"  \n  \n-   \"*.doc;\\*.xls;\\*.ppt\"  \n  \n-   \"*.\\*\"  \n  \n The following are complete examples of valid Filter string values:  \n  \n-   `Word Documents|*.doc`  \n  \n-   `Excel Worksheets|*.xls`  \n  \n-   `PowerPoint Presentations|*.ppt`  \n  \n-   `Office Files|*.doc;*.xls;*.ppt`  \n  \n-   `All Files|*.*`  \n  \n-   `Word Documents|*.doc|Excel Worksheets|*.xls|PowerPoint Presentations|*.ppt|Office Files|*.doc;*.xls;*.ppt|All Files|*.*`  \n  \n Each file type that is included in the filter is added as a separate item to the **Files of type:** drop-down list in the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog>, as shown in the following figure.  \n  \n ![Using the FileDialog.Filter in the Open Dialog Box](~/add/media/filedialogfilterfigure1.png \"Using the FileDialog.Filter in the Open Dialog Box\")  \n  \n The user can choose a file type from this list to filter by. By default, the first item in the list (for example, the first file type) is selected when the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> is displayed. To specify that another file type to be selected, you set the <xref:Microsoft.Win32.FileDialog.FilterIndex%2A> property before showing the <xref:Microsoft.Win32.OpenFileDialog> or <xref:Microsoft.Win32.SaveFileDialog> (by calling <xref:Microsoft.Win32.CommonDialog.ShowDialog%2A>)."
  example:
  - "The following examples demonstrate several types of filter strings that can be set by using the Filter property.  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString1](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring1)]\n[!code-vb[FileDialogFilterSnippets#FilterString1](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring1)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString2](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring2)]\n[!code-vb[FileDialogFilterSnippets#FilterString2](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring2)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString3](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring3)]\n[!code-vb[FileDialogFilterSnippets#FilterString3](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring3)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString4](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring4)]\n[!code-vb[FileDialogFilterSnippets#FilterString4](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring4)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString5](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring5)]\n[!code-vb[FileDialogFilterSnippets#FilterString5](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring5)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString6](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring6)]\n[!code-vb[FileDialogFilterSnippets#FilterString6](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring6)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString7](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring7)]\n[!code-vb[FileDialogFilterSnippets#FilterString7](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring7)]  \n  \n [!code-cs[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#nscode)]\n [!code-vb[FileDialogFilterSnippets#NSCODE](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#nscode)]  \n[!code-cs[FileDialogFilterSnippets#FilterString8](~/add/codesnippet/csharp/FileDialogFilterSnippets/Window1.xaml.cs#filterstring8)]\n[!code-vb[FileDialogFilterSnippets#FilterString8](~/add/codesnippet/visualbasic/filedialogfiltersnippets/window1.xaml.vb#filterstring8)]"
  syntax:
    content: public string Filter { get; set; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>che contiene il filtro.</xref:System.String> Il valore predefinito è <xref:System.String>, il che significa che viene applicato alcun filtro e tutti i tipi di file vengono visualizzati.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.Filter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La stringa di filtro non è valida."
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.FilterIndex
  id: FilterIndex
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: Microsoft.Win32.FileDialog.FilterIndex
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Ottiene o imposta l&quot;indice del filtro attualmente selezionato nella finestra di dialogo file."
  remarks: "Questo indice è basato su 1, non a base 0, a causa dei requisiti di compatibilità con sottostante [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)]."
  syntax:
    content: public int FilterIndex { get; set; }
    return:
      type: System.Int32
      description: "Il <xref:System.Int32>che è l&quot;indice del filtro selezionato.</xref:System.Int32> Il valore predefinito è 1."
  overload: Microsoft.Win32.FileDialog.FilterIndex*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  id: HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: Microsoft.Win32.FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Definisce la routine di hook finestra di dialogo file comune di cui è eseguito l&quot;override per aggiungere funzionalità comuni a una finestra di dialogo file."
  syntax:
    content: protected override IntPtr HookProc (IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: "Handle di finestra per il [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] finestra di dialogo."
    - id: msg
      type: System.Int32
      description: "Messaggio da elaborare tramite il [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] finestra di dialogo."
    - id: wParam
      type: System.IntPtr
      description: "Parametri per le azioni di finestra di dialogo."
    - id: lParam
      type: System.IntPtr
      description: "Parametri per le azioni di finestra di dialogo."
    return:
      type: System.IntPtr
      description: "Restituisce <xref:System.IntPtr>per indicare l&quot;esito positivo; in caso contrario, in cui viene restituito un valore diverso da zero per indicare un errore.</xref:System.IntPtr>"
  overload: Microsoft.Win32.FileDialog.HookProc*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.InitialDirectory
  id: InitialDirectory
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: Microsoft.Win32.FileDialog.InitialDirectory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Ottiene o imposta la directory iniziale visualizzata da una finestra di dialogo file."
  remarks: "Se è presente alcun set di directory iniziale, questa proprietà conterrà <xref:System.String>anziché una stringa null.</xref:System.String>"
  syntax:
    content: public string InitialDirectory { get; set; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>che contiene la directory iniziale.</xref:System.String> Il valore predefinito è <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.InitialDirectory*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  id: OnFileOk(System.ComponentModel.CancelEventArgs)
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: OnFileOk(CancelEventArgs)
  nameWithType: FileDialog.OnFileOk(CancelEventArgs)
  fullName: Microsoft.Win32.FileDialog.OnFileOk(CancelEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Genera il <xref href=&quot;Microsoft.Win32.FileDialog.FileOk&quot;> </xref> evento."
  remarks: "OnFileOk genera il <xref:Microsoft.Win32.FileDialog.FileOk>evento.</xref:Microsoft.Win32.FileDialog.FileOk>       Un tipo che deriva da <xref:Microsoft.Win32.FileDialog>può eseguire l&quot;override OnFileOk.</xref:Microsoft.Win32.FileDialog> Il metodo sottoposto a override deve chiamare OnFileOk sulla classe di base se <xref:Microsoft.Win32.FileDialog.FileOk>deve essere generato.</xref:Microsoft.Win32.FileDialog.FileOk>"
  syntax:
    content: protected void OnFileOk (System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "Oggetto <xref:System.ComponentModel.CancelEventArgs>che contiene i dati dell&quot;evento.</xref:System.ComponentModel.CancelEventArgs>"
  overload: Microsoft.Win32.FileDialog.OnFileOk*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Options
  id: Options
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Options
  nameWithType: FileDialog.Options
  fullName: Microsoft.Win32.FileDialog.Options
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Ottiene il [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] flag della finestra di dialogo file comune utilizzati da finestre di dialogo per l&quot;inizializzazione di file."
  remarks: "Questo valore viene utilizzato per visualizzare una finestra di dialogo file con il set corrente di valori di proprietà. Le opzioni sono esposte come proprietà nelle finestre di dialogo specifiche, ma non sono documentate come valori di flag pubblici a questo livello, pertanto gli utilizzi di questa proprietà sono principalmente interni, da utilizzare quando si implementa le classi derivate <xref:Microsoft.Win32.OpenFileDialog>e <xref:Microsoft.Win32.SaveFileDialog>.</xref:Microsoft.Win32.SaveFileDialog> </xref:Microsoft.Win32.OpenFileDialog>"
  syntax:
    content: protected int Options { get; }
    return:
      type: System.Int32
      description: "Oggetto <xref:System.Int32>che contiene il [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] flag della finestra di dialogo file comune utilizzati da finestre di dialogo per l&quot;inizializzazione di file.</xref:System.Int32>"
  overload: Microsoft.Win32.FileDialog.Options*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Reset
  id: Reset
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Reset()
  nameWithType: FileDialog.Reset()
  fullName: Microsoft.Win32.FileDialog.Reset()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Tutte le proprietà di una finestra di dialogo file reimpostato sui rispettivi valori iniziali."
  syntax:
    content: public override void Reset ();
    parameters: []
  overload: Microsoft.Win32.FileDialog.Reset*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.RestoreDirectory
  id: RestoreDirectory
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: Microsoft.Win32.FileDialog.RestoreDirectory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Questa proprietà non è implementata."
  syntax:
    content: public bool RestoreDirectory { get; set; }
    return:
      type: System.Boolean
      description: "Non implementata."
  overload: Microsoft.Win32.FileDialog.RestoreDirectory*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  id: RunDialog(System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: RunDialog(IntPtr)
  nameWithType: FileDialog.RunDialog(IntPtr)
  fullName: Microsoft.Win32.FileDialog.RunDialog(IntPtr)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "<xref:Microsoft.Win32.CommonDialog.RunDialog*>viene chiamato per visualizzare una finestra di dialogo file in una classe derivata, ad esempio <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref> e <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>.</xref:Microsoft.Win32.CommonDialog.RunDialog*>"
  remarks: "La finestra di dialogo visualizzata viene assegnata una finestra, specificata dal `hwndOwner` parametro."
  syntax:
    content: protected override bool RunDialog (IntPtr hwndOwner);
    parameters:
    - id: hwndOwner
      type: System.IntPtr
      description: "Handle per la finestra proprietaria la finestra di dialogo."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;utente fa clic il **OK** pulsante della finestra di dialogo visualizzata (ad esempio, <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref>, <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>); in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.FileDialog.RunDialog*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.SafeFileName
  id: SafeFileName
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: SafeFileName
  nameWithType: FileDialog.SafeFileName
  fullName: Microsoft.Win32.FileDialog.SafeFileName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Ottiene una stringa che contiene solo il nome del file per il file selezionato."
  remarks: "Questo valore è il <xref:Microsoft.Win32.FileDialog.FileName%2A>con tutte le informazioni di percorso rimosse.</xref:Microsoft.Win32.FileDialog.FileName%2A> Rimozione di percorsi rende il valore appropriato per l&quot;utilizzo in applicazioni parzialmente attendibili, in quanto impedisce l&quot;individuazione di informazioni nel file system locale di applicazioni.       Se si seleziona più di un nome di file (lunghezza <xref:Microsoft.Win32.FileDialog.SafeFileNames%2A>è maggiore di uno), questa proprietà contiene solo il primo nome file selezionato.</xref:Microsoft.Win32.FileDialog.SafeFileNames%2A>       Vedere [caricamento File sicuro da un campione XBAP](http://msdn.microsoft.com/en-us/01206dd3-acc7-45ff-aeb9-502c20aaad2c)."
  syntax:
    content: public string SafeFileName { get; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>che contiene solo il nome del file per il file selezionato.</xref:System.String> Il valore predefinito è <xref:System.String>, che è anche il valore quando è selezionato alcun file o una directory.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.SafeFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.SafeFileNames
  id: SafeFileNames
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: SafeFileNames
  nameWithType: FileDialog.SafeFileNames
  fullName: Microsoft.Win32.FileDialog.SafeFileNames
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Ottiene una matrice che contiene un nome file sicuro per ogni file selezionato."
  remarks: "Vedere <xref:Microsoft.Win32.FileDialog.SafeFileName%2A>.</xref:Microsoft.Win32.FileDialog.SafeFileName%2A>"
  syntax:
    content: public string[] SafeFileNames { get; }
    return:
      type: System.String[]
      description: "Matrice di <xref:System.String>che contiene un nome file sicuro per ogni file selezionato.</xref:System.String> Il valore predefinito è una matrice con un solo elemento il cui valore è <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.SafeFileNames*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.Title
  id: Title
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: Title
  nameWithType: FileDialog.Title
  fullName: Microsoft.Win32.FileDialog.Title
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Ottiene o imposta il testo visualizzato nella barra del titolo della finestra di dialogo file."
  remarks: "Se il titolo è null o <xref:System.String>, viene utilizzato un valore localizzato predefinito, ad esempio &quot;Salva con nome&quot; o &quot;Apri&quot;.</xref:System.String>"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "Oggetto <xref:System.String>che è il testo visualizzato nella barra del titolo della finestra di dialogo file.</xref:System.String> Il valore predefinito è <xref:System.String>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.Title*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.ToString
  id: ToString
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: ToString()
  nameWithType: FileDialog.ToString()
  fullName: Microsoft.Win32.FileDialog.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Restituisce una stringa che rappresenta una finestra di dialogo file."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Oggetto <xref:System.String>rappresentazione <xref href=&quot;Microsoft.Win32.FileDialog&quot;> </xref> che contiene il percorso completo per qualsiasi file selezionato da <xref href=&quot;Microsoft.Win32.OpenFileDialog&quot;> </xref>, <xref href=&quot;Microsoft.Win32.SaveFileDialog&quot;> </xref>.</xref:System.String>"
  overload: Microsoft.Win32.FileDialog.ToString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.FileDialog.ValidateNames
  id: ValidateNames
  parent: Microsoft.Win32.FileDialog
  langs:
  - csharp
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: Microsoft.Win32.FileDialog.ValidateNames
  type: Property
  assemblies:
  - PresentationFramework
  namespace: Microsoft.Win32
  summary: "Ottiene o imposta un valore che indica se la finestra di dialogo accetta che solo valido [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] i nomi di file."
  syntax:
    content: public bool ValidateNames { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se vengono visualizzati avvisi quando viene fornito un nome di file non valido. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.Win32.FileDialog.ValidateNames*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Win32.CommonDialog
  isExternal: false
  name: Microsoft.Win32.CommonDialog
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: Microsoft.Win32.FileDialog.#ctor
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileDialog()
  nameWithType: FileDialog.FileDialog()
  fullName: Microsoft.Win32.FileDialog.FileDialog()
- uid: Microsoft.Win32.FileDialog.AddExtension
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: AddExtension
  nameWithType: FileDialog.AddExtension
  fullName: Microsoft.Win32.FileDialog.AddExtension
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.FileDialog.CheckFileExists
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
  fullName: Microsoft.Win32.FileDialog.CheckFileExists
- uid: Microsoft.Win32.FileDialog.CheckPathExists
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
  fullName: Microsoft.Win32.FileDialog.CheckPathExists
- uid: Microsoft.Win32.FileDialog.CustomPlaces
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
  fullName: Microsoft.Win32.FileDialog.CustomPlaces
- uid: System.Collections.Generic.IList{Microsoft.Win32.FileDialogCustomPlace}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<FileDialogCustomPlace>
  nameWithType: IList<FileDialogCustomPlace>
  fullName: System.Collections.Generic.IList<Microsoft.Win32.FileDialogCustomPlace>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<Microsoft.Win32.FileDialogCustomPlace>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Win32.FileDialogCustomPlace
    name: FileDialogCustomPlace
    nameWithType: FileDialogCustomPlace
    fullName: FileDialogCustomPlace
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Win32.FileDialog.DefaultExt
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
  fullName: Microsoft.Win32.FileDialog.DefaultExt
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Win32.FileDialog.DereferenceLinks
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
  fullName: Microsoft.Win32.FileDialog.DereferenceLinks
- uid: Microsoft.Win32.FileDialog.FileName
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileName
  nameWithType: FileDialog.FileName
  fullName: Microsoft.Win32.FileDialog.FileName
- uid: Microsoft.Win32.FileDialog.FileNames
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileNames
  nameWithType: FileDialog.FileNames
  fullName: Microsoft.Win32.FileDialog.FileNames
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Win32.FileDialog.FileOk
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileOk
  nameWithType: FileDialog.FileOk
  fullName: Microsoft.Win32.FileDialog.FileOk
- uid: System.ComponentModel.CancelEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CancelEventHandler
  nameWithType: CancelEventHandler
  fullName: System.ComponentModel.CancelEventHandler
- uid: Microsoft.Win32.FileDialog.Filter
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Filter
  nameWithType: FileDialog.Filter
  fullName: Microsoft.Win32.FileDialog.Filter
- uid: Microsoft.Win32.FileDialog.FilterIndex
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
  fullName: Microsoft.Win32.FileDialog.FilterIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: HookProc(IntPtr,Int32,IntPtr,IntPtr)
  nameWithType: FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
  fullName: Microsoft.Win32.FileDialog.HookProc(IntPtr,Int32,IntPtr,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: Microsoft.Win32.FileDialog.InitialDirectory
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
  fullName: Microsoft.Win32.FileDialog.InitialDirectory
- uid: Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: OnFileOk(CancelEventArgs)
  nameWithType: FileDialog.OnFileOk(CancelEventArgs)
  fullName: Microsoft.Win32.FileDialog.OnFileOk(CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: Microsoft.Win32.FileDialog.Options
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Options
  nameWithType: FileDialog.Options
  fullName: Microsoft.Win32.FileDialog.Options
- uid: Microsoft.Win32.FileDialog.Reset
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Reset()
  nameWithType: FileDialog.Reset()
  fullName: Microsoft.Win32.FileDialog.Reset()
- uid: Microsoft.Win32.FileDialog.RestoreDirectory
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
  fullName: Microsoft.Win32.FileDialog.RestoreDirectory
- uid: Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RunDialog(IntPtr)
  nameWithType: FileDialog.RunDialog(IntPtr)
  fullName: Microsoft.Win32.FileDialog.RunDialog(IntPtr)
- uid: Microsoft.Win32.FileDialog.SafeFileName
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileName
  nameWithType: FileDialog.SafeFileName
  fullName: Microsoft.Win32.FileDialog.SafeFileName
- uid: Microsoft.Win32.FileDialog.SafeFileNames
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileNames
  nameWithType: FileDialog.SafeFileNames
  fullName: Microsoft.Win32.FileDialog.SafeFileNames
- uid: Microsoft.Win32.FileDialog.Title
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Title
  nameWithType: FileDialog.Title
  fullName: Microsoft.Win32.FileDialog.Title
- uid: Microsoft.Win32.FileDialog.ToString
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ToString()
  nameWithType: FileDialog.ToString()
  fullName: Microsoft.Win32.FileDialog.ToString()
- uid: Microsoft.Win32.FileDialog.ValidateNames
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
  fullName: Microsoft.Win32.FileDialog.ValidateNames
- uid: Microsoft.Win32.FileDialog.#ctor*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileDialog
  nameWithType: FileDialog.FileDialog
- uid: Microsoft.Win32.FileDialog.AddExtension*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: AddExtension
  nameWithType: FileDialog.AddExtension
- uid: Microsoft.Win32.FileDialog.CheckFileExists*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckFileExists
  nameWithType: FileDialog.CheckFileExists
- uid: Microsoft.Win32.FileDialog.CheckPathExists*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CheckPathExists
  nameWithType: FileDialog.CheckPathExists
- uid: Microsoft.Win32.FileDialog.CustomPlaces*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: CustomPlaces
  nameWithType: FileDialog.CustomPlaces
- uid: Microsoft.Win32.FileDialog.DefaultExt*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DefaultExt
  nameWithType: FileDialog.DefaultExt
- uid: Microsoft.Win32.FileDialog.DereferenceLinks*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: DereferenceLinks
  nameWithType: FileDialog.DereferenceLinks
- uid: Microsoft.Win32.FileDialog.FileName*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileName
  nameWithType: FileDialog.FileName
- uid: Microsoft.Win32.FileDialog.FileNames*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FileNames
  nameWithType: FileDialog.FileNames
- uid: Microsoft.Win32.FileDialog.Filter*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Filter
  nameWithType: FileDialog.Filter
- uid: Microsoft.Win32.FileDialog.FilterIndex*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: FilterIndex
  nameWithType: FileDialog.FilterIndex
- uid: Microsoft.Win32.FileDialog.HookProc*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: HookProc
  nameWithType: FileDialog.HookProc
- uid: Microsoft.Win32.FileDialog.InitialDirectory*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: InitialDirectory
  nameWithType: FileDialog.InitialDirectory
- uid: Microsoft.Win32.FileDialog.OnFileOk*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: OnFileOk
  nameWithType: FileDialog.OnFileOk
- uid: Microsoft.Win32.FileDialog.Options*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Options
  nameWithType: FileDialog.Options
- uid: Microsoft.Win32.FileDialog.Reset*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Reset
  nameWithType: FileDialog.Reset
- uid: Microsoft.Win32.FileDialog.RestoreDirectory*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RestoreDirectory
  nameWithType: FileDialog.RestoreDirectory
- uid: Microsoft.Win32.FileDialog.RunDialog*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: RunDialog
  nameWithType: FileDialog.RunDialog
- uid: Microsoft.Win32.FileDialog.SafeFileName*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileName
  nameWithType: FileDialog.SafeFileName
- uid: Microsoft.Win32.FileDialog.SafeFileNames*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: SafeFileNames
  nameWithType: FileDialog.SafeFileNames
- uid: Microsoft.Win32.FileDialog.Title*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: Title
  nameWithType: FileDialog.Title
- uid: Microsoft.Win32.FileDialog.ToString*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ToString
  nameWithType: FileDialog.ToString
- uid: Microsoft.Win32.FileDialog.ValidateNames*
  parent: Microsoft.Win32.FileDialog
  isExternal: false
  name: ValidateNames
  nameWithType: FileDialog.ValidateNames
