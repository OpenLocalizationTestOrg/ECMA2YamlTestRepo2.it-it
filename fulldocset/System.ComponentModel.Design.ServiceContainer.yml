### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ServiceContainer
  id: ServiceContainer
  children:
  - System.ComponentModel.Design.ServiceContainer.#ctor
  - System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)
  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  - System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  - System.ComponentModel.Design.ServiceContainer.DefaultServices
  - System.ComponentModel.Design.ServiceContainer.Dispose
  - System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)
  - System.ComponentModel.Design.ServiceContainer.GetService(System.Type)
  - System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)
  - System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)
  langs:
  - csharp
  name: ServiceContainer
  nameWithType: ServiceContainer
  fullName: System.ComponentModel.Design.ServiceContainer
  type: Class
  summary: "Fornisce un&quot;implementazione semplice del <xref href=&quot;System.ComponentModel.Design.IServiceContainer&quot;> </xref> interfaccia. Questa classe non può essere ereditata."
  remarks: "L&quot;oggetto ServiceContainer può essere utilizzato per archiviare e fornire servizi. ServiceContainer implementa il <xref:System.ComponentModel.Design.IServiceContainer>interfaccia.</xref:System.ComponentModel.Design.IServiceContainer>       L&quot;oggetto ServiceContainer può essere creato utilizzando un costruttore che aggiunge un elemento padre <xref:System.ComponentModel.Design.IServiceContainer>tramite il quale servizi possono essere facoltativamente aggiunto o rimosso da tutti padre <xref:System.ComponentModel.Design.IServiceContainer>oggetti, tra cui l&quot;oggetto padre immediato <xref:System.ComponentModel.Design.IServiceContainer>.</xref:System.ComponentModel.Design.IServiceContainer> </xref:System.ComponentModel.Design.IServiceContainer> </xref:System.ComponentModel.Design.IServiceContainer> Per aggiungere o rimuovere un servizio da tutti i <xref:System.ComponentModel.Design.IServiceContainer>implementazioni che sono collegate a questo <xref:System.ComponentModel.Design.IServiceContainer>tramite l&quot;elemento padre, chiamare il <xref:System.ComponentModel.Design.ServiceContainer.AddService%2A>o <xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A>overload del metodo che accetta un valore booleano che indica se promuovere la richiesta di servizio.</xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A> </xref:System.ComponentModel.Design.ServiceContainer.AddService%2A> </xref:System.ComponentModel.Design.IServiceContainer> </xref:System.ComponentModel.Design.IServiceContainer>      > [!NOTE] > Il <xref:System.Security.Permissions.HostProtectionAttribute>attributo applicato a questa classe ha i seguenti elementi <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A>valore della proprietà: <xref:System.Security.Permissions.HostProtectionResource>.</xref:System.Security.Permissions.HostProtectionResource> </xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> </xref:System.Security.Permissions.HostProtectionAttribute> Il <xref:System.Security.Permissions.HostProtectionAttribute>non influiscono sulle applicazioni desktop (che in genere vengono avviate facendo doppio clic su un&quot;icona, digitando un comando oppure immettendo un URL in un browser).</xref:System.Security.Permissions.HostProtectionAttribute> Per ulteriori informazioni, vedere la <xref:System.Security.Permissions.HostProtectionAttribute>classe o [programmazione in SQL Server e attributi di protezione Host](~/add/includes/ajax-current-ext-md.md).</xref:System.Security.Permissions.HostProtectionAttribute>"
  example:
  - "The following example program demonstrates service chaining and the resultant service availability of a chain of linked ServiceContainer objects. The program provides a user interface that allows you to see the availability of services within a chain of linked services, and uses the <xref:System.ComponentModel.Design.ServiceContainer.AddService%2A>, <xref:System.ComponentModel.Design.ServiceContainer.GetService%2A>, and <xref:System.ComponentModel.Design.ServiceContainer.RemoveService%2A> methods as well as linked service containers.  \n  \n [!code-cpp[ServiceArchitectureExample#1](~/add/codesnippet/cpp/t-system.componentmodel._126_1.cpp)]\n [!code-vb[ServiceArchitectureExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._126_1.vb)]\n [!code-cs[ServiceArchitectureExample#1](~/add/codesnippet/csharp/t-system.componentmodel._126_1.cs)]"
  syntax:
    content: 'public class ServiceContainer : IDisposable, IServiceProvider, System.ComponentModel.Design.IServiceContainer'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.Design.IServiceContainer
  - System.IDisposable
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: ServiceContainer()
  nameWithType: ServiceContainer.ServiceContainer()
  fullName: System.ComponentModel.Design.ServiceContainer.ServiceContainer()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Design.ServiceContainer&quot;> </xref> classe."
  syntax:
    content: public ServiceContainer ();
    parameters: []
  overload: System.ComponentModel.Design.ServiceContainer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: ServiceContainer(IServiceProvider)
  nameWithType: ServiceContainer.ServiceContainer(IServiceProvider)
  fullName: System.ComponentModel.Design.ServiceContainer.ServiceContainer(IServiceProvider)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ComponentModel.Design.ServiceContainer&quot;> </xref> classe utilizzando il provider di servizi padre specificato."
  remarks: "Il contenitore di servizi Usa questo provider di oggetti servizio per recuperare i servizi, se non sono disponibili localmente nel contenitore."
  syntax:
    content: public ServiceContainer (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "Un provider di servizi padre."
  overload: System.ComponentModel.Design.ServiceContainer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: AddService(Type,ServiceCreatorCallback)
  nameWithType: ServiceContainer.AddService(Type,ServiceCreatorCallback)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,ServiceCreatorCallback)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Aggiunge il servizio specificato al contenitore del servizio."
  remarks: ''
  example:
  - "The following example illustrates how to add a service to a <xref:System.ComponentModel.Design.ServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#3](~/add/codesnippet/csharp/361e39aa-642e-4002-bd54-_1.cs)]\n [!code-vb[ServiceContainerExample#3](~/add/codesnippet/visualbasic/361e39aa-642e-4002-bd54-_1.vb)]\n [!code-cpp[ServiceContainerExample#3](~/add/codesnippet/cpp/361e39aa-642e-4002-bd54-_1.cpp)]"
  syntax:
    content: public void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il tipo di servizio da aggiungere."
    - id: callback
      type: System.ComponentModel.Design.ServiceCreatorCallback
      description: "Un oggetto callback che è possibile creare il servizio. Consente a un servizio essere dichiarata come disponibili, ma ritarda la creazione dell&quot;oggetto fino a quando non è richiesto il servizio."
  overload: System.ComponentModel.Design.ServiceContainer.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>callback</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Un servizio di tipo <code> serviceType </code> esiste già nel contenitore."
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)
  id: AddService(System.Type,System.Object)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: AddService(Type,Object)
  nameWithType: ServiceContainer.AddService(Type,Object)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Aggiunge il servizio specificato al contenitore del servizio."
  remarks: ''
  example:
  - "The following example illustrates how to add a service to a <xref:System.ComponentModel.Design.ServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#2](~/add/codesnippet/csharp/7d5e79e6-2750-48e2-b4e9-_1.cs)]\n [!code-vb[ServiceContainerExample#2](~/add/codesnippet/visualbasic/7d5e79e6-2750-48e2-b4e9-_1.vb)]\n [!code-cpp[ServiceContainerExample#2](~/add/codesnippet/cpp/7d5e79e6-2750-48e2-b4e9-_1.cpp)]"
  syntax:
    content: public void AddService (Type serviceType, object serviceInstance);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il tipo di servizio da aggiungere."
    - id: serviceInstance
      type: System.Object
      description: "Un&quot;istanza del servizio da aggiungere. Questo oggetto deve implementare o ereditare dal tipo indicato per la `serviceType` parametro."
  overload: System.ComponentModel.Design.ServiceContainer.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>serviceInstance</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Un servizio di tipo <code> serviceType </code> esiste già nel contenitore."
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: AddService(Type,ServiceCreatorCallback,Boolean)
  nameWithType: ServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Aggiunge il servizio specificato al contenitore del servizio."
  syntax:
    content: public virtual void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il tipo di servizio da aggiungere."
    - id: callback
      type: System.ComponentModel.Design.ServiceCreatorCallback
      description: "Un oggetto callback che è possibile creare il servizio. Consente a un servizio essere dichiarata come disponibili, ma ritarda la creazione dell&quot;oggetto fino a quando non è richiesto il servizio."
    - id: promote
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo servizio deve essere aggiunto a qualsiasi contenitore del servizio padre; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.ServiceContainer.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>callback</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Un servizio di tipo <code> serviceType </code> esiste già nel contenitore."
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  id: AddService(System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: AddService(Type,Object,Boolean)
  nameWithType: ServiceContainer.AddService(Type,Object,Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Aggiunge il servizio specificato al contenitore del servizio."
  syntax:
    content: public virtual void AddService (Type serviceType, object serviceInstance, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il tipo di servizio da aggiungere."
    - id: serviceInstance
      type: System.Object
      description: "Un&quot;istanza del tipo di servizio da aggiungere. Questo oggetto deve implementare o ereditare dal tipo indicato per la `serviceType` parametro."
    - id: promote
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo servizio deve essere aggiunto a qualsiasi contenitore del servizio padre; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.ServiceContainer.AddService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>or <code>serviceInstance</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Un servizio di tipo <code> serviceType </code> esiste già nel contenitore."
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.DefaultServices
  id: DefaultServices
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: DefaultServices
  nameWithType: ServiceContainer.DefaultServices
  fullName: System.ComponentModel.Design.ServiceContainer.DefaultServices
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Ottiene i servizi predefiniti implementati direttamente da <xref href=&quot;System.ComponentModel.Design.ServiceContainer&quot;> </xref>."
  remarks: "Questa proprietà restituisce i servizi predefiniti che vengono implementati direttamente in questo <xref:System.ComponentModel.Design.IServiceContainer>.</xref:System.ComponentModel.Design.IServiceContainer> l&quot;implementazione predefinita di questa proprietà viene restituita la <xref:System.ComponentModel.Design.IServiceContainer>e <xref:System.ComponentModel.Design.ServiceContainer>tipi.</xref:System.ComponentModel.Design.ServiceContainer> </xref:System.ComponentModel.Design.IServiceContainer> È possibile eseguire l&quot;override di questa proprietà e restituire tipi personalizzati, modificando il comportamento predefinito di <xref:System.ComponentModel.Component.GetService%2A>.</xref:System.ComponentModel.Component.GetService%2A>"
  syntax:
    content: protected virtual Type[] DefaultServices { get; }
    return:
      type: System.Type[]
      description: "I servizi predefiniti."
  overload: System.ComponentModel.Design.ServiceContainer.DefaultServices*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: Dispose()
  nameWithType: ServiceContainer.Dispose()
  fullName: System.ComponentModel.Design.ServiceContainer.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Elimina il contenitore del servizio."
  remarks: "Dispose illustra tutte le istanze di servizi all&quot;interno del contenitore e consente di eliminare qualsiasi che implementano <xref:System.IDisposable>e cancella l&quot;elenco di servizio.</xref:System.IDisposable>       Chiamare <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>dopo aver terminato di utilizzare <xref:System.ComponentModel.Design.ServiceContainer>.</xref:System.ComponentModel.Design.ServiceContainer> </xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> Il <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>metodo lascia la <xref:System.ComponentModel.Design.ServiceContainer>in uno stato inutilizzabile.</xref:System.ComponentModel.Design.ServiceContainer> </xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> Dopo la chiamata <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>, è necessario rilasciare tutti i riferimenti al <xref:System.ComponentModel.Design.ServiceContainer>in modo che il garbage collector può recuperare la memoria che di <xref:System.ComponentModel.Design.ServiceContainer>occupata.</xref:System.ComponentModel.Design.ServiceContainer> </xref:System.ComponentModel.Design.ServiceContainer> </xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/add/includes/ajax-current-ext-md.md) e [implementazione di un metodo Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Chiamare sempre il metodo <xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>prima di rilasciare l&quot;ultimo riferimento a <xref:System.ComponentModel.Design.ServiceContainer>.</xref:System.ComponentModel.Design.ServiceContainer> </xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A> In caso contrario, le risorse non vengono liberate finché il garbage collector chiama la <xref:System.ComponentModel.Design.ServiceContainer>dell&quot;oggetto `Finalize` metodo.</xref:System.ComponentModel.Design.ServiceContainer>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.ServiceContainer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ServiceContainer.Dispose(Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Elimina il contenitore del servizio."
  remarks: "<xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>vengono illustrate tutte le istanze di servizi all&quot;interno del contenitore e consente di eliminare qualsiasi che implementano <xref:System.IDisposable>e cancella l&quot;elenco di servizio.</xref:System.IDisposable></xref:System.ComponentModel.Design.ServiceContainer.Dispose%2A>       Questo metodo viene chiamato dal metodo pubblico `Dispose()`(metodo) e <xref:System.Object.Finalize%2A>metodo.</xref:System.Object.Finalize%2A> `Dispose()`richiama il metodo protetto `Dispose(Boolean)` metodo con il `disposing` parametro impostato su `true`. <xref:System.Object.Finalize%2A>richiama `Dispose` con `disposing` impostato su `false`.</xref:System.Object.Finalize%2A>       Quando il `disposing` parametro è true, questo metodo rilascia tutte le risorse utilizzate dagli oggetti gestiti da questo <xref:System.ComponentModel.Design.ServiceContainer>riferimenti.</xref:System.ComponentModel.Design.ServiceContainer> Questo metodo richiama il `Dispose()` metodo di ciascun oggetto cui viene fatto riferimento."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.ComponentModel.Design.ServiceContainer&quot;> </xref> sta per essere eliminato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.ServiceContainer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: ServiceContainer.GetService(Type)
  fullName: System.ComponentModel.Design.ServiceContainer.GetService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Ottiene il servizio richiesto."
  syntax:
    content: public virtual object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il tipo di servizio da recuperare."
    return:
      type: System.Object
      description: "Un&quot;istanza del servizio se è stato trovato, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non è stato possibile trovarlo."
  overload: System.ComponentModel.Design.ServiceContainer.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)
  id: RemoveService(System.Type)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: RemoveService(Type)
  nameWithType: ServiceContainer.RemoveService(Type)
  fullName: System.ComponentModel.Design.ServiceContainer.RemoveService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Rimuove il tipo di servizio specificato dal contenitore del servizio."
  remarks: ''
  example:
  - "The following example illustrates how to remove a service from a <xref:System.ComponentModel.Design.ServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#4](~/add/codesnippet/csharp/m-system.componentmodel._24_1.cs)]\n [!code-vb[ServiceContainerExample#4](~/add/codesnippet/visualbasic/m-system.componentmodel._24_1.vb)]\n [!code-cpp[ServiceContainerExample#4](~/add/codesnippet/cpp/m-system.componentmodel._24_1.cpp)]"
  syntax:
    content: public void RemoveService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il tipo di servizio da rimuovere."
  overload: System.ComponentModel.Design.ServiceContainer.RemoveService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)
  id: RemoveService(System.Type,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  langs:
  - csharp
  name: RemoveService(Type,Boolean)
  nameWithType: ServiceContainer.RemoveService(Type,Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.RemoveService(Type,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Rimuove il tipo di servizio specificato dal contenitore del servizio."
  syntax:
    content: public virtual void RemoveService (Type serviceType, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Il tipo di servizio da rimuovere."
    - id: promote
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo servizio deve essere rimosso da qualsiasi contenitore del servizio padre; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.ServiceContainer.RemoveService*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Design.ServiceContainer.#ctor
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: ServiceContainer()
  nameWithType: ServiceContainer.ServiceContainer()
  fullName: System.ComponentModel.Design.ServiceContainer.ServiceContainer()
- uid: System.ComponentModel.Design.ServiceContainer.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: ServiceContainer(IServiceProvider)
  nameWithType: ServiceContainer.ServiceContainer(IServiceProvider)
  fullName: System.ComponentModel.Design.ServiceContainer.ServiceContainer(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService(Type,ServiceCreatorCallback)
  nameWithType: ServiceContainer.AddService(Type,ServiceCreatorCallback)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,ServiceCreatorCallback)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.ServiceCreatorCallback
  parent: System.ComponentModel.Design
  isExternal: false
  name: ServiceCreatorCallback
  nameWithType: ServiceCreatorCallback
  fullName: System.ComponentModel.Design.ServiceCreatorCallback
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService(Type,Object)
  nameWithType: ServiceContainer.AddService(Type,Object)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,Object)
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService(Type,ServiceCreatorCallback,Boolean)
  nameWithType: ServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService(Type,Object,Boolean)
  nameWithType: ServiceContainer.AddService(Type,Object,Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.AddService(Type,Object,Boolean)
- uid: System.ComponentModel.Design.ServiceContainer.DefaultServices
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: DefaultServices
  nameWithType: ServiceContainer.DefaultServices
  fullName: System.ComponentModel.Design.ServiceContainer.DefaultServices
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.Design.ServiceContainer.Dispose
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: Dispose()
  nameWithType: ServiceContainer.Dispose()
  fullName: System.ComponentModel.Design.ServiceContainer.Dispose()
- uid: System.ComponentModel.Design.ServiceContainer.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ServiceContainer.Dispose(Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.Dispose(Boolean)
- uid: System.ComponentModel.Design.ServiceContainer.GetService(System.Type)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: GetService(Type)
  nameWithType: ServiceContainer.GetService(Type)
  fullName: System.ComponentModel.Design.ServiceContainer.GetService(Type)
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: RemoveService(Type)
  nameWithType: ServiceContainer.RemoveService(Type)
  fullName: System.ComponentModel.Design.ServiceContainer.RemoveService(Type)
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: RemoveService(Type,Boolean)
  nameWithType: ServiceContainer.RemoveService(Type,Boolean)
  fullName: System.ComponentModel.Design.ServiceContainer.RemoveService(Type,Boolean)
- uid: System.ComponentModel.Design.ServiceContainer.#ctor*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: ServiceContainer
  nameWithType: ServiceContainer.ServiceContainer
- uid: System.ComponentModel.Design.ServiceContainer.AddService*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: AddService
  nameWithType: ServiceContainer.AddService
- uid: System.ComponentModel.Design.ServiceContainer.DefaultServices*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: DefaultServices
  nameWithType: ServiceContainer.DefaultServices
- uid: System.ComponentModel.Design.ServiceContainer.Dispose*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: Dispose
  nameWithType: ServiceContainer.Dispose
- uid: System.ComponentModel.Design.ServiceContainer.GetService*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: GetService
  nameWithType: ServiceContainer.GetService
- uid: System.ComponentModel.Design.ServiceContainer.RemoveService*
  parent: System.ComponentModel.Design.ServiceContainer
  isExternal: false
  name: RemoveService
  nameWithType: ServiceContainer.RemoveService
