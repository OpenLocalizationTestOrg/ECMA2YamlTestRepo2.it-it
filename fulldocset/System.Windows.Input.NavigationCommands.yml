### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.NavigationCommands
  id: NavigationCommands
  children:
  - System.Windows.Input.NavigationCommands.BrowseBack
  - System.Windows.Input.NavigationCommands.BrowseForward
  - System.Windows.Input.NavigationCommands.BrowseHome
  - System.Windows.Input.NavigationCommands.BrowseStop
  - System.Windows.Input.NavigationCommands.DecreaseZoom
  - System.Windows.Input.NavigationCommands.Favorites
  - System.Windows.Input.NavigationCommands.FirstPage
  - System.Windows.Input.NavigationCommands.GoToPage
  - System.Windows.Input.NavigationCommands.IncreaseZoom
  - System.Windows.Input.NavigationCommands.LastPage
  - System.Windows.Input.NavigationCommands.NavigateJournal
  - System.Windows.Input.NavigationCommands.NextPage
  - System.Windows.Input.NavigationCommands.PreviousPage
  - System.Windows.Input.NavigationCommands.Refresh
  - System.Windows.Input.NavigationCommands.Search
  - System.Windows.Input.NavigationCommands.Zoom
  langs:
  - csharp
  name: "NavigationCommands"
  nameWithType: NavigationCommands
  fullName: System.Windows.Input.NavigationCommands
  type: Class
  summary: Provides a standard set of navigation-related commands.
  remarks: "The NavigationCommands class exposes a standard set of navigation-related commands, including browser and document navigation.  \n  \n For more information on commands and commanding, see [Commanding Overview](../Topic/Commanding%20Overview.md)."
  syntax:
    content: public static class NavigationCommands
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.NavigationCommands.BrowseBack
  id: BrowseBack
  parent: System.Windows.Input.NavigationCommands
  langs:
  - csharp
  name: "BrowseBack"
  nameWithType: NavigationCommands.BrowseBack
  fullName: System.Windows.Input.NavigationCommands.BrowseBack
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the value that represents the <xref uid="langword_csharp_Browse Back" name="Browse Back" href=""></xref> command.
  remarks: "This command indicates the intention to navigate back to the previous page in the journal.  \n  \n <xref:System.Windows.Controls.Frame> and <xref:System.Windows.Navigation.NavigationWindow> implement support for responding to the BrowseBack, although you are not required to use it; in many cases the implementation in response to that command is the responsibility of the application writer.  \n  \n<a name=\"xamlAttributeUsage_BrowseBack\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"NavigationCommands.BrowseBack\"/>  \n```"
  example:
  - "The following example shows how to use BrowseBack in conjunction with a <xref:System.Windows.Controls.Frame>. The <xref:System.Windows.Controls.Frame> provides an implementation that responds to the BrowseBack command by navigating the <xref:System.Windows.Controls.Frame> back, if there are journal entries on the back stack.  \n  \n [!code-xml[NavigationCommandsSnippets#BrowseBackMARKUP1](~/add/codesnippet/Xaml/NavigationCommandsSnippets/BrowseBack.xaml#browsebackmarkup1)]  \n[!code-xml[NavigationCommandsSnippets#BrowseBackMARKUP2](~/add/codesnippet/Xaml/NavigationCommandsSnippets/BrowseBack.xaml#browsebackmarkup2)]  \n[!code-xml[NavigationCommandsSnippets#BrowseBackMARKUP3](~/add/codesnippet/Xaml/NavigationCommandsSnippets/BrowseBack.xaml#browsebackmarkup3)]  \n[!code-xml[NavigationCommandsSnippets#BrowseBackMARKUP4](~/add/codesnippet/Xaml/NavigationCommandsSnippets/BrowseBack.xaml#browsebackmarkup4)]"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand BrowseBack { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "The routed [!INCLUDE[TLA2#tla_ui](~/add/includes/tla2sharptla-ui-md.md)] command.       <table><thead><tr><th> Default Values       </th><th></th></tr></thead><tbody><tr><td> Key Gesture       </td><td> ALT+LEFT       </td></tr><tr><td> UI Text       </td><td> Back       </td></tr></tbody></table>"
  overload: System.Windows.Input.NavigationCommands.BrowseBack*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.NavigationCommands.BrowseForward
  id: BrowseForward
  parent: System.Windows.Input.NavigationCommands
  langs:
  - csharp
  name: "BrowseForward"
  nameWithType: NavigationCommands.BrowseForward
  fullName: System.Windows.Input.NavigationCommands.BrowseForward
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the value that represents the <xref uid="langword_csharp_Browse Forward" name="Browse Forward" href=""></xref> command.
  remarks: "This command indicates the intention to navigate forward the next page in the journal.  \n  \n <xref:System.Windows.Controls.Frame> and <xref:System.Windows.Navigation.NavigationWindow> implement support for responding to the BrowseForward command, although you are not required to use it; in many cases the implementation in response to that command is the responsibility of the application writer.  \n  \n<a name=\"xamlAttributeUsage_BrowseForward\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"NavigationCommands.BrowseForward\"/>  \n```"
  example:
  - "The following example shows how to use BrowseForward in conjunction with a <xref:System.Windows.Controls.Frame>. The <xref:System.Windows.Controls.Frame> provides an implementation that responds to the BrowseForward command by navigating the <xref:System.Windows.Controls.Frame> forward, if there are journal entries on the forward stack.  \n  \n [!code-xml[NavigationCommandsSnippets#BrowseForwardMARKUP1](~/add/codesnippet/Xaml/NavigationCommandsSnippets/BrowseForward.xaml#browseforwardmarkup1)]  \n[!code-xml[NavigationCommandsSnippets#BrowseForwardMARKUP2](~/add/codesnippet/Xaml/NavigationCommandsSnippets/BrowseForward.xaml#browseforwardmarkup2)]  \n[!code-xml[NavigationCommandsSnippets#BrowseForwardMARKUP3](~/add/codesnippet/Xaml/NavigationCommandsSnippets/BrowseForward.xaml#browseforwardmarkup3)]  \n[!code-xml[NavigationCommandsSnippets#BrowseForwardMARKUP4](~/add/codesnippet/Xaml/NavigationCommandsSnippets/BrowseForward.xaml#browseforwardmarkup4)]"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand BrowseForward { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "The routed [!INCLUDE[TLA2#tla_ui](~/add/includes/tla2sharptla-ui-md.md)] command.       <table><thead><tr><th> Default Values       </th><th></th></tr></thead><tbody><tr><td> Key Gesture       </td><td> ALT+RIGHT       </td></tr><tr><td> UI Text       </td><td> Forward       </td></tr></tbody></table>"
  overload: System.Windows.Input.NavigationCommands.BrowseForward*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.NavigationCommands.BrowseHome
  id: BrowseHome
  parent: System.Windows.Input.NavigationCommands
  langs:
  - csharp
  name: "BrowseHome"
  nameWithType: NavigationCommands.BrowseHome
  fullName: System.Windows.Input.NavigationCommands.BrowseHome
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the value that represents the <xref uid="langword_csharp_Browse Home" name="Browse Home" href=""></xref> command.
  remarks: "This command indicates the intention to navigate home.  \n  \n There is no implementation for responding to the BrowseHome command on any given [!INCLUDE[TLA2#tla_wpf](~/add/includes/tla2sharptla-wpf-md.md)] class. As such, you need to provide an appropriate implementation, which is shown in the example.  \n  \n<a name=\"xamlAttributeUsage_BrowseHome\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"NavigationCommands.BrowseHome\"/>  \n```"
  example:
  - "The following example shows how to implement code that responds to the BrowseHome command in conjunction with a <xref:System.Windows.Controls.Frame>.  \n  \n [!code-xml[NavigationCommandsSnippets#BrowseHomeMARKUP1](~/add/codesnippet/Xaml/NavigationCommandsSnippets/BrowseHome.xaml#browsehomemarkup1)]  \n[!code-xml[NavigationCommandsSnippets#BrowseHomeMARKUP2](~/add/codesnippet/Xaml/NavigationCommandsSnippets/BrowseHome.xaml#browsehomemarkup2)]  \n[!code-xml[NavigationCommandsSnippets#BrowseHomeMARKUP3](~/add/codesnippet/Xaml/NavigationCommandsSnippets/BrowseHome.xaml#browsehomemarkup3)]  \n[!code-xml[NavigationCommandsSnippets#BrowseHomeMARKUP4](~/add/codesnippet/Xaml/NavigationCommandsSnippets/BrowseHome.xaml#browsehomemarkup4)]  \n  \n [!code-vb[NavigationCommandsSnippets#BrowseHomeCODEBEHIND](~/add/codesnippet/VisualBasic/navigationcommandssnippets/browsehome.xaml.vb#browsehomecodebehind)]\n [!code-cs[NavigationCommandsSnippets#BrowseHomeCODEBEHIND](~/add/codesnippet/CSharp/NavigationCommandsSnippets/BrowseHome.xaml.cs#browsehomecodebehind)]"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand BrowseHome { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "The routed [!INCLUDE[TLA2#tla_ui](~/add/includes/tla2sharptla-ui-md.md)] command.       <table><thead><tr><th> Default Values       </th><th></th></tr></thead><tbody><tr><td> Key Gesture       </td><td> ALT+HOME       </td></tr><tr><td> UI Text       </td><td> Home       </td></tr></tbody></table>"
  overload: System.Windows.Input.NavigationCommands.BrowseHome*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.NavigationCommands.BrowseStop
  id: BrowseStop
  parent: System.Windows.Input.NavigationCommands
  langs:
  - csharp
  name: "BrowseStop"
  nameWithType: NavigationCommands.BrowseStop
  fullName: System.Windows.Input.NavigationCommands.BrowseStop
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the value that represents the <xref uid="langword_csharp_Browse Stop" name="Browse Stop" href=""></xref> command.
  remarks: "This command indicates the intention to stop the browser loading.  \n  \n <xref:System.Windows.Controls.Frame> and <xref:System.Windows.Navigation.NavigationWindow> implement support for responding to the BrowseStop command, although you are not required to use it; in many cases the implementation in response to that command is the responsibility of the application writer.  \n  \n<a name=\"xamlAttributeUsage_BrowseStop\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"NavigationCommands.BrowseStop\"/>  \n```"
  example:
  - "The following example shows how to use BrowseStop in conjunction with a <xref:System.Windows.Controls.Frame>. The <xref:System.Windows.Controls.Frame> provides an implementation that responds to the BrowseStop command by stopping the current <xref:System.Windows.Controls.Frame> navigation.  \n  \n [!code-xml[NavigationCommandsSnippets#BrowseStopMARKUP1](~/add/codesnippet/Xaml/NavigationCommandsSnippets/BrowseStop.xaml#browsestopmarkup1)]  \n[!code-xml[NavigationCommandsSnippets#BrowseStopMARKUP2](~/add/codesnippet/Xaml/NavigationCommandsSnippets/BrowseStop.xaml#browsestopmarkup2)]  \n[!code-xml[NavigationCommandsSnippets#BrowseStopMARKUP3](~/add/codesnippet/Xaml/NavigationCommandsSnippets/BrowseStop.xaml#browsestopmarkup3)]  \n[!code-xml[NavigationCommandsSnippets#BrowseStopMARKUP4](~/add/codesnippet/Xaml/NavigationCommandsSnippets/BrowseStop.xaml#browsestopmarkup4)]"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand BrowseStop { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "The routed [!INCLUDE[TLA2#tla_ui](~/add/includes/tla2sharptla-ui-md.md)] command.       <table><thead><tr><th> Default Values       </th><th></th></tr></thead><tbody><tr><td> Key Gesture       </td><td> ALT+ESC       </td></tr><tr><td> UI Text       </td><td> Stop       </td></tr></tbody></table>"
  overload: System.Windows.Input.NavigationCommands.BrowseStop*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.NavigationCommands.DecreaseZoom
  id: DecreaseZoom
  parent: System.Windows.Input.NavigationCommands
  langs:
  - csharp
  name: "DecreaseZoom"
  nameWithType: NavigationCommands.DecreaseZoom
  fullName: System.Windows.Input.NavigationCommands.DecreaseZoom
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the value that represents the <xref uid="langword_csharp_Decrease Zoom" name="Decrease Zoom" href=""></xref> command.
  remarks: "This command indicates the intention to decrease the zoom.  \n  \n <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, and <xref:System.Windows.Controls.FlowDocumentPageViewer> implement support for responding to the DecreaseZoom command, although you are not required to use it; in many cases the implementation in response to that command is the responsibility of the application writer.  \n  \n<a name=\"xamlAttributeUsage_DecreaseZoom\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"NavigationCommands.DecreaseZoom\"/>  \n```"
  example:
  - "The following example shows how to use DecreaseZoom in conjunction with a <xref:System.Windows.Controls.FlowDocumentPageViewer>. The <xref:System.Windows.Controls.FlowDocumentPageViewer> provides an implementation that responds to the DecreaseZoom command by decreasing the zoom percentage.  \n  \n [!code-xml[NavigationCommandsSnippets#DecreaseZoomMARKUP1](~/add/codesnippet/Xaml/NavigationCommandsSnippets/DecreaseZoom.xaml#decreasezoommarkup1)]  \n[!code-xml[NavigationCommandsSnippets#DecreaseZoomMARKUP2](~/add/codesnippet/Xaml/NavigationCommandsSnippets/DecreaseZoom.xaml#decreasezoommarkup2)]  \n[!code-xml[NavigationCommandsSnippets#DecreaseZoomMARKUP3](~/add/codesnippet/Xaml/NavigationCommandsSnippets/DecreaseZoom.xaml#decreasezoommarkup3)]  \n[!code-xml[NavigationCommandsSnippets#DecreaseZoomMARKUP4](~/add/codesnippet/Xaml/NavigationCommandsSnippets/DecreaseZoom.xaml#decreasezoommarkup4)]  \n[!code-xml[NavigationCommandsSnippets#DecreaseZoomMARKUP5](~/add/codesnippet/Xaml/NavigationCommandsSnippets/DecreaseZoom.xaml#decreasezoommarkup5)]"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand DecreaseZoom { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "The routed [!INCLUDE[TLA2#tla_ui](~/add/includes/tla2sharptla-ui-md.md)] command.       <table><thead><tr><th> Default Values       </th><th></th></tr></thead><tbody><tr><td> Key Gesture       </td><td> N/A       </td></tr><tr><td> UI Text       </td><td> Decrease Zoom       </td></tr></tbody></table>"
  overload: System.Windows.Input.NavigationCommands.DecreaseZoom*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.NavigationCommands.Favorites
  id: Favorites
  parent: System.Windows.Input.NavigationCommands
  langs:
  - csharp
  name: "Favorites"
  nameWithType: NavigationCommands.Favorites
  fullName: System.Windows.Input.NavigationCommands.Favorites
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the value that represents the <xref uid="langword_csharp_Favorites" name="Favorites" href=""></xref> command.
  remarks: "This command indicates the intention to manage and navigate to favorites.  \n  \n There is no implementation for responding to the Favorites command on any given [!INCLUDE[TLA2#tla_wpf](~/add/includes/tla2sharptla-wpf-md.md)] class. As such, you need to provide an appropriate implementation, which is shown in the example.  \n  \n<a name=\"xamlAttributeUsage_Favorites\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"NavigationCommands.Favorites\"/>  \n```"
  example:
  - "The following example shows how to implement code that responds to the Favorites command in conjunction with a <xref:System.Windows.Controls.Frame>.  \n  \n [!code-xml[NavigationCommandsSnippets#FavoritesMARKUP1](~/add/codesnippet/Xaml/NavigationCommandsSnippets/Favorites.xaml#favoritesmarkup1)]  \n[!code-xml[NavigationCommandsSnippets#FavoritesMARKUP2](~/add/codesnippet/Xaml/NavigationCommandsSnippets/Favorites.xaml#favoritesmarkup2)]  \n[!code-xml[NavigationCommandsSnippets#FavoritesMARKUP3](~/add/codesnippet/Xaml/NavigationCommandsSnippets/Favorites.xaml#favoritesmarkup3)]  \n[!code-xml[NavigationCommandsSnippets#FavoritesMARKUP4](~/add/codesnippet/Xaml/NavigationCommandsSnippets/Favorites.xaml#favoritesmarkup4)]  \n  \n [!CODE [NavigationCommandsSnippets#BrowseFavoritesCODEBEHIND](../CodeSnippet/VS_Snippets_Wpf/NavigationCommandsSnippets#browsefavoritescodebehind)]"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Favorites { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "The routed [!INCLUDE[TLA2#tla_ui](~/add/includes/tla2sharptla-ui-md.md)] command.       <table><thead><tr><th> Default Values       </th><th></th></tr></thead><tbody><tr><td> Key Gesture       </td><td> CTRL+I       </td></tr><tr><td> UI Text       </td><td> Favorites       </td></tr></tbody></table>"
  overload: System.Windows.Input.NavigationCommands.Favorites*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.NavigationCommands.FirstPage
  id: FirstPage
  parent: System.Windows.Input.NavigationCommands
  langs:
  - csharp
  name: "FirstPage"
  nameWithType: NavigationCommands.FirstPage
  fullName: System.Windows.Input.NavigationCommands.FirstPage
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the value that represents the <xref uid="langword_csharp_First Page" name="First Page" href=""></xref> command.
  remarks: "This command indicates the intention to go to the first page.  \n  \n <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, and <xref:System.Windows.Controls.FlowDocumentPageViewer> implement support for responding to the FirstPage command, although you are not required to use it; in many cases the implementation in response to that command is the responsibility of the application writer.  \n  \n<a name=\"xamlAttributeUsage_FirstPage\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"NavigationCommands.FirstPage\"/>  \n```"
  example:
  - "The following example shows how to use FirstPage in conjunction with a <xref:System.Windows.Controls.FlowDocumentPageViewer>. The <xref:System.Windows.Controls.FlowDocumentPageViewer> provides an implementation that responds to the FirstPage command by going to the first page.  \n  \n [!code-xml[NavigationCommandsSnippets#FirstPageMARKUP1](~/add/codesnippet/Xaml/NavigationCommandsSnippets/FirstPage.xaml#firstpagemarkup1)]  \n[!code-xml[NavigationCommandsSnippets#FirstPageMARKUP2](~/add/codesnippet/Xaml/NavigationCommandsSnippets/FirstPage.xaml#firstpagemarkup2)]  \n[!code-xml[NavigationCommandsSnippets#FirstPageMARKUP3](~/add/codesnippet/Xaml/NavigationCommandsSnippets/FirstPage.xaml#firstpagemarkup3)]  \n[!code-xml[NavigationCommandsSnippets#FirstPageMARKUP4](~/add/codesnippet/Xaml/NavigationCommandsSnippets/FirstPage.xaml#firstpagemarkup4)]  \n[!code-xml[NavigationCommandsSnippets#FirstPageMARKUP5](~/add/codesnippet/Xaml/NavigationCommandsSnippets/FirstPage.xaml#firstpagemarkup5)]"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand FirstPage { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "The routed [!INCLUDE[TLA2#tla_ui](~/add/includes/tla2sharptla-ui-md.md)] command.       <table><thead><tr><th> Default Values       </th><th></th></tr></thead><tbody><tr><td> Key Gesture       </td><td> N/A       </td></tr><tr><td> UI Text       </td><td> First Page       </td></tr></tbody></table>"
  overload: System.Windows.Input.NavigationCommands.FirstPage*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.NavigationCommands.GoToPage
  id: GoToPage
  parent: System.Windows.Input.NavigationCommands
  langs:
  - csharp
  name: "GoToPage"
  nameWithType: NavigationCommands.GoToPage
  fullName: System.Windows.Input.NavigationCommands.GoToPage
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the value that represents the <xref uid="langword_csharp_Go To Page" name="Go To Page" href=""></xref> command.
  remarks: "This command indicates the intention to change the zoom.  \n  \n <xref:System.Windows.Controls.DocumentViewer> and <xref:System.Windows.Controls.FlowDocumentPageViewer> implement support for responding to the GoToPage command, although you are not required to use it; in many cases the implementation in response to that command is the responsibility of the application writer.  \n  \n<a name=\"xamlAttributeUsage_GoToPage\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"NavigationCommands.GoToPage\"/>  \n```"
  example:
  - "The following example shows how to use the GoToPage command in conjunction with a <xref:System.Windows.Controls.FlowDocumentPageViewer>. The <xref:System.Windows.Controls.FlowDocumentPageViewer> provides an implementation that responds to the GoToPage command by going to the page specified by the text value of a <xref:System.Windows.Controls.TextBox> control.  \n  \n [!code-xml[NavigationCommandsSnippets#GoToPageMARKUP1](~/add/codesnippet/Xaml/NavigationCommandsSnippets/GoToPage.xaml#gotopagemarkup1)]  \n[!code-xml[NavigationCommandsSnippets#GoToPageMARKUP2](~/add/codesnippet/Xaml/NavigationCommandsSnippets/GoToPage.xaml#gotopagemarkup2)]  \n[!code-xml[NavigationCommandsSnippets#GoToPageMARKUP3](~/add/codesnippet/Xaml/NavigationCommandsSnippets/GoToPage.xaml#gotopagemarkup3)]  \n[!code-xml[NavigationCommandsSnippets#GoToPageMARKUP4](~/add/codesnippet/Xaml/NavigationCommandsSnippets/GoToPage.xaml#gotopagemarkup4)]  \n[!code-xml[NavigationCommandsSnippets#GoToPageMARKUP5](~/add/codesnippet/Xaml/NavigationCommandsSnippets/GoToPage.xaml#gotopagemarkup5)]"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand GoToPage { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "The routed [!INCLUDE[TLA2#tla_ui](~/add/includes/tla2sharptla-ui-md.md)] command.       <table><thead><tr><th> Default Values       </th><th></th></tr></thead><tbody><tr><td> Key Gesture       </td><td> N/A       </td></tr><tr><td> UI Text       </td><td> Go To Page       </td></tr></tbody></table>"
  overload: System.Windows.Input.NavigationCommands.GoToPage*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.NavigationCommands.IncreaseZoom
  id: IncreaseZoom
  parent: System.Windows.Input.NavigationCommands
  langs:
  - csharp
  name: "IncreaseZoom"
  nameWithType: NavigationCommands.IncreaseZoom
  fullName: System.Windows.Input.NavigationCommands.IncreaseZoom
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the value that represents the <xref uid="langword_csharp_Increase Zoom" name="Increase Zoom" href=""></xref> command.
  remarks: "This command indicates the intention to increase the zoom.  \n  \n <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, and <xref:System.Windows.Controls.FlowDocumentPageViewer> implement support for responding to the IncreaseZoom command, although you are not required to use it; in many cases the implementation in response to that command is the responsibility of the application writer.  \n  \n<a name=\"xamlAttributeUsage_IncreaseZoom\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"NavigationCommands.IncreaseZoom\"/>  \n```"
  example:
  - "The following example shows how to use IncreaseZoom in conjunction with a <xref:System.Windows.Controls.FlowDocumentPageViewer>. The <xref:System.Windows.Controls.FlowDocumentPageViewer> provides an implementation that responds to the IncreaseZoom command by decreasing the zoom percentage.  \n  \n [!code-xml[NavigationCommandsSnippets#IncreaseZoomMARKUP1](~/add/codesnippet/Xaml/NavigationCommandsSnippets/IncreaseZoom.xaml#increasezoommarkup1)]  \n[!code-xml[NavigationCommandsSnippets#IncreaseZoomMARKUP2](~/add/codesnippet/Xaml/NavigationCommandsSnippets/IncreaseZoom.xaml#increasezoommarkup2)]  \n[!code-xml[NavigationCommandsSnippets#IncreaseZoomMARKUP3](~/add/codesnippet/Xaml/NavigationCommandsSnippets/IncreaseZoom.xaml#increasezoommarkup3)]  \n[!code-xml[NavigationCommandsSnippets#IncreaseZoomMARKUP4](~/add/codesnippet/Xaml/NavigationCommandsSnippets/IncreaseZoom.xaml#increasezoommarkup4)]  \n[!code-xml[NavigationCommandsSnippets#IncreaseZoomMARKUP5](~/add/codesnippet/Xaml/NavigationCommandsSnippets/IncreaseZoom.xaml#increasezoommarkup5)]"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand IncreaseZoom { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "The routed [!INCLUDE[TLA2#tla_ui](~/add/includes/tla2sharptla-ui-md.md)] command.       <table><thead><tr><th> Default Values       </th><th></th></tr></thead><tbody><tr><td> Key Gesture       </td><td> N/A       </td></tr><tr><td> UI Text       </td><td> Increase Zoom       </td></tr></tbody></table>"
  overload: System.Windows.Input.NavigationCommands.IncreaseZoom*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.NavigationCommands.LastPage
  id: LastPage
  parent: System.Windows.Input.NavigationCommands
  langs:
  - csharp
  name: "LastPage"
  nameWithType: NavigationCommands.LastPage
  fullName: System.Windows.Input.NavigationCommands.LastPage
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the value that represents the <xref uid="langword_csharp_Last Page" name="Last Page" href=""></xref> command.
  remarks: "This command indicates the intention to go to the last page.  \n  \n <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, and <xref:System.Windows.Controls.FlowDocumentPageViewer> implement support for responding to the LastPage command, although you are not required to use it; in many cases the implementation in response to that command is the responsibility of the application writer.  \n  \n<a name=\"xamlAttributeUsage_LastPage\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"NavigationCommands.LastPage\"/>  \n```"
  example:
  - "The following example shows how to use LastPage in conjunction with a <xref:System.Windows.Controls.FlowDocumentPageViewer>. The <xref:System.Windows.Controls.FlowDocumentPageViewer> provides an implementation that responds to the LastPage command by going to the last page.  \n  \n [!code-xml[NavigationCommandsSnippets#LastPageMARKUP1](~/add/codesnippet/Xaml/NavigationCommandsSnippets/LastPage.xaml#lastpagemarkup1)]  \n[!code-xml[NavigationCommandsSnippets#LastPageMARKUP2](~/add/codesnippet/Xaml/NavigationCommandsSnippets/LastPage.xaml#lastpagemarkup2)]  \n[!code-xml[NavigationCommandsSnippets#LastPageMARKUP3](~/add/codesnippet/Xaml/NavigationCommandsSnippets/LastPage.xaml#lastpagemarkup3)]  \n[!code-xml[NavigationCommandsSnippets#LastPageMARKUP4](~/add/codesnippet/Xaml/NavigationCommandsSnippets/LastPage.xaml#lastpagemarkup4)]  \n[!code-xml[NavigationCommandsSnippets#LastPageMARKUP5](~/add/codesnippet/Xaml/NavigationCommandsSnippets/LastPage.xaml#lastpagemarkup5)]"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand LastPage { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "The routed [!INCLUDE[TLA2#tla_ui](~/add/includes/tla2sharptla-ui-md.md)] command.       <table><thead><tr><th> Default Values       </th><th></th></tr></thead><tbody><tr><td> Key Gesture       </td><td> N/A       </td></tr><tr><td> UI Text       </td><td> Last Page       </td></tr></tbody></table>"
  overload: System.Windows.Input.NavigationCommands.LastPage*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.NavigationCommands.NavigateJournal
  id: NavigateJournal
  parent: System.Windows.Input.NavigationCommands
  langs:
  - csharp
  name: "NavigateJournal"
  nameWithType: NavigationCommands.NavigateJournal
  fullName: System.Windows.Input.NavigationCommands.NavigateJournal
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the value that represents the <xref uid="langword_csharp_Navigate Journal" name="Navigate Journal" href=""></xref> command.
  remarks: "This command indicates the intention to navigate the journal.  \n  \n <xref:System.Windows.Controls.Frame> and <xref:System.Windows.Navigation.NavigationWindow> implement support for responding to the NavigateJournal command, although you are not required to use it; in many cases the implementation in response to that command is the responsibility of the application writer.  \n  \n<a name=\"xamlAttributeUsage_NavigateJournal\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"NavigationCommands.NavigateJournal\"/>  \n```"
  example:
  - "The following example shows how to use NavigateJournal in conjunction with a <xref:System.Windows.Controls.Frame>. The <xref:System.Windows.Controls.Frame> provides an implementation that responds to the NavigateJournal command by navigating to the specified journal entry on either the forward or back stacks of the <xref:System.Windows.Controls.Frame>. The journal entries are provided by the <xref:System.Windows.Navigation.JournalEntryUnifiedViewConverter> to the top-level `Navigate Journal` <xref:System.Windows.Controls.MenuItem>. Each journal entry is bound to a child <xref:System.Windows.Controls.MenuItem> that uses the NavigateJournal command.  \n  \n [!code-xml[NavigationCommandsSnippets#NavigateJournalMARKUP1](~/add/codesnippet/Xaml/NavigationCommandsSnippets/NavigateJournal.xaml#navigatejournalmarkup1)]  \n[!code-xml[NavigationCommandsSnippets#NavigateJournalMARKUP2](~/add/codesnippet/Xaml/NavigationCommandsSnippets/NavigateJournal.xaml#navigatejournalmarkup2)]  \n[!code-xml[NavigationCommandsSnippets#NavigateJournalMARKUP3](~/add/codesnippet/Xaml/NavigationCommandsSnippets/NavigateJournal.xaml#navigatejournalmarkup3)]  \n[!code-xml[NavigationCommandsSnippets#NavigateJournalMARKUP4](~/add/codesnippet/Xaml/NavigationCommandsSnippets/NavigateJournal.xaml#navigatejournalmarkup4)]"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand NavigateJournal { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "The routed [!INCLUDE[TLA2#tla_ui](~/add/includes/tla2sharptla-ui-md.md)] command.       <table><thead><tr><th> Default Values       </th><th></th></tr></thead><tbody><tr><td> Key Gesture       </td><td> N/A       </td></tr><tr><td> UI Text       </td><td> Navigation Journal       </td></tr></tbody></table>"
  overload: System.Windows.Input.NavigationCommands.NavigateJournal*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.NavigationCommands.NextPage
  id: NextPage
  parent: System.Windows.Input.NavigationCommands
  langs:
  - csharp
  name: "NextPage"
  nameWithType: NavigationCommands.NextPage
  fullName: System.Windows.Input.NavigationCommands.NextPage
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the value that represents the <xref uid="langword_csharp_Next Page" name="Next Page" href=""></xref> command.
  remarks: "This command indicates the intention to go to the next page.  \n  \n <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, and <xref:System.Windows.Controls.FlowDocumentPageViewer> implement support for responding to the NextPage command, although you are not required to use it; in many cases the implementation in response to that command is the responsibility of the application writer.  \n  \n<a name=\"xamlAttributeUsage_NextPage\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"NavigationCommands.NextPage\"/>  \n```"
  example:
  - "The following example shows how to use NextPage in conjunction with a <xref:System.Windows.Controls.FlowDocumentPageViewer>. The <xref:System.Windows.Controls.FlowDocumentPageViewer> provides an implementation that responds to the NextPage command by going to the next page.  \n  \n [!code-xml[NavigationCommandsSnippets#NextPageMARKUP1](~/add/codesnippet/Xaml/NavigationCommandsSnippets/NextPage.xaml#nextpagemarkup1)]  \n[!code-xml[NavigationCommandsSnippets#NextPageMARKUP2](~/add/codesnippet/Xaml/NavigationCommandsSnippets/NextPage.xaml#nextpagemarkup2)]  \n[!code-xml[NavigationCommandsSnippets#NextPageMARKUP3](~/add/codesnippet/Xaml/NavigationCommandsSnippets/NextPage.xaml#nextpagemarkup3)]  \n[!code-xml[NavigationCommandsSnippets#NextPageMARKUP4](~/add/codesnippet/Xaml/NavigationCommandsSnippets/NextPage.xaml#nextpagemarkup4)]  \n[!code-xml[NavigationCommandsSnippets#NextPageMARKUP5](~/add/codesnippet/Xaml/NavigationCommandsSnippets/NextPage.xaml#nextpagemarkup5)]"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand NextPage { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "The routed [!INCLUDE[TLA2#tla_ui](~/add/includes/tla2sharptla-ui-md.md)] command.       <table><thead><tr><th> Default Values       </th><th></th></tr></thead><tbody><tr><td> Key Gesture       </td><td> N/A       </td></tr><tr><td> UI Text       </td><td> Next Page       </td></tr></tbody></table>"
  overload: System.Windows.Input.NavigationCommands.NextPage*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.NavigationCommands.PreviousPage
  id: PreviousPage
  parent: System.Windows.Input.NavigationCommands
  langs:
  - csharp
  name: "PreviousPage"
  nameWithType: NavigationCommands.PreviousPage
  fullName: System.Windows.Input.NavigationCommands.PreviousPage
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the value that represents the <xref uid="langword_csharp_Previous Page" name="Previous Page" href=""></xref> command.
  remarks: "This command indicates the intention to go to the previous page.  \n  \n <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, and <xref:System.Windows.Controls.FlowDocumentPageViewer> implement support for responding to the PreviousPage command, although you are not required to use it; in many cases the implementation in response to that command is the responsibility of the application writer.  \n  \n<a name=\"xamlAttributeUsage_PreviousPage\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"NavigationCommands.PreviousPage\"/>  \n```"
  example:
  - "The following example shows how to use PreviousPage in conjunction with a <xref:System.Windows.Controls.FlowDocumentPageViewer>. The <xref:System.Windows.Controls.FlowDocumentPageViewer> provides an implementation that responds to the PreviousPage command by going to the previous page.  \n  \n [!code-xml[NavigationCommandsSnippets#PreviousPageMARKUP1](~/add/codesnippet/Xaml/NavigationCommandsSnippets/PreviousPage.xaml#previouspagemarkup1)]  \n[!code-xml[NavigationCommandsSnippets#PreviousPageMARKUP2](~/add/codesnippet/Xaml/NavigationCommandsSnippets/PreviousPage.xaml#previouspagemarkup2)]  \n[!code-xml[NavigationCommandsSnippets#PreviousPageMARKUP3](~/add/codesnippet/Xaml/NavigationCommandsSnippets/PreviousPage.xaml#previouspagemarkup3)]  \n[!code-xml[NavigationCommandsSnippets#PreviousPageMARKUP4](~/add/codesnippet/Xaml/NavigationCommandsSnippets/PreviousPage.xaml#previouspagemarkup4)]  \n[!code-xml[NavigationCommandsSnippets#PreviousPageMARKUP5](~/add/codesnippet/Xaml/NavigationCommandsSnippets/PreviousPage.xaml#previouspagemarkup5)]"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand PreviousPage { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "The routed [!INCLUDE[TLA2#tla_ui](~/add/includes/tla2sharptla-ui-md.md)] command.       <table><thead><tr><th> Default Values       </th><th></th></tr></thead><tbody><tr><td> Key Gesture       </td><td> N/A       </td></tr><tr><td> UI Text       </td><td> Previous Page       </td></tr></tbody></table>"
  overload: System.Windows.Input.NavigationCommands.PreviousPage*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.NavigationCommands.Refresh
  id: Refresh
  parent: System.Windows.Input.NavigationCommands
  langs:
  - csharp
  name: "Refresh"
  nameWithType: NavigationCommands.Refresh
  fullName: System.Windows.Input.NavigationCommands.Refresh
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the value that represents the <xref uid="langword_csharp_Refresh" name="Refresh" href=""></xref> command.
  remarks: "This command indicates the intention to refresh the current page.  \n  \n <xref:System.Windows.Controls.Frame> and <xref:System.Windows.Navigation.NavigationWindow> implement support for responding to the Refresh command, although you are not required to use it; in many cases the implementation in response to that command is the responsibility of the application writer.  \n  \n<a name=\"xamlAttributeUsage_Refresh\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"NavigationCommands.Refresh\"/>  \n```"
  example:
  - "The following example shows how to use Refresh in conjunction with a <xref:System.Windows.Controls.Frame>. The <xref:System.Windows.Controls.Frame> provides an implementation that responds to the Refresh command by reloading the current <xref:System.Windows.Controls.Frame> content.  \n  \n [!code-xml[NavigationCommandsSnippets#RefreshMARKUP1](~/add/codesnippet/Xaml/NavigationCommandsSnippets/Refresh.xaml#refreshmarkup1)]  \n[!code-xml[NavigationCommandsSnippets#RefreshMARKUP2](~/add/codesnippet/Xaml/NavigationCommandsSnippets/Refresh.xaml#refreshmarkup2)]  \n[!code-xml[NavigationCommandsSnippets#RefreshMARKUP3](~/add/codesnippet/Xaml/NavigationCommandsSnippets/Refresh.xaml#refreshmarkup3)]  \n[!code-xml[NavigationCommandsSnippets#RefreshMARKUP4](~/add/codesnippet/Xaml/NavigationCommandsSnippets/Refresh.xaml#refreshmarkup4)]"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Refresh { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "The routed [!INCLUDE[TLA2#tla_ui](~/add/includes/tla2sharptla-ui-md.md)] command.       <table><thead><tr><th> Default Values       </th><th></th></tr></thead><tbody><tr><td> Key Gesture       </td><td> F5       </td></tr><tr><td> UI Text       </td><td> Refresh       </td></tr></tbody></table>"
  overload: System.Windows.Input.NavigationCommands.Refresh*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.NavigationCommands.Search
  id: Search
  parent: System.Windows.Input.NavigationCommands
  langs:
  - csharp
  name: "Search"
  nameWithType: NavigationCommands.Search
  fullName: System.Windows.Input.NavigationCommands.Search
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the value that represents the <xref uid="langword_csharp_Search" name="Search" href=""></xref> command.
  remarks: "This command indicates the intention to search.  \n  \n There is no implementation for responding to the Search command on any given [!INCLUDE[TLA2#tla_wpf](~/add/includes/tla2sharptla-wpf-md.md)] class. As such, you need to provide an appropriate implementation, which is shown in the example.  \n  \n<a name=\"xamlAttributeUsage_Search\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"NavigationCommands.Search\"/>  \n```"
  example:
  - "The following example shows how to implement code that responds to the Search command in conjunction with a <xref:System.Windows.Controls.FlowDocumentPageViewer>.  \n  \n [!code-xml[NavigationCommandsSnippets#SearchMARKUP1](~/add/codesnippet/Xaml/NavigationCommandsSnippets/Search.xaml#searchmarkup1)]  \n[!code-xml[NavigationCommandsSnippets#SearchMARKUP2](~/add/codesnippet/Xaml/NavigationCommandsSnippets/Search.xaml#searchmarkup2)]  \n[!code-xml[NavigationCommandsSnippets#SearchMARKUP3](~/add/codesnippet/Xaml/NavigationCommandsSnippets/Search.xaml#searchmarkup3)]  \n[!code-xml[NavigationCommandsSnippets#SearchMARKUP4](~/add/codesnippet/Xaml/NavigationCommandsSnippets/Search.xaml#searchmarkup4)]  \n[!code-xml[NavigationCommandsSnippets#SearchMARKUP5](~/add/codesnippet/Xaml/NavigationCommandsSnippets/Search.xaml#searchmarkup5)]  \n  \n [!code-cs[NavigationCommandsSnippets#SearchCODEBEHIND](~/add/codesnippet/CSharp/NavigationCommandsSnippets/Search.xaml.cs#searchcodebehind)]\n [!code-vb[NavigationCommandsSnippets#SearchCODEBEHIND](~/add/codesnippet/VisualBasic/navigationcommandssnippets/search.xaml.vb#searchcodebehind)]"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Search { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "The routed [!INCLUDE[TLA2#tla_ui](~/add/includes/tla2sharptla-ui-md.md)] command.       <table><thead><tr><th> Default Values       </th><th></th></tr></thead><tbody><tr><td> Key Gesture       </td><td> F3       </td></tr><tr><td> UI Text       </td><td> Search       </td></tr></tbody></table>"
  overload: System.Windows.Input.NavigationCommands.Search*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Input.NavigationCommands.Zoom
  id: Zoom
  parent: System.Windows.Input.NavigationCommands
  langs:
  - csharp
  name: "Zoom"
  nameWithType: NavigationCommands.Zoom
  fullName: System.Windows.Input.NavigationCommands.Zoom
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the value that represents the <xref uid="langword_csharp_Zoom" name="Zoom" href=""></xref> command.
  remarks: "This command indicates the intention to set the zoom level.  \n  \n There is no implementation for responding to the Zoom command on any given [!INCLUDE[TLA2#tla_wpf](~/add/includes/tla2sharptla-wpf-md.md)] class. As such, you need to provide an appropriate implementation, which is shown in the example.  \n  \n<a name=\"xamlAttributeUsage_Zoom\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object property=\"NavigationCommands.Zoom\"/>  \n```"
  example:
  - "The following example shows how to implement code that responds to the Zoom command in conjunction with a <xref:System.Windows.Controls.FlowDocumentPageViewer>.  \n  \n [!code-xml[NavigationCommandsSnippets#ZoomMARKUP1](~/add/codesnippet/Xaml/NavigationCommandsSnippets/Zoom.xaml#zoommarkup1)]  \n[!code-xml[NavigationCommandsSnippets#ZoomMARKUP2](~/add/codesnippet/Xaml/NavigationCommandsSnippets/Zoom.xaml#zoommarkup2)]  \n[!code-xml[NavigationCommandsSnippets#ZoomMARKUP3](~/add/codesnippet/Xaml/NavigationCommandsSnippets/Zoom.xaml#zoommarkup3)]  \n[!code-xml[NavigationCommandsSnippets#ZoomMARKUP4](~/add/codesnippet/Xaml/NavigationCommandsSnippets/Zoom.xaml#zoommarkup4)]  \n  \n [!CODE [NavigationCommandsSnippets#ZoomCODEBEHIND1](../CodeSnippet/VS_Snippets_Wpf/NavigationCommandsSnippets#zoomcodebehind1)]"
  syntax:
    content: public static System.Windows.Input.RoutedUICommand Zoom { get; }
    return:
      type: System.Windows.Input.RoutedUICommand
      description: "The routed [!INCLUDE[TLA2#tla_ui](~/add/includes/tla2sharptla-ui-md.md)] command.       <table><thead><tr><th> Default Values       </th><th></th></tr></thead><tbody><tr><td> Key Gesture       </td><td> N/A       </td></tr><tr><td> UI Text       </td><td> Zoom       </td></tr></tbody></table>"
  overload: System.Windows.Input.NavigationCommands.Zoom*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: "System.Object"
- uid: System.Windows.Input.NavigationCommands.BrowseBack
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "BrowseBack"
  nameWithType: NavigationCommands.BrowseBack
  fullName: System.Windows.Input.NavigationCommands.BrowseBack
- uid: System.Windows.Input.RoutedUICommand
  parent: System.Windows.Input
  isExternal: false
  name: "RoutedUICommand"
  nameWithType: RoutedUICommand
  fullName: System.Windows.Input.RoutedUICommand
- uid: System.Windows.Input.NavigationCommands.BrowseForward
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "BrowseForward"
  nameWithType: NavigationCommands.BrowseForward
  fullName: System.Windows.Input.NavigationCommands.BrowseForward
- uid: System.Windows.Input.NavigationCommands.BrowseHome
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "BrowseHome"
  nameWithType: NavigationCommands.BrowseHome
  fullName: System.Windows.Input.NavigationCommands.BrowseHome
- uid: System.Windows.Input.NavigationCommands.BrowseStop
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "BrowseStop"
  nameWithType: NavigationCommands.BrowseStop
  fullName: System.Windows.Input.NavigationCommands.BrowseStop
- uid: System.Windows.Input.NavigationCommands.DecreaseZoom
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "DecreaseZoom"
  nameWithType: NavigationCommands.DecreaseZoom
  fullName: System.Windows.Input.NavigationCommands.DecreaseZoom
- uid: System.Windows.Input.NavigationCommands.Favorites
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "Favorites"
  nameWithType: NavigationCommands.Favorites
  fullName: System.Windows.Input.NavigationCommands.Favorites
- uid: System.Windows.Input.NavigationCommands.FirstPage
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "FirstPage"
  nameWithType: NavigationCommands.FirstPage
  fullName: System.Windows.Input.NavigationCommands.FirstPage
- uid: System.Windows.Input.NavigationCommands.GoToPage
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "GoToPage"
  nameWithType: NavigationCommands.GoToPage
  fullName: System.Windows.Input.NavigationCommands.GoToPage
- uid: System.Windows.Input.NavigationCommands.IncreaseZoom
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "IncreaseZoom"
  nameWithType: NavigationCommands.IncreaseZoom
  fullName: System.Windows.Input.NavigationCommands.IncreaseZoom
- uid: System.Windows.Input.NavigationCommands.LastPage
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "LastPage"
  nameWithType: NavigationCommands.LastPage
  fullName: System.Windows.Input.NavigationCommands.LastPage
- uid: System.Windows.Input.NavigationCommands.NavigateJournal
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "NavigateJournal"
  nameWithType: NavigationCommands.NavigateJournal
  fullName: System.Windows.Input.NavigationCommands.NavigateJournal
- uid: System.Windows.Input.NavigationCommands.NextPage
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "NextPage"
  nameWithType: NavigationCommands.NextPage
  fullName: System.Windows.Input.NavigationCommands.NextPage
- uid: System.Windows.Input.NavigationCommands.PreviousPage
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "PreviousPage"
  nameWithType: NavigationCommands.PreviousPage
  fullName: System.Windows.Input.NavigationCommands.PreviousPage
- uid: System.Windows.Input.NavigationCommands.Refresh
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "Refresh"
  nameWithType: NavigationCommands.Refresh
  fullName: System.Windows.Input.NavigationCommands.Refresh
- uid: System.Windows.Input.NavigationCommands.Search
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "Search"
  nameWithType: NavigationCommands.Search
  fullName: System.Windows.Input.NavigationCommands.Search
- uid: System.Windows.Input.NavigationCommands.Zoom
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "Zoom"
  nameWithType: NavigationCommands.Zoom
  fullName: System.Windows.Input.NavigationCommands.Zoom
- uid: System.Windows.Input.NavigationCommands.BrowseBack*
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "BrowseBack"
  nameWithType: NavigationCommands.BrowseBack
- uid: System.Windows.Input.NavigationCommands.BrowseForward*
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "BrowseForward"
  nameWithType: NavigationCommands.BrowseForward
- uid: System.Windows.Input.NavigationCommands.BrowseHome*
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "BrowseHome"
  nameWithType: NavigationCommands.BrowseHome
- uid: System.Windows.Input.NavigationCommands.BrowseStop*
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "BrowseStop"
  nameWithType: NavigationCommands.BrowseStop
- uid: System.Windows.Input.NavigationCommands.DecreaseZoom*
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "DecreaseZoom"
  nameWithType: NavigationCommands.DecreaseZoom
- uid: System.Windows.Input.NavigationCommands.Favorites*
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "Favorites"
  nameWithType: NavigationCommands.Favorites
- uid: System.Windows.Input.NavigationCommands.FirstPage*
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "FirstPage"
  nameWithType: NavigationCommands.FirstPage
- uid: System.Windows.Input.NavigationCommands.GoToPage*
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "GoToPage"
  nameWithType: NavigationCommands.GoToPage
- uid: System.Windows.Input.NavigationCommands.IncreaseZoom*
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "IncreaseZoom"
  nameWithType: NavigationCommands.IncreaseZoom
- uid: System.Windows.Input.NavigationCommands.LastPage*
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "LastPage"
  nameWithType: NavigationCommands.LastPage
- uid: System.Windows.Input.NavigationCommands.NavigateJournal*
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "NavigateJournal"
  nameWithType: NavigationCommands.NavigateJournal
- uid: System.Windows.Input.NavigationCommands.NextPage*
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "NextPage"
  nameWithType: NavigationCommands.NextPage
- uid: System.Windows.Input.NavigationCommands.PreviousPage*
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "PreviousPage"
  nameWithType: NavigationCommands.PreviousPage
- uid: System.Windows.Input.NavigationCommands.Refresh*
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "Refresh"
  nameWithType: NavigationCommands.Refresh
- uid: System.Windows.Input.NavigationCommands.Search*
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "Search"
  nameWithType: NavigationCommands.Search
- uid: System.Windows.Input.NavigationCommands.Zoom*
  parent: System.Windows.Input.NavigationCommands
  isExternal: false
  name: "Zoom"
  nameWithType: NavigationCommands.Zoom
