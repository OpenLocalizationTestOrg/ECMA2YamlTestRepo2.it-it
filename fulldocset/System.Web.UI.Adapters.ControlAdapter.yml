### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Adapters.ControlAdapter
  id: ControlAdapter
  children:
  - System.Web.UI.Adapters.ControlAdapter.#ctor
  - System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.Browser
  - System.Web.UI.Adapters.ControlAdapter.Control
  - System.Web.UI.Adapters.ControlAdapter.CreateChildControls
  - System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)
  - System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)
  - System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.Page
  - System.Web.UI.Adapters.ControlAdapter.PageAdapter
  - System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState
  - System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState
  langs:
  - csharp
  name: ControlAdapter
  nameWithType: ControlAdapter
  fullName: System.Web.UI.Adapters.ControlAdapter
  type: Class
  summary: "Personalizza il rendering per il controllo derivato in cui è collegato l&quot;adattatore, per modificare il markup predefinito o il comportamento di browser specifico, ed è la classe base dalla quale ereditano tutti controlli schede."
  remarks: "Gli adattatori di controllo sono componenti che eseguono l&quot;override di determinati <xref:System.Web.UI.Control>classe metodi ed eventi nella durata di esecuzione per consentire la gestione di markup specifico o browser.</xref:System.Web.UI.Control> .NET Framework esegue il mapping di una scheda di controllo derivato singola di un <xref:System.Web.UI.Control>oggetto per ogni richiesta client.</xref:System.Web.UI.Control>       Un adattatore di modifica di un controllo per un browser specifico o una classe di browser o funge da filtro arbitrario su alcune funzionalità. L&quot;adapter è in genere definito dal linguaggio di markup che utilizza il browser (ad esempio, XHTML o HTML 3.2). Possibile incapsulare gran parte dell&quot;adattabilità comportamento di rendering nelle classi specializzate che derivano dalla <xref:System.Web.UI.HtmlTextWriter>classe.</xref:System.Web.UI.HtmlTextWriter> Pertanto, è probabile che una scheda possa essere utilizzata per il numero di comportamenti delle classi del browser o che l&quot;inclusione dell&quot;adattabilità nel <xref:System.Web.UI.HtmlTextWriter>classi può evitare l&quot;utilizzo di una scheda di controllo.</xref:System.Web.UI.HtmlTextWriter>       Un adattatore per una classe del controllo si applica a tutti i controlli che ereditano da tale classe, a meno che non è presente più specializzato di schede. Ad esempio, un adattatore per il <xref:System.Web.UI.WebControls.BaseValidator>classe può essere utilizzata per tutti i `Validator` oggetti.</xref:System.Web.UI.WebControls.BaseValidator>       In genere, gli adattatori non ereditano direttamente dalla classe ControlAdapter, ma da una delle classi di base specifico della destinazione adapter che forniscono funzionalità aggiuntive specifiche per il tipo di controllo e browser di destinazione o il rendering specifico richiesto.       Controlli stessi non richiedono necessariamente un adapter. Se i controlli vengono estesi attraverso la composizione, in genere gli adattatori di controllo figlio sono sufficienti.       Ogni controllo presenta mapping espliciti agli adattatori attraverso i file di definizione del browser. Pertanto, qualsiasi accesso al <xref:System.Web.UI.Control.Adapter%2A?displayProperty=fullName>proprietà Usa il <xref:System.Web.HttpBrowserCapabilities>oggetto estratto dal file di definizione del browser per eseguire la ricerca per il mapping della scheda di controllo.</xref:System.Web.HttpBrowserCapabilities> </xref:System.Web.UI.Control.Adapter%2A?displayProperty=fullName>       Durante l&quot;elaborazione, .NET Framework intercetta le chiamate ai metodi sottoponibili a override di un controllo che può essere specifico della destinazione. Se è collegata una scheda di controllo, .NET Framework chiama i metodi di adattatore associato.       L&quot;adapter esegue il rendering del controllo mediante il <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>metodo.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> Se sottoposto a override, <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>potenzialmente non deve chiamare l&quot;implementazione della classe base poiché che non esegue una chiamata di nuovo il <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>metodo.</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> </xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> Ciò potrebbe causare il verificarsi due volte, una volta dall&quot;adapter e una volta dal controllo del rendering.       Il <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>in chiamate al metodo di base di <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>metodo del controllo.</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> </xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> Pertanto, se esegue l&quot;override <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>, non chiamare l&quot;implementazione della classe base, a meno che il rendering da implementare è inoltre necessario che viene fornito da <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>del controllo.</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> </xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>       È necessario assicurarsi che .NET Framework esegue intercettazione per le schede dei controlli figlio. È possibile farlo chiamando il <xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A>base metodo che chiama il <xref:System.Web.UI.Control.RenderChildren%2A?displayProperty=fullName>metodo del controllo, dal <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>eseguire l&quot;override.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> </xref:System.Web.UI.Control.RenderChildren%2A?displayProperty=fullName> </xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A>       Il <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>e <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>metodi vengono chiamati dal controllo immediatamente prima e dopo, rispettivamente, le chiamate di controllo di <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>metodo.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> </xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> </xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> Se prima e dopo il rendering sono specifici dei browser solo l&quot;elaborazione delle attività necessarie, utilizzando <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>e <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>potrebbe rendere necessaria eseguire l&quot;override <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> </xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> </xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A> Il comportamento predefinito di <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>metodi e <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>consiste nel chiamare i metodi corrispondenti di <xref:System.Web.UI.HtmlTextWriter>.</xref:System.Web.UI.HtmlTextWriter> </xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A> </xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>       Per mantenere le proprie informazioni di stato, è possibile eseguire l&quot;override di una scheda di controllo di <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>, e <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>metodi.</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A> <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>, e <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>vengono chiamati quando gli stati di controllo e di visualizzazione privati vengono salvati e caricati, rispettivamente.</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A></xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>       Il <xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A>, <xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A>, e <xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A>chiamata di metodi di base sul corrispondente <xref:System.Web.UI.Control>metodi della classe.</xref:System.Web.UI.Control> </xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A> </xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A> </xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A> </xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A> Pertanto, uno di questi metodi ControlAdapter sono a override deve chiamare i metodi di base; in caso contrario, l&quot;evento associato il <xref:System.Web.UI.Control>metodo della classe non verrà generato.</xref:System.Web.UI.Control>       Controlli e gli adattatori implementano facoltativamente il <xref:System.Web.UI.IPostBackDataHandler>e <xref:System.Web.UI.IPostBackEventHandler>interfacce.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.IPostBackDataHandler> .NET Framework determina se un adattatore esiste e se l&quot;adapter implementa queste interfacce. In caso affermativo, l&quot;adapter deve eseguire l&quot;override di <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A>, <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A>, e <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A>metodi, in base alle esigenze.</xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> </xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A> </xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A> Se i dati di postback non sono riconosciuti nell&quot;adapter, deve chiamare nuovamente sul controllo per elaborarlo. Gestori di eventi successivi anche necessario richiamare il controllo."
  syntax:
    content: public abstract class ControlAdapter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.#ctor
  id: '#ctor'
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: ControlAdapter()
  nameWithType: ControlAdapter.ControlAdapter()
  fullName: System.Web.UI.Adapters.ControlAdapter.ControlAdapter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> classe."
  remarks: ".NET Framework crea questa scheda internamente durante la creazione della corrispondente <xref:System.Web.UI.Control>oggetto.</xref:System.Web.UI.Control>"
  syntax:
    content: protected ControlAdapter ();
    parameters: []
  overload: System.Web.UI.Adapters.ControlAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)
  id: BeginRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: BeginRender(HtmlTextWriter)
  nameWithType: ControlAdapter.BeginRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.BeginRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Chiamato prima del rendering di un controllo. In una classe derivata di adapter, genera tag di apertura che sono richiesti da una destinazione specifica, ma non sono necessari per i browser HTML."
  remarks: "Il metodo BeginRender viene chiamato appena prima il <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>(metodo) e viene utilizzato per eseguire specifico della destinazione di pre-elaborazione prima del rendering del controllo.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>       Utilizzare il metodo BeginRender in combinazione con il <xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>metodo per assicurarsi di apertura e chiusura uniformità dei tag.</xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>"
  syntax:
    content: protected virtual void BeginRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Il <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> contenente i metodi per il rendering dell&quot;output specifico della destinazione."
  overload: System.Web.UI.Adapters.ControlAdapter.BeginRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Browser
  id: Browser
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Browser
  nameWithType: ControlAdapter.Browser
  fullName: System.Web.UI.Adapters.ControlAdapter.Browser
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Ottiene un riferimento alle funzionalità del browser del client che effettua la richiesta HTTP corrente."
  remarks: "Oggetto <xref:System.Web.UI.Adapters.ControlAdapter>oggetto determina le funzionalità del browser client dal <xref:System.Web.HttpBrowserCapabilities>oggetto restituito dalla proprietà del Browser.</xref:System.Web.HttpBrowserCapabilities> </xref:System.Web.UI.Adapters.ControlAdapter> In questo modo l&quot; <xref:System.Web.UI.Adapters.ControlAdapter>oggetto per il rendering del markup specifico del browser oppure per modificare il comportamento di <xref:System.Web.UI.Control>.</xref:System.Web.UI.Control> </xref:System.Web.UI.Adapters.ControlAdapter>"
  example:
  - "The following code example shows how to use the Browser property to access the details of the requesting browser. In this example, the code checks to determine whether the browser is compatible with JavaScript, and then allows the developer to render customized output in that case.  \n  \n [!code-cpp[ControlAdapter_Browser#1](~/add/codesnippet/cpp/p-system.web.ui.adapters_1_1.cpp)]\n [!code-vb[ControlAdapter_Browser#1](~/add/codesnippet/visualbasic/p-system.web.ui.adapters_1_1.vb)]\n [!code-cs[ControlAdapter_Browser#1](~/add/codesnippet/csharp/p-system.web.ui.adapters_1_1.cs)]"
  syntax:
    content: protected System.Web.HttpBrowserCapabilities Browser { get; }
    return:
      type: System.Web.HttpBrowserCapabilities
      description: "Un <xref href=&quot;System.Web.HttpBrowserCapabilities&quot;> </xref> che specifica le funzionalità del browser e il markup di client."
  overload: System.Web.UI.Adapters.ControlAdapter.Browser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Control
  id: Control
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Control
  nameWithType: ControlAdapter.Control
  fullName: System.Web.UI.Adapters.ControlAdapter.Control
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Ottiene un riferimento per il controllo a cui è associato l&quot;adattatore del controllo."
  remarks: "Quando una scheda di controllo derivato è collegata a un controllo, .NET Framework chiama determinati membri dell&quot;adattatore anziché i membri del controllo."
  example:
  - "The following code example shows how to derive a custom control from the <xref:System.Web.UI.Control> class, and then create a corresponding adapter that inherits from the <xref:System.Web.UI.Adapters.ControlAdapter> class. The adapter overrides the Control property and returns a strongly-typed reference to the control.  \n  \n [!code-cs[ControlAdapter.Control#1](~/add/codesnippet/csharp/p-system.web.ui.adapters_0_1.cs)]\n [!code-vb[ControlAdapter.Control#1](~/add/codesnippet/visualbasic/p-system.web.ui.adapters_0_1.vb)]\n [!code-cpp[ControlAdapter.Control#1](~/add/codesnippet/cpp/p-system.web.ui.adapters_0_1.cpp)]"
  syntax:
    content: protected System.Web.UI.Control Control { get; }
    return:
      type: System.Web.UI.Control
      description: "Il <xref href=&quot;System.Web.UI.Control&quot;> </xref> ai quali questo <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> è collegato."
  overload: System.Web.UI.Adapters.ControlAdapter.Control*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.CreateChildControls
  id: CreateChildControls
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: CreateChildControls()
  nameWithType: ControlAdapter.CreateChildControls()
  fullName: System.Web.UI.Adapters.ControlAdapter.CreateChildControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Crea gli specifico della destinazione controlli figlio di un controllo composito."
  remarks: "Se è presente una scheda di controllo derivato collegato a un <xref:System.Web.UI.Control>oggetto e CreateChildControls viene eseguito l&quot;override di metodo, viene chiamato l&quot;override anziché il <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName>metodo.</xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> </xref:System.Web.UI.Control> Di conseguenza, CreateChildControls consente di creare un insieme di controlli figlio specifico della destinazione.       Per ulteriori informazioni sulla combinazione di controlli per creare un nuovo controllo, vedere [controlli compositi](http://msdn.microsoft.com/en-us/fb174677-d845-467c-8bf3-cc096b2490b0)."
  syntax:
    content: protected virtual void CreateChildControls ();
    parameters: []
  overload: System.Web.UI.Adapters.ControlAdapter.CreateChildControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)
  id: EndRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: EndRender(HtmlTextWriter)
  nameWithType: ControlAdapter.EndRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.EndRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Chiamata eseguita dopo il rendering di un controllo. In una classe derivata di adapter, genera tag di chiusura richiesti da una destinazione specifica, ma non è necessaria per i browser HTML."
  remarks: "Il metodo EndRender viene chiamato subito dopo il <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>(metodo) e viene utilizzato per eseguire destinazione post-elaborazione specifica dopo il rendering del controllo.</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>       Utilizzare il metodo EndRender in combinazione con il <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>metodo per assicurarsi di apertura e chiusura uniformità dei tag.</xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>"
  syntax:
    content: protected virtual void EndRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Il <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> contenente i metodi per il rendering dell&quot;output specifico della destinazione."
  overload: System.Web.UI.Adapters.ControlAdapter.EndRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)
  id: LoadAdapterControlState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: LoadAdapterControlState(Object)
  nameWithType: ControlAdapter.LoadAdapterControlState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Carica le informazioni sullo stato di controllo scheda è state salvate da <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*>durante una richiesta precedente alla pagina in cui si trova il controllo associato a questa scheda di controllo.</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*>"
  remarks: "Lo stato del controllo è l&quot;informazione essenziale necessaria anche se lo stato di visualizzazione è disabilitato. Quando un adapter deve gestire le proprie informazioni di stato di controllo, è possibile eseguire l&quot;override di LoadAdapterControlState e <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>metodi.</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>       Un adapter potrebbe essere necessario mantenere le informazioni sullo stato di controllo quando sono presenti funzionalità che è necessario disporre di stato mantenuto su tutte le richieste, indipendentemente dallo stato del controllo associato. Ad esempio, un controllo composito costituito da una visualizzazione di testo di grandi dimensioni e un gruppo di <xref:System.Web.UI.WebControls.RadioButton>potrebbero eseguire il rendering di controlli come una singola visualizzazione nel browser per computer desktop.</xref:System.Web.UI.WebControls.RadioButton> In altri browser, è possibile suddividerlo il rendering, ovvero una visualizzazione per la visualizzazione di testo e l&quot;altro per il gruppo di pulsanti di opzione. L&quot;adapter devono mantenere il proprio specifico della destinazione di informazioni sulla visualizzazione attualmente attiva.       Viene chiamato il metodo LoadAdapterControlState immediatamente dopo il <xref:System.Web.UI.Control.LoadControlState%2A?displayProperty=fullName>(metodo), nel `LoadState` fase del ciclo di vita.</xref:System.Web.UI.Control.LoadControlState%2A?displayProperty=fullName> Lo stato del controllo scheda è separata e oltre che dello stato di controllo del controllo."
  syntax:
    content: protected virtual void LoadAdapterControlState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Un <xref:System.Object>che contiene informazioni sullo stato di controllo della scheda di rete come un <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>.</xref:System.Object>"
  overload: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)
  id: LoadAdapterViewState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: LoadAdapterViewState(Object)
  nameWithType: ControlAdapter.LoadAdapterViewState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Carica le informazioni sullo stato di visualizzazione adapter è state salvate da <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*>durante una richiesta precedente alla pagina in cui si trova il controllo associato a questa scheda di controllo.</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*>"
  remarks: "Quando un adapter deve gestire le proprie informazioni di stato di visualizzazione, è possibile eseguire l&quot;override di LoadAdapterViewState e <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>metodi.</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>       Un adapter deve gestire le informazioni sullo stato di visualizzazione quando sono presenti dati che devono essere mantenuti in tutte le richieste, indipendentemente dallo stato di visualizzazione del controllo associato. Ad esempio, un controllo griglia nel browser per computer desktop può eseguire il rendering come una singola visualizzazione delle righe e colonne di valori. In altri browser, potrebbe separare il rendering in visualizzazioni multiple separate, ad esempio un elenco di righe e dettagli di una singola riga. L&quot;adapter dovrà gestire i dati per le viste che non sono attualmente attive in stato di visualizzazione.       Viene chiamato il metodo LoadAdapterViewState immediatamente prima di <xref:System.Web.UI.Control.LoadViewState%2A?displayProperty=fullName>metodo nel `LoadState` fase del ciclo di vita.</xref:System.Web.UI.Control.LoadViewState%2A?displayProperty=fullName> Lo stato di visualizzazione di adapter è separata e oltre che dello stato di visualizzazione del controllo."
  syntax:
    content: protected virtual void LoadAdapterViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Un <xref:System.Object>che contiene le informazioni sullo stato di visualizzazione di adapter come una <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>.</xref:System.Object>"
  overload: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: ControlAdapter.OnInit(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Esegue l&quot;override di <xref:System.Web.UI.Control.OnInit*>metodo per il controllo associato.</xref:System.Web.UI.Control.OnInit*>"
  remarks: "Se è presente un adattatore collegato a un <xref:System.Web.UI.Control>oggetto e il metodo sottoposto a override di OnInit, viene chiamato il metodo di override anziché il <xref:System.Web.UI.Control.OnInit%2A?displayProperty=fullName>metodo.</xref:System.Web.UI.Control.OnInit%2A?displayProperty=fullName> </xref:System.Web.UI.Control>       Eseguire l&quot;override di OnInit per eseguire l&quot;elaborazione di destinazione specifica nel `Initialize` fase del ciclo di vita di controllo. In genere, queste sono funzioni che vengono eseguite quando viene creato un controllo."
  example:
  - "The following code sample derives a custom control adapter from the <xref:System.Web.UI.Adapters.ControlAdapter> class. It then overrides the OnInit method to set a property on the associated control and call the base method to complete the control initialization.  \n  \n [!code-cs[ControlAdapter_OnInit#1](~/add/codesnippet/csharp/m-system.web.ui.adapters_1.cs)]\n [!code-vb[ControlAdapter_OnInit#1](~/add/codesnippet/visualbasic/m-system.web.ui.adapters_1.vb)]\n [!code-cpp[ControlAdapter_OnInit#1](~/add/codesnippet/cpp/m-system.web.ui.adapters_1.cpp)]"
  syntax:
    content: protected virtual void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Adapters.ControlAdapter.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)
  id: OnLoad(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnLoad(EventArgs)
  nameWithType: ControlAdapter.OnLoad(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Esegue l&quot;override di <xref:System.Web.UI.Control.OnLoad*>metodo per il controllo associato.</xref:System.Web.UI.Control.OnLoad*>"
  remarks: "Se è presente un adattatore collegato a un <xref:System.Web.UI.Control>oggetto e OnLoad viene eseguito l&quot;override di metodo, viene chiamato il metodo di override anziché il <xref:System.Web.UI.Control.OnLoad%2A?displayProperty=fullName>metodo.</xref:System.Web.UI.Control.OnLoad%2A?displayProperty=fullName> </xref:System.Web.UI.Control>       Eseguire l&quot;override del metodo OnLoad per eseguire l&quot;elaborazione di destinazione specifico nel `Load` fase del ciclo di vita di controllo. In genere, queste sono funzioni che devono essere eseguite per ogni richiesta client."
  syntax:
    content: protected virtual void OnLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Adapters.ControlAdapter.OnLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: ControlAdapter.OnPreRender(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Esegue l&quot;override di <xref:System.Web.UI.Control.OnPreRender*>metodo per il controllo associato.</xref:System.Web.UI.Control.OnPreRender*>"
  remarks: "Se è presente un adattatore collegato a un <xref:System.Web.UI.Control>oggetto e il OnPreRender viene eseguito l&quot;override di metodo, viene chiamato il metodo di override anziché il <xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=fullName>metodo.</xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=fullName> </xref:System.Web.UI.Control>       Eseguire l&quot;override del metodo OnPreRender per eseguire l&quot;elaborazione di destinazione specifico nel `PreRender` fase del ciclo di vita di controllo. In genere, queste sono funzioni che precedono immediatamente il rendering dell&quot;output del controllo."
  syntax:
    content: protected virtual void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Adapters.ControlAdapter.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: ControlAdapter.OnUnload(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Esegue l&quot;override di <xref:System.Web.UI.Control.OnUnload*>metodo per il controllo associato.</xref:System.Web.UI.Control.OnUnload*>"
  remarks: "Se è presente un adattatore collegato a un <xref:System.Web.UI.Control>oggetto e il OnUnload viene eseguito l&quot;override di metodo, viene chiamato il metodo di override anziché il <xref:System.Web.UI.Control.OnUnload%2A?displayProperty=fullName>metodo.</xref:System.Web.UI.Control.OnUnload%2A?displayProperty=fullName> </xref:System.Web.UI.Control>       Eseguire l&quot;override del metodo OnUnload per eseguire l&quot;elaborazione di destinazione specifico `Unload` fase del ciclo di vita di controllo. In genere, queste sono funzioni di pulizia che precedono la disposizione del controllo."
  syntax:
    content: protected virtual void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>che contiene i dati dell&quot;evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Adapters.ControlAdapter.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Page
  id: Page
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Page
  nameWithType: ControlAdapter.Page
  fullName: System.Web.UI.Adapters.ControlAdapter.Page
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Ottiene un riferimento alla pagina in cui si trova il controllo associato all&quot;adattatore."
  remarks: "La proprietà Page fornisce l&quot;accesso per il <xref:System.Web.UI.Page?displayProperty=fullName>oggetto in cui si trova il controllo.</xref:System.Web.UI.Page?displayProperty=fullName>"
  syntax:
    content: protected System.Web.UI.Page Page { get; }
    return:
      type: System.Web.UI.Page
      description: "Oggetto <xref href=&quot;System.Web.UI.Page&quot;> </xref> che fornisce l&quot;accesso all&quot;istanza della pagina in cui si trova il controllo associato."
  overload: System.Web.UI.Adapters.ControlAdapter.Page*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.PageAdapter
  id: PageAdapter
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: PageAdapter
  nameWithType: ControlAdapter.PageAdapter
  fullName: System.Web.UI.Adapters.ControlAdapter.PageAdapter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Ottiene un riferimento all&quot;adattatore di pagina per pagina in cui si trova il controllo associato."
  remarks: "La proprietà PageAdapter fornisce l&quot;accesso per il <xref:System.Web.UI.Adapters.PageAdapter?displayProperty=fullName>dell&quot;oggetto per il <xref:System.Web.UI.Page>oggetto in cui il <xref:System.Web.UI.Control>oggetto associato all&quot;oggetto corrente <xref:System.Web.UI.Adapters.ControlAdapter>si trova l&quot;oggetto.</xref:System.Web.UI.Adapters.ControlAdapter> </xref:System.Web.UI.Control> </xref:System.Web.UI.Page> </xref:System.Web.UI.Adapters.PageAdapter?displayProperty=fullName>       La proprietà PageAdapter può essere utilizzata per accedere ad altri elementi a livello di adattatore di pagina, ad esempio funzioni specifico della destinazione comuni che è possibile applicare a vari tipi di controlli della pagina."
  syntax:
    content: protected System.Web.UI.Adapters.PageAdapter PageAdapter { get; }
    return:
      type: System.Web.UI.Adapters.PageAdapter
      description: "Oggetto <xref href=&quot;System.Web.UI.Adapters.PageAdapter&quot;> </xref> per la pagina in cui il controllo associato all&quot;oggetto corrente <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> si trova."
  overload: System.Web.UI.Adapters.ControlAdapter.PageAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: ControlAdapter.Render(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Genera il markup specifico della destinazione per il controllo a cui è associato l&quot;adattatore del controllo."
  remarks: "Eseguire l&quot;override del metodo di rendering per generare il markup specifico della destinazione da inviare al browser client. Viene chiamato il metodo di rendering al posto di <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>metodo se un <xref:System.Web.UI.Adapters.ControlAdapter>oggetto è associato a un <xref:System.Web.UI.Control>oggetto.</xref:System.Web.UI.Control> </xref:System.Web.UI.Adapters.ControlAdapter> </xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Il <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> da utilizzare per il rendering dell&quot;output specifico della destinazione."
  overload: System.Web.UI.Adapters.ControlAdapter.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)
  id: RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: RenderChildren(HtmlTextWriter)
  nameWithType: ControlAdapter.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.RenderChildren(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Genera il markup specifico della destinazione per i controlli figlio in un controllo composito in cui è associato l&quot;adattatore del controllo."
  remarks: "Eseguire l&quot;override del metodo RenderChildren quando è necessario generare il markup specifico della destinazione per l&quot;insieme di controlli figlio di un controllo composito, oltre il markup per i singoli controlli figlio."
  syntax:
    content: protected virtual void RenderChildren (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Il <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> da utilizzare per il rendering dell&quot;output specifico della destinazione."
  overload: System.Web.UI.Adapters.ControlAdapter.RenderChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState
  id: SaveAdapterControlState
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: SaveAdapterControlState()
  nameWithType: ControlAdapter.SaveAdapterControlState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Salva controllo le informazioni sullo stato per l&quot;adattatore del controllo."
  remarks: "Lo stato del controllo è l&quot;informazione essenziale necessaria anche se lo stato di visualizzazione è disabilitato. Quando un adapter deve gestire le proprie informazioni di stato di controllo, è possibile eseguire l&quot;override di SaveAdapterControlState e <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>metodi.</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>       Un adapter potrebbe essere necessario mantenere le informazioni sullo stato di controllo quando sono presenti funzionalità che è necessario disporre di stato mantenuto su tutte le richieste, indipendentemente dallo stato del controllo associato. Ad esempio, un controllo composito costituito da una visualizzazione di testo di grandi dimensioni e un gruppo di <xref:System.Web.UI.WebControls.RadioButton>potrebbero eseguire il rendering di controlli come una singola visualizzazione nel browser per computer desktop.</xref:System.Web.UI.WebControls.RadioButton> In altri browser, è possibile suddividerlo il rendering, ovvero una visualizzazione per la visualizzazione di testo e l&quot;altro per il gruppo di pulsanti di opzione. L&quot;adapter devono mantenere il proprio specifico della destinazione di informazioni sulla visualizzazione attualmente attiva.       Viene chiamato il metodo SaveAdapterControlState immediatamente dopo il <xref:System.Web.UI.Control.SaveControlState%2A?displayProperty=fullName>metodo il `SaveState` fase del ciclo di vita.</xref:System.Web.UI.Control.SaveControlState%2A?displayProperty=fullName> Lo stato del controllo scheda è separata e oltre che dello stato di controllo del controllo."
  syntax:
    content: protected virtual object SaveAdapterControlState ();
    parameters: []
    return:
      type: System.Object
      description: "Un <xref:System.Object>che contiene informazioni sullo stato di controllo della scheda di rete come un <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>.</xref:System.Object>"
  overload: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState
  id: SaveAdapterViewState
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: SaveAdapterViewState()
  nameWithType: ControlAdapter.SaveAdapterViewState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "Consente di salvare informazioni sullo stato per l&quot;adattatore del controllo."
  remarks: "Quando un adapter deve gestire le proprie informazioni di stato di visualizzazione, è possibile eseguire l&quot;override di SaveAdapterViewState e <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>metodi.</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>       Un adapter deve gestire le informazioni sullo stato di visualizzazione quando sono presenti dati che devono essere mantenuti in tutte le richieste, indipendentemente dallo stato di visualizzazione associato del controllo. Ad esempio, un controllo griglia nel browser per computer desktop può eseguire il rendering come una singola visualizzazione delle righe e colonne di valori. In altri browser, potrebbe separare il rendering in visualizzazioni multiple separate, ad esempio un elenco di righe e dettagli di una singola riga. L&quot;adapter dovrà gestire i dati per le viste che non sono attualmente attive in stato di visualizzazione.       Viene chiamato il metodo SaveAdapterViewState immediatamente prima di <xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=fullName>metodo nel `SaveState` fase del ciclo di vita.</xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=fullName> Lo stato di visualizzazione di adapter è separata e oltre che dello stato di visualizzazione del controllo."
  syntax:
    content: protected virtual object SaveAdapterViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Un <xref:System.Object>che contiene le informazioni sullo stato di visualizzazione di adapter come una <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>.</xref:System.Object>"
  overload: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.Adapters.ControlAdapter.#ctor
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: ControlAdapter()
  nameWithType: ControlAdapter.ControlAdapter()
  fullName: System.Web.UI.Adapters.ControlAdapter.ControlAdapter()
- uid: System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: BeginRender(HtmlTextWriter)
  nameWithType: ControlAdapter.BeginRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.BeginRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.Adapters.ControlAdapter.Browser
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Browser
  nameWithType: ControlAdapter.Browser
  fullName: System.Web.UI.Adapters.ControlAdapter.Browser
- uid: System.Web.HttpBrowserCapabilities
  parent: System.Web
  isExternal: false
  name: HttpBrowserCapabilities
  nameWithType: HttpBrowserCapabilities
  fullName: System.Web.HttpBrowserCapabilities
- uid: System.Web.UI.Adapters.ControlAdapter.Control
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Control
  nameWithType: ControlAdapter.Control
  fullName: System.Web.UI.Adapters.ControlAdapter.Control
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.Adapters.ControlAdapter.CreateChildControls
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: CreateChildControls()
  nameWithType: ControlAdapter.CreateChildControls()
  fullName: System.Web.UI.Adapters.ControlAdapter.CreateChildControls()
- uid: System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: EndRender(HtmlTextWriter)
  nameWithType: ControlAdapter.EndRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.EndRender(HtmlTextWriter)
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterControlState(Object)
  nameWithType: ControlAdapter.LoadAdapterControlState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(Object)
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterViewState(Object)
  nameWithType: ControlAdapter.LoadAdapterViewState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(Object)
- uid: System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: ControlAdapter.OnInit(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnLoad(EventArgs)
  nameWithType: ControlAdapter.OnLoad(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnLoad(EventArgs)
- uid: System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: ControlAdapter.OnPreRender(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnPreRender(EventArgs)
- uid: System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: ControlAdapter.OnUnload(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnUnload(EventArgs)
- uid: System.Web.UI.Adapters.ControlAdapter.Page
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Page
  nameWithType: ControlAdapter.Page
  fullName: System.Web.UI.Adapters.ControlAdapter.Page
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.Adapters.ControlAdapter.PageAdapter
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: PageAdapter
  nameWithType: ControlAdapter.PageAdapter
  fullName: System.Web.UI.Adapters.ControlAdapter.PageAdapter
- uid: System.Web.UI.Adapters.PageAdapter
  parent: System.Web.UI.Adapters
  isExternal: false
  name: PageAdapter
  nameWithType: PageAdapter
  fullName: System.Web.UI.Adapters.PageAdapter
- uid: System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: ControlAdapter.Render(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.Render(HtmlTextWriter)
- uid: System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: RenderChildren(HtmlTextWriter)
  nameWithType: ControlAdapter.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.RenderChildren(HtmlTextWriter)
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterControlState()
  nameWithType: ControlAdapter.SaveAdapterControlState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState()
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterViewState()
  nameWithType: ControlAdapter.SaveAdapterViewState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState()
- uid: System.Web.UI.Adapters.ControlAdapter.#ctor*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: ControlAdapter
  nameWithType: ControlAdapter.ControlAdapter
- uid: System.Web.UI.Adapters.ControlAdapter.BeginRender*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: BeginRender
  nameWithType: ControlAdapter.BeginRender
- uid: System.Web.UI.Adapters.ControlAdapter.Browser*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Browser
  nameWithType: ControlAdapter.Browser
- uid: System.Web.UI.Adapters.ControlAdapter.Control*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Control
  nameWithType: ControlAdapter.Control
- uid: System.Web.UI.Adapters.ControlAdapter.CreateChildControls*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: CreateChildControls
  nameWithType: ControlAdapter.CreateChildControls
- uid: System.Web.UI.Adapters.ControlAdapter.EndRender*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: EndRender
  nameWithType: ControlAdapter.EndRender
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterControlState
  nameWithType: ControlAdapter.LoadAdapterControlState
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterViewState
  nameWithType: ControlAdapter.LoadAdapterViewState
- uid: System.Web.UI.Adapters.ControlAdapter.OnInit*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnInit
  nameWithType: ControlAdapter.OnInit
- uid: System.Web.UI.Adapters.ControlAdapter.OnLoad*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnLoad
  nameWithType: ControlAdapter.OnLoad
- uid: System.Web.UI.Adapters.ControlAdapter.OnPreRender*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnPreRender
  nameWithType: ControlAdapter.OnPreRender
- uid: System.Web.UI.Adapters.ControlAdapter.OnUnload*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnUnload
  nameWithType: ControlAdapter.OnUnload
- uid: System.Web.UI.Adapters.ControlAdapter.Page*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Page
  nameWithType: ControlAdapter.Page
- uid: System.Web.UI.Adapters.ControlAdapter.PageAdapter*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: PageAdapter
  nameWithType: ControlAdapter.PageAdapter
- uid: System.Web.UI.Adapters.ControlAdapter.Render*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Render
  nameWithType: ControlAdapter.Render
- uid: System.Web.UI.Adapters.ControlAdapter.RenderChildren*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: RenderChildren
  nameWithType: ControlAdapter.RenderChildren
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterControlState
  nameWithType: ControlAdapter.SaveAdapterControlState
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterViewState
  nameWithType: ControlAdapter.SaveAdapterViewState
