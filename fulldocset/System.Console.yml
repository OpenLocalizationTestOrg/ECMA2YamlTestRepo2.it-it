### YamlMime:ManagedReference
items:
- uid: System.Console
  id: Console
  children:
  - System.Console.BackgroundColor
  - System.Console.Beep
  - System.Console.Beep(System.Int32,System.Int32)
  - System.Console.BufferHeight
  - System.Console.BufferWidth
  - System.Console.CancelKeyPress
  - System.Console.CapsLock
  - System.Console.Clear
  - System.Console.CursorLeft
  - System.Console.CursorSize
  - System.Console.CursorTop
  - System.Console.CursorVisible
  - System.Console.Error
  - System.Console.ForegroundColor
  - System.Console.In
  - System.Console.InputEncoding
  - System.Console.IsErrorRedirected
  - System.Console.IsInputRedirected
  - System.Console.IsOutputRedirected
  - System.Console.KeyAvailable
  - System.Console.LargestWindowHeight
  - System.Console.LargestWindowWidth
  - System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  - System.Console.NumberLock
  - System.Console.OpenStandardError
  - System.Console.OpenStandardError(System.Int32)
  - System.Console.OpenStandardInput
  - System.Console.OpenStandardInput(System.Int32)
  - System.Console.OpenStandardOutput
  - System.Console.OpenStandardOutput(System.Int32)
  - System.Console.Out
  - System.Console.OutputEncoding
  - System.Console.Read
  - System.Console.ReadKey
  - System.Console.ReadKey(System.Boolean)
  - System.Console.ReadLine
  - System.Console.ResetColor
  - System.Console.SetBufferSize(System.Int32,System.Int32)
  - System.Console.SetCursorPosition(System.Int32,System.Int32)
  - System.Console.SetError(System.IO.TextWriter)
  - System.Console.SetIn(System.IO.TextReader)
  - System.Console.SetOut(System.IO.TextWriter)
  - System.Console.SetWindowPosition(System.Int32,System.Int32)
  - System.Console.SetWindowSize(System.Int32,System.Int32)
  - System.Console.Title
  - System.Console.TreatControlCAsInput
  - System.Console.WindowHeight
  - System.Console.WindowLeft
  - System.Console.WindowTop
  - System.Console.WindowWidth
  - System.Console.Write(System.Boolean)
  - System.Console.Write(System.Char)
  - System.Console.Write(System.Char[])
  - System.Console.Write(System.Decimal)
  - System.Console.Write(System.Double)
  - System.Console.Write(System.Int32)
  - System.Console.Write(System.Int64)
  - System.Console.Write(System.Object)
  - System.Console.Write(System.Single)
  - System.Console.Write(System.String)
  - System.Console.Write(System.UInt32)
  - System.Console.Write(System.UInt64)
  - System.Console.Write(System.String,System.Object)
  - System.Console.Write(System.String,System.Object[])
  - System.Console.Write(System.Char[],System.Int32,System.Int32)
  - System.Console.Write(System.String,System.Object,System.Object)
  - System.Console.Write(System.String,System.Object,System.Object,System.Object)
  - System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)
  - System.Console.WriteLine
  - System.Console.WriteLine(System.Boolean)
  - System.Console.WriteLine(System.Char)
  - System.Console.WriteLine(System.Char[])
  - System.Console.WriteLine(System.Decimal)
  - System.Console.WriteLine(System.Double)
  - System.Console.WriteLine(System.Int32)
  - System.Console.WriteLine(System.Int64)
  - System.Console.WriteLine(System.Object)
  - System.Console.WriteLine(System.Single)
  - System.Console.WriteLine(System.String)
  - System.Console.WriteLine(System.UInt32)
  - System.Console.WriteLine(System.UInt64)
  - System.Console.WriteLine(System.String,System.Object)
  - System.Console.WriteLine(System.String,System.Object[])
  - System.Console.WriteLine(System.Char[],System.Int32,System.Int32)
  - System.Console.WriteLine(System.String,System.Object,System.Object)
  - System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)
  - System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)
  langs:
  - csharp
  name: Console
  nameWithType: Console
  fullName: System.Console
  type: Class
  summary: "Rappresenta i flussi di input, output e di errore standard per le applicazioni console. Questa classe non puÃ² essere ereditata.       Per esaminare il codice sorgente di .NET Framework per questo tipo, vedere il [origine riferimento](http://referencesource.microsoft.com/#mscorlib/system/console.cs#f907d79481da6ba4)."
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/console.cs#f907d79481da6ba4). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n The console is an operating system window where users interact with the operating system or with a text-based console application by entering text input through the computer keyboard, and by reading text output from the computer terminal. For example, in the Windows operating system, the console is called the Command Prompt window and accepts MS-DOS commands. The Console class provides basic support for applications that read characters from, and write characters to, the console.  \n  \n For information about developing with the Console class, see the following sections:  \n  \n-   [Console I/O Streams](#Streams)  \n  \n-   [Screen Buffer and Console Window](#Buffer)  \n  \n-   [Unicode Support for the Console](#Unicode)  \n  \n-   [Common Operations](#Operations)  \n  \n-   [.NET Core Notes](#Core)  \n  \n<a name=\"Streams\"></a>   \n## Console I/O Streams  \n When a console application starts, the operating system automatically associates three I/O streams with the console: standard input stream, standard output stream, and standard error output stream. Your application can read user input from the standard input stream; write normal data to the standard output stream; and write error data to the standard error output stream. These streams are presented to your application as the values of the <xref:System.Console.In%2A?displayProperty=fullName>, <xref:System.Console.Out%2A?displayProperty=fullName>, and <xref:System.Console.Error%2A?displayProperty=fullName> properties.  \n  \n By default, the value of the <xref:System.Console.In%2A> property is a <xref:System.IO.TextReader?displayProperty=fullName> object that represents the keyboard, and the values of the <xref:System.Console.Out%2A> and <xref:System.Console.Error%2A> properties are <xref:System.IO.TextWriter?displayProperty=fullName> objects that represent a console window. However, you can set these properties to streams that do not represent the console window or keyboard; for example, you can set these properties to streams that represent files. To redirect the standard input, standard output, or standard error stream, call the <xref:System.Console.SetIn%2A?displayProperty=fullName>, <xref:System.Console.SetOut%2A?displayProperty=fullName>, or <xref:System.Console.SetError%2A?displayProperty=fullName> method, respectively. I/O operations that use these streams are synchronized, which means that multiple threads can read from, or write to, the streams. This means that methods that are ordinarily asynchronous, such as <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName>, execute synchronously if the object represents a console stream.  \n  \n> [!NOTE]\n>  Do not use the Console class to display output in unattended applications, such as server applications. Calls to methods such as <xref:System.Console.Write%2A?displayProperty=fullName> and <xref:System.Console.WriteLine%2A?displayProperty=fullName> have no effect in GUI applications.  \n  \n Console class members that work normally when the underlying stream is directed to a console might throw an exception if the stream is redirected, for example, to a file. Program your application to catch <xref:System.IO.IOException?displayProperty=fullName> exceptions if you redirect a standard stream. You can also use the <xref:System.Console.IsOutputRedirected%2A>, <xref:System.Console.IsInputRedirected%2A>, and <xref:System.Console.IsErrorRedirected%2A> properties to determine whether a standard stream is redirected before performing an operation that throws an <xref:System.IO.IOException?displayProperty=fullName> exception.  \n  \n It is sometimes useful to explicitly call the members of the stream objects represented by the <xref:System.Console.In%2A>, <xref:System.Console.Out%2A>, and <xref:System.Console.Error%2A> properties. For example, by default, the <xref:System.Console.ReadLine%2A?displayProperty=fullName> method reads input from the standard input stream. Similarly, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method writes data to the standard output stream, and the data is followed by the default line termination string, which is  a carriage return and line feed (\"\\r\\n\"). However, the Console class does not provide a corresponding method to write data to the standard error output stream, or a property to change the line termination string for data written to that stream.  \n  \n You can solve this problem by setting the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property of the <xref:System.Console.Out%2A> or <xref:System.Console.Error%2A> property to another line termination string. For example, the following C# statement sets the line termination string for the standard error output stream to two carriage return and line feed sequences:  \n  \n `Console.Error.NewLine = \"\\r\\n\\r\\n\";`  \n  \n You can then explicitly call the <xref:System.IO.TextWriter.WriteLine%2A> method of the error output stream object, as in the following C# statement:  \n  \n `Console.Error.WriteLine();`  \n  \n<a name=\"Buffer\"></a>   \n## Screen Buffer and Console Window  \n Two closely related features of the console are the screen buffer and the console window. Text is actually read from or written to streams owned by the console, but appear to be read from or written to an area owned by the console called the screen buffer. The screen buffer is an attribute of the console, and is organized as a rectangular grid of rows and columns where each grid intersection, or character cell, can contain a character. Each character has its own foreground color, and each character cell has its own background color.  \n  \n The screen buffer is viewed through a rectangular region called the console window. The console window is another attribute of the console; it is not the console itself, which is an operating system window. The console window is arranged in rows and columns, is less than or equal to the size of the screen buffer, and can be moved to view different areas of the underlying screen buffer. If the screen buffer is larger than the console window, the console automatically displays scroll bars so the console window can be repositioned over the screen buffer area.  \n  \n A cursor indicates the screen buffer position where text is currently read or written. The cursor can be hidden or made visible, and its height can be changed. If the cursor is visible, the console window position is moved automatically so the cursor is always in view.  \n  \n The origin for character cell coordinates in the screen buffer is the upper left corner, and the positions of the cursor and the console window are measured relative to that origin. Use zero-based indexes to specify positions; that is, specify the topmost row as row 0, and the leftmost column as column 0. The maximum value for the row and column indexes is <xref:System.Int16.MaxValue?displayProperty=fullName>.  \n  \n<a name=\"Unicode\"></a>   \n## Unicode Support for the Console  \n In general, the console reads input and writes output by using the current console code page, which the system locale defines by default. A code page can handle only a subset of available Unicode characters, so if you try to display characters that are not mapped by a particular code page, the console won't be able to display all characters or represent them accurately. The following example illustrates this problem. It tries to display the characters of the Cyrillic alphabet from U+0410 to U+044F to the console. If you run the example on a system that uses console code page 437, each character is replaced by a question mark (?), because Cyrillic characters do not map to the characters in code page 437.  \n  \n [!code-cs[System.Console.Class#1](~/add/codesnippet/csharp/t-system.console_1.cs)]\n [!code-vb[System.Console.Class#1](~/add/codesnippet/visualbasic/t-system.console_1.vb)]  \n  \n In addition to supporting code pages, the Console class supports UTF-8 encoding with the <xref:System.Text.UTF8Encoding> class. Beginning with the .NET Framework 4.5, the Console class also supports UTF-16 encoding with the <xref:System.Text.UnicodeEncoding> class. To display Unicode characters to the console. you set the <xref:System.Console.OutputEncoding%2A> property to either <xref:System.Text.UTF8Encoding> or  <xref:System.Text.UnicodeEncoding>.  \n  \n Support for Unicode characters requires the encoder to recognize a particular Unicode character, and also requires a font that has the glyphs needed to render that character. To successfully display Unicode characters to the console, the console font must be set to a non-raster or TrueType font such as Consolas or Lucida Console. The following example shows how you can programmatically change the font from a raster font to Lucida Console.  \n  \n [!code-cs[System.Console.Class.Unsafe#3](~/add/codesnippet/csharp/setfont1/setfont1.cs#3)]\n [!code-vb[System.Console.Class.Unsafe#3](~/add/codesnippet/visualbasic/t-system.console_2.vb)]  \n  \n However, TrueType fonts can display only a subset of glyphs. For example, the Lucida Console font displays only 643 of the approximately 64,000 available characters from U+0021 to U+FB02. To see which characters a particular font supports, open the **Fonts** applet in Control Panel, choose the **Find a character** option, and choose the font whose character set you'd like to examine in the **Font** list of the **Character Map** window.  \n  \n Windows uses font linking to display glyphs that are not available in a particular font. For information about font linking to display additional character sets, see [Globalization Step-by-Step: Fonts](http://go.microsoft.com/fwlink/?LinkId=229111). Linked fonts are defined in the HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\FontLink\\SystemLink subkey of the registry. Each entry associated with this subkey corresponds to the name of a base font, and its value is a string array that defines the font files and the fonts that are linked to the base font. Each member of the array defines a linked font and takes the form *font-file-name*,*font-name*. The following example illustrates how you can programmatically define a linked font named SimSun found in a font file named simsun.ttc that displays Simplified Han characters.  \n  \n [!code-cs[System.Console.Class#2](~/add/codesnippet/csharp/t-system.console_3.cs)]\n [!code-vb[System.Console.Class#2](~/add/codesnippet/visualbasic/t-system.console_3.vb)]  \n  \n Unicode support for the console has the following limitations:  \n  \n-   UTF-32 encoding is not supported. The only supported Unicode encodings are UTF-8 and UTF-16, which are represented by the <xref:System.Text.UTF8Encoding> and <xref:System.Text.UnicodeEncoding> classes, respectively.  \n  \n-   Bidirectional output is not supported.  \n  \n-   Display of characters outside the Basic Multilingual Plane (that is, of surrogate pairs) is not supported, even if they are defined in a linked font file.  \n  \n-   Display of characters in complex scripts is not supported.  \n  \n-   Combining character sequences (that is, characters that consist of a base character and one or more combining characters) are displayed as separate characters. To work around this limitation, you can normalize the string to be displayed by calling the <xref:System.String.Normalize%2A?displayProperty=fullName> method before sending output to the console. In the following example, a string that contains the combining character sequence U+0061 U+0308 is displayed to the console as two characters before the output string is normalized, and as a single character after the <xref:System.String.Normalize%2A?displayProperty=fullName> method is called.  \n  \n     [!code-cs[System.Console.Class#5](~/add/codesnippet/csharp/t-system.console_4.cs)]\n     [!code-vb[System.Console.Class#5](~/add/codesnippet/visualbasic/t-system.console_4.vb)]  \n  \n     Note that normalization is a viable solution only if the Unicode standard for the character includes a pre-composed form that corresponds to a particular combining character sequence.  \n  \n-   If a font provides a glyph for a code point in the private use area, that glyph will be displayed. However, because characters in the private use area are application-specific, this may not be the expected glyph.  \n  \n The following example displays a range of Unicode characters to the console. The example accepts three command-line parameters: the start of the range to display, the end of the range to display, and whether to use the current console encoding (`false`) or UTF-16 encoding (`true`). It assumes that the console is using a TrueType font.  \n  \n [!code-cs[System.Console.Class#4](~/add/codesnippet/csharp/t-system.console_5.cs)]\n [!code-vb[System.Console.Class#4](~/add/codesnippet/visualbasic/t-system.console_5.vb)]  \n  \n<a name=\"Operations\"></a>   \n## Common Operations  \n The Console class contains the following methods for reading console input and writing console output:  \n  \n-   The overloads of the <xref:System.Console.ReadKey%2A> method read an individual character.  \n  \n-   The <xref:System.Console.ReadLine%2A> method reads an entire line of input.  \n  \n-   The <xref:System.Console.Write%2A> method overloads convert an instance of a value type, an array of characters, or a set of objects to a formatted or unformatted string, and then write that string to the console.  \n  \n-   A parallel set of <xref:System.Console.WriteLine%2A> method overloads output the same string as the <xref:System.Console.Write%2A> overloads but also add a line termination string.  \n  \n The Console class also contains methods and properties to perform the following operations:  \n  \n-   Get or set the size of the screen buffer. The <xref:System.Console.BufferHeight%2A> and <xref:System.Console.BufferWidth%2A> properties let you get or set the buffer height and width, respectively, and the <xref:System.Console.SetBufferSize%2A> method lets you set the buffer size in a single method call.  \n  \n-   Get or set the size of the console window. The <xref:System.Console.WindowHeight%2A> and <xref:System.Console.WindowWidth%2A> properties let you get or set the window height and width, respectively, and the <xref:System.Console.SetWindowSize%2A> method lets you set the window size in a single method call.  \n  \n-   Get or set the size of the cursor. The <xref:System.Console.CursorSize%2A> property specifies the height of the cursor in a character cell.  \n  \n-   Get or set the position of the console window relative to the screen buffer. The <xref:System.Console.WindowTop%2A> and <xref:System.Console.WindowLeft%2A> properties let you get or set the top row and leftmost column of the screen buffer that appears in the console window, and the <xref:System.Console.SetWindowPosition%2A> method lets you set these values in a single method call.  \n  \n-   Get or set the position of the cursor by getting or setting the <xref:System.Console.CursorTop%2A> and <xref:System.Console.CursorLeft%2A> properties, or set the position of the cursor by calling the <xref:System.Console.SetCursorPosition%2A> method.  \n  \n-   Move or clear data in the screen buffer by calling the <xref:System.Console.MoveBufferArea%2A> or <xref:System.Console.Clear%2A> method.  \n  \n-   Get or set the foreground and background colors by using the <xref:System.Console.ForegroundColor%2A> and <xref:System.Console.BackgroundColor%2A> properties, or reset the background and foreground to their default colors by calling the <xref:System.Console.ResetColor%2A> method.  \n  \n-   Play the sound of a beep through the console speaker by calling the <xref:System.Console.Beep%2A> method.  \n  \n<a name=\"Core\"></a>   \n## [!INCLUDE[net_core](~/add/includes/net-core-md.md)] Notes  \n In the .NET Framework on the desktop, the Console class uses the encoding returned by `GetConsoleCP` and `GetConsoleOutputCP`, which typically is a code page encoding. For example code, on systems whose culture is English (United States), code page 437 is the encoding that is used by default. However, [!INCLUDE[net_core](~/add/includes/net-core-md.md)] may make only a limited subset of these encodings available. Where this is the case, <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> is used as the default encoding for the console.  \n  \n If your app depends on specific code page encodings, you can still make them available by doing the following *before* you call any Console methods:  \n  \n1.  Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.  \n  \n2.  Retrieve the <xref:System.Text.EncodingProvider> object from the <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=fullName> property.  \n  \n3.  Pass the <xref:System.Text.EncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=fullName> method to make the additional encodings supported by the encoding provider available.  \n  \n The Console class will then automatically use the default system encoding rather than UTF8, provided that you have registered the encoding provider before calling any Console output methods."
  example:
  - "The following example demonstrates how to read data from, and write data to, the standard input and output streams. Note that these streams can be redirected by using the <xref:System.Console.SetIn%2A> and <xref:System.Console.SetOut%2A> methods.  \n  \n [!code-cs[Classic Console Example#1](~/add/codesnippet/csharp/t-system.console_6.cs)]\n [!code-cpp[Classic Console Example#1](~/add/codesnippet/cpp/t-system.console_6.cpp)]\n [!code-vb[Classic Console Example#1](~/add/codesnippet/visualbasic/t-system.console_6.vb)]"
  syntax:
    content: public static class Console
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Console.BackgroundColor
  id: BackgroundColor
  parent: System.Console
  langs:
  - csharp
  name: BackgroundColor
  nameWithType: Console.BackgroundColor
  fullName: System.Console.BackgroundColor
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene o imposta il colore di sfondo della console."
  remarks: "Una modifica della proprietÃ  BackgroundColor interessa solo output scritto in celle di singoli caratteri dopo avere modificato il colore di sfondo. Per modificare il colore di sfondo della finestra della console nel suo complesso, impostare la proprietÃ  BackgroundColor e chiamare il <xref:System.Console.Clear%2A>metodo.</xref:System.Console.Clear%2A> Nell&quot;esempio seguente viene illustrato questo concetto.       [!code-vb[System.Console.BackgroundColor#1](~/add/codesnippet/visualbasic/p-system.console.backgro_1.vb)][!code-cs[System.Console.BackgroundColor#1](~/add/codesnippet/csharp/p-system.console.backgro_1.cs) ] un&quot;operazione get per un&quot;applicazione basata su Windows, in cui una console non esiste, restituisce <xref:System.ConsoleColor?displayProperty=fullName>.</xref:System.ConsoleColor?displayProperty=fullName>  "
  example:
  - "The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the BackgroundColor and <xref:System.Console.ForegroundColor%2A> properties to variables. It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground. (If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.  \n  \n [!code-vb[System.ConsoleColor#1](~/add/codesnippet/visualbasic/p-system.console.backgro_2.vb)]\n [!code-cs[System.ConsoleColor#1](~/add/codesnippet/csharp/p-system.console.backgro_2.cs)]"
  syntax:
    content: public static ConsoleColor BackgroundColor { get; set; }
    return:
      type: System.ConsoleColor
      description: "Un valore che specifica il colore di sfondo della console; vale a dire il colore che viene visualizzato dietro ogni carattere. Il valore predefinito Ã¨ nero."
  overload: System.Console.BackgroundColor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il colore specificato in un&quot;operazione set non Ã¨ un membro valido di <xref href=&quot;System.ConsoleColor&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per eseguire questa azione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.Beep
  id: Beep
  parent: System.Console
  langs:
  - csharp
  name: Beep()
  nameWithType: Console.Beep()
  fullName: System.Console.Beep()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Riproduce il suono di un segnale acustico usando l&quot;altoparlante della console."
  remarks: "Per impostazione predefinita, il segnale acustico viene riprodotto una frequenza di 800 hertz per una durata pari a 200 millisecondi.      > [!NOTE] > Il <xref:System.Console.Beep%2A>metodo non Ã¨ supportato nelle edizioni a 64 bit di Windows Vista e Windows XP.</xref:System.Console.Beep%2A>       Segnale acustico esegue il wrapping di una chiamata a Windows [funzione Beep](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx). Se segnale acustico produce un suono in versioni di Windows precedenti a Windows 7 dipende dalla presenza di un chip del timer intervallo programmabile 8254. A partire da Windows 7, dipende dal dispositivo audio predefinito."
  example:
  - "The following example demonstrates the Beep method. The example accepts a number from 1 through 9 as a command line argument, and plays the beep that number of times.  \n  \n [!code-cs[console.beep#1](~/add/codesnippet/csharp/m-system.console.beep_1.cs)]\n [!code-cpp[console.beep#1](~/add/codesnippet/cpp/m-system.console.beep_1.cpp)]\n [!code-vb[console.beep#1](~/add/codesnippet/visualbasic/m-system.console.beep_1.vb)]"
  syntax:
    content: public static void Beep ();
    parameters: []
  overload: System.Console.Beep*
  exceptions:
  - type: System.Security.HostProtectionException
    commentId: T:System.Security.HostProtectionException
    description: "Questo metodo Ã¨ stato eseguito in un server, ad esempio SQL Server, che non consente l&quot;accesso a un&quot;interfaccia utente."
  platform:
  - net462
- uid: System.Console.Beep(System.Int32,System.Int32)
  id: Beep(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: Beep(Int32,Int32)
  nameWithType: Console.Beep(Int32,Int32)
  fullName: System.Console.Beep(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Riproduce il suono di un segnale acustico a una frequenza e durata specificate usando l&quot;altoparlante della console."
  remarks: "<xref:System.Console.Beep%2A>esegue il wrapping di una chiamata a Windows [funzione Beep](https://msdn.microsoft.com/library/windows/desktop/ms679277.aspx).</xref:System.Console.Beep%2A> Se <xref:System.Console.Beep%2A>produce un suono in versioni di Windows prima di Windows 7 dipende dalla presenza di un chip del timer intervallo programmabile 8254.</xref:System.Console.Beep%2A> A partire da Windows 7, dipende dal dispositivo audio predefinito.      > [!NOTE] > Il <xref:System.Console.Beep%2A>metodo non Ã¨ supportato nelle edizioni a 64 bit di Windows Vista e Windows XP.</xref:System.Console.Beep%2A>"
  example:
  - "This example demonstrates the Beep method by playing the first few notes of a song through the console speaker.  \n  \n [!code-cpp[console.beep2#1](~/add/codesnippet/cpp/m-system.console.beep-sy_1.cpp)]\n [!code-vb[console.beep2#1](~/add/codesnippet/visualbasic/m-system.console.beep-sy_1.vb)]\n [!code-cs[console.beep2#1](~/add/codesnippet/csharp/m-system.console.beep-sy_1.cs)]"
  syntax:
    content: public static void Beep (int frequency, int duration);
    parameters:
    - id: frequency
      type: System.Int32
      description: "La frequenza del segnale acustico, compresa fra 37 e 32767 hertz."
    - id: duration
      type: System.Int32
      description: "Durata del segnale acustico, misurata in millisecondi."
  overload: System.Console.Beep*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>frequency</code>Ã¨ minore di 37 o maggiore di 32767 hertz.       - oppure - <code>duration</code> Ã¨ minore o uguale a zero."
  - type: System.Security.HostProtectionException
    commentId: T:System.Security.HostProtectionException
    description: "Questo metodo Ã¨ stato eseguito in un server, ad esempio SQL Server, che non consente l&quot;accesso alla console."
  platform:
  - net462
- uid: System.Console.BufferHeight
  id: BufferHeight
  parent: System.Console
  langs:
  - csharp
  name: BufferHeight
  nameWithType: Console.BufferHeight
  fullName: System.Console.BufferHeight
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene o imposta l&quot;altezza dell&quot;area del buffer."
  remarks: "Questa proprietÃ  definisce il numero di righe (o righe) memorizzati nel buffer di cui si accede tramite una finestra della console. Al contrario, il <xref:System.Console.WindowHeight%2A>proprietÃ  definisce il numero di righe effettivamente visualizzate nella finestra della console in un determinato momento.</xref:System.Console.WindowHeight%2A> Se il numero di righe effettivamente scritti nel buffer supera il numero di righe definito dal <xref:System.Console.WindowHeight%2A>proprietÃ , Ã¨ possibile scorrere verticalmente la finestra in modo che venga visualizzato un numero di righe che sono uguali a contiguo il <xref:System.Console.WindowHeight%2A>proprietÃ  e sono posizionati in un punto qualsiasi nel buffer.</xref:System.Console.WindowHeight%2A> </xref:System.Console.WindowHeight%2A>       Se un&quot;operazione set diminuisce il valore della proprietÃ  BufferHeight, vengono rimosse le righe piÃ¹ in alto. Ad esempio, se il numero di righe viene ridotto da 300 a 250, tra 0 e 49 righe vengono rimosse ed esistenti righe 50 e 299 diventano le righe 249 a 0."
  example:
  - "This example demonstrates the BufferHeight and <xref:System.Console.BufferWidth%2A> properties. The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.  \n  \n [!code-cs[console.bufferHW#1](~/add/codesnippet/csharp/p-system.console.bufferh_1.cs)]\n [!code-cpp[console.bufferHW#1](~/add/codesnippet/cpp/p-system.console.bufferh_1.cpp)]\n [!code-vb[console.bufferHW#1](~/add/codesnippet/visualbasic/p-system.console.bufferh_1.vb)]"
  syntax:
    content: public static int BufferHeight { get; set; }
    return:
      type: System.Int32
      description: "Altezza corrente, in righe, dell&quot;area del buffer."
  overload: System.Console.BufferHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore in un&quot;operazione set Ã¨ minore o uguale a zero.       Il valore in un&quot;operazione set Ã¨ maggiore o uguale a - oppure - &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - oppure - il valore in un&quot;operazione set Ã¨ minore di <> </> *> + <> </> *>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per eseguire questa azione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.BufferWidth
  id: BufferWidth
  parent: System.Console
  langs:
  - csharp
  name: BufferWidth
  nameWithType: Console.BufferWidth
  fullName: System.Console.BufferWidth
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene o imposta la larghezza dell&quot;area del buffer."
  remarks: "Se un&quot;operazione set diminuisce il valore della proprietÃ  BufferWidth, vengono rimosse le colonne all&quot;estrema destra. Ad esempio, se il numero di colonne viene ridotto da 80 a 60, vengono rimosse colonne tra 60 e 79 di ogni riga."
  example:
  - "This example demonstrates the <xref:System.Console.BufferHeight%2A> and BufferWidth properties. The example reports the dimensions of an operating system window set to a buffer size of 300 rows and 85 columns.  \n  \n [!code-cs[console.bufferHW#1](~/add/codesnippet/csharp/p-system.console.bufferw_1.cs)]\n [!code-cpp[console.bufferHW#1](~/add/codesnippet/cpp/p-system.console.bufferw_1.cpp)]\n [!code-vb[console.bufferHW#1](~/add/codesnippet/visualbasic/p-system.console.bufferw_1.vb)]"
  syntax:
    content: public static int BufferWidth { get; set; }
    return:
      type: System.Int32
      description: "Larghezza corrente, in colonne, dell&quot;area del buffer."
  overload: System.Console.BufferWidth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore in un&quot;operazione set Ã¨ minore o uguale a zero.       Il valore in un&quot;operazione set Ã¨ maggiore o uguale a - oppure - &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - oppure - il valore in un&quot;operazione set Ã¨ minore di <> </> *> + <> </> *>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per eseguire questa azione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.CancelKeyPress
  id: CancelKeyPress
  parent: System.Console
  langs:
  - csharp
  name: CancelKeyPress
  nameWithType: Console.CancelKeyPress
  fullName: System.Console.CancelKeyPress
  type: Event
  assemblies:
  - mscorlib
  namespace: System
  summary: "Si verifica quando il <xref href=&quot;System.ConsoleModifiers&quot;> </xref> tasto di modifica (Ctrl) e il <xref href=&quot;System.ConsoleKey&quot;> </xref> tasto della console (C) o il tasto INTERR vengono premuti contemporaneamente (Ctrl + C o Ctrl + INTERR)."
  remarks: "Questo evento viene utilizzato in combinazione con <xref:System.ConsoleCancelEventHandler?displayProperty=fullName>e <xref:System.ConsoleCancelEventArgs?displayProperty=fullName>.</xref:System.ConsoleCancelEventArgs?displayProperty=fullName> </xref:System.ConsoleCancelEventHandler?displayProperty=fullName> L&quot;evento CancelKeyPress consente a un&quot;applicazione console di rilevare il segnale Ctrl + C, il gestore dell&quot;evento consente di decidere se continuare l&quot;esecuzione o terminarla. Per ulteriori informazioni sulla gestione degli eventi, vedere [gestione e generazione di eventi](~/add/includes/ajax-current-ext-md.md).       Quando si preme Ctrl + C o Ctrl + INTERR il CancelKeyPress evento viene generato e l&quot;applicazione <xref:System.ConsoleCancelEventHandler>esecuzione del gestore eventi.</xref:System.ConsoleCancelEventHandler> Il gestore dell&quot;evento viene passato un <xref:System.ConsoleCancelEventArgs>oggetto che ha due proprietÃ  utile:- <xref:System.ConsoleCancelEventArgs.SpecialKey%2A>, che consente di determinare se il gestore Ã¨ stato richiamato in seguito l&quot;utente premendo Ctrl + C (il valore della proprietÃ  <xref:System.ConsoleSpecialKey?displayProperty=fullName>) o Ctrl + INTERR (il valore della proprietÃ  <xref:System.ConsoleSpecialKey?displayProperty=fullName>).</xref:System.ConsoleSpecialKey?displayProperty=fullName> </xref:System.ConsoleSpecialKey?displayProperty=fullName> </xref:System.ConsoleCancelEventArgs.SpecialKey%2A> </xref:System.ConsoleCancelEventArgs>      - <xref:System.ConsoleCancelEventArgs.Cancel%2A>, che consente di determinare la modalitÃ  per l&quot;applicazione deve rispondere all&quot;utente premendo Ctrl + C o Ctrl + INTERR.</xref:System.ConsoleCancelEventArgs.Cancel%2A> Per impostazione predefinita, il <xref:System.ConsoleCancelEventArgs.Cancel%2A>proprietÃ  `false`, che causa l&quot;esecuzione quando il gestore eventi del programma.</xref:System.ConsoleCancelEventArgs.Cancel%2A> Modifica la proprietÃ  su `true` specifica che l&quot;applicazione deve continuare a eseguire.      > [!TIP] > Se l&quot;applicazione ha requisiti semplici, Ã¨ possibile utilizzare il <xref:System.Console.TreatControlCAsInput%2A>proprietÃ  invece di questo evento.</xref:System.Console.TreatControlCAsInput%2A> Impostando questa proprietÃ  su `false`, Ã¨ possibile assicurarsi che l&quot;applicazione sempre viene chiuso se l&quot;utente preme Ctrl + C. Impostandola su `true`, Ã¨ possibile assicurarsi che se si preme Ctrl + C non terminare l&quot;applicazione.       Il gestore eventi per questo evento viene eseguito in un pool di thread."
  example:
  - "The following example demonstrates how the CancelKeyPress event is used. When you press Ctrl+C, the read operation is interrupted and the `myHandler` event handler is invoked. Upon entry to the event handler, the <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=fullName> property is `false`, which means that the current process will terminate when the event handler terminates. However, the event handler sets the <xref:System.ConsoleCancelEventArgs.Cancel%2A?displayProperty=fullName> property to `true`, which means that the process will not terminate and the read operation will resume.  \n  \n [!code-cs[console.cancelkeypress#1](~/add/codesnippet/csharp/e-system.console.cancelk_1.cs)]\n [!code-cpp[console.cancelkeypress#1](~/add/codesnippet/cpp/e-system.console.cancelk_1.cpp)]\n [!code-vb[console.cancelkeypress#1](~/add/codesnippet/visualbasic/e-system.console.cancelk_1.vb)]"
  syntax:
    content: public static event ConsoleCancelEventHandler CancelKeyPress;
    return:
      type: System.ConsoleCancelEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Console.CapsLock
  id: CapsLock
  parent: System.Console
  langs:
  - csharp
  name: CapsLock
  nameWithType: Console.CapsLock
  fullName: System.Console.CapsLock
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene un valore che indica se il tasto di alternanza BLOC MAIUSC Ã¨ attivato o disattivato."
  syntax:
    content: public static bool CapsLock { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se BLOC MAIUSC Ã¨ attivato; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se BLOC MAIUSC Ã¨ disattivato."
  overload: System.Console.CapsLock*
  exceptions: []
  platform:
  - net462
- uid: System.Console.Clear
  id: Clear
  parent: System.Console
  langs:
  - csharp
  name: Clear()
  nameWithType: Console.Clear()
  fullName: System.Console.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Cancella il buffer della console e informazioni di visualizzazione corrispondente finestra della console."
  remarks: "Mediante il metodo Clear Ã¨ equivale a richiamare MS-DOS `cls` comando nella finestra del prompt dei comandi. Quando viene chiamato il metodo Clear, il cursore scorre automaticamente nell&quot;angolo superiore sinistro della finestra e il contenuto del buffer dello schermo viene impostato per gli spazi vuoti con i colori di sfondo in primo piano corrente.      > [!NOTE] > Il tentativo di chiamare il metodo Clear quando viene reindirizzato l&quot;output di un&quot;applicazione console in un file genera un <xref:System.IO.IOException>.</xref:System.IO.IOException> Per evitare questo problema, eseguire sempre il wrapping di una chiamata al metodo Clear in un `try`...`catch` blocco."
  example:
  - "The following example uses the Clear method to clear the console before it executes a loop, prompts the user to select a foreground and background color and to enter a string to display. If the user chooses not to exit the program, the console's original foreground and background colors are restored and the Clear method is called again before re-executing the loop.  \n  \n [!code-vb[System.Console.Clear#1](~/add/codesnippet/visualbasic/m-system.console.clear_1.vb)]\n [!code-cs[System.Console.Clear#1](~/add/codesnippet/csharp/m-system.console.clear_1.cs)]  \n  \n The example relies on a `GetKeyPress` method to validate the user's selection of a foreground and background color.  \n  \n This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and Clear methods. The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of \"+\", \"&#124;\", and \"-\" strings. Note that the rectangle could be drawn with fewer steps using a combination of other strings.  \n  \n [!code-cs[console.cursorLTS#1](~/add/codesnippet/csharp/m-system.console.clear_2.cs)]\n [!code-cpp[console.cursorLTS#1](~/add/codesnippet/cpp/m-system.console.clear_2.cpp)]\n [!code-vb[console.cursorLTS#1](~/add/codesnippet/visualbasic/m-system.console.clear_2.vb)]"
  syntax:
    content: public static void Clear ();
    parameters: []
  overload: System.Console.Clear*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.CursorLeft
  id: CursorLeft
  parent: System.Console
  langs:
  - csharp
  name: CursorLeft
  nameWithType: Console.CursorLeft
  fullName: System.Console.CursorLeft
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene o imposta la posizione colonna del cursore all&quot;interno dell&quot;area del buffer."
  remarks: ''
  example:
  - "This example demonstrates the CursorLeft and <xref:System.Console.CursorTop%2A> properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods. The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of \"+\", \"&#124;\", and \"-\" strings. Note that the rectangle could be drawn with fewer steps using a combination of other strings.  \n  \n [!code-cs[console.cursorLTS#1](~/add/codesnippet/csharp/p-system.console.cursorl_1.cs)]\n [!code-cpp[console.cursorLTS#1](~/add/codesnippet/cpp/p-system.console.cursorl_1.cpp)]\n [!code-vb[console.cursorLTS#1](~/add/codesnippet/visualbasic/p-system.console.cursorl_1.vb)]"
  syntax:
    content: public static int CursorLeft { get; set; }
    return:
      type: System.Int32
      description: "La posizione corrente, in colonne, del cursore."
  overload: System.Console.CursorLeft*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore in un&quot;operazione set Ã¨ minore di zero.       - oppure - il valore in un&quot;operazione set Ã¨ maggiore o uguale a <xref:System.Console.BufferWidth*>.</xref:System.Console.BufferWidth*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per eseguire questa azione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.CursorSize
  id: CursorSize
  parent: System.Console
  langs:
  - csharp
  name: CursorSize
  nameWithType: Console.CursorSize
  fullName: System.Console.CursorSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene o imposta l&quot;altezza del cursore all&quot;interno di una cella di carattere."
  remarks: "L&quot;aspetto del cursore varia, compreso tra una riga orizzontale nella parte inferiore della cella quando il valore della proprietÃ  Ã¨ 1, per riempire completamente la cella quando il valore della proprietÃ  Ã¨ 100."
  example:
  - "This example demonstrates the CursorSize property. The example increases the size of the cursor each time any console key is pressed, then restores the cursor to its original size before terminating.  \n  \n [!code-cs[console.cursorsize#1](~/add/codesnippet/csharp/p-system.console.cursors_1.cs)]\n [!code-cpp[console.cursorsize#1](~/add/codesnippet/cpp/p-system.console.cursors_1.cpp)]\n [!code-vb[console.cursorsize#1](~/add/codesnippet/visualbasic/p-system.console.cursors_1.vb)]"
  syntax:
    content: public static int CursorSize { get; set; }
    return:
      type: System.Int32
      description: "La dimensione del cursore espressa come percentuale dell&quot;altezza di una cella di carattere. I valore della proprietÃ  varia da 1 a 100."
  overload: System.Console.CursorSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore specificato in un&quot;operazione set Ã¨ minore di 1 o maggiore di 100."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per eseguire questa azione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.CursorTop
  id: CursorTop
  parent: System.Console
  langs:
  - csharp
  name: CursorTop
  nameWithType: Console.CursorTop
  fullName: System.Console.CursorTop
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene o imposta la posizione riga del cursore all&quot;interno dell&quot;area del buffer."
  remarks: ''
  example:
  - "This example demonstrates the <xref:System.Console.CursorLeft%2A> and CursorTop properties, and the <xref:System.Console.SetCursorPosition%2A> and <xref:System.Console.Clear%2A> methods. The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of \"+\", \"&#124;\", and \"-\" strings. Note that the rectangle could be drawn with fewer steps using a combination of other strings.  \n  \n [!code-cs[console.cursorLTS#1](~/add/codesnippet/csharp/p-system.console.cursortop_1.cs)]\n [!code-cpp[console.cursorLTS#1](~/add/codesnippet/cpp/p-system.console.cursortop_1.cpp)]\n [!code-vb[console.cursorLTS#1](~/add/codesnippet/visualbasic/p-system.console.cursortop_1.vb)]"
  syntax:
    content: public static int CursorTop { get; set; }
    return:
      type: System.Int32
      description: "La posizione corrente, in righe, del cursore."
  overload: System.Console.CursorTop*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore in un&quot;operazione set Ã¨ minore di zero.       - oppure - il valore in un&quot;operazione set Ã¨ maggiore o uguale a <xref:System.Console.BufferHeight*>.</xref:System.Console.BufferHeight*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per eseguire questa azione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.CursorVisible
  id: CursorVisible
  parent: System.Console
  langs:
  - csharp
  name: CursorVisible
  nameWithType: Console.CursorVisible
  fullName: System.Console.CursorVisible
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene o imposta un valore che indica se il cursore Ã¨ visibile."
  remarks: ''
  example:
  - "This example demonstrates the CursorVisible property. The example makes the cursor visible if the first column of input is a '+' character or invisible if the input is a '-' character.  \n  \n [!code-cs[console.cursorvis#1](~/add/codesnippet/csharp/p-system.console.cursorv_1.cs)]\n [!code-vb[console.cursorvis#1](~/add/codesnippet/visualbasic/p-system.console.cursorv_1.vb)]\n [!code-cpp[console.cursorvis#1](~/add/codesnippet/cpp/p-system.console.cursorv_1.cpp)]"
  syntax:
    content: public static bool CursorVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il cursore Ã¨ visibile; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.CursorVisible*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per eseguire questa azione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.Error
  id: Error
  parent: System.Console
  langs:
  - csharp
  name: Error
  nameWithType: Console.Error
  fullName: System.Console.Error
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene il flusso di output di errore standard."
  remarks: "Per impostazione predefinita, il flusso di errore standard Ã¨ impostato nella console. Ã possibile impostare in un altro flusso con il <xref:System.Console.SetError%2A>metodo.</xref:System.Console.SetError%2A> Il flusso di errore standard viene reindirizzato, puÃ² essere riacquisito chiamando il <xref:System.Console.OpenStandardError%2A>metodo.</xref:System.Console.OpenStandardError%2A>       Nelle applicazioni di console il cui output informativo spesso viene reindirizzato a un file, Ã¨ possibile utilizzare il flusso di errore standard disponibile tramite la proprietÃ  di errore per visualizzare le informazioni nella console, anche se viene reindirizzato l&quot;output. L&quot;esempio seguente mostra le tabelle di prodotti per i 10 numeri in un momento a partire da 1. Dopo ogni set di 10 numeri, viene utilizzata la proprietÃ  di errore per chiedere all&quot;utente se si desidera visualizzare il set successivo. Se l&quot;output standard viene reindirizzato a un file, l&quot;utente Ã¨ ancora richiesto se la routine deve generare il set successivo di prodotti.       [!code-cs[System.Console.Error#1](~/add/codesnippet/csharp/p-system.console.error_1.cs)][!code-vb[System.Console.Error#1  ](~/add/codesnippet/visualbasic/p-system.console.error_1.vb)]"
  example:
  - "The following example is a command line utility named ExpandTabs that replaces tab characters in a text file with four spaces, the value defined by the `tabSize` variable. It redirects the standard input and output streams to files, but uses the Error property to write the standard error stream to the console. It can be launched from the command line by supplying the name of the file that contains tab characters and the name of the output file.  \n  \n [!code-cpp[Console-EXPANDTABSEX#1](~/add/codesnippet/cpp/p-system.console.error_2.cpp)]\n [!code-cs[Console-EXPANDTABSEX#1](~/add/codesnippet/csharp/p-system.console.error_2.cs)]\n [!code-vb[Console-EXPANDTABSEX#1](~/add/codesnippet/visualbasic/p-system.console.error_2.vb)]  \n  \n The following example is a simple text file viewer that displays the contents of one or more text files to the console. If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <xref:System.Console.SetError%2A> method to redirect error information to a file, calls the <xref:System.Console.OpenStandardError%2A> method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.  \n  \n [!code-cs[System.Console.OpenStandardError#1](~/add/codesnippet/csharp/p-system.console.error_3.cs)]\n [!code-vb[System.Console.OpenStandardError#1](~/add/codesnippet/visualbasic/p-system.console.error_3.vb)]  \n  \n Note that the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=fullName> property is set to `true` before reacquiring the error stream. This ensures that output will be sent to the console immediately rather than buffered."
  syntax:
    content: public static System.IO.TextWriter Error { get; }
    return:
      type: System.IO.TextWriter
      description: "Oggetto <xref:System.IO.TextWriter>che rappresenta il flusso di output di errore standard.</xref:System.IO.TextWriter>"
  overload: System.Console.Error*
  exceptions: []
  platform:
  - net462
- uid: System.Console.ForegroundColor
  id: ForegroundColor
  parent: System.Console
  langs:
  - csharp
  name: ForegroundColor
  nameWithType: Console.ForegroundColor
  fullName: System.Console.ForegroundColor
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene o imposta il colore di primo piano della console."
  remarks: "Un&quot;operazione get per un&quot;applicazione basata su Windows, in cui una console non esiste, restituisce <xref:System.ConsoleColor>.</xref:System.ConsoleColor>"
  example:
  - "The following example checks whether the console's background color is black and, if it is, it changes the background color to red and the foreground color to black.  \n  \n [!code-cs[System.ConsoleColor#2](~/add/codesnippet/csharp/p-system.console.foregro_1.cs)]\n [!code-vb[System.ConsoleColor#2](~/add/codesnippet/visualbasic/p-system.console.foregro_1.vb)]  \n  \n The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and ForegroundColor properties to variables. It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground. (If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the <xref:System.Console.ResetColor%2A> method to restore the original console colors.  \n  \n [!code-vb[System.ConsoleColor#1](~/add/codesnippet/visualbasic/p-system.console.foregro_2.vb)]\n [!code-cs[System.ConsoleColor#1](~/add/codesnippet/csharp/p-system.console.foregro_2.cs)]"
  syntax:
    content: public static ConsoleColor ForegroundColor { get; set; }
    return:
      type: System.ConsoleColor
      description: "Oggetto <xref href=&quot;System.ConsoleColor&quot;> </xref> che specifica il colore di primo piano della console; vale a dire il colore di ogni carattere che viene visualizzato. Il valore predefinito Ã¨ grigio."
  overload: System.Console.ForegroundColor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il colore specificato in un&quot;operazione set non Ã¨ un membro valido di <xref href=&quot;System.ConsoleColor&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per eseguire questa azione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.In
  id: In
  parent: System.Console
  langs:
  - csharp
  name: In
  nameWithType: Console.In
  fullName: System.Console.In
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene il flusso di input standard."
  remarks: "Per impostazione predefinita, questa proprietÃ  Ã¨ impostata sul flusso di input standard. Questa proprietÃ  puÃ² essere impostata su un altro flusso con il <xref:System.Console.SetIn%2A>metodo.</xref:System.Console.SetIn%2A>       Operazioni di lettura nel flusso di input standard vengono eseguite in modo sincrono. Ovvero, bloccata finchÃ© non viene completata l&quot;operazione di lettura specificato. Questo vale anche se un metodo asincrono, ad esempio <xref:System.IO.TextReader.ReadLineAsync%2A>, viene chiamato sul <xref:System.IO.TextReader>oggetto restituito dalla proprietÃ  In.</xref:System.IO.TextReader> </xref:System.IO.TextReader.ReadLineAsync%2A>"
  example:
  - "The following sample illustrates the use of the `In` property.  \n  \n [!code-cpp[consolein#1](~/add/codesnippet/cpp/p-system.console.in_1.cpp)]\n [!code-cs[consolein#1](~/add/codesnippet/csharp/p-system.console.in_1.cs)]\n [!code-vb[consolein#1](~/add/codesnippet/visualbasic/p-system.console.in_1.vb)]"
  syntax:
    content: public static System.IO.TextReader In { get; }
    return:
      type: System.IO.TextReader
      description: "Oggetto <xref:System.IO.TextReader>che rappresenta il flusso di input standard.</xref:System.IO.TextReader>"
  overload: System.Console.In*
  exceptions: []
  platform:
  - net462
- uid: System.Console.InputEncoding
  id: InputEncoding
  parent: System.Console
  langs:
  - csharp
  name: InputEncoding
  nameWithType: Console.InputEncoding
  fullName: System.Console.InputEncoding
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene o imposta la codifica usata dalla console per leggere l&quot;input."
  remarks: "La console utilizza la codifica per convertire l&quot;input da tastiera in un carattere corrispondente di input. La codifica di input incorpora una tabella codici 256 codici di carattere della tastiera viene eseguito il mapping a singoli caratteri. Diverse tabelle codici contengono caratteri speciali differenti, in genere personalizzati per un linguaggio o un gruppo di linguaggi.       A partire dal [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], un&quot;operazione get di proprietÃ  puÃ² restituire un valore memorizzato nella cache anzichÃ© la console input codifica corrente. CiÃ² puÃ² verificarsi se il valore della proprietÃ  InputEncoding viene modificato in modo diverso da un&quot;assegnazione alla proprietÃ  InputEncoding, quali la chiamata Windows `SetConsoleCP` funzione o tramite il `chcp` comando da uno script di PowerShell."
  syntax:
    content: public static System.Text.Encoding InputEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "La codifica usata per leggere l&quot;input della console."
  overload: System.Console.InputEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore della proprietÃ  in un&quot;operazione set Ã¨ <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore durante l&quot;esecuzione di questa operazione."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;applicazione non dispone dell&quot;autorizzazione per eseguire questa operazione."
  platform:
  - net462
- uid: System.Console.IsErrorRedirected
  id: IsErrorRedirected
  parent: System.Console
  langs:
  - csharp
  name: IsErrorRedirected
  nameWithType: Console.IsErrorRedirected
  fullName: System.Console.IsErrorRedirected
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene un valore che indica se il flusso di output di errore Ã¨ stato reindirizzato dal flusso di errore standard."
  syntax:
    content: public static bool IsErrorRedirected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se viene reindirizzato l&quot;output degli errori; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.IsErrorRedirected*
  exceptions: []
  platform:
  - net462
- uid: System.Console.IsInputRedirected
  id: IsInputRedirected
  parent: System.Console
  langs:
  - csharp
  name: IsInputRedirected
  nameWithType: Console.IsInputRedirected
  fullName: System.Console.IsInputRedirected
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene un valore che indica se l&quot;input Ã¨ stato reindirizzato dal flusso di input standard."
  syntax:
    content: public static bool IsInputRedirected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;input viene reindirizzato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.IsInputRedirected*
  exceptions: []
  platform:
  - net462
- uid: System.Console.IsOutputRedirected
  id: IsOutputRedirected
  parent: System.Console
  langs:
  - csharp
  name: IsOutputRedirected
  nameWithType: Console.IsOutputRedirected
  fullName: System.Console.IsOutputRedirected
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene un valore che indica se l&quot;output Ã¨ stato reindirizzato dal flusso di output standard."
  syntax:
    content: public static bool IsOutputRedirected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;output viene reindirizzato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.IsOutputRedirected*
  exceptions: []
  platform:
  - net462
- uid: System.Console.KeyAvailable
  id: KeyAvailable
  parent: System.Console
  langs:
  - csharp
  name: KeyAvailable
  nameWithType: Console.KeyAvailable
  fullName: System.Console.KeyAvailable
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene un valore che indica se un tasto nel flusso di input."
  remarks: "Il valore della proprietÃ  viene restituito immediatamente. la proprietÃ  KeyAvailable, ovvero non blocca l&quot;input fino a quando non Ã¨ disponibile un tasto.       Utilizzare la proprietÃ  KeyAvailable in combinazione con solo il <xref:System.Console.ReadKey%2A>(metodo), non il <xref:System.Console.Read%2A>o <xref:System.Console.ReadLine%2A>metodi.</xref:System.Console.ReadLine%2A> </xref:System.Console.Read%2A> </xref:System.Console.ReadKey%2A>"
  example:
  - "The following example demonstrates how to use the KeyAvailable property to create a loop that runs until a key is pressed.  \n  \n [!code-cs[console.keyavailable#1](~/add/codesnippet/csharp/p-system.console.keyavai_1.cs)]\n [!code-cpp[console.keyavailable#1](~/add/codesnippet/cpp/p-system.console.keyavai_1.cpp)]\n [!code-vb[console.keyavailable#1](~/add/codesnippet/visualbasic/p-system.console.keyavai_1.vb)]"
  syntax:
    content: public static bool KeyAvailable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se un tasto Ã¨ disponibile. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.KeyAvailable*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Input standard viene reindirizzato a un file anzichÃ© la tastiera."
  platform:
  - net462
- uid: System.Console.LargestWindowHeight
  id: LargestWindowHeight
  parent: System.Console
  langs:
  - csharp
  name: LargestWindowHeight
  nameWithType: Console.LargestWindowHeight
  fullName: System.Console.LargestWindowHeight
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene il numero massimo consentito della console di righe per la finestra, in base alla risoluzione dello schermo e di tipo di carattere corrente."
  syntax:
    content: public static int LargestWindowHeight { get; }
    return:
      type: System.Int32
      description: "L&quot;altezza della finestra della console possibili piÃ¹ grande Ã¨ misurata in righe."
  overload: System.Console.LargestWindowHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Console.LargestWindowWidth
  id: LargestWindowWidth
  parent: System.Console
  langs:
  - csharp
  name: LargestWindowWidth
  nameWithType: Console.LargestWindowWidth
  fullName: System.Console.LargestWindowWidth
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene il numero massimo consentito della console di colonne della finestra, in base alla risoluzione dello schermo e di tipo di carattere corrente."
  syntax:
    content: public static int LargestWindowWidth { get; }
    return:
      type: System.Int32
      description: "La larghezza della finestra della console possibili piÃ¹ grande Ã¨ misurata in colonne."
  overload: System.Console.LargestWindowWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Copia un&quot;area di origine specificata del buffer dello schermo in un&quot;area di destinazione specificato."
  remarks: "Se i parametri di origine e destinazione specificano una posizione che si trova fuori dei limiti del buffer dello schermo corrente, viene copiata solo la parte dell&quot;area di origine che si adatta all&quot;interno dell&quot;area di destinazione. Ovvero, l&quot;area di origine viene ritagliato per adattarlo buffer dello schermo corrente.       Il metodo MoveBufferArea copia l&quot;area di origine nell&quot;area di destinazione. Se l&quot;area di destinazione non si interseca l&quot;area di origine, l&quot;area di origine viene riempita con spazi vuoti utilizzando i colori di sfondo e primo piano correnti. In caso contrario, non viene riempita la parte intersecata dell&quot;area di origine."
  syntax:
    content: public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);
    parameters:
    - id: sourceLeft
      type: System.Int32
      description: "La colonna piÃ¹ a sinistra dell&quot;area di origine."
    - id: sourceTop
      type: System.Int32
      description: "Riga piÃ¹ in alto dell&quot;area di origine."
    - id: sourceWidth
      type: System.Int32
      description: "Il numero di colonne dell&quot;area di origine."
    - id: sourceHeight
      type: System.Int32
      description: "Il numero di righe dell&quot;area di origine."
    - id: targetLeft
      type: System.Int32
      description: "La colonna piÃ¹ a sinistra dell&quot;area di destinazione."
    - id: targetTop
      type: System.Int32
      description: "Riga piÃ¹ in alto dell&quot;area di destinazione."
  overload: System.Console.MoveBufferArea*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Uno o piÃ¹ dei parametri Ã¨ minore di zero.       -or-       <code>sourceLeft</code> or <code>targetLeft</code> is greater than or equal to <>*>.       -or-       <code>sourceTop</code> or <code>targetTop</code> is greater than or equal to <>*>.       -or-       <code>sourceTop</code> + <code>sourceHeight</code> is greater than or equal to <>*>.       -or-       <code>sourceLeft</code> + <code>sourceWidth</code> is greater than or equal to <>*>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per eseguire questa azione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  id: MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  parent: System.Console
  langs:
  - csharp
  name: MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  nameWithType: Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  fullName: System.Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Copia un&quot;area di origine specificata del buffer dello schermo in un&quot;area di destinazione specificato."
  remarks: "Se i parametri di origine e destinazione specificano una posizione che si trova oltre i limiti del buffer dello schermo corrente, viene copiata solo la parte dell&quot;area di origine che si adatta all&quot;interno dell&quot;area di destinazione. Ovvero, l&quot;area di origine viene ritagliato per adattarlo buffer dello schermo corrente.       Il <xref:System.Console.MoveBufferArea%2A>metodo copia l&quot;area di origine nell&quot;area di destinazione.</xref:System.Console.MoveBufferArea%2A> Se l&quot;area di destinazione non si interseca l&quot;area di origine, l&quot;area di origine viene riempita con il carattere specificato da `sourceChar`, utilizzando i colori specificati da `sourceForeColor` e `sourceBackColor`. In caso contrario, non viene riempita la parte intersecata dell&quot;area di origine.       Il <xref:System.Console.MoveBufferArea%2A>viene eseguita alcuna operazione se `sourceWidth` o `sourceHeight` Ã¨ zero.</xref:System.Console.MoveBufferArea%2A>"
  syntax:
    content: public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);
    parameters:
    - id: sourceLeft
      type: System.Int32
      description: "La colonna piÃ¹ a sinistra dell&quot;area di origine."
    - id: sourceTop
      type: System.Int32
      description: "Riga piÃ¹ in alto dell&quot;area di origine."
    - id: sourceWidth
      type: System.Int32
      description: "Il numero di colonne dell&quot;area di origine."
    - id: sourceHeight
      type: System.Int32
      description: "Il numero di righe dell&quot;area di origine."
    - id: targetLeft
      type: System.Int32
      description: "La colonna piÃ¹ a sinistra dell&quot;area di destinazione."
    - id: targetTop
      type: System.Int32
      description: "Riga piÃ¹ in alto dell&quot;area di destinazione."
    - id: sourceChar
      type: System.Char
      description: "Il carattere utilizzato per riempire l&quot;area di origine."
    - id: sourceForeColor
      type: System.ConsoleColor
      description: "Il colore di primo piano usato per riempire l&quot;area di origine."
    - id: sourceBackColor
      type: System.ConsoleColor
      description: "Il colore di sfondo usato per riempire l&quot;area di origine."
  overload: System.Console.MoveBufferArea*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Uno o piÃ¹ dei parametri Ã¨ minore di zero.       -or-       <code>sourceLeft</code> or <code>targetLeft</code> is greater than or equal to <>*>.       -or-       <code>sourceTop</code> or <code>targetTop</code> is greater than or equal to <>*>.       -or-       <code>sourceTop</code> + <code>sourceHeight</code> is greater than or equal to <>*>.       -or-       <code>sourceLeft</code> + <code>sourceWidth</code> is greater than or equal to <>*>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uno o entrambi i parametri del colore non Ã¨ membro il <xref href=&quot;System.ConsoleColor&quot;> </xref> enumerazione."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per eseguire questa azione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.NumberLock
  id: NumberLock
  parent: System.Console
  langs:
  - csharp
  name: NumberLock
  nameWithType: Console.NumberLock
  fullName: System.Console.NumberLock
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene un valore che indica se il tasto di alternanza BLOC NUM Ã¨ attivato o disattivato."
  syntax:
    content: public static bool NumberLock { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se BLOC NUM Ã¨ attivato; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se BLOC NUM Ã¨ disattivato."
  overload: System.Console.NumberLock*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OpenStandardError
  id: OpenStandardError
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardError()
  nameWithType: Console.OpenStandardError()
  fullName: System.Console.OpenStandardError()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Acquisisce il flusso di errore standard."
  remarks: "Questo metodo puÃ² essere utilizzato per riacquisire il flusso di errore standard dopo che Ã¨ stato modificato dal <xref:System.Console.SetError%2A>metodo.</xref:System.Console.SetError%2A>"
  example:
  - "The following example is a simple text file viewer that displays the contents of one or more text files to the console. If there are no command line arguments, or if any files passed as command line arguments do not exist, the example calls the <xref:System.Console.SetError%2A> method to redirect error information to a file, calls the OpenStandardError method in the process of reacquiring the standard error stream, and indicates that error information was written to a file.  \n  \n [!code-cs[System.Console.OpenStandardError#1](~/add/codesnippet/csharp/m-system.console.opensta_4_1.cs)]\n [!code-vb[System.Console.OpenStandardError#1](~/add/codesnippet/visualbasic/m-system.console.opensta_4_1.vb)]  \n  \n Note that the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=fullName> property is set to `true` before reacquiring the error stream. This ensures that output will be sent to the console immediately rather than buffered."
  syntax:
    content: public static System.IO.Stream OpenStandardError ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Il flusso di errore standard."
  overload: System.Console.OpenStandardError*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OpenStandardError(System.Int32)
  id: OpenStandardError(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardError(Int32)
  nameWithType: Console.OpenStandardError(Int32)
  fullName: System.Console.OpenStandardError(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Acquisisce il flusso di errore standard, che Ã¨ impostato su una dimensione del buffer specificati."
  remarks: "Questo metodo puÃ² essere utilizzato per riacquisire il flusso di errore standard dopo che Ã¨ stato modificato dal <xref:System.Console.SetError%2A>metodo.</xref:System.Console.SetError%2A>"
  syntax:
    content: public static System.IO.Stream OpenStandardError (int bufferSize);
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "La dimensione del buffer di flusso interno."
    return:
      type: System.IO.Stream
      description: "Il flusso di errore standard."
  overload: System.Console.OpenStandardError*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>bufferSize</code>Ã¨ minore o uguale a zero."
  platform:
  - net462
- uid: System.Console.OpenStandardInput
  id: OpenStandardInput
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardInput()
  nameWithType: Console.OpenStandardInput()
  fullName: System.Console.OpenStandardInput()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Acquisisce il flusso di input standard."
  remarks: "Questo metodo puÃ² essere utilizzato per riacquisire il flusso di input standard dopo che Ã¨ stato modificato dal <xref:System.Console.SetIn%2A>metodo.</xref:System.Console.SetIn%2A>"
  example:
  - "The following example illustrates the use of the `OpenStandardInput` property.  \n  \n [!code-cs[System.Console.OpenStandartInput#1](~/add/codesnippet/csharp/m-system.console.opensta_3_1.cs)]\n [!code-vb[System.Console.OpenStandartInput#1](~/add/codesnippet/visualbasic/m-system.console.opensta_3_1.vb)]\n [!code-cpp[System.Console.OpenStandartInput#1](~/add/codesnippet/cpp/m-system.console.opensta_3_1.cpp)]"
  syntax:
    content: public static System.IO.Stream OpenStandardInput ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Flusso di input standard."
  overload: System.Console.OpenStandardInput*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OpenStandardInput(System.Int32)
  id: OpenStandardInput(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardInput(Int32)
  nameWithType: Console.OpenStandardInput(Int32)
  fullName: System.Console.OpenStandardInput(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Acquisisce il flusso di input standard, che Ã¨ impostato su una dimensione del buffer specificati."
  remarks: "Questo metodo puÃ² essere utilizzato per riacquisire il flusso di output standard dopo che Ã¨ stato modificato dal <xref:System.Console.SetIn%2A>metodo.</xref:System.Console.SetIn%2A>"
  example:
  - "The following example illustrates the use of the `OpenStandardInput` property.  \n  \n [!code-cs[System.Console.OpenStandartInput#1](~/add/codesnippet/csharp/m-system.console.opensta_2_1.cs)]\n [!code-vb[System.Console.OpenStandartInput#1](~/add/codesnippet/visualbasic/m-system.console.opensta_2_1.vb)]\n [!code-cpp[System.Console.OpenStandartInput#1](~/add/codesnippet/cpp/m-system.console.opensta_2_1.cpp)]"
  syntax:
    content: public static System.IO.Stream OpenStandardInput (int bufferSize);
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "La dimensione del buffer di flusso interno."
    return:
      type: System.IO.Stream
      description: "Flusso di input standard."
  overload: System.Console.OpenStandardInput*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>bufferSize</code>Ã¨ minore o uguale a zero."
  platform:
  - net462
- uid: System.Console.OpenStandardOutput
  id: OpenStandardOutput
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardOutput()
  nameWithType: Console.OpenStandardOutput()
  fullName: System.Console.OpenStandardOutput()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Acquisisce il flusso di output standard."
  remarks: "Questo metodo puÃ² essere utilizzato per riacquisire il flusso di output standard dopo che Ã¨ stato modificato dal <xref:System.Console.SetOut%2A>metodo.</xref:System.Console.SetOut%2A>"
  example:
  - "The following example illustrates the use of the OpenStandardOutput method. It replaces four consecutive space characters in a string with a tab character. To run it, you must supply two command-line arguments. The first is the name of an existing text file to redirect the standard input stream to. The second is the name of a file to redirect the standard output stream to. This file need not exist. If it does, its contents will be overwritten.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.opensta_0_1.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.opensta_0_1.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.opensta_0_1.cs)]"
  syntax:
    content: public static System.IO.Stream OpenStandardOutput ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Flusso di output standard."
  overload: System.Console.OpenStandardOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OpenStandardOutput(System.Int32)
  id: OpenStandardOutput(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: OpenStandardOutput(Int32)
  nameWithType: Console.OpenStandardOutput(Int32)
  fullName: System.Console.OpenStandardOutput(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Acquisisce il flusso di output standard, che Ã¨ impostato su una dimensione del buffer specificati."
  remarks: "Questo metodo puÃ² essere utilizzato per riacquisire il flusso di output standard dopo che Ã¨ stato modificato dal <xref:System.Console.SetOut%2A>metodo.</xref:System.Console.SetOut%2A>"
  example:
  - "The following example illustrates the use of the OpenStandardOutput method. It replaces four consecutive space characters in a string with a tab character. To run it, you must supply two command line arguments. The first is the name of an existing text file to redirect the standard input stream to. The second is the name of a file to redirect the standard output stream to. This file need not exist. If it does, its contents will be overwritten.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.opensta_1_1.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.opensta_1_1.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.opensta_1_1.cs)]"
  syntax:
    content: public static System.IO.Stream OpenStandardOutput (int bufferSize);
    parameters:
    - id: bufferSize
      type: System.Int32
      description: "La dimensione del buffer di flusso interno."
    return:
      type: System.IO.Stream
      description: "Flusso di output standard."
  overload: System.Console.OpenStandardOutput*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>bufferSize</code>Ã¨ minore o uguale a zero."
  platform:
  - net462
- uid: System.Console.Out
  id: Out
  parent: System.Console
  langs:
  - csharp
  name: Out
  nameWithType: Console.Out
  fullName: System.Console.Out
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene il flusso di output standard."
  remarks: "Per impostazione predefinita, questa proprietÃ  Ã¨ impostata per il flusso di output standard. Questa proprietÃ  puÃ² essere impostata su un altro flusso con il <xref:System.Console.SetOut%2A>metodo.</xref:System.Console.SetOut%2A>       Si noti che le chiamate a `Console.Out.WriteLine` metodi sono equivalenti alle chiamate corrispondenti <xref:System.Console.WriteLine%2A>metodi.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example uses the Out property to display an array containing the names of files in the application's current directory to the standard output device. It then sets the standard output to a file named Files.txt and lists the array elements to the file. Finally, it sets the output to the standard output stream and again displays the array elements to the standard output device.  \n  \n [!code-cs[System.Console.Out#1](~/add/codesnippet/csharp/p-system.console.out_1.cs)]\n [!code-vb[System.Console.Out#1](~/add/codesnippet/visualbasic/p-system.console.out_1.vb)]"
  syntax:
    content: public static System.IO.TextWriter Out { get; }
    return:
      type: System.IO.TextWriter
      description: "Oggetto <xref:System.IO.TextWriter>che rappresenta il flusso di output standard.</xref:System.IO.TextWriter>"
  overload: System.Console.Out*
  exceptions: []
  platform:
  - net462
- uid: System.Console.OutputEncoding
  id: OutputEncoding
  parent: System.Console
  langs:
  - csharp
  name: OutputEncoding
  nameWithType: Console.OutputEncoding
  fullName: System.Console.OutputEncoding
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene o imposta la codifica usata dalla console per scrivere l&quot;output."
  remarks: "La console utilizza la codifica di output per la conversione di caratteri scritti da un&quot;applicazione nei corrispondenti caratteri di visualizzazione. La tabella codici predefinita che utilizza la console Ã¨ determinata dalle impostazioni internazionali di sistema.       A partire dal [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], un&quot;operazione get di proprietÃ  puÃ² restituire un valore memorizzato nella cache anzichÃ© la codifica dell&quot;output della console corrente. CiÃ² puÃ² verificarsi se il valore della proprietÃ  OutputEncoding viene modificato in modo diverso da un&quot;assegnazione alla proprietÃ  OutputEncoding, quali la chiamata Windows `SetConsoleOutputCP` (funzione)."
  syntax:
    content: public static System.Text.Encoding OutputEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "La codifica usata per scrivere l&quot;output di console."
  overload: System.Console.OutputEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore della proprietÃ  in un&quot;operazione set Ã¨ <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore durante l&quot;esecuzione di questa operazione."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;applicazione non dispone dell&quot;autorizzazione per eseguire questa operazione."
  platform:
  - net462
- uid: System.Console.Read
  id: Read
  parent: System.Console
  langs:
  - csharp
  name: Read()
  nameWithType: Console.Read()
  fullName: System.Console.Read()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Legge il carattere successivo dal flusso di input standard."
  remarks: "Il metodo Read non restituisce alcun valore durante la digitazione di caratteri di input; termina quando si preme il <xref:System.ConsoleKey>chiave.</xref:System.ConsoleKey> Premendo INVIO aggiunge una sequenza di terminazione della riga dipendente dalla piattaforma per l&quot;input dell&quot;utente (ad esempio, verrÃ  aggiunto automaticamente una sequenza di ritorno a capo-avanzamento di riga restituito). Le chiamate successive al metodo Read recuperano l&quot;input di un carattere alla volta. Dopo il carattere finale viene recuperato, lettura non restituisce alcun valore nuovamente e il ciclo si ripete.      > [!IMPORTANT] > Il <xref:System.Console.ReadLine%2A>metodo, o <xref:System.Console.KeyAvailable%2A>proprietÃ  e <xref:System.Console.ReadKey%2A>metodo sono preferibili per l&quot;utilizzo del metodo Read.</xref:System.Console.ReadKey%2A> </xref:System.Console.KeyAvailable%2A> </xref:System.Console.ReadLine%2A>       Si noti che il metodo non restituisce -1 a meno che non si esegue una delle azioni seguenti: - contemporaneamente premere il <xref:System.ConsoleModifiers>tasto di modifica e <xref:System.ConsoleKey>tasto della console (Ctrl + Z), che segnala la condizione di fine del file.</xref:System.ConsoleKey> </xref:System.ConsoleModifiers>      -Premere un tasto equivalente che segnala la condizione di fine del file, ad esempio il tasto funzione F6 in Windows.      -Reindirizzare il flusso di input a un&quot;origine, ad esempio un file di testo che contiene un carattere di fine del file effettivo."
  example:
  - "The following example demonstrates the Read method.  \n  \n [!code-cpp[console.read#1](~/add/codesnippet/cpp/m-system.console.read_1.cpp)]\n [!code-cs[console.read#1](~/add/codesnippet/csharp/m-system.console.read_1.cs)]\n [!code-vb[console.read#1](~/add/codesnippet/visualbasic/m-system.console.read_1.vb)]"
  syntax:
    content: public static int Read ();
    parameters: []
    return:
      type: System.Int32
      description: "Carattere dal flusso di input successivo, oppure uno negativo (-1) se non sono piÃ¹ caratteri da leggere."
  overload: System.Console.Read*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.ReadKey
  id: ReadKey
  parent: System.Console
  langs:
  - csharp
  name: ReadKey()
  nameWithType: Console.ReadKey()
  fullName: System.Console.ReadKey()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene il successivo carattere o il tasto funzione premuto dall&quot;utente. Il tasto premuto viene visualizzato nella finestra della console."
  remarks: "Il metodo ReadKey rimane in attesa, vale a dire blocchi sul thread di esecuzione del metodo ReadKey, fino a quando non viene premuto un tasto carattere o una funzione. Possibile premere un tasto carattere o una funzione in combinazione con uno o piÃ¹ tasti di modifica MAIUSC, Alt o Ctrl. Tuttavia, premere un tasto di modifica da sola non comporterÃ  il restituzione del metodo ReadKey.       A seconda dell&quot;applicazione, si potrebbe voler utilizzare il metodo ReadKey in combinazione con la <xref:System.Console.KeyAvailable%2A>proprietÃ .</xref:System.Console.KeyAvailable%2A>       Metodo ReadKey legge la tastiera anche se l&quot;input standard viene reindirizzato a un file con il <xref:System.Console.SetIn%2A>metodo.</xref:System.Console.SetIn%2A>"
  example:
  - "One of the most common uses of the ReadKey method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information. The following example uses the  ReadKey method to wait for the user to press the Enter key before terminating the app.  \n  \n [!code-cs[System.Console.ReadKey#1](~/add/codesnippet/csharp/m-system.console.readkey_1.cs)]\n [!code-vb[System.Console.ReadKey#1](~/add/codesnippet/visualbasic/m-system.console.readkey_1.vb)]  \n  \n Note that this overload of the <xref:System.Console.ReadKey%2A> method by default echoes any displayable keys that the user presses to the console. To suppress them, call the  <xref:System.Console.ReadKey%2A> method with an `intercept` argument of `true`.  \n  \n The following example uses the ReadKey method to display information about which key the user pressed..  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/m-system.console.readkey_2.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/m-system.console.readkey_2.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/m-system.console.readkey_2.vb)]"
  syntax:
    content: public static ConsoleKeyInfo ReadKey ();
    parameters: []
    return:
      type: System.ConsoleKeyInfo
      description: "Oggetto che descrive il <xref href=&quot;System.ConsoleKey&quot;> </xref> (costante) e il carattere Unicode, se presente, che corrispondono al tasto premuto sulla console. Il <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> oggetto descrive inoltre, in una combinazione bit per bit di <xref href=&quot;System.ConsoleModifiers&quot;> </xref> valori, se uno o piÃ¹ tasti di modifica MAIUSC, Alt o Ctrl sono stati premuti contemporaneamente al tasto della console."
  overload: System.Console.ReadKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref:System.Console.In*>proprietÃ  viene reindirizzata da un flusso diverso da quello di console.</xref:System.Console.In*>"
  platform:
  - net462
- uid: System.Console.ReadKey(System.Boolean)
  id: ReadKey(System.Boolean)
  parent: System.Console
  langs:
  - csharp
  name: ReadKey(Boolean)
  nameWithType: Console.ReadKey(Boolean)
  fullName: System.Console.ReadKey(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene il successivo carattere o il tasto funzione premuto dall&quot;utente. Il tasto premuto viene visualizzato facoltativamente nella finestra della console."
  remarks: "Il <xref:System.Console.ReadKey%2A>metodo attende, vale a dire blocchi sul thread di esecuzione di <xref:System.Console.ReadKey%2A>(metodo), fino a quando non viene premuto un tasto carattere o una funzione.</xref:System.Console.ReadKey%2A> </xref:System.Console.ReadKey%2A> Possibile premere un tasto carattere o una funzione in combinazione con uno o piÃ¹ tasti di modifica MAIUSC, Alt o Ctrl. Tuttavia, premere un tasto di modifica da sola non comporterÃ  la <xref:System.Console.ReadKey%2A>restituzione del metodo.</xref:System.Console.ReadKey%2A>       Se il `intercept` parametro `true`, il tasto premuto viene intercettato e non visualizzate nella finestra della console; in caso contrario, il tasto premuto viene visualizzato.       A seconda dell&quot;applicazione, si potrebbe voler utilizzare la <xref:System.Console.ReadKey%2A>metodo in combinazione con la <xref:System.Console.KeyAvailable%2A>proprietÃ .</xref:System.Console.KeyAvailable%2A> </xref:System.Console.ReadKey%2A>       Il <xref:System.Console.ReadKey%2A>metodo legge da tastiera, anche se l&quot;input standard viene reindirizzato a un file con il <xref:System.Console.SetIn%2A>metodo.</xref:System.Console.SetIn%2A> </xref:System.Console.ReadKey%2A>"
  example:
  - "One of the most common uses of the <xref:System.Console.ReadKey%2A> method is to halt program execution until the user presses a key and the app either terminates or displays an additional window of information. The following example uses the  ReadKey method to wait for the user to press the Enter key before terminating the app. Note that, if the user presses any other key, it is not echoed to the console.  \n  \n [!code-vb[System.Console.ReadKey#2](~/add/codesnippet/visualbasic/m-system.console.readkey_1.vb)]\n [!code-cs[System.Console.ReadKey#2](~/add/codesnippet/csharp/m-system.console.readkey_1.cs)]  \n  \n The following example uses the ReadKey method to display information about the key pressed by a user without echoing that key to the console.  \n  \n [!code-cs[console.readkey2#1](~/add/codesnippet/csharp/m-system.console.readkey_2.cs)]\n [!code-cpp[console.readkey2#1](~/add/codesnippet/cpp/m-system.console.readkey_2.cpp)]\n [!code-vb[console.readkey2#1](~/add/codesnippet/visualbasic/m-system.console.readkey_2.vb)]"
  syntax:
    content: public static ConsoleKeyInfo ReadKey (bool intercept);
    parameters:
    - id: intercept
      type: System.Boolean
      description: "Determina se visualizzare il tasto premuto nella finestra della console. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per non visualizzare il tasto premuto; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ConsoleKeyInfo
      description: "Oggetto che descrive il <xref href=&quot;System.ConsoleKey&quot;> </xref> (costante) e il carattere Unicode, se presente, che corrispondono al tasto premuto sulla console. Il <xref href=&quot;System.ConsoleKeyInfo&quot;> </xref> oggetto descrive inoltre, in una combinazione bit per bit di <xref href=&quot;System.ConsoleModifiers&quot;> </xref> valori, se uno o piÃ¹ tasti di modifica MAIUSC, Alt o Ctrl sono stati premuti contemporaneamente al tasto della console."
  overload: System.Console.ReadKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref:System.Console.In*>proprietÃ  viene reindirizzata da un flusso diverso da quello di console.</xref:System.Console.In*>"
  platform:
  - net462
- uid: System.Console.ReadLine
  id: ReadLine
  parent: System.Console
  langs:
  - csharp
  name: ReadLine()
  nameWithType: Console.ReadLine()
  fullName: System.Console.ReadLine()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Legge la riga successiva di caratteri dal flusso di input standard."
  remarks: "Il metodo ReadLine legge una riga dal flusso di input standard. (Per la definizione di una riga, vedere il paragrafo dopo l&quot;elenco seguente). CiÃ² significa che: - se il dispositivo di input standard Ã¨ la tastiera, il metodo ReadLine si blocca fino a quando l&quot;utente preme il **invio** chiave.           Uno dei piÃ¹ comuni Usa di ReadLine (metodo), sia per sospendere l&quot;esecuzione del programma prima di cancellare la console e la visualizzazione delle nuove informazioni a esso, per richiedere all&quot;utente di premere il tasto INVIO prima di interrompere l&quot;applicazione. Questa condizione Ã¨ illustrata nell&quot;esempio seguente.           [!code-cpp[System.Console.ReadLine#6](~/add/codesnippet/cpp/m-system.console.readline_1.cpp)][!code-vb[System.Console.ReadLine#6](~/add/codesnippet/visualbasic/m-system.console.readline_1.vb)][!code-cs[System.Console.ReadLine#6](~/add/codesnippet/csharp/m-system.console.readline_1.cs) ] -se l&quot;input standard viene reindirizzato a un file, il metodo ReadLine legge una riga di testo da un file.             Ad esempio, ecco un file di testo denominato ReadLine1.txt: ```          This is the first line.       This is the second line.       This is the third line.       This is the fourth line.          ``` nell&quot;esempio seguente viene utilizzato il metodo ReadLine per leggere l&quot;input che viene reindirizzata da un file. Consente di terminare l&quot;operazione di lettura quando il metodo restituisce `null`, che indica che nessuna riga rimarrÃ  impostata per essere letti.           [!code-cs[System.Console.ReadLine#3](~/add/codesnippet/csharp/m-system.console.readline_2.cs)][!code-vb[System.Console.ReadLine#3](~/add/codesnippet/visualbasic/m-system.console.readline_2.vb) ] dopo la compilazione dell&quot;esempio di un file eseguibile denominato ReadLine1.exe, Ã¨ possibile eseguirlo dalla riga di comando con la sintassi ```       ReadLine1 < ReadLine1.txt       ``` per leggere il contenuto del file e visualizzarli nella console.             Una riga Ã¨ definita come una sequenza di caratteri seguiti da un ritorno a capo (0x000d esadecimale), un avanzamento riga (esadecimale 0x000a) o il valore di <xref:System.Environment.NewLine%2A?displayProperty=fullName>proprietÃ .</xref:System.Environment.NewLine%2A?displayProperty=fullName> La stringa restituita non contiene il carattere di terminazione. Per impostazione predefinita, il metodo legge l&quot;input da un buffer di input di 256 caratteri. PoichÃ© questo include la <xref:System.Environment.NewLine%2A?displayProperty=fullName>caratteri validi, il metodo puÃ² leggere le righe contenenti un massimo di 254 caratteri.</xref:System.Environment.NewLine%2A?displayProperty=fullName> Per leggere piÃ¹ righe, chiamare il <xref:System.Console.OpenStandardInput%28System.Int32%29>metodo.</xref:System.Console.OpenStandardInput%28System.Int32%29>       Il metodo ReadLine esegue in modo sincrono. Ovvero, si blocca fino a quando non viene letta una riga o la combinazione di tasti Ctrl + Z viene premuta. Il <xref:System.Console.In%2A>proprietÃ  restituisce un <xref:System.IO.TextReader>oggetto che rappresenta il flusso di input standard e che disponga sia sincrona <xref:System.IO.TextReader.ReadLine%2A?displayProperty=fullName>metodo e asincrono <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName>metodo.</xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName> </xref:System.IO.TextReader.ReadLine%2A?displayProperty=fullName> </xref:System.IO.TextReader> </xref:System.Console.In%2A> Tuttavia, quando viene utilizzato come flusso di input della console standard, il <xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName>esegue in modo sincrono anzichÃ© in modo asincrono e restituisce un `Task<String>` solo dopo l&quot;operazione di lettura Ã¨ stata completata.</xref:System.IO.TextReader.ReadLineAsync%2A?displayProperty=fullName>       Se questo metodo genera un <xref:System.OutOfMemoryException>eccezione, la posizione del lettore nell&quot;oggetto sottostante <xref:System.IO.Stream>dell&quot;oggetto viene spostato in numero di caratteri, il metodo Ã¨ stato in grado di leggere, ma vengono ignorati i caratteri giÃ  letti nel buffer interno ReadLine.</xref:System.IO.Stream> </xref:System.OutOfMemoryException> PoichÃ© la posizione del lettore nel flusso non puÃ² essere modificata, i caratteri letti giÃ  sono irreversibili e possono accedervi solo reinizializzando <xref:System.IO.TextReader>.</xref:System.IO.TextReader> Se la posizione iniziale all&quot;interno del flusso Ã¨ sconosciuta o il flusso non supporta la ricerca, sottostante <xref:System.IO.Stream>deve inoltre essere reinizializzata.</xref:System.IO.Stream> Per evitare questa situazione e produrre codice efficiente, Ã¨ necessario utilizzare il <xref:System.Console.KeyAvailable%2A>proprietÃ  e <xref:System.Console.ReadKey%2A>(metodo) e store i caratteri di lettura in un buffer allocato precedentemente.</xref:System.Console.ReadKey%2A> </xref:System.Console.KeyAvailable%2A>       Se il carattere di Ctrl + Z viene premuto quando il metodo Ã¨ di lettura di input dalla console, il metodo restituisce `null`. CiÃ² consente all&quot;utente impedire l&quot;ulteriore input da tastiera quando viene chiamato il metodo ReadLine in un ciclo. Nell&quot;esempio seguente viene illustrato questo scenario.       [!code-cpp[System.Console.ReadLine#1](~/add/codesnippet/cpp/m-system.console.readline_3.cpp)][!code-cs[System.Console.ReadLine#1](~/add/codesnippet/csharp/m-system.console.readline_3.cs)][!code-vb[System.Console.ReadLine#1    ](~/add/codesnippet/visualbasic/m-system.console.readline_3.vb)]"
  example:
  - "The following example requires two command line arguments: the name of an existing text file, and the name of a file to write the output to. It opens the existing text file and redirects the standard input from the keyboard to that file. It also redirects the standard output from the console to the output file. It then uses the ReadLine method to read each line in the file, replaces every sequence of four spaces with a tab character, and uses the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method to write the result to the output file.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.readline_4.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.readline_4.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.readline_4.cs)]"
  syntax:
    content: public static string ReadLine ();
    parameters: []
    return:
      type: System.String
      description: "La riga successiva di caratteri dal flusso di input, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non sono piÃ¹ disponibili righe."
  overload: System.Console.ReadLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Vi Ã¨ memoria sufficiente per allocare un buffer per la stringa restituita."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il numero di caratteri nella riga successiva di caratteri Ã¨ maggiore di &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Console.ResetColor
  id: ResetColor
  parent: System.Console
  langs:
  - csharp
  name: ResetColor()
  nameWithType: Console.ResetColor()
  fullName: System.Console.ResetColor()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Imposta il primo piano e sfondo colori della console sui valori predefiniti."
  remarks: "I colori di sfondo e primo piano vengono ripristinati i colori presenti all&quot;inizio del processo corrente. Per ulteriori informazioni, vedere il <xref:System.Console.ForegroundColor%2A>e <xref:System.Console.BackgroundColor%2A>proprietÃ .</xref:System.Console.BackgroundColor%2A> </xref:System.Console.ForegroundColor%2A>"
  example:
  - "The following example saves the values of the <xref:System.ConsoleColor> enumeration to an array and stores the current values of the <xref:System.Console.BackgroundColor%2A> and <xref:System.Console.ForegroundColor%2A> properties to variables. It then changes the foreground color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current background, and it changes the background color to each color in the <xref:System.ConsoleColor> enumeration except to the color that matches the current foreground. (If the foreground color is the same as the background color, the text isn't visible.) Finally, it calls the ResetColor method to restore the original console colors.  \n  \n [!code-vb[System.ConsoleColor#1](~/add/codesnippet/visualbasic/m-system.console.resetco_1.vb)]\n [!code-cs[System.ConsoleColor#1](~/add/codesnippet/csharp/m-system.console.resetco_1.cs)]"
  syntax:
    content: public static void ResetColor ();
    parameters: []
  overload: System.Console.ResetColor*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per eseguire questa azione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.SetBufferSize(System.Int32,System.Int32)
  id: SetBufferSize(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: SetBufferSize(Int32,Int32)
  nameWithType: Console.SetBufferSize(Int32,Int32)
  fullName: System.Console.SetBufferSize(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Imposta l&quot;altezza e la larghezza dell&quot;area del buffer dello schermo sui valori specificati."
  remarks: ''
  example:
  - "The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, SetBufferSize, and <xref:System.Console.ReadKey%2A> methods. The example draws a grid pattern in the screen buffer based on the screen buffer width. Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed. The grid pattern helps you see the movement of the console window relative to the screen buffer.  \n  \n [!code-cpp[console.windowLT#1](~/add/codesnippet/cpp/m-system.console.setbuff_1.cpp)]\n [!code-vb[console.windowLT#1](~/add/codesnippet/visualbasic/m-system.console.setbuff_1.vb)]\n [!code-cs[console.windowLT#1](~/add/codesnippet/csharp/m-system.console.setbuff_1.cs)]"
  syntax:
    content: public static void SetBufferSize (int width, int height);
    parameters:
    - id: width
      type: System.Int32
      description: "La larghezza dell&quot;area del buffer misurata in colonne."
    - id: height
      type: System.Int32
      description: "L&quot;altezza dell&quot;area del buffer misurata in righe."
  overload: System.Console.SetBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>height</code>o <code>width</code> Ã¨ minore o uguale a zero.       - oppure - <code>height</code> o <code>width</code> Ã¨ maggiore o uguale a &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       -or-       <code>width</code> is less than <xref:System.Console.WindowLeft*> + <xref:System.Console.WindowWidth*>.       -or-       <code>height</code> is less than <xref:System.Console.WindowTop*> + <xref:System.Console.WindowHeight*>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per eseguire questa azione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.SetCursorPosition(System.Int32,System.Int32)
  id: SetCursorPosition(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: SetCursorPosition(Int32,Int32)
  nameWithType: Console.SetCursorPosition(Int32,Int32)
  fullName: System.Console.SetCursorPosition(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Imposta la posizione del cursore."
  remarks: "Utilizzare il metodo SetCursorPosition per specificare dove iniziare la successiva operazione di scrittura nella finestra della console. Se la posizione del cursore specificato Ã¨ all&quot;esterno dell&quot;area che Ã¨ attualmente visibile nella finestra della console, la finestra di origine viene modificata automaticamente per rendere visibile il cursore.       Il cursore viene spostato automaticamente alla posizione del carattere successiva ogni volta che un carattere Ã¨ scritto alla finestra della console. Se il cursore si trova in corrispondenza della posizione di carattere corretto nella parte inferiore della finestra della console, la successiva operazione di scrittura farÃ  finestra della console per scorrere in modo che rimanga visibile il cursore. Se si desidera scrivere un carattere alla posizione nella parte inferiore destra carattere senza finestra della console per lo scorrimento, utilizzare il <xref:System.Console.MoveBufferArea%2A>metodo per spostare un carattere in tale posizione.</xref:System.Console.MoveBufferArea%2A>"
  example:
  - "This example demonstrates the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.CursorTop%2A> properties, and the SetCursorPosition and <xref:System.Console.Clear%2A> methods. The example positions the cursor, which determines where the next write will occur, to draw a 5 character by 5 character rectangle using a combination of \"+\", \"&#124;\", and \"-\" strings. Note that the rectangle could be drawn with fewer steps using a combination of other strings.  \n  \n [!code-cs[console.cursorLTS#1](~/add/codesnippet/csharp/m-system.console.setcurs_1.cs)]\n [!code-cpp[console.cursorLTS#1](~/add/codesnippet/cpp/m-system.console.setcurs_1.cpp)]\n [!code-vb[console.cursorLTS#1](~/add/codesnippet/visualbasic/m-system.console.setcurs_1.vb)]"
  syntax:
    content: public static void SetCursorPosition (int left, int top);
    parameters:
    - id: left
      type: System.Int32
      description: "Posizione della colonna del cursore. Le colonne sono numerate da sinistra a destra a partire da 0."
    - id: top
      type: System.Int32
      description: "Posizione riga del cursore. Le righe sono numerate dall&quot;alto verso il basso iniziando da 0."
  overload: System.Console.SetCursorPosition*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>left</code>o <code>top</code> Ã¨ minore di zero.       - oppure - <code>left</code> Ã¨ maggiore o uguale a <xref:System.Console.BufferWidth*>.       - oppure - <code>top</code> Ã¨ maggiore o uguale a <xref:System.Console.BufferHeight*>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per eseguire questa azione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.SetError(System.IO.TextWriter)
  id: SetError(System.IO.TextWriter)
  parent: System.Console
  langs:
  - csharp
  name: SetError(TextWriter)
  nameWithType: Console.SetError(TextWriter)
  fullName: System.Console.SetError(TextWriter)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Imposta il <xref:System.Console.Error*>proprietÃ  all&quot;oggetto specificato <xref:System.IO.TextWriter>oggetto.</xref:System.IO.TextWriter> </xref:System.Console.Error*>"
  remarks: "Per impostazione predefinita, il <xref:System.Console.Error%2A>proprietÃ  Ã¨ impostata per il flusso di output di errore standard.</xref:System.Console.Error%2A>       Oggetto <xref:System.IO.StreamWriter>che incapsula un <xref:System.IO.FileStream>puÃ² essere utilizzato per inviare messaggi di errore a un file.</xref:System.IO.FileStream> </xref:System.IO.StreamWriter>"
  example:
  - "The following example shows how to redirect the standard error stream to a file.  \n  \n [!code-vb[System.Console.SetError#1](~/add/codesnippet/visualbasic/m-system.console.seterro_1.vb)]\n [!code-cs[System.Console.SetError#1](~/add/codesnippet/csharp/m-system.console.seterro_1.cs)]\n [!code-cpp[System.Console.SetError#1](~/add/codesnippet/cpp/m-system.console.seterro_1.cpp)]"
  syntax:
    content: public static void SetError (System.IO.TextWriter newError);
    parameters:
    - id: newError
      type: System.IO.TextWriter
      description: "Flusso che Ã¨ il nuovo output di errore standard."
  overload: System.Console.SetError*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>newError</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante non dispone dell&quot;autorizzazione richiesta."
  platform:
  - net462
- uid: System.Console.SetIn(System.IO.TextReader)
  id: SetIn(System.IO.TextReader)
  parent: System.Console
  langs:
  - csharp
  name: SetIn(TextReader)
  nameWithType: Console.SetIn(TextReader)
  fullName: System.Console.SetIn(TextReader)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Imposta il <xref:System.Console.In*>proprietÃ  all&quot;oggetto specificato <xref:System.IO.TextReader>oggetto.</xref:System.IO.TextReader> </xref:System.Console.In*>"
  remarks: "Per impostazione predefinita, il <xref:System.Console.In%2A>proprietÃ  Ã¨ impostata sul flusso di input standard.</xref:System.Console.In%2A>       Oggetto <xref:System.IO.StreamReader>che incapsula un <xref:System.IO.FileStream>puÃ² essere utilizzato per ricevere input da un file.</xref:System.IO.FileStream> </xref:System.IO.StreamReader>"
  example:
  - "The following example illustrates the use of the SetIn method. It replaces four consecutive space characters in a string with a tab character. To run it, you must supply two command line arguments. The first is the name of an existing text file to redirect the standard input stream to. The second is the name of a file to redirect the standard output stream to. This file need not exist. If it does, its contents will be overwritten.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.setin-s_1.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.setin-s_1.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.setin-s_1.cs)]"
  syntax:
    content: public static void SetIn (System.IO.TextReader newIn);
    parameters:
    - id: newIn
      type: System.IO.TextReader
      description: "Flusso che Ã¨ il nuovo input standard."
  overload: System.Console.SetIn*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>newIn</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante non dispone dell&quot;autorizzazione richiesta."
  platform:
  - net462
- uid: System.Console.SetOut(System.IO.TextWriter)
  id: SetOut(System.IO.TextWriter)
  parent: System.Console
  langs:
  - csharp
  name: SetOut(TextWriter)
  nameWithType: Console.SetOut(TextWriter)
  fullName: System.Console.SetOut(TextWriter)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Imposta il <xref:System.Console.Out*>proprietÃ  all&quot;oggetto specificato <xref:System.IO.TextWriter>oggetto.</xref:System.IO.TextWriter> </xref:System.Console.Out*>"
  remarks: "Per impostazione predefinita, il <xref:System.Console.Out%2A>Ã¨ impostata su flusso di output standard.</xref:System.Console.Out%2A>       Oggetto <xref:System.IO.StreamWriter>che incapsula un <xref:System.IO.FileStream>puÃ² essere usato per inviare l&quot;output in un file.</xref:System.IO.FileStream> </xref:System.IO.StreamWriter> Ad esempio: [!code-cs [System.Console.SetOut#1](~/add/codesnippet/csharp/m-system.console.setout-_1.cs)][!code-vb[System.Console.SetOut#1](~/add/codesnippet/visualbasic/m-system.console.setout-_1.vb)][!code-cpp[System.Console.SetOut#1    ](~/add/codesnippet/cpp/m-system.console.setout-_1.cpp)]"
  example:
  - "The following example illustrates the use of the SetOut method. It replaces four consecutive space characters in a string with a tab character. To run it, you must supply two command line arguments. The first is the name of an existing text file to redirect the standard input stream to. The second is the name of a file to redirect the standard output stream to. This file need not exist. If it does, its contents will be overwritten.  \n  \n [!code-cpp[System.Console-INSERTTABS#1](~/add/codesnippet/cpp/m-system.console.setout-_2.cpp)]\n [!code-vb[System.Console-INSERTTABS#1](~/add/codesnippet/visualbasic/m-system.console.setout-_2.vb)]\n [!code-cs[System.Console-INSERTTABS#1](~/add/codesnippet/csharp/m-system.console.setout-_2.cs)]"
  syntax:
    content: public static void SetOut (System.IO.TextWriter newOut);
    parameters:
    - id: newOut
      type: System.IO.TextWriter
      description: "Flusso che Ã¨ il nuovo output standard."
  overload: System.Console.SetOut*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>newOut</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Il chiamante non dispone dell&quot;autorizzazione richiesta."
  platform:
  - net462
- uid: System.Console.SetWindowPosition(System.Int32,System.Int32)
  id: SetWindowPosition(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: SetWindowPosition(Int32,Int32)
  nameWithType: Console.SetWindowPosition(Int32,Int32)
  fullName: System.Console.SetWindowPosition(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Imposta la posizione della finestra della console relativamente al buffer dello schermo."
  remarks: "Nella finestra di sistema operativo viene visualizzato nella finestra della console e nella finestra della console viene visualizzata una parte del buffer dello schermo. Il metodo SetWindowPosition influisce sulla posizione della finestra della console relativamente al buffer dello schermo, ma non modifica la posizione della finestra del sistema operativo rispetto al desktop.       La console e del sistema operativo windows in genere non interferiscano tra loro. Tuttavia, se il buffer dello schermo non puÃ² essere visualizzato entro i limiti correnti della finestra della console, il sistema operativo aggiunge automaticamente le barre di scorrimento alla finestra del sistema operativo. In tal caso, lo spostamento le barre di scorrimento della finestra del sistema operativo influisce sulla posizione della finestra della console e spostando la finestra della console con il metodo SetWindowPosition influisce sulla posizione delle barre di scorrimento finestra sistema operativo."
  example:
  - "The following example demonstrates the <xref:System.Console.WindowLeft%2A>, <xref:System.Console.WindowTop%2A>, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the SetWindowPosition, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods. The example draws a grid pattern in the screen buffer based on the screen buffer width. Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed. The grid pattern helps you see the movement of the console window relative to the screen buffer.  \n  \n [!code-cpp[console.windowLT#1](~/add/codesnippet/cpp/m-system.console.setwind_0_1.cpp)]\n [!code-vb[console.windowLT#1](~/add/codesnippet/visualbasic/m-system.console.setwind_0_1.vb)]\n [!code-cs[console.windowLT#1](~/add/codesnippet/csharp/m-system.console.setwind_0_1.cs)]"
  syntax:
    content: public static void SetWindowPosition (int left, int top);
    parameters:
    - id: left
      type: System.Int32
      description: "Posizione della colonna dell&quot;angolo superiore sinistro della finestra della console."
    - id: top
      type: System.Int32
      description: "La posizione della riga dell&quot;angolo superiore sinistro della finestra della console."
  overload: System.Console.SetWindowPosition*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>left</code>o <code>top</code> Ã¨ minore di zero.       - oppure - <code>left</code>  + <xref:System.Console.WindowWidth*> Ã¨ maggiore di <xref:System.Console.BufferWidth*>.       - oppure - <code>top</code>  + <xref:System.Console.WindowHeight*> Ã¨ maggiore di <xref:System.Console.BufferHeight*>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per eseguire questa azione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.SetWindowSize(System.Int32,System.Int32)
  id: SetWindowSize(System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: SetWindowSize(Int32,Int32)
  nameWithType: Console.SetWindowSize(Int32,Int32)
  fullName: System.Console.SetWindowSize(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Imposta l&quot;altezza e la larghezza della finestra della console sui valori specificati."
  remarks: ''
  example:
  - "This example demonstrates the SetWindowSize method, and the <xref:System.Console.WindowWidth%2A> and <xref:System.Console.WindowHeight%2A> properties. You must run the example to see the full effect of changing the console window size.  \n  \n The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key to be pressed. When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press. Finally, when any key is pressed, the console window is restored to its original dimensions and the example terminates.  \n  \n [!code-cpp[console.setwindowsize#1](~/add/codesnippet/cpp/m-system.console.setwind_1_1.cpp)]\n [!code-vb[console.setwindowsize#1](~/add/codesnippet/visualbasic/m-system.console.setwind_1_1.vb)]\n [!code-cs[console.setwindowsize#1](~/add/codesnippet/csharp/m-system.console.setwind_1_1.cs)]"
  syntax:
    content: public static void SetWindowSize (int width, int height);
    parameters:
    - id: width
      type: System.Int32
      description: "La larghezza della finestra della console misurata in colonne."
    - id: height
      type: System.Int32
      description: "L&quot;altezza della finestra della console misurata in righe."
  overload: System.Console.SetWindowSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>width</code>o <code>height</code> Ã¨ minore o uguale a zero.       - oppure - <code>width</code> piÃ¹ <xref:System.Console.WindowLeft*> o <code>height</code> piÃ¹ <xref:System.Console.WindowTop*> Ã¨ maggiore o uguale a &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - oppure - <code>width</code> o <code>height</code> Ã¨ maggiore del piÃ¹ grande possibile larghezza o altezza per il carattere corrente di console e la risoluzione dello schermo."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "L&quot;utente non dispone dell&quot;autorizzazione per eseguire questa azione."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.Title
  id: Title
  parent: System.Console
  langs:
  - csharp
  name: Title
  nameWithType: Console.Title
  fullName: System.Console.Title
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene o imposta il titolo da visualizzare nella barra del titolo della console."
  remarks: ''
  example:
  - "This example demonstrates the Title property. The example displays the current title of the operating system window, waits for a key press, then displays a new title.  \n  \n [!code-cs[console.title#1](~/add/codesnippet/csharp/p-system.console.title_1.cs)]\n [!code-cpp[console.title#1](~/add/codesnippet/cpp/p-system.console.title_1.cpp)]\n [!code-vb[console.title#1](~/add/codesnippet/visualbasic/p-system.console.title_1.vb)]"
  syntax:
    content: public static string Title { get; set; }
    return:
      type: System.String
      description: "Stringa da visualizzare nella barra del titolo della console. La lunghezza massima della stringa del titolo Ã¨ di 24500 caratteri."
  overload: System.Console.Title*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "In un&quot;operazione get, il titolo recuperato Ã¨ piÃ¹ lungo di 24500 caratteri."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "In un&quot;operazione set il titolo specificato Ã¨ piÃ¹ lungo di 24500 caratteri."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "In un&quot;operazione set il titolo specificato Ã¨ <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.TreatControlCAsInput
  id: TreatControlCAsInput
  parent: System.Console
  langs:
  - csharp
  name: TreatControlCAsInput
  nameWithType: Console.TreatControlCAsInput
  fullName: System.Console.TreatControlCAsInput
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene o imposta un valore che indica se la combinazione di <xref href=&quot;System.ConsoleModifiers&quot;> </xref> tasto di modifica e <xref href=&quot;System.ConsoleKey&quot;> </xref> tasto della console (Ctrl + C) deve essere trattata come un input standard o come un&quot;interruzione gestita dal sistema operativo."
  remarks: "Se il valore della proprietÃ  TreatControlCAsInput Ã¨ `false` e si preme Ctrl + C, i tasti premuti non vengono memorizzati nel buffer di input e il sistema operativo termina il processo attualmente in esecuzione. Questo Ã¨ il valore predefinito.      > [!CAUTION] > Utilizzare questa proprietÃ  con attenzione perchÃ© se Ã¨ impostato su `true` ha effetti indesiderati. La maggior parte degli utenti prevedono Ctrl + C per terminare l&quot;applicazione console. Se si disabilita l&quot;effetto di Ctrl + C, l&quot;utente deve ricordarsi di utilizzare Ctrl + INTERR per terminare l&quot;applicazione, che Ã¨ una combinazione di tasti meno comuni."
  example:
  - "The following example demonstrates the TreatControlCAsInput property.  \n  \n [!code-cs[console.readkey1#1](~/add/codesnippet/csharp/p-system.console.treatco_1.cs)]\n [!code-cpp[console.readkey1#1](~/add/codesnippet/cpp/p-system.console.treatco_1.cpp)]\n [!code-vb[console.readkey1#1](~/add/codesnippet/visualbasic/p-system.console.treatco_1.vb)]"
  syntax:
    content: public static bool TreatControlCAsInput { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se Ctrl + C Ã¨ trattato come un input standard; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.TreatControlCAsInput*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Impossibile ottenere o impostare la modalitÃ  di input del buffer di input della console."
  platform:
  - net462
- uid: System.Console.WindowHeight
  id: WindowHeight
  parent: System.Console
  langs:
  - csharp
  name: WindowHeight
  nameWithType: Console.WindowHeight
  fullName: System.Console.WindowHeight
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene o imposta l&quot;altezza della finestra della console."
  remarks: "Il tentativo di impostare il valore della proprietÃ  WindowHeight quando viene reindirizzato l&quot;output genera un&quot;eccezione un <xref:System.ArgumentOutOfRangeException>o <xref:System.IO.IOException>eccezione.</xref:System.IO.IOException> </xref:System.ArgumentOutOfRangeException> Per evitare un&quot;eccezione, Ã¨ possibile impostare il valore di questa proprietÃ  solo se il <xref:System.Console.IsOutputRedirected%2A>restituisce proprietÃ  `false`.</xref:System.Console.IsOutputRedirected%2A>"
  example:
  - "This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the <xref:System.Console.WindowWidth%2A> and WindowHeight properties. You must run the example to see the full effect of changing the console window size.  \n  \n The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press. When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press. Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.  \n  \n [!code-cpp[console.setwindowsize#1](~/add/codesnippet/cpp/p-system.console.windowh_1.cpp)]\n [!code-vb[console.setwindowsize#1](~/add/codesnippet/visualbasic/p-system.console.windowh_1.vb)]\n [!code-cs[console.setwindowsize#1](~/add/codesnippet/csharp/p-system.console.windowh_1.cs)]"
  syntax:
    content: public static int WindowHeight { get; set; }
    return:
      type: System.Int32
      description: "L&quot;altezza della finestra della console misurata in righe."
  overload: System.Console.WindowHeight*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore di <> </> *> proprietÃ  o il valore della proprietÃ  WindowHeight Ã¨ minore o uguale a 0.       - oppure - il valore della proprietÃ  WindowHeight piÃ¹ il valore di <> </> *> proprietÃ  Ã¨ maggiore o uguale a &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       Il valore di - oppure - il <xref:System.Console.WindowWidth*>proprietÃ  o il valore della proprietÃ  WindowHeight Ã¨ maggiore del piÃ¹ grande possibile larghezza o altezza per il carattere corrente di console e la risoluzione dello schermo.</xref:System.Console.WindowWidth*>"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Errore durante la lettura o scrittura delle informazioni."
  platform:
  - net462
- uid: System.Console.WindowLeft
  id: WindowLeft
  parent: System.Console
  langs:
  - csharp
  name: WindowLeft
  nameWithType: Console.WindowLeft
  fullName: System.Console.WindowLeft
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene o imposta la posizione piÃ¹ a sinistra della finestra della console relativamente al buffer dello schermo."
  remarks: "La console rappresenta una finestra rettangolare in un&quot;area rettangolare buffer piÃ¹ grande. Finestra e il buffer sono misurati verticalmente in base al numero di righe e orizzontalmente in base al numero di colonne. Le dimensioni dell&quot;area del buffer vengono definite per il <xref:System.Console.BufferHeight%2A>e <xref:System.Console.BufferWidth%2A>proprietÃ .</xref:System.Console.BufferWidth%2A> </xref:System.Console.BufferHeight%2A> Le dimensioni dell&quot;area della console vengono definite per il <xref:System.Console.WindowHeight%2A>e <xref:System.Console.WindowWidth%2A>proprietÃ .</xref:System.Console.WindowWidth%2A> </xref:System.Console.WindowHeight%2A> La proprietÃ  WindowLeft determina quale colonna dell&quot;area del buffer viene visualizzata nella prima colonna della finestra della console. Il valore della proprietÃ  WindowLeft puÃ² variare da 0 a <xref:System.Console.BufferWidth%2A>- <xref:System.Console.WindowWidth%2A>.</xref:System.Console.WindowWidth%2A> </xref:System.Console.BufferWidth%2A> Il tentativo di impostarla su un valore esterno all&quot;intervallo genera un <xref:System.ArgumentOutOfRangeException>.</xref:System.ArgumentOutOfRangeException>       Quando una finestra della console viene aperta, il valore predefinito della proprietÃ  WindowLeft Ã¨ zero, che indica che la prima colonna visualizzata dalla console corrisponde alla prima colonna (la colonna alla posizione zero) nell&quot;area del buffer. La larghezza predefinita di finestra della console e l&quot;area del buffer Ã¨ 80 colonne. CiÃ² significa che la proprietÃ  WindowLeft puÃ² essere modificata solo se la finestra della console viene resa piÃ¹ stretta o l&quot;area del buffer viene resa piÃ¹ ampia.       Si noti che se la larghezza dell&quot;area del buffer supera la larghezza della finestra della console, il valore della proprietÃ  WindowLeft viene regolato automaticamente quando l&quot;utente usa la barra di scorrimento orizzontale per definire la relazione della finestra dell&quot;area del buffer.       Il tentativo di impostare il valore della proprietÃ  WindowLeft quando l&quot;output viene reindirizzato genera un <xref:System.IO.IOException>eccezione.</xref:System.IO.IOException> Per evitare l&quot;eccezione, Ã¨ possibile impostare il valore di questa proprietÃ  solo se il <xref:System.Console.IsOutputRedirected%2A>restituisce proprietÃ  `false`.</xref:System.Console.IsOutputRedirected%2A>"
  example:
  - "The following example opens an 80-column console window and defines a buffer area that is 120 columns wide. It displays information on window and buffer size, and then waits for the user to press either the LEFT ARROW key or the RIGHT ARROW key. In the former case, it decrements the value of the WindowLeft property by one if the result is a legal value. In the latter case, it increases the value of the WindowLeft property by one if the result would be legal. Note that the example does not have to handle an <xref:System.ArgumentOutOfRangeException>, because it checks that the value to be assigned to the WindowLeft property is not negative and does not cause the sum of the WindowLeft and <xref:System.Console.WindowWidth%2A> properties to exceed the <xref:System.Console.BufferWidth%2A> property value.  \n  \n [!code-vb[System.Console.WindowLeft#1](~/add/codesnippet/visualbasic/p-system.console.windowl_1.vb)]\n [!code-cs[System.Console.WindowLeft#1](~/add/codesnippet/csharp/p-system.console.windowl_1.cs)]\n [!code-cpp[System.Console.WindowLeft#1](~/add/codesnippet/cpp/p-system.console.windowl_1.cpp)]"
  syntax:
    content: public static int WindowLeft { get; set; }
    return:
      type: System.Int32
      description: "La posizione di finestra piÃ¹ a sinistra della console misurata in colonne."
  overload: System.Console.WindowLeft*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "In un&quot;operazione set il valore da assegnare Ã¨ minore di zero.       - oppure - in seguito all&quot;assegnazione, WindowLeft piÃ¹ <> </> *> supererebbe <> </> *>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Errore durante la lettura o scrittura delle informazioni."
  platform:
  - net462
- uid: System.Console.WindowTop
  id: WindowTop
  parent: System.Console
  langs:
  - csharp
  name: WindowTop
  nameWithType: Console.WindowTop
  fullName: System.Console.WindowTop
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene o imposta la posizione in alto dell&quot;area della finestra della console relativamente al buffer dello schermo."
  remarks: "La console rappresenta una finestra rettangolare in un&quot;area rettangolare buffer piÃ¹ grande. Finestra e il buffer sono misurati verticalmente in base al numero di righe e orizzontalmente in base al numero di colonne. Le dimensioni dell&quot;area del buffer vengono definite per il <xref:System.Console.BufferHeight%2A>e <xref:System.Console.BufferWidth%2A>proprietÃ .</xref:System.Console.BufferWidth%2A> </xref:System.Console.BufferHeight%2A> Le dimensioni dell&quot;area della console vengono definite per il <xref:System.Console.WindowHeight%2A>e <xref:System.Console.WindowWidth%2A>proprietÃ .</xref:System.Console.WindowWidth%2A> </xref:System.Console.WindowHeight%2A> La proprietÃ  WindowTop determina quale riga dell&quot;area del buffer viene visualizzata nella prima colonna della finestra della console. Il valore della proprietÃ  WindowTop puÃ² variare da 0 a <xref:System.Console.BufferHeight%2A>- <xref:System.Console.WindowHeight%2A>.</xref:System.Console.WindowHeight%2A> </xref:System.Console.BufferHeight%2A> Il tentativo di impostarla su un valore esterno all&quot;intervallo genera un <xref:System.ArgumentOutOfRangeException>.</xref:System.ArgumentOutOfRangeException>       Il tentativo di impostare il valore della proprietÃ  WindowTop quando l&quot;output viene reindirizzato genera un <xref:System.IO.IOException>eccezione.</xref:System.IO.IOException> Per evitare l&quot;eccezione, Ã¨ possibile impostare il valore di questa proprietÃ  solo se il <xref:System.Console.IsOutputRedirected%2A>restituisce proprietÃ  `false`.</xref:System.Console.IsOutputRedirected%2A>"
  example:
  - "The following example demonstrates the <xref:System.Console.WindowLeft%2A>, WindowTop, <xref:System.Console.WindowWidth%2A>, <xref:System.Console.WindowHeight%2A>, <xref:System.Console.BufferWidth%2A>, <xref:System.Console.BufferHeight%2A>, and <xref:System.Console.CursorVisible%2A> properties; and the <xref:System.Console.SetWindowPosition%2A>, <xref:System.Console.SetBufferSize%2A>, and <xref:System.Console.ReadKey%2A> methods. The example draws a grid pattern in the screen buffer based on the screen buffer width. Then the example moves the console window in response to which of the UP ARROW, DOWN ARROW, LEFT ARROW, or RIGHT ARROW console keys is pressed. The grid pattern helps you see the movement of the console window relative to the screen buffer.  \n  \n [!code-cpp[console.windowLT#1](~/add/codesnippet/cpp/p-system.console.windowtop_1.cpp)]\n [!code-vb[console.windowLT#1](~/add/codesnippet/visualbasic/p-system.console.windowtop_1.vb)]\n [!code-cs[console.windowLT#1](~/add/codesnippet/csharp/p-system.console.windowtop_1.cs)]"
  syntax:
    content: public static int WindowTop { get; set; }
    return:
      type: System.Int32
      description: "La posizione della finestra console superiore misurata in righe."
  overload: System.Console.WindowTop*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "In un&quot;operazione set il valore da assegnare Ã¨ minore di zero.       - oppure - in seguito all&quot;assegnazione, WindowTop piÃ¹ <> </> *> supererebbe <> </> *>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Errore durante la lettura o scrittura delle informazioni."
  platform:
  - net462
- uid: System.Console.WindowWidth
  id: WindowWidth
  parent: System.Console
  langs:
  - csharp
  name: WindowWidth
  nameWithType: Console.WindowWidth
  fullName: System.Console.WindowWidth
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ottiene o imposta la larghezza della finestra della console."
  remarks: "Il tentativo di impostare il valore della proprietÃ  WindowWidth quando viene reindirizzato l&quot;output genera un&quot;eccezione un <xref:System.ArgumentOutOfRangeException>o <xref:System.IO.IOException>eccezione.</xref:System.IO.IOException> </xref:System.ArgumentOutOfRangeException> Per evitare un&quot;eccezione, Ã¨ possibile impostare il valore di questa proprietÃ  solo se il <xref:System.Console.IsOutputRedirected%2A>restituisce proprietÃ  `false`.</xref:System.Console.IsOutputRedirected%2A>"
  example:
  - "This example demonstrates the <xref:System.Console.SetWindowSize%2A> method, and the WindowWidth and <xref:System.Console.WindowHeight%2A> properties. You must run the example to see the full effect of changing the console window size.  \n  \n The example reports the dimensions of a console window set to 85 columns and 43 rows, then waits for a key press. When any key is pressed, the dimensions of the console window are halved, the new dimensions are reported, and the example waits for another key press. Finally, when any key is pressed the console window is restored to its original dimensions and the example terminates.  \n  \n [!code-cpp[console.setwindowsize#1](~/add/codesnippet/cpp/p-system.console.windoww_1.cpp)]\n [!code-vb[console.setwindowsize#1](~/add/codesnippet/visualbasic/p-system.console.windoww_1.vb)]\n [!code-cs[console.setwindowsize#1](~/add/codesnippet/csharp/p-system.console.windoww_1.cs)]"
  syntax:
    content: public static int WindowWidth { get; set; }
    return:
      type: System.Int32
      description: "La larghezza della finestra della console misurata in colonne."
  overload: System.Console.WindowWidth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore della proprietÃ  WindowWidth o il valore di <> </> *> proprietÃ  Ã¨ minore o uguale a 0.       Il valore di - oppure - il <> </> *> proprietÃ  sommato al valore del <> </> *> proprietÃ  Ã¨ maggiore o uguale a &lt;xref:System.Int16.MaxValue?displayProperty=fullName&gt;.       - oppure - il valore della proprietÃ  WindowWidth o il valore di <> </> *> proprietÃ  Ã¨ maggiore del piÃ¹ grande possibile larghezza o altezza per il carattere corrente di console e la risoluzione dello schermo."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Errore durante la lettura o scrittura delle informazioni."
  platform:
  - net462
- uid: System.Console.Write(System.Boolean)
  id: Write(System.Boolean)
  parent: System.Console
  langs:
  - csharp
  name: Write(Boolean)
  nameWithType: Console.Write(Boolean)
  fullName: System.Console.Write(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive nel flusso di output standard la rappresentazione testo del valore Boolean specificato."
  remarks: "La rappresentazione testo del `value` viene generata chiamando <xref:System.Boolean.ToString%2A?displayProperty=fullName>, che restituisce uno <xref:System.Boolean.TrueString?displayProperty=fullName>o <xref:System.Boolean.FalseString?displayProperty=fullName>.</xref:System.Boolean.FalseString?displayProperty=fullName> </xref:System.Boolean.TrueString?displayProperty=fullName> </xref:System.Boolean.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_8_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_8_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_8_1.cpp)]"
  syntax:
    content: public static void Write (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "Valore da scrivere."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.Write(System.Char)
  id: Write(System.Char)
  parent: System.Console
  langs:
  - csharp
  name: Write(Char)
  nameWithType: Console.Write(Char)
  fullName: System.Console.Write(Char)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive nel flusso di output standard il valore del carattere Unicode specificato."
  remarks: ''
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_9_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_9_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_9_1.cpp)]"
  syntax:
    content: public static void Write (char value);
    parameters:
    - id: value
      type: System.Char
      description: "Valore da scrivere."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.Write(System.Char[])
  id: Write(System.Char[])
  parent: System.Console
  langs:
  - csharp
  name: Write(Char[])
  nameWithType: Console.Write(Char[])
  fullName: System.Console.Write(Char[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive nel flusso di output standard la matrice di caratteri Unicode specificata."
  syntax:
    content: public static void Write (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Matrice di caratteri Unicode."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.Write(System.Decimal)
  id: Write(System.Decimal)
  parent: System.Console
  langs:
  - csharp
  name: Write(Decimal)
  nameWithType: Console.Write(Decimal)
  fullName: System.Console.Write(Decimal)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo dell&quot;oggetto specificato <xref:System.Decimal>il flusso di output standard il valore.</xref:System.Decimal>"
  remarks: "La rappresentazione testo del `value` viene generata chiamando <xref:System.Decimal.ToString%2A?displayProperty=fullName>.</xref:System.Decimal.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_12_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_12_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_12_1.cpp)]"
  syntax:
    content: public static void Write (decimal value);
    parameters:
    - id: value
      type: System.Decimal
      description: "Valore da scrivere."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.Write(System.Double)
  id: Write(System.Double)
  parent: System.Console
  langs:
  - csharp
  name: Write(Double)
  nameWithType: Console.Write(Double)
  fullName: System.Console.Write(Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive nel flusso di output standard la rappresentazione testo del valore a virgola mobile a precisione doppia specificato."
  remarks: "La rappresentazione testo del `value` viene generata chiamando il <xref:System.Double.ToString%2A?displayProperty=fullName>metodo.</xref:System.Double.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_6_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_6_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_6_1.cpp)]"
  syntax:
    content: public static void Write (double value);
    parameters:
    - id: value
      type: System.Double
      description: "Valore da scrivere."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.Write(System.Int32)
  id: Write(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: Write(Int32)
  nameWithType: Console.Write(Int32)
  fullName: System.Console.Write(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive nel flusso di output standard la rappresentazione testo del valore intero con segno a 32 bit specificato."
  remarks: "La rappresentazione testo del `value` viene generata chiamando il <xref:System.Int32.ToString%2A?displayProperty=fullName>metodo.</xref:System.Int32.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_10_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_10_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_10_1.cpp)]"
  syntax:
    content: public static void Write (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "Valore da scrivere."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.Write(System.Int64)
  id: Write(System.Int64)
  parent: System.Console
  langs:
  - csharp
  name: Write(Int64)
  nameWithType: Console.Write(Int64)
  fullName: System.Console.Write(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive nel flusso di output standard la rappresentazione testo del valore intero con segno a 64 bit specificato."
  remarks: "La rappresentazione testo del `value` viene generata chiamando il <xref:System.Int64.ToString%2A?displayProperty=fullName>metodo.</xref:System.Int64.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_0_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_0_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_0_1.cpp)]"
  syntax:
    content: public static void Write (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Valore da scrivere."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.Write(System.Object)
  id: Write(System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(Object)
  nameWithType: Console.Write(Object)
  fullName: System.Console.Write(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive nel flusso di output standard la rappresentazione testo dell&quot;oggetto specificato."
  remarks: "Se `value` Ã¨ `null`, viene scritto alcun dato e viene generata alcuna eccezione. In caso contrario, il `ToString` metodo `value` viene chiamato per generare la rappresentazione di stringa e la stringa risultante viene scritto nel flusso di output standard."
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_3_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_3_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_3_1.cpp)]"
  syntax:
    content: public static void Write (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Il valore da scrivere, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.Write(System.Single)
  id: Write(System.Single)
  parent: System.Console
  langs:
  - csharp
  name: Write(Single)
  nameWithType: Console.Write(Single)
  fullName: System.Console.Write(Single)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive nel flusso di output standard la rappresentazione testo del valore a virgola mobile e precisione singola specificato."
  remarks: "La rappresentazione testo del `value` viene generata chiamando il <xref:System.Single.ToString%2A?displayProperty=fullName>metodo.</xref:System.Single.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_1_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_1_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_1_1.cpp)]"
  syntax:
    content: public static void Write (float value);
    parameters:
    - id: value
      type: System.Single
      description: "Valore da scrivere."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.Write(System.String)
  id: Write(System.String)
  parent: System.Console
  langs:
  - csharp
  name: Write(String)
  nameWithType: Console.Write(String)
  fullName: System.Console.Write(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive nel flusso di output standard il valore di stringa specificata."
  remarks: "Se il valore Ã¨ `null`, viene scritto alcun dato per il flusso di output standard."
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_5_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_5_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_5_1.cpp)]"
  syntax:
    content: public static void Write (string value);
    parameters:
    - id: value
      type: System.String
      description: "Valore da scrivere."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.Write(System.UInt32)
  id: Write(System.UInt32)
  parent: System.Console
  langs:
  - csharp
  name: Write(UInt32)
  nameWithType: Console.Write(UInt32)
  fullName: System.Console.Write(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive nel flusso di output standard la rappresentazione testo del valore intero senza segno a 32 bit specificato."
  remarks: "La rappresentazione testo del `value` viene generata chiamando il <xref:System.UInt32.ToString%2A?displayProperty=fullName>metodo.</xref:System.UInt32.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_7_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_7_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_7_1.cpp)]"
  syntax:
    content: public static void Write (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: "Valore da scrivere."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.Write(System.UInt64)
  id: Write(System.UInt64)
  parent: System.Console
  langs:
  - csharp
  name: Write(UInt64)
  nameWithType: Console.Write(UInt64)
  fullName: System.Console.Write(UInt64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive nel flusso di output standard la rappresentazione testo del valore intero senza segno a 64 bit specificato."
  remarks: "La rappresentazione testo del `value` viene generata chiamando il <xref:System.UInt64.ToString%2A?displayProperty=fullName>metodo.</xref:System.UInt64.ToString%2A?displayProperty=fullName>"
  example:
  - "The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_4_1.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_4_1.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_4_1.cpp)]"
  syntax:
    content: public static void Write (ulong value);
    parameters:
    - id: value
      type: System.UInt64
      description: "Valore da scrivere."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object)
  id: Write(System.String,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object)
  nameWithType: Console.Write(String,Object)
  fullName: System.Console.Write(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo dell&quot;oggetto specificato nel flusso di output standard usando le informazioni di formato specificato."
  remarks: "Questo metodo Usa il [funzionalitÃ  di formattazione composta](~/add/includes/ajax-current-ext-md.md) di .NET Framework per convertire il valore di un oggetto nella relativa rappresentazione di testo e incorporare tale rappresentazione in una stringa. La stringa risultante viene scritto nel flusso di output.       Il `format` parametro Ã¨ costituita da zero o piÃ¹ sequenze di testo combinato con zero o piÃ¹ segnaposto indicizzati, denominati elementi di formato, che corrispondono a un oggetto nell&quot;elenco di parametri di questo metodo. Il processo di formattazione sostituisce ogni elemento di formato con la rappresentazione testo del valore dell&quot;oggetto corrispondente.       La sintassi di un elemento di formato Ã¨ `{` *indice*[`,`*allineamento*] [`:`*formatString*]`}`, che consente di specificare un indice obbligatorio, facoltativa lunghezza e l&quot;allineamento del testo formattato e una stringa facoltativa di caratteri identificatori di formato che controllano come il valore dell&quot;oggetto corrispondente dell&quot;oggetto viene formattata.       .NET Framework fornisce supporto di formattazione completo, come descritto in maggior dettaglio negli argomenti seguenti di formattazione.      -Per ulteriori informazioni sulla funzionalitÃ  di formattazione composita supportata da metodi quali <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>e alcuni overload del <xref:System.Console.WriteLine%2A>, vedere [formattazione composita](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Per ulteriori informazioni sugli identificatori di formato numerico, vedere [stringhe di formato numerico Standard](~/add/includes/ajax-current-ext-md.md) e [stringhe di formato numerico personalizzato](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sulla data e ora identificatori di formato, vedere [stringhe di formato di ora e data Standard](~/add/includes/ajax-current-ext-md.md) e [stringhe di formato di ora e Data personalizzata](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sugli identificatori di formato di enumerazione, vedere [stringhe di formato di enumerazione](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sulla formattazione, vedere [formattazione dei tipi di](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.write-s_2_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.write-s_2_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.write-s_2_1.vb)]  \n  \n The following example illustrates the use of the Write method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_2_2.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_2_2.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_2_2.cpp)]"
  syntax:
    content: public static void Write (string format, object arg0);
    parameters:
    - id: format
      type: System.String
      description: "Una stringa in formato composito (vedere la sezione Osservazioni)."
    - id: arg0
      type: System.Object
      description: "Oggetto da scrivere usando `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Specifica del formato in <code> format </code> non Ã¨ valido."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object[])
  id: Write(System.String,System.Object[])
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object[])
  nameWithType: Console.Write(String,Object[])
  fullName: System.Console.Write(String,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo della matrice specificata di oggetti nel flusso di output standard usando le informazioni di formato specificato."
  remarks: "Questo metodo Usa il [funzionalitÃ  di formattazione composta](~/add/includes/ajax-current-ext-md.md) di .NET Framework per convertire il valore di un oggetto nella relativa rappresentazione di testo e incorporare tale rappresentazione in una stringa. La stringa risultante viene scritto nel flusso di output.       Il `format` parametro Ã¨ costituita da zero o piÃ¹ sequenze di testo combinato con zero o piÃ¹ segnaposto indicizzati, denominati elementi di formato, che corrispondono a un oggetto nell&quot;elenco di parametri di questo metodo. Il processo di formattazione sostituisce ogni elemento di formato con la rappresentazione testo del valore dell&quot;oggetto corrispondente.       La sintassi di un elemento di formato Ã¨ `{` *indice*[`,`*allineamento*] [`:`*formatString*]`}`, che consente di specificare un indice obbligatorio, facoltativa lunghezza e l&quot;allineamento del testo formattato e una stringa facoltativa di caratteri identificatori di formato che controllano come il valore dell&quot;oggetto corrispondente dell&quot;oggetto viene formattata.       .NET Framework fornisce supporto di formattazione completo, come descritto in maggior dettaglio negli argomenti seguenti di formattazione.      -Per ulteriori informazioni sulla funzionalitÃ  di formattazione composita supportata da metodi quali <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>e alcuni overload del <xref:System.Console.WriteLine%2A>, vedere [formattazione composita](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Per ulteriori informazioni sugli identificatori di formato numerico, vedere [stringhe di formato numerico Standard](~/add/includes/ajax-current-ext-md.md) e [stringhe di formato numerico personalizzato](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sulla data e ora identificatori di formato, vedere [stringhe di formato di ora e data Standard](~/add/includes/ajax-current-ext-md.md) e [stringhe di formato di ora e Data personalizzata](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sugli identificatori di formato di enumerazione, vedere [stringhe di formato di enumerazione](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sulla formattazione, vedere [formattazione dei tipi di](~/add/includes/ajax-current-ext-md.md).       Il `arg` parametro Ã¨ una matrice di parametri. Gli argomenti possono essere passati al metodo come una matrice o come elenco di cinque o piÃ¹ elementi. Negli esempi vengono illustrati entrambi i formati di chiamata al metodo."
  example:
  - "The following example defines a `Person` class with a number of properties that provide information about a person. Its `GetDescription` method returns an array that contains all of the property values except one. The example then uses the array returned by the  `GetDescription` method  to display the values of the Person object.  \n  \n [!code-cs[System.Console.Write#1](~/add/codesnippet/csharp/m-system.console.write-s_13_1.cs)]\n [!code-vb[System.Console.Write#1](~/add/codesnippet/visualbasic/m-system.console.write-s_13_1.vb)]  \n  \n Note that the example calls the Write method rather than the [WriteLine(String,âObject\\[\\])](assetId:///M:System.Console.WriteLine(System.String,System.Object[])?qualifyHint=False&autoUpgrade=False) method because it attempts to display the value of the `Person.Remarks` property on the same line. To do this, it examines the value of the <xref:System.Console.CursorLeft%2A> and <xref:System.Console.WindowWidth%2A> properties to determine whether there is enough space for the remark to fit.  If there is, it displays the line. If not, it writes a line, indents three spaces, and displays the remark.  \n  \n The following example is identical to the first, except that it supplies a five-item list as the `arg` argument instead of a parameter array.  \n  \n [!code-vb[System.Console.Write#2](~/add/codesnippet/visualbasic/m-system.console.write-s_13_2.vb)]\n [!code-cs[System.Console.Write#2](~/add/codesnippet/csharp/m-system.console.write-s_13_2.cs)]"
  syntax:
    content: public static void Write (string format, object[] arg);
    parameters:
    - id: format
      type: System.String
      description: "Una stringa in formato composito (vedere la sezione Osservazioni)."
    - id: arg
      type: System.Object[]
      description: "Una matrice di oggetti da scrivere usando `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>or <code>arg</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Specifica del formato in <code> format </code> non Ã¨ valido."
  platform:
  - net462
- uid: System.Console.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: Write(Char[],Int32,Int32)
  nameWithType: Console.Write(Char[],Int32,Int32)
  fullName: System.Console.Write(Char[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive nel flusso di output standard la sottomatrice di caratteri Unicode specificata."
  remarks: "Questo metodo scrive `count` caratteri a partire dalla posizione `index` di `buffer` nel flusso di output standard."
  syntax:
    content: public static void Write (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Matrice di caratteri Unicode."
    - id: index
      type: System.Int32
      description: "Posizione iniziale in `buffer`."
    - id: count
      type: System.Int32
      description: "Il numero di caratteri da scrivere."
  overload: System.Console.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>o <code>count</code> Ã¨ minore di zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>index</code>Oltre a <code>count</code> specificare una posizione non all&quot;interno <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object,Object)
  nameWithType: Console.Write(String,Object,Object)
  fullName: System.Console.Write(String,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo degli oggetti specificati nel flusso di output standard usando le informazioni di formato specificato."
  remarks: "Questo metodo Usa il [funzionalitÃ  di formattazione composta](~/add/includes/ajax-current-ext-md.md) di .NET Framework per convertire il valore di un oggetto nella relativa rappresentazione di testo e incorporare tale rappresentazione in una stringa. La stringa risultante viene scritto nel flusso di output.       Il `format` parametro Ã¨ costituita da zero o piÃ¹ sequenze di testo combinato con zero o piÃ¹ segnaposto indicizzati, denominati elementi di formato, che corrispondono a un oggetto nell&quot;elenco di parametri di questo metodo. Il processo di formattazione sostituisce ogni elemento di formato con la rappresentazione testo del valore dell&quot;oggetto corrispondente.       La sintassi di un elemento di formato Ã¨ `{` *indice*[`,`*allineamento*] [`:`*formatString*]`}`, che consente di specificare un indice obbligatorio, facoltativa lunghezza e l&quot;allineamento del testo formattato e una stringa facoltativa di caratteri identificatori di formato che controllano come il valore dell&quot;oggetto corrispondente dell&quot;oggetto viene formattata.       .NET Framework fornisce supporto di formattazione completo, come descritto in maggior dettaglio negli argomenti seguenti di formattazione.      -Per ulteriori informazioni sulla funzionalitÃ  di formattazione composita supportata da metodi quali <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>e alcuni overload del <xref:System.Console.WriteLine%2A>, vedere [formattazione composita](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Per ulteriori informazioni sugli identificatori di formato numerico, vedere [stringhe di formato numerico Standard](~/add/includes/ajax-current-ext-md.md) e [stringhe di formato numerico personalizzato](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sulla data e ora identificatori di formato, vedere [stringhe di formato di ora e data Standard](~/add/includes/ajax-current-ext-md.md) e [stringhe di formato di ora e Data personalizzata](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sugli identificatori di formato di enumerazione, vedere [stringhe di formato di enumerazione](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sulla formattazione, vedere [formattazione dei tipi di](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.write-s_14_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.write-s_14_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.write-s_14_1.vb)]  \n  \n The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_14_2.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_14_2.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_14_2.cpp)]"
  syntax:
    content: public static void Write (string format, object arg0, object arg1);
    parameters:
    - id: format
      type: System.String
      description: "Una stringa in formato composito (vedere la sezione Osservazioni)."
    - id: arg0
      type: System.Object
      description: "Il primo oggetto da scrivere usando `format`."
    - id: arg1
      type: System.Object
      description: "Secondo oggetto da scrivere usando `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Specifica del formato in <code> format </code> non Ã¨ valido."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object,Object,Object)
  nameWithType: Console.Write(String,Object,Object,Object)
  fullName: System.Console.Write(String,Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo degli oggetti specificati nel flusso di output standard usando le informazioni di formato specificato."
  remarks: "Questo metodo Usa il [funzionalitÃ  di formattazione composta](~/add/includes/ajax-current-ext-md.md) di .NET Framework per convertire il valore di un oggetto nella relativa rappresentazione di testo e incorporare tale rappresentazione in una stringa. La stringa risultante viene scritto nel flusso di output.       Il `format` parametro Ã¨ costituita da zero o piÃ¹ sequenze di testo combinato con zero o piÃ¹ segnaposto indicizzati, denominati elementi di formato, che corrispondono a un oggetto nell&quot;elenco di parametri di questo metodo. Il processo di formattazione sostituisce ogni elemento di formato con la rappresentazione testo del valore dell&quot;oggetto corrispondente.       La sintassi di un elemento di formato Ã¨ `{` *indice*[`,`*allineamento*] [`:`*formatString*]`}`, che consente di specificare un indice obbligatorio, facoltativa lunghezza e l&quot;allineamento del testo formattato e una stringa facoltativa di caratteri identificatori di formato che controllano come il valore dell&quot;oggetto corrispondente dell&quot;oggetto viene formattata.       .NET Framework fornisce supporto di formattazione completo, come descritto in maggior dettaglio negli argomenti seguenti di formattazione.      -Per ulteriori informazioni sulla funzionalitÃ  di formattazione composita supportata da metodi quali <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>e alcuni overload del <xref:System.Console.WriteLine%2A>, vedere [formattazione composita](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Per ulteriori informazioni sugli identificatori di formato numerico, vedere [stringhe di formato numerico Standard](~/add/includes/ajax-current-ext-md.md) e [stringhe di formato numerico personalizzato](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sulla data e ora identificatori di formato, vedere [stringhe di formato di ora e data Standard](~/add/includes/ajax-current-ext-md.md) e [stringhe di formato di ora e Data personalizzata](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sugli identificatori di formato di enumerazione, vedere [stringhe di formato di enumerazione](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sulla formattazione, vedere [formattazione dei tipi di](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses the `WriteLine` method to demonstrate the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.write-s_11_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.write-s_11_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.write-s_11_1.vb)]  \n  \n The following example illustrates the use of the `Write` method.  \n  \n [!code-vb[System.Console-REFORMAT#1](~/add/codesnippet/visualbasic/m-system.console.write-s_11_2.vb)]\n [!code-cs[System.Console-REFORMAT#1](~/add/codesnippet/csharp/m-system.console.write-s_11_2.cs)]\n [!code-cpp[System.Console-REFORMAT#1](~/add/codesnippet/cpp/m-system.console.write-s_11_2.cpp)]"
  syntax:
    content: public static void Write (string format, object arg0, object arg1, object arg2);
    parameters:
    - id: format
      type: System.String
      description: "Una stringa in formato composito (vedere la sezione Osservazioni)."
    - id: arg0
      type: System.Object
      description: "Il primo oggetto da scrivere usando `format`."
    - id: arg1
      type: System.Object
      description: "Secondo oggetto da scrivere usando `format`."
    - id: arg2
      type: System.Object
      description: "Terzo oggetto da scrivere usando `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Specifica del formato in <code> format </code> non Ã¨ valido."
  platform:
  - net462
- uid: System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)
  id: Write(System.String,System.Object,System.Object,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: Write(String,Object,Object,Object,Object)
  nameWithType: Console.Write(String,Object,Object,Object,Object)
  fullName: System.Console.Write(String,Object,Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo dell&quot;elenco di parametri a lunghezza variabile e gli oggetti specificati nel flusso di output standard usando le informazioni di formato specificato."
  remarks: "> [!NOTE]\n>  This API is not CLS-compliant. The CLS-compliant alternative is [Console.Write(String,âObject\\[\\])](assetId:///M:System.Console.Write(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False). The C# and Visual Basic compilers automatically resolve a call to this method as a call to [Console.Write(String,âObject\\[\\])](assetId:///M:System.Console.Write(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False).  \n  \n This method uses the [composite formatting feature](~/add/includes/ajax-current-ext-md.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string. The resulting string is written to the output stream.  \n  \n The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method. The formatting process replaces each format item with the text representation of the value of the corresponding object.  \n  \n The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.  \n  \n-   For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](../Topic/Composite%20Formatting.md).  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/add/includes/ajax-current-ext-md.md) and [Custom Numeric Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md) and [Custom Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about enumeration format specifiers, see [Enumeration Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example illustrates the use of variable parameters with the Write method. The method is called with a composite format string and five format items.  \n  \n [!code-cpp[System.Console.Write#3](~/add/codesnippet/cpp/04cf3884-a7cc-4915-bdb2-_1.cpp)]"
  syntax:
    content: public static void Write (string format, object arg0, object arg1, object arg2, object arg3);
    parameters:
    - id: format
      type: System.String
      description: "Una stringa in formato composito (vedere la sezione Osservazioni)."
    - id: arg0
      type: System.Object
      description: "Il primo oggetto da scrivere usando `format`."
    - id: arg1
      type: System.Object
      description: "Secondo oggetto da scrivere usando `format`."
    - id: arg2
      type: System.Object
      description: "Terzo oggetto da scrivere usando `format`."
    - id: arg3
      type: System.Object
      description: "Quarto oggetto da scrivere usando `format`."
  overload: System.Console.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Specifica del formato in <code> format </code> non Ã¨ valido."
  platform:
  - net462
- uid: System.Console.WriteLine
  id: WriteLine
  parent: System.Console
  langs:
  - csharp
  name: WriteLine()
  nameWithType: Console.WriteLine()
  fullName: System.Console.WriteLine()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive nel flusso di output standard il terminatore di riga corrente."
  remarks: "Il terminatore di riga predefinito Ã¨ una stringa il cui valore Ã¨ un ritorno a capo seguito da un avanzamento riga (&quot;\\r&quot; in c# o `vbCrLf` in Visual Basic). Ã possibile modificare il terminatore di riga impostando il <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName>proprietÃ  del <xref:System.Console.Out%2A>proprietÃ  in un&quot;altra stringa.</xref:System.Console.Out%2A> </xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> Nell&quot;esempio viene illustrato questo concetto."
  example:
  - "The example changes the line terminator from its default value of \"\\r\\n\" or `vbCrLf` to \"\\r\\n\\r\\n\" or `vbCrLf` + `vbCrLf`. It then calls the WriteLine and <xref:System.Console.WriteLine%28System.String%29> methods to display output to the console.  \n  \n [!code-cpp[System.Console.WriteLine#2](~/add/codesnippet/cpp/m-system.console.writeline_1.cpp)]\n [!code-cs[System.Console.WriteLine#2](~/add/codesnippet/csharp/m-system.console.writeline_1.cs)]\n [!code-vb[System.Console.WriteLine#2](~/add/codesnippet/visualbasic/m-system.console.writeline_1.vb)]"
  syntax:
    content: public static void WriteLine ();
    parameters: []
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Boolean)
  id: WriteLine(System.Boolean)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Boolean)
  nameWithType: Console.WriteLine(Boolean)
  fullName: System.Console.WriteLine(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo del valore Boolean specificato, seguita dal terminatore di riga corrente nel flusso di output standard."
  remarks: "La rappresentazione testo del `value` viene generata chiamando il <xref:System.Boolean.ToString%2A?displayProperty=fullName>metodo.</xref:System.Boolean.ToString%2A?displayProperty=fullName>       Per ulteriori informazioni sul terminatore di riga, vedere la sezione Note del <xref:System.Console.WriteLine%2A>metodo che non accetta parametri.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example generates ten random integers and uses the WriteLine method to indicate whether they are even.  \n  \n [!code-cpp[System.Console.WriteLine#4](~/add/codesnippet/cpp/m-system.console.writeli_5_1.cpp)]\n [!code-cs[System.Console.WriteLine#4](~/add/codesnippet/csharp/m-system.console.writeli_5_1.cs)]\n [!code-vb[System.Console.WriteLine#4](~/add/codesnippet/visualbasic/m-system.console.writeli_5_1.vb)]"
  syntax:
    content: public static void WriteLine (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "Valore da scrivere."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Char)
  id: WriteLine(System.Char)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Char)
  nameWithType: Console.WriteLine(Char)
  fullName: System.Console.WriteLine(Char)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive nel carattere Unicode specificato, seguito dal terminatore di riga corrente, il flusso di output standard il valore."
  remarks: "Per ulteriori informazioni sul terminatore di riga, vedere la sezione Note del <xref:System.Console.WriteLine%2A>metodo che non accetta parametri.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the WriteLine method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_13_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_13_1.vb)]"
  syntax:
    content: public static void WriteLine (char value);
    parameters:
    - id: value
      type: System.Char
      description: "Valore da scrivere."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Char[])
  id: WriteLine(System.Char[])
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Char[])
  nameWithType: Console.WriteLine(Char[])
  fullName: System.Console.WriteLine(Char[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la matrice specificata di caratteri Unicode, seguita dal terminatore di riga corrente nel flusso di output standard."
  remarks: "Per ulteriori informazioni sul terminatore di riga, vedere la sezione Note del <xref:System.Console.WriteLine%2A>metodo che non accetta parametri.</xref:System.Console.WriteLine%2A>"
  syntax:
    content: public static void WriteLine (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Matrice di caratteri Unicode."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Decimal)
  id: WriteLine(System.Decimal)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Decimal)
  nameWithType: Console.WriteLine(Decimal)
  fullName: System.Console.WriteLine(Decimal)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo dell&quot;oggetto specificato <xref:System.Decimal>valore, seguita dal terminatore di riga corrente nel flusso di output standard.</xref:System.Decimal>"
  remarks: "La rappresentazione testo del `value` viene generata chiamando il <xref:System.Decimal.ToString%2A?displayProperty=fullName>metodo.</xref:System.Decimal.ToString%2A?displayProperty=fullName>       Per ulteriori informazioni sul terminatore di riga, vedere la sezione Note del <xref:System.Console.WriteLine%2A>metodo che non accetta parametri.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_3_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_3_1.vb)]"
  syntax:
    content: public static void WriteLine (decimal value);
    parameters:
    - id: value
      type: System.Decimal
      description: "Valore da scrivere."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Double)
  id: WriteLine(System.Double)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Double)
  nameWithType: Console.WriteLine(Double)
  fullName: System.Console.WriteLine(Double)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo del valore a virgola mobile a precisione doppia specificato, seguita dal terminatore di riga corrente nel flusso di output standard."
  remarks: "La rappresentazione testo del `value` viene generata chiamando il <xref:System.Double.ToString%2A?displayProperty=fullName>metodo.</xref:System.Double.ToString%2A?displayProperty=fullName>       Per ulteriori informazioni sul terminatore di riga, vedere la sezione Note del <xref:System.Console.WriteLine%2A>metodo che non accetta parametri.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_2_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_2_1.vb)]"
  syntax:
    content: public static void WriteLine (double value);
    parameters:
    - id: value
      type: System.Double
      description: "Valore da scrivere."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Int32)
  id: WriteLine(System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Int32)
  nameWithType: Console.WriteLine(Int32)
  fullName: System.Console.WriteLine(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo del valore intero con segno a 32 bit specificato, seguita dal terminatore di riga corrente nel flusso di output standard."
  remarks: "La rappresentazione testo del `value` viene generata chiamando il <xref:System.Int32.ToString%2A?displayProperty=fullName>metodo.</xref:System.Int32.ToString%2A?displayProperty=fullName>       Per ulteriori informazioni sul terminatore di riga, vedere la sezione Note del <xref:System.Console.WriteLine%2A>metodo che non accetta parametri.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_1_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_1_1.vb)]"
  syntax:
    content: public static void WriteLine (int value);
    parameters:
    - id: value
      type: System.Int32
      description: "Valore da scrivere."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Int64)
  id: WriteLine(System.Int64)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Int64)
  nameWithType: Console.WriteLine(Int64)
  fullName: System.Console.WriteLine(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo del valore intero con segno a 64 bit specificato, seguita dal terminatore di riga corrente nel flusso di output standard."
  remarks: "La rappresentazione testo del `value` viene generata chiamando il <xref:System.Int64.ToString%2A?displayProperty=fullName>metodo.</xref:System.Int64.ToString%2A?displayProperty=fullName>       Per ulteriori informazioni sul terminatore di riga, vedere la sezione Note del <xref:System.Console.WriteLine%2A>metodo che non accetta parametri.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_10_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_10_1.vb)]"
  syntax:
    content: public static void WriteLine (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Valore da scrivere."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Object)
  id: WriteLine(System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Object)
  nameWithType: Console.WriteLine(Object)
  fullName: System.Console.WriteLine(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo dell&quot;oggetto specificato, seguita dal terminatore di riga corrente nel flusso di output standard."
  remarks: "Se `value` Ã¨ `null`, verrÃ  scritto solo il terminatore di riga. In caso contrario, il `ToString` metodo `value` viene chiamato per generare la rappresentazione di stringa e la stringa risultante viene scritto nel flusso di output standard.       Per ulteriori informazioni sul terminatore di riga, vedere la sezione Note del <xref:System.Console.WriteLine%2A>metodo che non accetta parametri.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example uses the WriteLine method to display each value in an object array to the console.  \n  \n [!code-cpp[System.Console.WriteLine#3](~/add/codesnippet/cpp/m-system.console.writeli_6_1.cpp)]\n [!code-cpp[System.Console.WriteLine#3](~/add/codesnippet/cpp/m-system.console.writeli_6_1.cpp)]\n [!code-cs[System.Console.WriteLine#3](~/add/codesnippet/csharp/m-system.console.writeli_6_1.cs)]\n [!code-vb[System.Console.WriteLine#3](~/add/codesnippet/visualbasic/m-system.console.writeli_6_1.vb)]"
  syntax:
    content: public static void WriteLine (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Valore da scrivere."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Single)
  id: WriteLine(System.Single)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Single)
  nameWithType: Console.WriteLine(Single)
  fullName: System.Console.WriteLine(Single)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo del valore a virgola mobile e precisione singola specificato, seguita dal terminatore di riga corrente nel flusso di output standard."
  remarks: "La rappresentazione testo del `value` viene generata chiamando il <xref:System.Single.ToString%2A?displayProperty=fullName>metodo.</xref:System.Single.ToString%2A?displayProperty=fullName>       Per ulteriori informazioni sul terminatore di riga, vedere la sezione Note del <xref:System.Console.WriteLine%2A>metodo che non accetta parametri.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_4_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_4_1.vb)]"
  syntax:
    content: public static void WriteLine (float value);
    parameters:
    - id: value
      type: System.Single
      description: "Valore da scrivere."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: Console.WriteLine(String)
  fullName: System.Console.WriteLine(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive il valore di stringa specificata, seguito dal terminatore di riga corrente nel flusso di output standard."
  remarks: "Se il valore Ã¨ `null`, viene scritto solo il terminatore di riga nel flusso di output standard.       Per ulteriori informazioni sul terminatore di riga, vedere la sezione Note del <xref:System.Console.WriteLine>metodo.</xref:System.Console.WriteLine>"
  example:
  - "The example changes the line terminator from its default value of \"\\r\\n\" or `vbCrLf` to \"\\r\\n\\r\\n\" or `vbCrLf` + `vbCrLf`. It then calls the <xref:System.Console.WriteLine> and WriteLine methods to display output to the console.  \n  \n [!code-cpp[System.Console.WriteLine#2](~/add/codesnippet/cpp/m-system.console.writeli_0_1.cpp)]\n [!code-cs[System.Console.WriteLine#2](~/add/codesnippet/csharp/m-system.console.writeli_0_1.cs)]\n [!code-vb[System.Console.WriteLine#2](~/add/codesnippet/visualbasic/m-system.console.writeli_0_1.vb)]"
  syntax:
    content: public static void WriteLine (string value);
    parameters:
    - id: value
      type: System.String
      description: "Valore da scrivere."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.WriteLine(System.UInt32)
  id: WriteLine(System.UInt32)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(UInt32)
  nameWithType: Console.WriteLine(UInt32)
  fullName: System.Console.WriteLine(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo del valore intero senza segno a 32 bit specificato, seguita dal terminatore di riga corrente nel flusso di output standard."
  remarks: "La rappresentazione testo del `value` viene generata chiamando il <xref:System.UInt32.ToString%2A?displayProperty=fullName>metodo.</xref:System.UInt32.ToString%2A?displayProperty=fullName>       Per ulteriori informazioni sul terminatore di riga, vedere la sezione Note del <xref:System.Console.WriteLine%2A>metodo che non accetta parametri.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_8_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_8_1.vb)]"
  syntax:
    content: public static void WriteLine (uint value);
    parameters:
    - id: value
      type: System.UInt32
      description: "Valore da scrivere."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.WriteLine(System.UInt64)
  id: WriteLine(System.UInt64)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(UInt64)
  nameWithType: Console.WriteLine(UInt64)
  fullName: System.Console.WriteLine(UInt64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo del valore intero senza segno a 64 bit specificato, seguita dal terminatore di riga corrente nel flusso di output standard."
  remarks: "La rappresentazione testo del `value` viene generata chiamando il <xref:System.UInt64.ToString%2A?displayProperty=fullName>metodo.</xref:System.UInt64.ToString%2A?displayProperty=fullName>       Per ulteriori informazioni sul terminatore di riga, vedere la sezione Note del <xref:System.Console.WriteLine%2A>metodo che non accetta parametri.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_12_1.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_12_1.vb)]"
  syntax:
    content: public static void WriteLine (ulong value);
    parameters:
    - id: value
      type: System.UInt64
      description: "Valore da scrivere."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object)
  id: WriteLine(System.String,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object)
  nameWithType: Console.WriteLine(String,Object)
  fullName: System.Console.WriteLine(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo dell&quot;oggetto specificato, seguita dal terminatore di riga corrente nel flusso di output standard usando le informazioni di formato specificato."
  remarks: "Questo metodo Usa il [funzionalitÃ  di formattazione composta](~/add/includes/ajax-current-ext-md.md) di .NET Framework per convertire il valore di un oggetto nella relativa rappresentazione di testo e incorporare tale rappresentazione in una stringa. La stringa risultante viene scritto nel flusso di output.       Il `format` parametro Ã¨ costituita da zero o piÃ¹ sequenze di testo combinato con zero o piÃ¹ segnaposto indicizzati, denominati elementi di formato, che corrispondono a un oggetto nell&quot;elenco di parametri di questo metodo. Il processo di formattazione sostituisce ogni elemento di formato con la rappresentazione testo del valore dell&quot;oggetto corrispondente.       La sintassi di un elemento di formato Ã¨ `{` *indice*[`,`*allineamento*] [`:`*formatString*]`}`, che consente di specificare un indice obbligatorio, facoltativa lunghezza e l&quot;allineamento del testo formattato e una stringa facoltativa di caratteri identificatori di formato che controllano come il valore dell&quot;oggetto corrispondente dell&quot;oggetto viene formattata.       .NET Framework fornisce supporto di formattazione completo, come descritto in maggior dettaglio negli argomenti seguenti di formattazione.      -Per ulteriori informazioni sulla funzionalitÃ  di formattazione composita supportata da metodi quali <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>e alcuni overload del <xref:System.Console.WriteLine%2A>, vedere [formattazione composita](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Per ulteriori informazioni sugli identificatori di formato numerico, vedere [stringhe di formato numerico Standard](~/add/includes/ajax-current-ext-md.md) e [stringhe di formato numerico personalizzato](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sulla data e ora identificatori di formato, vedere [stringhe di formato di ora e data Standard](~/add/includes/ajax-current-ext-md.md) e [stringhe di formato di ora e Data personalizzata](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sugli identificatori di formato di enumerazione, vedere [stringhe di formato di enumerazione](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sulla formattazione, vedere [formattazione dei tipi di](~/add/includes/ajax-current-ext-md.md).       Per ulteriori informazioni sul terminatore di riga, vedere la sezione Note del <xref:System.Console.WriteLine%2A>metodo che non accetta parametri.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example calls the WriteLine method to display five randomly generated <xref:System.Boolean> values.  \n  \n [!code-vb[System.Console.WriteLine#6](~/add/codesnippet/visualbasic/m-system.console.writeli_9_1.vb)]\n [!code-cs[System.Console.WriteLine#6](~/add/codesnippet/csharp/m-system.console.writeli_9_1.cs)]  \n  \n The following example calls the WriteLine method to display the current date.   Note that the format item in the `format` argument uses the \"D\" [standard date and time format string](../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md) to display the date in the long date format of the current culture.  \n  \n [!code-vb[System.Console.WriteLine#7](~/add/codesnippet/visualbasic/m-system.console.writeli_9_2.vb)]\n [!code-cs[System.Console.WriteLine#7](~/add/codesnippet/csharp/m-system.console.writeli_9_2.cs)]"
  syntax:
    content: public static void WriteLine (string format, object arg0);
    parameters:
    - id: format
      type: System.String
      description: "Una stringa in formato composito (vedere la sezione Osservazioni)."
    - id: arg0
      type: System.Object
      description: "Oggetto da scrivere usando `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Specifica del formato in <code> format </code> non Ã¨ valido."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object[])
  id: WriteLine(System.String,System.Object[])
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object[])
  nameWithType: Console.WriteLine(String,Object[])
  fullName: System.Console.WriteLine(String,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo della matrice specificata di oggetti, seguita dal terminatore di riga corrente nel flusso di output standard usando le informazioni di formato specificato."
  remarks: "Questo metodo Usa il [funzionalitÃ  di formattazione composta](~/add/includes/ajax-current-ext-md.md) di .NET Framework per convertire il valore di un oggetto nella relativa rappresentazione di testo e incorporare tale rappresentazione in una stringa. La stringa risultante viene scritto nel flusso di output.       Il `format` parametro Ã¨ costituita da zero o piÃ¹ sequenze di testo combinato con zero o piÃ¹ segnaposto indicizzati, denominati elementi di formato, che corrispondono a un oggetto nell&quot;elenco di parametri di questo metodo. Il processo di formattazione sostituisce ogni elemento di formato con la rappresentazione testo del valore dell&quot;oggetto corrispondente.       La sintassi di un elemento di formato Ã¨ `{` *indice*[`,`*allineamento*] [`:`*formatString*]`}`, che consente di specificare un indice obbligatorio, facoltativa lunghezza e l&quot;allineamento del testo formattato e una stringa facoltativa di caratteri identificatori di formato che controllano come il valore dell&quot;oggetto corrispondente dell&quot;oggetto viene formattata.       .NET Framework fornisce supporto di formattazione completo, come descritto in maggior dettaglio negli argomenti seguenti di formattazione.      -Per ulteriori informazioni sulla funzionalitÃ  di formattazione composita supportata da metodi quali <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>e alcuni overload del <xref:System.Console.WriteLine%2A>, vedere [formattazione composita](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Per ulteriori informazioni sugli identificatori di formato numerico, vedere [stringhe di formato numerico Standard](~/add/includes/ajax-current-ext-md.md) e [stringhe di formato numerico personalizzato](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sulla data e ora identificatori di formato, vedere [stringhe di formato di ora e data Standard](~/add/includes/ajax-current-ext-md.md) e [stringhe di formato di ora e Data personalizzata](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sugli identificatori di formato di enumerazione, vedere [stringhe di formato di enumerazione](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sulla formattazione, vedere [formattazione dei tipi di](~/add/includes/ajax-current-ext-md.md).       Per ulteriori informazioni sul terminatore di riga, vedere la sezione Note del <xref:System.Console.WriteLine%2A>metodo che non accetta parametri.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.writeli_11_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.writeli_11_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.writeli_11_1.vb)]  \n  \n The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_11_2.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_11_2.vb)]"
  syntax:
    content: public static void WriteLine (string format, object[] arg);
    parameters:
    - id: format
      type: System.String
      description: "Una stringa in formato composito (vedere la sezione Osservazioni)."
    - id: arg
      type: System.Object[]
      description: "Una matrice di oggetti da scrivere usando `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>or <code>arg</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Specifica del formato in <code> format </code> non Ã¨ valido."
  platform:
  - net462
- uid: System.Console.WriteLine(System.Char[],System.Int32,System.Int32)
  id: WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(Char[],Int32,Int32)
  nameWithType: Console.WriteLine(Char[],Int32,Int32)
  fullName: System.Console.WriteLine(Char[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive una sottomatrice specificata di caratteri Unicode, seguita dal terminatore di riga corrente nel flusso di output standard."
  remarks: "Questo metodo scrive `count` caratteri a partire dalla posizione `index` di `buffer` nel flusso di output standard.       Per ulteriori informazioni sul terminatore di riga, vedere la sezione Note del <xref:System.Console.WriteLine%2A>metodo che non accetta parametri.</xref:System.Console.WriteLine%2A>"
  syntax:
    content: public static void WriteLine (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Matrice di caratteri Unicode."
    - id: index
      type: System.Int32
      description: "Posizione iniziale in `buffer`."
    - id: count
      type: System.Int32
      description: "Il numero di caratteri da scrivere."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>o <code>count</code> Ã¨ minore di zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>index</code>Oltre a <code>count</code> specificare una posizione non all&quot;interno <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo degli oggetti specificati, seguita dal terminatore di riga corrente nel flusso di output standard usando le informazioni di formato specificato."
  remarks: "Questo metodo Usa il [funzionalitÃ  di formattazione composta](~/add/includes/ajax-current-ext-md.md) di .NET Framework per convertire il valore di un oggetto nella relativa rappresentazione di testo e incorporare tale rappresentazione in una stringa. La stringa risultante viene scritto nel flusso di output.       Il `format` parametro Ã¨ costituita da zero o piÃ¹ sequenze di testo combinato con zero o piÃ¹ segnaposto indicizzati, denominati elementi di formato, che corrispondono a un oggetto nell&quot;elenco di parametri di questo metodo. Il processo di formattazione sostituisce ogni elemento di formato con la rappresentazione testo del valore dell&quot;oggetto corrispondente.       La sintassi di un elemento di formato Ã¨ `{` *indice*[`,`*allineamento*] [`:`*formatString*]`}`, che consente di specificare un indice obbligatorio, facoltativa lunghezza e l&quot;allineamento del testo formattato e una stringa facoltativa di caratteri identificatori di formato che controllano come il valore dell&quot;oggetto corrispondente dell&quot;oggetto viene formattata.       .NET Framework fornisce supporto di formattazione completo, come descritto in maggior dettaglio negli argomenti seguenti di formattazione.      -Per ulteriori informazioni sulla funzionalitÃ  di formattazione composita supportata da metodi quali <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>e alcuni overload del <xref:System.Console.WriteLine%2A>, vedere [formattazione composita](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Per ulteriori informazioni sugli identificatori di formato numerico, vedere [stringhe di formato numerico Standard](~/add/includes/ajax-current-ext-md.md) e [stringhe di formato numerico personalizzato](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sulla data e ora identificatori di formato, vedere [stringhe di formato di ora e data Standard](~/add/includes/ajax-current-ext-md.md) e [stringhe di formato di ora e Data personalizzata](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sugli identificatori di formato di enumerazione, vedere [stringhe di formato di enumerazione](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sulla formattazione, vedere [formattazione dei tipi di](~/add/includes/ajax-current-ext-md.md).       Per ulteriori informazioni sul terminatore di riga, vedere la sezione Note del <xref:System.Console.WriteLine%2A>metodo che non accetta parametri.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/m-system.console.writeli_7_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/m-system.console.writeli_7_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/m-system.console.writeli_7_1.vb)]  \n  \n The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/m-system.console.writeli_7_2.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/m-system.console.writeli_7_2.vb)]"
  syntax:
    content: public static void WriteLine (string format, object arg0, object arg1);
    parameters:
    - id: format
      type: System.String
      description: "Una stringa in formato composito (vedere la sezione Osservazioni)."
    - id: arg0
      type: System.Object
      description: "Il primo oggetto da scrivere usando `format`."
    - id: arg1
      type: System.Object
      description: "Secondo oggetto da scrivere usando `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Specifica del formato in <code> format </code> non Ã¨ valido."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo degli oggetti specificati, seguita dal terminatore di riga corrente nel flusso di output standard usando le informazioni di formato specificato."
  remarks: "Questo metodo Usa il [funzionalitÃ  di formattazione composta](~/add/includes/ajax-current-ext-md.md) di .NET Framework per convertire il valore di un oggetto nella relativa rappresentazione di testo e incorporare tale rappresentazione in una stringa. La stringa risultante viene scritto nel flusso di output.       Il `format` parametro Ã¨ costituita da zero o piÃ¹ sequenze di testo combinato con zero o piÃ¹ segnaposto indicizzati, denominati elementi di formato, che corrispondono a un oggetto nell&quot;elenco di parametri di questo metodo. Il processo di formattazione sostituisce ogni elemento di formato con la rappresentazione testo del valore dell&quot;oggetto corrispondente.       La sintassi di un elemento di formato Ã¨ `{` *indice*[`,`*allineamento*] [`:`*formatString*]`}`, che consente di specificare un indice obbligatorio, facoltativa lunghezza e l&quot;allineamento del testo formattato e una stringa facoltativa di caratteri identificatori di formato che controllano come il valore dell&quot;oggetto corrispondente dell&quot;oggetto viene formattata.       .NET Framework fornisce supporto di formattazione completo, come descritto in maggior dettaglio negli argomenti seguenti di formattazione.      -Per ulteriori informazioni sulla funzionalitÃ  di formattazione composita supportata da metodi quali <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>e alcuni overload del <xref:System.Console.WriteLine%2A>, vedere [formattazione composita](../Topic/Composite%20Formatting.md).</xref:System.Console.WriteLine%2A> </xref:System.Text.StringBuilder.AppendFormat%2A> </xref:System.String.Format%2A>      -Per ulteriori informazioni sugli identificatori di formato numerico, vedere [stringhe di formato numerico Standard](~/add/includes/ajax-current-ext-md.md) e [stringhe di formato numerico personalizzato](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sulla data e ora identificatori di formato, vedere [stringhe di formato di ora e data Standard](~/add/includes/ajax-current-ext-md.md) e [stringhe di formato di ora e Data personalizzata](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sugli identificatori di formato di enumerazione, vedere [stringhe di formato di enumerazione](~/add/includes/ajax-current-ext-md.md).      -Per ulteriori informazioni sulla formattazione, vedere [formattazione dei tipi di](~/add/includes/ajax-current-ext-md.md).       Per ulteriori informazioni sul terminatore di riga, vedere la sezione Note del <xref:System.Console.WriteLine%2A>metodo che non accetta parametri.</xref:System.Console.WriteLine%2A>"
  example:
  - "The following example demonstrates the standard formatting specifiers for numbers, dates, and enumerations.  \n  \n [!code-cpp[console.writelineFmt1#1](~/add/codesnippet/cpp/ecdde448-c375-4488-93b7-_1.cpp)]\n [!code-cs[console.writelineFmt1#1](~/add/codesnippet/csharp/ecdde448-c375-4488-93b7-_1.cs)]\n [!code-vb[console.writelineFmt1#1](~/add/codesnippet/visualbasic/ecdde448-c375-4488-93b7-_1.vb)]  \n  \n The following example is a tip calculator that calculates an 18% tip and uses the <xref:System.Console.WriteLine%2A> method to display the amount of the original charge, the amount of the tip, and the total amount. The example is a console application that requires the user to supply the amount of the original charge as a command-line parameter.  \n  \n [!code-cs[System.Console.WriteLine#1](~/add/codesnippet/csharp/ecdde448-c375-4488-93b7-_2.cs)]\n [!code-vb[System.Console.WriteLine#1](~/add/codesnippet/visualbasic/ecdde448-c375-4488-93b7-_2.vb)]"
  syntax:
    content: public static void WriteLine (string format, object arg0, object arg1, object arg2);
    parameters:
    - id: format
      type: System.String
      description: "Una stringa in formato composito (vedere la sezione Osservazioni)."
    - id: arg0
      type: System.Object
      description: "Il primo oggetto da scrivere usando `format`."
    - id: arg1
      type: System.Object
      description: "Secondo oggetto da scrivere usando `format`."
    - id: arg2
      type: System.Object
      description: "Terzo oggetto da scrivere usando `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Specifica del formato in <code> format </code> non Ã¨ valido."
  platform:
  - net462
- uid: System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)
  id: WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)
  parent: System.Console
  langs:
  - csharp
  name: WriteLine(String,Object,Object,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Scrive la rappresentazione testo dell&quot;elenco di parametri a lunghezza variabile, seguita dal terminatore di riga corrente nel flusso di output standard usando le informazioni di formato specificato e gli oggetti specificati."
  remarks: "> [!NOTE]\n>  This API is not CLS-compliant. The CLS-compliant alternative is [Console.WriteLine(String,âObject\\[\\])](assetId:///M:System.Console.WriteLine(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False). The C# and Visual Basic compilers automatically resolve a call to this method as a call to [Console.WriteLine(String,âObject\\[\\])](assetId:///M:System.Console.WriteLine(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False).  \n  \n This method uses the [composite formatting feature](~/add/includes/ajax-current-ext-md.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string. The resulting string is written to the output stream.  \n  \n The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to an object in the parameter list of this method. The formatting process replaces each format item with the text representation of the value of the corresponding object.  \n  \n The syntax of a format item is `{`*index*[`,`*alignment*][`:`*formatString*]`}`, which specifies a mandatory index, the optional length and alignment of the formatted text, and an optional string of format specifier characters that govern how the value of the corresponding object is formatted.  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics.  \n  \n-   For more information about the composite formatting feature supported by methods such as <xref:System.String.Format%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and some overloads of <xref:System.Console.WriteLine%2A>, see [Composite Formatting](../Topic/Composite%20Formatting.md).  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/add/includes/ajax-current-ext-md.md) and [Custom Numeric Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about date and time format specifiers, see [Standard Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md) and [Custom Date and Time Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about enumeration format specifiers, see [Enumeration Format Strings](~/add/includes/ajax-current-ext-md.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/add/includes/ajax-current-ext-md.md).  \n  \n For more information about the line terminator, see the Remarks section of the <xref:System.Console.WriteLine%2A> method that takes no parameters."
  example:
  - "The following example illustrates the use of variable arguments with the WriteLine method. The method is called with a composite format string and five format items.  \n  \n [!code-cpp[System.Console.WriteLine#5](~/add/codesnippet/cpp/b0d255a7-f5e0-4135-8d9b-_1.cpp)]"
  syntax:
    content: public static void WriteLine (string format, object arg0, object arg1, object arg2, object arg3);
    parameters:
    - id: format
      type: System.String
      description: "Una stringa in formato composito (vedere la sezione Osservazioni)."
    - id: arg0
      type: System.Object
      description: "Il primo oggetto da scrivere usando `format`."
    - id: arg1
      type: System.Object
      description: "Secondo oggetto da scrivere usando `format`."
    - id: arg2
      type: System.Object
      description: "Terzo oggetto da scrivere usando `format`."
    - id: arg3
      type: System.Object
      description: "Quarto oggetto da scrivere usando `format`."
  overload: System.Console.WriteLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Si Ã¨ verificato un errore dei / o."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Specifica del formato in <code> format </code> non Ã¨ valido."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Security.HostProtectionException
  parent: System.Security
  isExternal: false
  name: HostProtectionException
  nameWithType: HostProtectionException
  fullName: System.Security.HostProtectionException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Console.BackgroundColor
  parent: System.Console
  isExternal: false
  name: BackgroundColor
  nameWithType: Console.BackgroundColor
  fullName: System.Console.BackgroundColor
- uid: System.ConsoleColor
  parent: System
  isExternal: false
  name: ConsoleColor
  nameWithType: ConsoleColor
  fullName: System.ConsoleColor
- uid: System.Console.Beep
  parent: System.Console
  isExternal: false
  name: Beep()
  nameWithType: Console.Beep()
  fullName: System.Console.Beep()
- uid: System.Console.Beep(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: Beep(Int32,Int32)
  nameWithType: Console.Beep(Int32,Int32)
  fullName: System.Console.Beep(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Console.BufferHeight
  parent: System.Console
  isExternal: false
  name: BufferHeight
  nameWithType: Console.BufferHeight
  fullName: System.Console.BufferHeight
- uid: System.Console.BufferWidth
  parent: System.Console
  isExternal: false
  name: BufferWidth
  nameWithType: Console.BufferWidth
  fullName: System.Console.BufferWidth
- uid: System.Console.CancelKeyPress
  parent: System.Console
  isExternal: false
  name: CancelKeyPress
  nameWithType: Console.CancelKeyPress
  fullName: System.Console.CancelKeyPress
- uid: System.ConsoleCancelEventHandler
  parent: System
  isExternal: false
  name: ConsoleCancelEventHandler
  nameWithType: ConsoleCancelEventHandler
  fullName: System.ConsoleCancelEventHandler
- uid: System.Console.CapsLock
  parent: System.Console
  isExternal: false
  name: CapsLock
  nameWithType: Console.CapsLock
  fullName: System.Console.CapsLock
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Console.Clear
  parent: System.Console
  isExternal: false
  name: Clear()
  nameWithType: Console.Clear()
  fullName: System.Console.Clear()
- uid: System.Console.CursorLeft
  parent: System.Console
  isExternal: false
  name: CursorLeft
  nameWithType: Console.CursorLeft
  fullName: System.Console.CursorLeft
- uid: System.Console.CursorSize
  parent: System.Console
  isExternal: false
  name: CursorSize
  nameWithType: Console.CursorSize
  fullName: System.Console.CursorSize
- uid: System.Console.CursorTop
  parent: System.Console
  isExternal: false
  name: CursorTop
  nameWithType: Console.CursorTop
  fullName: System.Console.CursorTop
- uid: System.Console.CursorVisible
  parent: System.Console
  isExternal: false
  name: CursorVisible
  nameWithType: Console.CursorVisible
  fullName: System.Console.CursorVisible
- uid: System.Console.Error
  parent: System.Console
  isExternal: false
  name: Error
  nameWithType: Console.Error
  fullName: System.Console.Error
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Console.ForegroundColor
  parent: System.Console
  isExternal: false
  name: ForegroundColor
  nameWithType: Console.ForegroundColor
  fullName: System.Console.ForegroundColor
- uid: System.Console.In
  parent: System.Console
  isExternal: false
  name: In
  nameWithType: Console.In
  fullName: System.Console.In
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Console.InputEncoding
  parent: System.Console
  isExternal: false
  name: InputEncoding
  nameWithType: Console.InputEncoding
  fullName: System.Console.InputEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Console.IsErrorRedirected
  parent: System.Console
  isExternal: false
  name: IsErrorRedirected
  nameWithType: Console.IsErrorRedirected
  fullName: System.Console.IsErrorRedirected
- uid: System.Console.IsInputRedirected
  parent: System.Console
  isExternal: false
  name: IsInputRedirected
  nameWithType: Console.IsInputRedirected
  fullName: System.Console.IsInputRedirected
- uid: System.Console.IsOutputRedirected
  parent: System.Console
  isExternal: false
  name: IsOutputRedirected
  nameWithType: Console.IsOutputRedirected
  fullName: System.Console.IsOutputRedirected
- uid: System.Console.KeyAvailable
  parent: System.Console
  isExternal: false
  name: KeyAvailable
  nameWithType: Console.KeyAvailable
  fullName: System.Console.KeyAvailable
- uid: System.Console.LargestWindowHeight
  parent: System.Console
  isExternal: false
  name: LargestWindowHeight
  nameWithType: Console.LargestWindowHeight
  fullName: System.Console.LargestWindowHeight
- uid: System.Console.LargestWindowWidth
  parent: System.Console
  isExternal: false
  name: LargestWindowWidth
  nameWithType: Console.LargestWindowWidth
  fullName: System.Console.LargestWindowWidth
- uid: System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Console.MoveBufferArea(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Char,System.ConsoleColor,System.ConsoleColor)
  parent: System.Console
  isExternal: false
  name: MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  nameWithType: Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
  fullName: System.Console.MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Console.NumberLock
  parent: System.Console
  isExternal: false
  name: NumberLock
  nameWithType: Console.NumberLock
  fullName: System.Console.NumberLock
- uid: System.Console.OpenStandardError
  parent: System.Console
  isExternal: false
  name: OpenStandardError()
  nameWithType: Console.OpenStandardError()
  fullName: System.Console.OpenStandardError()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Console.OpenStandardError(System.Int32)
  parent: System.Console
  isExternal: false
  name: OpenStandardError(Int32)
  nameWithType: Console.OpenStandardError(Int32)
  fullName: System.Console.OpenStandardError(Int32)
- uid: System.Console.OpenStandardInput
  parent: System.Console
  isExternal: false
  name: OpenStandardInput()
  nameWithType: Console.OpenStandardInput()
  fullName: System.Console.OpenStandardInput()
- uid: System.Console.OpenStandardInput(System.Int32)
  parent: System.Console
  isExternal: false
  name: OpenStandardInput(Int32)
  nameWithType: Console.OpenStandardInput(Int32)
  fullName: System.Console.OpenStandardInput(Int32)
- uid: System.Console.OpenStandardOutput
  parent: System.Console
  isExternal: false
  name: OpenStandardOutput()
  nameWithType: Console.OpenStandardOutput()
  fullName: System.Console.OpenStandardOutput()
- uid: System.Console.OpenStandardOutput(System.Int32)
  parent: System.Console
  isExternal: false
  name: OpenStandardOutput(Int32)
  nameWithType: Console.OpenStandardOutput(Int32)
  fullName: System.Console.OpenStandardOutput(Int32)
- uid: System.Console.Out
  parent: System.Console
  isExternal: false
  name: Out
  nameWithType: Console.Out
  fullName: System.Console.Out
- uid: System.Console.OutputEncoding
  parent: System.Console
  isExternal: false
  name: OutputEncoding
  nameWithType: Console.OutputEncoding
  fullName: System.Console.OutputEncoding
- uid: System.Console.Read
  parent: System.Console
  isExternal: false
  name: Read()
  nameWithType: Console.Read()
  fullName: System.Console.Read()
- uid: System.Console.ReadKey
  parent: System.Console
  isExternal: false
  name: ReadKey()
  nameWithType: Console.ReadKey()
  fullName: System.Console.ReadKey()
- uid: System.ConsoleKeyInfo
  parent: System
  isExternal: false
  name: ConsoleKeyInfo
  nameWithType: ConsoleKeyInfo
  fullName: System.ConsoleKeyInfo
- uid: System.Console.ReadKey(System.Boolean)
  parent: System.Console
  isExternal: false
  name: ReadKey(Boolean)
  nameWithType: Console.ReadKey(Boolean)
  fullName: System.Console.ReadKey(Boolean)
- uid: System.Console.ReadLine
  parent: System.Console
  isExternal: false
  name: ReadLine()
  nameWithType: Console.ReadLine()
  fullName: System.Console.ReadLine()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Console.ResetColor
  parent: System.Console
  isExternal: false
  name: ResetColor()
  nameWithType: Console.ResetColor()
  fullName: System.Console.ResetColor()
- uid: System.Console.SetBufferSize(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: SetBufferSize(Int32,Int32)
  nameWithType: Console.SetBufferSize(Int32,Int32)
  fullName: System.Console.SetBufferSize(Int32,Int32)
- uid: System.Console.SetCursorPosition(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: SetCursorPosition(Int32,Int32)
  nameWithType: Console.SetCursorPosition(Int32,Int32)
  fullName: System.Console.SetCursorPosition(Int32,Int32)
- uid: System.Console.SetError(System.IO.TextWriter)
  parent: System.Console
  isExternal: false
  name: SetError(TextWriter)
  nameWithType: Console.SetError(TextWriter)
  fullName: System.Console.SetError(TextWriter)
- uid: System.Console.SetIn(System.IO.TextReader)
  parent: System.Console
  isExternal: false
  name: SetIn(TextReader)
  nameWithType: Console.SetIn(TextReader)
  fullName: System.Console.SetIn(TextReader)
- uid: System.Console.SetOut(System.IO.TextWriter)
  parent: System.Console
  isExternal: false
  name: SetOut(TextWriter)
  nameWithType: Console.SetOut(TextWriter)
  fullName: System.Console.SetOut(TextWriter)
- uid: System.Console.SetWindowPosition(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: SetWindowPosition(Int32,Int32)
  nameWithType: Console.SetWindowPosition(Int32,Int32)
  fullName: System.Console.SetWindowPosition(Int32,Int32)
- uid: System.Console.SetWindowSize(System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: SetWindowSize(Int32,Int32)
  nameWithType: Console.SetWindowSize(Int32,Int32)
  fullName: System.Console.SetWindowSize(Int32,Int32)
- uid: System.Console.Title
  parent: System.Console
  isExternal: false
  name: Title
  nameWithType: Console.Title
  fullName: System.Console.Title
- uid: System.Console.TreatControlCAsInput
  parent: System.Console
  isExternal: false
  name: TreatControlCAsInput
  nameWithType: Console.TreatControlCAsInput
  fullName: System.Console.TreatControlCAsInput
- uid: System.Console.WindowHeight
  parent: System.Console
  isExternal: false
  name: WindowHeight
  nameWithType: Console.WindowHeight
  fullName: System.Console.WindowHeight
- uid: System.Console.WindowLeft
  parent: System.Console
  isExternal: false
  name: WindowLeft
  nameWithType: Console.WindowLeft
  fullName: System.Console.WindowLeft
- uid: System.Console.WindowTop
  parent: System.Console
  isExternal: false
  name: WindowTop
  nameWithType: Console.WindowTop
  fullName: System.Console.WindowTop
- uid: System.Console.WindowWidth
  parent: System.Console
  isExternal: false
  name: WindowWidth
  nameWithType: Console.WindowWidth
  fullName: System.Console.WindowWidth
- uid: System.Console.Write(System.Boolean)
  parent: System.Console
  isExternal: false
  name: Write(Boolean)
  nameWithType: Console.Write(Boolean)
  fullName: System.Console.Write(Boolean)
- uid: System.Console.Write(System.Char)
  parent: System.Console
  isExternal: false
  name: Write(Char)
  nameWithType: Console.Write(Char)
  fullName: System.Console.Write(Char)
- uid: System.Console.Write(System.Char[])
  parent: System.Console
  isExternal: false
  name: Write(Char[])
  nameWithType: Console.Write(Char[])
  fullName: System.Console.Write(Char[])
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Console.Write(System.Decimal)
  parent: System.Console
  isExternal: false
  name: Write(Decimal)
  nameWithType: Console.Write(Decimal)
  fullName: System.Console.Write(Decimal)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Console.Write(System.Double)
  parent: System.Console
  isExternal: false
  name: Write(Double)
  nameWithType: Console.Write(Double)
  fullName: System.Console.Write(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Console.Write(System.Int32)
  parent: System.Console
  isExternal: false
  name: Write(Int32)
  nameWithType: Console.Write(Int32)
  fullName: System.Console.Write(Int32)
- uid: System.Console.Write(System.Int64)
  parent: System.Console
  isExternal: false
  name: Write(Int64)
  nameWithType: Console.Write(Int64)
  fullName: System.Console.Write(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Console.Write(System.Object)
  parent: System.Console
  isExternal: false
  name: Write(Object)
  nameWithType: Console.Write(Object)
  fullName: System.Console.Write(Object)
- uid: System.Console.Write(System.Single)
  parent: System.Console
  isExternal: false
  name: Write(Single)
  nameWithType: Console.Write(Single)
  fullName: System.Console.Write(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Console.Write(System.String)
  parent: System.Console
  isExternal: false
  name: Write(String)
  nameWithType: Console.Write(String)
  fullName: System.Console.Write(String)
- uid: System.Console.Write(System.UInt32)
  parent: System.Console
  isExternal: false
  name: Write(UInt32)
  nameWithType: Console.Write(UInt32)
  fullName: System.Console.Write(UInt32)
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Console.Write(System.UInt64)
  parent: System.Console
  isExternal: false
  name: Write(UInt64)
  nameWithType: Console.Write(UInt64)
  fullName: System.Console.Write(UInt64)
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.Console.Write(System.String,System.Object)
  parent: System.Console
  isExternal: false
  name: Write(String,Object)
  nameWithType: Console.Write(String,Object)
  fullName: System.Console.Write(String,Object)
- uid: System.Console.Write(System.String,System.Object[])
  parent: System.Console
  isExternal: false
  name: Write(String,Object[])
  nameWithType: Console.Write(String,Object[])
  fullName: System.Console.Write(String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Console.Write(System.Char[],System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: Write(Char[],Int32,Int32)
  nameWithType: Console.Write(Char[],Int32,Int32)
  fullName: System.Console.Write(Char[],Int32,Int32)
- uid: System.Console.Write(System.String,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: Write(String,Object,Object)
  nameWithType: Console.Write(String,Object,Object)
  fullName: System.Console.Write(String,Object,Object)
- uid: System.Console.Write(System.String,System.Object,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: Write(String,Object,Object,Object)
  nameWithType: Console.Write(String,Object,Object,Object)
  fullName: System.Console.Write(String,Object,Object,Object)
- uid: System.Console.Write(System.String,System.Object,System.Object,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: Write(String,Object,Object,Object,Object)
  nameWithType: Console.Write(String,Object,Object,Object,Object)
  fullName: System.Console.Write(String,Object,Object,Object,Object)
- uid: System.Console.WriteLine
  parent: System.Console
  isExternal: false
  name: WriteLine()
  nameWithType: Console.WriteLine()
  fullName: System.Console.WriteLine()
- uid: System.Console.WriteLine(System.Boolean)
  parent: System.Console
  isExternal: false
  name: WriteLine(Boolean)
  nameWithType: Console.WriteLine(Boolean)
  fullName: System.Console.WriteLine(Boolean)
- uid: System.Console.WriteLine(System.Char)
  parent: System.Console
  isExternal: false
  name: WriteLine(Char)
  nameWithType: Console.WriteLine(Char)
  fullName: System.Console.WriteLine(Char)
- uid: System.Console.WriteLine(System.Char[])
  parent: System.Console
  isExternal: false
  name: WriteLine(Char[])
  nameWithType: Console.WriteLine(Char[])
  fullName: System.Console.WriteLine(Char[])
- uid: System.Console.WriteLine(System.Decimal)
  parent: System.Console
  isExternal: false
  name: WriteLine(Decimal)
  nameWithType: Console.WriteLine(Decimal)
  fullName: System.Console.WriteLine(Decimal)
- uid: System.Console.WriteLine(System.Double)
  parent: System.Console
  isExternal: false
  name: WriteLine(Double)
  nameWithType: Console.WriteLine(Double)
  fullName: System.Console.WriteLine(Double)
- uid: System.Console.WriteLine(System.Int32)
  parent: System.Console
  isExternal: false
  name: WriteLine(Int32)
  nameWithType: Console.WriteLine(Int32)
  fullName: System.Console.WriteLine(Int32)
- uid: System.Console.WriteLine(System.Int64)
  parent: System.Console
  isExternal: false
  name: WriteLine(Int64)
  nameWithType: Console.WriteLine(Int64)
  fullName: System.Console.WriteLine(Int64)
- uid: System.Console.WriteLine(System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(Object)
  nameWithType: Console.WriteLine(Object)
  fullName: System.Console.WriteLine(Object)
- uid: System.Console.WriteLine(System.Single)
  parent: System.Console
  isExternal: false
  name: WriteLine(Single)
  nameWithType: Console.WriteLine(Single)
  fullName: System.Console.WriteLine(Single)
- uid: System.Console.WriteLine(System.String)
  parent: System.Console
  isExternal: false
  name: WriteLine(String)
  nameWithType: Console.WriteLine(String)
  fullName: System.Console.WriteLine(String)
- uid: System.Console.WriteLine(System.UInt32)
  parent: System.Console
  isExternal: false
  name: WriteLine(UInt32)
  nameWithType: Console.WriteLine(UInt32)
  fullName: System.Console.WriteLine(UInt32)
- uid: System.Console.WriteLine(System.UInt64)
  parent: System.Console
  isExternal: false
  name: WriteLine(UInt64)
  nameWithType: Console.WriteLine(UInt64)
  fullName: System.Console.WriteLine(UInt64)
- uid: System.Console.WriteLine(System.String,System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object)
  nameWithType: Console.WriteLine(String,Object)
  fullName: System.Console.WriteLine(String,Object)
- uid: System.Console.WriteLine(System.String,System.Object[])
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object[])
  nameWithType: Console.WriteLine(String,Object[])
  fullName: System.Console.WriteLine(String,Object[])
- uid: System.Console.WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.Console
  isExternal: false
  name: WriteLine(Char[],Int32,Int32)
  nameWithType: Console.WriteLine(Char[],Int32,Int32)
  fullName: System.Console.WriteLine(Char[],Int32,Int32)
- uid: System.Console.WriteLine(System.String,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object)
- uid: System.Console.WriteLine(System.String,System.Object,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object,Object)
- uid: System.Console.WriteLine(System.String,System.Object,System.Object,System.Object,System.Object)
  parent: System.Console
  isExternal: false
  name: WriteLine(String,Object,Object,Object,Object)
  nameWithType: Console.WriteLine(String,Object,Object,Object,Object)
  fullName: System.Console.WriteLine(String,Object,Object,Object,Object)
- uid: System.Console.BackgroundColor*
  parent: System.Console
  isExternal: false
  name: BackgroundColor
  nameWithType: Console.BackgroundColor
- uid: System.Console.Beep*
  parent: System.Console
  isExternal: false
  name: Beep
  nameWithType: Console.Beep
- uid: System.Console.BufferHeight*
  parent: System.Console
  isExternal: false
  name: BufferHeight
  nameWithType: Console.BufferHeight
- uid: System.Console.BufferWidth*
  parent: System.Console
  isExternal: false
  name: BufferWidth
  nameWithType: Console.BufferWidth
- uid: System.Console.CapsLock*
  parent: System.Console
  isExternal: false
  name: CapsLock
  nameWithType: Console.CapsLock
- uid: System.Console.Clear*
  parent: System.Console
  isExternal: false
  name: Clear
  nameWithType: Console.Clear
- uid: System.Console.CursorLeft*
  parent: System.Console
  isExternal: false
  name: CursorLeft
  nameWithType: Console.CursorLeft
- uid: System.Console.CursorSize*
  parent: System.Console
  isExternal: false
  name: CursorSize
  nameWithType: Console.CursorSize
- uid: System.Console.CursorTop*
  parent: System.Console
  isExternal: false
  name: CursorTop
  nameWithType: Console.CursorTop
- uid: System.Console.CursorVisible*
  parent: System.Console
  isExternal: false
  name: CursorVisible
  nameWithType: Console.CursorVisible
- uid: System.Console.Error*
  parent: System.Console
  isExternal: false
  name: Error
  nameWithType: Console.Error
- uid: System.Console.ForegroundColor*
  parent: System.Console
  isExternal: false
  name: ForegroundColor
  nameWithType: Console.ForegroundColor
- uid: System.Console.In*
  parent: System.Console
  isExternal: false
  name: In
  nameWithType: Console.In
- uid: System.Console.InputEncoding*
  parent: System.Console
  isExternal: false
  name: InputEncoding
  nameWithType: Console.InputEncoding
- uid: System.Console.IsErrorRedirected*
  parent: System.Console
  isExternal: false
  name: IsErrorRedirected
  nameWithType: Console.IsErrorRedirected
- uid: System.Console.IsInputRedirected*
  parent: System.Console
  isExternal: false
  name: IsInputRedirected
  nameWithType: Console.IsInputRedirected
- uid: System.Console.IsOutputRedirected*
  parent: System.Console
  isExternal: false
  name: IsOutputRedirected
  nameWithType: Console.IsOutputRedirected
- uid: System.Console.KeyAvailable*
  parent: System.Console
  isExternal: false
  name: KeyAvailable
  nameWithType: Console.KeyAvailable
- uid: System.Console.LargestWindowHeight*
  parent: System.Console
  isExternal: false
  name: LargestWindowHeight
  nameWithType: Console.LargestWindowHeight
- uid: System.Console.LargestWindowWidth*
  parent: System.Console
  isExternal: false
  name: LargestWindowWidth
  nameWithType: Console.LargestWindowWidth
- uid: System.Console.MoveBufferArea*
  parent: System.Console
  isExternal: false
  name: MoveBufferArea
  nameWithType: Console.MoveBufferArea
- uid: System.Console.NumberLock*
  parent: System.Console
  isExternal: false
  name: NumberLock
  nameWithType: Console.NumberLock
- uid: System.Console.OpenStandardError*
  parent: System.Console
  isExternal: false
  name: OpenStandardError
  nameWithType: Console.OpenStandardError
- uid: System.Console.OpenStandardInput*
  parent: System.Console
  isExternal: false
  name: OpenStandardInput
  nameWithType: Console.OpenStandardInput
- uid: System.Console.OpenStandardOutput*
  parent: System.Console
  isExternal: false
  name: OpenStandardOutput
  nameWithType: Console.OpenStandardOutput
- uid: System.Console.Out*
  parent: System.Console
  isExternal: false
  name: Out
  nameWithType: Console.Out
- uid: System.Console.OutputEncoding*
  parent: System.Console
  isExternal: false
  name: OutputEncoding
  nameWithType: Console.OutputEncoding
- uid: System.Console.Read*
  parent: System.Console
  isExternal: false
  name: Read
  nameWithType: Console.Read
- uid: System.Console.ReadKey*
  parent: System.Console
  isExternal: false
  name: ReadKey
  nameWithType: Console.ReadKey
- uid: System.Console.ReadLine*
  parent: System.Console
  isExternal: false
  name: ReadLine
  nameWithType: Console.ReadLine
- uid: System.Console.ResetColor*
  parent: System.Console
  isExternal: false
  name: ResetColor
  nameWithType: Console.ResetColor
- uid: System.Console.SetBufferSize*
  parent: System.Console
  isExternal: false
  name: SetBufferSize
  nameWithType: Console.SetBufferSize
- uid: System.Console.SetCursorPosition*
  parent: System.Console
  isExternal: false
  name: SetCursorPosition
  nameWithType: Console.SetCursorPosition
- uid: System.Console.SetError*
  parent: System.Console
  isExternal: false
  name: SetError
  nameWithType: Console.SetError
- uid: System.Console.SetIn*
  parent: System.Console
  isExternal: false
  name: SetIn
  nameWithType: Console.SetIn
- uid: System.Console.SetOut*
  parent: System.Console
  isExternal: false
  name: SetOut
  nameWithType: Console.SetOut
- uid: System.Console.SetWindowPosition*
  parent: System.Console
  isExternal: false
  name: SetWindowPosition
  nameWithType: Console.SetWindowPosition
- uid: System.Console.SetWindowSize*
  parent: System.Console
  isExternal: false
  name: SetWindowSize
  nameWithType: Console.SetWindowSize
- uid: System.Console.Title*
  parent: System.Console
  isExternal: false
  name: Title
  nameWithType: Console.Title
- uid: System.Console.TreatControlCAsInput*
  parent: System.Console
  isExternal: false
  name: TreatControlCAsInput
  nameWithType: Console.TreatControlCAsInput
- uid: System.Console.WindowHeight*
  parent: System.Console
  isExternal: false
  name: WindowHeight
  nameWithType: Console.WindowHeight
- uid: System.Console.WindowLeft*
  parent: System.Console
  isExternal: false
  name: WindowLeft
  nameWithType: Console.WindowLeft
- uid: System.Console.WindowTop*
  parent: System.Console
  isExternal: false
  name: WindowTop
  nameWithType: Console.WindowTop
- uid: System.Console.WindowWidth*
  parent: System.Console
  isExternal: false
  name: WindowWidth
  nameWithType: Console.WindowWidth
- uid: System.Console.Write*
  parent: System.Console
  isExternal: false
  name: Write
  nameWithType: Console.Write
- uid: System.Console.WriteLine*
  parent: System.Console
  isExternal: false
  name: WriteLine
  nameWithType: Console.WriteLine
