### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcDataReader
  id: OdbcDataReader
  children:
  - System.Data.Odbc.OdbcDataReader.Close
  - System.Data.Odbc.OdbcDataReader.Depth
  - System.Data.Odbc.OdbcDataReader.Dispose(System.Boolean)
  - System.Data.Odbc.OdbcDataReader.FieldCount
  - System.Data.Odbc.OdbcDataReader.GetBoolean(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetByte(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetChar(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetDataTypeName(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetDate(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetDateTime(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetDecimal(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetDouble(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetEnumerator
  - System.Data.Odbc.OdbcDataReader.GetFieldType(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetFloat(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetGuid(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetInt16(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetInt32(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetInt64(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetName(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)
  - System.Data.Odbc.OdbcDataReader.GetSchemaTable
  - System.Data.Odbc.OdbcDataReader.GetString(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetTime(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetValue(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetValues(System.Object[])
  - System.Data.Odbc.OdbcDataReader.HasRows
  - System.Data.Odbc.OdbcDataReader.IsClosed
  - System.Data.Odbc.OdbcDataReader.IsDBNull(System.Int32)
  - System.Data.Odbc.OdbcDataReader.Item(System.Int32)
  - System.Data.Odbc.OdbcDataReader.Item(System.String)
  - System.Data.Odbc.OdbcDataReader.NextResult
  - System.Data.Odbc.OdbcDataReader.Read
  - System.Data.Odbc.OdbcDataReader.RecordsAffected
  langs:
  - csharp
  name: OdbcDataReader
  nameWithType: OdbcDataReader
  fullName: System.Data.Odbc.OdbcDataReader
  type: Class
  summary: "Consente di leggere un flusso forward-only di righe di dati da un&quot;origine dati. Questa classe non può essere ereditata."
  remarks: "Per creare un OdbcDataReader, è necessario chiamare il <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>metodo il <xref:System.Data.Odbc.OdbcCommand>oggetto, anziché utilizzare direttamente un costruttore.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>       Mentre viene utilizzato il OdbcDataReader associati <xref:System.Data.Odbc.OdbcConnection>è occupata OdbcDataReader, e non altre operazioni possono essere eseguite su <xref:System.Data.Odbc.OdbcConnection>eccetto la chiusura di tale</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcConnection> Questo è il caso fino a quando il <xref:System.Data.Odbc.OdbcDataReader.Close%2A>di OdbcDataReader è detto.</xref:System.Data.Odbc.OdbcDataReader.Close%2A> Ad esempio, è possibile recuperare i parametri di output fino a dopo aver chiamato <xref:System.Data.Odbc.OdbcDataReader.Close%2A>.</xref:System.Data.Odbc.OdbcDataReader.Close%2A>       Le modifiche apportate a un gruppo di risultati da un altro processo o thread durante la lettura dei dati potrebbero essere visibili all&quot;utente di OdbcDataReader. Tuttavia, il comportamento preciso è driver dipende sia temporizzazione.       <xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A>e <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>sono le uniche proprietà che è possibile chiamare dopo la chiusura di OdbcDataReader.</xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A></xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> In alcuni casi, è necessario chiamare <xref:System.Data.Odbc.OdbcDataReader.Close%2A>prima di poter chiamare <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>.</xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> </xref:System.Data.Odbc.OdbcDataReader.Close%2A>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an OdbcDataReader. The example reads through the data, writing it out to the console. Finally, the example closes the OdbcDataReader, and then the <xref:System.Data.Odbc.OdbcConnection>.  \n  \n [!code-vb[Classic WebData OdbcDataReader#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcd_0_1.vb)]\n [!code-cs[Classic WebData OdbcDataReader#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcd_0_1.cs)]"
  syntax:
    content: 'public sealed class OdbcDataReader : System.Data.Common.DbDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements: []
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.Common.DbDataReader.VisibleFieldCount
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.Close
  id: Close
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: OdbcDataReader.Close()
  fullName: System.Data.Odbc.OdbcDataReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Chiude il <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> oggetto."
  remarks: "È necessario chiamare in modo esplicito il metodo Close dopo aver terminato con il <xref:System.Data.Odbc.OdbcDataReader>per utilizzare l&quot;oggetto associato <xref:System.Data.Odbc.OdbcConnection>per altri scopi.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcDataReader>      > [!CAUTION] > Non chiamare `Close` o `Dispose` su una connessione, un DataReader o qualsiasi altro oggetto gestito di `Finalize` metodo della classe. In un finalizzatore, è necessario rilasciare solo le risorse non gestite che la classe controlla direttamente. Se la classe non dispone di risorse non gestite, non includere un `Finalize` metodo nella definizione della classe. Per ulteriori informazioni, vedere [Garbage Collection](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an <xref:System.Data.Odbc.OdbcDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.Odbc.OdbcDataReader>, and then the <xref:System.Data.Odbc.OdbcConnection>.  \n  \n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_4_1.cs)]\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_4_1.vb)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.Odbc.OdbcDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.Depth
  id: Depth
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: OdbcDataReader.Depth
  fullName: System.Data.Odbc.OdbcDataReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene un valore che indica il livello di nidificazione della riga corrente."
  remarks: "La tabella più esterna è di livello zero."
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "Il livello di nidificazione della riga corrente."
  overload: System.Data.Odbc.OdbcDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OdbcDataReader.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcDataReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.Data.Odbc.OdbcDataReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.FieldCount
  id: FieldCount
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: OdbcDataReader.FieldCount
  fullName: System.Data.Odbc.OdbcDataReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il numero di colonne nella riga corrente."
  remarks: "Include campi nascosti. Utilizzare <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>per escludere campi nascosti.</xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>       Dopo aver eseguito una query che non restituisce righe, FieldCount restituisce 0."
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "Se non posizionato in un set di record valido, 0. in caso contrario il numero di colonne nel record corrente. Il valore predefinito è -1."
  overload: System.Data.Odbc.OdbcDataReader.FieldCount*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Non è presente alcuna connessione a un&quot;origine dati."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: OdbcDataReader.GetBoolean(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il valore della colonna specificata come valore Boolean."
  remarks: "Le conversioni vengono eseguite in base alle funzionalità del driver ODBC sottostante. Se la conversione non è supportata la chiamata al metodo avrà esito negativo.       Chiamare <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>per cercare i valori null prima di chiamare questo metodo.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override bool GetBoolean (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Boolean
      description: "Valore booleano che rappresenta il valore della colonna."
  overload: System.Data.Odbc.OdbcDataReader.GetBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: OdbcDataReader.GetByte(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il valore della colonna specificata come byte."
  remarks: "Le conversioni vengono eseguite in base alle funzionalità del driver ODBC sottostante. Se la conversione non è supportata, la chiamata al metodo ha esito negativo.       Chiamare <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>per cercare i valori null prima di chiamare questo metodo.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override byte GetByte (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Byte
      description: "Il valore della colonna specificata come byte."
  overload: System.Data.Odbc.OdbcDataReader.GetByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: OdbcDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Legge un flusso di byte dall&quot;offset della colonna specificata nel buffer come una matrice, iniziando in corrispondenza dell&quot;offset del buffer specificato."
  remarks: "GetBytes restituisce il numero di byte disponibili nel campo. Maggior parte dei casi che si tratta della lunghezza esatta del campo. Tuttavia, il numero restituito può essere inferiore alla lunghezza del campo se GetBytes è già stato utilizzato per ottenere i byte del campo. Questo può essere il caso, ad esempio, se il <xref:System.Data.Odbc.OdbcDataReader>viene letta una struttura di dati di grandi dimensioni in un buffer.</xref:System.Data.Odbc.OdbcDataReader> Per ulteriori informazioni, vedere il `SequentialAccess` impostazione per <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior>       Se si passa un buffer che è un valore null, GetBytes restituisce la lunghezza del campo espressa in byte.       Le conversioni vengono eseguite in base alle funzionalità del driver ODBC sottostante. Se la conversione non è supportata la chiamata al metodo avrà esito negativo.      > [!NOTE] > Verrà generata alcuna eccezione se il valore di `bufferIndex` è di fuori della matrice. Verrà letto alcun dato e il metodo restituirà 0."
  syntax:
    content: public override long GetBytes (int i, long dataIndex, byte[] buffer, int bufferIndex, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    - id: dataIndex
      type: System.Int64
      description: "L&quot;indice all&quot;interno del campo in cui avviare l&quot;operazione di lettura."
    - id: buffer
      type: System.Byte[]
      description: "Buffer in cui leggere il flusso di byte."
    - id: bufferIndex
      type: System.Int32
      description: "L&quot;indice all&quot;interno di `buffer` in cui l&quot;operazione di scrittura è da avviare."
    - id: length
      type: System.Int32
      description: "Il numero di byte da leggere."
    return:
      type: System.Int64
      description: "Il numero effettivo di byte letti."
  overload: System.Data.Odbc.OdbcDataReader.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: OdbcDataReader.GetChar(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il valore della colonna specificata come un carattere."
  remarks: "Le conversioni vengono eseguite in base alle funzionalità del driver ODBC sottostante. Se la conversione non è supportata, la chiamata al metodo ha esito negativo.       Chiamare <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>per cercare i valori null prima di chiamare questo metodo.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override char GetChar (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Char
      description: "Il valore della colonna specificata come un carattere."
  overload: System.Data.Odbc.OdbcDataReader.GetChar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: OdbcDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Legge un flusso di caratteri dall&quot;offset della colonna specificata nel buffer come una matrice, iniziando in corrispondenza dell&quot;offset del buffer specificato."
  remarks: "GetChars restituisce il numero di caratteri disponibili nel campo. Maggior parte dei casi che si tratta della lunghezza esatta del campo. Tuttavia, il numero restituito può essere inferiore alla lunghezza del campo se GetChars è già stato utilizzato per ottenere i caratteri del campo. Questo può essere il caso, ad esempio, se il <xref:System.Data.Odbc.OdbcDataReader>viene letta una struttura di dati di grandi dimensioni in un buffer.</xref:System.Data.Odbc.OdbcDataReader> Per ulteriori informazioni, vedere il `SequentialAccess` impostazione per <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior>       Se si passa un buffer che è un valore null, GetChars restituisce la lunghezza del campo in caratteri.       Le conversioni vengono eseguite in base alle funzionalità del driver ODBC sottostante. Se la conversione non è supportata la chiamata al metodo avrà esito negativo.      > [!NOTE] > Verrà generata alcuna eccezione se il valore di `bufferIndex` è di fuori della matrice. Verrà letto alcun dato e il metodo restituirà 0."
  syntax:
    content: public override long GetChars (int i, long dataIndex, char[] buffer, int bufferIndex, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    - id: dataIndex
      type: System.Int64
      description: "L&quot;indice all&quot;interno della riga in cui avviare l&quot;operazione di lettura."
    - id: buffer
      type: System.Char[]
      description: "Buffer in cui copiare i dati."
    - id: bufferIndex
      type: System.Int32
      description: "L&quot;indice all&quot;interno di `buffer` in cui l&quot;operazione di scrittura è da avviare."
    - id: length
      type: System.Int32
      description: "Il numero di caratteri da leggere."
    return:
      type: System.Int64
      description: "Il numero effettivo di caratteri letti."
  overload: System.Data.Odbc.OdbcDataReader.GetChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: OdbcDataReader.GetDataTypeName(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il nome del tipo di dati di origine."
  syntax:
    content: public override string GetDataTypeName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.String
      description: "Il nome del tipo di dati di origine."
  overload: System.Data.Odbc.OdbcDataReader.GetDataTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetDate(System.Int32)
  id: GetDate(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetDate(Int32)
  nameWithType: OdbcDataReader.GetDate(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDate(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il valore della colonna specificata come un <xref:System.DateTime>oggetto.</xref:System.DateTime>"
  syntax:
    content: public DateTime GetDate (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.DateTime
      description: "Il valore della colonna specificata come un <xref:System.DateTime>oggetto.</xref:System.DateTime>"
  overload: System.Data.Odbc.OdbcDataReader.GetDate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: OdbcDataReader.GetDateTime(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il valore della colonna specificata come un <xref:System.DateTime>oggetto.</xref:System.DateTime>"
  remarks: "Le conversioni vengono eseguite in base alle funzionalità del driver ODBC sottostante. Se la conversione non è supportata la chiamata al metodo avrà esito negativo.       Chiamare <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>per cercare i valori null prima di chiamare questo metodo.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override DateTime GetDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.DateTime
      description: "Il valore della colonna specificata come un <xref:System.DateTime>oggetto.</xref:System.DateTime>"
  overload: System.Data.Odbc.OdbcDataReader.GetDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: OdbcDataReader.GetDecimal(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il valore della colonna specificata come un <xref:System.Decimal>oggetto.</xref:System.Decimal>"
  remarks: "Le conversioni vengono eseguite in base alle funzionalità del driver ODBC sottostante. Se la conversione non è supportata la chiamata al metodo avrà esito negativo.       Chiamare <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>per cercare i valori null prima di chiamare questo metodo.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>       GetDecimal ha una precisione massima di 28. Il tentativo di recupero di dati decimal con una precisione maggiore genererà un&quot;eccezione. Una soluzione, è possibile modificare la query per eseguire il cast di tipo decimale su un tipo di dati più piccolo o convertire in stringa o binario."
  syntax:
    content: public override decimal GetDecimal (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Decimal
      description: "Il valore della colonna specificata come un <xref:System.Decimal>oggetto.</xref:System.Decimal>"
  overload: System.Data.Odbc.OdbcDataReader.GetDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: OdbcDataReader.GetDouble(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il valore della colonna specificata come numero a virgola mobile e precisione doppia."
  remarks: "Le conversioni vengono eseguite in base alle funzionalità del driver ODBC sottostante. Se la conversione non è supportata, la chiamata al metodo ha esito negativo.       Chiamare <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>per cercare i valori null prima di chiamare questo metodo.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override double GetDouble (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Double
      description: "Il valore della colonna specificata come numero a virgola mobile e precisione doppia."
  overload: System.Data.Odbc.OdbcDataReader.GetDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: OdbcDataReader.GetEnumerator()
  fullName: System.Data.Odbc.OdbcDataReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Restituisce un <xref:System.Collections.IEnumerator>che può essere utilizzato per scorrere le righe nel lettore di dati.</xref:System.Collections.IEnumerator>"
  remarks: "Sebbene sia possibile utilizzare questo metodo per recuperare un enumeratore esplicito, in linguaggi che supportano un `foreach` costrutto, è più semplice da utilizzare il costrutto di ciclo direttamente per scorrere le righe nel lettore di dati."
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Un <xref:System.Collections.IEnumerator>che può essere utilizzato per scorrere le righe nel lettore di dati.</xref:System.Collections.IEnumerator>"
  overload: System.Data.Odbc.OdbcDataReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: OdbcDataReader.GetFieldType(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il <xref:System.Type>che rappresenta il tipo di dati dell&quot;oggetto.</xref:System.Type>"
  syntax:
    content: public override Type GetFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Type
      description: "Il <xref:System.Type>che rappresenta il tipo di dati dell&quot;oggetto.</xref:System.Type>"
  overload: System.Data.Odbc.OdbcDataReader.GetFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: OdbcDataReader.GetFloat(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il valore della colonna specificata come numero a virgola mobile e precisione singola."
  remarks: "Le conversioni vengono eseguite in base alle funzionalità del driver ODBC sottostante. Se la conversione non è supportata la chiamata al metodo avrà esito negativo.       Chiamare <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>per cercare i valori null prima di chiamare questo metodo.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override float GetFloat (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Single
      description: "Il valore della colonna specificata come numero a virgola mobile e precisione singola."
  overload: System.Data.Odbc.OdbcDataReader.GetFloat*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: OdbcDataReader.GetGuid(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il valore della colonna specificata come identificatore univoco globale (GUID)."
  remarks: "Le conversioni vengono eseguite in base alle funzionalità del driver ODBC sottostante. Se la conversione non è supportata, la chiamata al metodo ha esito negativo.       Chiamare <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>per cercare i valori null prima di chiamare questo metodo.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override Guid GetGuid (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Guid
      description: "Il valore della colonna specificata come un GUID."
  overload: System.Data.Odbc.OdbcDataReader.GetGuid*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: OdbcDataReader.GetInt16(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il valore della colonna specificata come un intero con segno a 16 bit."
  remarks: "Le conversioni vengono eseguite in base alle funzionalità del driver ODBC sottostante. Se la conversione non è supportata, la chiamata al metodo ha esito negativo.       Chiamare <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>per cercare i valori null prima di chiamare questo metodo.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override short GetInt16 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Int16
      description: "Il valore della colonna specificata come un intero con segno a 16 bit."
  overload: System.Data.Odbc.OdbcDataReader.GetInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: OdbcDataReader.GetInt32(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il valore della colonna specificata come un intero con segno a 32 bit."
  remarks: "Le conversioni vengono eseguite in base alle funzionalità del driver ODBC sottostante. Se la conversione non è supportata, la chiamata al metodo ha esito negativo.       Chiamare <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>per cercare i valori null prima di chiamare questo metodo.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override int GetInt32 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Int32
      description: "Il valore della colonna specificata come un intero con segno a 32 bit."
  overload: System.Data.Odbc.OdbcDataReader.GetInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: OdbcDataReader.GetInt64(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il valore della colonna specificata come un intero con segno a 64 bit."
  remarks: "Le conversioni vengono eseguite in base alle funzionalità del driver ODBC sottostante. Se la conversione non è supportata, la chiamata al metodo ha esito negativo.       Chiamare <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>per cercare i valori null prima di chiamare questo metodo.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override long GetInt64 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Int64
      description: "Il valore della colonna specificata come integer con segno a 64 bit."
  overload: System.Data.Odbc.OdbcDataReader.GetInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: OdbcDataReader.GetName(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il nome della colonna specificata."
  syntax:
    content: public override string GetName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.String
      description: "Stringa che rappresenta il nome della colonna specificata."
  overload: System.Data.Odbc.OdbcDataReader.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: OdbcDataReader.GetOrdinal(String)
  fullName: System.Data.Odbc.OdbcDataReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene l&quot;ordinale di colonna, dato il nome della colonna."
  remarks: "GetOrdinal esegue innanzitutto una ricerca con distinzione maiuscole/minuscole. In caso contrario, viene eseguita una ricerca con distinzione tra maiuscole e secondo. Il metodo genera un `IndexOutOfRange` eccezione se non viene trovato l&quot;ordinale della colonna in base zero.       GetOrdinal è senza distinzione kana-width.       Poiché le ricerche basate su valori ordinali sono più efficienti ricerche denominate, non è opportuno chiamare GetOrdinal all&quot;interno di un ciclo. Invece di chiamare GetOrdinal solo una volta e quindi assegnare i risultati a una variabile integer per l&quot;utilizzo all&quot;interno del ciclo."
  example:
  - "The following example demonstrates how to use the GetOrdinal method.  \n  \n [!code-vb[Classic WebData OdbcDataReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_3_1.vb)]\n [!code-cs[Classic WebData OdbcDataReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_3_1.cs)]"
  syntax:
    content: public override int GetOrdinal (string value);
    parameters:
    - id: value
      type: System.String
      description: "Il nome della colonna."
    return:
      type: System.Int32
      description: "Ordinale della colonna in base zero."
  overload: System.Data.Odbc.OdbcDataReader.GetOrdinal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: OdbcDataReader.GetSchemaTable()
  fullName: System.Data.Odbc.OdbcDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Restituisce un <xref href=&quot;System.Data.DataTable&quot;> </xref> che descrive i metadati della colonna di <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref>."
  remarks: "Metodo GetSchemaTable restituisce i metadati relativi a ogni colonna nell&quot;ordine seguente: | Colonna DataReader | Descrizione |   |-----------------------|-----------------|   | Nome colonna | Il nome di colonna. Questo potrebbe non essere univoco. Se non è possibile determinare il nome della colonna, viene restituito un valore null. Questo nome riflette sempre la denominazione più recente della colonna nel testo del comando o una vista corrente. |   | ColumnOrdinal | Ordinale in base zero della colonna. Questa colonna non può contenere un valore null. |   | ColumnSize | Lunghezza massima possibile di un valore nella colonna. Per le colonne che utilizzano un tipo di dati a lunghezza fissa, questa è la dimensione del tipo di dati. |   | NumericPrecision | Se <xref:System.Data.DbType>è un tipo di dati numerici, è la precisione massima della colonna.</xref:System.Data.DbType> La precisione dipende dalla definizione della colonna. Se <xref:System.Data.DbType>non è un valore numerico digitare, non utilizzare i dati in questa colonna.</xref:System.Data.DbType> Se il driver ODBC sottostante restituisce un valore di precisione per un tipo di dati non numerici, questo valore viene utilizzato nella tabella dello schema. |   | NumericScale | Se <xref:System.Data.DbType>è <xref:System.Data.DbType>, il numero di cifre a destra del separatore decimale.</xref:System.Data.DbType> </xref:System.Data.DbType> In caso contrario, questo è un valore null. Se il driver ODBC sottostante restituisce un valore di precisione per un tipo di dati non numerici, questo valore viene utilizzato nella tabella dello schema. |   | Tipo di dati | Esegue il mapping al tipo common language runtime di <xref:System.Data.DbType>. |   | Tipoprovider | Il tipo di driver sottostante. |   | IsLong | `true` se la colonna contiene un Long BLOB (Binary Object) che contiene dati molto lunghi.</xref:System.Data.DbType> La definizione dei dati molto lunghi è specifica del driver. |   | AllowDBNull | `true` se l&quot;utente può impostare la colonna con un valore null o se il driver non è possibile determinare se l&quot;utente può impostare la colonna con un valore null. In caso contrario, `false`. Una colonna può contenere valori null, anche se non può essere impostata su un valore null. |   | IsReadOnly | `true` se la colonna non può essere modificato; in caso contrario `false`. |   | IsRowVersion | Impostato se la colonna contiene un identificatore di riga persistente che non può essere scritta e non dispone di alcun valore significativo, ad eccezione di identity della riga. |   | IsUnique | `true`: Due righe nella tabella di base (la tabella restituita in BaseTableName) possono avere lo stesso valore in questa colonna. È sicuramente IsUnique `true` se la colonna rappresenta una chiave da sola o se è presente un vincolo di tipo UNIQUE applicato solo a questa colonna.<br /><br /> `false`: La colonna può contenere valori duplicati nella tabella di base. Il valore predefinito per questa colonna è `false`. |   | IsKey | `true`: La colonna fa parte di un set di colonne nel set di righe che, complessivamente, identificare in modo univoco la riga. Il set di colonne con IsKey impostata su `true` deve identificare in modo univoco una riga nel set di righe. Non è necessario che il set di colonne è un set minimo di colonne. Questo set di colonne può essere generato da una chiave primaria della tabella di base, un vincolo unique o un indice univoco.<br /><br /> `false`: La colonna non è necessario per identificare in modo univoco la riga. |   | IsAutoIncrement | `true` se la colonna assegna valori a nuove righe in incrementi fissi; in caso contrario `false`. Il valore predefinito per questa colonna è `false`. |   | BaseSchemaName | Il nome dello schema dell&quot;origine dati che contiene la colonna. NULL se non è possibile determinare il nome del catalogo di base. Il valore predefinito per questa colonna è un valore null. |   | BaseCatalogName | Il nome del catalogo nell&quot;archivio dati contenente la colonna. NULL se non è possibile determinare il nome del catalogo di base. Il valore predefinito per questa colonna è un valore null. |   | BaseTableName | Il nome della tabella o della vista nell&quot;archivio dati contenente la colonna. Un valore null se non è possibile determinare il nome della tabella di base. Il valore predefinito di questa colonna è un valore null. |   | BaseColumnName | Il nome della colonna nell&quot;archivio dati. Potrebbe essere diverso dal nome della colonna restituito nella colonna ColumnName se è stato utilizzato un alias. Un valore null se non è possibile determinare il nome della colonna di base o se la colonna del set di righe è derivata da, ma non identica a, una colonna nei dati di archivio. Il valore predefinito per questa colonna è un valore null. |       Viene restituita una riga per ogni colonna nel set di risultati.       Il Provider di dati .NET Framework per ODBC si presuppone che le informazioni sui metadati siano disponibili da un driver ODBC dopo uno dei **SQLPrepare**, **SQLExecute**, o **SQLExecuteDirect** funzioni vengono chiamate. Per &quot;SchemaOnly&quot; del comando per il corretto funzionamento di **SQLPrepare** deve restituire le informazioni sui metadati necessarie. Non tutti i driver ODBC supportano questa funzione o restituiscono informazioni sui metadati. In questi casi, parte o tutte le informazioni in SchemaTable risulta mancante. Dopo la chiamata **SQLPrepare**, il provider di dati chiama ODBC **SQLColAttribute** funzione per trovare le informazioni sui metadati relative a ogni colonna nei risultati della query (ad esempio IsLong, IsUnique, AllowDBNull, BaseTableName, BaseColumnName). Se il driver sottostante non vengono restituite alcune di queste informazioni, i valori corrispondenti in SchemaTable verranno impostati correttamente.       Chiama anche il Provider di dati .NET Framework per ODBC **SQLPrimaryKeys** per recuperare le informazioni sulla chiave per ogni tabella. Se il driver ODBC sottostante non supporta questa funzione, il provider di dati chiama **SQLStatistics** e sceglie uno degli indici univoci come chiave primaria per la tabella. Questo non può generare sempre i risultati desiderati.       <xref:System.Data.Odbc.OdbcCommandBuilder>Per poter funzionare correttamente è necessario ottenere l&quot;identificazione corretta delle chiavi primarie della tabella.</xref:System.Data.Odbc.OdbcCommandBuilder> Se non viene restituito BaseTableName per ogni colonna nei risultati della query, il Provider di dati .NET Framework per ODBC tenta di analizzare l&quot;istruzione SQL per trovare i nomi di tabella coinvolti nella query. Questo procedimento funziona con UPDATE, INSERT, DELETE e semplici istruzioni SELECT, ma non con le stored procedure o istruzioni SELECT basate su join. Se non sono presente in questa tabella, alcune o tutte le informazioni sullo schema di <xref:System.Data.Odbc.OdbcCommandBuilder>non funzionerà correttamente perché contiene informazioni di schema sufficienti per generare automaticamente le istruzioni INSERT, UPDATE o DELETE corrette.</xref:System.Data.Odbc.OdbcCommandBuilder>       Per assicurarsi che le colonne di metadati restituiscono le informazioni corrette, è necessario chiamare <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>con il parametro behavior impostato su KeyInfo.</xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> In caso contrario, alcune colonne nella tabella dello schema può restituire dati predefiniti, null o non corretto.       Quando si utilizza ODBC.NET per Oracle tramite il driver ODBC, l&quot;alias di colonne chiave non sono riconosciute come chiavi. Questo influisce sulle colonne IsKey e IsUnique nella tabella dello schema di OdbcDataReader. Influisce inoltre la possibilità di OdbcCommandBuilder per generare logica di aggiornamento. È consigliabile non utilizzare un alias per una colonna chiave primaria.      > [!NOTE] > Di Microsoft Jet ODBC driver restituisce sempre l&quot;indice univoco e colonne chiave primaria come indipendentemente dal fatto che siano ammette valori null o non è nullable. Inoltre, il driver non restituisce informazioni sulla chiave primarie. Restituisce solo un elenco di indici univoci e le relative colonne, incluse le colonne chiave primaria, senza differenziazioni tra di essi."
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Oggetto <xref href=&quot;System.Data.DataTable&quot;> </xref> che descrive i metadati della colonna."
  overload: System.Data.Odbc.OdbcDataReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> è chiuso."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: OdbcDataReader.GetString(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il valore della colonna specificata come un <xref:System.String>.</xref:System.String>"
  remarks: "Le conversioni vengono eseguite in base alle funzionalità del driver ODBC sottostante. Se la conversione non è supportata, la chiamata al metodo ha esito negativo.       Chiamare <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>per cercare i valori null prima di chiamare questo metodo.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override string GetString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.String
      description: "Il valore della colonna specificata come un <xref:System.String>.</xref:System.String>"
  overload: System.Data.Odbc.OdbcDataReader.GetString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Il cast specificato non è valido."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetTime(System.Int32)
  id: GetTime(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetTime(Int32)
  nameWithType: OdbcDataReader.GetTime(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il valore della colonna specificata come un <xref:System.TimeSpan>oggetto.</xref:System.TimeSpan>"
  syntax:
    content: public TimeSpan GetTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.TimeSpan
      description: "Il valore della colonna specificata come un <xref:System.TimeSpan>oggetto.</xref:System.TimeSpan>"
  overload: System.Data.Odbc.OdbcDataReader.GetTime*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: OdbcDataReader.GetValue(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il valore della colonna con l&quot;ordinale specificato nel relativo formato nativo."
  remarks: "Questo metodo restituisce <xref:System.DBNull>per colonne null del database.</xref:System.DBNull>"
  syntax:
    content: public override object GetValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Object
      description: "Valore da restituire."
  overload: System.Data.Odbc.OdbcDataReader.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: OdbcDataReader.GetValues(Object[])
  fullName: System.Data.Odbc.OdbcDataReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Popola una matrice di oggetti con i valori della colonna della riga corrente."
  remarks: "Per la maggior parte delle applicazioni, il <xref:System.Data.Odbc.OdbcDataReader.GetValues%2A>metodo fornisce un mezzo efficiente per il recupero di tutte le colonne, anziché recuperare ciascuna colonna singolarmente.</xref:System.Data.Odbc.OdbcDataReader.GetValues%2A>       È possibile passare un <xref:System.Object>matrice che contiene un valore minore rispetto al numero di colonne contenute nella riga risultante.</xref:System.Object> Solo la quantità di dati di <xref:System.Object>contenuti nella matrice vengono copiati nella matrice.</xref:System.Object> È inoltre possibile passare un <xref:System.Object>matrice la cui lunghezza è maggiore del numero di colonne contenute nella riga risultante.</xref:System.Object>       Questo metodo restituisce <xref:System.DBNull>per colonne null del database.</xref:System.DBNull>"
  example:
  - >-
    [!code-vb[OdbcDataReader_GetValues#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_5_1.vb)]
     [!code-cs[OdbcDataReader_GetValues#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_5_1.cs)]
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Matrice di tipo <xref:System.Object>in cui copiare le colonne di attributi.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Il numero di istanze di <xref:System.Object>nella matrice.</xref:System.Object>"
  overload: System.Data.Odbc.OdbcDataReader.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.HasRows
  id: HasRows
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: HasRows
  nameWithType: OdbcDataReader.HasRows
  fullName: System.Data.Odbc.OdbcDataReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> contiene uno o più righe."
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> contiene uno o più righe; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcDataReader.HasRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.IsClosed
  id: IsClosed
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: OdbcDataReader.IsClosed
  fullName: System.Data.Odbc.OdbcDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Indica se il <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> è chiuso."
  remarks: "IsClosed e <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>sono le uniche proprietà che è possibile chiamare dopo il <xref:System.Data.Odbc.OdbcDataReader>è chiuso.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>"
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> è chiuso; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcDataReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: OdbcDataReader.IsDBNull(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene un valore che indica se la colonna contiene valori inesistenti o mancanti."
  remarks: "Per evitare che venga generato un errore, chiamare questo metodo per cercare i metodi Get di valori null della colonna prima di chiamare l&quot;oggetto tipizzato (ad esempio, <xref:System.Data.Odbc.OdbcDataReader.GetByte%2A>, <xref:System.Data.Odbc.OdbcDataReader.GetChar%2A>e così via).</xref:System.Data.Odbc.OdbcDataReader.GetChar%2A> </xref:System.Data.Odbc.OdbcDataReader.GetByte%2A>"
  syntax:
    content: public override bool IsDBNull (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Ordinale della colonna in base zero."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore della colonna specificato è equivalente a <xref href=&quot;System.DBNull&quot;> </xref>; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcDataReader.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: OdbcDataReader.Item(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il valore della colonna specificata in formato nativo, dato il numero ordinale di colonna."
  syntax:
    content: public override object this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: "Il numero ordinale di colonna."
    return:
      type: System.Object
      description: "Il valore della colonna specificata nel relativo formato nativo."
  overload: System.Data.Odbc.OdbcDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "L&quot;indice passato non compreso nell&quot;intervallo compreso tra 0 e <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: OdbcDataReader.Item(String)
  fullName: System.Data.Odbc.OdbcDataReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il valore della colonna specificata in formato nativo, dato il nome della colonna."
  remarks: "Innanzitutto viene eseguita una ricerca tra maiuscole e minuscole. In caso contrario, viene eseguita una ricerca con distinzione tra maiuscole e secondo.       Questo metodo è senza distinzione kana-width."
  syntax:
    content: public override object this[string value] { get; }
    parameters:
    - id: value
      type: System.String
      description: "Il nome della colonna."
    return:
      type: System.Object
      description: "Il valore della colonna specificata nel relativo formato nativo."
  overload: System.Data.Odbc.OdbcDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "È stata trovata alcuna colonna con il nome specificato."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.NextResult
  id: NextResult
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: OdbcDataReader.NextResult()
  fullName: System.Data.Odbc.OdbcDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Sposta il <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> al risultato successivo durante la lettura dei risultati delle istruzioni batch SQL."
  remarks: "Utilizzato per elaborare più risultati che possono essere generati tramite l&quot;esecuzione di istruzioni batch SQL.       Per impostazione predefinita, il <xref:System.Data.Odbc.OdbcDataReader>è posizionato sul primo risultato.</xref:System.Data.Odbc.OdbcDataReader>"
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se sono presenti più set di risultati in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.Read
  id: Read
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: OdbcDataReader.Read()
  fullName: System.Data.Odbc.OdbcDataReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Sposta il <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> al record successivo."
  remarks: "La posizione predefinita del <xref:System.Data.Odbc.OdbcDataReader>prima del primo record.</xref:System.Data.Odbc.OdbcDataReader> Pertanto, è necessario chiamare Read per avviare l&quot;accesso ai dati.       Mentre il <xref:System.Data.Odbc.OdbcDataReader>viene utilizzato l&quot;associato <xref:System.Data.Odbc.OdbcConnection>è occupato finché non si chiama <xref:System.Data.Odbc.OdbcDataReader.Close%2A>.</xref:System.Data.Odbc.OdbcDataReader.Close%2A> </xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcDataReader>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an <xref:System.Data.Odbc.OdbcDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.Odbc.OdbcDataReader>, and then the <xref:System.Data.Odbc.OdbcConnection>.  \n  \n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_0_1.cs)]\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_0_1.vb)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se sono presenti altre righe. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcDataReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: OdbcDataReader.RecordsAffected
  fullName: System.Data.Odbc.OdbcDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene il numero di righe modificate, inserite o eliminate dall&quot;esecuzione dell&quot;istruzione SQL."
  remarks: "La proprietà RecordsAffected non viene impostata fino a quando non vengono lette tutte le righe e si chiude il <xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader>       Il valore di questa proprietà è cumulativo. Ad esempio, se due record vengono inseriti in modalità batch, il valore di RecordsAffected sarà 2.       <xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A>e RecordsAffected sono le uniche proprietà che è possibile chiamare dopo il <xref:System.Data.Odbc.OdbcDataReader>è chiuso.</xref:System.Data.Odbc.OdbcDataReader></xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A>"
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "Il numero di righe modificate, inserite o eliminate. -1 per le istruzioni SELECT; 0 se nessuna riga è interessata o l&quot;istruzione non riuscita."
  overload: System.Data.Odbc.OdbcDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.Odbc.OdbcDataReader.Close
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Close()
  nameWithType: OdbcDataReader.Close()
  fullName: System.Data.Odbc.OdbcDataReader.Close()
- uid: System.Data.Odbc.OdbcDataReader.Depth
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Depth
  nameWithType: OdbcDataReader.Depth
  fullName: System.Data.Odbc.OdbcDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcDataReader.Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OdbcDataReader.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcDataReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcDataReader.FieldCount
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: FieldCount
  nameWithType: OdbcDataReader.FieldCount
  fullName: System.Data.Odbc.OdbcDataReader.FieldCount
- uid: System.Data.Odbc.OdbcDataReader.GetBoolean(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: OdbcDataReader.GetBoolean(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetBoolean(Int32)
- uid: System.Data.Odbc.OdbcDataReader.GetByte(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: OdbcDataReader.GetByte(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.Odbc.OdbcDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: OdbcDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Odbc.OdbcDataReader.GetChar(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: OdbcDataReader.GetChar(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.Odbc.OdbcDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: OdbcDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Odbc.OdbcDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: OdbcDataReader.GetDataTypeName(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcDataReader.GetDate(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDate(Int32)
  nameWithType: OdbcDataReader.GetDate(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDate(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.Odbc.OdbcDataReader.GetDateTime(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: OdbcDataReader.GetDateTime(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDateTime(Int32)
- uid: System.Data.Odbc.OdbcDataReader.GetDecimal(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: OdbcDataReader.GetDecimal(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.Odbc.OdbcDataReader.GetDouble(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: OdbcDataReader.GetDouble(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.Odbc.OdbcDataReader.GetEnumerator
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: OdbcDataReader.GetEnumerator()
  fullName: System.Data.Odbc.OdbcDataReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Odbc.OdbcDataReader.GetFieldType(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: OdbcDataReader.GetFieldType(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Odbc.OdbcDataReader.GetFloat(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: OdbcDataReader.GetFloat(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.Odbc.OdbcDataReader.GetGuid(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: OdbcDataReader.GetGuid(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.Odbc.OdbcDataReader.GetInt16(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: OdbcDataReader.GetInt16(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.Odbc.OdbcDataReader.GetInt32(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: OdbcDataReader.GetInt32(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetInt32(Int32)
- uid: System.Data.Odbc.OdbcDataReader.GetInt64(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: OdbcDataReader.GetInt64(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetInt64(Int32)
- uid: System.Data.Odbc.OdbcDataReader.GetName(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: OdbcDataReader.GetName(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetName(Int32)
- uid: System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: OdbcDataReader.GetOrdinal(String)
  fullName: System.Data.Odbc.OdbcDataReader.GetOrdinal(String)
- uid: System.Data.Odbc.OdbcDataReader.GetSchemaTable
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: OdbcDataReader.GetSchemaTable()
  fullName: System.Data.Odbc.OdbcDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Odbc.OdbcDataReader.GetString(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: OdbcDataReader.GetString(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetString(Int32)
- uid: System.Data.Odbc.OdbcDataReader.GetTime(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetTime(Int32)
  nameWithType: OdbcDataReader.GetTime(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetTime(Int32)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Data.Odbc.OdbcDataReader.GetValue(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: OdbcDataReader.GetValue(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcDataReader.GetValues(System.Object[])
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: OdbcDataReader.GetValues(Object[])
  fullName: System.Data.Odbc.OdbcDataReader.GetValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Odbc.OdbcDataReader.HasRows
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: HasRows
  nameWithType: OdbcDataReader.HasRows
  fullName: System.Data.Odbc.OdbcDataReader.HasRows
- uid: System.Data.Odbc.OdbcDataReader.IsClosed
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: IsClosed
  nameWithType: OdbcDataReader.IsClosed
  fullName: System.Data.Odbc.OdbcDataReader.IsClosed
- uid: System.Data.Odbc.OdbcDataReader.IsDBNull(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: OdbcDataReader.IsDBNull(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.IsDBNull(Int32)
- uid: System.Data.Odbc.OdbcDataReader.Item(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Item(Int32)
  nameWithType: OdbcDataReader.Item(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.Item(Int32)
- uid: System.Data.Odbc.OdbcDataReader.Item(System.String)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Item(String)
  nameWithType: OdbcDataReader.Item(String)
  fullName: System.Data.Odbc.OdbcDataReader.Item(String)
- uid: System.Data.Odbc.OdbcDataReader.NextResult
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: NextResult()
  nameWithType: OdbcDataReader.NextResult()
  fullName: System.Data.Odbc.OdbcDataReader.NextResult()
- uid: System.Data.Odbc.OdbcDataReader.Read
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Read()
  nameWithType: OdbcDataReader.Read()
  fullName: System.Data.Odbc.OdbcDataReader.Read()
- uid: System.Data.Odbc.OdbcDataReader.RecordsAffected
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: OdbcDataReader.RecordsAffected
  fullName: System.Data.Odbc.OdbcDataReader.RecordsAffected
- uid: System.Data.Odbc.OdbcDataReader.Close*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Close
  nameWithType: OdbcDataReader.Close
- uid: System.Data.Odbc.OdbcDataReader.Depth*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Depth
  nameWithType: OdbcDataReader.Depth
- uid: System.Data.Odbc.OdbcDataReader.Dispose*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Dispose
  nameWithType: OdbcDataReader.Dispose
- uid: System.Data.Odbc.OdbcDataReader.FieldCount*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: FieldCount
  nameWithType: OdbcDataReader.FieldCount
- uid: System.Data.Odbc.OdbcDataReader.GetBoolean*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetBoolean
  nameWithType: OdbcDataReader.GetBoolean
- uid: System.Data.Odbc.OdbcDataReader.GetByte*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetByte
  nameWithType: OdbcDataReader.GetByte
- uid: System.Data.Odbc.OdbcDataReader.GetBytes*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetBytes
  nameWithType: OdbcDataReader.GetBytes
- uid: System.Data.Odbc.OdbcDataReader.GetChar*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetChar
  nameWithType: OdbcDataReader.GetChar
- uid: System.Data.Odbc.OdbcDataReader.GetChars*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetChars
  nameWithType: OdbcDataReader.GetChars
- uid: System.Data.Odbc.OdbcDataReader.GetDataTypeName*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: OdbcDataReader.GetDataTypeName
- uid: System.Data.Odbc.OdbcDataReader.GetDate*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDate
  nameWithType: OdbcDataReader.GetDate
- uid: System.Data.Odbc.OdbcDataReader.GetDateTime*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDateTime
  nameWithType: OdbcDataReader.GetDateTime
- uid: System.Data.Odbc.OdbcDataReader.GetDecimal*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDecimal
  nameWithType: OdbcDataReader.GetDecimal
- uid: System.Data.Odbc.OdbcDataReader.GetDouble*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDouble
  nameWithType: OdbcDataReader.GetDouble
- uid: System.Data.Odbc.OdbcDataReader.GetEnumerator*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetEnumerator
  nameWithType: OdbcDataReader.GetEnumerator
- uid: System.Data.Odbc.OdbcDataReader.GetFieldType*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetFieldType
  nameWithType: OdbcDataReader.GetFieldType
- uid: System.Data.Odbc.OdbcDataReader.GetFloat*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetFloat
  nameWithType: OdbcDataReader.GetFloat
- uid: System.Data.Odbc.OdbcDataReader.GetGuid*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetGuid
  nameWithType: OdbcDataReader.GetGuid
- uid: System.Data.Odbc.OdbcDataReader.GetInt16*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetInt16
  nameWithType: OdbcDataReader.GetInt16
- uid: System.Data.Odbc.OdbcDataReader.GetInt32*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetInt32
  nameWithType: OdbcDataReader.GetInt32
- uid: System.Data.Odbc.OdbcDataReader.GetInt64*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetInt64
  nameWithType: OdbcDataReader.GetInt64
- uid: System.Data.Odbc.OdbcDataReader.GetName*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetName
  nameWithType: OdbcDataReader.GetName
- uid: System.Data.Odbc.OdbcDataReader.GetOrdinal*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetOrdinal
  nameWithType: OdbcDataReader.GetOrdinal
- uid: System.Data.Odbc.OdbcDataReader.GetSchemaTable*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: OdbcDataReader.GetSchemaTable
- uid: System.Data.Odbc.OdbcDataReader.GetString*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetString
  nameWithType: OdbcDataReader.GetString
- uid: System.Data.Odbc.OdbcDataReader.GetTime*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetTime
  nameWithType: OdbcDataReader.GetTime
- uid: System.Data.Odbc.OdbcDataReader.GetValue*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetValue
  nameWithType: OdbcDataReader.GetValue
- uid: System.Data.Odbc.OdbcDataReader.GetValues*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetValues
  nameWithType: OdbcDataReader.GetValues
- uid: System.Data.Odbc.OdbcDataReader.HasRows*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: HasRows
  nameWithType: OdbcDataReader.HasRows
- uid: System.Data.Odbc.OdbcDataReader.IsClosed*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: IsClosed
  nameWithType: OdbcDataReader.IsClosed
- uid: System.Data.Odbc.OdbcDataReader.IsDBNull*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: IsDBNull
  nameWithType: OdbcDataReader.IsDBNull
- uid: System.Data.Odbc.OdbcDataReader.Item*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Item
  nameWithType: OdbcDataReader.Item
- uid: System.Data.Odbc.OdbcDataReader.NextResult*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: NextResult
  nameWithType: OdbcDataReader.NextResult
- uid: System.Data.Odbc.OdbcDataReader.Read*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Read
  nameWithType: OdbcDataReader.Read
- uid: System.Data.Odbc.OdbcDataReader.RecordsAffected*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: OdbcDataReader.RecordsAffected
