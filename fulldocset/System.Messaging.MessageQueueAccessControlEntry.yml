### YamlMime:ManagedReference
items:
- uid: System.Messaging.MessageQueueAccessControlEntry
  id: MessageQueueAccessControlEntry
  children:
  - System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)
  - System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)
  - System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights
  langs:
  - csharp
  name: MessageQueueAccessControlEntry
  nameWithType: MessageQueueAccessControlEntry
  fullName: System.Messaging.MessageQueueAccessControlEntry
  type: Class
  summary: "Specifica i diritti di accesso per un elemento trusted (utente, gruppo o computer) per eseguire operazioni di Accodamento messaggi."
  remarks: "Use the MessageQueueAccessControlEntry class to specify rights to apply to a trustee. These rights include peeking, receiving, or sending messages; viewing or modifying queue properties or permissions; and deleting queues. The <xref:System.Messaging.MessageQueue> class's <xref:System.Messaging.MessageQueue.SetPermissions%2A> method provides overloads for passing an instance of this class directly into the method, or adding it to an instance of <xref:System.Messaging.AccessControlList> so that you can add rights for more than one trustee at a time. The new access right is appended to the end of the queue's discretionary access control list (DACL), which identifies the users and groups that can access the queue.  \n  \n There are some exceptions to this generalization about where the new right is added and its effects. For more information, see <xref:System.Messaging>.  \n  \n An overload of the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor allows you specify a <xref:System.Messaging.AccessControlEntryType> member to indicate whether to allow or deny rights to the trustee. The order in which rights are allowed or denied in the resource's DACL affects whether the trustee has the specified rights. For example, if rights have already been granted to the trustee and you later add an entry that denies them, the system finds the granted rights first, so the user is granted rights you might have intended they be denied. You can use two entry types to override this behavior: `Set` and `Revoke`. For more information about controlling the way in which access rights are determined, see the <xref:System.Messaging.AccessControlEntryType> enumeration topic.  \n  \n The MessageQueueAccessControlEntry class is associated with security based on access control lists (ACLs), which you can use to give users access to the Message Queuing system itself. This is different from code access security, which is implemented through the <xref:System.Messaging.MessageQueuePermission> and related classes. Message Queuing code access security defines queue-specific operations or queue access that an application might require which is subject to security control; it does not represent a right for the application to perform these operations or receive access in and of itself. See the topic [&#91;\\<topic://cpconcodeaccesssecurity>&#93;](http://msdn.microsoft.com/en-us/23a20143-241d-4fe5-9d9f-3933fd594c03) for more information about code access security.  \n  \n To set message queue permissions for a trustee, create a new instance of the <xref:System.Messaging.AccessControlEntry.Trustee%2A> class and pass it into an overload of the <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A> constructor. Specify the message queue access rights either by passing an instance of <xref:System.Messaging.MessageQueueAccessRights> into the constructor or by setting the <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A> property on an existing MessageQueueAccessControlEntry instance.  \n  \n You can then pass the MessageQueueAccessControlEntry instance directly to the <xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName> method, or alternately add the entry to an instance of <xref:System.Messaging.AccessControlList> before calling <xref:System.Messaging.MessageQueue.SetPermissions%2A>."
  syntax:
    content: 'public class MessageQueueAccessControlEntry : System.Messaging.AccessControlEntry'
  inheritance:
  - System.Object
  - System.Messaging.AccessControlEntry
  implements: []
  inheritedMembers:
  - System.Messaging.AccessControlEntry.CustomAccessRights
  - System.Messaging.AccessControlEntry.EntryType
  - System.Messaging.AccessControlEntry.GenericAccessRights
  - System.Messaging.AccessControlEntry.StandardAccessRights
  - System.Messaging.AccessControlEntry.Trustee
  platform:
  - net462
- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)
  id: '#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)'
  parent: System.Messaging.MessageQueueAccessControlEntry
  langs:
  - csharp
  name: MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights)
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights)
  fullName: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Messaging.MessageQueueAccessControlEntry&quot;> </xref> (classe), concedere i diritti di accesso l&quot;accodamento messaggi specificati per il dominio trusted specificato."
  remarks: "Utilizzare questo overload del costruttore di concedere diritti per il dominio trusted specificato. I diritti specificati nel `rights` parametro sono una combinazione bit per bit dei membri del <xref:System.Messaging.MessageQueueAccessRights>flag di bit che include tali diritti come la ricezione di messaggi, l&quot;eliminazione di code e impostare le proprietà della coda.</xref:System.Messaging.MessageQueueAccessRights> Il costruttore utilizza i diritti passati per impostare l&quot;istanza <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A>proprietà.</xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A>       Passare a questa istanza di <xref:System.Messaging.MessageQueueAccessControlEntry>direttamente in un overload del <xref:System.Messaging.MessageQueue.SetPermissions%2A>per concedere diritti solo a questo dominio trusted o aggiungerla a un <xref:System.Messaging.AccessControlList>prima di chiamare <xref:System.Messaging.MessageQueue.SetPermissions%2A>per concedere o negare diritti a più trustee contemporaneamente.</xref:System.Messaging.MessageQueue.SetPermissions%2A> </xref:System.Messaging.AccessControlList> </xref:System.Messaging.MessageQueue.SetPermissions%2A> </xref:System.Messaging.MessageQueueAccessControlEntry>"
  syntax:
    content: public MessageQueueAccessControlEntry (System.Messaging.Trustee trustee, System.Messaging.MessageQueueAccessRights rights);
    parameters:
    - id: trustee
      type: System.Messaging.Trustee
      description: "Oggetto <xref href=&quot;System.Messaging.Trustee&quot;> </xref> che specifica un utente, gruppo, computer, dominio o alias."
    - id: rights
      type: System.Messaging.MessageQueueAccessRights
      description: "Combinazione bit per bit di <xref href=&quot;System.Messaging.MessageQueueAccessRights&quot;> </xref> valori che definisce la combinazione di diritti da concedere al dominio trusted."
  overload: System.Messaging.MessageQueueAccessControlEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)
  id: '#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)'
  parent: System.Messaging.MessageQueueAccessControlEntry
  langs:
  - csharp
  name: MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights,AccessControlEntryType)
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights,AccessControlEntryType)
  fullName: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights,AccessControlEntryType)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Messaging.MessageQueueAccessControlEntry&quot;> </xref> (classe), con il fiduciario specificato e i diritti di accesso di Accodamento messaggi. Il tipo di accesso (ad esempio <xref uid=&quot;langword_csharp_Allow&quot; name=&quot;Allow&quot; href=&quot;&quot;> </xref> o <xref uid=&quot;langword_csharp_Deny&quot; name=&quot;Deny&quot; href=&quot;&quot;> </xref>) è definito dal tipo di voce viene passato."
  remarks: "Utilizzare questo overload del costruttore per concedere o negare i diritti per il dominio trusted specificato. I diritti specificati nel `rights` parametro sono una combinazione bit per bit dei membri del <xref:System.Messaging.MessageQueueAccessRights>flag di bit che include tali diritti come la ricezione di messaggi, l&quot;eliminazione di code e impostare le proprietà della coda.</xref:System.Messaging.MessageQueueAccessRights> Il costruttore utilizza i diritti passati per impostare l&quot;istanza <xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A>proprietà.</xref:System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights%2A>       Per ulteriori informazioni sulla concessione o negazione di diritti, vedere il <xref:System.Messaging.AccessControlEntryType>argomento.</xref:System.Messaging.AccessControlEntryType> Per i due membri, `Allow` e `Deny`, potrebbe essere preesistenti e contraddittori diritti di accesso, l&quot;ordine in cui i diritti vengono visualizzate nell&quot;elenco di controllo della coda di accesso discrezionale (DACL) determina la concesso alla fine. Altri due membri, `Set` e `Revoke`, sovrascrivere tutti i diritti esistenti. Utilizzare il membro il cui comportamento è applicabile all&quot;applicazione.       Passare a questa istanza di <xref:System.Messaging.MessageQueueAccessControlEntry>direttamente in un overload di <xref:System.Messaging.MessageQueue.SetPermissions%2A>metodo per concedere o negare diritti solo a questo dominio trusted o aggiungerla a un <xref:System.Messaging.AccessControlList>prima di chiamare <xref:System.Messaging.MessageQueue.SetPermissions%2A>per concedere o negare diritti a più trustee contemporaneamente.</xref:System.Messaging.MessageQueue.SetPermissions%2A> </xref:System.Messaging.AccessControlList> </xref:System.Messaging.MessageQueue.SetPermissions%2A> </xref:System.Messaging.MessageQueueAccessControlEntry>"
  syntax:
    content: public MessageQueueAccessControlEntry (System.Messaging.Trustee trustee, System.Messaging.MessageQueueAccessRights rights, System.Messaging.AccessControlEntryType entryType);
    parameters:
    - id: trustee
      type: System.Messaging.Trustee
      description: "Oggetto <xref href=&quot;System.Messaging.Trustee&quot;> </xref> che specifica un utente, gruppo, computer, dominio o alias."
    - id: rights
      type: System.Messaging.MessageQueueAccessRights
      description: "Combinazione bit per bit di <xref href=&quot;System.Messaging.MessageQueueAccessRights&quot;> </xref> valori che definisce la combinazione di diritti da concedere al dominio trusted."
    - id: entryType
      type: System.Messaging.AccessControlEntryType
      description: "Uno del <xref href=&quot;System.Messaging.AccessControlEntryType&quot;> </xref> valori, che specifica se consentire, deny, impostare o revocare i diritti specificati."
  overload: System.Messaging.MessageQueueAccessControlEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights
  id: MessageQueueAccessRights
  parent: System.Messaging.MessageQueueAccessControlEntry
  langs:
  - csharp
  name: MessageQueueAccessRights
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessRights
  fullName: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Ottiene o imposta il set di diritti specifici di Accodamento messaggi da applicare al dominio trusted."
  remarks: "La proprietà MessageQueueAccessRights consente di specificare i diritti specifici dell&quot;oggetto di Accodamento messaggi, ad esempio la ricezione, lettura o scrittura di messaggi o impostando le proprietà della coda. Il valore di questa proprietà viene impostato dal <xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A>costruttore, ma è possibile modificarlo in qualsiasi momento prima di utilizzare questa istanza <xref:System.Messaging.MessageQueueAccessControlEntry>in una chiamata a <xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName>.</xref:System.Messaging.MessageQueue.SetPermissions%2A?displayProperty=fullName> </xref:System.Messaging.MessageQueueAccessControlEntry> </xref:System.Messaging.MessageQueueAccessControlEntry.%23ctor%2A>"
  syntax:
    content: public System.Messaging.MessageQueueAccessRights MessageQueueAccessRights { get; set; }
    return:
      type: System.Messaging.MessageQueueAccessRights
      description: "Combinazione bit per bit di <xref href=&quot;System.Messaging.MessageQueueAccessRights&quot;> </xref> membri. Il valore predefinito è definito per il <code> rights </code> parametro passato al costruttore."
  overload: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Messaging.AccessControlEntry
  isExternal: false
  name: System.Messaging.AccessControlEntry
- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights)
  parent: System.Messaging.MessageQueueAccessControlEntry
  isExternal: false
  name: MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights)
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights)
  fullName: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights)
- uid: System.Messaging.Trustee
  parent: System.Messaging
  isExternal: false
  name: Trustee
  nameWithType: Trustee
  fullName: System.Messaging.Trustee
- uid: System.Messaging.MessageQueueAccessRights
  parent: System.Messaging
  isExternal: false
  name: MessageQueueAccessRights
  nameWithType: MessageQueueAccessRights
  fullName: System.Messaging.MessageQueueAccessRights
- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.MessageQueueAccessRights,System.Messaging.AccessControlEntryType)
  parent: System.Messaging.MessageQueueAccessControlEntry
  isExternal: false
  name: MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights,AccessControlEntryType)
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights,AccessControlEntryType)
  fullName: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessControlEntry(Trustee,MessageQueueAccessRights,AccessControlEntryType)
- uid: System.Messaging.AccessControlEntryType
  parent: System.Messaging
  isExternal: false
  name: AccessControlEntryType
  nameWithType: AccessControlEntryType
  fullName: System.Messaging.AccessControlEntryType
- uid: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights
  parent: System.Messaging.MessageQueueAccessControlEntry
  isExternal: false
  name: MessageQueueAccessRights
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessRights
  fullName: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights
- uid: System.Messaging.MessageQueueAccessControlEntry.#ctor*
  parent: System.Messaging.MessageQueueAccessControlEntry
  isExternal: false
  name: MessageQueueAccessControlEntry
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessControlEntry
- uid: System.Messaging.MessageQueueAccessControlEntry.MessageQueueAccessRights*
  parent: System.Messaging.MessageQueueAccessControlEntry
  isExternal: false
  name: MessageQueueAccessRights
  nameWithType: MessageQueueAccessControlEntry.MessageQueueAccessRights
