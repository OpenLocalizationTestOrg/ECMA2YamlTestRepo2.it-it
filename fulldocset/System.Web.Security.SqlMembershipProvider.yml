### YamlMime:ManagedReference
items:
- uid: System.Web.Security.SqlMembershipProvider
  id: SqlMembershipProvider
  children:
  - System.Web.Security.SqlMembershipProvider.#ctor
  - System.Web.Security.SqlMembershipProvider.ApplicationName
  - System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)
  - System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  - System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  - System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.SqlMembershipProvider.GeneratePassword
  - System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline
  - System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)
  - System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)
  - System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)
  - System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  - System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  - System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  - System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  - System.Web.Security.SqlMembershipProvider.PasswordFormat
  - System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  - System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  - System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  - System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)
  - System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  - System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)
  langs:
  - csharp
  name: SqlMembershipProvider
  nameWithType: SqlMembershipProvider
  fullName: System.Web.Security.SqlMembershipProvider
  type: Class
  summary: "Gestisce l&quot;archiviazione delle informazioni di appartenenza per un&quot;applicazione ASP.NET in un database di SQL Server."
  remarks: "This class is used by the <xref:System.Web.Security.Membership> and <xref:System.Web.Security.MembershipUser> classes to provide membership services for an ASP.NET application using a SQL Server database. You cannot use a SqlMembershipProvider without SQL Server. When your computer has SQL Server Express installed with the default instance name and user-instancing enabled, the SqlMembershipProvider object will create a database called `aspnetdb` in the application's `App_Data` directory the first time the application is run.  \n  \n To manually create the database, run the `Aspnet_regsql.exe` executable found in the `%systemroot%\\Microsoft.NET\\Framework\\ versionNumber` folder and specify the `-A m` option (for example `aspnet_regsql.exe -A m`). The database created is called Aspnetdb. Alternatively, run `Aspnet_regsql.exe` to pull up the GUI configuration mode and choose to configure all ASP.NET Features.  \n  \n If the membership provider is configured with a connection string that uses integrated security, the process account of the ASP.NET application must have rights to connect to the SQL Server database.  \n  \n The Machine.config file defines a default SqlMembershipProvider instance named `AspNetSqlMembershipProvider` that connects to the default SQL Server Express instance on the local machine. You can use this instance of the provider if you installed SQL Server Express with the default instance name, or you can define your own instance in the Web.config file for your ASP.NET application.  \n  \n If you set the `passwordCompatMode` attribute to <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>, the application can use the hashing and encryption membership options that were added in ASP.NET 4. However, if the `passwordCompatMode` attribute is set to <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>, only the hashing and encryption membership options from the ASP.NET 2.0, ASP.NET 3.5, and ASP.NET 3.5 SP1 can be used. The default value is <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>. For more information, see <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>."
  example:
  - "The following code example shows the Web.config file for an ASP.NET application configured to use a SqlMembershipProvider.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\"  \n        name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n    <authorization>  \n      <deny users=\"?\" />  \n    </authorization>  \n    <membership defaultProvider=\"SqlProvider\"  \n      userIsOnlineTimeWindow=\"15\">  \n      <providers>  \n        <add   \n          name=\"SqlProvider\"   \n          type=\"System.Web.Security.SqlMembershipProvider\"   \n          connectionStringName=\"SqlServices\"  \n          applicationName=\"MyApplication\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"  \n          requiresUniqueEmail=\"false\"  \n          passwordFormat=\"Hashed\"  \n          maxInvalidPasswordAttempts=\"5\"  \n          passwordAttemptWindow=\"10\" />  \n      </providers>  \n    </membership>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public class SqlMembershipProvider : System.Web.Security.MembershipProvider'
  inheritance:
  - System.Web.Security.MembershipProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.#ctor
  id: '#ctor'
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: SqlMembershipProvider()
  nameWithType: SqlMembershipProvider.SqlMembershipProvider()
  fullName: System.Web.Security.SqlMembershipProvider.SqlMembershipProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.Security.SqlMembershipProvider&quot;> </xref> classe."
  remarks: "Il costruttore SqlMembershipProvider viene chiamato da ASP.NET per creare un&quot;istanza di <xref:System.Web.Security.SqlMembershipProvider>classe come specificato nella configurazione per l&quot;applicazione.</xref:System.Web.Security.SqlMembershipProvider> Questo costruttore non deve essere utilizzato dal codice."
  syntax:
    content: public SqlMembershipProvider ();
    parameters: []
  overload: System.Web.Security.SqlMembershipProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: SqlMembershipProvider.ApplicationName
  fullName: System.Web.Security.SqlMembershipProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene o imposta il nome dell&quot;applicazione da archiviare e recuperare informazioni di appartenenza."
  remarks: "ApplicationName viene utilizzato il <xref:System.Web.Security.SqlMembershipProvider>per raggruppare le informazioni utente.</xref:System.Web.Security.SqlMembershipProvider> Specificando le informazioni utente con un nome dell&quot;applicazione, è possibile archiviare le informazioni per più applicazioni in un singolo database senza che si verifichino conflitti tra nomi utente duplicati. Inoltre, più applicazioni ASP.NET è possono utilizzare lo stesso database utente specificando lo stesso valore nella proprietà ApplicationName. La proprietà ApplicationName può essere impostata a livello di programmazione, o può essere impostata in modo dichiarativo nel file di configurazione per l&quot;applicazione Web con il `applicationName` attributo.       Se non è stato specificato un valore per il `applicationName` attributo nel file di configurazione per l&quot;applicazione Web, quindi il <xref:System.Web.HttpRequest.ApplicationPath%2A>viene utilizzato il valore della proprietà per la prima richiesta all&quot;applicazione.</xref:System.Web.HttpRequest.ApplicationPath%2A>      > [!CAUTION] > Poiché un&quot;istanza del provider di appartenenze predefinito singolo viene utilizzata per tutte le richieste gestite da un <xref:System.Web.HttpApplication>dell&quot;oggetto, è possibile avere più richieste in esecuzione contemporaneamente e si tenta di impostare il valore della proprietà ApplicationName.</xref:System.Web.HttpApplication> La proprietà ApplicationName non è thread-safe per più operazioni di scrittura e modifica il valore della proprietà ApplicationName può causare un comportamento imprevisto per più utenti di un&quot;applicazione. È consigliabile evitare di scrivere codice per consentire agli utenti di impostare la proprietà ApplicationName, a meno che non è necessario. Un esempio di un&quot;applicazione in cui potrebbe essere necessario impostare la proprietà ApplicationName è un&quot;applicazione amministrativa che gestisce i dati di appartenenza per più applicazioni. Questo tipo di applicazione deve essere un utente singolo e non è un&quot;applicazione Web."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and sets the ApplicationName to `MyApplication`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Il nome dell&quot;applicazione da archiviare e recuperare informazioni di appartenenza. Il valore predefinito è il <> </> *> valore della proprietà per l&quot;oggetto corrente <> </> *>."
  overload: System.Web.Security.SqlMembershipProvider.ApplicationName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Si è verificato un tentativo di impostare la proprietà ApplicationName su una stringa vuota o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "È stato effettuato un tentativo di impostare la proprietà ApplicationName a una stringa che contiene più di 256 caratteri."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)
  id: ChangePassword(System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ChangePassword(String,String,String)
  nameWithType: SqlMembershipProvider.ChangePassword(String,String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ChangePassword(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Modifica password di un utente."
  remarks: "Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership>classe per aggiornare la password per un utente nel database di SQL Server specificato nel file di configurazione dell&quot;applicazione ASP.NET (Web. config).</xref:System.Web.Security.Membership>       La lunghezza massima della password è 128 caratteri.       Se il metodo ChangePassword viene fornita una password non corretta, viene incrementato il contatore interno che tiene traccia dei tentativi di password non valida da uno. Ciò può causare l&quot;utente viene bloccato e non è possibile accedere finché non viene eliminato lo stato di blocco da una chiamata al <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>metodo.</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Se viene fornita la password corretta e l&quot;utente non sia attualmente bloccato, quindi i contatori interni che traccia la password non valida-risposta per la password vengono reimpostati su zero. Per ulteriori informazioni, vedere il <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>proprietà.</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>       È possibile chiamare il metodo ChangePassword direttamente da necessario ottenere un riferimento all&quot; <xref:System.Web.Security.SqlMembershipProvider>istanza tramite la <xref:System.Web.Security.Membership.Provider%2A>proprietà di <xref:System.Web.Security.Membership>classe.</xref:System.Web.Security.Membership> </xref:System.Web.Security.Membership.Provider%2A> </xref:System.Web.Security.SqlMembershipProvider> Il <xref:System.Web.Security.Membership.Provider%2A>proprietà espone il `defaultProvider` specificato nel file Web. config per l&quot;applicazione.</xref:System.Web.Security.Membership.Provider%2A> Provider configurati che non sono il provider predefinito a cui fa riferimento tramite il <xref:System.Web.Security.Membership.Providers%2A>proprietà.</xref:System.Web.Security.Membership.Providers%2A>       È inoltre possibile modificare le password utente utilizzando il <xref:System.Web.Security.MembershipUser.ChangePassword%2A>metodo.</xref:System.Web.Security.MembershipUser.ChangePassword%2A>       Spazi iniziali e finali vengono rimossi da tutti i valori di parametro."
  example:
  - "The following code example modifies the password for the specified user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#3](~/add/codesnippet/csharp/baafd90e-fc24-4306-ac18-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#3](~/add/codesnippet/visualbasic/baafd90e-fc24-4306-ac18-_1.aspx)]"
  syntax:
    content: public override bool ChangePassword (string username, string oldPassword, string newPassword);
    parameters:
    - id: username
      type: System.String
      description: "All&quot;utente di aggiornare la password."
    - id: oldPassword
      type: System.String
      description: "La password corrente per l&quot;utente specificato."
    - id: newPassword
      type: System.String
      description: "La nuova password per l&quot;utente specificato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la password è stata aggiornata correttamente. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se la vecchia password non è valida, l&quot;utente è bloccato oppure l&quot;utente non esiste nel database."
  overload: System.Web.Security.SqlMembershipProvider.ChangePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>oldPassword</code> is an empty string or longer than 128 characters.  \n  \n \\- or -  \n  \n <code>newPassword</code> is an empty string or longer than 128 characters.  \n  \n \\- or -  \n  \n The encoded version of <code>newPassword</code> is greater than 128 characters.  \n  \n \\- or -  \n  \n The change-password action was canceled by a subscriber to the <xref href=\"System.Web.Security.Membership.ValidatingPassword\"></xref> event, and the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation*> property was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The length of <code>newPassword</code> is less than the minimum length specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength*> property.  \n  \n \\- or -  \n  \n The number of non-alphabetic characters in <code>newPassword</code> is less than the required number of non-alphabetic characters specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters*> property.  \n  \n \\- or -  \n  \n <code>newPassword</code> does not pass the regular expression defined in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression*> property."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>oldPassword</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>newPassword</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.Web.Security.MembershipPasswordException
    commentId: T:System.Web.Security.MembershipPasswordException
    description: "<code>username</code>non è stato trovato nel database."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Si è verificato un errore durante l&quot;impostazione il valore della nuova password nel database."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Si è verificata un&quot;eccezione non gestita."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  id: ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ChangePasswordQuestionAndAnswer(String,String,String,String)
  nameWithType: SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Aggiorna la domanda segreta e la risposta per un utente nel database delle appartenenze di SQL Server."
  remarks: "Questo metodo viene chiamato dalla <xref:System.Web.Security.MembershipUser>classe per aggiornare la domanda segreta e la risposta per un utente nel database di SQL Server specificato nel file di configurazione dell&quot;applicazione ASP.NET (Web. config).</xref:System.Web.Security.MembershipUser> La risposta segreta viene crittografata utilizzando il formato specificato nella <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>proprietà.</xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>       La richiesta di una password segreta offre un ulteriore livello di sicurezza durante il recupero o la reimpostazione delle password di un utente. Quando si crea un nome utente, un utente può fornire una domanda e risposta che può essere utilizzato successivamente per recuperare o reimpostare una password dimenticata. Il metodo ChangePasswordQuestionAndAnswer Aggiorna la domanda segreta e la risposta per un utente di appartenenza.       Se il metodo ChangePasswordQuestionAndAnswer viene fornita una password errata, i contatori interni che tengono traccia dei tentativi di password non valida viene incrementato di uno. Ciò può causare l&quot;utente viene bloccato e non è possibile accedere finché non viene eliminato lo stato di blocco chiamando il <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>metodo.</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Se viene fornita la password corretta e l&quot;utente non sia attualmente bloccato, quindi i contatori interni che traccia la password non valida-risposta per la password vengono reimpostati su zero. Per ulteriori informazioni, vedere il <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>proprietà.</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>       La lunghezza massima per la domanda segreta è 256 caratteri. La lunghezza massima per la risposta segreta è 128 caratteri.       Per ulteriori informazioni, vedere <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>, <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>e <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.</xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> </xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> </xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>       Spazi iniziali e finali vengono rimossi da tutti i valori di parametro."
  example:
  - "The following code example updates the password question and answer for a user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#10](~/add/codesnippet/csharp/2e3c3851-f4bc-4cbf-b9de-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#10](~/add/codesnippet/visualbasic/2e3c3851-f4bc-4cbf-b9de-_1.aspx)]"
  syntax:
    content: public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);
    parameters:
    - id: username
      type: System.String
      description: "All&quot;utente di modificare la domanda segreta e la risposta per."
    - id: password
      type: System.String
      description: "La password per l&quot;utente specificato."
    - id: newPasswordQuestion
      type: System.String
      description: "Nuova domanda segreta per l&quot;utente specificato."
    - id: newPasswordAnswer
      type: System.String
      description: "Nuova risposta segreta per l&quot;utente specificato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;aggiornamento è stata completata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> viene restituito anche se il <code> password </code> non è corretto, l&quot;utente è bloccato oppure l&quot;utente non esiste nel database."
  overload: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>password</code> is an empty string or is longer than 128 characters.  \n  \n \\- or -  \n  \n <code>newPasswordQuestion</code> is an empty string or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>newPasswordAnswer</code> is an empty string or is longer than 128 characters.  \n  \n \\- or -  \n  \n The encoded version of <code>newPasswordAnswer</code> is longer than 128 characters."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>password</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>newPasswordQuestion</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>newPasswordAnswer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Si è verificato un errore quando si modifica la domanda segreta e la risposta nel database."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Aggiunge un nuovo utente al database delle appartenenze di SQL Server."
  remarks: "Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership>classe per creare un nuovo utente nel database di SQL Server specificato nel file di configurazione dell&quot;applicazione ASP.NET.</xref:System.Web.Security.Membership>       Nuovi utenti vengono identificati con configurato <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>       Se il <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>è impostata su `true`, e `null` o una stringa vuota (&quot;&quot;) viene specificato per il `email` parametro, la creazione dell&quot;utente non riuscirà.</xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> La creazione dell&quot;utente avrà inoltre esito negativo se il <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>è impostata su `true` e il valore specificato per il `email` parametro è un duplicato dell&quot;indirizzo di posta elettronica per un utente esistente nel database per configurato <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> </xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>       La lunghezza massima per il nome utente è 256 caratteri. La lunghezza massima per l&quot;indirizzo di posta elettronica è 256 caratteri. La lunghezza massima per la password in testo non crittografato o dopo che è stato eseguito l&quot;hashing o crittografato è 128 caratteri.       Altre condizioni che impediscono la creazione di utenti di: - il `password` parametro `null`, o una stringa vuota dopo la rimozione.      -La lunghezza del `password` parametro è minore del valore specificato nella <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>proprietà.</xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>      -Il numero di caratteri non alfabetici il `password` parametro è minore del valore specificato nella <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>proprietà.</xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>      -La `password` parametro non supera all&quot;espressione regolare di <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>proprietà.</xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>      -Codice di convalida della password personalizzato annullata durante la creazione dell&quot;utente il <xref:System.Web.Security.MembershipProvider.ValidatingPassword>evento.</xref:System.Web.Security.MembershipProvider.ValidatingPassword>      -Il <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>proprietà `true` e `passwordAnswer` parametro `null` o una stringa vuota dopo la rimozione.</xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>      -La `passwordAnswer` parametro è una stringa vuota.      -La `passwordAnswer` parametro è più lungo di 128 caratteri.      -La <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>proprietà `true` e la domanda segreta è `null` o una stringa vuota dopo la rimozione.</xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>      -La `passwordQuestion` parametro è una stringa vuota.      -La `passwordQuestion` parametro è supera a 256 caratteri.      -La `providerUserKey` parametro impostato su un oggetto di un tipo diverso da <xref:System.Guid?displayProperty=fullName>.</xref:System.Guid?displayProperty=fullName>      -La `providerUserKey` parametro è un duplicato di una chiave utente esistente.      -La `username` parametro è un duplicato di un nome utente esistente.       Spazi iniziali e finali vengono rimossi da tutti i valori di parametro di stringa."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.SqlMembershipProvider>. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the sign-in page for the application.  \n  \n> [!NOTE]\n>  This sample calls the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file using the <xref:System.Web.Security.Membership> class. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/a42f3c7c-ac38-4fa9-93d4-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/a42f3c7c-ac38-4fa9-93d4-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "Il nome utente per il nuovo utente."
    - id: password
      type: System.String
      description: "La password per il nuovo utente."
    - id: email
      type: System.String
      description: "L&quot;indirizzo di posta elettronica per il nuovo utente."
    - id: passwordQuestion
      type: System.String
      description: "Domanda segreta per il nuovo utente."
    - id: passwordAnswer
      type: System.String
      description: "Risposta segreta per il nuovo utente."
    - id: isApproved
      type: System.Boolean
      description: "Il nuovo utente è o meno approvato da convalidare."
    - id: providerUserKey
      type: System.Object
      description: "Oggetto <xref:System.Guid>che identifica in modo univoco l&quot;utente di appartenenza nel database di SQL Server.</xref:System.Guid>"
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "Uno del <xref:System.Web.Security.MembershipCreateStatus>valori, che indica se l&quot;utente è stato creato correttamente.</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "Oggetto <xref:System.Web.Security.MembershipUser>per l&quot;utente appena creato.</xref:System.Web.Security.MembershipUser> Se è stato creato alcun utente, questo metodo restituisce <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlMembershipProvider.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)
  id: DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: DeleteUser(String,Boolean)
  nameWithType: SqlMembershipProvider.DeleteUser(String,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.DeleteUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Rimuove le informazioni di appartenenza dell&quot;utente dal database delle appartenenze di SQL Server."
  remarks: "Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership>classe per rimuovere un utente dal database di SQL Server specificato nel file di configurazione dell&quot;applicazione ASP.NET.</xref:System.Web.Security.Membership>       Gli utenti eliminati vengono eliminati solo da configurato <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>       Se `deleteAllRelatedData` è impostato su `true`, tutti i dati utente archiviati nel database per il <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, o <xref:System.Web.UI.WebControls.WebParts.WebPart>per configurato <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> viene eliminata anche la funzionalità di personalizzazione</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>       Se l&quot;utente di appartenenza non esiste nel database, e `deleteAllRelatedData` è `true`, quindi i dati correlati e le informazioni utente archiviate per il <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, o <xref:System.Web.UI.WebControls.WebParts.WebPart>verranno comunque eliminate funzionalità di personalizzazione per l&quot;applicazione specificata nel <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>proprietà.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles> Di conseguenza, il DeleteUser metodo può essere utilizzato per eliminare rapidamente le informazioni relative a un utente, anche quando il <xref:System.Web.Security.SqlMembershipProvider>oggetto non viene utilizzato per archiviare le informazioni utente autenticato.</xref:System.Web.Security.SqlMembershipProvider>       Spazi iniziali e finali vengono rimossi dal `username` valore del parametro."
  example:
  - "The following code example deletes the currently logged-on user.  \n  \n> [!NOTE]\n>  This example uses <xref:System.Web.Security.SqlMembershipProvider> to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/csharp/808bac53-4bf1-477e-8865-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/visualbasic/808bac53-4bf1-477e-8865-_1.aspx)]"
  syntax:
    content: public override bool DeleteUser (string username, bool deleteAllRelatedData);
    parameters:
    - id: username
      type: System.String
      description: "Il nome dell&quot;utente da eliminare."
    - id: deleteAllRelatedData
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per eliminare i dati relativi all&quot;utente del database. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per lasciare i dati relativi all&quot;account utente nel database."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;utente è stato eliminato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> viene restituito anche se l&quot;utente non esiste nel database."
  overload: System.Web.Security.SqlMembershipProvider.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>è una stringa vuota (&quot;&quot;), contiene una virgola o supera i 256 caratteri."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  id: EnablePasswordReset
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: EnablePasswordReset
  nameWithType: SqlMembershipProvider.EnablePasswordReset
  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene un valore che indica se il provider di appartenenze di SQL Server è configurato per consentire agli utenti di reimpostare la password."
  remarks: "La reimpostazione della password consente al provider di appartenenza sostituire il corrente password per un nome utente con una nuova password generata casualmente. Ciò è particolarmente utile quando il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>è impostata su <xref:System.Web.Security.MembershipPasswordFormat>, come gli utenti non possono recuperare i valori hash delle password.</xref:System.Web.Security.MembershipPasswordFormat> </xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and enables password reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool EnablePasswordReset { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il provider di appartenenze supporta la reimpostazione della password; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlMembershipProvider.EnablePasswordReset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  id: EnablePasswordRetrieval
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: EnablePasswordRetrieval
  nameWithType: SqlMembershipProvider.EnablePasswordRetrieval
  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene un valore che indica se il provider di appartenenze di SQL Server è configurato per consentire agli utenti di recuperare la propria password."
  remarks: "Se il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>è impostata su <xref:System.Web.Security.MembershipPasswordFormat>, un utente non sarà in grado di recuperare la propria password esistenti dal database.</xref:System.Web.Security.MembershipPasswordFormat> </xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> Il <xref:System.Web.Security.MembershipPasswordFormat>formato di password consente la codifica unidirezionale delle password.</xref:System.Web.Security.MembershipPasswordFormat> Le password sono sottoposti ad hashing con un valore salt generato casualmente e rispetto ai valori archiviati nel database per l&quot;autenticazione. Valori hash non possono essere decodificati per recuperare il valore della password originale.       Se il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>è impostata su <xref:System.Web.Security.MembershipPasswordFormat>, ed EnablePasswordRetrieval è impostato su `true`, <xref:System.Configuration.Provider.ProviderException>viene generata quando viene inizializzato il provider.</xref:System.Configuration.Provider.ProviderException> </xref:System.Web.Security.MembershipPasswordFormat> </xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and enables password retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"false\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool EnablePasswordRetrieval { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il provider di appartenenze supporta il recupero della password; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Restituisce una raccolta di utenti di appartenenza per il quale il campo indirizzo di posta elettronica contiene l&quot;indirizzo di posta elettronica specificato."
  remarks: "FindUsersByEmail restituisce un elenco degli utenti di appartenenza in cui l&quot;indirizzo di posta elettronica contiene una corrispondenza con il parametro fornito `emailToMatch` per configurato <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>       Il <xref:System.Web.Security.SqlMembershipProvider>esegue la ricerca di un nome utente corrispondente il `emailToMatch` valore del parametro, utilizzando la clausola LIKE.</xref:System.Web.Security.SqlMembershipProvider> Caratteri jolly di SQL Server possono essere inclusi nel valore del parametro. Ad esempio, se il `emailToMatch` parametro è impostato su &quot;address@example.com&quot;, quindi le informazioni per gli utenti con l&quot;indirizzo di posta elettronica &quot;address@example.com&quot; viene restituito, se presente. Se il `emailToMatch` parametro è impostato su &quot;%@example.com&quot;, quindi le informazioni per gli utenti con l&quot;indirizzo di posta elettronica &quot;address@example.com&quot;,&quot;address2@example.com&quot;,&quot;admin@example.com&quot; e così via viene restituito.       I risultati restituiti da FindUsersByEmail sono limitati dal `pageIndex` e `pageSize` parametri. Il `pageSize` parametro identifica il numero massimo di <xref:System.Web.Security.MembershipUser>oggetti da restituire in <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> Il `pageIndex` parametro identifica la pagina di risultati da restituire, dove&0; indica la prima pagina. Il `totalRecords` parametro è un `out` parametro impostato sul numero totale degli utenti di appartenenza per l&quot;applicazione configurata `applicationName`. Ad esempio, se sono presenti 13 utenti per l&quot;applicazione configurata `applicationName`e `pageIndex` 1 e un `pageSize` pari a 5, il <xref:System.Web.Security.MembershipUserCollection>restituito conterrebbe dal sesto al decimo utente restituito.</xref:System.Web.Security.MembershipUserCollection> Il `totalRecords` parametro viene impostato su 13.       Spazi iniziali e finali vengono rimossi dal `emailToMatch` valore del parametro."
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information and displays the results in pages of data.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/csharp/2e443224-e510-47e7-9af2-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/visualbasic/2e443224-e510-47e7-9af2-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "L&quot;indirizzo di posta elettronica da cercare."
    - id: pageIndex
      type: System.Int32
      description: "Indice della pagina di risultati da restituire. `pageIndex`è in base zero."
    - id: pageSize
      type: System.Int32
      description: "Le dimensioni della pagina di risultati da restituire."
    - id: totalRecords
      type: System.Int32
      description: "Numero totale di utenti corrispondenti."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Oggetto <xref:System.Web.Security.MembershipUserCollection>che contiene una pagina di <code> pageSize </code> <xref:System.Web.Security.MembershipUser>oggetti iniziano alla pagina specificata da <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.SqlMembershipProvider.FindUsersByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>emailToMatch</code> is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than one.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> plus <code>pageSize</code> minus one exceeds &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene una raccolta di utenti di appartenenza in cui il nome utente contiene il nome utente specificato per la corrispondenza."
  remarks: "FindUsersByName restituisce un elenco degli utenti di appartenenza per il quale il nome utente contiene una corrispondenza con il parametro fornito `usernameToMatch` per configurato <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>       Il <xref:System.Web.Security.SqlMembershipProvider>esegue la ricerca di un nome utente corrispondente il `usernameToMatch` valore del parametro, utilizzando la clausola LIKE.</xref:System.Web.Security.SqlMembershipProvider> Caratteri jolly di SQL Server possono essere inclusi con il valore del parametro. Ad esempio, se il `usernameToMatch` parametro è impostato su &quot;user1&quot;, quindi vengono restituite informazioni utente per l&quot;utente con il nome utente &quot;User1&quot;, se presente. Se il `usernameToMatch` parametro è impostato su &quot;user %&quot;, quindi le informazioni utente per gli utenti con il nome utente di &quot;user1&quot;, &quot;user2&quot;, &quot;user_admin&quot; e così via vengono restituiti.       I risultati restituiti da FindUsersByName sono limitati dal `pageIndex` e `pageSize` parametri. Il `pageSize` parametro identifica il numero massimo di <xref:System.Web.Security.MembershipUser>oggetti da restituire in <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> Il `pageIndex` parametro identifica la pagina di risultati da restituire, dove&0; indica la prima pagina. Il `totalRecords` parametro è un `out` parametro impostato sul numero totale degli utenti di appartenenza per l&quot;applicazione configurata `applicationName`. Ad esempio, se sono presenti 13 utenti per l&quot;applicazione configurata `applicationName`e `pageIndex` 1 e un `pageSize` pari a 5, il <xref:System.Web.Security.MembershipUserCollection>restituito conterrebbe dal sesto al decimo utente restituito.</xref:System.Web.Security.MembershipUserCollection> Il `totalRecords` parametro viene impostato su 13.       Spazi iniziali e finali vengono rimossi dal `usernameToMatch` valore del parametro."
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information and displays the results in pages of data.  \n  \n> [!NOTE]\n>  This example uses System.Web.Security.SqlMembershipProvider to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/csharp/492b000d-1abf-495e-82ba-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/visualbasic/492b000d-1abf-495e-82ba-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "Il nome utente per la ricerca."
    - id: pageIndex
      type: System.Int32
      description: "Indice della pagina di risultati da restituire. `pageIndex`è in base zero."
    - id: pageSize
      type: System.Int32
      description: "Le dimensioni della pagina di risultati da restituire."
    - id: totalRecords
      type: System.Int32
      description: "Quando termina, questo metodo contiene il numero totale di utenti corrispondenti."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Oggetto <xref:System.Web.Security.MembershipUserCollection>che contiene una pagina di <code> pageSize </code> <xref:System.Web.Security.MembershipUser>oggetti iniziano alla pagina specificata da <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.SqlMembershipProvider.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code> is an empty string (\"\") or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than 1.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> plus <code>pageSize</code> minus one exceeds &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GeneratePassword
  id: GeneratePassword
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GeneratePassword()
  nameWithType: SqlMembershipProvider.GeneratePassword()
  fullName: System.Web.Security.SqlMembershipProvider.GeneratePassword()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Genera una password casuale da almeno 14 caratteri."
  remarks: "La <xref:System.Web.Security.Membership>classe fornisce un <xref:System.Web.Security.Membership.GeneratePassword%2A>metodo che genera una password di un oggetto specificato di dimensioni con almeno il numero specificato di caratteri non alfabetici.</xref:System.Web.Security.Membership.GeneratePassword%2A> </xref:System.Web.Security.Membership> Il metodo GeneratePassword <xref:System.Web.Security.SqlMembershipProvider>chiama il <xref:System.Web.Security.Membership.GeneratePassword%2A>metodo della <xref:System.Web.Security.Membership>classe per recuperare una password casuale che è pari almeno a 14 caratteri.</xref:System.Web.Security.Membership> </xref:System.Web.Security.Membership.GeneratePassword%2A> </xref:System.Web.Security.SqlMembershipProvider> Se il <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>proprietà è maggiore di 14, la password restituita sarà la lunghezza specificata nel <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>proprietà.</xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> </xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>       In particolare, è possibile chiamare il metodo GeneratePassword fare riferimento alla <xref:System.Web.Security.SqlMembershipProvider>classe direttamente dalla <xref:System.Web.Security.Membership.Provider%2A>proprietà di <xref:System.Web.Security.Membership>classe.</xref:System.Web.Security.Membership> </xref:System.Web.Security.Membership.Provider%2A> </xref:System.Web.Security.SqlMembershipProvider>       La password generata contiene solo caratteri alfanumerici e i seguenti segni di punteggiatura: `!@#$%^&*()_-+=[{]};:<>|./?`. Nessun carattere di controllo nascosto o non stampabili sono inclusi nella password generata.      > [!NOTE] > La password casuale creata dal metodo GeneratePassword non è garantita da passare all&quot;espressione regolare di <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>proprietà.</xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> Tuttavia, la password casuale soddisferà i criteri stabiliti dal <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>e <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>proprietà.</xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> </xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>"
  example:
  - "The following code example generates a random 10-character password.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#9](~/add/codesnippet/csharp/m-system.web.security.sq_2_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#9](~/add/codesnippet/visualbasic/m-system.web.security.sq_2_1.aspx)]"
  syntax:
    content: public virtual string GeneratePassword ();
    parameters: []
    return:
      type: System.String
      description: "Una password casuale da almeno 14 caratteri."
  overload: System.Web.Security.SqlMembershipProvider.GeneratePassword*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene una raccolta di tutti gli utenti nel database delle appartenenze di SQL Server."
  remarks: "Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership>classe per recuperare le informazioni utente dal database di SQL Server specificato nel file di configurazione dell&quot;applicazione ASP.NET (Web. config).</xref:System.Web.Security.Membership>       I risultati restituiti da GetAllUsers sono limitati dal `pageIndex` e `pageSize` parametri. Il `pageSize` parametro identifica il numero massimo di <xref:System.Web.Security.MembershipUser>oggetti da restituire in <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> Il `pageIndex` parametro identifica la pagina di risultati da restituire, dove&0; indica la prima pagina. Il `totalRecords` parametro è un `out` parametro impostato sul numero totale degli utenti di appartenenza per l&quot;applicazione configurata `applicationName`. Ad esempio, se sono presenti 13 utenti per l&quot;applicazione configurata `applicationName`e `pageIndex` 1 e un `pageSize` pari a 5, il <xref:System.Web.Security.MembershipUserCollection>restituito conterrebbe dal sesto al decimo utente restituito.</xref:System.Web.Security.MembershipUserCollection> Il `totalRecords` parametro viene impostato su 13."
  example:
  - "The following code example returns a list of users in pages of data with a count of the number of users currently online.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/f02da845-c892-4dcc-aa15-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/f02da845-c892-4dcc-aa15-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: pageIndex
      type: System.Int32
      description: "Indice della pagina di risultati da restituire. `pageIndex`è in base zero."
    - id: pageSize
      type: System.Int32
      description: "Le dimensioni della pagina di risultati da restituire."
    - id: totalRecords
      type: System.Int32
      description: "Il numero totale di utenti."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Una <xref:System.Web.Security.MembershipUserCollection>di <xref:System.Web.Security.MembershipUser>oggetti che rappresentano tutti gli utenti del database per configurato <xref:System.Web.Security.SqlMembershipProvider.ApplicationName*>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName*> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.SqlMembershipProvider.GetAllUsers*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than one.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> plus <code>pageSize</code> minus one exceeds &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline
  id: GetNumberOfUsersOnline
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetNumberOfUsersOnline()
  nameWithType: SqlMembershipProvider.GetNumberOfUsersOnline()
  fullName: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Restituisce il numero di utenti attualmente connessi all&quot;applicazione."
  remarks: "Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership>classe per recuperare il numero di utenti considerati online dal database di SQL Server specificato nel file di configurazione dell&quot;applicazione ASP.NET (Web. config).</xref:System.Web.Security.Membership>       GetNumberOfUsersOnline restituisce il numero di utenti dell&quot;applicazione corrente la cui ultima data e ora attività è maggiore di data e ora correnti meno il valore della <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>proprietà in minuti.</xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>       Solo gli utenti associati configurati <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>sono inclusi nel conteggio.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>"
  example:
  - "The following code example returns a list of users with a count of the users currently online.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.sq_3_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.sq_3_1.aspx)]"
  syntax:
    content: public override int GetNumberOfUsersOnline ();
    parameters: []
    return:
      type: System.Int32
      description: "Il numero di utenti attualmente connessi all&quot;applicazione."
  overload: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)
  id: GetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetPassword(String,String)
  nameWithType: SqlMembershipProvider.GetPassword(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.GetPassword(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Restituisce la password per il nome utente specificato dal database di appartenenza di SQL Server."
  remarks: "Questo metodo viene chiamato dalla <xref:System.Web.Security.MembershipUser>classe per recuperare la password per un utente dal database di SQL Server specificato nel file di configurazione dell&quot;applicazione ASP.NET (Web. config).</xref:System.Web.Security.MembershipUser>       Se il metodo GetPassword viene fornita una risposta di password non corretta, viene incrementato il contatore interno che tiene traccia dei tentativi di immissione della risposta non valida da uno. Ciò può causare l&quot;utente viene bloccato e non è possibile accedere finché non viene eliminato lo stato di blocco da una chiamata al <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>metodo.</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Se viene fornita la password corretta di risposta e l&quot;utente non sia attualmente bloccato, quindi il contatore interno che tiene traccia dei tentativi di risposta per la password non validi viene reimpostato su zero. Per ulteriori informazioni, vedere il <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>proprietà.</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>       È possibile chiamare il metodo GetPassword direttamente da necessario ottenere un riferimento all&quot; <xref:System.Web.Security.SqlMembershipProvider>istanza tramite la <xref:System.Web.Security.Membership.Provider%2A>proprietà di <xref:System.Web.Security.Membership>classe.</xref:System.Web.Security.Membership> </xref:System.Web.Security.Membership.Provider%2A> </xref:System.Web.Security.SqlMembershipProvider>       Se il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>è impostata su <xref:System.Web.Security.MembershipPasswordFormat>, il metodo GetPassword non è possibile recuperare la password.</xref:System.Web.Security.MembershipPasswordFormat> </xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> Per le password vengono crittografate in modo unidirezionale e non possono essere decrittografate. Se il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>è impostata su <xref:System.Web.Security.MembershipPasswordFormat>, e <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>è impostato su `true`, <xref:System.Configuration.Provider.ProviderException>viene generata quando viene inizializzato il provider.</xref:System.Configuration.Provider.ProviderException> </xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> </xref:System.Web.Security.MembershipPasswordFormat> </xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>       Spazi iniziali e finali vengono rimossi da tutti i valori di parametro."
  example:
  - "The following code example retrieves the password for a specified user name and sends it to the user in an e-mail message.  \n  \n> [!NOTE]\n>  Returning a password in clear text using e-mail is not recommended for sites that require a high level of security. For high-security sites, we recommend that you return passwords using encryption, such as SSL.  \n  \n> [!NOTE]\n>  This sample calls the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file by using the <xref:System.Web.Security.Membership> class. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/66916cd5-cd17-4858-8835-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/66916cd5-cd17-4858-8835-_1.aspx)]"
  syntax:
    content: public override string GetPassword (string username, string passwordAnswer);
    parameters:
    - id: username
      type: System.String
      description: "All&quot;utente di recuperare la password."
    - id: passwordAnswer
      type: System.String
      description: "Risposta segreta per l&quot;utente."
    return:
      type: System.String
      description: "La password per il nome utente specificato."
  overload: System.Web.Security.SqlMembershipProvider.GetPassword*
  exceptions:
  - type: System.Web.Security.MembershipPasswordException
    commentId: T:System.Web.Security.MembershipPasswordException
    description: "<code>passwordAnswer</code> is invalid.  \n  \n \\- or -  \n  \n The membership user identified by <code>username</code> is locked out."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*>is set to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*>"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>username</code> is not found in the membership database.  \n  \n \\- or -  \n  \n An error occurred while retrieving the password from the database."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "One of the parameter values exceeds the maximum allowed length.  \n  \n \\- or -  \n  \n <code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is an empty string and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is greater than 128 characters.  \n  \n \\- or -  \n  \n The encoded version of <code>passwordAnswer</code> is greater than 128 characters."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)
  id: GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetUser(Object,Boolean)
  nameWithType: SqlMembershipProvider.GetUser(Object,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.GetUser(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene le informazioni dall&quot;origine dati per l&quot;utente di appartenenza associato all&quot;identificatore univoco specificato e aggiorna l&quot;indicatore di data/ora ultima attività per l&quot;utente, se specificato."
  remarks: "<xref:System.Web.Security.Membership.GetUser%2A>Recupera le informazioni utente dall&quot;origine dati e crea un <xref:System.Web.Security.MembershipUser>oggetto popolato con i dati restituiti.</xref:System.Web.Security.MembershipUser></xref:System.Web.Security.Membership.GetUser%2A> L&quot;utente viene identificato con l&quot;identificatore univoco specificato con il `providerUserKey` parametro."
  syntax:
    content: public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "Identificatore univoco per l&quot;utente."
    - id: userIsOnline
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per aggiornare l&quot;ultima attività indicatore data e ora per l&quot;utente specificato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Web.Security.MembershipUser
      description: "Oggetto <xref:System.Web.Security.MembershipUser>oggetto che rappresenta l&quot;utente associato all&quot;identificatore univoco specificato.</xref:System.Web.Security.MembershipUser> Se nel database per l&quot;oggetto specificato viene trovato alcun utente <code> providerUserKey </code> valore <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> viene restituito."
  overload: System.Web.Security.SqlMembershipProvider.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providerUserKey</code>non è di tipo <xref:System.Guid>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)
  id: GetUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetUser(String,Boolean)
  nameWithType: SqlMembershipProvider.GetUser(String,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.GetUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Restituisce informazioni dal database di appartenenza di SQL Server per un utente e fornisce un&quot;opzione per aggiornare l&quot;indicatore di data/ora ultima attività per l&quot;utente."
  remarks: "Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership>classe per recuperare le informazioni utente dal database di SQL Server specificato nel file di configurazione dell&quot;applicazione ASP.NET (Web. config).</xref:System.Web.Security.Membership>       Se `userIsOnline` è `true`, indicatore di data/ora ultima attività per l&quot;utente viene aggiornato per la data e ora correnti. Ciò si riflette nel <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>e <xref:System.Web.Security.MembershipUser.IsOnline%2A>proprietà e il valore restituito da <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>.</xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> </xref:System.Web.Security.MembershipUser.IsOnline%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A>       Spazi iniziali e finali vengono rimossi dal `username` valore del parametro."
  example:
  - "The following code example uses the GetUser method to determine whether a user exists before retrieving the password for the user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/08039896-5b29-4285-9a5a-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/08039896-5b29-4285-9a5a-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);
    parameters:
    - id: username
      type: System.String
      description: "Il nome dell&quot;utente per cui ottenere informazioni."
    - id: userIsOnline
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per aggiornare l&quot;indicatore di data/ora ultima attività per l&quot;utente. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per restituire le informazioni utente senza aggiornare l&quot;indicatore di data/ora ultima attività per l&quot;utente."
    return:
      type: System.Web.Security.MembershipUser
      description: "Oggetto <xref:System.Web.Security.MembershipUser>oggetto che rappresenta l&quot;utente specificato.</xref:System.Web.Security.MembershipUser> Se nel database per l&quot;oggetto specificato viene trovato alcun utente <code> username </code> valore <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> viene restituito."
  overload: System.Web.Security.SqlMembershipProvider.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> exceeds 256 characters.  \n  \n \\- or -  \n  \n <code>username</code> contains a comma."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)
  id: GetUserNameByEmail(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetUserNameByEmail(String)
  nameWithType: SqlMembershipProvider.GetUserNameByEmail(String)
  fullName: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene il nome utente associato all&quot;indirizzo di posta elettronica specificato."
  remarks: "Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership>classe con un indirizzo di posta elettronica, viene utilizzato per recuperare un nome utente associato dal database di SQL Server specificato nel file di configurazione dell&quot;applicazione ASP.NET (Web. config).</xref:System.Web.Security.Membership>       Se più di un utente nel database delle appartenenze ha lo stesso indirizzo di posta elettronica, viene restituito il primo nome utente rilevato. È possibile impostare il `requiresUniqueEmail` attributo `true` nel file di configurazione dell&quot;applicazione per assicurarsi che ogni indirizzo di posta elettronica nel database sia univoco.       Spazi iniziali e finali vengono rimossi dal `email` valore del parametro."
  example:
  - "The following code example retrieves the user name for a specified e-mail address.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/csharp/m-system.web.security.sq_7_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/visualbasic/m-system.web.security.sq_7_1.aspx)]"
  syntax:
    content: public override string GetUserNameByEmail (string email);
    parameters:
    - id: email
      type: System.String
      description: "L&quot;indirizzo di posta elettronica da cercare."
    return:
      type: System.String
      description: "Il nome utente associato all&quot;indirizzo di posta elettronica specificato. Se viene trovata alcuna corrispondenza, questo metodo restituisce <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>email</code>supera i 256 caratteri."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Più di un utente con lo stesso indirizzo di posta elettronica esiste nel database e <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*>è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*>"
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: SqlMembershipProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.SqlMembershipProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inizializza il provider di appartenenze di SQL Server con i valori delle proprietà specificati nel file di configurazione dell&quot;applicazione ASP.NET. Questo metodo non deve essere utilizzato direttamente dal codice."
  remarks: "Questo metodo inizializza la <xref:System.Web.Security.SqlMembershipProvider>con la proprietà i valori specificati nel file di configurazione dell&quot;applicazione ASP.NET (Web. config) e non deve essere utilizzato direttamente dal codice.</xref:System.Web.Security.SqlMembershipProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del <xref href=&quot;System.Web.Security.SqlMembershipProvider&quot;> </xref> istanza da inizializzare."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "Oggetto <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> che contiene i nomi e i valori delle opzioni di configurazione per il provider di appartenenze."
  overload: System.Web.Security.SqlMembershipProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>config</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "The <xref uid=\"langword_csharp_enablePasswordRetrieval\" name=\"enablePasswordRetrieval\" href=\"\"></xref>, <xref uid=\"langword_csharp_enablePasswordReset\" name=\"enablePasswordReset\" href=\"\"></xref>, <xref uid=\"langword_csharp_requiresQuestionAndAnswer\" name=\"requiresQuestionAndAnswer\" href=\"\"></xref>, or <xref uid=\"langword_csharp_requiresUniqueEmail\" name=\"requiresUniqueEmail\" href=\"\"></xref> attribute is set to a value other than a <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_maxInvalidPasswordAttempts\" name=\"maxInvalidPasswordAttempts\" href=\"\"></xref> or the <xref uid=\"langword_csharp_passwordAttemptWindow\" name=\"passwordAttemptWindow\" href=\"\"></xref> attribute is set to a value other than a positive integer.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_minRequiredPasswordLength\" name=\"minRequiredPasswordLength\" href=\"\"></xref> attribute is set to a value other than a positive integer, or the value is greater than 128.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_minRequiredNonalphanumericCharacters\" name=\"minRequiredNonalphanumericCharacters\" href=\"\"></xref> attribute is set to a value other than zero or a positive integer, or the value is greater than 128.  \n  \n \\- or -  \n  \n The value for the <xref uid=\"langword_csharp_passwordStrengthRegularExpression\" name=\"passwordStrengthRegularExpression\" href=\"\"></xref> attribute is not a valid regular expression.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_applicationName\" name=\"applicationName\" href=\"\"></xref> attribute is set to a value that is greater than 256 characters.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_passwordFormat\" name=\"passwordFormat\" href=\"\"></xref> attribute specified in the application configuration file is an invalid <xref:System.Web.Security.MembershipPasswordFormat> enumeration.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_passwordFormat\" name=\"passwordFormat\" href=\"\"></xref> attribute is set to <xref:System.Web.Security.MembershipPasswordFormat> and the <xref uid=\"langword_csharp_enablePasswordRetrieval\" name=\"enablePasswordRetrieval\" href=\"\"></xref> attribute is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> in the application configuration.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_passwordFormat\" name=\"passwordFormat\" href=\"\"></xref> attribute is set to <xref uid=\"langword_csharp_Encrypted\" name=\"Encrypted\" href=\"\"></xref> and the  configuration element specifies <xref uid=\"langword_csharp_AutoGenerate\" name=\"AutoGenerate\" href=\"\"></xref> for the <xref uid=\"langword_csharp_decryptionKey\" name=\"decryptionKey\" href=\"\"></xref> attribute.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_connectionStringName\" name=\"connectionStringName\" href=\"\"></xref> attribute is empty or does not exist in the application configuration.  \n  \n \\- or -  \n  \n The value of the connection string for the <xref uid=\"langword_csharp_connectionStringName\" name=\"connectionStringName\" href=\"\"></xref> attribute value is empty, or the specified <xref uid=\"langword_csharp_connectionStringName\" name=\"connectionStringName\" href=\"\"></xref> does not exist in the application configuration file.  \n  \n \\- or -  \n  \n The value for the <xref uid=\"langword_csharp_commandTimeout\" name=\"commandTimeout\" href=\"\"></xref> attribute is set to a value other than zero or a positive integer.  \n  \n \\- or -  \n  \n The application configuration file for this <xref href=\"System.Web.Security.SqlMembershipProvider\"></xref> instance contains an unrecognized attribute."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Il livello di attendibilità corrente è minore di <xref uid=&quot;langword_csharp_Low&quot; name=&quot;Low&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il provider è già stato inizializzato prima della chiamata corrente per il metodo Initialize."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  id: MaxInvalidPasswordAttempts
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: MaxInvalidPasswordAttempts
  nameWithType: SqlMembershipProvider.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene il numero di tentativi di immissione della risposta consentiti prima che l&quot;utente di appartenenza venga bloccato o password non valida."
  remarks: "Il <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>funziona in combinazione con il <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>salvaguardarsi da un&quot;origine indesiderata riesca a indovinare la password o una risposta per la password di un utente di appartenenza attraverso ripetuti tentativi.</xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> </xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Se il numero di password non valide o di risposte forniti per un utente di appartenenza è maggiore o uguale al valore del <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>entro il numero di minuti specificato dal valore della proprietà del <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>proprietà, quindi l&quot;utente di appartenenza viene bloccato impostando il <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>proprietà `true` finché non viene sbloccato con la <xref:System.Web.Security.MembershipUser.UnlockUser%2A>metodo.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A> </xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> </xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Se viene fornita una password valida prima di <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>valore viene raggiunto, i contatori che rilevano il numero di tentativi di password e della risposta segreta non validi vengono reimpostati su zero.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Se viene fornita una risposta segreta valida prima che il <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>valore viene raggiunto, solo il contatore che tiene traccia del numero di tentativi di risposta per la password non validi viene reimpostato su zero.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>       Il <xref:System.Web.Security.SqlMembershipProvider>mantiene separatamente i conteggi di tentativi di password non valida e non validi di immissione della risposta.</xref:System.Web.Security.SqlMembershipProvider> Password non valida tenta comporterà solo il contatore dei tentativi di password viene incrementato. Risposta segreta valida tenta comporterà solo il risposta segreta l&quot;incremento del contatore.       Il <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>valore della proprietà è impostato nella configurazione dell&quot;applicazione mediante il `maxInvalidPasswordAttempts` attributo della sezione di configurazione.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>       Se il <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>è impostata su `false`, non vengono registrati i tentativi di immissione della risposta non valida.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n    <providers>  \n      <add name=\"SqlProvider\"  \n        type=\"System.Web.Security.SqlMembershipProvider\"  \n        connectionStringName=\"SqlServices\"  \n        requiresQuestionAndAnswer=\"true\"  \n        maxInvalidPasswordAttempts=\"5\"  \n        passwordAttemptWindow=\"30\"  \n        applicationName=\"MyApplication\" />  \n    </providers>  \n</membership>  \n```"
  syntax:
    content: public override int MaxInvalidPasswordAttempts { get; }
    return:
      type: System.Int32
      description: "Il numero di tentativi di immissione della risposta consentiti prima che l&quot;utente di appartenenza venga bloccato o password non valida."
  overload: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  id: MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene il numero minimo di caratteri speciali che devono essere presenti in una password valida."
  remarks: "La proprietà MinRequiredNonAlphanumericCharacters restituisce il numero minimo di caratteri non alfabetici e speciali che devono essere immessi per creare una password valida per il <xref:System.Web.Security.SqlMembershipProvider>oggetto.</xref:System.Web.Security.SqlMembershipProvider>       Il valore della proprietà MinRequiredNonAlphanumericCharacters è impostato nella configurazione dell&quot;applicazione mediante il `minRequiredNonalphanumericCharacters` attributo del [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento di configurazione.       Un carattere non alfanumerico è un carattere per il quale il <xref:System.Char.IsLetterOrDigit%2A>restituisce `false`.</xref:System.Char.IsLetterOrDigit%2A>"
  example:
  - "The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonalphanumericCharacters` attribute to one character.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20\">  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredNonalphanumericCharacters=\"1\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override int MinRequiredNonAlphanumericCharacters { get; }
    return:
      type: System.Int32
      description: "Il numero minimo di caratteri speciali che devono essere presenti in una password valida."
  overload: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  id: MinRequiredPasswordLength
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: MinRequiredPasswordLength
  nameWithType: SqlMembershipProvider.MinRequiredPasswordLength
  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene la lunghezza minima richiesta per una password."
  remarks: "Proprietà MinRequiredPasswordLength Ottiene il numero minimo di caratteri che devono essere immessi per creare una password valida per il <xref:System.Web.Security.SqlMembershipProvider>oggetto.</xref:System.Web.Security.SqlMembershipProvider>       Il <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>valore della proprietà è impostato nella configurazione dell&quot;applicazione mediante il `minRequiredPasswordLength` attributo del [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento di configurazione.</xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>"
  example:
  - "The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20\">  \n    <providers>  \n      <add  \n        name=\"SqlProvider\"  \n        type=\"System.Web.Security.SqlMembershipProvider\"  \n        connectionStringName=\"SqlServices\"  \n        requiresQuestionAndAnswer=\"true\"  \n        minRequiredPasswordLength=\"7\"  \n        />  \n    </providers>  \n</membership>  \n```"
  syntax:
    content: public override int MinRequiredPasswordLength { get; }
    return:
      type: System.Int32
      description: "La lunghezza minima richiesta per una password."
  overload: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  id: PasswordAttemptWindow
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: PasswordAttemptWindow
  nameWithType: SqlMembershipProvider.PasswordAttemptWindow
  fullName: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene l&quot;intervallo di tempo in cui consecutivi non riusciti di fornire una password o risposte segrete vengono registrati."
  remarks: "La proprietà PasswordAttemptWindow funziona in combinazione con la <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>proprietà per impedire che un&quot;origine indesiderata riesca a indovinare la password o la risposta per la password di un utente di appartenenza attraverso ripetuti tentativi.</xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> Quando gli utenti tentano di accedere, modificare la password o reimpostazione della password, solo un determinato numero di tentativi consecutivi consentito all&quot;interno di un intervallo di tempo specificato. La lunghezza dell&quot;intervallo di tempo viene specificata dalla proprietà PasswordAttemptWindow, che identifica il numero di minuti consentiti tra tentativi non validi. Se il numero di tentativi consecutivi non riusciti di reimpostazione della password è uguale al valore archiviato nel <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>proprietà e il tempo trascorso dopo l&quot;ultimo tentativo non valido è inferiore al numero di minuti specificato per la proprietà PasswordAttemptWindow, l&quot;utente di appartenenza viene bloccato impostando il <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>proprietà `true`.</xref:System.Web.Security.MembershipUser.IsLockedOut%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> L&quot;utente può essere sbloccato mediante una chiamata di <xref:System.Web.Security.MembershipUser.UnlockUser%2A>metodo.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> Se l&quot;intervallo tra il tentativo corrente e l&quot;ultimo tentativo non riuscito è maggiore dell&quot;impostazione di proprietà PasswordAttemptWindow, il tentativo non valido corrente viene conteggiato come primo. Se prima che venga raggiunto il numero massimo di tentativi non validi consentiti, viene fornita una risposta password valida, il numero di tentativi non validi di immissione della risposta è impostato su zero. Se viene fornita una password valida prima non valido consentiti il numero massimo di tentativi viene raggiunto il numero di tentativi di password non valida e il numero di tentativi di risposta per la password non validi vengono impostati su zero.       Il <xref:System.Web.Security.SqlMembershipProvider>conta i tentativi di password non valida e non validi di immissione della risposta separatamente.</xref:System.Web.Security.SqlMembershipProvider> Password non valida tenta comporterà solo il contatore dei tentativi di password viene incrementato. Risposta segreta valida tenta comporterà solo il risposta segreta l&quot;incremento del contatore.       Il <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>valore della proprietà è impostato nella configurazione dell&quot;applicazione mediante il `passwordAttemptWindow` attributo della sezione di configurazione.</xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       Se il <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>è impostata su `false`, non vengono registrati i tentativi di immissione della risposta non valida.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n    <providers>  \n      <add name=\"SqlProvider\"  \n        type=\"System.Web.Security.SqlMembershipProvider\"  \n        connectionStringName=\"SqlServices\"  \n        requiresQuestionAndAnswer=\"true\"  \n        maxInvalidPasswordAttempts=\"5\"  \n        passwordAttemptWindow=\"30\"  \n        applicationName=\"MyApplication\" />  \n    </providers>  \n</membership>  \n```"
  syntax:
    content: public override int PasswordAttemptWindow { get; }
    return:
      type: System.Int32
      description: "L&quot;intervallo di tempo, espresso in minuti, durante il quale consecutivi non riusciti di fornire una password valida o risposte segrete vengono rilevate. Il valore predefinito è 10 minuti. Se l&quot;intervallo tra il tentativo corrente e l&quot;ultimo tentativo non riuscito è maggiore dell&quot;impostazione di proprietà PasswordAttemptWindow, ogni tentativo non riuscito viene considerato come se fosse il primo tentativo non riuscito."
  overload: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.PasswordFormat
  id: PasswordFormat
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: PasswordFormat
  nameWithType: SqlMembershipProvider.PasswordFormat
  fullName: System.Web.Security.SqlMembershipProvider.PasswordFormat
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene un valore che indica il formato di archiviazione delle password nel database delle appartenenze di SQL Server."
  remarks: "Utilizzare `Hashed` solo `Clear` e `Encrypted` non sono protette. `Hashed`le password vengono eseguito l&quot;hashing mediante un algoritmo di hash unidirezionale e un valore salt generato casualmente quando archiviati nel database. Quando una password viene convalidata, viene eseguito l&quot;hashing con il valore salt nel database per la verifica. Impossibile recuperare le password con hash. `Encrypted`le password non sono considerate sicuri, come una violazione di sicurezza che consente di visualizzare il contenuto del database possono anche esporre la chiave di crittografia. Ciò significa che le password crittografate Impossibile decrittografare ed esposti.       Il valore PasswordFormat è specificato nella sezione del file Web. config per l&quot;applicazione ASP.NET.       `Encrypted`e `Hashed` le password vengono crittografate o eseguito l&quot;hashing per impostazione predefinita in base alle informazioni fornite nell&quot;elemento di configurazione. Si noti che se si specifica un valore di `3DES` per il `validation` attributo, o se viene specificato alcun valore, le password con hash verranno generato un hash mediante il <xref:System.Security.Cryptography.SHA1>algoritmo.</xref:System.Security.Cryptography.SHA1>       Un algoritmo hash personalizzato può essere definito utilizzando il `hashAlgorithmType` attributo del [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento di configurazione. Se si sceglie di crittografia, la crittografia di password predefinito utilizza AES. È possibile modificare l&quot;algoritmo di crittografia impostando il `decryption` attributo dell&quot;elemento di configurazione. Se si esegue la crittografia delle password, è necessario fornire un valore esplicito per il `decryptionKey` attributo nell&quot;elemento. Il valore predefinito di `AutoGenerate` per il `decryptionKey` attributo non è supportato quando si utilizzano password crittografate con appartenenza ASP.NET."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and sets its password format to `Hashed`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }
    return:
      type: System.Web.Security.MembershipPasswordFormat
      description: "Uno del <xref:System.Web.Security.MembershipPasswordFormat>valori, che indica il formato di archiviazione delle password nel database di SQL Server.</xref:System.Web.Security.MembershipPasswordFormat>"
  overload: System.Web.Security.SqlMembershipProvider.PasswordFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  id: PasswordStrengthRegularExpression
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: PasswordStrengthRegularExpression
  nameWithType: SqlMembershipProvider.PasswordStrengthRegularExpression
  fullName: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene l&quot;espressione regolare utilizzata per valutare una password."
  remarks: "La proprietà PasswordStrengthRegularExpression Ottiene l&quot;espressione regolare utilizzata per valutare la complessità delle password per il <xref:System.Web.Security.SqlMembershipProvider>oggetto.</xref:System.Web.Security.SqlMembershipProvider>       Il <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>proprietà è impostata nella configurazione dell&quot;applicazione mediante il `passwordStrengthRegularExpression` attributo del [membership (Schema delle impostazioni ASP.NET) Element](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) elemento di configurazione.</xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>"
  example:
  - "The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates that the password meets the following criteria:  \n  \n-   Is at least seven characters.  \n  \n-   Contains at least one digit.  \n  \n-   Contains at least one special (non-alphanumeric) character.  \n  \n If the password does not meet these criteria, the password is not accepted by the membership provider.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20\">  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordStrengthRegularExpression=\"@\\\"(?=.{6,})(?=(.*\\d){1,})(?=(.*\\W){1,})\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override string PasswordStrengthRegularExpression { get; }
    return:
      type: System.String
      description: "Un&quot;espressione regolare usata per valutare una password."
  overload: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  id: RequiresQuestionAndAnswer
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: RequiresQuestionAndAnswer
  nameWithType: SqlMembershipProvider.RequiresQuestionAndAnswer
  fullName: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene un valore che indica se il provider di appartenenze di SQL Server è configurato per richiedere all&quot;utente di rispondere a una domanda per la reimpostazione della password e il recupero."
  remarks: "La richiesta di una password segreta offre un ulteriore livello di sicurezza durante il recupero o la reimpostazione delle password di un utente. Quando si crea un nome utente, un utente può fornire una domanda e risposta che può essere utilizzato successivamente per recuperare o reimpostare una password dimenticata. Se il <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A>proprietà e <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>proprietà sono entrambi `false`, il valore della proprietà RequiresQuestionAndAnswer è irrilevante.</xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> </xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A>       Per ulteriori informazioni, vedere <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>e <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.</xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> </xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and configures it to require a password answer for password reset or retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool RequiresQuestionAndAnswer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se una risposta per la password è necessaria per la reimpostazione della password e il recupero; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  id: RequiresUniqueEmail
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: RequiresUniqueEmail
  nameWithType: SqlMembershipProvider.RequiresUniqueEmail
  fullName: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ottiene un valore che indica se il provider di appartenenze di SQL Server è configurato per richiedere un indirizzo di posta elettronica univoco per ogni nome utente."
  remarks: ''
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the <xref:System.Web.Security.SqlMembershipProvider> instance and configures it to require a unique e-mail address for each user name.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      requiresUniqueEmail=\"true\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool RequiresUniqueEmail { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il provider di appartenenze richiede un indirizzo di posta elettronica univoco. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)
  id: ResetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ResetPassword(String,String)
  nameWithType: SqlMembershipProvider.ResetPassword(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ResetPassword(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Reimposta la password dell&quot;utente su una nuova password generata automaticamente."
  remarks: "Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership>classe per reimpostare la password per un utente nel database di SQL Server specificato nel file di configurazione dell&quot;applicazione ASP.NET (Web. config) a un nuovo valore generato casualmente.</xref:System.Web.Security.Membership> La nuova password viene restituita.      > [!NOTE] > La password casuale creata dal metodo ResetPassword non è garantita da passare all&quot;espressione regolare di <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>proprietà.</xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> Tuttavia, la password casuale soddisferà i criteri stabiliti dal <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>e <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>proprietà.</xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> </xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>       Il metodo ResetPassword è più comunemente utilizzato quando il <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>è impostata su `Hashed`.</xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> Se un utente dimentica una password che viene eseguito l&quot;hashing, la password non può essere recuperata. Tuttavia, il provider può reimpostare la password per una nuova password generata automaticamente se l&quot;utente fornisce la risposta per la password corretta.       Se il metodo ResetPassword viene fornita una risposta di password non corretta, viene incrementato il contatore interno che tiene traccia dei tentativi di password non valida da uno. Ciò può causare l&quot;utente viene bloccato e non è possibile accedere finché non viene eliminato lo stato di blocco da una chiamata al <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>metodo.</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Se viene fornita la password corretta di risposta e l&quot;utente non sia attualmente bloccato, quindi il contatore interno che tiene traccia dei tentativi di risposta per la password non validi viene reimpostato su zero. Per ulteriori informazioni, vedere il <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>proprietà.</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>       È possibile chiamare il metodo ResetPassword direttamente da necessario ottenere un riferimento all&quot; <xref:System.Web.Security.SqlMembershipProvider>istanza dalla <xref:System.Web.Security.Membership.Provider%2A>proprietà di <xref:System.Web.Security.Membership>classe.</xref:System.Web.Security.Membership> </xref:System.Web.Security.Membership.Provider%2A> </xref:System.Web.Security.SqlMembershipProvider> La password generata sarà almeno 14 caratteri, o la lunghezza specificata nel <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>, proprietà e conterrà il numero di caratteri non alfanumerici specificato nella <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>proprietà.</xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> </xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> La password non potrebbe superare l&quot;espressione regolare contenuta nel <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>proprietà, se ne è stato specificato.</xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>       Spazi iniziali e finali vengono rimossi da tutti i valori di parametro."
  example:
  - "The following code example resets a user's password and returns the new, automatically generated password.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/csharp/16c2d8e3-05dc-453f-b1c3-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/visualbasic/16c2d8e3-05dc-453f-b1c3-_1.aspx)]"
  syntax:
    content: public override string ResetPassword (string username, string passwordAnswer);
    parameters:
    - id: username
      type: System.String
      description: "All&quot;utente di reimpostare la password."
    - id: passwordAnswer
      type: System.String
      description: "Risposta segreta per l&quot;utente specificato."
    return:
      type: System.String
      description: "La nuova password per l&quot;utente specificato."
  overload: System.Web.Security.SqlMembershipProvider.ResetPassword*
  exceptions:
  - type: System.Web.Security.MembershipPasswordException
    commentId: T:System.Web.Security.MembershipPasswordException
    description: "<code>passwordAnswer</code> is invalid.  \n  \n \\- or -  \n  \n The user account is currently locked."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset*>is set to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset*>"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>username</code> is not found in the membership database.  \n  \n \\- or -  \n  \n The change password action was canceled by a subscriber to the <xref href=\"System.Web.Security.Membership.ValidatingPassword\"></xref> event and the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation*> property was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n An error occurred while retrieving the password from the database."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is an empty string, or is longer than 128 characters, and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is longer than 128 characters after encoding."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Si è verificata un&quot;eccezione non gestita."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)
  id: UnlockUser(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: UnlockUser(String)
  nameWithType: SqlMembershipProvider.UnlockUser(String)
  fullName: System.Web.Security.SqlMembershipProvider.UnlockUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Cancella lo stato dell&quot;utente bloccato in modo che l&quot;utente di appartenenza può essere convalidato."
  remarks: "Gli utenti sono in genere bloccati e non può essere convalidati dal <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A>metodo quando <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>viene superata in <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>.</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> </xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A>       Spazi iniziali e finali vengono rimossi dal `username` valore del parametro."
  syntax:
    content: public override bool UnlockUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Il nome dell&quot;utente di appartenenza per cancellare lo stato bloccato per."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;utente di appartenenza è stata sbloccata; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> viene restituito anche se l&quot;utente non esiste nel database."
  overload: System.Web.Security.SqlMembershipProvider.UnlockUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>è una stringa vuota, è più lungo di 256 caratteri o contiene una virgola."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  id: UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: UpdateUser(MembershipUser)
  nameWithType: SqlMembershipProvider.UpdateUser(MembershipUser)
  fullName: System.Web.Security.SqlMembershipProvider.UpdateUser(MembershipUser)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Aggiorna le informazioni relative a un utente nel database delle appartenenze di SQL Server."
  remarks: "Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership>classe per aggiornare le informazioni utente per un utente nel database di SQL Server specificato nel file di configurazione dell&quot;applicazione ASP.NET (Web. config).</xref:System.Web.Security.Membership> Il <xref:System.Web.Security.MembershipUser.Email%2A>, <xref:System.Web.Security.MembershipUser.Comment%2A>, <xref:System.Web.Security.MembershipUser.IsApproved%2A>, <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>, e <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>vengono aggiornati i valori delle proprietà per l&quot;utente di appartenenza specificato.</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> </xref:System.Web.Security.MembershipUser.LastLoginDate%2A> </xref:System.Web.Security.MembershipUser.IsApproved%2A> </xref:System.Web.Security.MembershipUser.Comment%2A> </xref:System.Web.Security.MembershipUser.Email%2A>       La lunghezza massima per il <xref:System.Web.Security.MembershipUser.UserName%2A>proprietà è di 256 caratteri.</xref:System.Web.Security.MembershipUser.UserName%2A> La lunghezza massima per il <xref:System.Web.Security.MembershipUser.Email%2A>proprietà è di 256 caratteri.</xref:System.Web.Security.MembershipUser.Email%2A>       Impossibile aggiornare la password per un utente di appartenenza utilizzando il metodo UpdateUser. Per aggiornare la password per un utente di appartenenza, utilizzare il <xref:System.Web.Security.MembershipUser.ChangePassword%2A>metodo della <xref:System.Web.Security.MembershipUser>classe.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser.ChangePassword%2A>"
  example:
  - "The following code example updates the e-mail address for a user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/81f685ac-1799-4589-b9a2-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/81f685ac-1799-4589-b9a2-_1.aspx)]"
  syntax:
    content: public override void UpdateUser (System.Web.Security.MembershipUser user);
    parameters:
    - id: user
      type: System.Web.Security.MembershipUser
      description: "Oggetto <xref:System.Web.Security.MembershipUser>oggetto che rappresenta l&quot;utente da aggiornare e le informazioni aggiornate per l&quot;utente.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.SqlMembershipProvider.UpdateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>user</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.UserName*> property of <code>user</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Web.Security.MembershipUser.UserName*> property of <code>user</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> is longer than 256 characters.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> is an empty string and <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "The <xref:System.Web.Security.MembershipUser.UserName*> property of <code>user</code> was not found in the database.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> was equal to an existing e-mail address in the database and <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*> is set to true.  \n  \n \\- or -  \n  \n The user update failed."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)
  id: ValidateUser(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ValidateUser(String,String)
  nameWithType: SqlMembershipProvider.ValidateUser(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ValidateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Verifica che il nome utente specificato e la password siano presenti nel database delle appartenenze di SQL Server."
  remarks: "Questo metodo viene chiamato dalla <xref:System.Web.Security.Membership>classe per convalidare le informazioni per un utente nel database di SQL Server specificato nel file di configurazione dell&quot;applicazione ASP.NET (Web. config).</xref:System.Web.Security.Membership>       Quando un utente è stato convalidato, la data dell&quot;ultima attività valori e ultimo accesso data vengono aggiornati per la data e ora correnti nel database.       Se il metodo ValidateUser viene fornita una password non corretta, viene incrementato il contatore interno che tiene traccia dei tentativi di password non valida da uno. Ciò può causare l&quot;utente viene bloccato e non è possibile accedere finché non viene eliminato lo stato di blocco da una chiamata al <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>metodo.</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> Se viene fornita la password corretta e l&quot;utente non sia attualmente bloccato, quindi i contatori interni che traccia la password non valida-risposta per la password vengono reimpostati su zero. Per ulteriori informazioni, vedere il <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>e <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>proprietà.</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>       Spazi iniziali e finali vengono rimossi da tutti i valori di parametro."
  example:
  - "The following code example shows the sign-in page for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.SqlMembershipProvider>. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL using the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/12603449-9667-4437-88bc-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/12603449-9667-4437-88bc-_1.aspx)]"
  syntax:
    content: public override bool ValidateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "Il nome dell&quot;utente da convalidare."
    - id: password
      type: System.String
      description: "La password per l&quot;utente specificato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il nome utente specificato e la password sono validi; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> viene restituito anche se l&quot;utente non esiste nel database."
  overload: System.Web.Security.SqlMembershipProvider.ValidateUser*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Security.MembershipProvider
  isExternal: false
  name: System.Web.Security.MembershipProvider
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.MembershipPasswordException
  isExternal: true
  name: System.Web.Security.MembershipPasswordException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Security.SqlMembershipProvider.#ctor
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: SqlMembershipProvider()
  nameWithType: SqlMembershipProvider.SqlMembershipProvider()
  fullName: System.Web.Security.SqlMembershipProvider.SqlMembershipProvider()
- uid: System.Web.Security.SqlMembershipProvider.ApplicationName
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SqlMembershipProvider.ApplicationName
  fullName: System.Web.Security.SqlMembershipProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePassword(String,String,String)
  nameWithType: SqlMembershipProvider.ChangePassword(String,String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ChangePassword(String,String,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePasswordQuestionAndAnswer(String,String,String,String)
  nameWithType: SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)
- uid: System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
- uid: System.Web.Security.MembershipUser
  parent: System.Web.Security
  isExternal: true
  name: MembershipUser
  nameWithType: MembershipUser
  fullName: System.Web.Security.MembershipUser
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Security.MembershipCreateStatus
  parent: System.Web.Security
  isExternal: true
  name: MembershipCreateStatus
  nameWithType: MembershipCreateStatus
  fullName: System.Web.Security.MembershipCreateStatus
- uid: System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: DeleteUser(String,Boolean)
  nameWithType: SqlMembershipProvider.DeleteUser(String,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.DeleteUser(String,Boolean)
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordReset
  nameWithType: SqlMembershipProvider.EnablePasswordReset
  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordReset
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: SqlMembershipProvider.EnablePasswordRetrieval
  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)
- uid: System.Web.Security.MembershipUserCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipUserCollection
  nameWithType: MembershipUserCollection
  fullName: System.Web.Security.MembershipUserCollection
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)
- uid: System.Web.Security.SqlMembershipProvider.GeneratePassword
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GeneratePassword()
  nameWithType: SqlMembershipProvider.GeneratePassword()
  fullName: System.Web.Security.SqlMembershipProvider.GeneratePassword()
- uid: System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)
- uid: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetNumberOfUsersOnline()
  nameWithType: SqlMembershipProvider.GetNumberOfUsersOnline()
  fullName: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline()
- uid: System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetPassword(String,String)
  nameWithType: SqlMembershipProvider.GetPassword(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.GetPassword(String,String)
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUser(Object,Boolean)
  nameWithType: SqlMembershipProvider.GetUser(Object,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.GetUser(Object,Boolean)
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUser(String,Boolean)
  nameWithType: SqlMembershipProvider.GetUser(String,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.GetUser(String,Boolean)
- uid: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUserNameByEmail(String)
  nameWithType: SqlMembershipProvider.GetUserNameByEmail(String)
  fullName: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(String)
- uid: System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: SqlMembershipProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.SqlMembershipProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: SqlMembershipProvider.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: SqlMembershipProvider.MinRequiredPasswordLength
  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
- uid: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: SqlMembershipProvider.PasswordAttemptWindow
  fullName: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
- uid: System.Web.Security.SqlMembershipProvider.PasswordFormat
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordFormat
  nameWithType: SqlMembershipProvider.PasswordFormat
  fullName: System.Web.Security.SqlMembershipProvider.PasswordFormat
- uid: System.Web.Security.MembershipPasswordFormat
  parent: System.Web.Security
  isExternal: true
  name: MembershipPasswordFormat
  nameWithType: MembershipPasswordFormat
  fullName: System.Web.Security.MembershipPasswordFormat
- uid: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: SqlMembershipProvider.PasswordStrengthRegularExpression
  fullName: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
- uid: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: SqlMembershipProvider.RequiresQuestionAndAnswer
  fullName: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
- uid: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresUniqueEmail
  nameWithType: SqlMembershipProvider.RequiresUniqueEmail
  fullName: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
- uid: System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ResetPassword(String,String)
  nameWithType: SqlMembershipProvider.ResetPassword(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ResetPassword(String,String)
- uid: System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UnlockUser(String)
  nameWithType: SqlMembershipProvider.UnlockUser(String)
  fullName: System.Web.Security.SqlMembershipProvider.UnlockUser(String)
- uid: System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UpdateUser(MembershipUser)
  nameWithType: SqlMembershipProvider.UpdateUser(MembershipUser)
  fullName: System.Web.Security.SqlMembershipProvider.UpdateUser(MembershipUser)
- uid: System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ValidateUser(String,String)
  nameWithType: SqlMembershipProvider.ValidateUser(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ValidateUser(String,String)
- uid: System.Web.Security.SqlMembershipProvider.#ctor*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: SqlMembershipProvider
  nameWithType: SqlMembershipProvider.SqlMembershipProvider
- uid: System.Web.Security.SqlMembershipProvider.ApplicationName*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SqlMembershipProvider.ApplicationName
- uid: System.Web.Security.SqlMembershipProvider.ChangePassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePassword
  nameWithType: SqlMembershipProvider.ChangePassword
- uid: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePasswordQuestionAndAnswer
  nameWithType: SqlMembershipProvider.ChangePasswordQuestionAndAnswer
- uid: System.Web.Security.SqlMembershipProvider.CreateUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: CreateUser
  nameWithType: SqlMembershipProvider.CreateUser
- uid: System.Web.Security.SqlMembershipProvider.DeleteUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: DeleteUser
  nameWithType: SqlMembershipProvider.DeleteUser
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordReset*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordReset
  nameWithType: SqlMembershipProvider.EnablePasswordReset
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: SqlMembershipProvider.EnablePasswordRetrieval
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByEmail*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByEmail
  nameWithType: SqlMembershipProvider.FindUsersByEmail
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByName*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByName
  nameWithType: SqlMembershipProvider.FindUsersByName
- uid: System.Web.Security.SqlMembershipProvider.GeneratePassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GeneratePassword
  nameWithType: SqlMembershipProvider.GeneratePassword
- uid: System.Web.Security.SqlMembershipProvider.GetAllUsers*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetAllUsers
  nameWithType: SqlMembershipProvider.GetAllUsers
- uid: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetNumberOfUsersOnline
  nameWithType: SqlMembershipProvider.GetNumberOfUsersOnline
- uid: System.Web.Security.SqlMembershipProvider.GetPassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetPassword
  nameWithType: SqlMembershipProvider.GetPassword
- uid: System.Web.Security.SqlMembershipProvider.GetUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUser
  nameWithType: SqlMembershipProvider.GetUser
- uid: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUserNameByEmail
  nameWithType: SqlMembershipProvider.GetUserNameByEmail
- uid: System.Web.Security.SqlMembershipProvider.Initialize*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: Initialize
  nameWithType: SqlMembershipProvider.Initialize
- uid: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: SqlMembershipProvider.MaxInvalidPasswordAttempts
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: SqlMembershipProvider.MinRequiredPasswordLength
- uid: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: SqlMembershipProvider.PasswordAttemptWindow
- uid: System.Web.Security.SqlMembershipProvider.PasswordFormat*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordFormat
  nameWithType: SqlMembershipProvider.PasswordFormat
- uid: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: SqlMembershipProvider.PasswordStrengthRegularExpression
- uid: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: SqlMembershipProvider.RequiresQuestionAndAnswer
- uid: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresUniqueEmail
  nameWithType: SqlMembershipProvider.RequiresUniqueEmail
- uid: System.Web.Security.SqlMembershipProvider.ResetPassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ResetPassword
  nameWithType: SqlMembershipProvider.ResetPassword
- uid: System.Web.Security.SqlMembershipProvider.UnlockUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UnlockUser
  nameWithType: SqlMembershipProvider.UnlockUser
- uid: System.Web.Security.SqlMembershipProvider.UpdateUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UpdateUser
  nameWithType: SqlMembershipProvider.UpdateUser
- uid: System.Web.Security.SqlMembershipProvider.ValidateUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ValidateUser
  nameWithType: SqlMembershipProvider.ValidateUser
