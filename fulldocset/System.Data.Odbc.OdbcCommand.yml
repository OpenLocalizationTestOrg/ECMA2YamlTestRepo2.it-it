### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcCommand
  id: OdbcCommand
  children:
  - System.Data.Odbc.OdbcCommand.#ctor
  - System.Data.Odbc.OdbcCommand.#ctor(System.String)
  - System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  - System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)
  - System.Data.Odbc.OdbcCommand.Cancel
  - System.Data.Odbc.OdbcCommand.CommandText
  - System.Data.Odbc.OdbcCommand.CommandTimeout
  - System.Data.Odbc.OdbcCommand.CommandType
  - System.Data.Odbc.OdbcCommand.Connection
  - System.Data.Odbc.OdbcCommand.CreateDbParameter
  - System.Data.Odbc.OdbcCommand.CreateParameter
  - System.Data.Odbc.OdbcCommand.DbConnection
  - System.Data.Odbc.OdbcCommand.DbParameterCollection
  - System.Data.Odbc.OdbcCommand.DbTransaction
  - System.Data.Odbc.OdbcCommand.DesignTimeVisible
  - System.Data.Odbc.OdbcCommand.Dispose(System.Boolean)
  - System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.Odbc.OdbcCommand.ExecuteNonQuery
  - System.Data.Odbc.OdbcCommand.ExecuteReader
  - System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Odbc.OdbcCommand.ExecuteScalar
  - System.Data.Odbc.OdbcCommand.Parameters
  - System.Data.Odbc.OdbcCommand.Prepare
  - System.Data.Odbc.OdbcCommand.ResetCommandTimeout
  - System.Data.Odbc.OdbcCommand.System#ICloneable#Clone
  - System.Data.Odbc.OdbcCommand.Transaction
  - System.Data.Odbc.OdbcCommand.UpdatedRowSource
  langs:
  - csharp
  name: OdbcCommand
  nameWithType: OdbcCommand
  fullName: System.Data.Odbc.OdbcCommand
  type: Class
  summary: "Rappresenta un&quot;istruzione SQL o stored procedure da eseguire su un&quot;origine dati. Questa classe non può essere ereditata."
  remarks: "La classe OdbcCommand fornisce i metodi seguenti per l&quot;esecuzione di comandi su un&quot;origine dati: | Elemento | Descrizione |   |----------|-----------------|   | <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>| Esegue i comandi che restituiscono righe. |   | <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>| Esegue i comandi, ad esempio le istruzioni SQL INSERT, DELETE, UPDATE e SET. |   | <xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A>| Recupera un valore singolo, ad esempio, un valore aggregato da un database. |       È possibile reimpostare la <xref:System.Data.Odbc.OdbcCommand.CommandText%2A>proprietà e il riutilizzo dell&quot;oggetto OdbcCommand.</xref:System.Data.Odbc.OdbcCommand.CommandText%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteScalar%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> Tuttavia, è necessario chiudere il <xref:System.Data.Odbc.OdbcDataReader>prima di poter eseguire un comando nuovo o precedente.</xref:System.Data.Odbc.OdbcDataReader>       Se l&quot;esecuzione del comando genera un errore irreversibile <xref:System.Data.Odbc.OdbcException>, ad esempio un livello di gravità di SQL Server o, maggiore di 20 <xref:System.Data.Odbc.OdbcConnection>venga chiusa.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcException> L&quot;utente può tuttavia riaprire la connessione e continuare."
  example:
  - "The following example uses <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>.  \n  \n [!code-cs[Classic WebData OdbcCommand#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcc_0_1.cs)]\n [!code-vb[Classic WebData OdbcCommand#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcc_0_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RecordsAffected")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OdbcCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(true)]

      public sealed class OdbcCommand : System.Data.Common.DbCommand, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: OdbcCommand()
  nameWithType: OdbcCommand.OdbcCommand()
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> classe."
  remarks: "Il costruttore base Inizializza tutti i campi in base ai valori predefiniti. La tabella seguente illustra i valori di proprietà iniziali per un&quot;istanza di <xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand>      | Proprietà | Il valore iniziale |   |----------------|-------------------|   | <xref:System.Data.Odbc.OdbcCommand.CommandText%2A>| una stringa vuota (&quot;&quot;) |   | <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>| `Text`|   | <xref:System.Data.Odbc.OdbcCommand.Connection%2A>|null|</xref:System.Data.Odbc.OdbcCommand.Connection%2A></xref:System.Data.Odbc.OdbcCommand.CommandType%2A></xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A></xref:System.Data.Odbc.OdbcCommand.CommandText%2A>"
  syntax:
    content: public OdbcCommand ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: OdbcCommand(String)
  nameWithType: OdbcCommand.OdbcCommand(String)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> classe con il testo della query."
  syntax:
    content: public OdbcCommand (string cmdText);
    parameters:
    - id: cmdText
      type: System.String
      description: "Il testo della query."
  overload: System.Data.Odbc.OdbcCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  id: '#ctor(System.String,System.Data.Odbc.OdbcConnection)'
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: OdbcCommand(String,OdbcConnection)
  nameWithType: OdbcCommand.OdbcCommand(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String,OdbcConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> classe con il testo della query e un <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> oggetto."
  syntax:
    content: public OdbcCommand (string cmdText, System.Data.Odbc.OdbcConnection connection);
    parameters:
    - id: cmdText
      type: System.String
      description: "Il testo della query."
    - id: connection
      type: System.Data.Odbc.OdbcConnection
      description: "Un <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> oggetto che rappresenta la connessione a un&quot;origine dati."
  overload: System.Data.Odbc.OdbcCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)
  id: '#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)'
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: OdbcCommand(String,OdbcConnection,OdbcTransaction)
  nameWithType: OdbcCommand.OdbcCommand(String,OdbcConnection,OdbcTransaction)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String,OdbcConnection,OdbcTransaction)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> classe con il testo della query, un <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> oggetto e <xref:System.Data.Odbc.OdbcCommand.Transaction*>.</xref:System.Data.Odbc.OdbcCommand.Transaction*>"
  remarks: "La tabella seguente illustra i valori di proprietà iniziali per un&quot;istanza di questa implementazione di <xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand>      | Proprietà | Il valore iniziale |   |----------------|-------------------|   | <xref:System.Data.Odbc.OdbcCommand.CommandText%2A>| `cmdText`|   | <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>|&30; |   | <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>| `Text`|   | <xref:System.Data.Odbc.OdbcCommand.Connection%2A>| Un nuovo <xref:System.Data.Odbc.OdbcConnection>che è il valore per il `connection` parametro. |       È possibile modificare il valore per uno di questi parametri impostando la proprietà correlata.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcCommand.Connection%2A> </xref:System.Data.Odbc.OdbcCommand.CommandType%2A> </xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> </xref:System.Data.Odbc.OdbcCommand.CommandText%2A>"
  syntax:
    content: public OdbcCommand (string cmdText, System.Data.Odbc.OdbcConnection connection, System.Data.Odbc.OdbcTransaction transaction);
    parameters:
    - id: cmdText
      type: System.String
      description: "Il testo della query."
    - id: connection
      type: System.Data.Odbc.OdbcConnection
      description: "Un <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> oggetto che rappresenta la connessione a un&quot;origine dati."
    - id: transaction
      type: System.Data.Odbc.OdbcTransaction
      description: "La transazione in cui il <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> esegue."
  overload: System.Data.Odbc.OdbcCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Cancel
  id: Cancel
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: OdbcCommand.Cancel()
  fullName: System.Data.Odbc.OdbcCommand.Cancel()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Tenta di annullare l&quot;esecuzione di un <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>."
  remarks: "Se non c&quot;è niente per annullare, non accade nulla. Tuttavia, se si verifica un comando nel processo e il tentativo di annullarlo ha esito negativo, viene generata alcuna eccezione.       Per annullare una query su un singolo thread, annullamento deve essere chiamato da un altro thread. Poiché non è possibile eseguire i comandi in modo asincrono con <xref:System.Data.Odbc.OdbcCommand>, per annullare un comando da un altro thread, un thread deve essere in esecuzione in modo sincrono.</xref:System.Data.Odbc.OdbcCommand> Ciò significa che il <xref:System.Data.Odbc.OdbcCommand>oggetto deve essere accessibile da entrambi i thread.</xref:System.Data.Odbc.OdbcCommand>"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CommandText
  id: CommandText
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: OdbcCommand.CommandText
  fullName: System.Data.Odbc.OdbcCommand.CommandText
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene o imposta l&quot;istruzione SQL o stored procedure da eseguire sull&quot;origine dati."
  remarks: "Quando il <xref:System.Data.IDbCommand.CommandType%2A>è impostata su `StoredProcedure`, la proprietà CommandText deve essere impostata utilizzando sequenze di escape standard ODBC stored procedure.</xref:System.Data.IDbCommand.CommandType%2A> Impostare la proprietà CommandText sul nome della stored procedure non funziona come per altri provider di dati .NET Framework.       Molte funzionalità del linguaggio, ad esempio gli operatori outer join e chiamate di funzione scalare, in genere vengono implementate dalle origini dati. Anche la sintassi per queste funzionalità in genere è specifico dell&quot;origine dati. Pertanto, ODBC definisce sequenze di escape che contengono la sintassi standard per le funzionalità del linguaggio seguenti: - Date, time, timestamp e datetime intervallo valori letterali, funzioni scalari, ad esempio numerici, stringa e funzioni di conversione di tipi di dati, ad esempio il predicato chiamate Procedure - Outer join - carattere di escape la sequenza di escape utilizzata da ODBC è il seguente: ```   {extension}   ``` questa sequenza di escape non è riconosciuta e analizzata dal driver ODBC. Vengono quindi sostituire le sequenze di escape con grammatica specifiche dell&quot;origine dati.       Una stored procedure è un oggetto eseguibile archiviato nell&quot;origine dati. È in genere, una o più istruzioni SQL precompilate. La sequenza di escape per chiamare una routine è ```   {[?=]call procedure-name[([parameter][,[parameter]]...)]}   ``` in `procedure-name` specifica il nome di una stored procedure e `parameter` specifica un parametro di routine.       Il comando esegue questa stored procedure quando si chiama uno dei metodi Execute (ad esempio, <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>o <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>).</xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>       Non è possibile impostare il <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>e le proprietà CommandText se la connessione corrente viene eseguita un&quot;operazione di esecuzione o recupero.</xref:System.Data.Odbc.OdbcCommand.CommandType%2A> </xref:System.Data.Odbc.OdbcCommand.Connection%2A>       Il Provider ODBC.NET non supporta parametri denominati per passare parametri a un&quot;istruzione SQL o una stored procedure chiamata da un <xref:System.Data.Odbc.OdbcCommand>quando <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>è impostato su `Text`.</xref:System.Data.Odbc.OdbcCommand.CommandType%2A> </xref:System.Data.Odbc.OdbcCommand> In questo caso, deve essere utilizzato il segnaposto punto interrogativo (?). Ad esempio: ```   SELECT * FROM Customers WHERE CustomerID = ?   ``` pertanto, l&quot;ordine in cui <xref:System.Data.Odbc.OdbcParameter>gli oggetti vengono aggiunti per il <xref:System.Data.Odbc.OdbcParameterCollection>deve corrispondere esattamente alla posizione del segnaposto punto interrogativo per il parametro.</xref:System.Data.Odbc.OdbcParameterCollection> </xref:System.Data.Odbc.OdbcParameter>       Se un parametro contiene un valore null, il Provider di dati .NET Framework per ODBC ancora associa tale parametro, ma utilizza un parametro predefinito, se ne è stato definito utilizzando SQL_DEFAULT_PARAM, anziché il valore null. Ad esempio, il <xref:System.Data.Odbc.OdbcParameterCollection>: ```   {1, null, 2}   ``` passato nella proprietà CommandText: ```   {call sp(?, ?, ?)}   ``` fa sì che il Provider di dati .NET Framework per ODBC associazione il primo parametro per il valore 1, il terzo parametro con il valore 2 e il secondo parametro come SQL_DEFAULT_PARAM.</xref:System.Data.Odbc.OdbcParameterCollection> Tuttavia, questo comportamento è dipendente dal driver. Se il driver non supporta questa funzionalità, non passare un valore per il parametro. Ad esempio, utilizzare il <xref:System.Data.Odbc.OdbcParameterCollection>: ```   {1, 2}   ``` e impostare la proprietà CommandText al seguente: ```   {call sp(?, null, ?)}   ```       >  [!NOTE] > se un parametro viene omesso, la virgola che lo separa da altri parametri deve comunque essere presente.</xref:System.Data.Odbc.OdbcParameterCollection> Se si omette un parametro di input o input/output, la routine utilizza il valore predefinito del parametro. Un altro modo per specificare che il valore predefinito di un parametro di input o input/output consiste nell&quot;impostare il valore del buffer di lunghezza/indicatore associato al parametro su SQL_DEFAULT_PARAM."
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: "L&quot;istruzione SQL o stored procedure da eseguire. Il valore predefinito è una stringa vuota (&quot;&quot;)."
  overload: System.Data.Odbc.OdbcCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: OdbcCommand.CommandTimeout
  fullName: System.Data.Odbc.OdbcCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene o imposta il tempo di attesa prima di terminare un tentativo di eseguire un comando e generare un errore."
  remarks: "Un valore pari a zero (0) indica nessun limite al tempo di attesa, anziché alcun tempo di attesa e pertanto deve essere evitato."
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "Tempo in secondi di attesa per l&quot;esecuzione del comando. Il valore predefinito è 30 secondi."
  overload: System.Data.Odbc.OdbcCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CommandType
  id: CommandType
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: OdbcCommand.CommandType
  fullName: System.Data.Odbc.OdbcCommand.CommandType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene o imposta un valore che indica come il <xref:System.Data.Odbc.OdbcCommand.CommandText*>proprietà viene interpretata.</xref:System.Data.Odbc.OdbcCommand.CommandText*>"
  remarks: "Quando la proprietà CommandType è impostata `StoredProcedure`, è necessario impostare il <xref:System.Data.Odbc.OdbcCommand.CommandText%2A>proprietà per la sintassi di chiamata ODBC completa.</xref:System.Data.Odbc.OdbcCommand.CommandText%2A> Questa stored procedure viene quindi eseguito il comando quando si chiama uno dei metodi Execute (ad esempio, <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>o <xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>).</xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>       Il <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, CommandType e <xref:System.Data.Odbc.OdbcCommand.CommandText%2A>non è possibile impostare le proprietà se la connessione corrente viene eseguita un&quot;operazione di esecuzione o recupero.</xref:System.Data.Odbc.OdbcCommand.CommandText%2A> </xref:System.Data.Odbc.OdbcCommand.Connection%2A>       Il Provider di dati .NET Framework per ODBC non supporta il passaggio denominato i parametri per un&quot;istruzione SQL o a una stored procedure chiamata da un <xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand> In entrambi i casi, utilizzare il punto interrogativo (?) come segnaposto. Ad esempio: ```   SELECT * FROM Customers WHERE CustomerID = ?   ``` l&quot;ordine in cui <xref:System.Data.Odbc.OdbcParameter>gli oggetti vengono aggiunti per il <xref:System.Data.Odbc.OdbcParameterCollection>deve corrispondere esattamente alla posizione del segnaposto punto interrogativo per il parametro.</xref:System.Data.Odbc.OdbcParameterCollection> </xref:System.Data.Odbc.OdbcParameter>      > [!NOTE] > Il Provider di dati di .NET Framework per ODBC non supporta il <xref:System.Data.CommandType>impostazione `TableDirect`.</xref:System.Data.CommandType>"
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "Uno del <xref href=&quot;System.Data.CommandType&quot;> </xref> valori. Il valore predefinito è <xref uid=&quot;langword_csharp_Text&quot; name=&quot;Text&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il valore non valido <xref href=&quot;System.Data.CommandType&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Connection
  id: Connection
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Connection
  nameWithType: OdbcCommand.Connection
  fullName: System.Data.Odbc.OdbcCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene o imposta il <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref> utilizzato da questa istanza del <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>."
  remarks: "Non è possibile impostare la connessione, <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>, e <xref:System.Data.Odbc.OdbcCommand.CommandText%2A>proprietà se la connessione corrente viene eseguita un&quot;operazione di esecuzione o recupero.</xref:System.Data.Odbc.OdbcCommand.CommandText%2A> </xref:System.Data.Odbc.OdbcCommand.CommandType%2A>       Se si imposta la connessione durante una transazione è in corso e <xref:System.Data.Odbc.OdbcCommand.Transaction%2A>proprietà non è null, un <xref:System.InvalidOperationException>viene generato.</xref:System.InvalidOperationException> </xref:System.Data.Odbc.OdbcCommand.Transaction%2A> Se si imposta la connessione dopo commit o il rollback della transazione e <xref:System.Data.Odbc.OdbcCommand.Transaction%2A>proprietà non è null, il <xref:System.Data.Odbc.OdbcCommand.Transaction%2A>viene quindi impostata su un valore null.</xref:System.Data.Odbc.OdbcCommand.Transaction%2A> </xref:System.Data.Odbc.OdbcCommand.Transaction%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcConnection Connection { get; set; }
    return:
      type: System.Data.Odbc.OdbcConnection
      description: "La connessione a un&quot;origine dati. Il valore predefinito è un valore null."
  overload: System.Data.Odbc.OdbcCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La proprietà di connessione è stata modificata mentre è in corso una transazione."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: OdbcCommand.CreateDbParameter()
  fullName: System.Data.Odbc.OdbcCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "Da aggiungere."
  overload: System.Data.Odbc.OdbcCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: OdbcCommand.CreateParameter()
  fullName: System.Data.Odbc.OdbcCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Crea una nuova istanza di un <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> oggetto."
  remarks: "Il metodo CreateParameter è una versione fortemente tipizzata di <xref:System.Data.IDbCommand.CreateParameter%2A>.</xref:System.Data.IDbCommand.CreateParameter%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcParameter
      description: "Un <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> oggetto."
  overload: System.Data.Odbc.OdbcCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.DbConnection
  id: DbConnection
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: OdbcCommand.DbConnection
  fullName: System.Data.Odbc.OdbcCommand.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "Da aggiungere."
  overload: System.Data.Odbc.OdbcCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: OdbcCommand.DbParameterCollection
  fullName: System.Data.Odbc.OdbcCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "Da aggiungere."
  overload: System.Data.Odbc.OdbcCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: OdbcCommand.DbTransaction
  fullName: System.Data.Odbc.OdbcCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "Da aggiungere."
  overload: System.Data.Odbc.OdbcCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: OdbcCommand.DesignTimeVisible
  fullName: System.Data.Odbc.OdbcCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene o imposta un valore che indica se l&quot;oggetto comando deve essere visibile in un controllo dell&quot;interfaccia personalizzata."
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: '**true**, se l&quot;oggetto comando deve essere visibile in un controllo; in caso contrario **false**. Il valore predefinito è **true**.'
  overload: System.Data.Odbc.OdbcCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OdbcCommand.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcCommand.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.Data.Odbc.OdbcCommand.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OdbcCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Da aggiungere."
    return:
      type: System.Data.Common.DbDataReader
      description: "Da aggiungere."
  overload: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: OdbcCommand.ExecuteNonQuery()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Esegue un&quot;istruzione SQL il <xref:System.Data.Odbc.OdbcCommand.Connection*>e restituisce il numero di righe interessate.</xref:System.Data.Odbc.OdbcCommand.Connection*>"
  remarks: "È possibile utilizzare ExecuteNonQuery per eseguire operazioni di catalogo (ad esempio, eseguire query sulla struttura di un database o la creazione di oggetti di database quali tabelle); o modificare i dati in un database, senza utilizzare un <xref:System.Data.DataSet>, per l&quot;esecuzione di UPDATE, INSERT o DELETE.</xref:System.Data.DataSet>       È inoltre possibile utilizzare ExecuteNonQuery per eseguire più istruzioni SQL se il driver ODBC sottostante supporta questa funzionalità. In questo caso, il valore restituito è il numero di righe interessate da tutte le istruzioni nel comando.       Sebbene ExecuteNonQuery non restituisce righe, eventuali parametri di output o valori restituiti mappati a parametri vengono popolati con dati.       Per le istruzioni UPDATE, INSERT e DELETE, il valore restituito è il numero di righe interessate dal comando. Per tutti gli altri tipi di istruzioni, il valore restituito è -1. Se si verifica un&quot;operazione di rollback, anche il valore restituito è -1.       Quando esiste un trigger in una tabella e i dati viene aggiunto o modificato nella tabella, il valore restituito include il numero di righe interessate dall&quot;operazione insert o update di e il numero di righe interessate dal trigger o trigger."
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "Per le istruzioni UPDATE, INSERT e DELETE, il valore restituito è il numero di righe interessate dal comando. Per tutti gli altri tipi di istruzioni, il valore restituito è -1."
  overload: System.Data.Odbc.OdbcCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione non esiste.       - oppure - la connessione non è aperta."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: OdbcCommand.ExecuteReader()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Invia il <> </> *> per il <> </> *> e compila un <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref>."
  remarks: "È necessario impostare il <xref:System.Data.Odbc.OdbcCommand.CommandText%2A>proprietà per la sintassi di chiamata ODBC completa per le stored procedure.</xref:System.Data.Odbc.OdbcCommand.CommandText%2A> Il comando esegue questa stored procedure quando si chiama ExecuteReader.       Mentre il <xref:System.Data.Odbc.OdbcDataReader>viene utilizzato l&quot;associato <xref:System.Data.Odbc.OdbcConnection>è occupata <xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcDataReader> In questo stato, altre operazioni non possono essere eseguiti <xref:System.Data.Odbc.OdbcConnection>eccetto la chiusura di tale</xref:System.Data.Odbc.OdbcConnection> Questo è il caso fino a quando il <xref:System.Data.Odbc.OdbcDataReader.Close%2A>metodo il <xref:System.Data.Odbc.OdbcDataReader>viene chiamato.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcDataReader.Close%2A>"
  syntax:
    content: public System.Data.Odbc.OdbcDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcDataReader
      description: "Un <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> oggetto."
  overload: System.Data.Odbc.OdbcCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: OdbcCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.Odbc.OdbcCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Invia il <> </> *> per il <> </> *> e compila un <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> utilizzando uno del <xref uid=&quot;langword_csharp_CommandBehavior&quot; name=&quot;CommandBehavior&quot; href=&quot;&quot;> </xref> valori."
  remarks: "Se si prevede che l&quot;istruzione SQL per restituire una sola riga, si specifica `SingleRow` come il <xref:System.Data.CommandBehavior>valore può migliorare le prestazioni dell&quot;applicazione.</xref:System.Data.CommandBehavior>       È necessario impostare il <xref:System.Data.Odbc.OdbcCommand.CommandText%2A>proprietà per la sintassi di chiamata ODBC completa per le stored procedure.</xref:System.Data.Odbc.OdbcCommand.CommandText%2A> Il comando esegue questa stored procedure quando si chiama <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>.</xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>       Il <xref:System.Data.Odbc.OdbcDataReader>supporta una modalità speciale che consente valori binari di grandi dimensioni da leggere in modo efficiente.</xref:System.Data.Odbc.OdbcDataReader> Per ulteriori informazioni, vedere il `SequentialAccess` impostazione per <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior>      > [!NOTE] > Il `SequentialAccess` valore <xref:System.Data.CommandBehavior>è non la limitazione impostazione; significa semplicemente che sarà necessario l&quot;accesso sequenziale almeno a <xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.CommandBehavior> Ad esempio, quando si utilizza il Driver ODBC di SQL Server in `SequentialAccess` modalità, è comunque possibile spostare la prima colonna di un <xref:System.Data.Odbc.OdbcDataReader>riga dopo avere letto tutte le altre colonne in modo sequenziale.</xref:System.Data.Odbc.OdbcDataReader>       Mentre il <xref:System.Data.Odbc.OdbcDataReader>viene utilizzato l&quot;associato <xref:System.Data.Odbc.OdbcConnection>è occupata <xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcDataReader> In questo stato, altre operazioni non possono essere eseguiti <xref:System.Data.Odbc.OdbcConnection>eccetto la chiusura di tale</xref:System.Data.Odbc.OdbcConnection> Questo è il caso finché non si chiama il <xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=fullName>metodo.</xref:System.Data.Odbc.OdbcDataReader.Close%2A?displayProperty=fullName> Se il <xref:System.Data.Odbc.OdbcDataReader>viene creato con <xref:System.Data.CommandBehavior>impostato su `CloseConnection`, la chiusura di <xref:System.Data.Odbc.OdbcDataReader>la connessione viene chiusa automaticamente.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.CommandBehavior> </xref:System.Data.Odbc.OdbcDataReader>"
  syntax:
    content: public System.Data.Odbc.OdbcDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "Uno del <xref uid=&quot;langword_csharp_System.Data.CommandBehavior&quot; name=&quot;System.Data.CommandBehavior&quot; href=&quot;&quot;> </xref> valori."
    return:
      type: System.Data.Odbc.OdbcDataReader
      description: "Un <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> oggetto."
  overload: System.Data.Odbc.OdbcCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: OdbcCommand.ExecuteScalar()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Esegue la query e restituisce la prima colonna della prima riga nel set di risultati restituiti dalla query. Colonne o righe aggiuntive vengono ignorate."
  remarks: "Utilizzare il metodo ExecuteScalar per recuperare un singolo valore (ad esempio, un valore aggregato) da un&quot;origine dati. Ciò richiede meno codice utilizzando il <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>metodo e quindi di eseguire le operazioni necessarie per generare il valore singolo dai dati restituiti da un <xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "Imposta la prima colonna della prima riga nel risultato o un riferimento null se il set di risultati è vuoto."
  overload: System.Data.Odbc.OdbcCommand.ExecuteScalar*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Parameters
  id: Parameters
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: OdbcCommand.Parameters
  fullName: System.Data.Odbc.OdbcCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Gets the <xref href=&quot;System.Data.Odbc.OdbcParameterCollection&quot;></xref>."
  remarks: "Quando <xref:System.Data.Odbc.OdbcCommand.CommandType%2A>è impostato su `Text`, il Provider di dati .NET Framework per ODBC non supporta il passaggio denominato i parametri per un&quot;istruzione SQL o a una stored procedure chiamata da un <xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommand.CommandType%2A> In entrambi i casi, utilizzare il punto interrogativo (?) come segnaposto. Ad esempio: ```   SELECT * FROM Customers WHERE CustomerID = ?   ``` l&quot;ordine in cui <xref:System.Data.Odbc.OdbcParameter>gli oggetti vengono aggiunti per il <xref:System.Data.Odbc.OdbcParameterCollection>deve corrispondere esattamente alla posizione del segnaposto punto interrogativo per il parametro nel testo del comando.</xref:System.Data.Odbc.OdbcParameterCollection> </xref:System.Data.Odbc.OdbcParameter>      > [!NOTE] > Se i parametri nella raccolta non corrispondono ai requisiti della query da eseguire, può verificarsi un errore."
  syntax:
    content: public System.Data.Odbc.OdbcParameterCollection Parameters { get; }
    return:
      type: System.Data.Odbc.OdbcParameterCollection
      description: "I parametri dell&quot;istruzione SQL o stored procedure. Il valore predefinito è una raccolta vuota."
  overload: System.Data.Odbc.OdbcCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Prepare
  id: Prepare
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: OdbcCommand.Prepare()
  fullName: System.Data.Odbc.OdbcCommand.Prepare()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Crea una versione preparata o compilata del comando nell&quot;origine dati."
  remarks: "Il metodo di preparazione chiama ODBC `SQLPrepare` (funzione). A seconda delle funzionalità del driver ODBC sottostante e origine dati, informazioni sui parametri, ad esempio tipi di dati può essere controllate quando viene preparata l&quot;istruzione, se tutti i parametri sono stati associati o quando viene eseguita se non tutti i parametri sono stati associati. Per garantire la massima interoperabilità, un&quot;applicazione deve separare tutti i parametri applicati a un&quot;istruzione SQL precedente prima di preparare una nuova istruzione SQL sullo stesso <xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand> In questo modo gli errori sono causati dal precedente informazioni sui parametri utilizzati per la nuova istruzione SQL.       Se si chiama un&quot;istruzione Execute metodo dopo aver chiamato Prepare, qualsiasi valore del parametro è maggiore del valore specificato per il <xref:System.Data.Odbc.OdbcParameter.Size%2A>proprietà viene troncata automaticamente alle dimensioni specificate originale del parametro e non il troncamento vengono restituiti errori.</xref:System.Data.Odbc.OdbcParameter.Size%2A>       I parametri di output (se preparati o meno) deve avere un tipo di dati specificato dall&quot;utente. Se si specifica un tipo di dati di lunghezza variabile, è necessario specificare anche il numero massimo di <xref:System.Data.Odbc.OdbcParameter.Size%2A>.</xref:System.Data.Odbc.OdbcParameter.Size%2A>"
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommand.Prepare*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il <> </> *> non è impostata.       -or-       The <>*> is not <xref:System.Data.Odbc.OdbcConnection.Open*>.</xref:System.Data.Odbc.OdbcConnection.Open*>"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: OdbcCommand.ResetCommandTimeout()
  fullName: System.Data.Odbc.OdbcCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Reimposta il <xref:System.Data.Odbc.OdbcCommand.CommandTimeout*>proprietà sul valore predefinito.</xref:System.Data.Odbc.OdbcCommand.CommandTimeout*>"
  remarks: "Il valore predefinito di <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>è 30 secondi.</xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>"
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommand.ResetCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OdbcCommand.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcCommand.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."
  remarks: "Questo membro è un&quot;implementazione esplicita dell&quot;interfaccia di un membro. E può essere utilizzato solo quando il <xref:System.Data.Odbc.OdbcCommand>esegue il cast dell&quot;istanza di un <xref:InterfaceName>interfaccia.</xref:InterfaceName> </xref:System.Data.Odbc.OdbcCommand>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Un nuovo [T. System. Object](~/add/includes/ajax-current-ext-md.md) che rappresenta una copia di questa istanza."
  overload: System.Data.Odbc.OdbcCommand.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.Transaction
  id: Transaction
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: OdbcCommand.Transaction
  fullName: System.Data.Odbc.OdbcCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene o imposta il <xref href=&quot;System.Data.Odbc.OdbcTransaction&quot;> </xref> entro il quale il <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> esegue."
  remarks: "Non è possibile impostare la proprietà della transazione se è già impostato su un valore specifico e il comando è in fase di esecuzione. Se si imposta la proprietà della transazione un <xref:System.Data.Odbc.OdbcTransaction>oggetto che non è connesso allo stesso <xref:System.Data.Odbc.OdbcConnection>come il <xref:System.Data.Odbc.OdbcCommand>dell&quot;oggetto, verrà generata un&quot;eccezione la volta successiva che si tenta di eseguire un&quot;istruzione.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcTransaction>"
  syntax:
    content: public System.Data.Odbc.OdbcTransaction Transaction { get; set; }
    return:
      type: System.Data.Odbc.OdbcTransaction
      description: "An <xref href=&quot;System.Data.Odbc.OdbcTransaction&quot;></xref>. Il valore predefinito è un valore null."
  overload: System.Data.Odbc.OdbcCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.Odbc.OdbcCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: OdbcCommand.UpdatedRowSource
  fullName: System.Data.Odbc.OdbcCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Ottiene o imposta un valore che specifica il modo in **aggiornamento** metodo applicherà i risultati del comando per il **DataRow**."
  remarks: "Il valore predefinito <xref:System.Data.UpdateRowSource>valore **entrambi** , a meno che il comando viene generato automaticamente, come con la <xref:System.Data.Odbc.OdbcCommandBuilder>, nel qual caso il valore predefinito è **Nessuno**.</xref:System.Data.Odbc.OdbcCommandBuilder> </xref:System.Data.UpdateRowSource>       Per ulteriori informazioni su come utilizzare la proprietà UpdatedRowSource, vedere [parametri DataAdapter](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "Uno del <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref> valori."
  overload: System.Data.Odbc.OdbcCommand.UpdatedRowSource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.Common.DbCommand
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Odbc.OdbcCommand.#ctor
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand()
  nameWithType: OdbcCommand.OdbcCommand()
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand()
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand(String)
  nameWithType: OdbcCommand.OdbcCommand(String)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand(String,OdbcConnection)
  nameWithType: OdbcCommand.OdbcCommand(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String,OdbcConnection)
- uid: System.Data.Odbc.OdbcConnection
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcConnection
  nameWithType: OdbcConnection
  fullName: System.Data.Odbc.OdbcConnection
- uid: System.Data.Odbc.OdbcCommand.#ctor(System.String,System.Data.Odbc.OdbcConnection,System.Data.Odbc.OdbcTransaction)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand(String,OdbcConnection,OdbcTransaction)
  nameWithType: OdbcCommand.OdbcCommand(String,OdbcConnection,OdbcTransaction)
  fullName: System.Data.Odbc.OdbcCommand.OdbcCommand(String,OdbcConnection,OdbcTransaction)
- uid: System.Data.Odbc.OdbcTransaction
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcTransaction
  nameWithType: OdbcTransaction
  fullName: System.Data.Odbc.OdbcTransaction
- uid: System.Data.Odbc.OdbcCommand.Cancel
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Cancel()
  nameWithType: OdbcCommand.Cancel()
  fullName: System.Data.Odbc.OdbcCommand.Cancel()
- uid: System.Data.Odbc.OdbcCommand.CommandText
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandText
  nameWithType: OdbcCommand.CommandText
  fullName: System.Data.Odbc.OdbcCommand.CommandText
- uid: System.Data.Odbc.OdbcCommand.CommandTimeout
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OdbcCommand.CommandTimeout
  fullName: System.Data.Odbc.OdbcCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcCommand.CommandType
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandType
  nameWithType: OdbcCommand.CommandType
  fullName: System.Data.Odbc.OdbcCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.Odbc.OdbcCommand.Connection
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Connection
  nameWithType: OdbcCommand.Connection
  fullName: System.Data.Odbc.OdbcCommand.Connection
- uid: System.Data.Odbc.OdbcCommand.CreateDbParameter
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: OdbcCommand.CreateDbParameter()
  fullName: System.Data.Odbc.OdbcCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.Odbc.OdbcCommand.CreateParameter
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: OdbcCommand.CreateParameter()
  fullName: System.Data.Odbc.OdbcCommand.CreateParameter()
- uid: System.Data.Odbc.OdbcParameter
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcParameter
  nameWithType: OdbcParameter
  fullName: System.Data.Odbc.OdbcParameter
- uid: System.Data.Odbc.OdbcCommand.DbConnection
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbConnection
  nameWithType: OdbcCommand.DbConnection
  fullName: System.Data.Odbc.OdbcCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.Odbc.OdbcCommand.DbParameterCollection
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OdbcCommand.DbParameterCollection
  fullName: System.Data.Odbc.OdbcCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.Odbc.OdbcCommand.DbTransaction
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OdbcCommand.DbTransaction
  fullName: System.Data.Odbc.OdbcCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.Odbc.OdbcCommand.DesignTimeVisible
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OdbcCommand.DesignTimeVisible
  fullName: System.Data.Odbc.OdbcCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcCommand.Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OdbcCommand.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcCommand.Dispose(Boolean)
- uid: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OdbcCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.Odbc.OdbcCommand.ExecuteNonQuery
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: OdbcCommand.ExecuteNonQuery()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteNonQuery()
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: OdbcCommand.ExecuteReader()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteReader()
- uid: System.Data.Odbc.OdbcDataReader
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcDataReader
  nameWithType: OdbcDataReader
  fullName: System.Data.Odbc.OdbcDataReader
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: OdbcCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.Odbc.OdbcCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.Odbc.OdbcCommand.ExecuteScalar
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: OdbcCommand.ExecuteScalar()
  fullName: System.Data.Odbc.OdbcCommand.ExecuteScalar()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcCommand.Parameters
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Parameters
  nameWithType: OdbcCommand.Parameters
  fullName: System.Data.Odbc.OdbcCommand.Parameters
- uid: System.Data.Odbc.OdbcParameterCollection
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcParameterCollection
  nameWithType: OdbcParameterCollection
  fullName: System.Data.Odbc.OdbcParameterCollection
- uid: System.Data.Odbc.OdbcCommand.Prepare
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Prepare()
  nameWithType: OdbcCommand.Prepare()
  fullName: System.Data.Odbc.OdbcCommand.Prepare()
- uid: System.Data.Odbc.OdbcCommand.ResetCommandTimeout
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: OdbcCommand.ResetCommandTimeout()
  fullName: System.Data.Odbc.OdbcCommand.ResetCommandTimeout()
- uid: System.Data.Odbc.OdbcCommand.System#ICloneable#Clone
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OdbcCommand.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcCommand.System.ICloneable.Clone()
- uid: System.Data.Odbc.OdbcCommand.Transaction
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Transaction
  nameWithType: OdbcCommand.Transaction
  fullName: System.Data.Odbc.OdbcCommand.Transaction
- uid: System.Data.Odbc.OdbcCommand.UpdatedRowSource
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OdbcCommand.UpdatedRowSource
  fullName: System.Data.Odbc.OdbcCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.Odbc.OdbcCommand.#ctor*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: OdbcCommand
  nameWithType: OdbcCommand.OdbcCommand
- uid: System.Data.Odbc.OdbcCommand.Cancel*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Cancel
  nameWithType: OdbcCommand.Cancel
- uid: System.Data.Odbc.OdbcCommand.CommandText*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandText
  nameWithType: OdbcCommand.CommandText
- uid: System.Data.Odbc.OdbcCommand.CommandTimeout*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OdbcCommand.CommandTimeout
- uid: System.Data.Odbc.OdbcCommand.CommandType*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CommandType
  nameWithType: OdbcCommand.CommandType
- uid: System.Data.Odbc.OdbcCommand.Connection*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Connection
  nameWithType: OdbcCommand.Connection
- uid: System.Data.Odbc.OdbcCommand.CreateDbParameter*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: OdbcCommand.CreateDbParameter
- uid: System.Data.Odbc.OdbcCommand.CreateParameter*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: CreateParameter
  nameWithType: OdbcCommand.CreateParameter
- uid: System.Data.Odbc.OdbcCommand.DbConnection*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbConnection
  nameWithType: OdbcCommand.DbConnection
- uid: System.Data.Odbc.OdbcCommand.DbParameterCollection*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OdbcCommand.DbParameterCollection
- uid: System.Data.Odbc.OdbcCommand.DbTransaction*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OdbcCommand.DbTransaction
- uid: System.Data.Odbc.OdbcCommand.DesignTimeVisible*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OdbcCommand.DesignTimeVisible
- uid: System.Data.Odbc.OdbcCommand.Dispose*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Dispose
  nameWithType: OdbcCommand.Dispose
- uid: System.Data.Odbc.OdbcCommand.ExecuteDbDataReader*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: OdbcCommand.ExecuteDbDataReader
- uid: System.Data.Odbc.OdbcCommand.ExecuteNonQuery*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: OdbcCommand.ExecuteNonQuery
- uid: System.Data.Odbc.OdbcCommand.ExecuteReader*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: OdbcCommand.ExecuteReader
- uid: System.Data.Odbc.OdbcCommand.ExecuteScalar*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: OdbcCommand.ExecuteScalar
- uid: System.Data.Odbc.OdbcCommand.Parameters*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Parameters
  nameWithType: OdbcCommand.Parameters
- uid: System.Data.Odbc.OdbcCommand.Prepare*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Prepare
  nameWithType: OdbcCommand.Prepare
- uid: System.Data.Odbc.OdbcCommand.ResetCommandTimeout*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: OdbcCommand.ResetCommandTimeout
- uid: System.Data.Odbc.OdbcCommand.System#ICloneable#Clone*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OdbcCommand.System.ICloneable.Clone
- uid: System.Data.Odbc.OdbcCommand.Transaction*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: Transaction
  nameWithType: OdbcCommand.Transaction
- uid: System.Data.Odbc.OdbcCommand.UpdatedRowSource*
  parent: System.Data.Odbc.OdbcCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OdbcCommand.UpdatedRowSource
