### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.CommonAcl
  id: CommonAcl
  children:
  - System.Security.AccessControl.CommonAcl.BinaryLength
  - System.Security.AccessControl.CommonAcl.Count
  - System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.CommonAcl.IsCanonical
  - System.Security.AccessControl.CommonAcl.IsContainer
  - System.Security.AccessControl.CommonAcl.IsDS
  - System.Security.AccessControl.CommonAcl.Item(System.Int32)
  - System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  - System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  - System.Security.AccessControl.CommonAcl.Revision
  langs:
  - csharp
  name: CommonAcl
  nameWithType: CommonAcl
  fullName: System.Security.AccessControl.CommonAcl
  type: Class
  summary: "Rappresenta un elenco di controllo di accesso (ACL) e costituisce la classe base per il <xref href=&quot;System.Security.AccessControl.DiscretionaryAcl&quot;> </xref> e <xref href=&quot;System.Security.AccessControl.SystemAcl&quot;> </xref> classi."
  remarks: "-   Alcune combinazioni di flag maschera di accesso e di ereditarietà sono prive di significato:-viene rimosso qualsiasi voce di controllo di accesso (ACE) con maschera di accesso pari a zero.      -ACE ereditare-solo all&quot;interno di elenchi ACL degli oggetti vengono rimossi.      - <xref:System.Security.AccessControl.PropagationFlags>, <xref:System.Security.AccessControl.PropagationFlags>, <xref:System.Security.AccessControl.InheritanceFlags>, e <xref:System.Security.AccessControl.InheritanceFlags>flag in tutte le voci ACE in foglia oggetto ACL vengono cancellati.</xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.PropagationFlags> </xref:System.Security.AccessControl.PropagationFlags>      -ACE che hanno un <xref:System.Security.AccessControl.PropagationFlags>flag in assenza del <xref:System.Security.AccessControl.InheritanceFlags>o <xref:System.Security.AccessControl.InheritanceFlags>flag sono prive di significato; vengono rimossi.</xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.PropagationFlags>      -La <xref:System.Security.AccessControl.PropagationFlags>in assenza di flag di <xref:System.Security.AccessControl.InheritanceFlags>o <xref:System.Security.AccessControl.InheritanceFlags>flag possono essere rimossi.</xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.InheritanceFlags> </xref:System.Security.AccessControl.PropagationFlags>      -ACE che hanno un <xref:System.Security.AccessControl.AuditFlags>valore <xref:System.Security.AccessControl.AuditFlags>o <xref:System.Security.AccessControl.AuditFlags>nel controllo di accesso discrezionale (DACL) gli elenchi vengono rimossi.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>      -Qualsiasi voce ACE che non specifica di controllo <xref:System.Security.AccessControl.AuditFlags>o <xref:System.Security.AccessControl.AuditFlags>viene rimosso.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>      -On, DACL ACE SystemAudit e SystemAlarm vengono rimossi.      -Negli elenchi di controllo di accesso del sistema (SACL), vengono rimosse AccessAllowed e AccessDenied ACE.       Ordine canonico viene mantenuto in base all&quot;algoritmo seguente:-le voci ACE esplicite hanno la precedenza sulle ACE ereditate; Questa regola si applica a elenchi DACL e SACL.      -In elenchi DACL, tra le voci ACE esplicite, le voci ACE che negano l&quot;accesso hanno la precedenza rispetto a quelle che consentono l&quot;accesso. Per un oggetto directory ACL, le voci ACE presenteranno precedono oggetto ACE.      -Tutte le voci ACE comuni hanno la precedenza rispetto alle voci ACE.      -Ereditate mantengono l&quot;ordine relativo dopo la canonicità.      -ACE non riconosciute e personalizzate non sono consentite negli elenchi DACL e SACL.      -All&quot;interno di intervalli contigui (AccessDenied e AccessAllowed ACE in elenchi DACL, tutte le voci ACE esplicite nei SACL), le voci ACE vengono ordinate utilizzando il <xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A>metodi il <xref:System.Security.Principal.SecurityIdentifier>oggetti associati alle voci.</xref:System.Security.Principal.SecurityIdentifier> </xref:System.Security.Principal.SecurityIdentifier.CompareTo%2A>       Le voci ACE adiacenti vengono combinate, se appropriato.  Ciò riduce le dimensioni dell&quot;ACL senza modificare la semantica di controllo di accesso che vengono concesse."
  syntax:
    content: 'public abstract class CommonAcl : System.Security.AccessControl.GenericAcl'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAcl
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericAcl.AclRevision
  - System.Security.AccessControl.GenericAcl.AclRevisionDS
  - System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)
  - System.Security.AccessControl.GenericAcl.GetEnumerator
  - System.Security.AccessControl.GenericAcl.IsSynchronized
  - System.Security.AccessControl.GenericAcl.MaxBinaryLength
  - System.Security.AccessControl.GenericAcl.SyncRoot
  - System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.BinaryLength
  id: BinaryLength
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: BinaryLength
  nameWithType: CommonAcl.BinaryLength
  fullName: System.Security.AccessControl.CommonAcl.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Ottiene la lunghezza, in byte, della rappresentazione binaria dell&quot;oggetto corrente <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> oggetto. Questa lunghezza deve essere usata prima di effettuare il marshalling l&quot;elenco di controllo di accesso (ACL) in una matrice binaria con il <xref:System.Security.AccessControl.CommonAcl.GetBinaryForm*>metodo.</xref:System.Security.AccessControl.CommonAcl.GetBinaryForm*>"
  syntax:
    content: public override sealed int BinaryLength { get; }
    return:
      type: System.Int32
      description: "La lunghezza, espressa in byte, della rappresentazione binaria dell&quot;oggetto corrente <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> oggetto."
  overload: System.Security.AccessControl.CommonAcl.BinaryLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Count
  id: Count
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Count
  nameWithType: CommonAcl.Count
  fullName: System.Security.AccessControl.CommonAcl.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Ottiene il numero di accesso (ACE) le voci di controllo nell&quot;attuale <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> oggetto."
  syntax:
    content: public override sealed int Count { get; }
    return:
      type: System.Int32
      description: "Il numero di voci ACE presenti nell&quot;attuale <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> oggetto."
  overload: System.Security.AccessControl.CommonAcl.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CommonAcl.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Effettua il marshalling il contenuto del <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> oggetto nella matrice di byte specificata in corrispondenza dell&quot;offset specificato."
  syntax:
    content: public override sealed void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "Matrice di byte in cui il contenuto del <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> viene sottoposto a marshalling."
    - id: offset
      type: System.Int32
      description: "L&quot;offset in corrispondenza del quale viene avviato il marshalling."
  overload: System.Security.AccessControl.CommonAcl.GetBinaryForm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.IsCanonical
  id: IsCanonical
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: IsCanonical
  nameWithType: CommonAcl.IsCanonical
  fullName: System.Security.AccessControl.CommonAcl.IsCanonical
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Ottiene un valore booleano che specifica se l&quot;accesso (ACE) di voci di controllo nell&quot;attuale <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> oggetto sono in ordinamento canonico."
  syntax:
    content: public bool IsCanonical { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se le voci ACE nell&quot;oggetto <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> oggetto sono in ordinamento canonico; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonAcl.IsCanonical*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.IsContainer
  id: IsContainer
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: IsContainer
  nameWithType: CommonAcl.IsContainer
  fullName: System.Security.AccessControl.CommonAcl.IsContainer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Imposta se la <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> oggetto è un contenitore."
  syntax:
    content: public bool IsContainer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto corrente <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> oggetto è un contenitore."
  overload: System.Security.AccessControl.CommonAcl.IsContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.IsDS
  id: IsDS
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: IsDS
  nameWithType: CommonAcl.IsDS
  fullName: System.Security.AccessControl.CommonAcl.IsDS
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Imposta se l&quot;oggetto corrente <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> oggetto è un elenco di controllo di accesso (ACL) di un oggetto directory."
  syntax:
    content: public bool IsDS { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto corrente <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> è un oggetto directory ACL."
  overload: System.Security.AccessControl.CommonAcl.IsDS*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: CommonAcl.Item(Int32)
  fullName: System.Security.AccessControl.CommonAcl.Item(Int32)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Ottiene o imposta il <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> in corrispondenza dell&quot;indice specificato."
  syntax:
    content: public override sealed System.Security.AccessControl.GenericAce this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "L&quot;indice in base zero di <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> da ottenere o impostare."
    return:
      type: System.Security.AccessControl.GenericAce
      description: "Il <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> in corrispondenza dell&quot;indice specificato."
  overload: System.Security.AccessControl.CommonAcl.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  id: Purge(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Purge(SecurityIdentifier)
  nameWithType: CommonAcl.Purge(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonAcl.Purge(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Rimuove tutte le voci controllo di accesso (ACE) contenute da questo <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> oggetto associato all&quot;oggetto specificato <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto."
  syntax:
    content: public void Purge (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "Il <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> oggetto da cercare."
  overload: System.Security.AccessControl.CommonAcl.Purge*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  id: RemoveInheritedAces
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: RemoveInheritedAces()
  nameWithType: CommonAcl.RemoveInheritedAces()
  fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Rimuove tutte le voci di controllo di accesso ereditate (ACE) da questo <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref> oggetto."
  syntax:
    content: public void RemoveInheritedAces ();
    parameters: []
  overload: System.Security.AccessControl.CommonAcl.RemoveInheritedAces*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAcl.Revision
  id: Revision
  parent: System.Security.AccessControl.CommonAcl
  langs:
  - csharp
  name: Revision
  nameWithType: CommonAcl.Revision
  fullName: System.Security.AccessControl.CommonAcl.Revision
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Ottiene il livello di revisione per il <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref>."
  syntax:
    content: public override sealed byte Revision { get; }
    return:
      type: System.Byte
      description: "Un valore di byte che specifica il livello di revisione del <xref href=&quot;System.Security.AccessControl.CommonAcl&quot;> </xref>."
  overload: System.Security.AccessControl.CommonAcl.Revision*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.GenericAcl
  isExternal: false
  name: System.Security.AccessControl.GenericAcl
- uid: System.Security.AccessControl.CommonAcl.BinaryLength
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: BinaryLength
  nameWithType: CommonAcl.BinaryLength
  fullName: System.Security.AccessControl.CommonAcl.BinaryLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.CommonAcl.Count
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Count
  nameWithType: CommonAcl.Count
  fullName: System.Security.AccessControl.CommonAcl.Count
- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CommonAcl.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CommonAcl.GetBinaryForm(Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.CommonAcl.IsCanonical
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsCanonical
  nameWithType: CommonAcl.IsCanonical
  fullName: System.Security.AccessControl.CommonAcl.IsCanonical
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.CommonAcl.IsContainer
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsContainer
  nameWithType: CommonAcl.IsContainer
  fullName: System.Security.AccessControl.CommonAcl.IsContainer
- uid: System.Security.AccessControl.CommonAcl.IsDS
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsDS
  nameWithType: CommonAcl.IsDS
  fullName: System.Security.AccessControl.CommonAcl.IsDS
- uid: System.Security.AccessControl.CommonAcl.Item(System.Int32)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Item(Int32)
  nameWithType: CommonAcl.Item(Int32)
  fullName: System.Security.AccessControl.CommonAcl.Item(Int32)
- uid: System.Security.AccessControl.GenericAce
  parent: System.Security.AccessControl
  isExternal: false
  name: GenericAce
  nameWithType: GenericAce
  fullName: System.Security.AccessControl.GenericAce
- uid: System.Security.AccessControl.CommonAcl.Purge(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Purge(SecurityIdentifier)
  nameWithType: CommonAcl.Purge(SecurityIdentifier)
  fullName: System.Security.AccessControl.CommonAcl.Purge(SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: RemoveInheritedAces()
  nameWithType: CommonAcl.RemoveInheritedAces()
  fullName: System.Security.AccessControl.CommonAcl.RemoveInheritedAces()
- uid: System.Security.AccessControl.CommonAcl.Revision
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Revision
  nameWithType: CommonAcl.Revision
  fullName: System.Security.AccessControl.CommonAcl.Revision
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Security.AccessControl.CommonAcl.BinaryLength*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: BinaryLength
  nameWithType: CommonAcl.BinaryLength
- uid: System.Security.AccessControl.CommonAcl.Count*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Count
  nameWithType: CommonAcl.Count
- uid: System.Security.AccessControl.CommonAcl.GetBinaryForm*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: GetBinaryForm
  nameWithType: CommonAcl.GetBinaryForm
- uid: System.Security.AccessControl.CommonAcl.IsCanonical*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsCanonical
  nameWithType: CommonAcl.IsCanonical
- uid: System.Security.AccessControl.CommonAcl.IsContainer*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsContainer
  nameWithType: CommonAcl.IsContainer
- uid: System.Security.AccessControl.CommonAcl.IsDS*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: IsDS
  nameWithType: CommonAcl.IsDS
- uid: System.Security.AccessControl.CommonAcl.Item*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Item
  nameWithType: CommonAcl.Item
- uid: System.Security.AccessControl.CommonAcl.Purge*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Purge
  nameWithType: CommonAcl.Purge
- uid: System.Security.AccessControl.CommonAcl.RemoveInheritedAces*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: RemoveInheritedAces
  nameWithType: CommonAcl.RemoveInheritedAces
- uid: System.Security.AccessControl.CommonAcl.Revision*
  parent: System.Security.AccessControl.CommonAcl
  isExternal: false
  name: Revision
  nameWithType: CommonAcl.Revision
