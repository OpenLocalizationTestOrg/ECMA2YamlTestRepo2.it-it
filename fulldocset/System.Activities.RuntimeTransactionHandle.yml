### YamlMime:ManagedReference
items:
- uid: System.Activities.RuntimeTransactionHandle
  id: RuntimeTransactionHandle
  children:
  - System.Activities.RuntimeTransactionHandle.#ctor
  - System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)
  - System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
  - System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)
  - System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)
  - System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)
  - System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)
  - System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)
  - System.Activities.RuntimeTransactionHandle.OnInitialize(System.Activities.HandleInitializationContext)
  - System.Activities.RuntimeTransactionHandle.OnUninitialize(System.Activities.HandleInitializationContext)
  - System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  - System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  - System.Activities.RuntimeTransactionHandle.SuppressTransaction
  - System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread
  - System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread
  - System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)
  - System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)
  langs:
  - csharp
  name: RuntimeTransactionHandle
  nameWithType: RuntimeTransactionHandle
  fullName: System.Activities.RuntimeTransactionHandle
  type: Class
  summary: "Fornisce l&quot;accesso alla transazione di runtime in un&quot;istanza del flusso di lavoro."
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract]

      public sealed class RuntimeTransactionHandle : System.Activities.Handle, System.Activities.IExecutionProperty, System.Activities.IPropertyRegistrationCallback
  inheritance:
  - System.Object
  - System.Activities.Handle
  implements:
  - System.Activities.IExecutionProperty
  - System.Activities.IPropertyRegistrationCallback
  inheritedMembers:
  - System.Activities.Handle.ExecutionPropertyName
  - System.Activities.Handle.Owner
  - System.Activities.Handle.ThrowIfUninitialized
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.#ctor
  id: '#ctor'
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: RuntimeTransactionHandle()
  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle()
  fullName: System.Activities.RuntimeTransactionHandle.RuntimeTransactionHandle()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Activities.RuntimeTransactionHandle&quot;> </xref> classe."
  syntax:
    content: public RuntimeTransactionHandle ();
    parameters: []
  overload: System.Activities.RuntimeTransactionHandle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)
  id: '#ctor(System.Transactions.Transaction)'
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: RuntimeTransactionHandle(Transaction)
  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle(Transaction)
  fullName: System.Activities.RuntimeTransactionHandle.RuntimeTransactionHandle(Transaction)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Activities.RuntimeTransactionHandle&quot;> </xref> classe utilizzando la transazione radice specificata."
  syntax:
    content: public RuntimeTransactionHandle (System.Transactions.Transaction rootTransaction);
    parameters:
    - id: rootTransaction
      type: System.Transactions.Transaction
      description: "Transazione radice."
  overload: System.Activities.RuntimeTransactionHandle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
  id: AbortInstanceOnTransactionFailure
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: AbortInstanceOnTransactionFailure
  nameWithType: RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
  fullName: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene o imposta se l&quot;istanza del flusso di lavoro deve essere interrotto se la transazione ha esito negativo."
  remarks: "Se è AbortInstanceOnTransactionFailure `false`, errore della transazione comporta l&quot;eccezione che causa il blocco di essere propagati come di consueto. Il valore predefinito per AbortInstanceOnTransactionFailure è `true`."
  syntax:
    content: public bool AbortInstanceOnTransactionFailure { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;istanza del flusso di lavoro deve essere interrotto se la transazione ha esito negativo; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)
  id: CompleteTransaction(System.Activities.NativeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: CompleteTransaction(NativeActivityContext)
  nameWithType: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Completa la transazione in fase di esecuzione corrente."
  syntax:
    content: public void CompleteTransaction (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "L&quot;ambiente di esecuzione corrente."
  overload: System.Activities.RuntimeTransactionHandle.CompleteTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)
  id: CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: CompleteTransaction(NativeActivityContext,BookmarkCallback)
  nameWithType: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext,BookmarkCallback)
  fullName: System.Activities.RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext,BookmarkCallback)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Completa la transazione in fase di esecuzione corrente e pianifica il callback del segnalibro quando la transazione è stata completata."
  syntax:
    content: public void CompleteTransaction (System.Activities.NativeActivityContext context, System.Activities.BookmarkCallback callback);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "L&quot;ambiente di esecuzione corrente."
    - id: callback
      type: System.Activities.BookmarkCallback
      description: "Il callback del segnalibro da richiamare al completamento della transazione."
  overload: System.Activities.RuntimeTransactionHandle.CompleteTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)
  id: GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: GetCurrentTransaction(AsyncCodeActivityContext)
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(AsyncCodeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(AsyncCodeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Restituisce un riferimento alla transazione di runtime corrente."
  syntax:
    content: public System.Transactions.Transaction GetCurrentTransaction (System.Activities.AsyncCodeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.AsyncCodeActivityContext
      description: "L&quot;ambiente di esecuzione corrente."
    return:
      type: System.Transactions.Transaction
      description: "La transazione corrente."
  overload: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)
  id: GetCurrentTransaction(System.Activities.CodeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: GetCurrentTransaction(CodeActivityContext)
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(CodeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(CodeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Restituisce un riferimento alla transazione di runtime corrente."
  syntax:
    content: public System.Transactions.Transaction GetCurrentTransaction (System.Activities.CodeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.CodeActivityContext
      description: "L&quot;ambiente di esecuzione corrente."
    return:
      type: System.Transactions.Transaction
      description: "La transazione corrente."
  overload: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)
  id: GetCurrentTransaction(System.Activities.NativeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: GetCurrentTransaction(NativeActivityContext)
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(NativeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Restituisce un riferimento alla transazione di runtime corrente."
  syntax:
    content: public System.Transactions.Transaction GetCurrentTransaction (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "L&quot;ambiente di esecuzione corrente."
    return:
      type: System.Transactions.Transaction
      description: "La transazione in fase di esecuzione corrente."
  overload: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.OnInitialize(System.Activities.HandleInitializationContext)
  id: OnInitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: OnInitialize(HandleInitializationContext)
  nameWithType: RuntimeTransactionHandle.OnInitialize(HandleInitializationContext)
  fullName: System.Activities.RuntimeTransactionHandle.OnInitialize(HandleInitializationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override void OnInitialize (System.Activities.HandleInitializationContext context);
    parameters:
    - id: context
      type: System.Activities.HandleInitializationContext
      description: "Da aggiungere."
  overload: System.Activities.RuntimeTransactionHandle.OnInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.OnUninitialize(System.Activities.HandleInitializationContext)
  id: OnUninitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: OnUninitialize(HandleInitializationContext)
  nameWithType: RuntimeTransactionHandle.OnUninitialize(HandleInitializationContext)
  fullName: System.Activities.RuntimeTransactionHandle.OnUninitialize(HandleInitializationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: protected override void OnUninitialize (System.Activities.HandleInitializationContext context);
    parameters:
    - id: context
      type: System.Activities.HandleInitializationContext
      description: "Da aggiungere."
  overload: System.Activities.RuntimeTransactionHandle.OnUninitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  id: RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: RequestTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  nameWithType: RuntimeTransactionHandle.RequestTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  fullName: System.Activities.RuntimeTransactionHandle.RequestTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Avvia la creazione di un <xref href=&quot;System.Activities.NativeActivityTransactionContext&quot;> </xref> per l&quot;utilizzo con una nuova transazione."
  remarks: "Questo metodo viene utilizzato quando l&quot;attività crea una nuova transazione per l&quot;utilizzo dal runtime. Il flusso di lavoro potrebbe potenzialmente persistere uno o più volte prima che venga chiamato il callback. Questo metodo consente gli ambiti della transazione in più rami di un parallelo per mettere in coda richieste simultanee senza bloccarsi ogni altra dal persistente completamento della transazione. Per evitare errori se il flusso di lavoro persiste, verificare che l&quot;oggetto stato può essere serializzato."
  syntax:
    content: public void RequestTransactionContext (System.Activities.NativeActivityContext context, Action<System.Activities.NativeActivityTransactionContext,object> callback, object state);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "L&quot;ambiente di esecuzione corrente."
    - id: callback
      type: System.Action{System.Activities.NativeActivityTransactionContext,System.Object}
      description: "Il metodo da chiamare quando il <xref href=&quot;System.Activities.NativeActivityTransactionContext&quot;> </xref> viene creato."
    - id: state
      type: System.Object
      description: "Parametro facoltativo fornito dall&quot;utente stato che contiene informazioni sulla richiesta."
  overload: System.Activities.RuntimeTransactionHandle.RequestTransactionContext*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  id: RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: RequireTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  nameWithType: RuntimeTransactionHandle.RequireTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  fullName: System.Activities.RuntimeTransactionHandle.RequireTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Avvia la creazione di un <xref href=&quot;System.Activities.NativeActivityTransactionContext&quot;> </xref> per l&quot;utilizzo con una transazione esistente."
  remarks: "Questo metodo viene utilizzato quando l&quot;attività dispone di una transazione che richiede il runtime da utilizzare. Il flusso di lavoro non può persistere tra una chiamata a RequireTransactionContext e il callback successivo. La chiamata a RequireTransactionContext nuovamente prima che venga completata la prima chiamata non è consentita e tutte le chiamate dopo la prima chiamata generano eccezioni. Questo metodo consente transazioni propagate dal host da fornire al runtime senza rischiare un punto di persistenza intermedio. L&quot;oggetto di stato che può essere serializzato non è necessaria perché l&quot;istanza è garantito che non vengono mantenute quando questo metodo viene utilizzato."
  syntax:
    content: public void RequireTransactionContext (System.Activities.NativeActivityContext context, Action<System.Activities.NativeActivityTransactionContext,object> callback, object state);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "L&quot;ambiente di esecuzione corrente."
    - id: callback
      type: System.Action{System.Activities.NativeActivityTransactionContext,System.Object}
      description: "Il metodo da chiamare quando il <xref href=&quot;System.Activities.NativeActivityTransactionContext&quot;> </xref> viene creato."
    - id: state
      type: System.Object
      description: "Parametro facoltativo fornito dall&quot;utente stato che contiene informazioni sulla richiesta."
  overload: System.Activities.RuntimeTransactionHandle.RequireTransactionContext*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.SuppressTransaction
  id: SuppressTransaction
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: SuppressTransaction
  nameWithType: RuntimeTransactionHandle.SuppressTransaction
  fullName: System.Activities.RuntimeTransactionHandle.SuppressTransaction
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Ottiene o imposta un valore che indica se la transazione di runtime è eliminata."
  syntax:
    content: public bool SuppressTransaction { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la transazione di runtime è annullata; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.RuntimeTransactionHandle.SuppressTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread
  id: System#Activities#IExecutionProperty#CleanupWorkflowThread
  isEii: true
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: System.Activities.IExecutionProperty.CleanupWorkflowThread()
  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.CleanupWorkflowThread()
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IExecutionProperty.CleanupWorkflowThread()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.Activities.IExecutionProperty.CleanupWorkflowThread%2A?displayProperty=fullName&gt;."
  syntax:
    content: void IExecutionProperty.CleanupWorkflowThread ();
    parameters: []
  overload: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread
  id: System#Activities#IExecutionProperty#SetupWorkflowThread
  isEii: true
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: System.Activities.IExecutionProperty.SetupWorkflowThread()
  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.SetupWorkflowThread()
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IExecutionProperty.SetupWorkflowThread()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Per una descrizione di questo membro, vedere &lt;xref:System.Activities.IExecutionProperty.SetupWorkflowThread%2A?displayProperty=fullName&gt;."
  syntax:
    content: void IExecutionProperty.SetupWorkflowThread ();
    parameters: []
  overload: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)
  id: System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)
  isEii: true
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)
  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Per una descrizione di questo membro, vedere <xref:System.Activities.IPropertyRegistrationCallback.Register*>.</xref:System.Activities.IPropertyRegistrationCallback.Register*>"
  syntax:
    content: void IPropertyRegistrationCallback.Register (System.Activities.RegistrationContext context);
    parameters:
    - id: context
      type: System.Activities.RegistrationContext
      description: "Per una descrizione di questo parametro, vedere <xref:System.Activities.IPropertyRegistrationCallback.Register*>.</xref:System.Activities.IPropertyRegistrationCallback.Register*>"
  overload: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)
  id: System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)
  isEii: true
  parent: System.Activities.RuntimeTransactionHandle
  langs:
  - csharp
  name: System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)
  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Per una descrizione di questo membro, vedere <xref:System.Activities.IPropertyRegistrationCallback.UnRegister*>.</xref:System.Activities.IPropertyRegistrationCallback.UnRegister*>"
  syntax:
    content: void IPropertyRegistrationCallback.Unregister (System.Activities.RegistrationContext context);
    parameters:
    - id: context
      type: System.Activities.RegistrationContext
      description: "Per una descrizione di questo parametro, vedere <xref:System.Activities.IPropertyRegistrationCallback.UnRegister*>.</xref:System.Activities.IPropertyRegistrationCallback.UnRegister*>"
  overload: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Handle
  isExternal: false
  name: System.Activities.Handle
- uid: System.Activities.RuntimeTransactionHandle.#ctor
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RuntimeTransactionHandle()
  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle()
  fullName: System.Activities.RuntimeTransactionHandle.RuntimeTransactionHandle()
- uid: System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RuntimeTransactionHandle(Transaction)
  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle(Transaction)
  fullName: System.Activities.RuntimeTransactionHandle.RuntimeTransactionHandle(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: AbortInstanceOnTransactionFailure
  nameWithType: RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
  fullName: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: CompleteTransaction(NativeActivityContext)
  nameWithType: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext)
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: CompleteTransaction(NativeActivityContext,BookmarkCallback)
  nameWithType: RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext,BookmarkCallback)
  fullName: System.Activities.RuntimeTransactionHandle.CompleteTransaction(NativeActivityContext,BookmarkCallback)
- uid: System.Activities.BookmarkCallback
  parent: System.Activities
  isExternal: false
  name: BookmarkCallback
  nameWithType: BookmarkCallback
  fullName: System.Activities.BookmarkCallback
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: GetCurrentTransaction(AsyncCodeActivityContext)
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(AsyncCodeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(AsyncCodeActivityContext)
- uid: System.Activities.AsyncCodeActivityContext
  parent: System.Activities
  isExternal: false
  name: AsyncCodeActivityContext
  nameWithType: AsyncCodeActivityContext
  fullName: System.Activities.AsyncCodeActivityContext
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: GetCurrentTransaction(CodeActivityContext)
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(CodeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(CodeActivityContext)
- uid: System.Activities.CodeActivityContext
  parent: System.Activities
  isExternal: false
  name: CodeActivityContext
  nameWithType: CodeActivityContext
  fullName: System.Activities.CodeActivityContext
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: GetCurrentTransaction(NativeActivityContext)
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction(NativeActivityContext)
  fullName: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(NativeActivityContext)
- uid: System.Activities.RuntimeTransactionHandle.OnInitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: OnInitialize(HandleInitializationContext)
  nameWithType: RuntimeTransactionHandle.OnInitialize(HandleInitializationContext)
  fullName: System.Activities.RuntimeTransactionHandle.OnInitialize(HandleInitializationContext)
- uid: System.Activities.HandleInitializationContext
  parent: System.Activities
  isExternal: false
  name: HandleInitializationContext
  nameWithType: HandleInitializationContext
  fullName: System.Activities.HandleInitializationContext
- uid: System.Activities.RuntimeTransactionHandle.OnUninitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: OnUninitialize(HandleInitializationContext)
  nameWithType: RuntimeTransactionHandle.OnUninitialize(HandleInitializationContext)
  fullName: System.Activities.RuntimeTransactionHandle.OnUninitialize(HandleInitializationContext)
- uid: System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RequestTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  nameWithType: RuntimeTransactionHandle.RequestTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  fullName: System.Activities.RuntimeTransactionHandle.RequestTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
- uid: System.Action{System.Activities.NativeActivityTransactionContext,System.Object}
  parent: System
  isExternal: true
  name: Action<NativeActivityTransactionContext,Object>
  nameWithType: Action<NativeActivityTransactionContext,Object>
  fullName: System.Action<System.Activities.NativeActivityTransactionContext,System.Object>
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: Action<System.Activities.NativeActivityTransactionContext,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.NativeActivityTransactionContext
    name: NativeActivityTransactionContext
    nameWithType: NativeActivityTransactionContext
    fullName: NativeActivityTransactionContext
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RequireTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  nameWithType: RuntimeTransactionHandle.RequireTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
  fullName: System.Activities.RuntimeTransactionHandle.RequireTransactionContext(NativeActivityContext,Action<NativeActivityTransactionContext,Object>,Object)
- uid: System.Activities.RuntimeTransactionHandle.SuppressTransaction
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: SuppressTransaction
  nameWithType: RuntimeTransactionHandle.SuppressTransaction
  fullName: System.Activities.RuntimeTransactionHandle.SuppressTransaction
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IExecutionProperty.CleanupWorkflowThread()
  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.CleanupWorkflowThread()
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IExecutionProperty.CleanupWorkflowThread()
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IExecutionProperty.SetupWorkflowThread()
  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.SetupWorkflowThread()
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IExecutionProperty.SetupWorkflowThread()
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)
  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Register(RegistrationContext)
- uid: System.Activities.RegistrationContext
  parent: System.Activities
  isExternal: false
  name: RegistrationContext
  nameWithType: RegistrationContext
  fullName: System.Activities.RegistrationContext
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)
  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)
  fullName: System.Activities.RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Unregister(RegistrationContext)
- uid: System.Activities.RuntimeTransactionHandle.#ctor*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RuntimeTransactionHandle
  nameWithType: RuntimeTransactionHandle.RuntimeTransactionHandle
- uid: System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: AbortInstanceOnTransactionFailure
  nameWithType: RuntimeTransactionHandle.AbortInstanceOnTransactionFailure
- uid: System.Activities.RuntimeTransactionHandle.CompleteTransaction*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: CompleteTransaction
  nameWithType: RuntimeTransactionHandle.CompleteTransaction
- uid: System.Activities.RuntimeTransactionHandle.GetCurrentTransaction*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: GetCurrentTransaction
  nameWithType: RuntimeTransactionHandle.GetCurrentTransaction
- uid: System.Activities.RuntimeTransactionHandle.OnInitialize*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: OnInitialize
  nameWithType: RuntimeTransactionHandle.OnInitialize
- uid: System.Activities.RuntimeTransactionHandle.OnUninitialize*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: OnUninitialize
  nameWithType: RuntimeTransactionHandle.OnUninitialize
- uid: System.Activities.RuntimeTransactionHandle.RequestTransactionContext*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RequestTransactionContext
  nameWithType: RuntimeTransactionHandle.RequestTransactionContext
- uid: System.Activities.RuntimeTransactionHandle.RequireTransactionContext*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: RequireTransactionContext
  nameWithType: RuntimeTransactionHandle.RequireTransactionContext
- uid: System.Activities.RuntimeTransactionHandle.SuppressTransaction*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: SuppressTransaction
  nameWithType: RuntimeTransactionHandle.SuppressTransaction
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IExecutionProperty.CleanupWorkflowThread
  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.CleanupWorkflowThread
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IExecutionProperty.SetupWorkflowThread
  nameWithType: RuntimeTransactionHandle.System.Activities.IExecutionProperty.SetupWorkflowThread
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IPropertyRegistrationCallback.Register
  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Register
- uid: System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister*
  parent: System.Activities.RuntimeTransactionHandle
  isExternal: false
  name: System.Activities.IPropertyRegistrationCallback.Unregister
  nameWithType: RuntimeTransactionHandle.System.Activities.IPropertyRegistrationCallback.Unregister
