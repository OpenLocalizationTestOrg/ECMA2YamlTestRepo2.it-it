### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.VirtualizationCacheLength
  id: VirtualizationCacheLength
  children:
  - System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)
  - System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)
  - System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport
  - System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport
  - System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)
  - System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)
  - System.Windows.Controls.VirtualizationCacheLength.GetHashCode
  - System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  - System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  - System.Windows.Controls.VirtualizationCacheLength.ToString
  langs:
  - csharp
  name: VirtualizationCacheLength
  nameWithType: VirtualizationCacheLength
  fullName: System.Windows.Controls.VirtualizationCacheLength
  type: Struct
  summary: "Rappresenta le misure per il &lt;xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName&gt; proprietà associata."
  remarks: "Il <xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName>proprietà associata specifica la quantità di spazio in cui un <xref:System.Windows.Controls.VirtualizingPanel>consente di virtualizzare gli elementi prima o dopo la visualizzazione di porta (l&quot;area in cui gli elementi sono visibili).</xref:System.Windows.Controls.VirtualizingPanel> </xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=fullName>  È possibile specificare la lunghezza della cache uniform la creazione di un VirtualizationCacheLength utilizzando il costruttore che accetta un singolo parametro.  È possibile utilizzare il costruttore che accetta due parametri per specificare valori diversi per il <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>e <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A>proprietà.</xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> </xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Controls.VirtualizationCacheLengthConverter))]

      public struct VirtualizationCacheLength : IEquatable<System.Windows.Controls.VirtualizationCacheLength>
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Windows.Controls.VirtualizationCacheLength>
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: VirtualizationCacheLength(Double)
  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength(Double)
  fullName: System.Windows.Controls.VirtualizationCacheLength.VirtualizationCacheLength(Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Crea una nuova istanza di <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref> classe con una lunghezza di cache uniforme per ogni lato del riquadro di visualizzazione."
  syntax:
    content: public VirtualizationCacheLength (double cacheBeforeAndAfterViewport);
    parameters:
    - id: cacheBeforeAndAfterViewport
      type: System.Double
      description: "Le dimensioni della cache prima e dopo il viewport."
  overload: System.Windows.Controls.VirtualizationCacheLength.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: VirtualizationCacheLength(Double,Double)
  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength(Double,Double)
  fullName: System.Windows.Controls.VirtualizationCacheLength.VirtualizationCacheLength(Double,Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Crea una nuova istanza di <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref> classe con le lunghezze della cache specificata per ogni lato del riquadro di visualizzazione."
  syntax:
    content: public VirtualizationCacheLength (double cacheBeforeViewport, double cacheAfterViewport);
    parameters:
    - id: cacheBeforeViewport
      type: System.Double
      description: "Le dimensioni della cache prima del viewport."
    - id: cacheAfterViewport
      type: System.Double
      description: "Le dimensioni della cache dopo il viewport."
  overload: System.Windows.Controls.VirtualizationCacheLength.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport
  id: CacheAfterViewport
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: CacheAfterViewport
  nameWithType: VirtualizationCacheLength.CacheAfterViewport
  fullName: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Ottiene le dimensioni della cache prima del viewport quando il <xref href=&quot;System.Windows.Controls.VirtualizingPanel&quot;> </xref> sta eseguendo la virtualizzazione."
  remarks: "In questo contesto, &quot;virtualizzare&quot; si riferisce a una tecnica mediante il quale un subset di [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] vengono generati gli elementi da un gran numero di elementi di dati in base alle quali elementi sono visibili sullo schermo. Usare una cache per evitare di generare [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elementi come si esegue lo scorrimento nella visualizzazione."
  syntax:
    content: public double CacheAfterViewport { get; }
    return:
      type: System.Double
      description: "Le dimensioni della cache dopo il viewport quando il <xref href=&quot;System.Windows.Controls.VirtualizingPanel&quot;> </xref> sta eseguendo la virtualizzazione."
  overload: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport
  id: CacheBeforeViewport
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: CacheBeforeViewport
  nameWithType: VirtualizationCacheLength.CacheBeforeViewport
  fullName: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Ottiene le dimensioni della cache dopo il viewport quando il <xref href=&quot;System.Windows.Controls.VirtualizingPanel&quot;> </xref> sta eseguendo la virtualizzazione."
  remarks: "In questo contesto, &quot;virtualizzare&quot; si riferisce a una tecnica mediante il quale un subset di [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] vengono generati gli elementi da un gran numero di elementi di dati in base alle quali elementi sono visibili sullo schermo. Usare una cache per evitare di generare [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] elementi come si esegue lo scorrimento nella visualizzazione."
  syntax:
    content: public double CacheBeforeViewport { get; }
    return:
      type: System.Double
      description: "Le dimensioni della cache dopo il viewport quando il <xref href=&quot;System.Windows.Controls.VirtualizingPanel&quot;> </xref> sta eseguendo la virtualizzazione."
  overload: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: VirtualizationCacheLength.Equals(Object)
  fullName: System.Windows.Controls.VirtualizationCacheLength.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Determina se l&quot;oggetto specificato è uguale all&quot;oggetto corrente <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>."
  remarks: "Il <xref:System.Windows.Controls.VirtualizationCacheLength>verifica l&quot;uguaglianza di valore.</xref:System.Windows.Controls.VirtualizationCacheLength>  Ovvero, i due oggetti sono uguali se i relativi <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>i valori delle proprietà sono uguali e i relativi <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A>i valori delle proprietà sono uguali.</xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> </xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>"
  syntax:
    content: public override bool Equals (object oCompare);
    parameters:
    - id: oCompare
      type: System.Object
      description: "Oggetto da confrontare con l&quot;oggetto corrente <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto specificato è uguale all&quot;oggetto corrente <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.VirtualizationCacheLength.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)
  id: Equals(System.Windows.Controls.VirtualizationCacheLength)
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: Equals(VirtualizationCacheLength)
  nameWithType: VirtualizationCacheLength.Equals(VirtualizationCacheLength)
  fullName: System.Windows.Controls.VirtualizationCacheLength.Equals(VirtualizationCacheLength)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Determina se l&quot;oggetto specificato <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref> è uguale all&quot;oggetto corrente <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>."
  remarks: "Il <xref:System.Windows.Controls.VirtualizationCacheLength>verifica l&quot;uguaglianza di valore.</xref:System.Windows.Controls.VirtualizationCacheLength>  Ovvero, i due oggetti sono uguali se i relativi <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>i valori delle proprietà sono uguali e i relativi <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A>i valori delle proprietà sono uguali.</xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> </xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>"
  syntax:
    content: public bool Equals (System.Windows.Controls.VirtualizationCacheLength cacheLength);
    parameters:
    - id: cacheLength
      type: System.Windows.Controls.VirtualizationCacheLength
      description: "Oggetto da confrontare con l&quot;oggetto corrente <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto specificato è uguale all&quot;oggetto corrente <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.VirtualizationCacheLength.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.GetHashCode
  id: GetHashCode
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: VirtualizationCacheLength.GetHashCode()
  fullName: System.Windows.Controls.VirtualizationCacheLength.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Ottiene un codice hash per l&quot;oggetto corrente <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Codice hash per l&quot;oggetto corrente <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>."
  overload: System.Windows.Controls.VirtualizationCacheLength.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  id: op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)
  nameWithType: VirtualizationCacheLength.op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)
  fullName: System.Windows.Controls.VirtualizationCacheLength.op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Determina se le due specificate <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref> oggetti sono uguali."
  remarks: "Il <xref:System.Windows.Controls.VirtualizationCacheLength>verifica l&quot;uguaglianza di valore.</xref:System.Windows.Controls.VirtualizationCacheLength>  Ovvero, i due oggetti sono uguali se i relativi <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>i valori delle proprietà sono uguali e i relativi <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A>i valori delle proprietà sono uguali.</xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> </xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>"
  syntax:
    content: public static bool op_Equality (System.Windows.Controls.VirtualizationCacheLength cl1, System.Windows.Controls.VirtualizationCacheLength cl2);
    parameters:
    - id: cl1
      type: System.Windows.Controls.VirtualizationCacheLength
      description: "Il primo oggetto da confrontare."
    - id: cl2
      type: System.Windows.Controls.VirtualizationCacheLength
      description: "Secondo oggetto da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto specificato <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref> sono uguali; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.VirtualizationCacheLength.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  id: op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)
  nameWithType: VirtualizationCacheLength.op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)
  fullName: System.Windows.Controls.VirtualizationCacheLength.op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Determina se le due specificate <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref> oggetti sono uguali."
  remarks: "Il <xref:System.Windows.Controls.VirtualizationCacheLength>verifica l&quot;uguaglianza di valore.</xref:System.Windows.Controls.VirtualizationCacheLength>  Ovvero, i due oggetti sono uguali se i relativi <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>i valori delle proprietà sono uguali e i relativi <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A>i valori delle proprietà sono uguali.</xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> </xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>"
  syntax:
    content: public static bool op_Inequality (System.Windows.Controls.VirtualizationCacheLength cl1, System.Windows.Controls.VirtualizationCacheLength cl2);
    parameters:
    - id: cl1
      type: System.Windows.Controls.VirtualizationCacheLength
      description: "Il primo oggetto da confrontare."
    - id: cl2
      type: System.Windows.Controls.VirtualizationCacheLength
      description: "Secondo oggetto da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;oggetto specificato <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref> sono uguali; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.VirtualizationCacheLength.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.VirtualizationCacheLength.ToString
  id: ToString
  parent: System.Windows.Controls.VirtualizationCacheLength
  langs:
  - csharp
  name: ToString()
  nameWithType: VirtualizationCacheLength.ToString()
  fullName: System.Windows.Controls.VirtualizationCacheLength.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Restituisce una stringa che rappresenta l&quot;oggetto corrente <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>."
  remarks: "Il metodo ToString restituisce una stringa che visualizza i valori del <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>e <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A>proprietà.</xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> </xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Stringa che rappresenta l&quot;oggetto corrente <xref href=&quot;System.Windows.Controls.VirtualizationCacheLength&quot;> </xref>."
  overload: System.Windows.Controls.VirtualizationCacheLength.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: VirtualizationCacheLength(Double)
  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength(Double)
  fullName: System.Windows.Controls.VirtualizationCacheLength.VirtualizationCacheLength(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: VirtualizationCacheLength(Double,Double)
  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength(Double,Double)
  fullName: System.Windows.Controls.VirtualizationCacheLength.VirtualizationCacheLength(Double,Double)
- uid: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: CacheAfterViewport
  nameWithType: VirtualizationCacheLength.CacheAfterViewport
  fullName: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport
- uid: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: CacheBeforeViewport
  nameWithType: VirtualizationCacheLength.CacheBeforeViewport
  fullName: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport
- uid: System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: Equals(Object)
  nameWithType: VirtualizationCacheLength.Equals(Object)
  fullName: System.Windows.Controls.VirtualizationCacheLength.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: Equals(VirtualizationCacheLength)
  nameWithType: VirtualizationCacheLength.Equals(VirtualizationCacheLength)
  fullName: System.Windows.Controls.VirtualizationCacheLength.Equals(VirtualizationCacheLength)
- uid: System.Windows.Controls.VirtualizationCacheLength
  parent: System.Windows.Controls
  isExternal: false
  name: VirtualizationCacheLength
  nameWithType: VirtualizationCacheLength
  fullName: System.Windows.Controls.VirtualizationCacheLength
- uid: System.Windows.Controls.VirtualizationCacheLength.GetHashCode
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: GetHashCode()
  nameWithType: VirtualizationCacheLength.GetHashCode()
  fullName: System.Windows.Controls.VirtualizationCacheLength.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)
  nameWithType: VirtualizationCacheLength.op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)
  fullName: System.Windows.Controls.VirtualizationCacheLength.op_Equality(VirtualizationCacheLength,VirtualizationCacheLength)
- uid: System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)
  nameWithType: VirtualizationCacheLength.op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)
  fullName: System.Windows.Controls.VirtualizationCacheLength.op_Inequality(VirtualizationCacheLength,VirtualizationCacheLength)
- uid: System.Windows.Controls.VirtualizationCacheLength.ToString
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: ToString()
  nameWithType: VirtualizationCacheLength.ToString()
  fullName: System.Windows.Controls.VirtualizationCacheLength.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Controls.VirtualizationCacheLength.#ctor*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: VirtualizationCacheLength
  nameWithType: VirtualizationCacheLength.VirtualizationCacheLength
- uid: System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: CacheAfterViewport
  nameWithType: VirtualizationCacheLength.CacheAfterViewport
- uid: System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: CacheBeforeViewport
  nameWithType: VirtualizationCacheLength.CacheBeforeViewport
- uid: System.Windows.Controls.VirtualizationCacheLength.Equals*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: Equals
  nameWithType: VirtualizationCacheLength.Equals
- uid: System.Windows.Controls.VirtualizationCacheLength.GetHashCode*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: GetHashCode
  nameWithType: VirtualizationCacheLength.GetHashCode
- uid: System.Windows.Controls.VirtualizationCacheLength.op_Equality*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: op_Equality
  nameWithType: VirtualizationCacheLength.op_Equality
- uid: System.Windows.Controls.VirtualizationCacheLength.op_Inequality*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: op_Inequality
  nameWithType: VirtualizationCacheLength.op_Inequality
- uid: System.Windows.Controls.VirtualizationCacheLength.ToString*
  parent: System.Windows.Controls.VirtualizationCacheLength
  isExternal: false
  name: ToString
  nameWithType: VirtualizationCacheLength.ToString
