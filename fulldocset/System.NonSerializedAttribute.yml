### YamlMime:ManagedReference
items:
- uid: System.NonSerializedAttribute
  id: NonSerializedAttribute
  children:
  - System.NonSerializedAttribute.#ctor
  langs:
  - csharp
  name: NonSerializedAttribute
  nameWithType: NonSerializedAttribute
  fullName: System.NonSerializedAttribute
  type: Class
  summary: "Indica che un campo di una classe serializzabile non deve essere serializzato. Questa classe non può essere ereditata."
  remarks: "Quando si utilizza il <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>o <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>le classi per serializzare un oggetto, utilizzare l&quot;attributo NonSerializedAttribute per impedire la serializzazione di un campo.</xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter> </xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> Ad esempio, è possibile utilizzare questo attributo per impedire la serializzazione dei dati sensibili.       Gli oggetti di destinazione per l&quot;attributo NonSerializedAttribute sono campi pubblici e privati di una classe serializzabile. Per impostazione predefinita, le classi non sono serializzabili a meno che non sono contrassegnati con <xref:System.SerializableAttribute>.</xref:System.SerializableAttribute> Durante il processo di serializzazione vengono serializzati tutti i campi pubblici e privati di una classe per impostazione predefinita. I campi contrassegnati con NonSerializedAttribute vengono esclusi durante la serializzazione. Se si utilizza la <xref:System.Xml.Serialization.XmlSerializer>classe per serializzare un oggetto, utilizzare la <xref:System.Xml.Serialization.XmlIgnoreAttribute>classe per ottenere la stessa funzionalità.</xref:System.Xml.Serialization.XmlIgnoreAttribute> </xref:System.Xml.Serialization.XmlSerializer> In alternativa, implementare il <xref:System.Runtime.Serialization.ISerializable>interfaccia per controllare in modo esplicito il processo di serializzazione.</xref:System.Runtime.Serialization.ISerializable> Si noti che le classi che implementano <xref:System.Runtime.Serialization.ISerializable>devono comunque essere contrassegnate con <xref:System.SerializableAttribute>.</xref:System.SerializableAttribute> </xref:System.Runtime.Serialization.ISerializable>       Per applicare la classe NonSerializedAttribute a un evento, impostare la posizione dell&quot;attributo di campo, come illustrato nel codice c# seguente.      ```   [field:NonSerializedAttribute()]    public event ChangedEventHandler Changed;   ```Se un campo non è serializzato, ma richiede comunque un valore predefinito che deve essere fornito dopo la deserializzazione, è possibile creare un metodo che fornisce il campo con un valore, quindi applicare il <xref:System.Runtime.Serialization.OnDeserializedAttribute>al metodo.</xref:System.Runtime.Serialization.OnDeserializedAttribute>       Per ulteriori informazioni sull&quot;utilizzo degli attributi, vedere [attributi](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates serialization of an object marked with the <xref:System.SerializableAttribute> attribute, and the behavior of a field marked with the NonSerializedAttribute in the serialized object.  \n  \n> [!NOTE]\n>  The code uses the <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter> class to serialize the object. The class is found in the system.runtime.serialization.formatters.soap.dll, which is not loaded by default into a project. To run the code, you must add a reference to the DLL to your project.  \n  \n [!code-cpp[SerializationAttributes#1](~/add/codesnippet/cpp/t-system.nonserializedat_1.cpp)]\n [!code-cs[SerializationAttributes#1](~/add/codesnippet/csharp/t-system.nonserializedat_1.cs)]\n [!code-vb[SerializationAttributes#1](~/add/codesnippet/visualbasic/t-system.nonserializedat_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Field, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class NonSerializedAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.NonSerializedAttribute.#ctor
  id: '#ctor'
  parent: System.NonSerializedAttribute
  langs:
  - csharp
  name: NonSerializedAttribute()
  nameWithType: NonSerializedAttribute.NonSerializedAttribute()
  fullName: System.NonSerializedAttribute.NonSerializedAttribute()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.NonSerializedAttribute&quot;> </xref> classe."
  syntax:
    content: public NonSerializedAttribute ();
    parameters: []
  overload: System.NonSerializedAttribute.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.NonSerializedAttribute.#ctor
  parent: System.NonSerializedAttribute
  isExternal: false
  name: NonSerializedAttribute()
  nameWithType: NonSerializedAttribute.NonSerializedAttribute()
  fullName: System.NonSerializedAttribute.NonSerializedAttribute()
- uid: System.NonSerializedAttribute.#ctor*
  parent: System.NonSerializedAttribute
  isExternal: false
  name: NonSerializedAttribute
  nameWithType: NonSerializedAttribute.NonSerializedAttribute
