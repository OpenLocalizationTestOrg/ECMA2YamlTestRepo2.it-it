### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlReader
  id: XamlReader
  children:
  - System.Xaml.XamlReader.#ctor
  - System.Xaml.XamlReader.Close
  - System.Xaml.XamlReader.Dispose(System.Boolean)
  - System.Xaml.XamlReader.IsDisposed
  - System.Xaml.XamlReader.IsEof
  - System.Xaml.XamlReader.Member
  - System.Xaml.XamlReader.Namespace
  - System.Xaml.XamlReader.NodeType
  - System.Xaml.XamlReader.Read
  - System.Xaml.XamlReader.ReadSubtree
  - System.Xaml.XamlReader.SchemaContext
  - System.Xaml.XamlReader.Skip
  - System.Xaml.XamlReader.System#IDisposable#Dispose
  - System.Xaml.XamlReader.Type
  - System.Xaml.XamlReader.Value
  langs:
  - csharp
  name: XamlReader
  nameWithType: XamlReader
  fullName: System.Xaml.XamlReader
  type: Class
  summary: "Fornisce le definizioni di base per le classi che utilizzano l&quot;input XAML e producono flussi del nodo XAML."
  remarks: "XamlReader è una classe astratta e non fornisce le implementazioni o definizioni che producono un risultato di lavoro per tutti i membri. I membri che dispongono di un&quot;implementazione in XamlReader sono indicati nella sezione Osservazioni per tale membro. In particolare, XamlReader dispone di vari membri astratti che devono essere implementati e vari membri virtuali.       Dei membri virtuali, <xref:System.Xaml.XamlReader.ReadSubtree%2A>e <xref:System.Xaml.XamlReader.Skip%2A>ognuno fornisce un&quot;implementazione predefinita che è appropriata per la maggior parte dei casi.</xref:System.Xaml.XamlReader.Skip%2A> </xref:System.Xaml.XamlReader.ReadSubtree%2A> Tuttavia, il <xref:System.Xaml.XamlReader.ReadSubtree%2A>e <xref:System.Xaml.XamlReader.Skip%2A>implementazioni predefinite si basano su altri comportamenti previsti del reader di implementazione XAML; in particolare, si basano sul <xref:System.Xaml.XamlReader.Read%2A>eseguire l&quot;override.</xref:System.Xaml.XamlReader.Read%2A> </xref:System.Xaml.XamlReader.Skip%2A> </xref:System.Xaml.XamlReader.ReadSubtree%2A> <xref:System.Xaml.XamlReader.Dispose%2A>è anche un membro virtuale che dispone di un&quot;implementazione predefinita di lavoro.</xref:System.Xaml.XamlReader.Dispose%2A>       Le due classi seguenti sono più rilevanti e pratici derivato classi nei servizi XAML di .NET Framework e l&quot;assembly System. XAML:- <xref:System.Xaml.XamlObjectReader>, che legge un oggetto grafico, ad esempio l&quot;oggetto grafico attivo di un&quot;applicazione in fase di esecuzione.</xref:System.Xaml.XamlObjectReader>      - <xref:System.Xaml.XamlXmlReader>, che legge codice XAML nel formato di file di testo XML utilizzando un generale <xref:System.Xml.XmlReader>che carica il file come una classe di supporto intermedia.</xref:System.Xml.XmlReader> </xref:System.Xaml.XamlXmlReader>       Altri reader XAML da altri Framework includono <xref:System.Windows.Baml2006.Baml2006Reader>e <xref:System.Activities.Debugger.XamlDebuggerXmlReader>.</xref:System.Activities.Debugger.XamlDebuggerXmlReader> </xref:System.Windows.Baml2006.Baml2006Reader>       XamlReader è diverso da [!INCLUDE[TLA#tla_xmldom](~/add/includes/tlasharptla-xmldom-md.md)] e <xref:System.Xml.XmlReader>principi di progettazione perché XamlReader non dispone di un `Create` per restituire sottostante predefinito le implementazioni del lettore XAML.</xref:System.Xml.XmlReader> È invece necessario creare istanze specifiche classi derivate di reader XAML chiamando i costruttori o altre API specifiche della classe di supporto.      ## Sottoalbero per i lettori nella maggior parte, chiamare API XamlReader nel contesto di specifiche classi del lettore XAML che derivano da XamlReader. In un caso particolare, è tuttavia accedere API XamlReader in un&quot;istanza del lettore XAML pratica che non è pubblico e non derivata da <xref:System.Xaml.XamlObjectReader>o <xref:System.Xaml.XamlXmlReader>.</xref:System.Xaml.XamlXmlReader> </xref:System.Xaml.XamlObjectReader> In questo caso è quando si chiama <xref:System.Xaml.XamlReader.ReadSubtree%2A>, che restituisce un&quot;istanza XamlReader.</xref:System.Xaml.XamlReader.ReadSubtree%2A> Nell&quot;implementazione predefinita, XamlReader restituito da questa API è una classe interna.       Il XamlReader ottenuto per la lettura di sottoalbero presenta azioni valide per le API, ad esempio <xref:System.Xaml.XamlReader.Read%2A>e <xref:System.Xaml.XamlReader.NodeType%2A>, e tali azioni sono basate sulla classe reader padre.</xref:System.Xaml.XamlReader.NodeType%2A> </xref:System.Xaml.XamlReader.Read%2A> Questa progettazione consente la classe interna rilevare il livello del frame in cui è stato immesso il sottoalbero. Attivo per il sottoalbero XamlReader garantisce che se la posizione del nodo corrente viene spostata oltre i limiti del sottoalbero, il lettore del sottoalbero specifico segnala la fine del file o `null` in corrispondenza del nodo corrente.       Note sull&quot;utilizzo del lettore sottoalbero sono inclusi in alcune APIs XamlReader."
  syntax:
    content: 'public abstract class XamlReader : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.#ctor
  id: '#ctor'
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: XamlReader()
  nameWithType: XamlReader.XamlReader()
  fullName: System.Xaml.XamlReader.XamlReader()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Inizializza il <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> classe."
  syntax:
    content: protected XamlReader ();
    parameters: []
  overload: System.Xaml.XamlReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Close
  id: Close
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Close()
  nameWithType: XamlReader.Close()
  fullName: System.Xaml.XamlReader.Close()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Chiude il flusso del nodo XAML."
  remarks: "Nell&quot;implementazione di base, la chiamata a Close chiamate <xref:System.Xaml.XamlReader.Dispose%2A>con il `isDisposing` parametro come `true`.</xref:System.Xaml.XamlReader.Dispose%2A>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Xaml.XamlReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: XamlReader.Dispose(Boolean)
  fullName: System.Xaml.XamlReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Rilascia le risorse non gestite usate dal <xref href=&quot;System.Xaml.XamlReader&quot;> </xref>e facoltativamente rilascia le risorse gestite."
  remarks: "È necessario chiamare la classe base per ottenere <xref:System.Xaml.XamlReader.IsDisposed%2A>= `true`.</xref:System.Xaml.XamlReader.IsDisposed%2A>"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per rilasciare le risorse gestite. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.IsDisposed
  id: IsDisposed
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: IsDisposed
  nameWithType: XamlReader.IsDisposed
  fullName: System.Xaml.XamlReader.IsDisposed
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ottiene se <xref:System.Xaml.XamlReader.Dispose*>è stato chiamato.</xref:System.Xaml.XamlReader.Dispose*>"
  syntax:
    content: protected bool IsDisposed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref:System.Xaml.XamlReader.Dispose*>è stato chiamato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xaml.XamlReader.Dispose*>"
  overload: System.Xaml.XamlReader.IsDisposed*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.IsEof
  id: IsEof
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: IsEof
  nameWithType: XamlReader.IsEof
  fullName: System.Xaml.XamlReader.IsEof
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Quando viene implementato in una classe derivata, ottiene un valore che indica se la posizione del reader è alla fine del file."
  remarks: "Sottoalbero possono chiamare IsEof, con un comportamento che riflette correttamente i limiti del sottoalbero inserito. Per ulteriori informazioni, vedere la sezione &quot;Sottoalbero&quot; in <xref:System.Xaml.XamlReader>, oppure vedere <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract bool IsEof { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la posizione è alla fine concettuale del file del flusso di nodi XAML; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlReader.IsEof*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Member
  id: Member
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Member
  nameWithType: XamlReader.Member
  fullName: System.Xaml.XamlReader.Member
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Quando viene implementato in una classe derivata, ottiene il membro corrente in corrispondenza della posizione di lettura, se la posizione del lettore si trova in un <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref>."
  remarks: "Sottoalbero possono chiamare i membri, con restrizioni di comportamento. Per ulteriori informazioni, vedere la sezione &quot;Sottoalbero&quot; in <xref:System.Xaml.XamlReader>, oppure vedere <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract System.Xaml.XamlMember Member { get; }
    return:
      type: System.Xaml.XamlMember
      description: "Il membro corrente. o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se la posizione del lettore non è un membro."
  overload: System.Xaml.XamlReader.Member*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Namespace
  id: Namespace
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Namespace
  nameWithType: XamlReader.Namespace
  fullName: System.Xaml.XamlReader.Namespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Quando viene implementato in una classe derivata, ottiene le informazioni dello spazio dei nomi XAML dal nodo corrente."
  remarks: "È la progettazione desiderata dell&quot;API per restituire un risultato non null solo se il <xref:System.Xaml.XamlReader.NodeType%2A>nodo corrente è <xref:System.Xaml.XamlNodeType>.</xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlReader.NodeType%2A> La proprietà non segnala lo spazio dei nomi XAML che si applica a oggetti o membri in senso generale dell&quot;ambito, interpretato in un contesto dello schema XAML. L&quot;applicazione deve fornire un mezzo per informazioni sulla cache per azioni di spazio dei nomi XAML che attraversa i nodi XAML, se è necessario che le informazioni in modo diverso da come contesto dello schema XAML segnala a un writer. Vedere<xref:System.Xaml.XamlXmlReader.Namespace%2A> per le note sull&quot;implementazione di riferimento.</xref:System.Xaml.XamlXmlReader.Namespace%2A>"
  syntax:
    content: public abstract System.Xaml.NamespaceDeclaration Namespace { get; }
    return:
      type: System.Xaml.NamespaceDeclaration
      description: "Le informazioni dello spazio dei nomi XAML, se disponibile; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlReader.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.NodeType
  id: NodeType
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: NodeType
  nameWithType: XamlReader.NodeType
  fullName: System.Xaml.XamlReader.NodeType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Quando viene implementato in una classe derivata, ottiene il tipo del nodo corrente."
  remarks: "Sottoalbero possono chiamare NodeType, con restrizioni di comportamento. Per ulteriori informazioni, vedere la sezione &quot;Sottoalbero&quot; in <xref:System.Xaml.XamlReader>, oppure vedere <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract System.Xaml.XamlNodeType NodeType { get; }
    return:
      type: System.Xaml.XamlNodeType
      description: "Il valore di <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref> enumerazione."
  overload: System.Xaml.XamlReader.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Read
  id: Read
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Read()
  nameWithType: XamlReader.Read()
  fullName: System.Xaml.XamlReader.Read()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Quando implementato in una classe derivata, fornisce il nodo XAML successivo dall&quot;origine, se è disponibile un nodo."
  remarks: "Sottoalbero possono chiamare lettura, con restrizioni di comportamento. Per ulteriori informazioni, vedere la sezione &quot;Sottoalbero&quot; in <xref:System.Xaml.XamlReader>, oppure vedere <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se un nodo è disponibile. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.ReadSubtree
  id: ReadSubtree
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: ReadSubtree()
  nameWithType: XamlReader.ReadSubtree()
  fullName: System.Xaml.XamlReader.ReadSubtree()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Restituisce un <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> basato su corrente <xref href=&quot;System.Xaml.XamlReader&quot;> </xref>, in cui l&quot;oggetto restituito <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> viene utilizzato per scorrere un sottoalbero di struttura di nodi XAML."
  remarks: "Questo metodo è un&quot;implementazione predefinita e restituisce un <xref:System.Xaml.XamlReader>.</xref:System.Xaml.XamlReader> valido L&quot;oggetto restituito <xref:System.Xaml.XamlReader>è una classe interna che limita determinate <xref:System.Xaml.XamlReader>Azioni.</xref:System.Xaml.XamlReader> </xref:System.Xaml.XamlReader> Le restrizioni sono coerenti con lo scopo di un solo sottoalbero dimensionato di un&quot;origine per un set di nodi XAML più grande e la restituzione di fine del file di lettura o `null` in corrispondenza del nodo corrente quando viene terminato il sottoalbero.       In genere, si deve controllare il nodo corrente dal iniziale <xref:System.Xaml.XamlReader.Read%2A>per determinare se è necessario un lettore del sottoalbero.</xref:System.Xaml.XamlReader.Read%2A> Come si seleziona questa opzione può essere specifico dell&quot;implementazione; Tuttavia, evitare di creare più lettori sottoalbero per ogni sottoalbero. Inoltre, evitare di richiamare un reader del sottoalbero per determinati casi di nodo (ad esempio, per <xref:System.Xaml.XamlNodeType>) che non può contenere un sottoalbero di nodi.</xref:System.Xaml.XamlNodeType>       Dopo aver ottenuto un lettore del sottoalbero, è necessario chiamare <xref:System.Xaml.XamlReader.Read%2A>in modo da ottenere un nodo corrente (o chiamare <xref:System.Xaml.XamlReader.Skip%2A>per ottenere un nodo successivo).</xref:System.Xaml.XamlReader.Skip%2A> </xref:System.Xaml.XamlReader.Read%2A> Non viene automaticamente recuperato una posizione iniziale dei nodi dal lettore sottoalbero durante la creazione.       Il lettore che ottiene chiamando ReadSubtree da questa implementazione predefinita è una classe interna. La classe interna si basa sul comportamento di <xref:System.Xaml.XamlReader>implementazione viene utilizzata quando viene chiamato ReadSubtree.</xref:System.Xaml.XamlReader> Lo scopo della classe interna consiste nell&quot;eseguire il wrapping di <xref:System.Xaml.XamlReader.Read%2A>e il comportamento dell&quot;attraversamento generale.</xref:System.Xaml.XamlReader.Read%2A> Di attraversamento sempre all&quot;interno del sottoalbero desiderato tenendo traccia del <xref:System.Xaml.XamlNodeType>/<xref:System.Xaml.XamlNodeType> coppie o <xref:System.Xaml.XamlNodeType>/<xref:System.Xaml.XamlNodeType> coppie.</xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlNodeType> Inoltre restituisce correttamente `false` per <xref:System.Xaml.XamlReader.Read%2A>e `true` per <xref:System.Xaml.XamlReader.IsEof%2A>quando il lettore si trova alla fine del sottoalbero, come definito dal punto di ingresso.</xref:System.Xaml.XamlReader.IsEof%2A> </xref:System.Xaml.XamlReader.Read%2A> In generale, si presuppone che qualsiasi <xref:System.Xaml.XamlReader>API chiami da un lettore del sottoalbero è la stessa implementazione dell&quot;intero <xref:System.Xaml.XamlReader>ad eccezione del comportamento trasversale.</xref:System.Xaml.XamlReader> </xref:System.Xaml.XamlReader>       Tuttavia, ReadSubtree è virtuale. Pertanto, un oggetto specifico <xref:System.Xaml.XamlReader>implementazione può fornire un comportamento diverso dal <xref:System.Xaml.XamlReader>comportamento wrapper interno; e un <xref:System.Xaml.XamlReader>implementazione può disabilitare anche la funzionalità di lettura del sottoalbero restituendo <xref:System.NotImplementedException>o altre eccezioni.</xref:System.NotImplementedException> </xref:System.Xaml.XamlReader> </xref:System.Xaml.XamlReader> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public virtual System.Xaml.XamlReader ReadSubtree ();
    parameters: []
    return:
      type: System.Xaml.XamlReader
      description: "Una nuova istanza lettore XAML per il sottoalbero."
  overload: System.Xaml.XamlReader.ReadSubtree*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.SchemaContext
  id: SchemaContext
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: SchemaContext
  nameWithType: XamlReader.SchemaContext
  fullName: System.Xaml.XamlReader.SchemaContext
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Quando viene implementato in una classe derivata, ottiene un oggetto che fornisce informazioni di contesto dello schema XAML per il set di informazioni."
  syntax:
    content: public abstract System.Xaml.XamlSchemaContext SchemaContext { get; }
    return:
      type: System.Xaml.XamlSchemaContext
      description: "Imposta un oggetto che fornisce informazioni di contesto dello schema XAML per le informazioni."
  overload: System.Xaml.XamlReader.SchemaContext*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Skip
  id: Skip
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Skip()
  nameWithType: XamlReader.Skip()
  fullName: System.Xaml.XamlReader.Skip()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Ignora il nodo corrente e fa avanzare la posizione del lettore al nodo successivo."
  remarks: "Una volta ignorato, <xref:System.Xaml.XamlReader.Read%2A>viene chiamato per l&quot;impostazione predefinita, implementazione Skip.</xref:System.Xaml.XamlReader.Read%2A> In genere non si chiama Skip e <xref:System.Xaml.XamlReader.Read%2A>nella sequenza.</xref:System.Xaml.XamlReader.Read%2A>       Nell&quot;implementazione Ignora impostazione predefinita, vengono eseguite azioni diverse a seconda di quale <xref:System.Xaml.XamlReader.NodeType%2A>la posizione del lettore è attualmente attiva.</xref:System.Xaml.XamlReader.NodeType%2A> Se la posizione del lettore è attualmente in un <xref:System.Xaml.XamlNodeType>o <xref:System.Xaml.XamlNodeType>, che sono stato ignorato oggetti o membro.</xref:System.Xaml.XamlNodeType> </xref:System.Xaml.XamlNodeType> Per altri <xref:System.Xaml.XamlReader.NodeType%2A>valori diversi da chiamata viene eseguita alcuna azione <xref:System.Xaml.XamlReader.Read%2A>dalla posizione corrente.</xref:System.Xaml.XamlReader.Read%2A> </xref:System.Xaml.XamlReader.NodeType%2A>       Sottoalbero possono chiamare Skip, con restrizioni di comportamento. Per ulteriori informazioni, vedere la sezione &quot;Sottoalbero&quot; in <xref:System.Xaml.XamlReader>, oppure vedere <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>       Il comportamento di struttura ad albero del nodo di Skip è basato su XML equivalente <xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName>.</xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName> In base il <xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName>equivalenza di comportamento, Skip ignora il nodo e il relativo sottoalbero, non solo il nodo della singola voce.</xref:System.Xml.XmlReader.Skip%2A?displayProperty=fullName>"
  syntax:
    content: public virtual void Skip ();
    parameters: []
  overload: System.Xaml.XamlReader.Skip*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: XamlReader.System.IDisposable.Dispose()
  fullName: System.Xaml.XamlReader.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Rilascia tutte le risorse usate dall&quot;istanza corrente del <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> classe."
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Xaml.XamlReader.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Type
  id: Type
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Type
  nameWithType: XamlReader.Type
  fullName: System.Xaml.XamlReader.Type
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Quando viene implementato in una classe derivata, ottiene il <xref href=&quot;System.Xaml.XamlType&quot;> </xref> del nodo corrente."
  remarks: "Sottoalbero possono chiamare tipo con restrizioni di comportamento. Per ulteriori informazioni, vedere la sezione &quot;Sottoalbero&quot; in <xref:System.Xaml.XamlReader>, oppure vedere <xref:System.Xaml.XamlReader.ReadSubtree%2A>.</xref:System.Xaml.XamlReader.ReadSubtree%2A> </xref:System.Xaml.XamlReader>"
  syntax:
    content: public abstract System.Xaml.XamlType Type { get; }
    return:
      type: System.Xaml.XamlType
      description: "Il <xref href=&quot;System.Xaml.XamlType&quot;> </xref> del nodo corrente; o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se la posizione corrente del lettore non è presente su un oggetto."
  overload: System.Xaml.XamlReader.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlReader.Value
  id: Value
  parent: System.Xaml.XamlReader
  langs:
  - csharp
  name: Value
  nameWithType: XamlReader.Value
  fullName: System.Xaml.XamlReader.Value
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Quando viene implementato in una classe derivata, ottiene il valore del nodo corrente."
  syntax:
    content: public abstract object Value { get; }
    return:
      type: System.Object
      description: "Il valore del nodo corrente. o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se la posizione corrente del lettore non si trova in un <xref href=&quot;System.Xaml.XamlNodeType&quot;> </xref> tipo di nodo."
  overload: System.Xaml.XamlReader.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xaml.XamlReader.#ctor
  parent: System.Xaml.XamlReader
  isExternal: false
  name: XamlReader()
  nameWithType: XamlReader.XamlReader()
  fullName: System.Xaml.XamlReader.XamlReader()
- uid: System.Xaml.XamlReader.Close
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Close()
  nameWithType: XamlReader.Close()
  fullName: System.Xaml.XamlReader.Close()
- uid: System.Xaml.XamlReader.Dispose(System.Boolean)
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: XamlReader.Dispose(Boolean)
  fullName: System.Xaml.XamlReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlReader.IsDisposed
  parent: System.Xaml.XamlReader
  isExternal: false
  name: IsDisposed
  nameWithType: XamlReader.IsDisposed
  fullName: System.Xaml.XamlReader.IsDisposed
- uid: System.Xaml.XamlReader.IsEof
  parent: System.Xaml.XamlReader
  isExternal: false
  name: IsEof
  nameWithType: XamlReader.IsEof
  fullName: System.Xaml.XamlReader.IsEof
- uid: System.Xaml.XamlReader.Member
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Member
  nameWithType: XamlReader.Member
  fullName: System.Xaml.XamlReader.Member
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlReader.Namespace
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Namespace
  nameWithType: XamlReader.Namespace
  fullName: System.Xaml.XamlReader.Namespace
- uid: System.Xaml.NamespaceDeclaration
  parent: System.Xaml
  isExternal: false
  name: NamespaceDeclaration
  nameWithType: NamespaceDeclaration
  fullName: System.Xaml.NamespaceDeclaration
- uid: System.Xaml.XamlReader.NodeType
  parent: System.Xaml.XamlReader
  isExternal: false
  name: NodeType
  nameWithType: XamlReader.NodeType
  fullName: System.Xaml.XamlReader.NodeType
- uid: System.Xaml.XamlNodeType
  parent: System.Xaml
  isExternal: false
  name: XamlNodeType
  nameWithType: XamlNodeType
  fullName: System.Xaml.XamlNodeType
- uid: System.Xaml.XamlReader.Read
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Read()
  nameWithType: XamlReader.Read()
  fullName: System.Xaml.XamlReader.Read()
- uid: System.Xaml.XamlReader.ReadSubtree
  parent: System.Xaml.XamlReader
  isExternal: false
  name: ReadSubtree()
  nameWithType: XamlReader.ReadSubtree()
  fullName: System.Xaml.XamlReader.ReadSubtree()
- uid: System.Xaml.XamlReader
  parent: System.Xaml
  isExternal: false
  name: XamlReader
  nameWithType: XamlReader
  fullName: System.Xaml.XamlReader
- uid: System.Xaml.XamlReader.SchemaContext
  parent: System.Xaml.XamlReader
  isExternal: false
  name: SchemaContext
  nameWithType: XamlReader.SchemaContext
  fullName: System.Xaml.XamlReader.SchemaContext
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlReader.Skip
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Skip()
  nameWithType: XamlReader.Skip()
  fullName: System.Xaml.XamlReader.Skip()
- uid: System.Xaml.XamlReader.System#IDisposable#Dispose
  parent: System.Xaml.XamlReader
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: XamlReader.System.IDisposable.Dispose()
  fullName: System.Xaml.XamlReader.System.IDisposable.Dispose()
- uid: System.Xaml.XamlReader.Type
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Type
  nameWithType: XamlReader.Type
  fullName: System.Xaml.XamlReader.Type
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.XamlReader.Value
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Value
  nameWithType: XamlReader.Value
  fullName: System.Xaml.XamlReader.Value
- uid: System.Xaml.XamlReader.#ctor*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: XamlReader
  nameWithType: XamlReader.XamlReader
- uid: System.Xaml.XamlReader.Close*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Close
  nameWithType: XamlReader.Close
- uid: System.Xaml.XamlReader.Dispose*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Dispose
  nameWithType: XamlReader.Dispose
- uid: System.Xaml.XamlReader.IsDisposed*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: IsDisposed
  nameWithType: XamlReader.IsDisposed
- uid: System.Xaml.XamlReader.IsEof*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: IsEof
  nameWithType: XamlReader.IsEof
- uid: System.Xaml.XamlReader.Member*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Member
  nameWithType: XamlReader.Member
- uid: System.Xaml.XamlReader.Namespace*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Namespace
  nameWithType: XamlReader.Namespace
- uid: System.Xaml.XamlReader.NodeType*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: NodeType
  nameWithType: XamlReader.NodeType
- uid: System.Xaml.XamlReader.Read*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Read
  nameWithType: XamlReader.Read
- uid: System.Xaml.XamlReader.ReadSubtree*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: ReadSubtree
  nameWithType: XamlReader.ReadSubtree
- uid: System.Xaml.XamlReader.SchemaContext*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: SchemaContext
  nameWithType: XamlReader.SchemaContext
- uid: System.Xaml.XamlReader.Skip*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Skip
  nameWithType: XamlReader.Skip
- uid: System.Xaml.XamlReader.System#IDisposable#Dispose*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: XamlReader.System.IDisposable.Dispose
- uid: System.Xaml.XamlReader.Type*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Type
  nameWithType: XamlReader.Type
- uid: System.Xaml.XamlReader.Value*
  parent: System.Xaml.XamlReader
  isExternal: false
  name: Value
  nameWithType: XamlReader.Value
