### YamlMime:ManagedReference
items:
- uid: System.Web.HttpResponse
  id: HttpResponse
  children:
  - System.Web.HttpResponse.#ctor(System.IO.TextWriter)
  - System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])
  - System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)
  - System.Web.HttpResponse.AddCacheItemDependencies(System.String[])
  - System.Web.HttpResponse.AddCacheItemDependency(System.String)
  - System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)
  - System.Web.HttpResponse.AddFileDependencies(System.String[])
  - System.Web.HttpResponse.AddFileDependency(System.String)
  - System.Web.HttpResponse.AddHeader(System.String,System.String)
  - System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})
  - System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)
  - System.Web.HttpResponse.AppendHeader(System.String,System.String)
  - System.Web.HttpResponse.AppendToLog(System.String)
  - System.Web.HttpResponse.ApplyAppPathModifier(System.String)
  - System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)
  - System.Web.HttpResponse.BinaryWrite(System.Byte[])
  - System.Web.HttpResponse.Buffer
  - System.Web.HttpResponse.BufferOutput
  - System.Web.HttpResponse.Cache
  - System.Web.HttpResponse.CacheControl
  - System.Web.HttpResponse.Charset
  - System.Web.HttpResponse.Clear
  - System.Web.HttpResponse.ClearContent
  - System.Web.HttpResponse.ClearHeaders
  - System.Web.HttpResponse.ClientDisconnectedToken
  - System.Web.HttpResponse.Close
  - System.Web.HttpResponse.ContentEncoding
  - System.Web.HttpResponse.ContentType
  - System.Web.HttpResponse.Cookies
  - System.Web.HttpResponse.DisableKernelCache
  - System.Web.HttpResponse.DisableUserCache
  - System.Web.HttpResponse.End
  - System.Web.HttpResponse.EndFlush(System.IAsyncResult)
  - System.Web.HttpResponse.Expires
  - System.Web.HttpResponse.ExpiresAbsolute
  - System.Web.HttpResponse.Filter
  - System.Web.HttpResponse.Flush
  - System.Web.HttpResponse.FlushAsync
  - System.Web.HttpResponse.HeaderEncoding
  - System.Web.HttpResponse.Headers
  - System.Web.HttpResponse.HeadersWritten
  - System.Web.HttpResponse.IsClientConnected
  - System.Web.HttpResponse.IsRequestBeingRedirected
  - System.Web.HttpResponse.Output
  - System.Web.HttpResponse.OutputStream
  - System.Web.HttpResponse.Pics(System.String)
  - System.Web.HttpResponse.PushPromise(System.String)
  - System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.HttpResponse.Redirect(System.String)
  - System.Web.HttpResponse.Redirect(System.String,System.Boolean)
  - System.Web.HttpResponse.RedirectLocation
  - System.Web.HttpResponse.RedirectPermanent(System.String)
  - System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)
  - System.Web.HttpResponse.RedirectToRoute(System.Object)
  - System.Web.HttpResponse.RedirectToRoute(System.String)
  - System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
  - System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)
  - System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.String)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)
  - System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.HttpResponse.RemoveOutputCacheItem(System.String)
  - System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)
  - System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)
  - System.Web.HttpResponse.Status
  - System.Web.HttpResponse.StatusCode
  - System.Web.HttpResponse.StatusDescription
  - System.Web.HttpResponse.SubStatusCode
  - System.Web.HttpResponse.SupportsAsyncFlush
  - System.Web.HttpResponse.SuppressContent
  - System.Web.HttpResponse.SuppressDefaultCacheControlHeader
  - System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
  - System.Web.HttpResponse.TransmitFile(System.String)
  - System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)
  - System.Web.HttpResponse.TrySkipIisCustomErrors
  - System.Web.HttpResponse.Write(System.Char)
  - System.Web.HttpResponse.Write(System.Object)
  - System.Web.HttpResponse.Write(System.String)
  - System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)
  - System.Web.HttpResponse.WriteFile(System.String)
  - System.Web.HttpResponse.WriteFile(System.String,System.Boolean)
  - System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)
  - System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)
  - System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)
  langs:
  - csharp
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
  type: Class
  summary: "Incapsula informazioni sulla risposta HTTP da un&quot;operazione ASP.NET."
  remarks: "I metodi e proprietà della classe HttpResponse sono esposte tramite la <xref:System.Web.HttpApplication.Response%2A>proprietà del <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, e <xref:System.Web.UI.UserControl>classi.</xref:System.Web.UI.UserControl> </xref:System.Web.UI.Page> </xref:System.Web.HttpContext> </xref:System.Web.HttpApplication> </xref:System.Web.HttpApplication.Response%2A>       I metodi seguenti della classe HttpResponse sono supportati solo in scenari di postback e non durante i postback asincroni postback scenari:- <xref:System.Web.HttpResponse.BinaryWrite%2A>- <xref:System.Web.HttpResponse.Clear%2A>- <xref:System.Web.HttpResponse.ClearContent%2A>- <xref:System.Web.HttpResponse.ClearHeaders%2A>- <xref:System.Web.HttpResponse.Close%2A>- <xref:System.Web.HttpResponse.End%2A>- <xref:System.Web.HttpResponse.Flush%2A>- <xref:System.Web.HttpResponse.TransmitFile%2A>- <xref:System.Web.HttpResponse.Write%2A>- <xref:System.Web.HttpResponse.WriteFile%2A>- <xref:System.Web.HttpResponse.WriteSubstitution%2A>aggiornamenti a pagina parziale sono abilitati quando si utilizza <xref:System.Web.UI.UpdatePanel>controlli per aggiornare aree selezionate di una pagina anziché aggiornare l&quot;intera pagina con un postback.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.HttpResponse.WriteSubstitution%2A> </xref:System.Web.HttpResponse.WriteFile%2A> </xref:System.Web.HttpResponse.Write%2A> </xref:System.Web.HttpResponse.TransmitFile%2A> </xref:System.Web.HttpResponse.Flush%2A> </xref:System.Web.HttpResponse.End%2A> </xref:System.Web.HttpResponse.Close%2A> </xref:System.Web.HttpResponse.ClearHeaders%2A> </xref:System.Web.HttpResponse.ClearContent%2A> </xref:System.Web.HttpResponse.Clear%2A> </xref:System.Web.HttpResponse.BinaryWrite%2A> Per ulteriori informazioni, vedere [Cenni preliminari sul controllo UpdatePanel](~/add/includes/ajax-current-ext-md.md) e [Panoramica per il Rendering parziale della pagina](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example draws three overlapping rectangles when the page is requested. The code begins by setting the <xref:System.Web.HttpResponse.ContentType%2A> property to image/jpeg, so that the entire page will be rendered as a JPEG image. The code then calls the <xref:System.Web.HttpResponse.Clear%2A> method to ensure that no extraneous content is sent with this response. Next, the code sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the page is completely processed before it is sent to the requesting client. Two objects used to draw the rectangles are then created: a <xref:System.Drawing.Bitmap> and a <xref:System.Drawing.Graphics> object. The variables created in the page are used as coordinates to draw the rectangles and a string that appears inside the largest rectangle.  \n  \n When the three rectangles and the string that appears inside them are drawn, the <xref:System.Drawing.Bitmap> is saved to the <xref:System.IO.Stream> object that is associated with the <xref:System.Web.HttpResponse.OutputStream%2A> property and its format is set to JPEG. The code calls the <xref:System.Drawing.Image.Dispose%2A> and <xref:System.Drawing.Graphics.Dispose%2A> methods to release the resources used by the two drawing objects. Lastly, the code calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the buffered response to the requesting client.  \n  \n> [!NOTE]\n>  In code, the HttpResponse object is referred to by the keyword `Response`. For example, `Response.Clear()` refers to the <xref:System.Web.HttpResponse.Clear%2A?displayProperty=fullName> method. The <xref:System.Web.UI.Page> class has a property that is named <xref:System.Web.UI.Page.Response%2A> that exposes the current instance of HttpResponse.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/csharp/t-system.web.httpresponse_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/visualbasic/t-system.web.httpresponse_1.aspx)]"
  syntax:
    content: public sealed class HttpResponse
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpResponse.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: HttpResponse(TextWriter)
  nameWithType: HttpResponse.HttpResponse(TextWriter)
  fullName: System.Web.HttpResponse.HttpResponse(TextWriter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.HttpResponse&quot;> </xref> classe."
  remarks: "Questo membro supporta l&quot;infrastruttura .NET Framework e non deve essere utilizzato direttamente dal codice.       I metodi e le proprietà di <xref:System.Web.HttpResponse>classe sono esposte tramite la funzione intrinseca <xref:System.Web.HttpContext.Response%2A>oggetto in ASP.NET.</xref:System.Web.HttpContext.Response%2A> </xref:System.Web.HttpResponse>"
  syntax:
    content: public HttpResponse (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "Oggetto <xref:System.IO.TextWriter>oggetto che abilita l&quot;output HTTP personalizzato.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpResponse.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])
  id: AddCacheDependency(System.Web.Caching.CacheDependency[])
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddCacheDependency(CacheDependency[])
  nameWithType: HttpResponse.AddCacheDependency(CacheDependency[])
  fullName: System.Web.HttpResponse.AddCacheDependency(CacheDependency[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Associa un set di dipendenze della cache alla risposta per semplificare l&quot;invalidamento della risposta se viene archiviata nella cache di output e le dipendenze specificate vengano modificate."
  remarks: "Il metodo AddCacheDependency consente dipendenze da creare tra le risposte memorizzate nella cache e un <xref:System.Web.Caching.CacheDependency>oggetto.</xref:System.Web.Caching.CacheDependency>"
  example:
  - "The following example demonstrates how to create a cache dependency by using the AddCacheDependency method and a <xref:System.Web.Caching.CacheDependency> object.  \n  \n [!code-vb[HttpResponse.AddCacheDependency#1](~/add/codesnippet/visualbasic/a9e8dbb8-b5f3-41b1-b083-_1.aspx)]\n [!code-cs[HttpResponse.AddCacheDependency#1](~/add/codesnippet/csharp/a9e8dbb8-b5f3-41b1-b083-_1.aspx)]"
  syntax:
    content: public void AddCacheDependency (System.Web.Caching.CacheDependency[] dependencies);
    parameters:
    - id: dependencies
      type: System.Web.Caching.CacheDependency[]
      description: "Un file, chiave di cache o <xref href=&quot;System.Web.Caching.CacheDependency&quot;> </xref> da aggiungere all&quot;elenco delle dipendenze dell&quot;applicazione."
  overload: System.Web.HttpResponse.AddCacheDependency*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>dependencies</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Questo metodo è stato chiamato un ritardo nella pipeline di elaborazione della cache, dopo la risposta memorizzata nella cache è già stata creata."
  platform:
  - net462
- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)
  id: AddCacheItemDependencies(System.Collections.ArrayList)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddCacheItemDependencies(ArrayList)
  nameWithType: HttpResponse.AddCacheItemDependencies(ArrayList)
  fullName: System.Web.HttpResponse.AddCacheItemDependencies(ArrayList)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Rende la validità di una risposta memorizzata nella cache dipendente dagli altri elementi nella cache."
  remarks: "Quando gli elementi di riferimento di `cacheKeys` parametro vengono rimossi dalla cache, la risposta memorizzata nella cache dell&quot;elemento corrente non è valida."
  example:
  - "The following example demonstrates how to use an ASP.NET page that is output cached. The code for the page creates an <xref:System.Collections.ArrayList> object of keys that are associated with items that are stored in the <xref:System.Web.Caching.Cache> object. Next, the code passes the <xref:System.Collections.ArrayList> as the parameter in a call to the AddCacheItemDependencies method. This makes the output cached response not valid, if any of the files specified in the <xref:System.Collections.ArrayList> change.  \n  \n [!code-cs[System.Web.HttpResponse_Samples2#5](~/add/codesnippet/csharp/m-system.web.httprespons_6_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples2#5](~/add/codesnippet/visualbasic/m-system.web.httprespons_6_1.aspx)]"
  syntax:
    content: public void AddCacheItemDependencies (System.Collections.ArrayList cacheKeys);
    parameters:
    - id: cacheKeys
      type: System.Collections.ArrayList
      description: "Il <xref href=&quot;System.Collections.ArrayList&quot;> </xref> che contiene le chiavi di elementi da cui dipende la risposta corrente memorizzata nella cache."
  overload: System.Web.HttpResponse.AddCacheItemDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.String[])
  id: AddCacheItemDependencies(System.String[])
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddCacheItemDependencies(String[])
  nameWithType: HttpResponse.AddCacheItemDependencies(String[])
  fullName: System.Web.HttpResponse.AddCacheItemDependencies(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Rende la validità di un elemento memorizzato nella cache dipendente da un altro elemento nella cache."
  remarks: "Quando un il `cacheKey`s vengono rimossi dalla cache, la risposta memorizzata nella cache dell&quot;elemento corrente non è valida."
  syntax:
    content: public void AddCacheItemDependencies (string[] cacheKeys);
    parameters:
    - id: cacheKeys
      type: System.String[]
      description: "Matrice delle chiavi dell&quot;elemento cui dipende la risposta memorizzata nella cache."
  overload: System.Web.HttpResponse.AddCacheItemDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddCacheItemDependency(System.String)
  id: AddCacheItemDependency(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddCacheItemDependency(String)
  nameWithType: HttpResponse.AddCacheItemDependency(String)
  fullName: System.Web.HttpResponse.AddCacheItemDependency(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Rende la validità di una risposta memorizzata nella cache dipendente da un altro elemento nella cache."
  remarks: "Quando l&quot;elemento corrispondente di `cacheKey` parametro viene rimosso dalla cache, la risposta memorizzata nella cache dell&quot;elemento corrente non è valida."
  example:
  - "The following example is an ASP.NET user control that is output cached. The code for the control calls the AddCacheItemDependency method with the key of an item stored in the <xref:System.Web.Caching.Cache> object passed as its parameter. If the item does not exist in the cache, the control's response that was stored in the output cache is invalidated. This means that on the subsequent request, a new version of the control's response will be added to the output cache.  \n  \n Next, the code checks whether an item associated with a `bookData` key is stored in the `Cache` object, and displays one of two lines of text dependent upon the result. Then, the code sets the <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property of a <xref:System.Web.UI.WebControls.DataGrid> control, which is named `dgBooks`, with a call to a custom `DataHelper` class' shared `GetBookData` method, and populates the <xref:System.Web.UI.WebControls.DataGrid> with the <xref:System.Web.UI.Control.DataBind%2A> method.  \n  \n [!code-cs[System.Web.HttpResponse_Samples2#3](~/add/codesnippet/csharp/m-system.web.httprespons_13_1.ascx)]\n [!code-vb[System.Web.HttpResponse_Samples2#3](~/add/codesnippet/visualbasic/m-system.web.httprespons_13_1.ascx)]"
  syntax:
    content: public void AddCacheItemDependency (string cacheKey);
    parameters:
    - id: cacheKey
      type: System.String
      description: "Chiave dell&quot;elemento da cui dipende la risposta memorizzata nella cache."
  overload: System.Web.HttpResponse.AddCacheItemDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)
  id: AddFileDependencies(System.Collections.ArrayList)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddFileDependencies(ArrayList)
  nameWithType: HttpResponse.AddFileDependencies(ArrayList)
  fullName: System.Web.HttpResponse.AddFileDependencies(ArrayList)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge un gruppo di nomi file alla raccolta di nomi di file da cui dipende la risposta corrente."
  remarks: ''
  example:
  - "The following example is an ASP.NET page that is output cached. The code for the page creates an <xref:System.Collections.ArrayList> of file paths, and then passes the <xref:System.Collections.ArrayList> as the parameter in a call to the AddFileDependencies method. This makes the output cached response invalid if any of the files specified in the <xref:System.Collections.ArrayList> changes.  \n  \n [!code-vb[System.Web.HttpResponse_Samples2#6](~/add/codesnippet/visualbasic/m-system.web.httprespons_10_1.aspx)]\n [!code-cs[System.Web.HttpResponse_Samples2#6](~/add/codesnippet/csharp/m-system.web.httprespons_10_1.aspx)]"
  syntax:
    content: public void AddFileDependencies (System.Collections.ArrayList filenames);
    parameters:
    - id: filenames
      type: System.Collections.ArrayList
      description: "Raccolta di file da aggiungere."
  overload: System.Web.HttpResponse.AddFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddFileDependencies(System.String[])
  id: AddFileDependencies(System.String[])
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddFileDependencies(String[])
  nameWithType: HttpResponse.AddFileDependencies(String[])
  fullName: System.Web.HttpResponse.AddFileDependencies(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge una matrice di nomi file alla raccolta di nomi di file da cui dipende la risposta corrente."
  remarks: ''
  example:
  - "The following example adds an array of file names to the AddFileDependencies file dependency list. If the files changes, the cached response is invalidated.  \n  \n [!code-cs[Response.AddFileDependency#1](~/add/codesnippet/csharp/m-system.web.httprespons_0_1.aspx)]\n [!code-vb[Response.AddFileDependency#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_0_1.aspx)]"
  syntax:
    content: public void AddFileDependencies (string[] filenames);
    parameters:
    - id: filenames
      type: System.String[]
      description: "Matrice di file da aggiungere."
  overload: System.Web.HttpResponse.AddFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddFileDependency(System.String)
  id: AddFileDependency(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddFileDependency(String)
  nameWithType: HttpResponse.AddFileDependency(String)
  fullName: System.Web.HttpResponse.AddFileDependency(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge un singolo nome file alla raccolta di nomi di file da cui dipende la risposta corrente."
  remarks: 'Quando si utilizza il metodo AddFileDependency per aggiungere una dipendenza di file, è necessario specificare anche a livello di programmazione o in modo dichiarativo di memorizzazione nella cache di output. Ad esempio, per specificare in modo dichiarativo di memorizzazione nella cache di output, utilizzare la direttiva. Per ulteriori informazioni, vedere [come: Cache di Output delle pagine con dipendenze dei File](~/add/includes/ajax-current-ext-md.md).'
  example:
  - "The following example shows how to add a single file name to the AddFileDependency file dependency list. If the file changes, the cached response is invalidated.  \n  \n [!code-vb[Classic HttpResponse.AddFileDependency Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_11_1.vb)]\n [!code-cs[Classic HttpResponse.AddFileDependency Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_11_1.cs)]"
  syntax:
    content: public void AddFileDependency (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "Il nome del file da aggiungere."
  overload: System.Web.HttpResponse.AddFileDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddHeader(System.String,System.String)
  id: AddHeader(System.String,System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddHeader(String,String)
  nameWithType: HttpResponse.AddHeader(String,String)
  fullName: System.Web.HttpResponse.AddHeader(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge un&quot;intestazione HTTP al flusso di output. AddHeader viene fornito per compatibilità con le versioni precedenti di ASP."
  remarks: "AddHeader equivale <xref:System.Web.HttpResponse.AppendHeader%2A>e viene fornito solo per compatibilità con le versioni precedenti di ASP.</xref:System.Web.HttpResponse.AppendHeader%2A> Con ASP.NET, utilizzare <xref:System.Web.HttpResponse.AppendHeader%2A>.</xref:System.Web.HttpResponse.AppendHeader%2A>"
  syntax:
    content: public void AddHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Il nome dell&quot;intestazione HTTP da aggiungere `value` per."
    - id: value
      type: System.String
      description: "Stringa da aggiungere all&quot;intestazione."
  overload: System.Web.HttpResponse.AddHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})
  id: AddOnSendingHeaders(System.Action{System.Web.HttpContext})
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AddOnSendingHeaders(Action<HttpContext>)
  nameWithType: HttpResponse.AddOnSendingHeaders(Action<HttpContext>)
  fullName: System.Web.HttpResponse.AddOnSendingHeaders(Action<HttpContext>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "[Supportato in .NET Framework 4.5.2 e versioni successive]       Registra un callback che verrà richiamato dal runtime ASP.NET immediatamente prima che le intestazioni vengono inviate per questa richiesta di risposta."
  remarks: "> [!IMPORTANT]> Se il modulo nativo Scarica la risposta prima di tutto, il metodo AddOnSendingHeaders non viene richiamato.       Il Pseudoevento onsendingheaders è diverso dall&quot;evento IHttpModule a livello della pipeline, in quanto si tratta di una sottoscrizione di ogni richiesta, anziché a una sottoscrizione per ogni applicazione. Lo scopo è che il callback può modificare il codice di stato della risposta oppure può impostare un&quot;intestazione o il cookie di risposta. Altre note sull&quot;utilizzo e avvertenze:-questo metodo è efficace solo quando IIS viene eseguito nella pipeline in modalità pipeline integrata e solo se le intestazioni di risposta non sono ancora state inviate per la richiesta corrente.      -Il runtime di ASP.NET non garantisce alcun dettaglio relativo thread in cui il callback viene richiamato su. Ad esempio, il callback può essere richiamato in modo sincrono in un thread in background se è in corso lo scaricamento in background. <xref:System.Web.HttpContext.Current%2A>potrebbe non essere disponibili in tale thread.</xref:System.Web.HttpContext.Current%2A>      -Il callback non deve chiamare qualsiasi metodo che consente di modificare il corpo entità della risposta o che comporta lo scaricamento. Ad esempio, il callback non deve chiamare <xref:System.Web.HttpResponse.Redirect%2A>, come tale metodo può modificare il corpo entità della risposta.</xref:System.Web.HttpResponse.Redirect%2A>      -Il callback deve contenere codice sincrono solo a esecuzione breve. Il tentativo di richiamare un&quot;operazione asincrona o attendere l&quot;operazione potrebbe causare un deadlock.      -Il callback non deve generare un&quot;eccezione. in caso contrario, il comportamento è indefinito."
  syntax:
    content: public System.Web.ISubscriptionToken AddOnSendingHeaders (Action<System.Web.HttpContext> callback);
    parameters:
    - id: callback
      type: System.Action{System.Web.HttpContext}
      description: "Il metodo di callback."
    return:
      type: System.Web.ISubscriptionToken
      description: "Un <xref href=&quot;System.Web.ISubscriptionToken&quot;> </xref> oggetto che rappresenta la sottoscrizione dello Pseudoevento onsendingheaders."
  overload: System.Web.HttpResponse.AddOnSendingHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)
  id: AppendCookie(System.Web.HttpCookie)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AppendCookie(HttpCookie)
  nameWithType: HttpResponse.AppendCookie(HttpCookie)
  fullName: System.Web.HttpResponse.AppendCookie(HttpCookie)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge un cookie HTTP alla raccolta di cookie intrinseca."
  remarks: ''
  example:
  - "The following example creates a new cookie named `LastVisit`, sets the value of the cookie to the current date and time, and appends the cookie to the current cookie collection. All cookies in the cookie collection are sent to the client in the `Set-Cookie` header with the HTTP output stream.  \n  \n [!code-cs[Classic HttpResponse.AppendCookie Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_22_1.cs)]\n [!code-vb[Classic HttpResponse.AppendCookie Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_22_1.vb)]"
  syntax:
    content: public void AppendCookie (System.Web.HttpCookie cookie);
    parameters:
    - id: cookie
      type: System.Web.HttpCookie
      description: "Il <xref href=&quot;System.Web.HttpCookie&quot;> </xref> da aggiungere al flusso di output."
  overload: System.Web.HttpResponse.AppendCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Un cookie viene aggiunto dopo l&quot;invio delle intestazioni HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.AppendHeader(System.String,System.String)
  id: AppendHeader(System.String,System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AppendHeader(String,String)
  nameWithType: HttpResponse.AppendHeader(String,String)
  fullName: System.Web.HttpResponse.AppendHeader(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge un&quot;intestazione HTTP al flusso di output."
  remarks: "Se utilizzare il metodo AppendHeader per inviare intestazioni specifiche della cache e allo stesso tempo, utilizzare il modello a oggetti della cache (<xref:System.Web.HttpResponse.Cache%2A>) per impostare criteri di cache, le intestazioni di risposta HTTP che riguardano la memorizzazione nella cache (`Cache-Control`, `Expires`, `Last-Modified`, `Pragma`, e `Vary`) potrebbe essere stata eliminata quando viene utilizzato il modello a oggetti della cache.</xref:System.Web.HttpResponse.Cache%2A> Questo comportamento consente ad ASP.NET di mantenere le impostazioni più restrittive. Si consideri ad esempio una pagina che include controlli utente. Se tali controlli sono in conflitto i criteri di cache, verrà utilizzato il criterio più restrittivo di cache. Se un controllo utente imposta l&quot;intestazione &quot;`Cache-Control: Public`&quot;e un altro controllo utente imposta l&quot;intestazione più restrittiva&quot;`Cache-Control: Private`&quot; tramite chiamate a <xref:System.Web.HttpCachePolicy.SetCacheability%2A>, il &quot;`Cache-Control: Private`&quot; intestazione verrà inviata alla risposta.</xref:System.Web.HttpCachePolicy.SetCacheability%2A>       Per un elenco di intestazioni HTTP/1.1 standard, vedere la sezione 14, &quot;Definizioni di campo di intestazione&quot;, nel [Hypertext Transfer Protocol - HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) specifica sul sito Web del World Wide Web Consortium (W3C)."
  example:
  - "The following example calls the AppendHeader method to add a custom header to the <xref:System.Web.HttpResponse> object sent to the requesting client.  \n  \n [!code-cs[System.Web.HttpResponse.AppendHeader_Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_19_1.aspx)]\n [!code-vb[System.Web.HttpResponse.AppendHeader_Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_19_1.aspx)]"
  syntax:
    content: public void AppendHeader (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "Il nome dell&quot;intestazione HTTP da aggiungere al flusso di output."
    - id: value
      type: System.String
      description: "Stringa da aggiungere all&quot;intestazione."
  overload: System.Web.HttpResponse.AppendHeader*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "L&quot;intestazione viene aggiunto dopo l&quot;invio delle intestazioni HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.AppendToLog(System.String)
  id: AppendToLog(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: AppendToLog(String)
  nameWithType: HttpResponse.AppendToLog(String)
  fullName: System.Web.HttpResponse.AppendToLog(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge informazioni di log personalizzate nel file di log di Internet Information Services (IIS)."
  remarks: "Per consentire la stringa specificata deve essere registrato nel file di log, è innanzitutto necessario abilitare il **Query URI** opzione del **proprietà registrazione estese** la finestra di dialogo per il sito che si desidera registrare l&quot;attività in IIS.       Per personalizzare la registrazione estesa in IIS 6.0, seguire questi passaggi: 1.  In Gestione IIS espandere il nodo del computer locale, espandere la cartella di siti Web o FTP, il sito Web o FTP destro e quindi fare clic su **proprietà**.      2.  Fare clic su di **sito Web o FTP** scheda e quindi selezionare il **abilitare la registrazione** casella di controllo (se non è già selezionata).      3.  Nel **formato registro attivo** fare clic su **formato File registro esteso W3C**.      4.  Scegliere **Proprietà**.      5.  Fare clic su di **avanzate** scheda, selezionare le proprietà che si desidera accedere e quindi fare clic su **OK**."
  example:
  - "The following example shows how to append a string to the log.  \n  \n [!code-vb[Classic HttpResponse.AppendToLog Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_15_1.vb)]\n [!code-cs[Classic HttpResponse.AppendToLog Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_15_1.cs)]"
  syntax:
    content: public void AppendToLog (string param);
    parameters:
    - id: param
      type: System.String
      description: "Testo da aggiungere al file di log."
  overload: System.Web.HttpResponse.AppendToLog*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ApplyAppPathModifier(System.String)
  id: ApplyAppPathModifier(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ApplyAppPathModifier(String)
  nameWithType: HttpResponse.ApplyAppPathModifier(String)
  fullName: System.Web.HttpResponse.ApplyAppPathModifier(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge un ID sessione al percorso virtuale se la sessione utilizza <> </> *> lo stato della sessione e restituisce il percorso combinato. Se <> </> *> lo stato della sessione non viene utilizzato ApplyAppPathModifier restituisce il percorso virtuale originale."
  remarks: "ApplyAppPathModifier viene utilizzato solo con sessioni senza cookie per creare href assoluti."
  example:
  - "The following example declares a string variable named `urlConverted`, and sets it to the result of an ApplyAppPathModifier method call. The code then passes the variable's value to a <xref:System.Web.UI.WebControls.HyperLink> control's <xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A> property.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#5](~/add/codesnippet/csharp/m-system.web.httprespons_4_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#5](~/add/codesnippet/visualbasic/m-system.web.httprespons_4_1.aspx)]"
  syntax:
    content: public string ApplyAppPathModifier (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Il percorso virtuale a una risorsa."
    return:
      type: System.String
      description: "Il <code> virtualPath </code> con ID di sessione inserito."
  overload: System.Web.HttpResponse.ApplyAppPathModifier*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)
  id: BeginFlush(System.AsyncCallback,System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: BeginFlush(AsyncCallback,Object)
  nameWithType: HttpResponse.BeginFlush(AsyncCallback,Object)
  fullName: System.Web.HttpResponse.BeginFlush(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Invia la risposta attualmente memorizzata nel buffer al client."
  remarks: "Se l&quot;oggetto sottostante <xref:System.Web.HttpWorkerRequest>oggetto supporta le operazioni di scaricamento asincrone e questo metodo viene chiamato da un evento asincrono modulo o da un gestore asincrono, l&quot;operazione di scaricamento viene eseguita in modo asincrono.</xref:System.Web.HttpWorkerRequest> In caso contrario, l&quot;operazione di scaricamento viene eseguita in modo sincrono. Operazione di scaricamento asincrono è supportata per IIS 6.0 e versioni successive."
  syntax:
    content: public IAsyncResult BeginFlush (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Oggetto di callback."
    - id: state
      type: System.Object
      description: "Stato della risposta."
    return:
      type: System.IAsyncResult
      description: "Oggetto risultato asincrono."
  overload: System.Web.HttpResponse.BeginFlush*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "La risposta è già stata completata."
  platform:
  - net462
- uid: System.Web.HttpResponse.BinaryWrite(System.Byte[])
  id: BinaryWrite(System.Byte[])
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: BinaryWrite(Byte[])
  nameWithType: HttpResponse.BinaryWrite(Byte[])
  fullName: System.Web.HttpResponse.BinaryWrite(Byte[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Scrive una stringa di caratteri binari nel flusso di output HTTP."
  remarks: ''
  example:
  - "The following example reads a text file into a buffer and writes the buffer to the HTTP output stream.  \n  \n [!code-cs[Classic HttpResponse.BinaryWrite Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_21_1.cs)]\n [!code-vb[Classic HttpResponse.BinaryWrite Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_21_1.vb)]"
  syntax:
    content: public void BinaryWrite (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Byte da scrivere nel flusso di output."
  overload: System.Web.HttpResponse.BinaryWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Buffer
  id: Buffer
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Buffer
  nameWithType: HttpResponse.Buffer
  fullName: System.Web.HttpResponse.Buffer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta un valore che indica se memorizzare nel buffer di output e inviarlo al termine dell&quot;intera risposta al termine dell&quot;elaborazione."
  remarks: "La proprietà di Buffer è stata deprecata a favore della <xref:System.Web.HttpResponse.BufferOutput%2A>proprietà e viene fornito solo per compatibilità con le versioni precedenti di ASP.</xref:System.Web.HttpResponse.BufferOutput%2A> Con ASP.NET, utilizzare <xref:System.Web.HttpResponse.BufferOutput%2A>.</xref:System.Web.HttpResponse.BufferOutput%2A>"
  syntax:
    content: public bool Buffer { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;output al client viene memorizzato nel buffer; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.BufferOutput
  id: BufferOutput
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: BufferOutput
  nameWithType: HttpResponse.BufferOutput
  fullName: System.Web.HttpResponse.BufferOutput
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta un valore che indica se memorizzare nel buffer di output e inviarlo al termine dell&quot;intera pagina al termine dell&quot;elaborazione."
  remarks: ''
  example:
  - "The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the BufferOutput property to true so that the entire page will be processed before any content is sent to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/csharp/p-system.web.httprespons_3_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/visualbasic/p-system.web.httprespons_3_1.aspx)]"
  syntax:
    content: public bool BufferOutput { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;output al client viene memorizzato nel buffer; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.BufferOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Cache
  id: Cache
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Cache
  nameWithType: HttpResponse.Cache
  fullName: System.Web.HttpResponse.Cache
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene i criteri di memorizzazione nella cache (ad esempio scadenza, impostazioni di privacy e clausole di variazione) di una pagina Web."
  remarks: ''
  example:
  - "The following example writes properties of the current cache policy to the HTTP output stream.  \n  \n [!code-vb[Classic HttpResponse.Cache Example#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_4_1.vb)]\n [!code-cs[Classic HttpResponse.Cache Example#1](~/add/codesnippet/csharp/p-system.web.httprespons_4_1.cs)]"
  syntax:
    content: public System.Web.HttpCachePolicy Cache { get; }
    return:
      type: System.Web.HttpCachePolicy
      description: "Un <xref href=&quot;System.Web.HttpCachePolicy&quot;> </xref> oggetto che contiene informazioni sui criteri di memorizzazione nella cache della risposta corrente."
  overload: System.Web.HttpResponse.Cache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.CacheControl
  id: CacheControl
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: CacheControl
  nameWithType: HttpResponse.CacheControl
  fullName: System.Web.HttpResponse.CacheControl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta il <xref uid=&quot;langword_csharp_Cache-Control&quot; name=&quot;Cache-Control&quot; href=&quot;&quot;> </xref> intestazione HTTP che corrisponde a uno del <xref href=&quot;System.Web.HttpCacheability&quot;> </xref> valori di enumerazione."
  remarks: "I valori per `Private`, `Public`, e `No-Cache` sono stringhe e devono essere racchiusi tra virgolette (&quot;&quot;). Se la proprietà CacheControl è impostata su un valore che corrisponde a uno del <xref:System.Web.HttpCacheability>valori di enumerazione, un oggetto <xref:System.ArgumentException>viene generata un&quot;eccezione.</xref:System.ArgumentException> </xref:System.Web.HttpCacheability> Se la proprietà CacheControl non è impostata, la cache della risposta è impostata su <xref:System.Web.HttpCacheability>.</xref:System.Web.HttpCacheability>       Il `CacheControl`, <xref:System.Web.HttpResponse.Expires%2A>, e <xref:System.Web.HttpResponse.ExpiresAbsolute%2A>proprietà sono state deprecate.</xref:System.Web.HttpResponse.ExpiresAbsolute%2A> </xref:System.Web.HttpResponse.Expires%2A> Al contrario, i metodi del <xref:System.Web.HttpCachePolicy>classe sono disponibili tramite il <xref:System.Web.HttpResponse.Cache%2A>intrinseco per controllare Internet Information Services (IIS) di output della cache e cache dei client.</xref:System.Web.HttpResponse.Cache%2A> </xref:System.Web.HttpCachePolicy>"
  syntax:
    content: public string CacheControl { get; set; }
    return:
      type: System.String
      description: "Rappresentazione di stringa del <xref href=&quot;System.Web.HttpCacheability&quot;> </xref> valore di enumerazione."
  overload: System.Web.HttpResponse.CacheControl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il valore di stringa non corrisponde a uno del <xref href=&quot;System.Web.HttpCacheability&quot;> </xref> valori di enumerazione."
  platform:
  - net462
- uid: System.Web.HttpResponse.Charset
  id: Charset
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Charset
  nameWithType: HttpResponse.Charset
  fullName: System.Web.HttpResponse.Charset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta il set di caratteri HTTP del flusso di output."
  remarks: "Il `Charset` può essere impostata su `null` esclusione HTTP `Content-Type` intestazione."
  example:
  - "The following example checks whether the character set of the output stream is Central European (ISO).  \n  \n [!code-vb[System.Web.HttpResponse.Charset#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_7_1.aspx)]\n [!code-cs[System.Web.HttpResponse.Charset#1](~/add/codesnippet/csharp/p-system.web.httprespons_7_1.aspx)]"
  syntax:
    content: public string Charset { get; set; }
    return:
      type: System.String
      description: "Il set di caratteri HTTP del flusso di output."
  overload: System.Web.HttpResponse.Charset*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Il <xref uid=&quot;langword_csharp_Charset&quot; name=&quot;Charset&quot; href=&quot;&quot;> </xref> proprietà è stata impostata dopo l&quot;invio delle intestazioni."
  platform:
  - net462
- uid: System.Web.HttpResponse.Clear
  id: Clear
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpResponse.Clear()
  fullName: System.Web.HttpResponse.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Cancella l&quot;output di tutto il contenuto dal flusso del buffer."
  remarks: "Il metodo Clear non cancella le informazioni di intestazione."
  example:
  - "The following example sets the <xref:System.Web.HttpResponse.ContentType%2A> property for the response to image/jpeg, calls the Clear method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the complete page will be processed before any content is sent to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/csharp/m-system.web.httprespons_2_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/visualbasic/m-system.web.httprespons_2_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.HttpResponse.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ClearContent
  id: ClearContent
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ClearContent()
  nameWithType: HttpResponse.ClearContent()
  fullName: System.Web.HttpResponse.ClearContent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Cancella l&quot;output di tutto il contenuto dal flusso del buffer."
  remarks: "Il metodo ClearContent non cancella le informazioni di intestazione."
  example:
  - "The following example clears all content from the buffer stream.  \n  \n [!code-cs[Classic HttpResponse.ClearContent Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_17_1.cs)]\n [!code-vb[Classic HttpResponse.ClearContent Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_17_1.vb)]"
  syntax:
    content: public void ClearContent ();
    parameters: []
  overload: System.Web.HttpResponse.ClearContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ClearHeaders
  id: ClearHeaders
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ClearHeaders()
  nameWithType: HttpResponse.ClearHeaders()
  fullName: System.Web.HttpResponse.ClearHeaders()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Cancella tutte le intestazioni dal flusso del buffer."
  remarks: ''
  example:
  - "The following example calls the ClearHeaders method to ensure that no headers are sent with the current response. This technique can be especially important if the ASP.NET response is generating an image, such as a JPEG file. In this example the <xref:System.Web.HttpResponse.ContentType%2A> property is set to image/jpeg.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#2](~/add/codesnippet/csharp/m-system.web.httprespons_14_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#2](~/add/codesnippet/visualbasic/m-system.web.httprespons_14_1.aspx)]"
  syntax:
    content: public void ClearHeaders ();
    parameters: []
  overload: System.Web.HttpResponse.ClearHeaders*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Le intestazioni vengono cancellate dopo l&quot;invio delle intestazioni HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.ClientDisconnectedToken
  id: ClientDisconnectedToken
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ClientDisconnectedToken
  nameWithType: HttpResponse.ClientDisconnectedToken
  fullName: System.Web.HttpResponse.ClientDisconnectedToken
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un <xref:System.Threading.CancellationToken>oggetto che viene attivato quando il client si disconnette.</xref:System.Threading.CancellationToken>"
  remarks: "Questa API è thread-safe. Tuttavia, esistono alcune restrizioni relative alla modalità di utilizzo del token di annullamento. L&quot;errato utilizzo può comportare situazioni di race condition, deadlock o altri comportamenti imprevisti. Tenere presenti le linee guida seguenti:-verificare che non vengano chiamate in questa API all&quot;esterno dei limiti di una singola richiesta, poiché ASP.NET si eliminerà il token di annullamento alla fine della richiesta. Non c&quot;è garanzia che il token mai passerà allo stato annullato prima di eliminarlo. Ad esempio, se la richiesta viene completata senza il client con disconnesso, il token verrà eliminato senza prima avere stato annullato.      -Non è in attesa di <xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=fullName>, in quanto Annulla lo scopo di notifica asincrona e possono causare deadlock.</xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=fullName>      -Non chiamare il <xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName>Overload cui richiamare il callback sul originale <xref:System.Threading.SynchronizationContext>oggetto.</xref:System.Threading.SynchronizationContext> </xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName>      -Non usare il <xref:System.Web.HttpContext>oggetto o altri non thread-safe agli oggetti intrinseci ASP.NET all&quot;interno di callback specificato per il <xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName>metodo.</xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName> </xref:System.Web.HttpContext> Il callback potrebbe essere in esecuzione contemporaneamente altri ASP.NET o codice dell&quot;applicazione.      -Mantenere i metodi di callback a esecuzione breve e non bloccante.      -Verificare ogni sforzo per evitare la generazione di eccezioni all&quot;interno dei metodi di callback.       Questa proprietà è applicabile per Internet Information Service (IIS) 7.5 solo in modalità integrata. Se viene richiamata senza la destra IIS versione o pipeline modalità, un <xref:System.PlatformNotSupportedException>viene generata un&quot;eccezione.</xref:System.PlatformNotSupportedException> Per determinare la versione di IIS, utilizzare <xref:System.Web.HttpRuntime.IISVersion%2A>.</xref:System.Web.HttpRuntime.IISVersion%2A> Per determinare la modalità pipeline, utilizzare <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>"
  syntax:
    content: public System.Threading.CancellationToken ClientDisconnectedToken { get; }
    return:
      type: System.Threading.CancellationToken
      description: "Il token di annullamento."
  overload: System.Web.HttpResponse.ClientDisconnectedToken*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Close
  id: Close
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Close()
  nameWithType: HttpResponse.Close()
  fullName: System.Web.HttpResponse.Close()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Chiude la connessione socket a un client."
  remarks: "Questo metodo termina la connessione al client in modo improvviso e non può essere normale elaborazione della richiesta HTTP. Il metodo invia un pacchetto di ripristino per il client, che può generare dati di risposta che viene memorizzato nel buffer nel server, il client o in un punto intermedio che si desidera eliminare.       Tuttavia, in genere è necessario chiamare <xref:System.Web.HttpApplication.CompleteRequest%2A>invece se si desidera passare al <xref:System.Web.HttpApplication.EndRequest>eventi e inviare una risposta al client.</xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.HttpApplication.CompleteRequest%2A>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Web.HttpResponse.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ContentEncoding
  id: ContentEncoding
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ContentEncoding
  nameWithType: HttpResponse.ContentEncoding
  fullName: System.Web.HttpResponse.ContentEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta il set di caratteri HTTP del flusso di output."
  remarks: "Predefinito `ContentEncoding` può essere specificato in un file di configurazione di ASP.NET nel [globalization Element (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) sezione. Se ContentEncoding viene specificato dal client, vengono sottoposte a override le impostazioni di configurazione predefinite."
  example:
  - "The following example writes a human-readable description of the character set encoding to the output stream.  \n  \n [!code-cs[Classic HttpResponse.ContentEncoding Example#1](~/add/codesnippet/csharp/p-system.web.httprespons_0_1.cs)]\n [!code-vb[Classic HttpResponse.ContentEncoding Example#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_0_1.vb)]"
  syntax:
    content: public System.Text.Encoding ContentEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "Oggetto <xref:System.Text.Encoding>oggetto che contiene informazioni sul set di caratteri della risposta corrente.</xref:System.Text.Encoding>"
  overload: System.Web.HttpResponse.ContentEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Tentativo di impostazione ContentEncoding su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.ContentType
  id: ContentType
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ContentType
  nameWithType: HttpResponse.ContentType
  fullName: System.Web.HttpResponse.ContentType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta il tipo MIME HTTP del flusso di output."
  remarks: ''
  example:
  - "The following example sets the ContentType property for the response to image/jpeg, calls the <xref:System.Web.HttpResponse.Clear%2A> method to remove other content that might be attached to the response, and then sets the <xref:System.Web.HttpResponse.BufferOutput%2A> property to true so that the complete page will be processed before any content is sent to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/csharp/p-system.web.httprespons_2_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#2](~/add/codesnippet/visualbasic/p-system.web.httprespons_2_1.aspx)]"
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "Il tipo MIME HTTP del flusso di output. Il valore predefinito è &quot;<xref uid=&quot;langword_csharp_text/html&quot; name=&quot;text/html&quot; href=&quot;&quot;></xref>&quot;."
  overload: System.Web.HttpResponse.ContentType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "La proprietà ContentType è impostata su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.Cookies
  id: Cookies
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Cookies
  nameWithType: HttpResponse.Cookies
  fullName: System.Web.HttpResponse.Cookies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene la raccolta di cookie di risposta."
  remarks: "ASP.NET include due raccolte di cookie intrinseca. La raccolta a cui si accede tramite il <xref:System.Web.HttpRequest.Cookies%2A>insieme di <xref:System.Web.HttpRequest>contiene i cookie trasmessi dal client al server nel `Cookie` intestazione.</xref:System.Web.HttpRequest> </xref:System.Web.HttpRequest.Cookies%2A> La raccolta a cui si accede tramite la raccolta di cookie di <xref:System.Web.HttpResponse>contiene i nuovi cookie creato nel server e trasmesso al client il `Set-Cookie` intestazione.</xref:System.Web.HttpResponse>       Dopo aver aggiunto un cookie usando la raccolta di cookie, il cookie è immediatamente disponibile nel <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=fullName>raccolta, anche se la risposta non è stata inviata al client.</xref:System.Web.HttpRequest.Cookies%2A?displayProperty=fullName>"
  example:
  - "The following example creates a new cookie named `LastVisit`, sets the value of the cookie to the current date and time, and adds the cookie to the current cookie collection. All cookies in the cookie collection are sent to the client in the `Set-Cookie` header with the HTTP output stream.  \n  \n [!code-cs[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/csharp/p-system.web.httprespons_12_1.cs)]\n [!code-vb[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_12_1.vb)]"
  syntax:
    content: public System.Web.HttpCookieCollection Cookies { get; }
    return:
      type: System.Web.HttpCookieCollection
      description: "La raccolta di cookie di risposta."
  overload: System.Web.HttpResponse.Cookies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.DisableKernelCache
  id: DisableKernelCache
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: DisableKernelCache()
  nameWithType: HttpResponse.DisableKernelCache()
  fullName: System.Web.HttpResponse.DisableKernelCache()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Disabilita la memorizzazione nella cache del kernel per la risposta corrente."
  remarks: "Se la cache del kernel non è supportata, questo metodo non ha alcun effetto."
  syntax:
    content: public void DisableKernelCache ();
    parameters: []
  overload: System.Web.HttpResponse.DisableKernelCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.DisableUserCache
  id: DisableUserCache
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: DisableUserCache()
  nameWithType: HttpResponse.DisableUserCache()
  fullName: System.Web.HttpResponse.DisableUserCache()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Disabilita la memorizzazione nella cache in modalità utente IIS per la risposta."
  remarks: "Se la memorizzazione nella cache in modalità utente IIS non è supportato, questo metodo restituisce senza eseguire alcuna azione."
  syntax:
    content: public void DisableUserCache ();
    parameters: []
  overload: System.Web.HttpResponse.DisableUserCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.End
  id: End
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: End()
  nameWithType: HttpResponse.End()
  fullName: System.Web.HttpResponse.End()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Invia al client tutto l&quot;output attualmente memorizzato nel buffer, interrompe l&quot;esecuzione della pagina e genera il <xref href=&quot;System.Web.HttpApplication.EndRequest&quot;> </xref> evento."
  remarks: "Questo metodo è fornito solo per compatibilità con ASP, vale a dire per la compatibilità con tecnologia di programmazione Web basato su COM che ha preceduto ASP.NET. Se si desidera passare al <xref:System.Web.HttpApplication.EndRequest>eventi e inviare una risposta al client, è in genere preferibile chiamare <xref:System.Web.HttpApplication.CompleteRequest%2A>invece.</xref:System.Web.HttpApplication.CompleteRequest%2A> </xref:System.Web.HttpApplication.EndRequest>       Per simulare il comportamento del `End` metodo ASP, questo metodo tenta di generare un <xref:System.Threading.ThreadAbortException>eccezione.</xref:System.Threading.ThreadAbortException> Se questo tentativo ha esito positivo, il thread chiamante verrà interrotta, ovvero effetti negativo sulle prestazioni del sito. In tal caso, non viene eseguito alcun codice dopo la chiamata al metodo finale.       Se il metodo End non è in grado di generare un <xref:System.Threading.ThreadAbortException>, invece Svuota i byte di risposta al client.</xref:System.Threading.ThreadAbortException> Ciò avviene in modo sincrono, che può anche essere effetti negativi sulle prestazioni del sito.       In entrambi i casi (o meno un <xref:System.Threading.ThreadAbortException>è stata generata eccezione), la pipeline di risposta si passa il <xref:System.Web.HttpApplication.EndRequest>evento.</xref:System.Web.HttpApplication.EndRequest> </xref:System.Threading.ThreadAbortException>       Il <xref:System.Web.HttpApplication.CompleteRequest%2A>metodo non genera un&quot;eccezione e il codice dopo la chiamata al <xref:System.Web.HttpApplication.CompleteRequest%2A>il metodo può essere eseguito.</xref:System.Web.HttpApplication.CompleteRequest%2A> </xref:System.Web.HttpApplication.CompleteRequest%2A> Se si desidera evitare l&quot;esecuzione di codice successivo e la riduzione delle prestazioni di fine è accettabile, è possibile chiamare End anziché <xref:System.Web.HttpApplication.CompleteRequest%2A>.</xref:System.Web.HttpApplication.CompleteRequest%2A>"
  syntax:
    content: public void End ();
    parameters: []
  overload: System.Web.HttpResponse.End*
  exceptions:
  - type: System.Threading.ThreadAbortException
    commentId: T:System.Threading.ThreadAbortException
    description: "La chiamata a fine ha terminato la richiesta corrente."
  platform:
  - net462
- uid: System.Web.HttpResponse.EndFlush(System.IAsyncResult)
  id: EndFlush(System.IAsyncResult)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: EndFlush(IAsyncResult)
  nameWithType: HttpResponse.EndFlush(IAsyncResult)
  fullName: System.Web.HttpResponse.EndFlush(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Completa un&quot;operazione di scaricamento asincrona."
  syntax:
    content: public void EndFlush (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Oggetto risultato asincrono."
  overload: System.Web.HttpResponse.EndFlush*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Operazione di scaricamento asincrono non è supportata e <code> asyncResult </code> parametro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Operazione di scaricamento asincrono non è supportata e <code> asyncResult </code> parametro non può essere convertito un `FlushAsyncResult` oggetto."
  platform:
  - net462
- uid: System.Web.HttpResponse.Expires
  id: Expires
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Expires
  nameWithType: HttpResponse.Expires
  fullName: System.Web.HttpResponse.Expires
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta il numero di minuti prima che una pagina memorizzata nella cache un browser scade. Se l&quot;utente torna alla stessa pagina prima della scadenza, viene visualizzata la versione memorizzata nella cache. Scadenza viene fornito per compatibilità con le versioni precedenti di ASP."
  remarks: "Il `Expires`, <xref:System.Web.HttpResponse.ExpiresAbsolute%2A>e <xref:System.Web.HttpResponse.CacheControl%2A>proprietà sono state deprecate a favore i metodi del <xref:System.Web.HttpCachePolicy>classe disponibile tramite il <xref:System.Web.HttpResponse.Cache%2A>intrinseco per controllare Internet Information Services (IIS) di output della cache e cache dei client.</xref:System.Web.HttpResponse.Cache%2A> </xref:System.Web.HttpCachePolicy> </xref:System.Web.HttpResponse.CacheControl%2A> </xref:System.Web.HttpResponse.ExpiresAbsolute%2A>"
  syntax:
    content: public int Expires { get; set; }
    return:
      type: System.Int32
      description: "Il numero di minuti prima della scadenza della pagina."
  overload: System.Web.HttpResponse.Expires*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.ExpiresAbsolute
  id: ExpiresAbsolute
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: ExpiresAbsolute
  nameWithType: HttpResponse.ExpiresAbsolute
  fullName: System.Web.HttpResponse.ExpiresAbsolute
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta la data e ora assolute in cui si desidera rimuovere le informazioni memorizzate dalla cache. ExpiresAbsolute viene fornito per compatibilità con le versioni precedenti di ASP."
  remarks: "Il `ExpiresAbsolute`, <xref:System.Web.HttpResponse.Expires%2A>, e <xref:System.Web.HttpResponse.CacheControl%2A>proprietà sono state deprecate a favore i metodi del <xref:System.Web.HttpCachePolicy>classe disponibile tramite il <xref:System.Web.HttpResponse.Cache%2A>intrinseco per controllare Internet Information Services (IIS) di output della cache e cache dei client.</xref:System.Web.HttpResponse.Cache%2A> </xref:System.Web.HttpCachePolicy> </xref:System.Web.HttpResponse.CacheControl%2A> </xref:System.Web.HttpResponse.Expires%2A>"
  syntax:
    content: public DateTime ExpiresAbsolute { get; set; }
    return:
      type: System.DateTime
      description: "Data e ora di scadenza della pagina."
  overload: System.Web.HttpResponse.ExpiresAbsolute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Filter
  id: Filter
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Filter
  nameWithType: HttpResponse.Filter
  fullName: System.Web.HttpResponse.Filter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta l&quot;oggetto che rappresenta un filtro di wrapping usato per modificare il corpo dell&quot;entità HTTP prima della trasmissione."
  remarks: "Quando si crea un `Stream` dell&quot;oggetto e impostare la proprietà di filtro il `Stream` oggetto, HTTP tutti output inviato da <xref:System.Web.HttpResponse.Write%2A>passa attraverso il filtro.</xref:System.Web.HttpResponse.Write%2A>"
  example:
  - "The following example is an ASP.NET page that sets the Filter property to a new instance of the `UpperCaseFilter` class, a custom <xref:System.IO.Stream> class that converts all text that passes through it to uppercase. The information about the request is saved to a text file, and then the Filter property is set. After the response filter is in place, the code calls the <xref:System.Web.HttpRequest.MapPath%2A> method to get the absolute path to a text file named `TestFile.txt` that serves as the source for the content of the response. The code then creates a new <xref:System.IO.StreamReader> object to read the text file from beginning to end, and then calls the <xref:System.Web.HttpResponse.Write%2A> method to display the content of the file on the page.  \n  \n [!code-vb[System.Web.HttpRequest_Samples2#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_8_1.aspx)]\n [!code-cs[System.Web.HttpRequest_Samples2#1](~/add/codesnippet/csharp/p-system.web.httprespons_8_1.aspx)]"
  syntax:
    content: public System.IO.Stream Filter { get; set; }
    return:
      type: System.IO.Stream
      description: "Il <xref:System.IO.Stream>oggetto che funge da filtro di output.</xref:System.IO.Stream>"
  overload: System.Web.HttpResponse.Filter*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Il filtro non è consentito con l&quot;entità."
  platform:
  - net462
- uid: System.Web.HttpResponse.Flush
  id: Flush
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Flush()
  nameWithType: HttpResponse.Flush()
  fullName: System.Web.HttpResponse.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Invia al client tutto l&quot;output attualmente memorizzato nel buffer."
  remarks: "Forza tutti attualmente memorizzato nel buffer di output da inviare al client. Il metodo può essere chiamato più volte durante l&quot;elaborazione della richiesta."
  example:
  - "The following example calls the <xref:System.Drawing.Graphics.Save%2A> method to save a <xref:System.Drawing.Bitmap> object to the <xref:System.Web.HttpResponse.OutputStream%2A> property and converts the image to the JPEG format. The code then calls the `Dispose` method on the <xref:System.Drawing.Bitmap> object and a <xref:System.Drawing.Graphics> object, releasing the resources that they were using. It then calls the Flush method to send the content of the response to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/csharp/m-system.web.httprespons_24_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_24_1.aspx)]"
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.Web.HttpResponse.Flush*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "La cache viene scaricata dopo aver inviata la risposta."
  platform:
  - net462
- uid: System.Web.HttpResponse.FlushAsync
  id: FlushAsync
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: FlushAsync()
  nameWithType: HttpResponse.FlushAsync()
  fullName: System.Web.HttpResponse.FlushAsync()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Invia in modo asincrono al client tutto l&quot;output attualmente memorizzato nel buffer."
  syntax:
    content: public System.Threading.Tasks.Task FlushAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: "Oggetto <xref:System.Threading.Tasks.Task>che rappresenta l&quot;operazione asincrona.</xref:System.Threading.Tasks.Task>"
  overload: System.Web.HttpResponse.FlushAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.HeaderEncoding
  id: HeaderEncoding
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: HeaderEncoding
  nameWithType: HttpResponse.HeaderEncoding
  fullName: System.Web.HttpResponse.HeaderEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta un <xref:System.Text.Encoding>flusso di output di oggetto che rappresenta la codifica per l&quot;intestazione corrente.</xref:System.Text.Encoding>"
  remarks: "La proprietà HeaderEncoding offre la possibilità di disabilitare o modificare il <xref:System.Text.Encoding>oggetto su un&quot;intestazione di risposta utilizzando il <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF7Encoding>, o <xref:System.Text.UTF8Encoding>oggetto.</xref:System.Text.UTF8Encoding> </xref:System.Text.UTF7Encoding> </xref:System.Text.UnicodeEncoding> </xref:System.Text.ASCIIEncoding> </xref:System.Text.Encoding> Il valore di codifica predefinito è la <xref:System.Text.UTF8Encoding>classe.</xref:System.Text.UTF8Encoding>       Modificando il tipo della proprietà HeaderEncoding, è potenzialmente possibile aumentare il rischio di determinati attacchi dannosi o causare dati sensibili da inviare tramite l&quot;intestazione della risposta. Attacchi injection di intestazione possono essere evitati in parte, lasciando la proprietà HeaderEncoding di una risposta per l&quot;impostazione predefinita. Un attacco contro un&quot;applicazione vulnerabile può restituire dati consegnati come parte di un&quot;intestazione di risposta. Se il HeaderEncoding è disabilitata a causa di un requisito per le righe di continuazione in un&quot;intestazione o un&quot;intestazione viene costruita in base al risultato di dati non attendibili, i dati dell&quot;intestazione devono essere convalidati prima dell&quot;invio nel flusso di risposta."
  syntax:
    content: public System.Text.Encoding HeaderEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "Un <xref:System.Text.Encoding>che contiene informazioni sul set di caratteri per l&quot;intestazione corrente.</xref:System.Text.Encoding>"
  overload: System.Web.HttpResponse.HeaderEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il valore di codifica è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The encoding value is <xref:System.Text.Encoding.Unicode*>.  \n  \n \\- or -  \n  \n The headers have already been sent."
  platform:
  - net462
- uid: System.Web.HttpResponse.Headers
  id: Headers
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Headers
  nameWithType: HttpResponse.Headers
  fullName: System.Web.HttpResponse.Headers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene la raccolta di intestazioni di risposta."
  remarks: "La proprietà delle intestazioni è supportata solo con il [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] modalità pipeline integrata e almeno .NET Framework 3.0. Quando si tenta di accedere alla proprietà di intestazioni e una di queste due condizioni non verrà soddisfatte, un <xref:System.PlatformNotSupportedException>viene generata un&quot;eccezione.</xref:System.PlatformNotSupportedException>"
  syntax:
    content: public System.Collections.Specialized.NameValueCollection Headers { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "Oggetto <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> di intestazioni di risposta."
  overload: System.Web.HttpResponse.Headers*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "L&quot;operazione richiede la modalità pipeline integrata in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] e almeno .NET Framework versione 3.0."
  platform:
  - net462
- uid: System.Web.HttpResponse.HeadersWritten
  id: HeadersWritten
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: HeadersWritten
  nameWithType: HttpResponse.HeadersWritten
  fullName: System.Web.HttpResponse.HeadersWritten
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "[Supportato in .NET Framework 4.5.2 e versioni successive]       Ottiene un valore che indica se le intestazioni di risposta sono state scritte."
  syntax:
    content: public bool HeadersWritten { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se le intestazioni di risposta sono state scritte; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.HeadersWritten*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.IsClientConnected
  id: IsClientConnected
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: IsClientConnected
  nameWithType: HttpResponse.IsClientConnected
  fullName: System.Web.HttpResponse.IsClientConnected
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un valore che indica se il client è ancora connesso al server."
  remarks: "La proprietà restituisce IsClientConnected `false` quando le condizioni seguenti sono vere:-è stata terminata la connessione al client. Ciò può verificarsi se il <xref:System.Web.HttpResponse.Close%2A>chiamata del metodo, o se il client ha arrestato l&quot;esecuzione della pagina Web o visualizzare in un&quot;altra pagina.</xref:System.Web.HttpResponse.Close%2A>      -La <xref:System.Web.HttpWorkerRequest>oggetto che gestisce la richiesta è `null` o <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName>restituisce `false`.</xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName> </xref:System.Web.HttpWorkerRequest> Se un oggetto personalizzato <xref:System.Web.HttpWorkerRequest>oggetto gestisce la richiesta, il <xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName>metodo potrebbe essere impostato in base a criteri personalizzati.</xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName> </xref:System.Web.HttpWorkerRequest> Ad esempio, la richiesta di lavoro personalizzato potrebbe forzare un timeout dopo un periodo di tempo."
  example:
  - "The following example uses the IsClientConnected property to check whether the client that is requesting the page remains connected to the server. If IsClientConnected is true, the code calls the <xref:System.Web.HttpResponse.Redirect%2A> method, and the client will view another page. If IsClientConnected is false, then the code calls the <xref:System.Web.HttpResponse.End%2A> method and all page processing is terminated.  \n  \n [!code-cs[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/csharp/p-system.web.httprespons_1_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_1_1.aspx)]"
  syntax:
    content: public bool IsClientConnected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il client è attualmente connesso; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.IsClientConnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.IsRequestBeingRedirected
  id: IsRequestBeingRedirected
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: IsRequestBeingRedirected
  nameWithType: HttpResponse.IsRequestBeingRedirected
  fullName: System.Web.HttpResponse.IsRequestBeingRedirected
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un valore booleano che indica se il client è trasferito in una nuova posizione."
  remarks: "Utilizzare la proprietà IsRequestBeingRedirected con il <xref:System.Web.HttpResponse.RedirectLocation%2A>proprietà per verificare e determinare se l&quot;URI assoluto trasmesso al client in HTTP `Location` intestazione è diversa dall&quot;URI corrente e il nuovo URI che viene trasferito a saranno.</xref:System.Web.HttpResponse.RedirectLocation%2A>"
  syntax:
    content: public bool IsRequestBeingRedirected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore dell&quot;intestazione di risposta della posizione è diverso dalla posizione corrente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.IsRequestBeingRedirected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Output
  id: Output
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Output
  nameWithType: HttpResponse.Output
  fullName: System.Web.HttpResponse.Output
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Consente l&quot;output di testo nel flusso di risposta HTTP in uscita."
  remarks: ''
  example:
  - "The following example is an ASP.NET page that contains a <xref:System.Web.UI.WebControls.TextBox> control that has its <xref:System.Web.UI.WebControls.TextBox.TextMode%2A> property set to <xref:System.Web.UI.WebControls.TextBoxMode>. The page's code takes the text that a user enters in the <xref:System.Web.UI.WebControls.TextBox.TextMode%2A>, uses the <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method to HTML encode it, and the Output property to display the encoded string to the page.  \n  \n [!code-vb[System.Web.HttpResponse.Output_Sample#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_5_1.aspx)]\n [!code-cs[System.Web.HttpResponse.Output_Sample#1](~/add/codesnippet/csharp/p-system.web.httprespons_5_1.aspx)]"
  syntax:
    content: public System.IO.TextWriter Output { get; set; }
    return:
      type: System.IO.TextWriter
      description: "Oggetto <xref:System.IO.TextWriter>oggetto che abilita l&quot;output personalizzato verso il client.</xref:System.IO.TextWriter>"
  overload: System.Web.HttpResponse.Output*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.OutputStream
  id: OutputStream
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: OutputStream
  nameWithType: HttpResponse.OutputStream
  fullName: System.Web.HttpResponse.OutputStream
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Abilita l&quot;output binario al corpo del contenuto HTTP in uscita."
  remarks: "Starting with the .NET Framework version 2.0, when you use the [Stream.Write(Byte\\[\\], Int32, Int32)](assetId:///M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)?qualifyHint=True&autoUpgrade=False) method of the IO stream returned by the OutputStream property, the following exceptions might be thrown:  \n  \n-   <xref:System.ArgumentOutOfRangeException>, if the `offset` or `count` parameter is negative or if the `buffer` parameter's length minus the `offset` parameter is less than or equal to zero.  \n  \n-   <xref:System.ArgumentNullException>, if the `buffer` parameter is `null`."
  example:
  - "The following example calls the <xref:System.Drawing.Image.Save%2A> method to save a <xref:System.Drawing.Bitmap> object to the OutputStream property, and converts the image to the JPEG format. The code then calls the Dispose method on the <xref:System.Drawing.Bitmap> object and a <xref:System.Drawing.Graphics> object, releasing the resources that they were using. Finally, the code calls the <xref:System.Web.HttpResponse.Flush%2A> method to send the content of the response to the requesting client.  \n  \n For a complete example, see the <xref:System.Web.HttpResponse> class.  \n  \n [!code-cs[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/csharp/p-system.web.httprespons_13_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Samples1#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_13_1.aspx)]"
  syntax:
    content: public System.IO.Stream OutputStream { get; }
    return:
      type: System.IO.Stream
      description: "Oggetto i/o <xref:System.IO.Stream>che rappresenta il contenuto non elaborato del corpo del contenuto HTTP in uscita.</xref:System.IO.Stream>"
  overload: System.Web.HttpResponse.OutputStream*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>OutputStream</code>non è disponibile."
  platform:
  - net462
- uid: System.Web.HttpResponse.Pics(System.String)
  id: Pics(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Pics(String)
  nameWithType: HttpResponse.Pics(String)
  fullName: System.Web.HttpResponse.Pics(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiunge un HTTP <xref uid=&quot;langword_csharp_PICS-Label&quot; name=&quot;PICS-Label&quot; href=&quot;&quot;> </xref> intestazione flusso di output."
  remarks: "Piattaforma per Internet Content Selection (PICS) è uno standard del World Wide Web Consortium (W3C) per le etichette del contenuto. PICS è essenzialmente un linguaggio per la creazione di un sistema di classificazione.       Qualsiasi valore può essere un&quot;etichetta PICS; ASP.NET non convalida l&quot;etichetta. La lunghezza massima della stringa è di 255 caratteri. Per ulteriori informazioni sulla sintassi e standard PICS, vedere il [World Wide Web Consortium](http://go.microsoft.com/fwlink/?LinkID=37125) sito Web."
  example:
  - "The following example is an ASP.NET page that displays an image. The page code calls the Pics method to set the HTTP `PICS-Label` header for the response. The string that is passed as the parameter to the Pics method represents a rating label generated from the Internet Content Rating Association (ICRA) Web site.  \n  \n [!code-cs[System.Web.HttpResponse_Sample4#2](~/add/codesnippet/csharp/m-system.web.httprespons_8_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample4#2](~/add/codesnippet/visualbasic/m-system.web.httprespons_8_1.aspx)]"
  syntax:
    content: public void Pics (string value);
    parameters:
    - id: value
      type: System.String
      description: "Stringa da aggiungere per il <xref uid=&quot;langword_csharp_PICS-Label&quot; name=&quot;PICS-Label&quot; href=&quot;&quot;> </xref> intestazione."
  overload: System.Web.HttpResponse.Pics*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.PushPromise(System.String)
  id: PushPromise(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: PushPromise(String)
  nameWithType: HttpResponse.PushPromise(String)
  fullName: System.Web.HttpResponse.PushPromise(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: 'Questa API è per supportare le applicazioni che inviano promesse push ai client HTTP 2.0. È possibile trovare altre informazioni relative la push del server Http2 in [HTTP/2 specifica sezione 8.2: Push Server](http://http2.github.io/http2-spec/#PushResources).'
  remarks: "PushPromise è non deterministico e applicazioni non devono contenere la logica che dipende da esso. Il suo unico scopo è il vantaggio di prestazioni in alcuni casi. Esistono numerose condizioni (protocollo e implementazione) che possono causare per ignorare le richieste di push completamente. La previsione è basata sul fire and forget."
  syntax:
    content: public void PushPromise (string path);
    parameters:
    - id: path
      type: System.String
      description: "L&quot;URL della richiesta push. Deve essere il percorso virtuale della risorsa relativa di cui il server eseguirà il push al client."
  overload: System.Web.HttpResponse.PushPromise*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)
  id: PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: PushPromise(String,String,NameValueCollection)
  nameWithType: HttpResponse.PushPromise(String,String,NameValueCollection)
  fullName: System.Web.HttpResponse.PushPromise(String,String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: 'Questa API è per supportare le applicazioni che inviano promesse push ai client HTTP 2.0. È possibile trovare altre informazioni relative la push del server Http2 in [HTTP/2 specifica sezione 8.2: Push Server](http://http2.github.io/http2-spec/#PushResources).'
  remarks: "PushPromise è non deterministico e applicazioni non devono contenere la logica che dipende da esso. Il suo unico scopo è il vantaggio di prestazioni in alcuni casi. Esistono numerose condizioni (protocollo e implementazione) che possono causare per ignorare le richieste di push completamente. La previsione è basata sul fire and forget."
  syntax:
    content: public void PushPromise (string path, string method, System.Collections.Specialized.NameValueCollection headers);
    parameters:
    - id: path
      type: System.String
      description: "L&quot;URL della richiesta push. Deve essere il percorso virtuale della risorsa relativa di cui il server eseguirà il push al client."
    - id: method
      type: System.String
      description: "Metodo di richiesta HTTP che verrà usato dalla richiesta di push."
    - id: headers
      type: System.Collections.Specialized.NameValueCollection
      description: "Intestazione della richiesta HTTP che verrà usato dalla richiesta di push."
  overload: System.Web.HttpResponse.PushPromise*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Redirect(System.String)
  id: Redirect(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Redirect(String)
  nameWithType: HttpResponse.Redirect(String)
  fullName: System.Web.HttpResponse.Redirect(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Reindirizza una richiesta a un nuovo URL e specifica il nuovo URL."
  remarks: "La chiamata di reindirizzamento è equivalente alla chiamata al metodo <xref:System.Web.HttpResponse.Redirect%2A>con il secondo parametro impostato su `true`.</xref:System.Web.HttpResponse.Redirect%2A>       Reindirizzare le chiamate <xref:System.Web.HttpResponse.End%2A>che genera un <xref:System.Threading.ThreadAbortException>eccezione dopo il completamento.</xref:System.Threading.ThreadAbortException> </xref:System.Web.HttpResponse.End%2A> Questa eccezione ha effetti negativi sulle prestazioni dell&quot;applicazione Web. È pertanto consigliabile anziché questo overload di utilizzare il <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=fullName>overload e passare `false` per il `endResponse` parametro e quindi chiamare il <xref:System.Web.HttpApplication.CompleteRequest%2A>metodo.</xref:System.Web.HttpApplication.CompleteRequest%2A> </xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=fullName> Per ulteriori informazioni, vedere il <xref:System.Web.HttpResponse.End%2A>metodo.</xref:System.Web.HttpResponse.End%2A>      > [!NOTE] > Per pagine mobile, se l&quot;applicazione si basa su sessioni senza cookie o potrebbe ricevere richieste da dispositivi mobili che richiedono sessioni senza cookie, usando una tilde (~) in un percorso può comportare la creazione di una nuova sessione e la possibile perdita di dati della sessione. Per impostare una proprietà in un controllo per dispositivi mobili con un percorso, ad esempio &quot;~ / percorso&quot;, risolvere il percorso utilizzando <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>&quot;~ / percorso&quot; prima di assegnarlo alla proprietà.</xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>       ASP.NET esegue il reindirizzamento restituendo un codice di stato HTTP 302. È un modo alternativo per trasferire il controllo a un&quot;altra pagina di <xref:System.Web.HttpServerUtility.Transfer%2A>metodo.</xref:System.Web.HttpServerUtility.Transfer%2A> Il <xref:System.Web.HttpServerUtility.Transfer%2A>metodo è in genere più efficiente perché non provoca un round trip al client.</xref:System.Web.HttpServerUtility.Transfer%2A> Per ulteriori informazioni, vedere [come: reindirizzare gli utenti a un&quot;altra pagina](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example forces an unconditional redirection to another Web site.  \n  \n [!code-cs[Classic HttpResponse.Redirect Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_9_1.cs)]\n [!code-vb[Classic HttpResponse.Redirect Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_9_1.vb)]"
  syntax:
    content: public void Redirect (string url);
    parameters:
    - id: url
      type: System.String
      description: "Il percorso di destinazione."
  overload: System.Web.HttpResponse.Redirect*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Viene tentato un reindirizzamento dopo l&quot;invio delle intestazioni HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.Redirect(System.String,System.Boolean)
  id: Redirect(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Redirect(String,Boolean)
  nameWithType: HttpResponse.Redirect(String,Boolean)
  fullName: System.Web.HttpResponse.Redirect(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Reindirizza un client a un nuovo URL. Specifica il nuovo URL e indica se l&quot;esecuzione della pagina corrente deve terminare."
  remarks: "Per il percorso di destinazione è possibile specificare un URL assoluto (ad esempio http://www.contoso.com/default.aspx) o un URL relativo (ad esempio,. aspx), ma alcuni browser potrebbero rifiutare un URL relativo.       Quando si utilizza questo metodo in un gestore di pagina per terminare una richiesta per una pagina e avviare una nuova richiesta per un&quot;altra pagina, impostare `endResponse` a `false` e quindi chiamare il <xref:System.Web.HttpApplication.CompleteRequest%2A>metodo.</xref:System.Web.HttpApplication.CompleteRequest%2A> Se si specifica `true` per il `endResponse` parametro, questo metodo chiama il <xref:System.Web.HttpResponse.End%2A>metodo per la richiesta originale, che genera un <xref:System.Threading.ThreadAbortException>eccezione quando viene completato.</xref:System.Threading.ThreadAbortException> </xref:System.Web.HttpResponse.End%2A> Questa eccezione ha effetti negativi sulle prestazioni dell&quot;applicazione Web, motivo per cui il passaggio di `false` per il `endResponse` consiglia di parametro. Per ulteriori informazioni, vedere il <xref:System.Web.HttpResponse.End%2A>metodo.</xref:System.Web.HttpResponse.End%2A>      > [!NOTE] > Pagine per dispositivi mobili, se l&quot;applicazione si basa su sessioni senza cookie o potrebbe ricevere richieste da dispositivi mobili che richiedono sessioni senza cookie, usando una tilde (~) in un percorso può creare una nuova sessione e perdere i dati della sessione. Per impostare una proprietà in un controllo per dispositivi mobili con un percorso, ad esempio &quot;~ / percorso&quot;, risolvere il percorso utilizzando <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>&quot;~ / percorso&quot; prima di assegnarlo alla proprietà.</xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>       ASP.NET esegue il reindirizzamento restituendo un codice di stato HTTP 302. È un modo alternativo per trasferire il controllo a un&quot;altra pagina di <xref:System.Web.HttpServerUtility.Transfer%2A>metodo.</xref:System.Web.HttpServerUtility.Transfer%2A> Il <xref:System.Web.HttpServerUtility.Transfer%2A>metodo è in genere più efficiente perché non provoca un round trip al client.</xref:System.Web.HttpServerUtility.Transfer%2A> Per ulteriori informazioni, vedere [come: reindirizzare gli utenti a un&quot;altra pagina](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses the <xref:System.Web.HttpResponse.IsClientConnected%2A> property to check whether the client that is requesting the page remains connected to the server. If <xref:System.Web.HttpResponse.IsClientConnected%2A> is true, the code calls the Redirect method, and the client will view another page. If <xref:System.Web.HttpResponse.IsClientConnected%2A> is false, then the code calls the <xref:System.Web.HttpResponse.End%2A> method and all page processing is terminated.  \n  \n [!code-cs[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/csharp/m-system.web.httprespons_16_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample4#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_16_1.aspx)]"
  syntax:
    content: public void Redirect (string url, bool endResponse);
    parameters:
    - id: url
      type: System.String
      description: "Il percorso di destinazione."
    - id: endResponse
      type: System.Boolean
      description: "Indica se l&quot;esecuzione della pagina corrente deve terminare."
  overload: System.Web.HttpResponse.Redirect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>url</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>url</code>contiene un carattere di nuova riga."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Viene tentato un reindirizzamento dopo l&quot;invio delle intestazioni HTTP."
  - type: System.ApplicationException
    commentId: T:System.ApplicationException
    description: "La richiesta della pagina è il risultato di un callback."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectLocation
  id: RedirectLocation
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectLocation
  nameWithType: HttpResponse.RedirectLocation
  fullName: System.Web.HttpResponse.RedirectLocation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta il valore di HTTP <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> intestazione."
  remarks: ''
  example:
  - "The following example shows how to use this property to specify the redirect URL when you code a permanent redirect by using the HTTP 301 response code.  \n  \n```c#  \nResponse.StatusCode = 301;  \nResponse.Status = \"301 Moved Permanently\";  \nResponse.RedirectLocation = \"http://www.newurl.com \";  \nResponse.End();  \n```"
  syntax:
    content: public string RedirectLocation { get; set; }
    return:
      type: System.String
      description: "L&quot;URI assoluto trasmesso al client in HTTP <xref uid=&quot;langword_csharp_Location&quot; name=&quot;Location&quot; href=&quot;&quot;> </xref> intestazione."
  overload: System.Web.HttpResponse.RedirectLocation*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Le intestazioni HTTP sono già stati scritti."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectPermanent(System.String)
  id: RedirectPermanent(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectPermanent(String)
  nameWithType: HttpResponse.RedirectPermanent(String)
  fullName: System.Web.HttpResponse.RedirectPermanent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Esegue un reindirizzamento permanente dall&quot;URL richiesto all&quot;URL specificato."
  remarks: "L&quot;overload del metodo RedirectPermanent fornisce un codice di stato HTTP 301 nella risposta e include l&quot;URL a cui reindirizzare la richiesta. Un codice di stato HTTP 301 è un codice standard in una risposta HTTP. Indica che esiste un reindirizzamento permanente e viene indicato il percorso di reindirizzamento.       Chiamare l&quot;overload del metodo RedirectPermanent termina la risposta."
  syntax:
    content: public void RedirectPermanent (string url);
    parameters:
    - id: url
      type: System.String
      description: "Il percorso a cui reindirizzare la richiesta."
  overload: System.Web.HttpResponse.RedirectPermanent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>url</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>url</code>include un carattere di nuova riga (` `)."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)
  id: RedirectPermanent(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectPermanent(String,Boolean)
  nameWithType: HttpResponse.RedirectPermanent(String,Boolean)
  fullName: System.Web.HttpResponse.RedirectPermanent(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Esegue un reindirizzamento permanente dall&quot;URL richiesto all&quot;URL specificato e fornisce l&quot;opzione per completare la risposta."
  remarks: "L&quot;overload del metodo RedirectPermanent fornisce un codice di stato HTTP 301 nella risposta e include l&quot;URL a cui reindirizzare la richiesta. Overload di questo metodo fornisce anche l&quot;opzione per specificare se terminare o per completare la risposta dopo il reindirizzamento è stato eseguito. Un codice di stato HTTP 301 è un codice standard in una risposta HTTP. Indica che esiste un reindirizzamento permanente e viene indicato il percorso di reindirizzamento."
  syntax:
    content: public void RedirectPermanent (string url, bool endResponse);
    parameters:
    - id: url
      type: System.String
      description: "Il percorso a cui reindirizzare la richiesta."
    - id: endResponse
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per terminare la risposta; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.RedirectPermanent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>url</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>url</code>include un carattere di nuova riga (` `)."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.Object)
  id: RedirectToRoute(System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(Object)
  nameWithType: HttpResponse.RedirectToRoute(Object)
  fullName: System.Web.HttpResponse.RedirectToRoute(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Reindirizza una richiesta a un nuovo URL tramite valori di parametro di route."
  remarks: "Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>metodo con il secondo parametro impostato su `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Questo metodo converte l&quot;oggetto è passato in `routeValues` per un <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName>oggetto utilizzando il <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>costruttore.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> Il <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>viene quindi chiamato il metodo per determinare l&quot;URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET esegue il reindirizzamento restituendo un codice di stato HTTP 302."
  example:
  - "The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoute(  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoute(  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public void RedirectToRoute (object routeValues);
    parameters:
    - id: routeValues
      type: System.Object
      description: "I valori dei parametri di route."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nessuna route corrisponde ai parametri di route specificati."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "È stato tentato un reindirizzamento dopo le intestazioni HTTP inviate."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.String)
  id: RedirectToRoute(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(String)
  nameWithType: HttpResponse.RedirectToRoute(String)
  fullName: System.Web.HttpResponse.RedirectToRoute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Reindirizza una richiesta a un nuovo URL tramite un nome di route."
  remarks: "Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>metodo con il secondo parametro impostato su `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Questo metodo converte il nome della route che viene passato in `routeName` a un URL tramite il <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>metodo.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET esegue il reindirizzamento restituendo un codice di stato HTTP 302."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Products`.  \n  \n```vb#  \nResponse.RedirectToRoute(\"Products\")  \n```  \n  \n```c#  \nResponse.RedirectToRoute(\"Products\");  \n```"
  syntax:
    content: public void RedirectToRoute (string routeName);
    parameters:
    - id: routeName
      type: System.String
      description: "Il nome della route."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nessuna route corrisponde ai parametri di route specificati."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "È stato tentato un reindirizzamento dopo le intestazioni HTTP inviate."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
  id: RedirectToRoute(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoute(RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoute(RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Reindirizza una richiesta a un nuovo URL tramite valori di parametro di route."
  remarks: "Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>metodo con il secondo parametro impostato su `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Questo metodo chiama il <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>metodo per determinare l&quot;URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET esegue il reindirizzamento restituendo un codice di stato HTTP 302."
  example:
  - "The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoute(  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoute(  \n  (new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public void RedirectToRoute (System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "I valori dei parametri di route."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nessuna route corrisponde ai parametri di route specificati."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "È stato tentato un reindirizzamento dopo le intestazioni HTTP inviate."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)
  id: RedirectToRoute(System.String,System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(String,Object)
  nameWithType: HttpResponse.RedirectToRoute(String,Object)
  fullName: System.Web.HttpResponse.RedirectToRoute(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Reindirizza una richiesta a un nuovo URL tramite valori di parametri di route e un nome di route."
  remarks: "Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>metodo con il secondo parametro impostato su `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Questo metodo converte l&quot;oggetto è passato in `routeValues` per un <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName>oggetto utilizzando il <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>costruttore.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> Il <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>viene quindi chiamato il metodo per determinare l&quot;URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET esegue il reindirizzamento restituendo un codice di stato HTTP 302."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoute(\"Product\",  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoute(\"Product\",  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public void RedirectToRoute (string routeName, object routeValues);
    parameters:
    - id: routeName
      type: System.String
      description: "Il nome della route."
    - id: routeValues
      type: System.Object
      description: "I valori dei parametri di route."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nessuna route corrisponde ai parametri di route specificati."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "È stato tentato un reindirizzamento dopo le intestazioni HTTP inviate."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
  id: RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoute(String,RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoute(String,RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoute(String,RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Reindirizza una richiesta a un nuovo URL tramite valori di parametri di route e un nome di route."
  remarks: "Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>metodo con il secondo parametro impostato su `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Il <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>metodo viene chiamato per determinare l&quot;URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET esegue il reindirizzamento restituendo un codice di stato HTTP 302."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoute(\"Product\",  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoute(\"Product\",  \n  (new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public void RedirectToRoute (string routeName, System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: routeName
      type: System.String
      description: "Il nome della route."
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "I valori dei parametri di route."
  overload: System.Web.HttpResponse.RedirectToRoute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nessuna route corrisponde ai parametri di route specificati."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "È stato tentato un reindirizzamento dopo le intestazioni HTTP inviate."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)
  id: RedirectToRoutePermanent(System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(Object)
  nameWithType: HttpResponse.RedirectToRoutePermanent(Object)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Esegue un reindirizzamento permanente da un URL richiesto a un nuovo URL tramite valori di parametro di route."
  remarks: "Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>metodo con il secondo parametro impostato su `false`.</xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>       Questo metodo converte l&quot;oggetto è passato in `routeValues` per un <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName>oggetto utilizzando il <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>costruttore.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> Il <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>viene quindi chiamato il metodo per determinare l&quot;URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET esegue il reindirizzamento restituendo un codice di stato HTTP 301."
  example:
  - "The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (object routeValues);
    parameters:
    - id: routeValues
      type: System.Object
      description: "I valori dei parametri di route."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nessuna route corrisponde ai parametri di route specificati."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "È stato tentato un reindirizzamento dopo le intestazioni HTTP inviate."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String)
  id: RedirectToRoutePermanent(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(String)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Esegue un reindirizzamento permanente da un URL richiesto a un nuovo URL tramite un nome di route."
  remarks: "Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>metodo con il secondo parametro impostato su `false`.</xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29>       Questo metodo converte il nome della route che viene passato in `routeName` a un URL tramite il <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>metodo.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET esegue il reindirizzamento restituendo un codice di stato HTTP 301."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Products`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(\"Products\")  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(\"Products\");  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (string routeName);
    parameters:
    - id: routeName
      type: System.String
      description: "Il nome della route."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nessuna route corrisponde ai parametri di route specificati."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "È stato tentato un reindirizzamento dopo le intestazioni HTTP inviate."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
  id: RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Esegue un reindirizzamento permanente da un URL richiesto a un nuovo URL tramite valori di parametro di route."
  remarks: "Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>metodo con il secondo parametro impostato su `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Questo metodo chiama il <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>metodo per determinare l&quot;URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET esegue il reindirizzamento restituendo un codice di stato HTTP 301."
  example:
  - "The following example shows how to call this method to redirect to a route that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "I valori dei parametri di route."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nessuna route corrisponde ai parametri di route specificati."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "È stato tentato un reindirizzamento dopo le intestazioni HTTP inviate."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)
  id: RedirectToRoutePermanent(System.String,System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(String,Object)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String,Object)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Esegue un reindirizzamento permanente da un URL richiesto a un nuovo URL tramite i valori dei parametri di route e il nome di route corrispondenti al nuovo URL."
  remarks: "Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.HttpResponse.RedirectPermanent%2A>metodo con il secondo parametro impostato su `false`.</xref:System.Web.HttpResponse.RedirectPermanent%2A>       Questo metodo converte l&quot;oggetto è passato in `routeValues` per un <xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName>oggetto utilizzando il <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>costruttore.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName> Il <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>viene quindi chiamato il metodo per determinare l&quot;URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET esegue il reindirizzamento restituendo un codice di stato HTTP 301."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(\"Product\",  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(\"Product\",  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (string routeName, object routeValues);
    parameters:
    - id: routeName
      type: System.String
      description: "Il nome della route."
    - id: routeValues
      type: System.Object
      description: "I valori dei parametri di route."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nessuna route corrisponde ai parametri di route specificati."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "È stato tentato un reindirizzamento dopo le intestazioni HTTP inviate."
  platform:
  - net462
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
  id: RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RedirectToRoutePermanent(String,RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Esegue un reindirizzamento permanente da un URL richiesto a un nuovo URL tramite valori di parametri di route e un nome di route."
  remarks: "Questo metodo è fornito per comodità di codifica. È equivalente alla chiamata di <xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>metodo con il secondo parametro impostato su `false`.</xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29>       Questo metodo chiama il <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>metodo per determinare l&quot;URL.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName>       ASP.NET esegue il reindirizzamento restituendo un codice di stato HTTP 301."
  example:
  - "The following example shows how to call this method to redirect to a route that is named `Product` and that has parameters that are named `productid` and `category`.  \n  \n```vb#  \nResponse.RedirectToRoutePermanent(\"Product\",  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nResponse.RedirectToRoutePermanent(\"Product\",  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public void RedirectToRoutePermanent (string routeName, System.Web.Routing.RouteValueDictionary routeValues);
    parameters:
    - id: routeName
      type: System.String
      description: "Il nome della route."
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "I valori dei parametri di route."
  overload: System.Web.HttpResponse.RedirectToRoutePermanent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nessuna route corrisponde ai parametri di route specificati."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "È stato tentato un reindirizzamento dopo le intestazioni HTTP inviate."
  platform:
  - net462
- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String)
  id: RemoveOutputCacheItem(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RemoveOutputCacheItem(String)
  nameWithType: HttpResponse.RemoveOutputCacheItem(String)
  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Rimuove dalla cache tutti gli elementi memorizzati associati con il provider di cache di output predefinito. Questo metodo è statico."
  remarks: "Chiamare questo metodo per rimuovere gli elementi della cache di output associati con il provider di cache di output predefinito. Chiamare il <xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A>per rimuovere gli elementi della cache di output associati al provider della cache di output personalizzati che vengono specificati nel file di configurazione del sito Web.</xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A>"
  syntax:
    content: public static void RemoveOutputCacheItem (string path);
    parameters:
    - id: path
      type: System.String
      description: "Percorso virtuale assoluto degli elementi che vengono rimossi dalla cache."
  overload: System.Web.HttpResponse.RemoveOutputCacheItem*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>non è un percorso virtuale assoluto."
  platform:
  - net462
- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)
  id: RemoveOutputCacheItem(System.String,System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: RemoveOutputCacheItem(String,String)
  nameWithType: HttpResponse.RemoveOutputCacheItem(String,String)
  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Usa il provider della cache di output specificato per rimuovere tutti gli elementi della cache di output associati al percorso specificato."
  remarks: "Chiamare questo metodo per rimuovere gli elementi della cache di output che sono associati i provider di cache di output personalizzati che vengono specificati nel file di configurazione del sito Web. Per rimuovere gli elementi della cache di output associati con il provider di cache di output predefinito, chiamare il <xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29>overload del metodo.</xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29>"
  syntax:
    content: public static void RemoveOutputCacheItem (string path, string providerName);
    parameters:
    - id: path
      type: System.String
      description: "Percorso virtuale assoluto degli elementi che vengono rimossi dalla cache."
    - id: providerName
      type: System.String
      description: "Il provider utilizzato per rimuovere gli elementi della cache di output associati al percorso specificato."
  overload: System.Web.HttpResponse.RemoveOutputCacheItem*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>è null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>non è un percorso valido."
  platform:
  - net462
- uid: System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)
  id: SetCookie(System.Web.HttpCookie)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SetCookie(HttpCookie)
  nameWithType: HttpResponse.SetCookie(HttpCookie)
  fullName: System.Web.HttpResponse.SetCookie(HttpCookie)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aggiorna un cookie esistente nella raccolta di cookie."
  remarks: ''
  example:
  - "The following example updates the value of an existing cookie.  \n  \n [!code-cs[Classic HttpResponse.SetCookie Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_23_1.cs)]\n [!code-vb[Classic HttpResponse.SetCookie Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_23_1.vb)]"
  syntax:
    content: public void SetCookie (System.Web.HttpCookie cookie);
    parameters:
    - id: cookie
      type: System.Web.HttpCookie
      description: "Il cookie della raccolta da aggiornare."
  overload: System.Web.HttpResponse.SetCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "È stato effettuato un tentativo di impostare il cookie dopo l&quot;invio delle intestazioni HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.Status
  id: Status
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Status
  nameWithType: HttpResponse.Status
  fullName: System.Web.HttpResponse.Status
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Imposta il <xref uid=&quot;langword_csharp_Status&quot; name=&quot;Status&quot; href=&quot;&quot;> </xref> riga restituita al client."
  remarks: "Lo stato è stato deprecato a favore del <xref:System.Web.HttpResponse.StatusDescription%2A>e viene fornito solo per compatibilità con le versioni precedenti di ASP.</xref:System.Web.HttpResponse.StatusDescription%2A> Con ASP.NET, utilizzare <xref:System.Web.HttpResponse.StatusDescription%2A>invece.</xref:System.Web.HttpResponse.StatusDescription%2A>"
  syntax:
    content: public string Status { get; set; }
    return:
      type: System.String
      description: "Se si imposta il codice di stato, una stringa che descrive lo stato dell&quot;output HTTP restituito al client. Il valore predefinito è 200 (OK)."
  overload: System.Web.HttpResponse.Status*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Stato è impostato su un codice di stato non valido."
  platform:
  - net462
- uid: System.Web.HttpResponse.StatusCode
  id: StatusCode
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: StatusCode
  nameWithType: HttpResponse.StatusCode
  fullName: System.Web.HttpResponse.StatusCode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta il codice di stato HTTP dell&quot;output restituito al client."
  remarks: ''
  example:
  - "The following example checks the status code of the output stream. If the status code is not equal to 200, additional code is executed.  \n  \n [!code-vb[System.Web.HttpResponse.StatusCode#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_11_1.aspx)]\n [!code-cs[System.Web.HttpResponse.StatusCode#1](~/add/codesnippet/csharp/p-system.web.httprespons_11_1.aspx)]"
  syntax:
    content: public int StatusCode { get; set; }
    return:
      type: System.Int32
      description: "Intero che rappresenta lo stato dell&quot;output HTTP restituito al client. Il valore predefinito è 200 (OK). Per un elenco dei codici di stato validi, vedere [codici di stato Http](http://go.microsoft.com/fwlink/?LinkId=73157)."
  overload: System.Web.HttpResponse.StatusCode*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Codice di stato viene impostato dopo l&quot;invio delle intestazioni HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.StatusDescription
  id: StatusDescription
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: StatusDescription
  nameWithType: HttpResponse.StatusDescription
  fullName: System.Web.HttpResponse.StatusDescription
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta la stringa di stato HTTP dell&quot;output restituito al client."
  remarks: ''
  example:
  - "The following example checks the status string of the output stream. If the status is not equal to \"OK\", additional code is executed.  \n  \n [!code-vb[System.Web.HttpResponse.StatusDescription#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_10_1.aspx)]\n [!code-cs[System.Web.HttpResponse.StatusDescription#1](~/add/codesnippet/csharp/p-system.web.httprespons_10_1.aspx)]"
  syntax:
    content: public string StatusDescription { get; set; }
    return:
      type: System.String
      description: "Stringa che descrive lo stato dell&quot;output HTTP restituito al client. Il valore predefinito è &quot;OK&quot;. Per un elenco dei codici di stato validi, vedere [codici di stato Http](http://go.microsoft.com/fwlink/?LinkId=73157)."
  overload: System.Web.HttpResponse.StatusDescription*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>StatusDescription</code>viene impostato dopo l&quot;invio delle intestazioni HTTP."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore selezionato ha una lunghezza maggiore di 512."
  platform:
  - net462
- uid: System.Web.HttpResponse.SubStatusCode
  id: SubStatusCode
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SubStatusCode
  nameWithType: HttpResponse.SubStatusCode
  fullName: System.Web.HttpResponse.SubStatusCode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta un valore che qualifica il codice di stato della risposta."
  remarks: "La proprietà SubStatusCode è supportata solo con la modalità pipeline integrata in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] e almeno .NET Framework versione 3.0. Quando si imposta la proprietà SubStatusCode, lo stato viene registrato [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] se è definita la traccia richieste non riuscite. Indipendentemente dal fatto è definita la traccia, il codice mai inviato come parte della risposta finale alla richiesta. Per ulteriori informazioni, vedere [risoluzione dei problemi non è stato possibile Requests utilizzando Failed Request Tracing in IIS 7.0](http://www.iis.net/default.aspx?tabid=2&subtabid=25&i=969&p=1)."
  example:
  - "The following example sets the SubStatusCode property in an event handler for the <xref:System.Web.HttpApplication> instance of the <xref:System.Web.HttpApplication.PostAuthenticateRequest> event. Put the code file in the App_Code folder of your Web application and configure the Web.config file to register the module. For more information, see [Walkthrough: Creating and Registering a Custom HTTP Module](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.HttpResponse.SubStatusCode#1](~/add/codesnippet/csharp/p-system.web.httprespons_9_1.cs)]\n [!code-vb[System.Web.HttpResponse.SubStatusCode#1](~/add/codesnippet/visualbasic/p-system.web.httprespons_9_1.vb)]"
  syntax:
    content: public int SubStatusCode { get; set; }
    return:
      type: System.Int32
      description: "Valore intero che rappresenta il [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] codice di stato secondario."
  overload: System.Web.HttpResponse.SubStatusCode*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "L&quot;operazione richiede la modalità pipeline integrata in [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] e almeno .NET Framework versione 3.0."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Il codice di stato è impostato dopo l&quot;invio di tutte le intestazioni HTTP."
  platform:
  - net462
- uid: System.Web.HttpResponse.SupportsAsyncFlush
  id: SupportsAsyncFlush
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SupportsAsyncFlush
  nameWithType: HttpResponse.SupportsAsyncFlush
  fullName: System.Web.HttpResponse.SupportsAsyncFlush
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene un valore che indica se la connessione supporta le operazioni di scaricamento asincrone."
  remarks: "Questa proprietà restituisce il valore di <xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=fullName>proprietà.</xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=fullName>"
  syntax:
    content: public bool SupportsAsyncFlush { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la connessione supporta le operazioni di scaricamento asincrone; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.SupportsAsyncFlush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.SuppressContent
  id: SuppressContent
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SuppressContent
  nameWithType: HttpResponse.SuppressContent
  fullName: System.Web.HttpResponse.SuppressContent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta un valore che indica se inviare il contenuto HTTP al client."
  remarks: ''
  example:
  - "The following example checks whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false. If it is, the SuppressContent property is set to true to stop the response from being sent.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#3](~/add/codesnippet/csharp/p-system.web.httprespons_6_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#3](~/add/codesnippet/visualbasic/p-system.web.httprespons_6_1.aspx)]"
  syntax:
    content: public bool SuppressContent { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>esclusione di output. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.SuppressContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.SuppressDefaultCacheControlHeader
  id: SuppressDefaultCacheControlHeader
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SuppressDefaultCacheControlHeader
  nameWithType: HttpResponse.SuppressDefaultCacheControlHeader
  fullName: System.Web.HttpResponse.SuppressDefaultCacheControlHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "[Supportato in .NET Framework 4.5.2 e versioni successive]       Ottiene o imposta un valore che indica se eliminare il valore predefinito `Cache Control: private` intestazione per la risposta HTTP corrente."
  remarks: "Per impostazione predefinita, ASP.NET invia una `Cache-Control: private` intestazione della risposta a meno che non è stato specificato un criterio di cache esplicita per la risposta. Questa proprietà consente di eliminare l&quot;intestazione della risposta predefinita in base a una richiesta. L&quot;intestazione può ancora essere inibita per l&quot;intera applicazione impostando <xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A>in [elemento httpRuntime (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) o [outputCache elemento per la memorizzazione nella cache (Schema delle impostazioni ASP.NET)](http://msdn.microsoft.com/en-us/47cd2b47-316f-4dfd-bbf8-539be3066fee).</xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A>       Prestare attenzione quando il valore predefinito di eliminazione `Cache-Control: private` intestazione, come proxy e agli altri intermediari possono considerare le risposte senza questa intestazione come memorizzabile nella cache per impostazione predefinita. Quest &quot; ultimo può causare l&quot;involontaria memorizzazione nella cache di informazioni riservate. Vedere [RFC 2616, 13.4 sec](http://tools.ietf.org/html/rfc2616) per ulteriori informazioni."
  syntax:
    content: public bool SuppressDefaultCacheControlHeader { get; set; }
    return:
      type: System.Boolean
      description: '<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per eliminare il valore predefinito `Cache Control: private` intestazione per la risposta HTTP corrente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.'
  overload: System.Web.HttpResponse.SuppressDefaultCacheControlHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
  id: SuppressFormsAuthenticationRedirect
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: SuppressFormsAuthenticationRedirect
  nameWithType: HttpResponse.SuppressFormsAuthenticationRedirect
  fullName: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta un valore che specifica se il reindirizzamento di autenticazione form alla pagina di accesso deve essere eliminato."
  remarks: "Per impostazione predefinita, autenticazione basata su form converte i codici di stato HTTP 401 in 302 per reindirizzare alla pagina di accesso. Non è adatto per alcune classi di errori, ad esempio quando l&quot;autenticazione ha esito positivo ma l&quot;autorizzazione ha esito negativo, o quando la richiesta corrente è una richiesta di servizio AJAX o web. Questa proprietà fornisce un modo per disattivare il comportamento di reindirizzamento e inviare il codice di stato originale al client."
  syntax:
    content: public bool SuppressFormsAuthenticationRedirect { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il reindirizzamento di autenticazione form deve essere eliminato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.TransmitFile(System.String)
  id: TransmitFile(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: TransmitFile(String)
  nameWithType: HttpResponse.TransmitFile(String)
  fullName: System.Web.HttpResponse.TransmitFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Scrive il file specificato direttamente in un flusso di output di risposta HTTP senza memorizzarlo nel buffer."
  syntax:
    content: public void TransmitFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "Il nome del file da scrivere nell&quot;output HTTP."
  overload: System.Web.HttpResponse.TransmitFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <code> filename </code> parametro<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)
  id: TransmitFile(System.String,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: TransmitFile(String,Int64,Int64)
  nameWithType: HttpResponse.TransmitFile(String,Int64,Int64)
  fullName: System.Web.HttpResponse.TransmitFile(String,Int64,Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Scrive la parte specificata di un file direttamente in un flusso di output di risposta HTTP senza memorizzarlo nel buffer."
  remarks: "Se si specifica 0 come il `offset` parametro e -1 come il `length` parametro, viene inviato l&quot;intero file."
  syntax:
    content: public void TransmitFile (string filename, long offset, long length);
    parameters:
    - id: filename
      type: System.String
      description: "Il nome del file da scrivere nell&quot;output HTTP."
    - id: offset
      type: System.Int64
      description: "La posizione del file da scrivere nell&quot;output HTTP."
    - id: length
      type: System.Int64
      description: "Il numero di byte da trasmettere."
  overload: System.Web.HttpResponse.TransmitFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>offset</code> parameter is less than zero.  \n  \n \\- or -  \n  \n The <code>length</code> parameter is less than -1.  \n  \n \\- or -  \n  \n The <code>length</code> parameter specifies a number of bytes that is greater than the number of bytes the file contains minus the offset."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "The out-of-process worker request is not supported.  \n  \n \\- or -  \n  \n The response is not using an <xref href=\"System.Web.HttpWriter\"></xref> object."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>offset</code> parameter is less than zero or greater than the file size.  \n  \n \\- or -  \n  \n The <code>length</code> parameter is less than -1 or greater than the value of the <code>offset</code> parameter plus the file size."
  platform:
  - net462
- uid: System.Web.HttpResponse.TrySkipIisCustomErrors
  id: TrySkipIisCustomErrors
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: TrySkipIisCustomErrors
  nameWithType: HttpResponse.TrySkipIisCustomErrors
  fullName: System.Web.HttpResponse.TrySkipIisCustomErrors
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Ottiene o imposta un valore che specifica se [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] gli errori personalizzati sono disabilitati."
  remarks: "La proprietà TrySkipIisCustomErrors viene utilizzata solo quando l&quot;applicazione è ospitata in IIS 7.0. Quando è in esecuzione in modalità classica in IIS 7.0 il valore predefinito della proprietà TrySkipIisCustomErrors è `true`. Durante l&quot;esecuzione in modalità integrata, il valore predefinito della proprietà TrySkipIisCustomErrors è `false`."
  syntax:
    content: public bool TrySkipIisCustomErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per disabilitare gli errori personalizzati IIS; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpResponse.TrySkipIisCustomErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Write(System.Char)
  id: Write(System.Char)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Write(Char)
  nameWithType: HttpResponse.Write(Char)
  fullName: System.Web.HttpResponse.Write(Char)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Scrive un carattere in un flusso di output di risposta HTTP."
  remarks: ''
  example:
  - "The following example creates a series of constants that are written to an ASP.NET page using the Write method. The code calls this version of the Write method to write individual character constants to the page.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/csharp/m-system.web.httprespons_7_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/visualbasic/m-system.web.httprespons_7_1.aspx)]"
  syntax:
    content: public void Write (char ch);
    parameters:
    - id: ch
      type: System.Char
      description: "Flusso di output carattere da scrivere per HTTP."
  overload: System.Web.HttpResponse.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Write(System.Object)
  id: Write(System.Object)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Write(Object)
  nameWithType: HttpResponse.Write(Object)
  fullName: System.Web.HttpResponse.Write(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Scrive un <xref:System.Object>in un flusso di risposta HTTP.</xref:System.Object>"
  syntax:
    content: public void Write (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Il <xref:System.Object>per scrivere nel flusso di output HTTP.</xref:System.Object>"
  overload: System.Web.HttpResponse.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Write(System.String)
  id: Write(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Write(String)
  nameWithType: HttpResponse.Write(String)
  fullName: System.Web.HttpResponse.Write(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Scrive una stringa in un flusso di output di risposta HTTP."
  remarks: "Pagine HTML generate in modo dinamico possono provocare rischi di sicurezza se input ricevuti dai client Web non viene convalidato quando viene ricevuto da un client o quando la trasmissione a un client. Lo script dannoso incorporato nell&quot;input inviato a un sito Web e successivamente riscritti a un client può sembrare originati da una fonte attendibile. Questo rischio di sicurezza viene considerato un attacco di script tra siti. È sempre opportuno convalidare i dati ricevuti da un client quando verrà trasmesso dal sito al browser client.       Inoltre, ogni volta che si scrivono in formato HTML tutti i dati ricevuti come input, è necessario codificarli usando una tecnica, ad esempio <xref:System.Web.HttpServerUtility.HtmlEncode%2A>o <xref:System.Web.HttpServerUtility.UrlEncode%2A>per impedire l&quot;esecuzione di script dannosi.</xref:System.Web.HttpServerUtility.UrlEncode%2A> </xref:System.Web.HttpServerUtility.HtmlEncode%2A> Questa tecnica è utile per i dati che non è stati convalidati quando è stato ricevuto.       Quando si codificano o filtrare i dati, è necessario specificare un set di caratteri per le pagine Web in modo che il filtro è possibile identificare e rimuovere qualsiasi sequenze di byte che non appartengono al set (ad esempio, le sequenze non alfanumerici) che potrebbero avere uno script dannoso incorporato in essi contenuti.       Per ulteriori informazioni sugli attacchi script tra siti, vedere l&quot;articolo Q252985 &quot;Modalità per impedire Cross-Site Scripting problemi di protezione&quot; sui [della Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?LinkID=37115) sito Web."
  example:
  - "The following example echoes the client's name back to the client's browser. The <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method strips any malicious script and invalid characters that may have been submitted in the `UserName` input field.  \n  \n [!code-vb[System.Web.HttpResponse.Write#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_1_1.vb)]\n [!code-cs[System.Web.HttpResponse.Write#1](~/add/codesnippet/csharp/m-system.web.httprespons_1_1.cs)]"
  syntax:
    content: public void Write (string s);
    parameters:
    - id: s
      type: System.String
      description: "Stringa da scrivere per HTTP flusso di output."
  overload: System.Web.HttpResponse.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: Write(Char[],Int32,Int32)
  nameWithType: HttpResponse.Write(Char[],Int32,Int32)
  fullName: System.Web.HttpResponse.Write(Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Scrive una matrice di caratteri in un flusso di output di risposta HTTP."
  remarks: ''
  example:
  - "The following example creates a series of constants that are written to an ASP.NET page using the Write method. The code calls this version of the Write method to write individual character constants to the page.  \n  \n [!code-cs[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/csharp/m-system.web.httprespons_20_1.aspx)]\n [!code-vb[System.Web.HttpResponse_Sample5#4](~/add/codesnippet/visualbasic/m-system.web.httprespons_20_1.aspx)]"
  syntax:
    content: public void Write (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: "Matrice di caratteri da scrivere."
    - id: index
      type: System.Int32
      description: "Posizione nella matrice di caratteri in cui inizia la scrittura."
    - id: count
      type: System.Int32
      description: "Il numero di caratteri da scrivere, a partire da `index`."
  overload: System.Web.HttpResponse.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteFile(System.String)
  id: WriteFile(System.String)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteFile(String)
  nameWithType: HttpResponse.WriteFile(String)
  fullName: System.Web.HttpResponse.WriteFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Scrive il contenuto del file specificato direttamente in un flusso di output di risposta HTTP come blocco file."
  remarks: 'Quando questo metodo viene utilizzato con file di grandi dimensioni, la chiamata al metodo potrebbe generare un&quot;eccezione. Le dimensioni del file che può essere utilizzato con questo metodo dipendono dalla configurazione hardware del server Web. Per ulteriori informazioni, vedere l&quot;articolo 812406 &quot;PRB: WriteFile non è possibile scaricare un File di grandi dimensioni&quot; sui [della Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) sito Web.'
  example:
  - "The following example writes all the contents of a text file named `Login.txt` (which might contain literal HTML text and input controls) directly to the output stream.  \n  \n [!code-vb[Classic HttpResponse.WriteFile Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_18_1.vb)]\n [!code-cs[Classic HttpResponse.WriteFile Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_18_1.cs)]"
  syntax:
    content: public void WriteFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: "Il nome del file da scrivere nell&quot;output HTTP."
  overload: System.Web.HttpResponse.WriteFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>filename</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteFile(System.String,System.Boolean)
  id: WriteFile(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteFile(String,Boolean)
  nameWithType: HttpResponse.WriteFile(String,Boolean)
  fullName: System.Web.HttpResponse.WriteFile(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Scrive il contenuto del file specificato direttamente in un flusso di output di risposta HTTP come blocco di memoria."
  remarks: 'Quando questo metodo viene utilizzato con file di grandi dimensioni, la chiamata al metodo potrebbe generare un&quot;eccezione. Le dimensioni del file che può essere utilizzato con questo metodo dipendono dalla configurazione hardware del server Web. Per ulteriori informazioni, vedere l&quot;articolo 812406 &quot;PRB: WriteFile non è possibile scaricare un File di grandi dimensioni&quot; sui [della Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) sito Web.'
  example:
  - "The following example writes a file to memory.  \n  \n [!code-cs[Classic HttpResponse.WriteFile1 Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_3_1.cs)]\n [!code-vb[Classic HttpResponse.WriteFile1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_3_1.vb)]"
  syntax:
    content: public void WriteFile (string filename, bool readIntoMemory);
    parameters:
    - id: filename
      type: System.String
      description: "Il nome del file da scrivere in un blocco di memoria."
    - id: readIntoMemory
      type: System.Boolean
      description: "Indica se il file verrà scritto in un blocco di memoria."
  overload: System.Web.HttpResponse.WriteFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>filename</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)
  id: WriteFile(System.IntPtr,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteFile(IntPtr,Int64,Int64)
  nameWithType: HttpResponse.WriteFile(IntPtr,Int64,Int64)
  fullName: System.Web.HttpResponse.WriteFile(IntPtr,Int64,Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Scrive il file specificato direttamente in un flusso di output di risposta HTTP."
  remarks: 'Quando questo metodo viene utilizzato con file di grandi dimensioni, la chiamata al metodo potrebbe generare un&quot;eccezione. Le dimensioni del file che può essere utilizzato con questo metodo dipendono dalla configurazione hardware del server Web. Per ulteriori informazioni, vedere l&quot;articolo 812406 &quot;PRB: WriteFile non è possibile scaricare un File di grandi dimensioni&quot; sui [della Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) sito Web.'
  example:
  - "The following example writes all the contents of a text file named `Login.txt` (which might contain literal HTML text and input controls) directly to the output stream.  \n  \n [!code-vb[Classic HttpResponse.WriteFile3 Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_12_1.vb)]\n [!code-cs[Classic HttpResponse.WriteFile3 Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_12_1.cs)]"
  syntax:
    content: public void WriteFile (IntPtr fileHandle, long offset, long size);
    parameters:
    - id: fileHandle
      type: System.IntPtr
      description: "L&quot;handle di file del file da scrivere nel flusso di output HTTP."
    - id: offset
      type: System.Int64
      description: "Posizione di byte nel file in cui inizierà la scrittura."
    - id: size
      type: System.Int64
      description: "Il numero di byte da scrivere nel flusso di output."
  overload: System.Web.HttpResponse.WriteFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileHandler</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>offset</code> is less than 0.  \n  \n \\- or -  \n  \n <code>size</code> is greater than the file size minus <code>offset</code>."
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)
  id: WriteFile(System.String,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteFile(String,Int64,Int64)
  nameWithType: HttpResponse.WriteFile(String,Int64,Int64)
  fullName: System.Web.HttpResponse.WriteFile(String,Int64,Int64)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Scrive il file specificato direttamente in un flusso di output di risposta HTTP."
  remarks: 'Quando questo metodo viene utilizzato con file di grandi dimensioni, la chiamata al metodo potrebbe generare un&quot;eccezione. Le dimensioni del file che può essere utilizzato con questo metodo dipendono dalla configurazione hardware del server Web. Per ulteriori informazioni, vedere l&quot;articolo 812406 &quot;PRB: WriteFile non è possibile scaricare un File di grandi dimensioni&quot; sui [della Microsoft Knowledge Base](http://go.microsoft.com/fwlink/?linkid=149903) sito Web.'
  example:
  - "The following example writes all the contents of a text file named `Login.txt` (which might contain literal text and HTML input controls) directly to the output stream.  \n  \n [!code-cs[Classic HttpResponse.WriteFile2 Example#1](~/add/codesnippet/csharp/m-system.web.httprespons_5_1.cs)]\n [!code-vb[Classic HttpResponse.WriteFile2 Example#1](~/add/codesnippet/visualbasic/m-system.web.httprespons_5_1.vb)]"
  syntax:
    content: public void WriteFile (string filename, long offset, long size);
    parameters:
    - id: filename
      type: System.String
      description: "Flusso di output il nome del file in cui scrivere il protocollo HTTP."
    - id: offset
      type: System.Int64
      description: "Posizione di byte nel file in cui inizierà la scrittura."
    - id: size
      type: System.Int64
      description: "Il numero di byte da scrivere nel flusso di output."
  overload: System.Web.HttpResponse.WriteFile*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>offset</code> is less than 0.  \n  \n \\- or -  \n  \n <code>size</code> is greater than the file size minus <code>offset</code>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>filename</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)
  id: WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)
  parent: System.Web.HttpResponse
  langs:
  - csharp
  name: WriteSubstitution(HttpResponseSubstitutionCallback)
  nameWithType: HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)
  fullName: System.Web.HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Consente l&quot;inserimento di blocchi di sostituzione di risposta nella risposta, che consente la generazione dinamica di aree di risposta specificato per le risposte nella cache di output."
  remarks: "È possibile utilizzare il metodo WriteSubstitution per la sostituzione post-cache nelle pagine nella cache di output. Passando un <xref:System.Web.HttpContext>oggetto a un metodo di callback con prescritta <xref:System.Web.HttpResponseSubstitutionCallback>firma, è possibile sostituire l&quot;output memorizzato nella cache contenuto in qualsiasi posizione specificata nella cache della pagina.</xref:System.Web.HttpResponseSubstitutionCallback> </xref:System.Web.HttpContext> Per avviare la sostituzione, chiamare il metodo WriteSubstitution, passando il metodo di callback, che deve essere thread-safe e può essere uno dei seguenti:-un metodo statico del controllo pagina o un utente del contenitore.      -Un valore statico o metodo su un altro oggetto arbitrario di istanza.       Alla prima richiesta per la pagina, chiama il WriteSubstitution il <xref:System.Web.HttpResponseSubstitutionCallback>delegato per produrre l&quot;output.</xref:System.Web.HttpResponseSubstitutionCallback> Aggiunge quindi un buffer di sostituzione nella risposta, che mantiene il delegato da chiamare alle richieste future. Infine, comporta una riduzione sul lato client nella cache da pubblica a solo server, garantendo le richieste successive di pagina richiamino il delegato non nella cache sul client.      > [!NOTE] > Sostituzione post-cache non è supportata per un controllo utente memorizzato nella cache nella cache di output in cui viene applicata a livello di controllo utente. Questa operazione è nota anche come frammento di memorizzazione nella cache. Per ulteriori informazioni, vedere [la memorizzazione nella cache di parti di una pagina ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void WriteSubstitution (System.Web.HttpResponseSubstitutionCallback callback);
    parameters:
    - id: callback
      type: System.Web.HttpResponseSubstitutionCallback
      description: "Il metodo, un controllo utente o un oggetto da sostituire."
  overload: System.Web.HttpResponse.WriteSubstitution*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "La destinazione di <code> callback </code> parametro è di tipo <xref href=&quot;System.Web.UI.Control&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Threading.ThreadAbortException
  parent: System.Threading
  isExternal: false
  name: ThreadAbortException
  nameWithType: ThreadAbortException
  fullName: System.Threading.ThreadAbortException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ApplicationException
  parent: System
  isExternal: false
  name: ApplicationException
  nameWithType: ApplicationException
  fullName: System.ApplicationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpResponse.#ctor(System.IO.TextWriter)
  parent: System.Web.HttpResponse
  isExternal: false
  name: HttpResponse(TextWriter)
  nameWithType: HttpResponse.HttpResponse(TextWriter)
  fullName: System.Web.HttpResponse.HttpResponse(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.HttpResponse.AddCacheDependency(System.Web.Caching.CacheDependency[])
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheDependency(CacheDependency[])
  nameWithType: HttpResponse.AddCacheDependency(CacheDependency[])
  fullName: System.Web.HttpResponse.AddCacheDependency(CacheDependency[])
- uid: System.Web.Caching.CacheDependency[]
  parent: System.Web.Caching
  isExternal: false
  name: CacheDependency
  nameWithType: CacheDependency
  fullName: System.Web.Caching.CacheDependency[]
  spec.csharp:
  - uid: System.Web.Caching.CacheDependency
    name: CacheDependency
    nameWithType: CacheDependency
    fullName: CacheDependency[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.Collections.ArrayList)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependencies(ArrayList)
  nameWithType: HttpResponse.AddCacheItemDependencies(ArrayList)
  fullName: System.Web.HttpResponse.AddCacheItemDependencies(ArrayList)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.HttpResponse.AddCacheItemDependencies(System.String[])
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependencies(String[])
  nameWithType: HttpResponse.AddCacheItemDependencies(String[])
  fullName: System.Web.HttpResponse.AddCacheItemDependencies(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpResponse.AddCacheItemDependency(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependency(String)
  nameWithType: HttpResponse.AddCacheItemDependency(String)
  fullName: System.Web.HttpResponse.AddCacheItemDependency(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependencies(ArrayList)
  nameWithType: HttpResponse.AddFileDependencies(ArrayList)
  fullName: System.Web.HttpResponse.AddFileDependencies(ArrayList)
- uid: System.Web.HttpResponse.AddFileDependencies(System.String[])
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependencies(String[])
  nameWithType: HttpResponse.AddFileDependencies(String[])
  fullName: System.Web.HttpResponse.AddFileDependencies(String[])
- uid: System.Web.HttpResponse.AddFileDependency(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependency(String)
  nameWithType: HttpResponse.AddFileDependency(String)
  fullName: System.Web.HttpResponse.AddFileDependency(String)
- uid: System.Web.HttpResponse.AddHeader(System.String,System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddHeader(String,String)
  nameWithType: HttpResponse.AddHeader(String,String)
  fullName: System.Web.HttpResponse.AddHeader(String,String)
- uid: System.Web.HttpResponse.AddOnSendingHeaders(System.Action{System.Web.HttpContext})
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddOnSendingHeaders(Action<HttpContext>)
  nameWithType: HttpResponse.AddOnSendingHeaders(Action<HttpContext>)
  fullName: System.Web.HttpResponse.AddOnSendingHeaders(Action<HttpContext>)
- uid: System.Web.ISubscriptionToken
  parent: System.Web
  isExternal: false
  name: ISubscriptionToken
  nameWithType: ISubscriptionToken
  fullName: System.Web.ISubscriptionToken
- uid: System.Action{System.Web.HttpContext}
  parent: System
  isExternal: true
  name: Action<HttpContext>
  nameWithType: Action<HttpContext>
  fullName: System.Action<System.Web.HttpContext>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Web.HttpContext>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpResponse.AppendCookie(System.Web.HttpCookie)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendCookie(HttpCookie)
  nameWithType: HttpResponse.AppendCookie(HttpCookie)
  fullName: System.Web.HttpResponse.AppendCookie(HttpCookie)
- uid: System.Web.HttpCookie
  parent: System.Web
  isExternal: false
  name: HttpCookie
  nameWithType: HttpCookie
  fullName: System.Web.HttpCookie
- uid: System.Web.HttpResponse.AppendHeader(System.String,System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendHeader(String,String)
  nameWithType: HttpResponse.AppendHeader(String,String)
  fullName: System.Web.HttpResponse.AppendHeader(String,String)
- uid: System.Web.HttpResponse.AppendToLog(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendToLog(String)
  nameWithType: HttpResponse.AppendToLog(String)
  fullName: System.Web.HttpResponse.AppendToLog(String)
- uid: System.Web.HttpResponse.ApplyAppPathModifier(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: ApplyAppPathModifier(String)
  nameWithType: HttpResponse.ApplyAppPathModifier(String)
  fullName: System.Web.HttpResponse.ApplyAppPathModifier(String)
- uid: System.Web.HttpResponse.BeginFlush(System.AsyncCallback,System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: BeginFlush(AsyncCallback,Object)
  nameWithType: HttpResponse.BeginFlush(AsyncCallback,Object)
  fullName: System.Web.HttpResponse.BeginFlush(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.HttpResponse.BinaryWrite(System.Byte[])
  parent: System.Web.HttpResponse
  isExternal: false
  name: BinaryWrite(Byte[])
  nameWithType: HttpResponse.BinaryWrite(Byte[])
  fullName: System.Web.HttpResponse.BinaryWrite(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpResponse.Buffer
  parent: System.Web.HttpResponse
  isExternal: false
  name: Buffer
  nameWithType: HttpResponse.Buffer
  fullName: System.Web.HttpResponse.Buffer
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpResponse.BufferOutput
  parent: System.Web.HttpResponse
  isExternal: false
  name: BufferOutput
  nameWithType: HttpResponse.BufferOutput
  fullName: System.Web.HttpResponse.BufferOutput
- uid: System.Web.HttpResponse.Cache
  parent: System.Web.HttpResponse
  isExternal: false
  name: Cache
  nameWithType: HttpResponse.Cache
  fullName: System.Web.HttpResponse.Cache
- uid: System.Web.HttpCachePolicy
  parent: System.Web
  isExternal: false
  name: HttpCachePolicy
  nameWithType: HttpCachePolicy
  fullName: System.Web.HttpCachePolicy
- uid: System.Web.HttpResponse.CacheControl
  parent: System.Web.HttpResponse
  isExternal: false
  name: CacheControl
  nameWithType: HttpResponse.CacheControl
  fullName: System.Web.HttpResponse.CacheControl
- uid: System.Web.HttpResponse.Charset
  parent: System.Web.HttpResponse
  isExternal: false
  name: Charset
  nameWithType: HttpResponse.Charset
  fullName: System.Web.HttpResponse.Charset
- uid: System.Web.HttpResponse.Clear
  parent: System.Web.HttpResponse
  isExternal: false
  name: Clear()
  nameWithType: HttpResponse.Clear()
  fullName: System.Web.HttpResponse.Clear()
- uid: System.Web.HttpResponse.ClearContent
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClearContent()
  nameWithType: HttpResponse.ClearContent()
  fullName: System.Web.HttpResponse.ClearContent()
- uid: System.Web.HttpResponse.ClearHeaders
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClearHeaders()
  nameWithType: HttpResponse.ClearHeaders()
  fullName: System.Web.HttpResponse.ClearHeaders()
- uid: System.Web.HttpResponse.ClientDisconnectedToken
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClientDisconnectedToken
  nameWithType: HttpResponse.ClientDisconnectedToken
  fullName: System.Web.HttpResponse.ClientDisconnectedToken
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Web.HttpResponse.Close
  parent: System.Web.HttpResponse
  isExternal: false
  name: Close()
  nameWithType: HttpResponse.Close()
  fullName: System.Web.HttpResponse.Close()
- uid: System.Web.HttpResponse.ContentEncoding
  parent: System.Web.HttpResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpResponse.ContentEncoding
  fullName: System.Web.HttpResponse.ContentEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Web.HttpResponse.ContentType
  parent: System.Web.HttpResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpResponse.ContentType
  fullName: System.Web.HttpResponse.ContentType
- uid: System.Web.HttpResponse.Cookies
  parent: System.Web.HttpResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpResponse.Cookies
  fullName: System.Web.HttpResponse.Cookies
- uid: System.Web.HttpCookieCollection
  parent: System.Web
  isExternal: false
  name: HttpCookieCollection
  nameWithType: HttpCookieCollection
  fullName: System.Web.HttpCookieCollection
- uid: System.Web.HttpResponse.DisableKernelCache
  parent: System.Web.HttpResponse
  isExternal: false
  name: DisableKernelCache()
  nameWithType: HttpResponse.DisableKernelCache()
  fullName: System.Web.HttpResponse.DisableKernelCache()
- uid: System.Web.HttpResponse.DisableUserCache
  parent: System.Web.HttpResponse
  isExternal: false
  name: DisableUserCache()
  nameWithType: HttpResponse.DisableUserCache()
  fullName: System.Web.HttpResponse.DisableUserCache()
- uid: System.Web.HttpResponse.End
  parent: System.Web.HttpResponse
  isExternal: false
  name: End()
  nameWithType: HttpResponse.End()
  fullName: System.Web.HttpResponse.End()
- uid: System.Web.HttpResponse.EndFlush(System.IAsyncResult)
  parent: System.Web.HttpResponse
  isExternal: false
  name: EndFlush(IAsyncResult)
  nameWithType: HttpResponse.EndFlush(IAsyncResult)
  fullName: System.Web.HttpResponse.EndFlush(IAsyncResult)
- uid: System.Web.HttpResponse.Expires
  parent: System.Web.HttpResponse
  isExternal: false
  name: Expires
  nameWithType: HttpResponse.Expires
  fullName: System.Web.HttpResponse.Expires
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpResponse.ExpiresAbsolute
  parent: System.Web.HttpResponse
  isExternal: false
  name: ExpiresAbsolute
  nameWithType: HttpResponse.ExpiresAbsolute
  fullName: System.Web.HttpResponse.ExpiresAbsolute
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.HttpResponse.Filter
  parent: System.Web.HttpResponse
  isExternal: false
  name: Filter
  nameWithType: HttpResponse.Filter
  fullName: System.Web.HttpResponse.Filter
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.HttpResponse.Flush
  parent: System.Web.HttpResponse
  isExternal: false
  name: Flush()
  nameWithType: HttpResponse.Flush()
  fullName: System.Web.HttpResponse.Flush()
- uid: System.Web.HttpResponse.FlushAsync
  parent: System.Web.HttpResponse
  isExternal: false
  name: FlushAsync()
  nameWithType: HttpResponse.FlushAsync()
  fullName: System.Web.HttpResponse.FlushAsync()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Web.HttpResponse.HeaderEncoding
  parent: System.Web.HttpResponse
  isExternal: false
  name: HeaderEncoding
  nameWithType: HttpResponse.HeaderEncoding
  fullName: System.Web.HttpResponse.HeaderEncoding
- uid: System.Web.HttpResponse.Headers
  parent: System.Web.HttpResponse
  isExternal: false
  name: Headers
  nameWithType: HttpResponse.Headers
  fullName: System.Web.HttpResponse.Headers
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.HttpResponse.HeadersWritten
  parent: System.Web.HttpResponse
  isExternal: false
  name: HeadersWritten
  nameWithType: HttpResponse.HeadersWritten
  fullName: System.Web.HttpResponse.HeadersWritten
- uid: System.Web.HttpResponse.IsClientConnected
  parent: System.Web.HttpResponse
  isExternal: false
  name: IsClientConnected
  nameWithType: HttpResponse.IsClientConnected
  fullName: System.Web.HttpResponse.IsClientConnected
- uid: System.Web.HttpResponse.IsRequestBeingRedirected
  parent: System.Web.HttpResponse
  isExternal: false
  name: IsRequestBeingRedirected
  nameWithType: HttpResponse.IsRequestBeingRedirected
  fullName: System.Web.HttpResponse.IsRequestBeingRedirected
- uid: System.Web.HttpResponse.Output
  parent: System.Web.HttpResponse
  isExternal: false
  name: Output
  nameWithType: HttpResponse.Output
  fullName: System.Web.HttpResponse.Output
- uid: System.Web.HttpResponse.OutputStream
  parent: System.Web.HttpResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpResponse.OutputStream
  fullName: System.Web.HttpResponse.OutputStream
- uid: System.Web.HttpResponse.Pics(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Pics(String)
  nameWithType: HttpResponse.Pics(String)
  fullName: System.Web.HttpResponse.Pics(String)
- uid: System.Web.HttpResponse.PushPromise(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: PushPromise(String)
  nameWithType: HttpResponse.PushPromise(String)
  fullName: System.Web.HttpResponse.PushPromise(String)
- uid: System.Web.HttpResponse.PushPromise(System.String,System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.HttpResponse
  isExternal: false
  name: PushPromise(String,String,NameValueCollection)
  nameWithType: HttpResponse.PushPromise(String,String,NameValueCollection)
  fullName: System.Web.HttpResponse.PushPromise(String,String,NameValueCollection)
- uid: System.Web.HttpResponse.Redirect(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Redirect(String)
  nameWithType: HttpResponse.Redirect(String)
  fullName: System.Web.HttpResponse.Redirect(String)
- uid: System.Web.HttpResponse.Redirect(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Redirect(String,Boolean)
  nameWithType: HttpResponse.Redirect(String,Boolean)
  fullName: System.Web.HttpResponse.Redirect(String,Boolean)
- uid: System.Web.HttpResponse.RedirectLocation
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpResponse.RedirectLocation
  fullName: System.Web.HttpResponse.RedirectLocation
- uid: System.Web.HttpResponse.RedirectPermanent(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectPermanent(String)
  nameWithType: HttpResponse.RedirectPermanent(String)
  fullName: System.Web.HttpResponse.RedirectPermanent(String)
- uid: System.Web.HttpResponse.RedirectPermanent(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectPermanent(String,Boolean)
  nameWithType: HttpResponse.RedirectPermanent(String,Boolean)
  fullName: System.Web.HttpResponse.RedirectPermanent(String,Boolean)
- uid: System.Web.HttpResponse.RedirectToRoute(System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(Object)
  nameWithType: HttpResponse.RedirectToRoute(Object)
  fullName: System.Web.HttpResponse.RedirectToRoute(Object)
- uid: System.Web.HttpResponse.RedirectToRoute(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(String)
  nameWithType: HttpResponse.RedirectToRoute(String)
  fullName: System.Web.HttpResponse.RedirectToRoute(String)
- uid: System.Web.HttpResponse.RedirectToRoute(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoute(RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoute(RouteValueDictionary)
- uid: System.Web.Routing.RouteValueDictionary
  parent: System.Web.Routing
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: System.Web.Routing.RouteValueDictionary
- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(String,Object)
  nameWithType: HttpResponse.RedirectToRoute(String,Object)
  fullName: System.Web.HttpResponse.RedirectToRoute(String,Object)
- uid: System.Web.HttpResponse.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute(String,RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoute(String,RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoute(String,RouteValueDictionary)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(Object)
  nameWithType: HttpResponse.RedirectToRoutePermanent(Object)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(Object)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(String)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(RouteValueDictionary)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(String,Object)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String,Object)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,Object)
- uid: System.Web.HttpResponse.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent(String,RouteValueDictionary)
  nameWithType: HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)
  fullName: System.Web.HttpResponse.RedirectToRoutePermanent(String,RouteValueDictionary)
- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RemoveOutputCacheItem(String)
  nameWithType: HttpResponse.RemoveOutputCacheItem(String)
  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String)
- uid: System.Web.HttpResponse.RemoveOutputCacheItem(System.String,System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: RemoveOutputCacheItem(String,String)
  nameWithType: HttpResponse.RemoveOutputCacheItem(String,String)
  fullName: System.Web.HttpResponse.RemoveOutputCacheItem(String,String)
- uid: System.Web.HttpResponse.SetCookie(System.Web.HttpCookie)
  parent: System.Web.HttpResponse
  isExternal: false
  name: SetCookie(HttpCookie)
  nameWithType: HttpResponse.SetCookie(HttpCookie)
  fullName: System.Web.HttpResponse.SetCookie(HttpCookie)
- uid: System.Web.HttpResponse.Status
  parent: System.Web.HttpResponse
  isExternal: false
  name: Status
  nameWithType: HttpResponse.Status
  fullName: System.Web.HttpResponse.Status
- uid: System.Web.HttpResponse.StatusCode
  parent: System.Web.HttpResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpResponse.StatusCode
  fullName: System.Web.HttpResponse.StatusCode
- uid: System.Web.HttpResponse.StatusDescription
  parent: System.Web.HttpResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpResponse.StatusDescription
  fullName: System.Web.HttpResponse.StatusDescription
- uid: System.Web.HttpResponse.SubStatusCode
  parent: System.Web.HttpResponse
  isExternal: false
  name: SubStatusCode
  nameWithType: HttpResponse.SubStatusCode
  fullName: System.Web.HttpResponse.SubStatusCode
- uid: System.Web.HttpResponse.SupportsAsyncFlush
  parent: System.Web.HttpResponse
  isExternal: false
  name: SupportsAsyncFlush
  nameWithType: HttpResponse.SupportsAsyncFlush
  fullName: System.Web.HttpResponse.SupportsAsyncFlush
- uid: System.Web.HttpResponse.SuppressContent
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressContent
  nameWithType: HttpResponse.SuppressContent
  fullName: System.Web.HttpResponse.SuppressContent
- uid: System.Web.HttpResponse.SuppressDefaultCacheControlHeader
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressDefaultCacheControlHeader
  nameWithType: HttpResponse.SuppressDefaultCacheControlHeader
  fullName: System.Web.HttpResponse.SuppressDefaultCacheControlHeader
- uid: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressFormsAuthenticationRedirect
  nameWithType: HttpResponse.SuppressFormsAuthenticationRedirect
  fullName: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect
- uid: System.Web.HttpResponse.TransmitFile(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: TransmitFile(String)
  nameWithType: HttpResponse.TransmitFile(String)
  fullName: System.Web.HttpResponse.TransmitFile(String)
- uid: System.Web.HttpResponse.TransmitFile(System.String,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  isExternal: false
  name: TransmitFile(String,Int64,Int64)
  nameWithType: HttpResponse.TransmitFile(String,Int64,Int64)
  fullName: System.Web.HttpResponse.TransmitFile(String,Int64,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Web.HttpResponse.TrySkipIisCustomErrors
  parent: System.Web.HttpResponse
  isExternal: false
  name: TrySkipIisCustomErrors
  nameWithType: HttpResponse.TrySkipIisCustomErrors
  fullName: System.Web.HttpResponse.TrySkipIisCustomErrors
- uid: System.Web.HttpResponse.Write(System.Char)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write(Char)
  nameWithType: HttpResponse.Write(Char)
  fullName: System.Web.HttpResponse.Write(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.HttpResponse.Write(System.Object)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write(Object)
  nameWithType: HttpResponse.Write(Object)
  fullName: System.Web.HttpResponse.Write(Object)
- uid: System.Web.HttpResponse.Write(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write(String)
  nameWithType: HttpResponse.Write(String)
  fullName: System.Web.HttpResponse.Write(String)
- uid: System.Web.HttpResponse.Write(System.Char[],System.Int32,System.Int32)
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write(Char[],Int32,Int32)
  nameWithType: HttpResponse.Write(Char[],Int32,Int32)
  fullName: System.Web.HttpResponse.Write(Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpResponse.WriteFile(System.String)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile(String)
  nameWithType: HttpResponse.WriteFile(String)
  fullName: System.Web.HttpResponse.WriteFile(String)
- uid: System.Web.HttpResponse.WriteFile(System.String,System.Boolean)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile(String,Boolean)
  nameWithType: HttpResponse.WriteFile(String,Boolean)
  fullName: System.Web.HttpResponse.WriteFile(String,Boolean)
- uid: System.Web.HttpResponse.WriteFile(System.IntPtr,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile(IntPtr,Int64,Int64)
  nameWithType: HttpResponse.WriteFile(IntPtr,Int64,Int64)
  fullName: System.Web.HttpResponse.WriteFile(IntPtr,Int64,Int64)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Web.HttpResponse.WriteFile(System.String,System.Int64,System.Int64)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile(String,Int64,Int64)
  nameWithType: HttpResponse.WriteFile(String,Int64,Int64)
  fullName: System.Web.HttpResponse.WriteFile(String,Int64,Int64)
- uid: System.Web.HttpResponse.WriteSubstitution(System.Web.HttpResponseSubstitutionCallback)
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteSubstitution(HttpResponseSubstitutionCallback)
  nameWithType: HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)
  fullName: System.Web.HttpResponse.WriteSubstitution(HttpResponseSubstitutionCallback)
- uid: System.Web.HttpResponseSubstitutionCallback
  parent: System.Web
  isExternal: false
  name: HttpResponseSubstitutionCallback
  nameWithType: HttpResponseSubstitutionCallback
  fullName: System.Web.HttpResponseSubstitutionCallback
- uid: System.Web.HttpResponse.#ctor*
  parent: System.Web.HttpResponse
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse.HttpResponse
- uid: System.Web.HttpResponse.AddCacheDependency*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheDependency
  nameWithType: HttpResponse.AddCacheDependency
- uid: System.Web.HttpResponse.AddCacheItemDependencies*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependencies
  nameWithType: HttpResponse.AddCacheItemDependencies
- uid: System.Web.HttpResponse.AddCacheItemDependency*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddCacheItemDependency
  nameWithType: HttpResponse.AddCacheItemDependency
- uid: System.Web.HttpResponse.AddFileDependencies*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependencies
  nameWithType: HttpResponse.AddFileDependencies
- uid: System.Web.HttpResponse.AddFileDependency*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddFileDependency
  nameWithType: HttpResponse.AddFileDependency
- uid: System.Web.HttpResponse.AddHeader*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddHeader
  nameWithType: HttpResponse.AddHeader
- uid: System.Web.HttpResponse.AddOnSendingHeaders*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AddOnSendingHeaders
  nameWithType: HttpResponse.AddOnSendingHeaders
- uid: System.Web.HttpResponse.AppendCookie*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendCookie
  nameWithType: HttpResponse.AppendCookie
- uid: System.Web.HttpResponse.AppendHeader*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendHeader
  nameWithType: HttpResponse.AppendHeader
- uid: System.Web.HttpResponse.AppendToLog*
  parent: System.Web.HttpResponse
  isExternal: false
  name: AppendToLog
  nameWithType: HttpResponse.AppendToLog
- uid: System.Web.HttpResponse.ApplyAppPathModifier*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ApplyAppPathModifier
  nameWithType: HttpResponse.ApplyAppPathModifier
- uid: System.Web.HttpResponse.BeginFlush*
  parent: System.Web.HttpResponse
  isExternal: false
  name: BeginFlush
  nameWithType: HttpResponse.BeginFlush
- uid: System.Web.HttpResponse.BinaryWrite*
  parent: System.Web.HttpResponse
  isExternal: false
  name: BinaryWrite
  nameWithType: HttpResponse.BinaryWrite
- uid: System.Web.HttpResponse.Buffer*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Buffer
  nameWithType: HttpResponse.Buffer
- uid: System.Web.HttpResponse.BufferOutput*
  parent: System.Web.HttpResponse
  isExternal: false
  name: BufferOutput
  nameWithType: HttpResponse.BufferOutput
- uid: System.Web.HttpResponse.Cache*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Cache
  nameWithType: HttpResponse.Cache
- uid: System.Web.HttpResponse.CacheControl*
  parent: System.Web.HttpResponse
  isExternal: false
  name: CacheControl
  nameWithType: HttpResponse.CacheControl
- uid: System.Web.HttpResponse.Charset*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Charset
  nameWithType: HttpResponse.Charset
- uid: System.Web.HttpResponse.Clear*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Clear
  nameWithType: HttpResponse.Clear
- uid: System.Web.HttpResponse.ClearContent*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClearContent
  nameWithType: HttpResponse.ClearContent
- uid: System.Web.HttpResponse.ClearHeaders*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClearHeaders
  nameWithType: HttpResponse.ClearHeaders
- uid: System.Web.HttpResponse.ClientDisconnectedToken*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ClientDisconnectedToken
  nameWithType: HttpResponse.ClientDisconnectedToken
- uid: System.Web.HttpResponse.Close*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Close
  nameWithType: HttpResponse.Close
- uid: System.Web.HttpResponse.ContentEncoding*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ContentEncoding
  nameWithType: HttpResponse.ContentEncoding
- uid: System.Web.HttpResponse.ContentType*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ContentType
  nameWithType: HttpResponse.ContentType
- uid: System.Web.HttpResponse.Cookies*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Cookies
  nameWithType: HttpResponse.Cookies
- uid: System.Web.HttpResponse.DisableKernelCache*
  parent: System.Web.HttpResponse
  isExternal: false
  name: DisableKernelCache
  nameWithType: HttpResponse.DisableKernelCache
- uid: System.Web.HttpResponse.DisableUserCache*
  parent: System.Web.HttpResponse
  isExternal: false
  name: DisableUserCache
  nameWithType: HttpResponse.DisableUserCache
- uid: System.Web.HttpResponse.End*
  parent: System.Web.HttpResponse
  isExternal: false
  name: End
  nameWithType: HttpResponse.End
- uid: System.Web.HttpResponse.EndFlush*
  parent: System.Web.HttpResponse
  isExternal: false
  name: EndFlush
  nameWithType: HttpResponse.EndFlush
- uid: System.Web.HttpResponse.Expires*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Expires
  nameWithType: HttpResponse.Expires
- uid: System.Web.HttpResponse.ExpiresAbsolute*
  parent: System.Web.HttpResponse
  isExternal: false
  name: ExpiresAbsolute
  nameWithType: HttpResponse.ExpiresAbsolute
- uid: System.Web.HttpResponse.Filter*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Filter
  nameWithType: HttpResponse.Filter
- uid: System.Web.HttpResponse.Flush*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Flush
  nameWithType: HttpResponse.Flush
- uid: System.Web.HttpResponse.FlushAsync*
  parent: System.Web.HttpResponse
  isExternal: false
  name: FlushAsync
  nameWithType: HttpResponse.FlushAsync
- uid: System.Web.HttpResponse.HeaderEncoding*
  parent: System.Web.HttpResponse
  isExternal: false
  name: HeaderEncoding
  nameWithType: HttpResponse.HeaderEncoding
- uid: System.Web.HttpResponse.Headers*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Headers
  nameWithType: HttpResponse.Headers
- uid: System.Web.HttpResponse.HeadersWritten*
  parent: System.Web.HttpResponse
  isExternal: false
  name: HeadersWritten
  nameWithType: HttpResponse.HeadersWritten
- uid: System.Web.HttpResponse.IsClientConnected*
  parent: System.Web.HttpResponse
  isExternal: false
  name: IsClientConnected
  nameWithType: HttpResponse.IsClientConnected
- uid: System.Web.HttpResponse.IsRequestBeingRedirected*
  parent: System.Web.HttpResponse
  isExternal: false
  name: IsRequestBeingRedirected
  nameWithType: HttpResponse.IsRequestBeingRedirected
- uid: System.Web.HttpResponse.Output*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Output
  nameWithType: HttpResponse.Output
- uid: System.Web.HttpResponse.OutputStream*
  parent: System.Web.HttpResponse
  isExternal: false
  name: OutputStream
  nameWithType: HttpResponse.OutputStream
- uid: System.Web.HttpResponse.Pics*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Pics
  nameWithType: HttpResponse.Pics
- uid: System.Web.HttpResponse.PushPromise*
  parent: System.Web.HttpResponse
  isExternal: false
  name: PushPromise
  nameWithType: HttpResponse.PushPromise
- uid: System.Web.HttpResponse.Redirect*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Redirect
  nameWithType: HttpResponse.Redirect
- uid: System.Web.HttpResponse.RedirectLocation*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectLocation
  nameWithType: HttpResponse.RedirectLocation
- uid: System.Web.HttpResponse.RedirectPermanent*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectPermanent
  nameWithType: HttpResponse.RedirectPermanent
- uid: System.Web.HttpResponse.RedirectToRoute*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoute
  nameWithType: HttpResponse.RedirectToRoute
- uid: System.Web.HttpResponse.RedirectToRoutePermanent*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RedirectToRoutePermanent
  nameWithType: HttpResponse.RedirectToRoutePermanent
- uid: System.Web.HttpResponse.RemoveOutputCacheItem*
  parent: System.Web.HttpResponse
  isExternal: false
  name: RemoveOutputCacheItem
  nameWithType: HttpResponse.RemoveOutputCacheItem
- uid: System.Web.HttpResponse.SetCookie*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SetCookie
  nameWithType: HttpResponse.SetCookie
- uid: System.Web.HttpResponse.Status*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Status
  nameWithType: HttpResponse.Status
- uid: System.Web.HttpResponse.StatusCode*
  parent: System.Web.HttpResponse
  isExternal: false
  name: StatusCode
  nameWithType: HttpResponse.StatusCode
- uid: System.Web.HttpResponse.StatusDescription*
  parent: System.Web.HttpResponse
  isExternal: false
  name: StatusDescription
  nameWithType: HttpResponse.StatusDescription
- uid: System.Web.HttpResponse.SubStatusCode*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SubStatusCode
  nameWithType: HttpResponse.SubStatusCode
- uid: System.Web.HttpResponse.SupportsAsyncFlush*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SupportsAsyncFlush
  nameWithType: HttpResponse.SupportsAsyncFlush
- uid: System.Web.HttpResponse.SuppressContent*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressContent
  nameWithType: HttpResponse.SuppressContent
- uid: System.Web.HttpResponse.SuppressDefaultCacheControlHeader*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressDefaultCacheControlHeader
  nameWithType: HttpResponse.SuppressDefaultCacheControlHeader
- uid: System.Web.HttpResponse.SuppressFormsAuthenticationRedirect*
  parent: System.Web.HttpResponse
  isExternal: false
  name: SuppressFormsAuthenticationRedirect
  nameWithType: HttpResponse.SuppressFormsAuthenticationRedirect
- uid: System.Web.HttpResponse.TransmitFile*
  parent: System.Web.HttpResponse
  isExternal: false
  name: TransmitFile
  nameWithType: HttpResponse.TransmitFile
- uid: System.Web.HttpResponse.TrySkipIisCustomErrors*
  parent: System.Web.HttpResponse
  isExternal: false
  name: TrySkipIisCustomErrors
  nameWithType: HttpResponse.TrySkipIisCustomErrors
- uid: System.Web.HttpResponse.Write*
  parent: System.Web.HttpResponse
  isExternal: false
  name: Write
  nameWithType: HttpResponse.Write
- uid: System.Web.HttpResponse.WriteFile*
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteFile
  nameWithType: HttpResponse.WriteFile
- uid: System.Web.HttpResponse.WriteSubstitution*
  parent: System.Web.HttpResponse
  isExternal: false
  name: WriteSubstitution
  nameWithType: HttpResponse.WriteSubstitution
