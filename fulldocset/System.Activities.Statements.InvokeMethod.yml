### YamlMime:ManagedReference
items:
- uid: System.Activities.Statements.InvokeMethod
  id: InvokeMethod
  children:
  - System.Activities.Statements.InvokeMethod.#ctor
  - System.Activities.Statements.InvokeMethod.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)
  - System.Activities.Statements.InvokeMethod.CacheMetadata(System.Activities.CodeActivityMetadata)
  - System.Activities.Statements.InvokeMethod.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)
  - System.Activities.Statements.InvokeMethod.GenericTypeArguments
  - System.Activities.Statements.InvokeMethod.MethodName
  - System.Activities.Statements.InvokeMethod.Parameters
  - System.Activities.Statements.InvokeMethod.Result
  - System.Activities.Statements.InvokeMethod.RunAsynchronously
  - System.Activities.Statements.InvokeMethod.TargetObject
  - System.Activities.Statements.InvokeMethod.TargetType
  langs:
  - csharp
  name: InvokeMethod
  nameWithType: InvokeMethod
  fullName: System.Activities.Statements.InvokeMethod
  type: Class
  summary: "Chiama un metodo pubblico di un tipo o un oggetto specificato."
  remarks: ''
  example:
  - "The following code sample demonstrates creating an InvokeMethod activity. This example is from the [Using the InvokeMethod Activity](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_InvokeMethod#1](~/add/codesnippet/csharp/invokemethodusage/program.cs#1)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Parameters")]

      public sealed class InvokeMethod : System.Activities.AsyncCodeActivity
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.AsyncCodeActivity
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.AsyncCodeActivity.Cancel(System.Activities.AsyncCodeActivityContext)
  - System.Activities.AsyncCodeActivity.Implementation
  - System.Activities.AsyncCodeActivity.ImplementationVersion
  - System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  platform:
  - net462
- uid: System.Activities.Statements.InvokeMethod.#ctor
  id: '#ctor'
  parent: System.Activities.Statements.InvokeMethod
  langs:
  - csharp
  name: InvokeMethod()
  nameWithType: InvokeMethod.InvokeMethod()
  fullName: System.Activities.Statements.InvokeMethod.InvokeMethod()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Crea una nuova istanza di <xref href=&quot;System.Activities.Statements.InvokeMethod&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code sample demonstrates creating an <xref:System.Activities.Statements.InvokeMethod> activity. This example is from the [Using the InvokeMethod Activity](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_InvokeMethod#1](~/add/codesnippet/csharp/invokemethodusage/program.cs#1)]"
  syntax:
    content: public InvokeMethod ();
    parameters: []
  overload: System.Activities.Statements.InvokeMethod.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.InvokeMethod.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)
  id: BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)
  parent: System.Activities.Statements.InvokeMethod
  langs:
  - csharp
  name: BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  nameWithType: InvokeMethod.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  fullName: System.Activities.Statements.InvokeMethod.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override IAsyncResult BeginExecute (System.Activities.AsyncCodeActivityContext context, AsyncCallback callback, object state);
    parameters:
    - id: context
      type: System.Activities.AsyncCodeActivityContext
      description: "Da aggiungere."
    - id: callback
      type: System.AsyncCallback
      description: "Da aggiungere."
    - id: state
      type: System.Object
      description: "Da aggiungere."
    return:
      type: System.IAsyncResult
      description: "Da aggiungere."
  overload: System.Activities.Statements.InvokeMethod.BeginExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.InvokeMethod.CacheMetadata(System.Activities.CodeActivityMetadata)
  id: CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.Statements.InvokeMethod
  langs:
  - csharp
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: InvokeMethod.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.Statements.InvokeMethod.CacheMetadata(CodeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.CodeActivityMetadata
      description: "Da aggiungere."
  overload: System.Activities.Statements.InvokeMethod.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.InvokeMethod.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)
  id: EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)
  parent: System.Activities.Statements.InvokeMethod
  langs:
  - csharp
  name: EndExecute(AsyncCodeActivityContext,IAsyncResult)
  nameWithType: InvokeMethod.EndExecute(AsyncCodeActivityContext,IAsyncResult)
  fullName: System.Activities.Statements.InvokeMethod.EndExecute(AsyncCodeActivityContext,IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void EndExecute (System.Activities.AsyncCodeActivityContext context, IAsyncResult result);
    parameters:
    - id: context
      type: System.Activities.AsyncCodeActivityContext
      description: "Da aggiungere."
    - id: result
      type: System.IAsyncResult
      description: "Da aggiungere."
  overload: System.Activities.Statements.InvokeMethod.EndExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.InvokeMethod.GenericTypeArguments
  id: GenericTypeArguments
  parent: System.Activities.Statements.InvokeMethod
  langs:
  - csharp
  name: GenericTypeArguments
  nameWithType: InvokeMethod.GenericTypeArguments
  fullName: System.Activities.Statements.InvokeMethod.GenericTypeArguments
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Gli argomenti di tipo generico del metodo contenuto."
  remarks: "Gli argomenti di tipo generico devono essere impostati solo se il metodo chiamato è generico."
  example:
  - "The following code sample demonstrates setting the GenericTypeArguments of an <xref:System.Activities.Statements.InvokeMethod> activity. This example is from the [Using the InvokeMethod Activity](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_InvokeMethod#5](~/add/codesnippet/csharp/invokemethodusage/program.cs#5)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<Type> GenericTypeArguments { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Type}
      description: "Gli argomenti."
  overload: System.Activities.Statements.InvokeMethod.GenericTypeArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.InvokeMethod.MethodName
  id: MethodName
  parent: System.Activities.Statements.InvokeMethod
  langs:
  - csharp
  name: MethodName
  nameWithType: InvokeMethod.MethodName
  fullName: System.Activities.Statements.InvokeMethod.MethodName
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Il nome del metodo da richiamare quando viene eseguita l&quot;attività."
  remarks: "Il metodo richiamato deve essere dichiarato come pubblico."
  example:
  - "The following code sample demonstrates setting the MethodName property of an <xref:System.Activities.Statements.InvokeMethod> activity. This example is from the [Using the InvokeMethod Activity](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_InvokeMethod#1](~/add/codesnippet/csharp/invokemethodusage/program.cs#1)]"
  syntax:
    content: public string MethodName { get; set; }
    return:
      type: System.String
      description: "Il nome del metodo."
  overload: System.Activities.Statements.InvokeMethod.MethodName*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.InvokeMethod.Parameters
  id: Parameters
  parent: System.Activities.Statements.InvokeMethod
  langs:
  - csharp
  name: Parameters
  nameWithType: InvokeMethod.Parameters
  fullName: System.Activities.Statements.InvokeMethod.Parameters
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Raccolta di parametri del metodo da richiamare."
  remarks: "I parametri devono essere aggiunti alla raccolta nello stesso ordine in cui vengono visualizzati nella firma del metodo. Parametri non possono essere rinominati `TargetObject` o `Result`."
  example:
  - "The following code sample demonstrates setting the Parameters of an <xref:System.Activities.Statements.InvokeMethod> activity. This example is from the [Using the InvokeMethod Activity](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_InvokeMethod#1](~/add/codesnippet/csharp/invokemethodusage/program.cs#1)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.Argument> Parameters { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Argument}
      description: "Raccolta di parametri."
  overload: System.Activities.Statements.InvokeMethod.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.InvokeMethod.Result
  id: Result
  parent: System.Activities.Statements.InvokeMethod
  langs:
  - csharp
  name: Result
  nameWithType: InvokeMethod.Result
  fullName: System.Activities.Statements.InvokeMethod.Result
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Il valore restituito dell&quot;operazione del metodo."
  remarks: ''
  example:
  - "The following code sample demonstrates setting the Result property of an <xref:System.Activities.Statements.InvokeMethod> activity. This example is from the [Using the InvokeMethod Activity](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_InvokeMethod#2](~/add/codesnippet/csharp/invokemethodusage/program.cs#2)]"
  syntax:
    content: public System.Activities.OutArgument Result { get; set; }
    return:
      type: System.Activities.OutArgument
      description: "Valore restituito dell&quot;operazione."
  overload: System.Activities.Statements.InvokeMethod.Result*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.InvokeMethod.RunAsynchronously
  id: RunAsynchronously
  parent: System.Activities.Statements.InvokeMethod
  langs:
  - csharp
  name: RunAsynchronously
  nameWithType: InvokeMethod.RunAsynchronously
  fullName: System.Activities.Statements.InvokeMethod.RunAsynchronously
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Ottiene o imposta un valore che indica se il metodo dell&quot;attività viene richiamato in modo asincrono."
  remarks: ''
  example:
  - "The following code sample demonstrates setting the RunAsynchronously property of an <xref:System.Activities.Statements.InvokeMethod> activity. This example is from the [Using the InvokeMethod Activity](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_InvokeMethod#3](~/add/codesnippet/csharp/invokemethodusage/program.cs#3)]"
  syntax:
    content: public bool RunAsynchronously { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il metodo viene eseguito in modo asincrono."
  overload: System.Activities.Statements.InvokeMethod.RunAsynchronously*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.InvokeMethod.TargetObject
  id: TargetObject
  parent: System.Activities.Statements.InvokeMethod
  langs:
  - csharp
  name: TargetObject
  nameWithType: InvokeMethod.TargetObject
  fullName: System.Activities.Statements.InvokeMethod.TargetObject
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Oggetto che contiene il metodo da eseguire."
  remarks: ''
  example:
  - "The following code sample demonstrates setting the TargetObject property of an <xref:System.Activities.Statements.InvokeMethod> activity. This example is from the [Using the InvokeMethod Activity](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_InvokeMethod#3](~/add/codesnippet/csharp/invokemethodusage/program.cs#3)]"
  syntax:
    content: public System.Activities.InArgument TargetObject { get; set; }
    return:
      type: System.Activities.InArgument
      description: "L&quot;oggetto."
  overload: System.Activities.Statements.InvokeMethod.TargetObject*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.InvokeMethod.TargetType
  id: TargetType
  parent: System.Activities.Statements.InvokeMethod
  langs:
  - csharp
  name: TargetType
  nameWithType: InvokeMethod.TargetType
  fullName: System.Activities.Statements.InvokeMethod.TargetType
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Il tipo di <xref:System.Activities.Statements.InvokeMethod.TargetObject*>.</xref:System.Activities.Statements.InvokeMethod.TargetObject*>"
  remarks: "Questo parametro deve essere impostato solo se il metodo richiamato è statico."
  example:
  - "The following code sample demonstrates setting the TargetType property of an <xref:System.Activities.Statements.InvokeMethod> activity. This example is from the [Using the InvokeMethod Activity](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_InvokeMethod#4](~/add/codesnippet/csharp/invokemethodusage/program.cs#4)]"
  syntax:
    content: public Type TargetType { get; set; }
    return:
      type: System.Type
      description: "Il tipo di oggetto di destinazione."
  overload: System.Activities.Statements.InvokeMethod.TargetType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.AsyncCodeActivity
  isExternal: false
  name: System.Activities.AsyncCodeActivity
- uid: System.Activities.Statements.InvokeMethod.#ctor
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: InvokeMethod()
  nameWithType: InvokeMethod.InvokeMethod()
  fullName: System.Activities.Statements.InvokeMethod.InvokeMethod()
- uid: System.Activities.Statements.InvokeMethod.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  nameWithType: InvokeMethod.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  fullName: System.Activities.Statements.InvokeMethod.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Activities.AsyncCodeActivityContext
  parent: System.Activities
  isExternal: false
  name: AsyncCodeActivityContext
  nameWithType: AsyncCodeActivityContext
  fullName: System.Activities.AsyncCodeActivityContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.Statements.InvokeMethod.CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: InvokeMethod.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.Statements.InvokeMethod.CacheMetadata(CodeActivityMetadata)
- uid: System.Activities.CodeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: CodeActivityMetadata
  nameWithType: CodeActivityMetadata
  fullName: System.Activities.CodeActivityMetadata
- uid: System.Activities.Statements.InvokeMethod.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: EndExecute(AsyncCodeActivityContext,IAsyncResult)
  nameWithType: InvokeMethod.EndExecute(AsyncCodeActivityContext,IAsyncResult)
  fullName: System.Activities.Statements.InvokeMethod.EndExecute(AsyncCodeActivityContext,IAsyncResult)
- uid: System.Activities.Statements.InvokeMethod.GenericTypeArguments
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: GenericTypeArguments
  nameWithType: InvokeMethod.GenericTypeArguments
  fullName: System.Activities.Statements.InvokeMethod.GenericTypeArguments
- uid: System.Collections.ObjectModel.Collection{System.Type}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Type>
  nameWithType: Collection<Type>
  fullName: System.Collections.ObjectModel.Collection<System.Type>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.InvokeMethod.MethodName
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: MethodName
  nameWithType: InvokeMethod.MethodName
  fullName: System.Activities.Statements.InvokeMethod.MethodName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Statements.InvokeMethod.Parameters
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: Parameters
  nameWithType: InvokeMethod.Parameters
  fullName: System.Activities.Statements.InvokeMethod.Parameters
- uid: System.Collections.ObjectModel.Collection{System.Activities.Argument}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Argument>
  nameWithType: Collection<Argument>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Argument>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Argument>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Argument
    name: Argument
    nameWithType: Argument
    fullName: Argument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.InvokeMethod.Result
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: Result
  nameWithType: InvokeMethod.Result
  fullName: System.Activities.Statements.InvokeMethod.Result
- uid: System.Activities.OutArgument
  parent: System.Activities
  isExternal: false
  name: OutArgument
  nameWithType: OutArgument
  fullName: System.Activities.OutArgument
- uid: System.Activities.Statements.InvokeMethod.RunAsynchronously
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: RunAsynchronously
  nameWithType: InvokeMethod.RunAsynchronously
  fullName: System.Activities.Statements.InvokeMethod.RunAsynchronously
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Statements.InvokeMethod.TargetObject
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: TargetObject
  nameWithType: InvokeMethod.TargetObject
  fullName: System.Activities.Statements.InvokeMethod.TargetObject
- uid: System.Activities.InArgument
  parent: System.Activities
  isExternal: false
  name: InArgument
  nameWithType: InArgument
  fullName: System.Activities.InArgument
- uid: System.Activities.Statements.InvokeMethod.TargetType
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: TargetType
  nameWithType: InvokeMethod.TargetType
  fullName: System.Activities.Statements.InvokeMethod.TargetType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Statements.InvokeMethod.#ctor*
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: InvokeMethod
  nameWithType: InvokeMethod.InvokeMethod
- uid: System.Activities.Statements.InvokeMethod.BeginExecute*
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: BeginExecute
  nameWithType: InvokeMethod.BeginExecute
- uid: System.Activities.Statements.InvokeMethod.CacheMetadata*
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: CacheMetadata
  nameWithType: InvokeMethod.CacheMetadata
- uid: System.Activities.Statements.InvokeMethod.EndExecute*
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: EndExecute
  nameWithType: InvokeMethod.EndExecute
- uid: System.Activities.Statements.InvokeMethod.GenericTypeArguments*
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: GenericTypeArguments
  nameWithType: InvokeMethod.GenericTypeArguments
- uid: System.Activities.Statements.InvokeMethod.MethodName*
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: MethodName
  nameWithType: InvokeMethod.MethodName
- uid: System.Activities.Statements.InvokeMethod.Parameters*
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: Parameters
  nameWithType: InvokeMethod.Parameters
- uid: System.Activities.Statements.InvokeMethod.Result*
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: Result
  nameWithType: InvokeMethod.Result
- uid: System.Activities.Statements.InvokeMethod.RunAsynchronously*
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: RunAsynchronously
  nameWithType: InvokeMethod.RunAsynchronously
- uid: System.Activities.Statements.InvokeMethod.TargetObject*
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: TargetObject
  nameWithType: InvokeMethod.TargetObject
- uid: System.Activities.Statements.InvokeMethod.TargetType*
  parent: System.Activities.Statements.InvokeMethod
  isExternal: false
  name: TargetType
  nameWithType: InvokeMethod.TargetType
