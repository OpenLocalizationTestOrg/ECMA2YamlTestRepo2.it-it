### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.BaseValidator
  id: BaseValidator
  children:
  - System.Web.UI.WebControls.BaseValidator.#ctor
  - System.Web.UI.WebControls.BaseValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.BaseValidator.AssociatedControlID
  - System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty(System.String,System.String)
  - System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid
  - System.Web.UI.WebControls.BaseValidator.ControlToValidate
  - System.Web.UI.WebControls.BaseValidator.DetermineRenderUplevel
  - System.Web.UI.WebControls.BaseValidator.Display
  - System.Web.UI.WebControls.BaseValidator.EnableClientScript
  - System.Web.UI.WebControls.BaseValidator.Enabled
  - System.Web.UI.WebControls.BaseValidator.ErrorMessage
  - System.Web.UI.WebControls.BaseValidator.EvaluateIsValid
  - System.Web.UI.WebControls.BaseValidator.ForeColor
  - System.Web.UI.WebControls.BaseValidator.GetControlRenderID(System.String)
  - System.Web.UI.WebControls.BaseValidator.GetControlValidationValue(System.String)
  - System.Web.UI.WebControls.BaseValidator.GetValidationProperty(System.Object)
  - System.Web.UI.WebControls.BaseValidator.IsUnobtrusive
  - System.Web.UI.WebControls.BaseValidator.IsValid
  - System.Web.UI.WebControls.BaseValidator.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.BaseValidator.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.BaseValidator.OnUnload(System.EventArgs)
  - System.Web.UI.WebControls.BaseValidator.PropertiesValid
  - System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript
  - System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration
  - System.Web.UI.WebControls.BaseValidator.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.BaseValidator.RenderUplevel
  - System.Web.UI.WebControls.BaseValidator.SetFocusOnError
  - System.Web.UI.WebControls.BaseValidator.Text
  - System.Web.UI.WebControls.BaseValidator.Validate
  - System.Web.UI.WebControls.BaseValidator.ValidationGroup
  langs:
  - csharp
  name: BaseValidator
  nameWithType: BaseValidator
  fullName: System.Web.UI.WebControls.BaseValidator
  type: Class
  summary: "Funge da classe base astratta per i controlli di convalida."
  remarks: "La classe BaseValidator fornisce l&quot;implementazione di base per tutti i controlli di convalida. I controlli di convalida vengono utilizzati per convalidare l&quot;input dell&quot;utente in un controllo di input associato. Quando l&quot;utente immette un valore che si verifica un errore di convalida, il controllo di convalida viene visualizzato un messaggio di errore. Poiché un controllo di convalida è separato dal controllo di input, è possibile posizionare il messaggio di errore in un punto qualsiasi nella pagina relativa al controllo di input. ASP.NET fornisce diversi controlli di convalida che eseguono tipi specifici di convalida. Nella tabella seguente vengono descritti i controlli.      | Controllo di convalida | Descrizione |   |------------------------|-----------------|   | <xref:System.Web.UI.WebControls.CompareValidator>| Convalida di un valore rispetto al valore immesso in un altro controllo di input, con un valore costante o rispetto a un tipo di dati appropriato impostando la proprietà <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A?displayProperty=fullName> <xref:System.Web.UI.WebControls.ValidationCompareOperator?displayProperty=fullName>. |   | <xref:System.Web.UI.WebControls.CustomValidator>| Convalida un valore utilizzando una routine di convalida personalizzato fornito dall&quot;utente. |   | <xref:System.Web.UI.WebControls.RangeValidator>| Verifica se un valore compreso in un intervallo di valori. |   | <xref:System.Web.UI.WebControls.RegularExpressionValidator>| Convalida un valore utilizzando un&quot;espressione regolare. |   | <xref:System.Web.UI.WebControls.RequiredFieldValidator>| Convalida che è stato immesso un valore in un campo obbligatorio. |       I controlli di convalida convalidano sempre il controllo di input associato nel server.</xref:System.Web.UI.WebControls.RequiredFieldValidator> </xref:System.Web.UI.WebControls.RegularExpressionValidator> </xref:System.Web.UI.WebControls.RangeValidator> </xref:System.Web.UI.WebControls.CustomValidator> </xref:System.Web.UI.WebControls.ValidationCompareOperator?displayProperty=fullName> </xref:System.Web.UI.WebControls.CompareValidator.Operator%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.CompareValidator> I controlli di convalida sono anche un&quot;implementazione completa sul lato client che consente ai browser abilitato uno script (ad esempio Microsoft Internet Explorer versione 4.0 e versioni successive) per eseguire la convalida sul client. La convalida lato client migliora il processo di convalida controllando l&quot;input dell&quot;utente prima che venga inviato al server. In questo modo gli errori rilevato sul client prima che il form viene inviato, evitando il round trip delle informazioni necessarie per la convalida sul lato server.       Più controlli di convalida è utilizzabile con un singolo controllo di input per la convalida dei criteri diversi. Ad esempio, è possibile applicare più controlli di convalida su un <xref:System.Web.UI.WebControls.TextBox>controllo.</xref:System.Web.UI.WebControls.TextBox> È possibile utilizzare un <xref:System.Web.UI.WebControls.RangeValidator>controllo per assicurarsi che il valore immesso nel <xref:System.Web.UI.WebControls.TextBox>controllo si trova all&quot;interno di un intervallo di set e un <xref:System.Web.UI.WebControls.RequiredFieldValidator>controllo per assicurarsi che l&quot;utente immette un valore.</xref:System.Web.UI.WebControls.RequiredFieldValidator> </xref:System.Web.UI.WebControls.TextBox> </xref:System.Web.UI.WebControls.RangeValidator>       ASP.NET fornisce numerosi controlli che hanno la possibilità di eseguire il postback al server. Quando uno di questi controlli è relativo `CausesValidation` proprietà impostata su `true`, la convalida viene eseguita quando il controllo esegue il postback al server. I controlli seguenti hanno la possibilità di eseguire il postback al server:- <xref:System.Web.UI.WebControls.BulletedList?displayProperty=fullName>- <xref:System.Web.UI.WebControls.Button?displayProperty=fullName>- <xref:System.Web.UI.WebControls.CheckBox?displayProperty=fullName>- <xref:System.Web.UI.WebControls.CheckBoxList?displayProperty=fullName>- <xref:System.Web.UI.WebControls.DropDownList?displayProperty=fullName>- <xref:System.Web.UI.HtmlControls.HtmlButton?displayProperty=fullName>- <xref:System.Web.UI.HtmlControls.HtmlInputButton?displayProperty=fullName>- <xref:System.Web.UI.HtmlControls.HtmlInputImage?displayProperty=fullName>- <xref:System.Web.UI.WebControls.ImageButton?displayProperty=fullName>- <xref:System.Web.UI.WebControls.LinkButton?displayProperty=fullName>- <xref:System.Web.UI.WebControls.ListBox?displayProperty=fullName>- <xref:System.Web.UI.WebControls.RadioButtonList?displayProperty=fullName>- <xref:System.Web.UI.WebControls.TextBox?displayProperty=fullName>> [!NOTE] > alcuni di questi controlli postback al server solo quando il `AutoPostBack` è impostata su `true`.</xref:System.Web.UI.WebControls.TextBox?displayProperty=fullName> </xref:System.Web.UI.WebControls.RadioButtonList?displayProperty=fullName> </xref:System.Web.UI.WebControls.ListBox?displayProperty=fullName> </xref:System.Web.UI.WebControls.LinkButton?displayProperty=fullName> </xref:System.Web.UI.WebControls.ImageButton?displayProperty=fullName> </xref:System.Web.UI.HtmlControls.HtmlInputImage?displayProperty=fullName> </xref:System.Web.UI.HtmlControls.HtmlInputButton?displayProperty=fullName> </xref:System.Web.UI.HtmlControls.HtmlButton?displayProperty=fullName> </xref:System.Web.UI.WebControls.DropDownList?displayProperty=fullName> </xref:System.Web.UI.WebControls.CheckBoxList?displayProperty=fullName> </xref:System.Web.UI.WebControls.CheckBox?displayProperty=fullName> </xref:System.Web.UI.WebControls.Button?displayProperty=fullName> </xref:System.Web.UI.WebControls.BulletedList?displayProperty=fullName>       Ciascuno di questi controlli è un `ValidationGroup` proprietà che, se impostato, vengono convalidati solo i controlli di convalida all&quot;interno del gruppo specificato quando il controllo genera un messaggio al server. Per raggruppare i controlli di convalida, impostare il <xref:System.Web.UI.WebControls.BaseValidator.ValidationGroup%2A>proprietà di ciascun controllo di convalida per lo stesso valore.</xref:System.Web.UI.WebControls.BaseValidator.ValidationGroup%2A>       Per associare un controllo di input a un controllo di convalida, usare il <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A>proprietà.</xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> Per specificare il testo da visualizzare in un controllo di convalida quando la convalida non riesce, usare il <xref:System.Web.UI.WebControls.BaseValidator.Text%2A>proprietà.</xref:System.Web.UI.WebControls.BaseValidator.Text%2A> È inoltre possibile visualizzare un riepilogo di tutti i controlli che non superano la convalida nella pagina utilizzando un <xref:System.Web.UI.WebControls.ValidationSummary>controllo.</xref:System.Web.UI.WebControls.ValidationSummary> Per specificare il testo da visualizzare un <xref:System.Web.UI.WebControls.ValidationSummary>controllo, utilizzare il <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A>proprietà.</xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> </xref:System.Web.UI.WebControls.ValidationSummary>      > [!NOTE] > Se si imposta la <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A>proprietà senza impostare il <xref:System.Web.UI.WebControls.BaseValidator.Text%2A>proprietà, il valore della <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A>proprietà viene anche visualizzata nel controllo di convalida.</xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> </xref:System.Web.UI.WebControls.BaseValidator.Text%2A> </xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A>       Quando si utilizzano i controlli di convalida, controllare sempre i risultati della convalida sul lato server prima di eseguire qualsiasi elaborazione. Dopo un postback, ma prima che vengano chiamati i metodi di evento, la pagina chiama i controlli di convalida e aggrega i risultati nella <xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>proprietà.</xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName> (È anche possibile chiamare i controlli di convalida in modo esplicito utilizzando il `Validate` metodo.) Nel codice, è necessario verificare che il <xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>restituisce proprietà `true` prima dell&quot;elaborazione dell&quot;input.</xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName> Anche se i browser abilitati script potrebbero impedire un postback sul client se un controllo di convalida ha esito negativo, è sempre opportuno verificare <xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>nel codice server prima di elaborare dati convalidati.</xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>       È possibile eseguire manualmente la convalida. Per convalidare tutti i controlli di convalida della pagina, utilizzare il <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>metodo.</xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> Singoli controlli di convalida possono essere convalidati utilizzando il <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A>metodo del controllo.</xref:System.Web.UI.WebControls.BaseValidator.Validate%2A>      > [!NOTE] > Se si utilizza il <xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>proprietà in un `Page_Load` (metodo), è necessario prima chiamare esplicitamente il <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>metodo.</xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> </xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName> Poiché la convalida viene eseguita dopo il <xref:System.Web.UI.Control.Load?displayProperty=fullName>evento per la pagina, ma prima del gestore eventi per il `Click` o `Command` eventi, il <xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>proprietà non viene aggiornata finché non il <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>metodo viene chiamato.</xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> </xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName> </xref:System.Web.UI.Control.Load?displayProperty=fullName> In alternativa, è possibile inserire il codice nel gestore eventi per il `Click` o `Command` invece dell&quot;evento di `Page_Load` metodo.       Non tutti i controlli server Web supportano i controlli di convalida. I controlli standard che possono essere convalidati con un controllo di convalida sono:- <xref:System.Web.UI.WebControls.DropDownList?displayProperty=fullName>- <xref:System.Web.UI.WebControls.FileUpload?displayProperty=fullName>- <xref:System.Web.UI.WebControls.ListBox?displayProperty=fullName>- <xref:System.Web.UI.WebControls.RadioButtonList?displayProperty=fullName>- <xref:System.Web.UI.WebControls.TextBox?displayProperty=fullName>- <xref:System.Web.UI.HtmlControls.HtmlInputFile?displayProperty=fullName>- <xref:System.Web.UI.HtmlControls.HtmlInputPassword?displayProperty=fullName>- <xref:System.Web.UI.HtmlControls.HtmlInputText?displayProperty=fullName>- <xref:System.Web.UI.HtmlControls.HtmlSelect?displayProperty=fullName>- <xref:System.Web.UI.HtmlControls.HtmlTextArea?displayProperty=fullName>> [!NOTE] > per un controllo di input da convalidare il <xref:System.Web.UI.ValidationPropertyAttribute?displayProperty=fullName>attributo deve essere applicato al controllo.</xref:System.Web.UI.ValidationPropertyAttribute?displayProperty=fullName> </xref:System.Web.UI.HtmlControls.HtmlTextArea?displayProperty=fullName> </xref:System.Web.UI.HtmlControls.HtmlSelect?displayProperty=fullName> </xref:System.Web.UI.HtmlControls.HtmlInputText?displayProperty=fullName> </xref:System.Web.UI.HtmlControls.HtmlInputPassword?displayProperty=fullName> </xref:System.Web.UI.HtmlControls.HtmlInputFile?displayProperty=fullName> </xref:System.Web.UI.WebControls.TextBox?displayProperty=fullName> </xref:System.Web.UI.WebControls.RadioButtonList?displayProperty=fullName> </xref:System.Web.UI.WebControls.ListBox?displayProperty=fullName> </xref:System.Web.UI.WebControls.FileUpload?displayProperty=fullName> </xref:System.Web.UI.WebControls.DropDownList?displayProperty=fullName>      > [!NOTE] > Se si utilizzano i controlli di convalida che derivano da BaseValidator all&quot;interno di un <xref:System.Web.UI.UpdatePanel>di controllo, assicurarsi che il controllo di convalida e il controllo è associato siano nello stesso riquadro.</xref:System.Web.UI.UpdatePanel> Per ulteriori informazioni sull&quot;utilizzo di <xref:System.Web.UI.UpdatePanel>di controllo per gli aggiornamenti parziali della pagina, vedere [Panoramica per il Rendering parziale della pagina](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.UpdatePanel>       Quando la convalida non riesce, è possibile impostare lo stato attivo sul controllo di input associato impostando la <xref:System.Web.UI.WebControls.BaseValidator.SetFocusOnError%2A>proprietà `true`.</xref:System.Web.UI.WebControls.BaseValidator.SetFocusOnError%2A>       Per un elenco di valori di proprietà iniziali per un&quot;istanza di BaseValidator, vedere il <xref:System.Web.UI.WebControls.BaseValidator.%23ctor%2A>costruttore.</xref:System.Web.UI.WebControls.BaseValidator.%23ctor%2A>      ## Accessibilità per informazioni su come configurare il controllo in modo che generi codice conforme agli standard di accessibilità, vedere [accessibilità in Visual Studio e ASP.NET](~/add/includes/ajax-current-ext-md.md) e [controlli ASP.NET e l&quot;accessibilità](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use multiple validation controls to verify that the user enters a valid value in a <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic BaseValidator Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_332_1.aspx)]\n [!code-cs[Classic BaseValidator Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_332_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("ErrorMessage")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.BaseValidatorDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public abstract class BaseValidator : System.Web.UI.WebControls.Label, System.Web.UI.IValidator
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.Label
  implements:
  - System.Web.UI.IValidator
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.Label.AddParsedSubObject(System.Object)
  - System.Web.UI.WebControls.Label.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Label.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Label.SupportsDisabledAttribute
  - System.Web.UI.WebControls.Label.TagKey
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: BaseValidator()
  nameWithType: BaseValidator.BaseValidator()
  fullName: System.Web.UI.WebControls.BaseValidator.BaseValidator()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Web.UI.WebControls.BaseValidator&quot;> </xref> classe."
  remarks: "Questo costruttore non viene chiamato direttamente. I controlli di convalida che ereditano da questa classe è possono chiamare questo costruttore dai propri costruttori per inizializzare le proprietà di base.       La tabella seguente illustra i valori di proprietà iniziali per un&quot;istanza di <xref:System.Web.UI.WebControls.BaseValidator>.</xref:System.Web.UI.WebControls.BaseValidator>      | Proprietà | Il valore iniziale |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A>| `true`|   | <xref:System.Web.UI.WebControls.BaseValidator.ForeColor%2A>| <xref:System.Drawing.Color.Red%2A?displayProperty=fullName>|   | <xref:System.Web.UI.WebControls.BaseValidator.PropertiesValid%2A>| `true`|   | <xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A>| `false`|</xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A></xref:System.Web.UI.WebControls.BaseValidator.PropertiesValid%2A></xref:System.Drawing.Color.Red%2A?displayProperty=fullName></xref:System.Web.UI.WebControls.BaseValidator.ForeColor%2A></xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A>"
  syntax:
    content: protected BaseValidator ();
    parameters: []
  overload: System.Web.UI.WebControls.BaseValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: BaseValidator.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.BaseValidator.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Aggiunge gli stili che è necessario eseguire il rendering per il controllo all&quot;oggetto specificato e gli attributi HTML <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> oggetto."
  remarks: "Il metodo AddAttributesToRender viene utilizzato per eseguire il rendering di attributi del controllo nel tag HTML per il controllo. Questo metodo viene in genere sottoposto a override dagli sviluppatori di controlli nelle classi derivate per inserire gli attributi appropriati e gli stili per il <xref:System.Web.UI.HtmlTextWriter>flusso di output per un controllo.</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Un <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> che rappresenta il flusso di output per il rendering HTML contenuto nel client."
  overload: System.Web.UI.WebControls.BaseValidator.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.AssociatedControlID
  id: AssociatedControlID
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: AssociatedControlID
  nameWithType: BaseValidator.AssociatedControlID
  fullName: System.Web.UI.WebControls.BaseValidator.AssociatedControlID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Questa proprietà non è supportata."
  remarks: "Questa proprietà non è supportata. Questa proprietà è supportata solo in una classe base di <xref:System.Web.UI.WebControls.Label>classe.</xref:System.Web.UI.WebControls.Label>"
  syntax:
    content: public override string AssociatedControlID { get; set; }
    return:
      type: System.String
      description: "Questa proprietà non è supportata e genera sempre un <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Web.UI.WebControls.BaseValidator.AssociatedControlID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "È stato effettuato un tentativo di impostare questa proprietà."
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty(System.String,System.String)
  id: CheckControlValidationProperty(System.String,System.String)
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: CheckControlValidationProperty(String,String)
  nameWithType: BaseValidator.CheckControlValidationProperty(String,String)
  fullName: System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Verifica se il controllo specificato nella pagina e contiene le proprietà di convalida."
  remarks: "Il metodo CheckControlValidationProperty viene utilizzato principalmente da un metodo di supporto di <xref:System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid%2A>metodo per verificare se il controllo specificato nella pagina e contiene le proprietà di convalida.</xref:System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid%2A> Questo metodo non restituisce un valore per segnalare il risultato. Al contrario, genera un&quot;eccezione quando la verifica ha esito negativo.      > [!NOTE] > Questo metodo viene usato principalmente dagli sviluppatori di controlli."
  syntax:
    content: protected void CheckControlValidationProperty (string name, string propertyName);
    parameters:
    - id: name
      type: System.String
      description: "Il controllo da verificare."
    - id: propertyName
      type: System.String
      description: "Testo aggiuntivo per descrivere l&quot;origine dell&quot;eccezione, se viene generata un&quot;eccezione da questo metodo."
  overload: System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The specified control is not found.  \n  \n \\- or -  \n  \n The specified control does not have a <xref href=\"System.Web.UI.ValidationPropertyAttribute\"></xref> attribute associated with it; therefore, it cannot be validated with a validation control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid
  id: ControlPropertiesValid
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: ControlPropertiesValid()
  nameWithType: BaseValidator.ControlPropertiesValid()
  fullName: System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina se il controllo specificato per il <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate*>proprietà è un controllo valido.</xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate*>"
  remarks: "Il metodo ControlPropertiesValid è un metodo di supporto utilizzato principalmente dal <xref:System.Web.UI.WebControls.BaseValidator.PropertiesValid%2A>proprietà per determinare se il <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A>proprietà contiene un controllo input valido.</xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> </xref:System.Web.UI.WebControls.BaseValidator.PropertiesValid%2A> Per un controllo di input valido, il <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A>proprietà deve essere impostata su un valore e tale valore deve essere un controllo nella pagina che supporta la convalida.</xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A>      > [!NOTE] > Questo metodo viene usato principalmente dagli sviluppatori di controlli."
  syntax:
    content: protected virtual bool ControlPropertiesValid ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo specificato dalla <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate*>un controllo valido; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate*>"
  overload: System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "No value is specified for the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate*> property.  \n  \n \\- or -  \n  \n The input control specified by the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate*> property is not found on the page.  \n  \n \\- or -  \n  \n The input control specified by the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate*> property does not have a <xref href=\"System.Web.UI.ValidationPropertyAttribute\"></xref> attribute associated with it; therefore, it cannot be validated with a validation control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.ControlToValidate
  id: ControlToValidate
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: ControlToValidate
  nameWithType: BaseValidator.ControlToValidate
  fullName: System.Web.UI.WebControls.BaseValidator.ControlToValidate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il controllo di input da convalidare."
  remarks: "Utilizzare la proprietà ControlToValidate per specificare il controllo di input da convalidare. Questa proprietà deve essere impostata sull&quot;ID di un controllo di input per tutti i controlli di convalida, ad eccezione di <xref:System.Web.UI.WebControls.CustomValidator>controllo, che può essere vuoto.</xref:System.Web.UI.WebControls.CustomValidator> Se non si specifica un controllo input valido, verrà generata un&quot;eccezione quando viene eseguito il rendering della pagina. L&quot;ID deve fare riferimento a un controllo all&quot;interno del contenitore stesso come il controllo di convalida. Deve essere nella stessa pagina o nel controllo utente, o deve essere nello stesso modello di un controllo basato su modelli.       I controlli standard che possono essere convalidati sono:- <xref:System.Web.UI.WebControls.DropDownList?displayProperty=fullName>- <xref:System.Web.UI.WebControls.FileUpload?displayProperty=fullName>- <xref:System.Web.UI.WebControls.ListBox?displayProperty=fullName>- <xref:System.Web.UI.WebControls.RadioButtonList?displayProperty=fullName>- <xref:System.Web.UI.WebControls.TextBox?displayProperty=fullName>- <xref:System.Web.UI.HtmlControls.HtmlInputFile?displayProperty=fullName>- <xref:System.Web.UI.HtmlControls.HtmlInputPassword?displayProperty=fullName>- <xref:System.Web.UI.HtmlControls.HtmlInputText?displayProperty=fullName>- <xref:System.Web.UI.HtmlControls.HtmlSelect?displayProperty=fullName>- <xref:System.Web.UI.HtmlControls.HtmlTextArea?displayProperty=fullName>> [!NOTE] > per un controllo di input da convalidare il <xref:System.Web.UI.ValidationPropertyAttribute?displayProperty=fullName>attributo deve essere applicato al controllo.</xref:System.Web.UI.ValidationPropertyAttribute?displayProperty=fullName> </xref:System.Web.UI.HtmlControls.HtmlTextArea?displayProperty=fullName> </xref:System.Web.UI.HtmlControls.HtmlSelect?displayProperty=fullName> </xref:System.Web.UI.HtmlControls.HtmlInputText?displayProperty=fullName> </xref:System.Web.UI.HtmlControls.HtmlInputPassword?displayProperty=fullName> </xref:System.Web.UI.HtmlControls.HtmlInputFile?displayProperty=fullName> </xref:System.Web.UI.WebControls.TextBox?displayProperty=fullName> </xref:System.Web.UI.WebControls.RadioButtonList?displayProperty=fullName> </xref:System.Web.UI.WebControls.ListBox?displayProperty=fullName> </xref:System.Web.UI.WebControls.FileUpload?displayProperty=fullName> </xref:System.Web.UI.WebControls.DropDownList?displayProperty=fullName>       Tutti i controlli di convalida, ad eccezione di <xref:System.Web.UI.WebControls.RequiredFieldValidator>di controllo, superano la convalida se il controllo di input specificato dalla proprietà ControlToValidate non contiene testo.</xref:System.Web.UI.WebControls.RequiredFieldValidator> Se si utilizza un <xref:System.Web.UI.WebControls.CustomValidator>controllo lato client e lato server funzioni di convalida non vengono chiamate.</xref:System.Web.UI.WebControls.CustomValidator>       Questa proprietà non può essere impostata da temi o temi di fogli di stile. Per ulteriori informazioni, vedere <xref:System.Web.UI.ThemeableAttribute>e [ASP.NET temi e interfacce](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the ControlToValidate property to specify the input control to validate.  \n  \n [!code-vb[Classic BaseValidator Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_361_1.aspx)]\n [!code-cs[Classic BaseValidator Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_361_1.aspx)]"
  syntax:
    content: public string ControlToValidate { get; set; }
    return:
      type: System.String
      description: "Controllo di input da convalidare. Il valore predefinito è &lt;xref:System.String?displayProperty=fullName&gt;, a indicare che questa proprietà non è impostata."
  overload: System.Web.UI.WebControls.BaseValidator.ControlToValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.DetermineRenderUplevel
  id: DetermineRenderUplevel
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: DetermineRenderUplevel()
  nameWithType: BaseValidator.DetermineRenderUplevel()
  fullName: System.Web.UI.WebControls.BaseValidator.DetermineRenderUplevel()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina se il controllo di convalida può eseguire la convalida lato client."
  remarks: "Il metodo DetermineRenderUplevel è una funzione di supporto che viene utilizzata principalmente dal <xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A>proprietà per determinare se il browser del client supporta client script</xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A> Per questa proprietà restituire `true`, devono essere soddisfatte le condizioni seguenti:-il browser ha abilitato lo script client.      -La <xref:System.Web.HttpBrowserCapabilitiesBase.W3CDomVersion%2A>proprietà del <xref:System.Web.HttpBrowserCapabilitiesBase>oggetto archiviato nel <xref:System.Web.HttpRequest.Browser%2A?displayProperty=fullName>proprietà è 1 o versione successiva.</xref:System.Web.HttpRequest.Browser%2A?displayProperty=fullName> </xref:System.Web.HttpBrowserCapabilitiesBase> </xref:System.Web.HttpBrowserCapabilitiesBase.W3CDomVersion%2A>      -La <xref:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion%2A>proprietà del <xref:System.Web.HttpBrowserCapabilitiesBase>oggetto archiviato nel <xref:System.Web.HttpRequest.Browser%2A?displayProperty=fullName>è 1.2 o successiva.</xref:System.Web.HttpRequest.Browser%2A?displayProperty=fullName> </xref:System.Web.HttpBrowserCapabilitiesBase> </xref:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion%2A>          > [!NOTE] > Questo metodo viene usato principalmente dagli sviluppatori di controlli."
  syntax:
    content: protected virtual bool DetermineRenderUplevel ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo di convalida può eseguire la convalida lato client. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BaseValidator.DetermineRenderUplevel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.Display
  id: Display
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: Display
  nameWithType: BaseValidator.Display
  fullName: System.Web.UI.WebControls.BaseValidator.Display
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il comportamento di visualizzazione del messaggio di errore in un controllo di convalida."
  remarks: "Utilizzare la proprietà di visualizzazione per specificare il comportamento di visualizzazione del messaggio di errore nel controllo di convalida. Nella tabella seguente sono elencati i diversi valori che possono essere utilizzati.      | Visualizzare il comportamento | Descrizione |   |----------------------|-----------------|   | `None`| Il messaggio di convalida non viene mai visualizzato inline. |   | `Static`| Lo spazio per il messaggio di convalida è allocato nel layout della pagina. |   | `Dynamic`| Lo spazio per il messaggio di convalida in modo dinamico viene aggiunto alla pagina se la convalida non riesce. |      > [!NOTE] > Il comportamento di visualizzazione varia a seconda se viene eseguita la convalida lato client. Se la convalida lato client non è attiva (perché il browser non lo supporta o perché è stata disabilitata tramite il <xref:System.Web.UI.Page.ClientTarget%2A?displayProperty=fullName>direttiva page o <xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A>proprietà), `ValidatorDisplay.Static` e `ValidatorDisplay.Dynamic` si comportano allo stesso modo: il messaggio di errore occupa spazio solo se viene visualizzato.</xref:System.Web.UI.WebControls.BaseValidator.EnableClientScript%2A> </xref:System.Web.UI.Page.ClientTarget%2A?displayProperty=fullName> La possibilità di allocare dinamicamente spazio per il messaggio quando non viene visualizzata (`ValidatorDisplay.Dynamic`) funziona solo con la convalida lato client.       Questa proprietà non può essere impostata da temi o temi di fogli di stile. Per ulteriori informazioni, vedere <xref:System.Web.UI.ThemeableAttribute>e [ASP.NET temi e interfacce](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the Display property to specify that space for the validation message is added to the Web page dynamically when validation fails.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic BaseValidator Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1044_1.aspx)]\n [!code-cs[Classic BaseValidator Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1044_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ValidatorDisplay Display { get; set; }
    return:
      type: System.Web.UI.WebControls.ValidatorDisplay
      description: "Uno del <xref href=&quot;System.Web.UI.WebControls.ValidatorDisplay&quot;> </xref> valori. Il valore predefinito è <xref uid=&quot;langword_csharp_Static&quot; name=&quot;Static&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BaseValidator.Display*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il valore specificato non è uno del <xref href=&quot;System.Web.UI.WebControls.ValidatorDisplay&quot;> </xref> valori."
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.EnableClientScript
  id: EnableClientScript
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: EnableClientScript
  nameWithType: BaseValidator.EnableClientScript
  fullName: System.Web.UI.WebControls.BaseValidator.EnableClientScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se la convalida lato client è abilitata."
  remarks: "Utilizzare la proprietà EnableClientScript per specificare se la convalida lato client è abilitata.       I controlli di convalida sempre eseguono la convalida sul server. Hanno inoltre un&quot;implementazione completa sul lato client che consente ai browser supportati DHTML (ad esempio Microsoft Internet Explorer 4.0 e versioni successive) per eseguire la convalida sul client. La convalida lato client migliora il processo di convalida controllando l&quot;input dell&quot;utente prima che venga inviato al server. In questo modo gli errori rilevato sul client prima che il form viene inviato, evitando il round trip delle informazioni necessarie per la convalida sul lato server.       Per impostazione predefinita, questo valore è impostato su `true`, che consente la convalida lato client se il browser lo consente. È possibile disabilitare la convalida lato client in modo da controlli. Ciò risulta utile se l&quot;aggiornamento dinamico sul client crea problemi con il layout della pagina, oppure se si desidera eseguire codice del server prima di convalida.       Questa proprietà non può essere impostata da temi o temi di fogli di stile. Per ulteriori informazioni, vedere <xref:System.Web.UI.ThemeableAttribute>e [ASP.NET temi e interfacce](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the EnableClientScript property to disable client-side validation so that the random numbers can be generated on the server.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic BaseValidator Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_809_1.aspx)]\n [!code-cs[Classic BaseValidator Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_809_1.aspx)]"
  syntax:
    content: public bool EnableClientScript { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è abilitata la convalida lato client. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BaseValidator.EnableClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.Enabled
  id: Enabled
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: Enabled
  nameWithType: BaseValidator.Enabled
  fullName: System.Web.UI.WebControls.BaseValidator.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se il controllo di convalida è abilitato."
  remarks: "Utilizzare la proprietà Enabled per specificare se il controllo di convalida è abilitato. È possibile disabilitare il controllo di convalida impostando questa proprietà su `false`.       Impostazione di <xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName>o la proprietà Enabled `false` impedirà l&quot;esecuzione della convalida.</xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName> In questo modo il <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A>proprietà in modo che restituisca sempre `true`.</xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A>       La proprietà Enabled è leggermente diversa dal <xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName>proprietà.</xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName> Se il <xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName>per un controllo di convalida è impostata su `true`, ma la proprietà Enabled è impostata su `false`, il controllo di convalida viene comunque eseguito il rendering per la convalida lato client, ma in uno stato disabilitato.</xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName> Quindi è possibile abilitare nuovamente il controllo di convalida sul client mediante script DHTML."
  example:
  - "The following code example demonstrates how to use the Enabled property to enable or disable the validation controls on the Web page using server-side code.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic BaseValidator.Enabled Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_938_1.aspx)]\n [!code-vb[Classic BaseValidator.Enabled Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_938_1.aspx)]  \n  \n The following code example demonstrates how to use the Enabled property to enable or disable the validation controls on the Web page using client-side code.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public override bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo di convalida è abilitato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BaseValidator.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.ErrorMessage
  id: ErrorMessage
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: ErrorMessage
  nameWithType: BaseValidator.ErrorMessage
  fullName: System.Web.UI.WebControls.BaseValidator.ErrorMessage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il testo del messaggio di errore visualizzato un <xref href=&quot;System.Web.UI.WebControls.ValidationSummary&quot;> </xref> controllare quando la convalida ha esito negativo."
  remarks: "Quando si utilizza un <xref:System.Web.UI.WebControls.ValidationSummary>di controllo, utilizzare la proprietà ErrorMessage per specificare il testo da visualizzare nel <xref:System.Web.UI.WebControls.ValidationSummary>controllare quando la convalida ha esito negativo per il controllo di convalida corrente.</xref:System.Web.UI.WebControls.ValidationSummary> </xref:System.Web.UI.WebControls.ValidationSummary> Per specificare il testo da visualizzare nel controllo di convalida se stesso, usare il <xref:System.Web.UI.WebControls.BaseValidator.Text%2A>proprietà.</xref:System.Web.UI.WebControls.BaseValidator.Text%2A>      > [!NOTE] > Se si imposta la proprietà ErrorMessage senza impostare il <xref:System.Web.UI.WebControls.BaseValidator.Text%2A>proprietà, il valore della proprietà viene anche visualizzata nel controllo di convalida il messaggio di errore.</xref:System.Web.UI.WebControls.BaseValidator.Text%2A>       Il valore di questa proprietà, se impostato, può essere salvato automaticamente in un file di risorse utilizzando uno strumento di progettazione. Per ulteriori informazioni, vedere <xref:System.ComponentModel.LocalizableAttribute>e [globalizzazione e localizzazione ASP.NET](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the ErrorMessage property to specify different messages for the <xref:System.Web.UI.WebControls.ValidationSummary> control and the <xref:System.Web.UI.WebControls.RequiredFieldValidator> and <xref:System.Web.UI.WebControls.CompareValidator> controls.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic BaseValidator Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1088_1.aspx)]\n [!code-cs[Classic BaseValidator Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1088_1.aspx)]"
  syntax:
    content: public string ErrorMessage { get; set; }
    return:
      type: System.String
      description: "Il messaggio di errore visualizzato in un <xref href=&quot;System.Web.UI.WebControls.ValidationSummary&quot;> </xref> controllare quando la convalida ha esito negativo. Il valore predefinito è una stringa vuota (&quot;&quot;), a indicare che questa proprietà non è impostata."
  overload: System.Web.UI.WebControls.BaseValidator.ErrorMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.EvaluateIsValid
  id: EvaluateIsValid
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: EvaluateIsValid()
  nameWithType: BaseValidator.EvaluateIsValid()
  fullName: System.Web.UI.WebControls.BaseValidator.EvaluateIsValid()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Quando sottoposto a override in una classe derivata, questo metodo contiene il codice per determinare se il valore nel controllo di input è valido."
  remarks: "Utilizzare il metodo EvaluateIsValid per determinare se il valore nel controllo di input specificato per il <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A>proprietà è valida.</xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A>      > [!NOTE] > Questo metodo viene usato principalmente dagli sviluppatori di controlli."
  syntax:
    content: protected abstract bool EvaluateIsValid ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore nel controllo di input è valido. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BaseValidator.EvaluateIsValid*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.ForeColor
  id: ForeColor
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: ForeColor
  nameWithType: BaseValidator.ForeColor
  fullName: System.Web.UI.WebControls.BaseValidator.ForeColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il colore del messaggio visualizzato quando la convalida non riesce."
  remarks: "Utilizzare la proprietà ForeColor per specificare un colore del testo personalizzato per il messaggio visualizzato nel controllo di convalida quando la convalida non riesce."
  example:
  - "The following code example demonstrates how to use the ForeColor property to display the validation message in blue.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic BaseValidator.ForeColor Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_692_1.aspx)]\n [!code-vb[Classic BaseValidator.ForeColor Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_692_1.aspx)]"
  syntax:
    content: public override System.Drawing.Color ForeColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "Oggetto <xref href=&quot;System.Drawing.Color&quot;> </xref> che rappresenta il colore del messaggio visualizzato quando la convalida non riesce. Il valore predefinito è &lt;xref:System.Drawing.Color.Red%2A?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.BaseValidator.ForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.GetControlRenderID(System.String)
  id: GetControlRenderID(System.String)
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: GetControlRenderID(String)
  nameWithType: BaseValidator.GetControlRenderID(String)
  fullName: System.Web.UI.WebControls.BaseValidator.GetControlRenderID(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene l&quot;ID client del controllo specificato."
  remarks: "Utilizzare il metodo GetControlRenderID per ottenere l&quot;ID client del controllo specificato. Per ulteriori informazioni, vedere <xref:System.Web.UI.Control.ClientID%2A>.</xref:System.Web.UI.Control.ClientID%2A>      > [!NOTE] > Questo metodo viene usato principalmente dagli sviluppatori di controlli."
  syntax:
    content: protected string GetControlRenderID (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del controllo per ottenere l&quot;ID client."
    return:
      type: System.String
      description: "L&quot;ID client del controllo specificato."
  overload: System.Web.UI.WebControls.BaseValidator.GetControlRenderID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.GetControlValidationValue(System.String)
  id: GetControlValidationValue(System.String)
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: GetControlValidationValue(String)
  nameWithType: BaseValidator.GetControlValidationValue(String)
  fullName: System.Web.UI.WebControls.BaseValidator.GetControlValidationValue(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene il valore associato al controllo di input specificato."
  remarks: "Utilizzare il metodo GetControlValidationValue per ottenere il valore associato al controllo di input specificato, indipendentemente dal tipo di controllo. Ad esempio, è possibile utilizzare questo metodo per ottenere il valore di un <xref:System.Web.UI.WebControls.TextBox>controllo, nonché il valore dell&quot;elemento selezionato da un <xref:System.Web.UI.WebControls.ListBox>controllo.</xref:System.Web.UI.WebControls.ListBox> </xref:System.Web.UI.WebControls.TextBox> Se il controllo specificato non viene trovato, `null` viene restituito.      > [!NOTE] > Questo metodo viene usato principalmente dagli sviluppatori di controlli."
  syntax:
    content: protected string GetControlValidationValue (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome del controllo di input da cui ottenere il valore."
    return:
      type: System.String
      description: "Il valore associato al controllo di input specificato."
  overload: System.Web.UI.WebControls.BaseValidator.GetControlValidationValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.GetValidationProperty(System.Object)
  id: GetValidationProperty(System.Object)
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: GetValidationProperty(Object)
  nameWithType: BaseValidator.GetValidationProperty(Object)
  fullName: System.Web.UI.WebControls.BaseValidator.GetValidationProperty(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina la proprietà di convalida di un controllo (se presente)."
  remarks: "Il metodo GetValidationProperty è una funzione di supporto che ottiene la proprietà di convalida del controllo di input specificato.      > [!NOTE] > Questo metodo viene usato principalmente dagli sviluppatori di controlli."
  syntax:
    content: public static System.ComponentModel.PropertyDescriptor GetValidationProperty (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Oggetto &lt;xref:System.Object?displayProperty=fullName&gt; che rappresenta il controllo per ottenere la proprietà di convalida."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "Oggetto <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> che contiene la proprietà di convalida del controllo."
  overload: System.Web.UI.WebControls.BaseValidator.GetValidationProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.IsUnobtrusive
  id: IsUnobtrusive
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: IsUnobtrusive
  nameWithType: BaseValidator.IsUnobtrusive
  fullName: System.Web.UI.WebControls.BaseValidator.IsUnobtrusive
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il controllo genera JavaScript discreto."
  remarks: "Questa proprietà restituisce `false` se il <xref:System.Web.UI.Page.UnobtrusiveValidationMode%2A>valore della proprietà è <xref:System.Web.UI.UnobtrusiveValidationMode>; in caso contrario, questa proprietà restituisce `true` .</xref:System.Web.UI.UnobtrusiveValidationMode> </xref:System.Web.UI.Page.UnobtrusiveValidationMode%2A>"
  syntax:
    content: protected bool IsUnobtrusive { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo genera JavaScript discreto. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BaseValidator.IsUnobtrusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.IsValid
  id: IsValid
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: IsValid
  nameWithType: BaseValidator.IsValid
  fullName: System.Web.UI.WebControls.BaseValidator.IsValid
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se il controllo di input supera la convalida."
  remarks: "Utilizzare la proprietà IsValid per determinare se il controllo di input supera la convalida.      > [!CAUTION] > Perché il valore predefinito di questa proprietà è `true`, verrà restituito `true` se questa proprietà richiesta prima della convalida. Ad esempio, questa situazione può verificarsi se si tenta di utilizzare questa proprietà nel <xref:System.Web.UI.Control.Load?displayProperty=fullName>evento di una pagina.</xref:System.Web.UI.Control.Load?displayProperty=fullName>       La proprietà IsValid viene valutata solo quando il <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A>metodo viene chiamato.</xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> È possibile chiamare il <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A>metodo per ogni convalida controllare nella pagina singolarmente o chiamare tutti gli elementi in una sola volta utilizzando il <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>metodo.</xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> Controlli pulsante con i relativi `CausesValidation` proprietà impostata su `true` chiamerà anche il <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>metodo.</xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>      > [!NOTE] > È possibile modificare il valore di questa proprietà manualmente dopo la convalida ha avuto luogo. Ciò consente di eseguire l&quot;override del risultato della convalida, se necessario.       Il <xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>per la pagina è impostata su `true` solo se la proprietà IsValid per ogni controllo di convalida nella pagina anche è impostata su `true`.</xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>       Questa proprietà non può essere impostata da temi o temi di fogli di stile. Per ulteriori informazioni, vedere <xref:System.Web.UI.ThemeableAttribute>e [ASP.NET temi e interfacce](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the IsValid property to determine whether the associated input control passes validation.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[BaseValidatorIsValid#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_561_1.aspx)]\n [!code-cs[BaseValidatorIsValid#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_561_1.aspx)]"
  syntax:
    content: public bool IsValid { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo di input supera la convalida; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BaseValidator.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: BaseValidator.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.BaseValidator.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> evento."
  remarks: "Dopo che questo metodo chiama il controllo di base <xref:System.Web.UI.Control.OnInit%2A>metodo, imposta la <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>proprietà <xref:System.Drawing.Color.Red%2A>Se vengono soddisfatte le condizioni seguenti: - il <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>proprietà non è già impostata.</xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> </xref:System.Drawing.Color.Red%2A> </xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> </xref:System.Web.UI.Control.OnInit%2A>      -La <xref:System.Web.UI.Control.RenderingCompatibility%2A>proprietà indica una versione ASP.NET precedente alla `4.0`.</xref:System.Web.UI.Control.RenderingCompatibility%2A> Per impostazione predefinita, i controlli di convalida in ASP.NET 4 e versioni successive vengono visualizzati gli errori in rosso. Per informazioni su come controllare l&quot;aspetto visivo dei controlli di convalida, vedere [convalida dell&quot;Input utente in ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md).       Questo metodo registra anche il controllo di convalida della pagina."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Oggetto &lt;xref:System.EventArgs?displayProperty=fullName&gt; che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.BaseValidator.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: BaseValidator.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.BaseValidator.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> evento."
  remarks: "Questo metodo è stato sostituito per controllare il browser client e configurare il controllo di convalida per la compatibilità prima del rendering.       Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: generazione di un evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Il metodo OnPreRender consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Oggetto &lt;xref:System.EventArgs?displayProperty=fullName&gt; che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.BaseValidator.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: BaseValidator.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.BaseValidator.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Genera il <xref href=&quot;System.Web.UI.Control.Unload&quot;> </xref> evento."
  remarks: "Questo metodo è stato sostituito per annullare la registrazione di controllo di convalida della pagina.       Viene generato un evento richiama il gestore dell&quot;evento tramite un delegato. Per ulteriori informazioni, vedere [NIB: generazione di un evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Il metodo OnUnload consente inoltre alle classi derivate di gestire l&quot;evento senza associare un delegato. Questa è la tecnica consigliata per la gestione dell&quot;evento in una classe derivata."
  syntax:
    content: protected override void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Oggetto &lt;xref:System.EventArgs?displayProperty=fullName&gt; che contiene i dati dell&quot;evento."
  overload: System.Web.UI.WebControls.BaseValidator.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.PropertiesValid
  id: PropertiesValid
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: PropertiesValid
  nameWithType: BaseValidator.PropertiesValid
  fullName: System.Web.UI.WebControls.BaseValidator.PropertiesValid
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il controllo specificato per il <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate*>proprietà è un controllo valido.</xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate*>"
  remarks: "Utilizzare la proprietà PropertiesValid per determinare se il <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A>proprietà contiene un controllo input valido.</xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> Per un controllo di input valido, il <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A>proprietà deve essere impostata su un controllo nella pagina.</xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A>      > [!NOTE] > Questa proprietà viene usata principalmente dagli sviluppatori di controlli."
  syntax:
    content: protected bool PropertiesValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il controllo specificato dalla <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate*>un controllo valido; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate*>"
  overload: System.Web.UI.WebControls.BaseValidator.PropertiesValid*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "No value is specified in the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate*> property.  \n  \n \\- or -  \n  \n The input control specified by the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate*> property is not found on the page."
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript
  id: RegisterValidatorCommonScript
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: RegisterValidatorCommonScript()
  nameWithType: BaseValidator.RegisterValidatorCommonScript()
  fullName: System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Registra il codice della pagina per la convalida lato client."
  remarks: "Utilizzare il metodo RegisterValidatorCommonScript per registrare il codice della pagina per eseguire la convalida lato client.      > [!NOTE] > Questo metodo viene usato principalmente dagli sviluppatori di controlli."
  syntax:
    content: protected void RegisterValidatorCommonScript ();
    parameters: []
  overload: System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration
  id: RegisterValidatorDeclaration
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: RegisterValidatorDeclaration()
  nameWithType: BaseValidator.RegisterValidatorDeclaration()
  fullName: System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Registra una dichiarazione di matrice ECMAScript mediante il nome della matrice <xref uid=&quot;langword_csharp_Page_Validators&quot; name=&quot;Page_Validators&quot; href=&quot;&quot;> </xref>."
  remarks: "Utilizzare il metodo RegisterValidatorDeclaration per registrare una dichiarazione di matrice ECMAScript mediante il nome della matrice `Page_Validators`.      > [!NOTE] > Questo metodo viene usato principalmente dagli sviluppatori di controlli."
  syntax:
    content: protected virtual void RegisterValidatorDeclaration ();
    parameters: []
  overload: System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: BaseValidator.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.BaseValidator.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Visualizza il controllo sul client."
  remarks: "Il metodo di rendering viene utilizzato per generare il markup HTML per un controllo di convalida."
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Oggetto <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> che contiene il flusso di output per il rendering sul client."
  overload: System.Web.UI.WebControls.BaseValidator.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.RenderUplevel
  id: RenderUplevel
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: RenderUplevel
  nameWithType: BaseValidator.RenderUplevel
  fullName: System.Web.UI.WebControls.BaseValidator.RenderUplevel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene un valore che indica se il browser del client supporta il rendering &quot;livello superiore&quot;."
  remarks: "Utilizzare la proprietà RenderUplevel per determinare se il browser del client supporta il rendering &quot;livello superiore&quot;. Per un browser supportare il rendering &quot;livello superiore&quot;, deve supportare Servizio autenticazione Internet (DOM, Document Object Model) di Microsoft Internet Explorer versione 4 o versione successiva e versione di ECMAScript 1.2 o successiva.      > [!NOTE] > Questa proprietà viene usata principalmente dagli sviluppatori di controlli."
  syntax:
    content: protected bool RenderUplevel { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il browser supporta il rendering di &quot;livello superiore&quot;; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BaseValidator.RenderUplevel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.SetFocusOnError
  id: SetFocusOnError
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: SetFocusOnError
  nameWithType: BaseValidator.SetFocusOnError
  fullName: System.Web.UI.WebControls.BaseValidator.SetFocusOnError
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta un valore che indica se lo stato attivo è impostato per il controllo specificato per il <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate*>proprietà durante la convalida non riesce.</xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate*>"
  remarks: "Utilizzare la proprietà SetFocusOnError per specificare se lo stato attivo viene impostato automaticamente sul controllo specificato per il <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A>proprietà quando il controllo di convalida ha esito negativo.</xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> Ciò consente all&quot;utente di aggiornare rapidamente il controllo appropriato.       Se l&quot;esito negativo di più controlli di convalida e questa proprietà è impostata su `true`, il controllo specificato nella <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A>proprietà per il primo controllo di convalida riceve lo stato attivo.</xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A>       Questa proprietà non può essere impostata da temi o temi di fogli di stile. Per ulteriori informazioni, vedere <xref:System.Web.UI.ThemeableAttribute>e [ASP.NET temi e interfacce](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  syntax:
    content: public bool SetFocusOnError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per impostare lo stato attivo sul controllo specificato da <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate*>quando la convalida non riesce; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate*> Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BaseValidator.SetFocusOnError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.Text
  id: Text
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: Text
  nameWithType: BaseValidator.Text
  fullName: System.Web.UI.WebControls.BaseValidator.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il testo visualizzato nel controllo di convalida quando la convalida non riesce."
  remarks: "Utilizzare la proprietà di testo per specificare il testo da visualizzare in un controllo di convalida quando la convalida non riesce. È inoltre possibile visualizzare un riepilogo di tutti i controlli che non superano la convalida nella pagina utilizzando un <xref:System.Web.UI.WebControls.ValidationSummary>controllo.</xref:System.Web.UI.WebControls.ValidationSummary> Per specificare il testo da visualizzare un <xref:System.Web.UI.WebControls.ValidationSummary>controllo, utilizzare il <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A>proprietà.</xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> </xref:System.Web.UI.WebControls.ValidationSummary>      > [!NOTE] > Se si imposta la <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A>proprietà senza impostare la proprietà di testo, il valore di <xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A>proprietà viene anche visualizzata nel controllo di convalida.</xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A> </xref:System.Web.UI.WebControls.BaseValidator.ErrorMessage%2A>"
  syntax:
    content: public override string Text { get; set; }
    return:
      type: System.String
      description: "Il testo visualizzato nel controllo di convalida quando la convalida non riesce. Il valore predefinito è una stringa vuota (&quot;&quot;), a indicare che questa proprietà non è impostata."
  overload: System.Web.UI.WebControls.BaseValidator.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.Validate
  id: Validate
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: Validate()
  nameWithType: BaseValidator.Validate()
  fullName: System.Web.UI.WebControls.BaseValidator.Validate()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Esegue la convalida del controllo di input associato e gli aggiornamenti di <xref:System.Web.UI.WebControls.BaseValidator.IsValid*>proprietà.</xref:System.Web.UI.WebControls.BaseValidator.IsValid*>"
  remarks: "Utilizzare il metodo Validate per eseguire la convalida del controllo di input associato. Questo metodo consente di eseguire la convalida a livello di codice nel controllo di input. Il <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A>proprietà viene aggiornata automaticamente con i risultati della convalida.</xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A>"
  example:
  - For an example of the Validate method used in a derived class, see the <xref:System.Web.UI.WebControls.CompareValidator> class overview.
  syntax:
    content: public void Validate ();
    parameters: []
  overload: System.Web.UI.WebControls.BaseValidator.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BaseValidator.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.WebControls.BaseValidator
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: BaseValidator.ValidationGroup
  fullName: System.Web.UI.WebControls.BaseValidator.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ottiene o imposta il nome del gruppo di convalida a cui appartiene questo controllo di convalida."
  remarks: "ASP.NET fornisce numerosi controlli che hanno la possibilità di eseguire il postback al server. Quando uno di questi controlli è relativo `CausesValidation` proprietà impostata su `true`, la convalida viene eseguita quando il controllo esegue il postback al server. I controlli seguenti hanno la possibilità di eseguire il postback al server:- <xref:System.Web.UI.WebControls.BulletedList?displayProperty=fullName>- <xref:System.Web.UI.WebControls.Button?displayProperty=fullName>- <xref:System.Web.UI.WebControls.CheckBox?displayProperty=fullName>- <xref:System.Web.UI.WebControls.CheckBoxList?displayProperty=fullName>- <xref:System.Web.UI.WebControls.DropDownList?displayProperty=fullName>- <xref:System.Web.UI.HtmlControls.HtmlButton?displayProperty=fullName>- <xref:System.Web.UI.HtmlControls.HtmlInputButton?displayProperty=fullName>- <xref:System.Web.UI.HtmlControls.HtmlInputImage?displayProperty=fullName>- <xref:System.Web.UI.WebControls.ImageButton?displayProperty=fullName>- <xref:System.Web.UI.WebControls.LinkButton?displayProperty=fullName>- <xref:System.Web.UI.WebControls.ListBox?displayProperty=fullName>- <xref:System.Web.UI.WebControls.RadioButtonList?displayProperty=fullName>- <xref:System.Web.UI.WebControls.TextBox?displayProperty=fullName>> [!NOTE] > alcuni di questi controlli postback al server solo quando il `AutoPostBack` è impostata su `true`.</xref:System.Web.UI.WebControls.TextBox?displayProperty=fullName> </xref:System.Web.UI.WebControls.RadioButtonList?displayProperty=fullName> </xref:System.Web.UI.WebControls.ListBox?displayProperty=fullName> </xref:System.Web.UI.WebControls.LinkButton?displayProperty=fullName> </xref:System.Web.UI.WebControls.ImageButton?displayProperty=fullName> </xref:System.Web.UI.HtmlControls.HtmlInputImage?displayProperty=fullName> </xref:System.Web.UI.HtmlControls.HtmlInputButton?displayProperty=fullName> </xref:System.Web.UI.HtmlControls.HtmlButton?displayProperty=fullName> </xref:System.Web.UI.WebControls.DropDownList?displayProperty=fullName> </xref:System.Web.UI.WebControls.CheckBoxList?displayProperty=fullName> </xref:System.Web.UI.WebControls.CheckBox?displayProperty=fullName> </xref:System.Web.UI.WebControls.Button?displayProperty=fullName> </xref:System.Web.UI.WebControls.BulletedList?displayProperty=fullName>       Ciascuno di questi controlli è un `ValidationGroup` proprietà che, se impostato, vengono convalidati solo i controlli di convalida all&quot;interno del gruppo specificato quando il controllo genera un messaggio al server. Utilizzare la proprietà ValidationGroup per assegnare un controllo di convalida a un gruppo di convalida. Il <xref:System.Web.UI.Page>anche classe espone un <xref:System.Web.UI.Page.GetValidators%2A>(metodo) e un <xref:System.Web.UI.Page.Validate%2A>metodo che accetta un parametro di input ValidationGroup.</xref:System.Web.UI.Page.Validate%2A> </xref:System.Web.UI.Page.GetValidators%2A> </xref:System.Web.UI.Page>       Questa proprietà non può essere impostata da temi o temi di fogli di stile. Per ulteriori informazioni, vedere <xref:System.Web.UI.ThemeableAttribute>e [ASP.NET temi e interfacce](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the ValidationGroup property to assign a validation control to a group.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[BaseValidatorValidationGroup#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_401_1.aspx)]\n [!code-cs[BaseValidatorValidationGroup#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_401_1.aspx)]"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "Il nome del gruppo di convalida a cui appartiene questo controllo di convalida. Il valore predefinito è una stringa vuota (&quot;&quot;), a indicare che questa proprietà non è impostata."
  overload: System.Web.UI.WebControls.BaseValidator.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Label
  isExternal: false
  name: System.Web.UI.WebControls.Label
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.BaseValidator.#ctor
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: BaseValidator()
  nameWithType: BaseValidator.BaseValidator()
  fullName: System.Web.UI.WebControls.BaseValidator.BaseValidator()
- uid: System.Web.UI.WebControls.BaseValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: BaseValidator.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.BaseValidator.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.BaseValidator.AssociatedControlID
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: AssociatedControlID
  nameWithType: BaseValidator.AssociatedControlID
  fullName: System.Web.UI.WebControls.BaseValidator.AssociatedControlID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty(System.String,System.String)
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: CheckControlValidationProperty(String,String)
  nameWithType: BaseValidator.CheckControlValidationProperty(String,String)
  fullName: System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty(String,String)
- uid: System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: ControlPropertiesValid()
  nameWithType: BaseValidator.ControlPropertiesValid()
  fullName: System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.BaseValidator.ControlToValidate
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: ControlToValidate
  nameWithType: BaseValidator.ControlToValidate
  fullName: System.Web.UI.WebControls.BaseValidator.ControlToValidate
- uid: System.Web.UI.WebControls.BaseValidator.DetermineRenderUplevel
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: DetermineRenderUplevel()
  nameWithType: BaseValidator.DetermineRenderUplevel()
  fullName: System.Web.UI.WebControls.BaseValidator.DetermineRenderUplevel()
- uid: System.Web.UI.WebControls.BaseValidator.Display
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: Display
  nameWithType: BaseValidator.Display
  fullName: System.Web.UI.WebControls.BaseValidator.Display
- uid: System.Web.UI.WebControls.ValidatorDisplay
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ValidatorDisplay
  nameWithType: ValidatorDisplay
  fullName: System.Web.UI.WebControls.ValidatorDisplay
- uid: System.Web.UI.WebControls.BaseValidator.EnableClientScript
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: EnableClientScript
  nameWithType: BaseValidator.EnableClientScript
  fullName: System.Web.UI.WebControls.BaseValidator.EnableClientScript
- uid: System.Web.UI.WebControls.BaseValidator.Enabled
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: Enabled
  nameWithType: BaseValidator.Enabled
  fullName: System.Web.UI.WebControls.BaseValidator.Enabled
- uid: System.Web.UI.WebControls.BaseValidator.ErrorMessage
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: ErrorMessage
  nameWithType: BaseValidator.ErrorMessage
  fullName: System.Web.UI.WebControls.BaseValidator.ErrorMessage
- uid: System.Web.UI.WebControls.BaseValidator.EvaluateIsValid
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: EvaluateIsValid()
  nameWithType: BaseValidator.EvaluateIsValid()
  fullName: System.Web.UI.WebControls.BaseValidator.EvaluateIsValid()
- uid: System.Web.UI.WebControls.BaseValidator.ForeColor
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: ForeColor
  nameWithType: BaseValidator.ForeColor
  fullName: System.Web.UI.WebControls.BaseValidator.ForeColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Web.UI.WebControls.BaseValidator.GetControlRenderID(System.String)
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: GetControlRenderID(String)
  nameWithType: BaseValidator.GetControlRenderID(String)
  fullName: System.Web.UI.WebControls.BaseValidator.GetControlRenderID(String)
- uid: System.Web.UI.WebControls.BaseValidator.GetControlValidationValue(System.String)
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: GetControlValidationValue(String)
  nameWithType: BaseValidator.GetControlValidationValue(String)
  fullName: System.Web.UI.WebControls.BaseValidator.GetControlValidationValue(String)
- uid: System.Web.UI.WebControls.BaseValidator.GetValidationProperty(System.Object)
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: GetValidationProperty(Object)
  nameWithType: BaseValidator.GetValidationProperty(Object)
  fullName: System.Web.UI.WebControls.BaseValidator.GetValidationProperty(Object)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.BaseValidator.IsUnobtrusive
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: IsUnobtrusive
  nameWithType: BaseValidator.IsUnobtrusive
  fullName: System.Web.UI.WebControls.BaseValidator.IsUnobtrusive
- uid: System.Web.UI.WebControls.BaseValidator.IsValid
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: IsValid
  nameWithType: BaseValidator.IsValid
  fullName: System.Web.UI.WebControls.BaseValidator.IsValid
- uid: System.Web.UI.WebControls.BaseValidator.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: BaseValidator.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.BaseValidator.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.BaseValidator.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: BaseValidator.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.BaseValidator.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.BaseValidator.OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: BaseValidator.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.BaseValidator.OnUnload(EventArgs)
- uid: System.Web.UI.WebControls.BaseValidator.PropertiesValid
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: PropertiesValid
  nameWithType: BaseValidator.PropertiesValid
  fullName: System.Web.UI.WebControls.BaseValidator.PropertiesValid
- uid: System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: RegisterValidatorCommonScript()
  nameWithType: BaseValidator.RegisterValidatorCommonScript()
  fullName: System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript()
- uid: System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: RegisterValidatorDeclaration()
  nameWithType: BaseValidator.RegisterValidatorDeclaration()
  fullName: System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration()
- uid: System.Web.UI.WebControls.BaseValidator.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: BaseValidator.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.BaseValidator.Render(HtmlTextWriter)
- uid: System.Web.UI.WebControls.BaseValidator.RenderUplevel
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: RenderUplevel
  nameWithType: BaseValidator.RenderUplevel
  fullName: System.Web.UI.WebControls.BaseValidator.RenderUplevel
- uid: System.Web.UI.WebControls.BaseValidator.SetFocusOnError
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: SetFocusOnError
  nameWithType: BaseValidator.SetFocusOnError
  fullName: System.Web.UI.WebControls.BaseValidator.SetFocusOnError
- uid: System.Web.UI.WebControls.BaseValidator.Text
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: Text
  nameWithType: BaseValidator.Text
  fullName: System.Web.UI.WebControls.BaseValidator.Text
- uid: System.Web.UI.WebControls.BaseValidator.Validate
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: Validate()
  nameWithType: BaseValidator.Validate()
  fullName: System.Web.UI.WebControls.BaseValidator.Validate()
- uid: System.Web.UI.WebControls.BaseValidator.ValidationGroup
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: ValidationGroup
  nameWithType: BaseValidator.ValidationGroup
  fullName: System.Web.UI.WebControls.BaseValidator.ValidationGroup
- uid: System.Web.UI.WebControls.BaseValidator.#ctor*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: BaseValidator
  nameWithType: BaseValidator.BaseValidator
- uid: System.Web.UI.WebControls.BaseValidator.AddAttributesToRender*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: AddAttributesToRender
  nameWithType: BaseValidator.AddAttributesToRender
- uid: System.Web.UI.WebControls.BaseValidator.AssociatedControlID*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: AssociatedControlID
  nameWithType: BaseValidator.AssociatedControlID
- uid: System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: CheckControlValidationProperty
  nameWithType: BaseValidator.CheckControlValidationProperty
- uid: System.Web.UI.WebControls.BaseValidator.ControlPropertiesValid*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: ControlPropertiesValid
  nameWithType: BaseValidator.ControlPropertiesValid
- uid: System.Web.UI.WebControls.BaseValidator.ControlToValidate*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: ControlToValidate
  nameWithType: BaseValidator.ControlToValidate
- uid: System.Web.UI.WebControls.BaseValidator.DetermineRenderUplevel*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: DetermineRenderUplevel
  nameWithType: BaseValidator.DetermineRenderUplevel
- uid: System.Web.UI.WebControls.BaseValidator.Display*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: Display
  nameWithType: BaseValidator.Display
- uid: System.Web.UI.WebControls.BaseValidator.EnableClientScript*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: EnableClientScript
  nameWithType: BaseValidator.EnableClientScript
- uid: System.Web.UI.WebControls.BaseValidator.Enabled*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: Enabled
  nameWithType: BaseValidator.Enabled
- uid: System.Web.UI.WebControls.BaseValidator.ErrorMessage*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: ErrorMessage
  nameWithType: BaseValidator.ErrorMessage
- uid: System.Web.UI.WebControls.BaseValidator.EvaluateIsValid*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: EvaluateIsValid
  nameWithType: BaseValidator.EvaluateIsValid
- uid: System.Web.UI.WebControls.BaseValidator.ForeColor*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: ForeColor
  nameWithType: BaseValidator.ForeColor
- uid: System.Web.UI.WebControls.BaseValidator.GetControlRenderID*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: GetControlRenderID
  nameWithType: BaseValidator.GetControlRenderID
- uid: System.Web.UI.WebControls.BaseValidator.GetControlValidationValue*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: GetControlValidationValue
  nameWithType: BaseValidator.GetControlValidationValue
- uid: System.Web.UI.WebControls.BaseValidator.GetValidationProperty*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: GetValidationProperty
  nameWithType: BaseValidator.GetValidationProperty
- uid: System.Web.UI.WebControls.BaseValidator.IsUnobtrusive*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: IsUnobtrusive
  nameWithType: BaseValidator.IsUnobtrusive
- uid: System.Web.UI.WebControls.BaseValidator.IsValid*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: IsValid
  nameWithType: BaseValidator.IsValid
- uid: System.Web.UI.WebControls.BaseValidator.OnInit*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: OnInit
  nameWithType: BaseValidator.OnInit
- uid: System.Web.UI.WebControls.BaseValidator.OnPreRender*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: OnPreRender
  nameWithType: BaseValidator.OnPreRender
- uid: System.Web.UI.WebControls.BaseValidator.OnUnload*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: OnUnload
  nameWithType: BaseValidator.OnUnload
- uid: System.Web.UI.WebControls.BaseValidator.PropertiesValid*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: PropertiesValid
  nameWithType: BaseValidator.PropertiesValid
- uid: System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: RegisterValidatorCommonScript
  nameWithType: BaseValidator.RegisterValidatorCommonScript
- uid: System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: RegisterValidatorDeclaration
  nameWithType: BaseValidator.RegisterValidatorDeclaration
- uid: System.Web.UI.WebControls.BaseValidator.Render*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: Render
  nameWithType: BaseValidator.Render
- uid: System.Web.UI.WebControls.BaseValidator.RenderUplevel*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: RenderUplevel
  nameWithType: BaseValidator.RenderUplevel
- uid: System.Web.UI.WebControls.BaseValidator.SetFocusOnError*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: SetFocusOnError
  nameWithType: BaseValidator.SetFocusOnError
- uid: System.Web.UI.WebControls.BaseValidator.Text*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: Text
  nameWithType: BaseValidator.Text
- uid: System.Web.UI.WebControls.BaseValidator.Validate*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: Validate
  nameWithType: BaseValidator.Validate
- uid: System.Web.UI.WebControls.BaseValidator.ValidationGroup*
  parent: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: ValidationGroup
  nameWithType: BaseValidator.ValidationGroup
