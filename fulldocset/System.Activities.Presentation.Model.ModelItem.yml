### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Model.ModelItem
  id: ModelItem
  children:
  - System.Activities.Presentation.Model.ModelItem.#ctor
  - System.Activities.Presentation.Model.ModelItem.Attributes
  - System.Activities.Presentation.Model.ModelItem.BeginEdit
  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.Boolean)
  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String)
  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String,System.Boolean)
  - System.Activities.Presentation.Model.ModelItem.Content
  - System.Activities.Presentation.Model.ModelItem.GetCurrentValue
  - System.Activities.Presentation.Model.ModelItem.ItemType
  - System.Activities.Presentation.Model.ModelItem.Name
  - System.Activities.Presentation.Model.ModelItem.Parent
  - System.Activities.Presentation.Model.ModelItem.Parents
  - System.Activities.Presentation.Model.ModelItem.Properties
  - System.Activities.Presentation.Model.ModelItem.PropertyChanged
  - System.Activities.Presentation.Model.ModelItem.Root
  - System.Activities.Presentation.Model.ModelItem.Source
  - System.Activities.Presentation.Model.ModelItem.Sources
  - System.Activities.Presentation.Model.ModelItem.ToString
  - System.Activities.Presentation.Model.ModelItem.View
  langs:
  - csharp
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
  type: Class
  summary: "Rappresenta un singolo elemento nel modello di modifica. Un elemento può essere qualsiasi elemento da una struttura dati complessa fino a un numero intero o un colore."
  remarks: "È possibile accedere alle proprietà dell&quot;elemento tramite il relativo <xref:System.Activities.Presentation.Model.ModelItem.Properties%2A>insieme e apportare modifiche ai valori delle proprietà.</xref:System.Activities.Presentation.Model.ModelItem.Properties%2A>       Un ModelItem è un wrapper per il modello di dati sottostante della finestra di progettazione. È possibile accedere al modello sottostante tramite il <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>metodo.</xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>      > [!NOTE] > Eventuali modifiche apportate a un oggetto restituito dal <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>(metodo) non verrà riportato per i sistemi di serializzazione e annullamento della finestra di progettazione.</xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>"
  example:
  - "The ModelItem can be thought of as a thin proxy for an object at which it points. First define a simple `Animal` object.  \n  \n```  \n  \npublic class Animal  \n{  \n    // simple property  \n    public string Name { get; set; }  \n    // complex property   \n    public Location Residence { get; set; }   \n    // list   \n    public List<Animal> CloseRelatives { get; set; }  \n    // dictionary  \n    public Dictionary<string, object> Features { get; set; }   \n}  \n  \npublic class Location  \n{  \n    public string StreetAddress { get; set; }  \n    public string City { get; set; }  \n    public string State { get; set; }   \n}  \n  \n```  \n  \n Secondly, create an instance of that `Animal` and a ModelItem that is a proxy for it. The object can then be retrieved by calling <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>. The following code also shows how to use other properties defined by ModelItem.  \n  \n```  \n  \nEditingContext ec = new EditingContext();  \nvar companion1 = new Animal { Name = \"Houdini the parakeet\" };  \nvar companion2 = new Animal { Name = \"Groucho the fish\" };  \nvar animal = new Animal   \n   {  \n      Name = \"Sasha the pug\",  \n      Residence = new Location   \n      {  \n         StreetAddress = \"123 Main Street\",  \n         City = \"AnyTown\",  \n         State = \"Washington\"  \n      },  \n      Features = new Dictionary<string, object> {   \n         {\"noise\", \"snort\" },  \n         {\"MeanTimeUntilNaps\", TimeSpan.FromMinutes(15) }  \n      },  \n      CloseRelatives = new List<Animal> { companion1, companion2 }   \n   };  \nModelTreeManager mtm = new ModelTreeManager(ec);  mtm.Load(animal);  \nModelItem mi = mtm.Root;  \n  \n//Testing other properties of the class  \nModelItem root = mtm.Root;  \nAssert.IsTrue(root.GetCurrentValue() == animal, \"GetCurrentValue() returns same object\");  \nAssert.IsTrue(root.ItemType == typeof(Animal),\"ItemType describes the item\");  \nAssert.IsTrue(root.Parent == null,\"root parent is null\");  \nAssert.IsTrue(root.Source == null, \"root source is null\");  \nAssert.IsTrue(((List<Animal>)root.Properties[\"CloseRelatives\"].ComputedValue)[0] == companion1,   \n   \"ComputedValue of prop == actual object\");  \nAssert.IsFalse(((List<Animal>)root.Properties[\"CloseRelatives\"].ComputedValue)[0] == companion2,   \n   \"ComputedValue of prop == actual object\");  \nAssert.AreEqual(root.Properties[\"Residence\"].  \n   Value.  \n   Properties[\"StreetAddress\"].  \n   Value.GetCurrentValue(), \"123 Main Street\", \"get actual value back out\");  \nAssert.AreEqual(root, root.Properties[\"Residence\"].Parent, \"property points to owner\");  \nModelItem location = root.Properties[\"Residence\"].Value;  \nAssert.AreEqual(root.Properties[\"Residence\"], location.Source, \"sources point to the right place\");  \n  \n```"
  syntax:
    content: 'public abstract class ModelItem : System.ComponentModel.INotifyPropertyChanged'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: ModelItem()
  nameWithType: ModelItem.ModelItem()
  fullName: System.Activities.Presentation.Model.ModelItem.ModelItem()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Crea una nuova istanza di <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> classe."
  syntax:
    content: protected ModelItem ();
    parameters: []
  overload: System.Activities.Presentation.Model.ModelItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.Attributes
  id: Attributes
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: Attributes
  nameWithType: ModelItem.Attributes
  fullName: System.Activities.Presentation.Model.ModelItem.Attributes
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Ottiene gli attributi dichiarati in questo elemento."
  syntax:
    content: public abstract System.ComponentModel.AttributeCollection Attributes { get; }
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Raccolta che contiene gli attributi dell&quot;elemento."
  overload: System.Activities.Presentation.Model.ModelItem.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.BeginEdit
  id: BeginEdit
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: BeginEdit()
  nameWithType: ModelItem.BeginEdit()
  fullName: System.Activities.Presentation.Model.ModelItem.BeginEdit()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Apre un ambito di modifica per la finestra di progettazione. Dopo aver aperto un ambito di modifica, tutte le modifiche su tutti gli oggetti verranno salvate nell&quot;ambito fino a quando la transazione sarà completata o ripristinata. Gli ambiti di modifica possono essere annidati, ma è necessario eseguirne il commit in ordine."
  remarks: "Un ambito di modifica consente più modifiche al modello da applicare come una singola transazione. Tutte le modifiche apportate all&quot;interno dell&quot;ambito di modifica possano essere annullate in qualsiasi momento prima del completamento della transazione.       Gli ambiti di modifica sono globali per la finestra di progettazione. Un ambito di modifica può essere creato per qualsiasi elemento nella finestra di progettazione. non è necessario creare un ambito di modifica per l&quot;elemento specifico che si desidera modificare."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelEditingScope BeginEdit ();
    parameters: []
    return:
      type: System.Activities.Presentation.Model.ModelEditingScope
      description: "Oggetto <xref href=&quot;System.Activities.Presentation.Model.ModelEditingScope&quot;> </xref>, che deve essere completato o ripristinato."
  overload: System.Activities.Presentation.Model.ModelItem.BeginEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.BeginEdit(System.Boolean)
  id: BeginEdit(System.Boolean)
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: BeginEdit(Boolean)
  nameWithType: ModelItem.BeginEdit(Boolean)
  fullName: System.Activities.Presentation.Model.ModelItem.BeginEdit(Boolean)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Apre un ambito di modifica per la finestra di progettazione."
  syntax:
    content: public virtual System.Activities.Presentation.Model.ModelEditingScope BeginEdit (bool shouldApplyChangesImmediately);
    parameters:
    - id: shouldApplyChangesImmediately
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per indicare che le modifiche verranno applicate immediatamente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Activities.Presentation.Model.ModelEditingScope
      description: "Oggetto <xref href=&quot;System.Activities.Presentation.Model.ModelEditingScope&quot;> </xref>, che deve essere completato o ripristinato."
  overload: System.Activities.Presentation.Model.ModelItem.BeginEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String)
  id: BeginEdit(System.String)
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: BeginEdit(String)
  nameWithType: ModelItem.BeginEdit(String)
  fullName: System.Activities.Presentation.Model.ModelItem.BeginEdit(String)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Apre un ambito di modifica per la finestra di progettazione. Dopo aver aperto un ambito di modifica, tutte le modifiche su tutti gli oggetti verranno salvate nell&quot;ambito fino a quando la transazione sarà completata o ripristinata. Gli ambiti di modifica possono essere annidati, ma è necessario eseguirne il commit in ordine."
  remarks: "Un ambito di modifica consente più modifiche al modello da applicare come una singola transazione. Tutte le modifiche apportate all&quot;interno dell&quot;ambito di modifica possano essere annullate in qualsiasi momento prima del completamento della transazione.       Gli ambiti di modifica sono globali per la finestra di progettazione. Un ambito di modifica può essere creato per qualsiasi elemento nella finestra di progettazione. non è necessario creare un ambito di modifica per l&quot;elemento specifico che si desidera modificare."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelEditingScope BeginEdit (string description);
    parameters:
    - id: description
      type: System.String
      description: "Descrizione facoltativa della modifica. Verrà impostato nel <xref:System.Activities.Presentation.Model.ModelEditingScope.Description*>proprietà dell&quot;ambito di modifica.</xref:System.Activities.Presentation.Model.ModelEditingScope.Description*>"
    return:
      type: System.Activities.Presentation.Model.ModelEditingScope
      description: "Oggetto <xref href=&quot;System.Activities.Presentation.Model.ModelEditingScope&quot;> </xref>, che deve essere completato o ripristinato."
  overload: System.Activities.Presentation.Model.ModelItem.BeginEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String,System.Boolean)
  id: BeginEdit(System.String,System.Boolean)
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: BeginEdit(String,Boolean)
  nameWithType: ModelItem.BeginEdit(String,Boolean)
  fullName: System.Activities.Presentation.Model.ModelItem.BeginEdit(String,Boolean)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Apre un ambito di modifica per la finestra di progettazione."
  syntax:
    content: public virtual System.Activities.Presentation.Model.ModelEditingScope BeginEdit (string description, bool shouldApplyChangesImmediately);
    parameters:
    - id: description
      type: System.String
      description: "Descrizione facoltativa della modifica. Verrà impostato nel <xref:System.Activities.Presentation.Model.ModelEditingScope.Description*>proprietà dell&quot;ambito di modifica.</xref:System.Activities.Presentation.Model.ModelEditingScope.Description*>"
    - id: shouldApplyChangesImmediately
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>per indicare che le modifiche verranno applicate immediatamente. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Activities.Presentation.Model.ModelEditingScope
      description: "Oggetto <xref href=&quot;System.Activities.Presentation.Model.ModelEditingScope&quot;> </xref>, che deve essere completato o ripristinato."
  overload: System.Activities.Presentation.Model.ModelItem.BeginEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.Content
  id: Content
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: Content
  nameWithType: ModelItem.Content
  fullName: System.Activities.Presentation.Model.ModelItem.Content
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Ottiene il <xref uid=&quot;langword_csharp_ContentPropertyAttribute&quot; name=&quot;ContentPropertyAttribute&quot; href=&quot;&quot;> </xref> dell&quot;elemento, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelProperty Content { get; }
    return:
      type: System.Activities.Presentation.Model.ModelProperty
      description: "The <xref uid=&quot;langword_csharp_ContentPropertyAttribute&quot; name=&quot;ContentPropertyAttribute&quot; href=&quot;&quot;></xref> of the item as a <xref href=&quot;System.Activities.Presentation.Model.ModelProperty&quot;></xref>. Se il <xref uid=&quot;langword_csharp_ContentPropertyAttribute&quot; name=&quot;ContentPropertyAttribute&quot; href=&quot;&quot;> </xref> non dichiarata dal <xref:System.Activities.Presentation.Model.ModelItem.ItemType*>di questo elemento di contenuto restituisce <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Activities.Presentation.Model.ModelItem.ItemType*>"
  overload: System.Activities.Presentation.Model.ModelItem.Content*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.GetCurrentValue
  id: GetCurrentValue
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: GetCurrentValue()
  nameWithType: ModelItem.GetCurrentValue()
  fullName: System.Activities.Presentation.Model.ModelItem.GetCurrentValue()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Restituisce il valore corrente dell&quot;oggetto modello sottostante che il <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> sta eseguendo il wrapping."
  remarks: "È possibile esaminare questo oggetto, ma non, è necessario apportare eventuali modifiche a esso. Le modifiche apportate all&quot;oggetto restituito non saranno incorporate nella finestra di progettazione. Il metodo GetCurrentValue può restituire una nuova o esistente clonata istanza dell&quot;oggetto."
  syntax:
    content: public abstract object GetCurrentValue ();
    parameters: []
    return:
      type: System.Object
      description: "Il valore corrente del modello sottostante dell&quot;oggetto che il <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> sta eseguendo il wrapping come un <xref:System.Object>.</xref:System.Object>"
  overload: System.Activities.Presentation.Model.ModelItem.GetCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.ItemType
  id: ItemType
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: ItemType
  nameWithType: ModelItem.ItemType
  fullName: System.Activities.Presentation.Model.ModelItem.ItemType
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Ottiene il tipo di oggetto che rappresenta l&quot;elemento."
  syntax:
    content: public abstract Type ItemType { get; }
    return:
      type: System.Type
      description: "Il tipo di oggetto che rappresenta l&quot;elemento."
  overload: System.Activities.Presentation.Model.ModelItem.ItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.Name
  id: Name
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: Name
  nameWithType: ModelItem.Name
  fullName: System.Activities.Presentation.Model.ModelItem.Name
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Ottiene o imposta il nome o ID dell&quot;elemento."
  remarks: "Non tutti gli elementi devono disporre di nomi, in modo da questa operazione potrebbe restituire `null`. A seconda del tipo di elemento e in cui si trova nella gerarchia, potrebbe non essere sempre legale per impostare il nome di un elemento. Se il <xref:System.Activities.Presentation.Model.ModelItem.ItemType%2A>di questo elemento dichiara un `RuntimeNamePropertyAttribute`, la proprietà Name è un mapping diretto per la proprietà dipende da quell&quot;attributo.</xref:System.Activities.Presentation.Model.ModelItem.ItemType%2A>"
  syntax:
    content: public abstract string Name { get; set; }
    return:
      type: System.String
      description: "Il nome o ID dell&quot;elemento come un <xref:System.String>.</xref:System.String>"
  overload: System.Activities.Presentation.Model.ModelItem.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.Parent
  id: Parent
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: Parent
  nameWithType: ModelItem.Parent
  fullName: System.Activities.Presentation.Model.ModelItem.Parent
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Ottiene l&quot;elemento padre di questo elemento."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem Parent { get; }
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Oggetto <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> che rappresenta l&quot;elemento padre di questo elemento. Se un elemento è contenuto in una raccolta o di un dizionario, viene restituito l&quot;oggetto proprietario della raccolta o del dizionario."
  overload: System.Activities.Presentation.Model.ModelItem.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.Parents
  id: Parents
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: Parents
  nameWithType: ModelItem.Parents
  fullName: System.Activities.Presentation.Model.ModelItem.Parents
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Ottiene tutti gli elementi padre di questo elemento."
  syntax:
    content: public abstract System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem> Parents { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
      description: "Gli elementi padre di questo elemento."
  overload: System.Activities.Presentation.Model.ModelItem.Parents*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.Properties
  id: Properties
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: Properties
  nameWithType: ModelItem.Properties
  fullName: System.Activities.Presentation.Model.ModelItem.Properties
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Ottiene le proprietà pubbliche per questo elemento."
  remarks: "Il set di proprietà restituito potrebbe variare in base alle proprietà associate o modifiche all&quot;ambito di modifica."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelPropertyCollection Properties { get; }
    return:
      type: System.Activities.Presentation.Model.ModelPropertyCollection
      description: "Oggetto <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref> che contiene le proprietà pubbliche di questo elemento."
  overload: System.Activities.Presentation.Model.ModelItem.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.PropertyChanged
  id: PropertyChanged
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: PropertyChanged
  nameWithType: ModelItem.PropertyChanged
  fullName: System.Activities.Presentation.Model.ModelItem.PropertyChanged
  type: Event
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Implementa <xref uid=&quot;langword_csharp_INotifyPropertyChanged&quot; name=&quot;INotifyPropertyChanged&quot; href=&quot;&quot;> </xref>. Usare questo evento per attendere le modifiche al modello. Viene utilizzato anche dalle funzionalità dell&quot;associazione dati di WPF."
  remarks: "Eventi di disconnessione da elementi quando si è terminato di utilizzarli. In caso contrario, si potrebbe impedire al garbage collector dall&quot;eliminazione di un elemento che non è più in uso."
  syntax:
    content: public abstract event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.Root
  id: Root
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: Root
  nameWithType: ModelItem.Root
  fullName: System.Activities.Presentation.Model.ModelItem.Root
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Ottiene l&quot;elemento che corrisponde alla radice della struttura."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem Root { get; }
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Oggetto <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> che rappresenta la radice della struttura, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se questo elemento non fa parte di una struttura ad albero."
  overload: System.Activities.Presentation.Model.ModelItem.Root*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.Source
  id: Source
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: Source
  nameWithType: ModelItem.Source
  fullName: System.Activities.Presentation.Model.ModelItem.Source
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Ottiene la proprietà che ha fornito il valore."
  remarks: "Se l&quot;elemento rappresenta la radice dell&quot;oggetto grafico, verrà restituito `null`. Se un elemento è un membro di una raccolta o un dizionario, la proprietà restituita dall&quot;origine è una pseudo proprietà fornita per la raccolta o il dizionario. Per altri valori, la proprietà origine restituisce la proprietà in cui è stato effettivamente impostato il valore. Pertanto, se un valore viene ereditato, origine consente di scoprire chi ha fornito originariamente il valore."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelProperty Source { get; }
    return:
      type: System.Activities.Presentation.Model.ModelProperty
      description: "Oggetto <xref href=&quot;System.Activities.Presentation.Model.ModelProperty&quot;> </xref> che indica l&quot;origine di questo valore."
  overload: System.Activities.Presentation.Model.ModelItem.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.Sources
  id: Sources
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: Sources
  nameWithType: ModelItem.Sources
  fullName: System.Activities.Presentation.Model.ModelItem.Sources
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Ottiene tutte le proprietà che contengono questo valore."
  syntax:
    content: public abstract System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelProperty> Sources { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelProperty}
      description: "Le origini di questo valore."
  overload: System.Activities.Presentation.Model.ModelItem.Sources*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.ToString
  id: ToString
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: ToString()
  nameWithType: ModelItem.ToString()
  fullName: System.Activities.Presentation.Model.ModelItem.ToString()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Restituisce una rappresentazione di stringa dell&quot;oggetto modello sottostante contenuta in questo elemento del modello."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Rappresentazione di stringa dell&quot;oggetto modello sottostante contenuta in questo elemento del modello."
  overload: System.Activities.Presentation.Model.ModelItem.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItem.View
  id: View
  parent: System.Activities.Presentation.Model.ModelItem
  langs:
  - csharp
  name: View
  nameWithType: ModelItem.View
  fullName: System.Activities.Presentation.Model.ModelItem.View
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Ottiene un <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> che rappresenta graficamente questo elemento."
  syntax:
    content: public abstract System.Windows.DependencyObject View { get; }
    return:
      type: System.Windows.DependencyObject
      description: "Oggetto <xref href=&quot;System.Windows.DependencyObject&quot;> </xref> che rappresenta graficamente questo elemento, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se è presente alcuna rappresentazione di questo tipo."
  overload: System.Activities.Presentation.Model.ModelItem.View*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.Model.ModelItem.#ctor
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: ModelItem()
  nameWithType: ModelItem.ModelItem()
  fullName: System.Activities.Presentation.Model.ModelItem.ModelItem()
- uid: System.Activities.Presentation.Model.ModelItem.Attributes
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Attributes
  nameWithType: ModelItem.Attributes
  fullName: System.Activities.Presentation.Model.ModelItem.Attributes
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.Activities.Presentation.Model.ModelItem.BeginEdit
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: BeginEdit()
  nameWithType: ModelItem.BeginEdit()
  fullName: System.Activities.Presentation.Model.ModelItem.BeginEdit()
- uid: System.Activities.Presentation.Model.ModelEditingScope
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelEditingScope
  nameWithType: ModelEditingScope
  fullName: System.Activities.Presentation.Model.ModelEditingScope
- uid: System.Activities.Presentation.Model.ModelItem.BeginEdit(System.Boolean)
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: BeginEdit(Boolean)
  nameWithType: ModelItem.BeginEdit(Boolean)
  fullName: System.Activities.Presentation.Model.ModelItem.BeginEdit(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String)
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: BeginEdit(String)
  nameWithType: ModelItem.BeginEdit(String)
  fullName: System.Activities.Presentation.Model.ModelItem.BeginEdit(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String,System.Boolean)
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: BeginEdit(String,Boolean)
  nameWithType: ModelItem.BeginEdit(String,Boolean)
  fullName: System.Activities.Presentation.Model.ModelItem.BeginEdit(String,Boolean)
- uid: System.Activities.Presentation.Model.ModelItem.Content
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Content
  nameWithType: ModelItem.Content
  fullName: System.Activities.Presentation.Model.ModelItem.Content
- uid: System.Activities.Presentation.Model.ModelProperty
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelProperty
  nameWithType: ModelProperty
  fullName: System.Activities.Presentation.Model.ModelProperty
- uid: System.Activities.Presentation.Model.ModelItem.GetCurrentValue
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: GetCurrentValue()
  nameWithType: ModelItem.GetCurrentValue()
  fullName: System.Activities.Presentation.Model.ModelItem.GetCurrentValue()
- uid: System.Activities.Presentation.Model.ModelItem.ItemType
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: ItemType
  nameWithType: ModelItem.ItemType
  fullName: System.Activities.Presentation.Model.ModelItem.ItemType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Model.ModelItem.Name
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Name
  nameWithType: ModelItem.Name
  fullName: System.Activities.Presentation.Model.ModelItem.Name
- uid: System.Activities.Presentation.Model.ModelItem.Parent
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Parent
  nameWithType: ModelItem.Parent
  fullName: System.Activities.Presentation.Model.ModelItem.Parent
- uid: System.Activities.Presentation.Model.ModelItem
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
- uid: System.Activities.Presentation.Model.ModelItem.Parents
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Parents
  nameWithType: ModelItem.Parents
  fullName: System.Activities.Presentation.Model.ModelItem.Parents
- uid: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ModelItem>
  nameWithType: IEnumerable<ModelItem>
  fullName: System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Activities.Presentation.Model.ModelItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Model.ModelItem.Properties
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Properties
  nameWithType: ModelItem.Properties
  fullName: System.Activities.Presentation.Model.ModelItem.Properties
- uid: System.Activities.Presentation.Model.ModelPropertyCollection
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelPropertyCollection
  nameWithType: ModelPropertyCollection
  fullName: System.Activities.Presentation.Model.ModelPropertyCollection
- uid: System.Activities.Presentation.Model.ModelItem.PropertyChanged
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: PropertyChanged
  nameWithType: ModelItem.PropertyChanged
  fullName: System.Activities.Presentation.Model.ModelItem.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.Activities.Presentation.Model.ModelItem.Root
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Root
  nameWithType: ModelItem.Root
  fullName: System.Activities.Presentation.Model.ModelItem.Root
- uid: System.Activities.Presentation.Model.ModelItem.Source
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Source
  nameWithType: ModelItem.Source
  fullName: System.Activities.Presentation.Model.ModelItem.Source
- uid: System.Activities.Presentation.Model.ModelItem.Sources
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Sources
  nameWithType: ModelItem.Sources
  fullName: System.Activities.Presentation.Model.ModelItem.Sources
- uid: System.Collections.Generic.IEnumerable{System.Activities.Presentation.Model.ModelProperty}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ModelProperty>
  nameWithType: IEnumerable<ModelProperty>
  fullName: System.Collections.Generic.IEnumerable<System.Activities.Presentation.Model.ModelProperty>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Activities.Presentation.Model.ModelProperty>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Model.ModelProperty
    name: ModelProperty
    nameWithType: ModelProperty
    fullName: ModelProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Model.ModelItem.ToString
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: ToString()
  nameWithType: ModelItem.ToString()
  fullName: System.Activities.Presentation.Model.ModelItem.ToString()
- uid: System.Activities.Presentation.Model.ModelItem.View
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: View
  nameWithType: ModelItem.View
  fullName: System.Activities.Presentation.Model.ModelItem.View
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Activities.Presentation.Model.ModelItem.#ctor*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem.ModelItem
- uid: System.Activities.Presentation.Model.ModelItem.Attributes*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Attributes
  nameWithType: ModelItem.Attributes
- uid: System.Activities.Presentation.Model.ModelItem.BeginEdit*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: BeginEdit
  nameWithType: ModelItem.BeginEdit
- uid: System.Activities.Presentation.Model.ModelItem.Content*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Content
  nameWithType: ModelItem.Content
- uid: System.Activities.Presentation.Model.ModelItem.GetCurrentValue*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: GetCurrentValue
  nameWithType: ModelItem.GetCurrentValue
- uid: System.Activities.Presentation.Model.ModelItem.ItemType*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: ItemType
  nameWithType: ModelItem.ItemType
- uid: System.Activities.Presentation.Model.ModelItem.Name*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Name
  nameWithType: ModelItem.Name
- uid: System.Activities.Presentation.Model.ModelItem.Parent*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Parent
  nameWithType: ModelItem.Parent
- uid: System.Activities.Presentation.Model.ModelItem.Parents*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Parents
  nameWithType: ModelItem.Parents
- uid: System.Activities.Presentation.Model.ModelItem.Properties*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Properties
  nameWithType: ModelItem.Properties
- uid: System.Activities.Presentation.Model.ModelItem.Root*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Root
  nameWithType: ModelItem.Root
- uid: System.Activities.Presentation.Model.ModelItem.Source*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Source
  nameWithType: ModelItem.Source
- uid: System.Activities.Presentation.Model.ModelItem.Sources*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: Sources
  nameWithType: ModelItem.Sources
- uid: System.Activities.Presentation.Model.ModelItem.ToString*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: ToString
  nameWithType: ModelItem.ToString
- uid: System.Activities.Presentation.Model.ModelItem.View*
  parent: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: View
  nameWithType: ModelItem.View
