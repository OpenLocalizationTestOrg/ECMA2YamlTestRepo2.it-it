### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.ArcSegment
  id: ArcSegment
  children:
  - System.Windows.Media.ArcSegment.#ctor
  - System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)
  - System.Windows.Media.ArcSegment.Clone
  - System.Windows.Media.ArcSegment.CloneCurrentValue
  - System.Windows.Media.ArcSegment.CreateInstanceCore
  - System.Windows.Media.ArcSegment.IsLargeArc
  - System.Windows.Media.ArcSegment.IsLargeArcProperty
  - System.Windows.Media.ArcSegment.Point
  - System.Windows.Media.ArcSegment.PointProperty
  - System.Windows.Media.ArcSegment.RotationAngle
  - System.Windows.Media.ArcSegment.RotationAngleProperty
  - System.Windows.Media.ArcSegment.Size
  - System.Windows.Media.ArcSegment.SizeProperty
  - System.Windows.Media.ArcSegment.SweepDirection
  - System.Windows.Media.ArcSegment.SweepDirectionProperty
  langs:
  - csharp
  name: ArcSegment
  nameWithType: ArcSegment
  fullName: System.Windows.Media.ArcSegment
  type: Class
  summary: "Rappresenta un arco ellittico tra due punti."
  remarks: "Utilizzare un <xref:System.Windows.Media.PathFigure>oggetto usato per archiviare oggetti ArcSegment e altri segmenti.</xref:System.Windows.Media.PathFigure>       Un arco ellittico è definito dal relativo punti iniziale e finale, raggi x e y-, asse x fattore di rotazione, un valore che indica se l&quot;arco deve essere maggiore di 180 gradi e un valore che descrive la direzione in cui viene disegnata l&quot;arco. La classe ArcSegment non contiene una proprietà per il punto iniziale dell&quot;arco. definisce solo il punto di destinazione dell&quot;arco che rappresenta. Il punto iniziale dell&quot;arco è il punto corrente del <xref:System.Windows.Media.PathFigure>a cui viene aggiunto ArcSegment.</xref:System.Windows.Media.PathFigure>       Nelle figure seguenti illustrano il punto finale differente, <xref:System.Windows.Media.ArcSegment.Size%2A>, e <xref:System.Windows.Media.ArcSegment.RotationAngle%2A>impostazioni.</xref:System.Windows.Media.ArcSegment.RotationAngle%2A> </xref:System.Windows.Media.ArcSegment.Size%2A>       ![ArcSegment con impostazioni Point differenti](~/add/media/arcsegment-point.png &quot;ArcSegment con impostazioni Point differenti&quot;)![ArcSegment con impostazioni Size differenti](~/add/media/arcsegment-size.png &quot;ArcSegment con impostazioni Size differenti&quot;)![ArcSegment con impostazioni RotationAngle differenti](~/add/media/arcsegment-rotationangle.png &quot;ArcSegment con impostazioni RotationAngle differenti&quot;) # # IsLargeArc e SweepDirection per gli archi la maggior parte di una particolare posizione, dimensione e la rotazione, sono disponibili quattro archi diversi che possono essere disegnati; il <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>e <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>proprietà indicano quale arco utilizzare.</xref:System.Windows.Media.ArcSegment.SweepDirection%2A> </xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>                     Dei quattro candidati angoli, due rappresentano archi grandi dimensioni con operazioni su elementi di 180 gradi o superiore e due rappresentano archi più piccoli con apertura di 180 gradi o meno. Se <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>è **true**, uno dei due angoli più grande è selezionato; in caso contrario, se è **false**, uno di più piccoli viene scelto sweep.</xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> I due candidati rimanenti vengono disegnati in un&quot;altra direzione: <xref:System.Windows.Media.SweepDirection>o <xref:System.Windows.Media.SweepDirection>.</xref:System.Windows.Media.SweepDirection> </xref:System.Windows.Media.SweepDirection> Il <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>proprietà specifica quale utilizzare.</xref:System.Windows.Media.ArcSegment.SweepDirection%2A>       Le illustrazioni seguenti mostrano diverse <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>e <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>impostazioni.</xref:System.Windows.Media.ArcSegment.SweepDirection%2A> </xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>       ![ArcSegment con impostazioni IsLargeArc differenti](~/add/media/arcsegment-islargearc.png &quot;ArcSegment con impostazioni IsLargeArc differenti&quot;) oggetti ArcSegment con impostazioni IsLargeArc differenti ![ArcSegment con impostazioni SweepDirection differenti](~/add/media/arcsegment-sweepdirection.png &quot;ArcSegment con impostazioni SweepDirection differenti&quot;) oggetti ArcSegment con impostazioni SweepDirection differenti # # Freezable ArcSegment di una funzionalità è un tipo di <xref:System.Windows.Freezable>oggetto.</xref:System.Windows.Freezable> Per informazioni su <xref:System.Windows.Freezable>funzionalità, ad esempio il blocco e la clonazione, vedere il [panoramica sugli oggetti Freezable](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.Freezable>"
  syntax:
    content: 'public sealed class ArcSegment : System.Windows.Media.PathSegment'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.PathSegment
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.PathSegment.IsSmoothJoin
  - System.Windows.Media.PathSegment.IsSmoothJoinProperty
  - System.Windows.Media.PathSegment.IsStroked
  - System.Windows.Media.PathSegment.IsStrokedProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.#ctor
  id: '#ctor'
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: ArcSegment()
  nameWithType: ArcSegment.ArcSegment()
  fullName: System.Windows.Media.ArcSegment.ArcSegment()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Media.ArcSegment&quot;> </xref> classe."
  remarks: "La <xref:System.Windows.Media.ArcSegment>classe definisce solo il punto di destinazione dell&quot;arco che rappresenta, il punto iniziale dell&quot;arco è il punto corrente del <xref:System.Windows.Media.PathFigure>, a cui il <xref:System.Windows.Media.ArcSegment>viene aggiunto.</xref:System.Windows.Media.ArcSegment> </xref:System.Windows.Media.PathFigure> </xref:System.Windows.Media.ArcSegment>       Per gli archi ellittici più di una particolare posizione, dimensione e la rotazione, sono disponibili quattro archi diversi che possono essere disegnati; il `largeArc` e `sweepDirection` indicano quale arco da utilizzare.       Dei quattro candidati angoli, due rappresentano archi grandi dimensioni con operazioni su elementi di 180 gradi o superiore e due rappresentano archi più piccoli con apertura di 180 gradi o meno. Se `largeArc` è **true**, uno dei due angoli più grande è selezionato; in caso contrario, se `largeArc` è **false**, uno di più piccoli viene scelto sweep.       Se `sweepDirection` è <xref:System.Windows.Media.SweepDirection>, l&quot;arco viene disegnato nella direzione di un angolo positivo.</xref:System.Windows.Media.SweepDirection> Se `sweepDirection` è <xref:System.Windows.Media.SweepDirection>, l&quot;arco viene disegnato nella direzione di un angolo negativo.</xref:System.Windows.Media.SweepDirection>"
  syntax:
    content: public ArcSegment ();
    parameters: []
  overload: System.Windows.Media.ArcSegment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)
  id: '#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)'
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  nameWithType: ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  fullName: System.Windows.Media.ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Media.ArcSegment&quot;> </xref> classe."
  remarks: "La <xref:System.Windows.Media.ArcSegment>classe definisce solo il punto di destinazione dell&quot;arco che rappresenta, il punto iniziale dell&quot;arco è il punto corrente del <xref:System.Windows.Media.PathFigure>, a cui il <xref:System.Windows.Media.ArcSegment>viene aggiunto.</xref:System.Windows.Media.ArcSegment> </xref:System.Windows.Media.PathFigure> </xref:System.Windows.Media.ArcSegment>       Per gli archi ellittici più di una particolare posizione, dimensione e la rotazione, sono disponibili quattro archi diversi che possono essere disegnati; il `largeArc` e `sweepDirection` indicano quale arco da utilizzare.       Dei quattro candidati angoli, due rappresentano archi grandi dimensioni con operazioni su elementi di 180 gradi o superiore e due rappresentano archi più piccoli con apertura di 180 gradi o meno. Se `largeArc` è **true**, uno dei due angoli più grande è selezionato; in caso contrario, se `largeArc` è **false**, uno di più piccoli viene scelto sweep.       Se `sweepDirection` è <xref:System.Windows.Media.SweepDirection>, l&quot;arco viene disegnato nella direzione di un angolo positivo.</xref:System.Windows.Media.SweepDirection> Se `sweepDirection` è <xref:System.Windows.Media.SweepDirection>, l&quot;arco viene disegnato nella direzione di un angolo negativo.</xref:System.Windows.Media.SweepDirection>"
  syntax:
    content: public ArcSegment (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "Il punto di destinazione dell&quot;arco. il punto iniziale dell&quot;arco è definito come il punto corrente del <xref href=&quot;System.Windows.Media.PathFigure&quot;> </xref> a cui il <xref href=&quot;System.Windows.Media.ArcSegment&quot;> </xref> viene aggiunto."
    - id: size
      type: System.Windows.Size
      description: "Raggio x e y dell&quot;arco. Il raggio x è specificato dal <xref href=&quot;System.Windows.Size&quot;> </xref> della struttura <> </> *> proprietà e il raggio y è specificato per il <xref href=&quot;System.Windows.Size&quot;> </xref> della struttura <> </> *> proprietà."
    - id: rotationAngle
      type: System.Double
      description: "Rotazione sull&quot;asse x dell&quot;ellisse."
    - id: isLargeArc
      type: System.Boolean
      description: "Se l&quot;arco deve essere maggiore di 180 gradi."
    - id: sweepDirection
      type: System.Windows.Media.SweepDirection
      description: "Impostare su <xref href=&quot;System.Windows.Media.SweepDirection&quot;> </xref> per disegnare l&quot;arco in un numero positivo angolo di direzione; impostato su <xref href=&quot;System.Windows.Media.SweepDirection&quot;> </xref> per disegnare l&quot;arco in un angolo di direzione negativo."
    - id: isStroked
      type: System.Boolean
      description: "Impostare su `true` per tracciare l&quot;arco quando un <xref href=&quot;System.Windows.Media.Pen&quot;> </xref> viene utilizzata per eseguire il rendering del segmento; in caso contrario, `false`."
  overload: System.Windows.Media.ArcSegment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.Clone
  id: Clone
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: Clone()
  nameWithType: ArcSegment.Clone()
  fullName: System.Windows.Media.ArcSegment.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Crea un clone modificabile di questo <xref href=&quot;System.Windows.Media.ArcSegment&quot;> </xref>, eseguendo copie complete dei valori dell&quot;oggetto. Durante la copia delle proprietà di dipendenza, questo metodo copia delle associazioni dati e dei riferimenti di risorsa (), ma non possono risolvere non le animazioni né i relativi valori correnti."
  remarks: "Questo metodo viene utilizzato per produrre copie modificabili di bloccata <xref:System.Windows.Freezable>oggetti (o qualsiasi <xref:System.Windows.Freezable>oggetto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Per comodità, questo metodo nasconde la versione ereditata con un&quot;implementazione fortemente tipizzata.       Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.ArcSegment Clone ();
    parameters: []
    return:
      type: System.Windows.Media.ArcSegment
      description: "Un clone modificabile dell&quot;oggetto corrente. L&quot;oggetto clonato <> </> *> proprietà sarà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> anche se l&quot;origine <> </> *> era di proprietà<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.ArcSegment.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: ArcSegment.CloneCurrentValue()
  fullName: System.Windows.Media.ArcSegment.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Crea un clone modificabile di questo <xref href=&quot;System.Windows.Media.ArcSegment&quot;> </xref> oggetto, eseguendo copie complete dei valori correnti di tale oggetto. I riferimenti alle risorse, data binding e le animazioni non vengono copiate, ma i relativi valori correnti."
  remarks: "Questo metodo viene utilizzato per produrre copie modificabili di bloccata <xref:System.Windows.Freezable>oggetti (o qualsiasi <xref:System.Windows.Freezable>oggetto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Per comodità, questo metodo nasconde la versione ereditata con un&quot;implementazione fortemente tipizzata.       Per ulteriori informazioni, vedere <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.ArcSegment CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.ArcSegment
      description: "Un clone modificabile dell&quot;oggetto corrente. L&quot;oggetto clonato <> </> *> proprietà sarà <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> anche se l&quot;origine <> </> *> proprietà <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.ArcSegment.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: ArcSegment.CreateInstanceCore()
  fullName: System.Windows.Media.ArcSegment.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "Da aggiungere."
  overload: System.Windows.Media.ArcSegment.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.IsLargeArc
  id: IsLargeArc
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: IsLargeArc
  nameWithType: ArcSegment.IsLargeArc
  fullName: System.Windows.Media.ArcSegment.IsLargeArc
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Ottiene o imposta un valore che indica se l&quot;arco deve essere maggiore di 180 gradi."
  remarks: "Per gli archi la maggior parte di una particolare posizione, dimensione e la rotazione, sono disponibili quattro archi diversi che possono essere disegnati; il IsLargeArc e <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>proprietà indicano quale arco utilizzare.</xref:System.Windows.Media.ArcSegment.SweepDirection%2A>       Dei quattro candidati angoli, due rappresentano archi grandi dimensioni con operazioni su elementi di 180 gradi o superiore e due rappresentano archi più piccoli con apertura di 180 gradi o meno. Se è IsLargeArc **true**, uno dei due angoli più grande è selezionato; in caso contrario, se è **false**, uno di più piccoli viene scelto sweep. I due candidati rimanenti vengono disegnati in un&quot;altra direzione: <xref:System.Windows.Media.SweepDirection>o <xref:System.Windows.Media.SweepDirection>.</xref:System.Windows.Media.SweepDirection> </xref:System.Windows.Media.SweepDirection> Il <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>proprietà specifica quale utilizzare.</xref:System.Windows.Media.ArcSegment.SweepDirection%2A>       Nella figura seguente mostra due archi ellittici identici tranne che per le relative impostazioni IsLargeArc.       ![ArcSegment con impostazioni IsLargeArc differenti](~/add/media/arcsegment-islargearc.png &quot;ArcSegment con impostazioni IsLargeArc differenti&quot;) oggetti ArcSegment con impostazioni IsLargeArc differenti <a name=&quot;dependencyPropertyInfo_IsLargeArc&quot;> </a> # # informazioni proprietà di dipendenza | | |   |-|-|   | Campo dell&quot;identificatore | <xref:System.Windows.Media.ArcSegment.IsLargeArcProperty>|   | Impostare le proprietà dei metadati su **true**| None |</xref:System.Windows.Media.ArcSegment.IsLargeArcProperty>"
  syntax:
    content: public bool IsLargeArc { get; set; }
    return:
      type: System.Boolean
      description: '**true** se l&quot;arco deve essere maggiore di 180 gradi; in caso contrario, **false**. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.'
  overload: System.Windows.Media.ArcSegment.IsLargeArc*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.IsLargeArcProperty
  id: IsLargeArcProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: IsLargeArcProperty
  nameWithType: ArcSegment.IsLargeArcProperty
  fullName: System.Windows.Media.ArcSegment.IsLargeArcProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifica la <xref:System.Windows.Media.ArcSegment.IsLargeArc*>proprietà di dipendenza.</xref:System.Windows.Media.ArcSegment.IsLargeArc*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty IsLargeArcProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.Point
  id: Point
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: Point
  nameWithType: ArcSegment.Point
  fullName: System.Windows.Media.ArcSegment.Point
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Ottiene o imposta l&quot;endpoint dell&quot;arco ellittico."
  remarks: "La <xref:System.Windows.Media.ArcSegment>classe definisce solo il punto di destinazione dell&quot;arco che rappresenta, il punto iniziale dell&quot;arco è il punto corrente del <xref:System.Windows.Media.PathFigure>a cui il <xref:System.Windows.Media.ArcSegment>viene aggiunto.</xref:System.Windows.Media.ArcSegment> </xref:System.Windows.Media.PathFigure> </xref:System.Windows.Media.ArcSegment>       Se il segmento di arco punto iniziale e finale sono uguali, viene disegnato alcun arco.       Per gli archi la maggior parte di una particolare posizione, dimensione e la rotazione, sono disponibili quattro archi diversi che possono essere disegnati; il <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>e <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>proprietà indicano quale arco utilizzare.</xref:System.Windows.Media.ArcSegment.SweepDirection%2A> </xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>       Dei quattro candidati angoli, due rappresentano archi grandi dimensioni con operazioni su elementi di 180 gradi o superiore e due rappresentano archi più piccoli con apertura di 180 gradi o meno. Se <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>è **true**, uno dei due angoli più grande è selezionato; in caso contrario, se è **false**, uno di più piccoli viene scelto sweep.</xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> I due candidati rimanenti vengono disegnati in un&quot;altra direzione: <xref:System.Windows.Media.SweepDirection>o <xref:System.Windows.Media.SweepDirection>.</xref:System.Windows.Media.SweepDirection> </xref:System.Windows.Media.SweepDirection> Il <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>proprietà specifica quale utilizzare.</xref:System.Windows.Media.ArcSegment.SweepDirection%2A>       Nella figura seguente mostra diversi archi ellittici identici tranne che per le impostazioni del punto.       ![ArcSegment con impostazioni Point differenti](~/add/media/arcsegment-point.png &quot;ArcSegment con impostazioni Point differenti&quot;) oggetti diversi ArcSegment con impostazioni Point differenti <a name=&quot;dependencyPropertyInfo_Point&quot;> </a> # # informazioni proprietà di dipendenza | | |   |-|-|   | Campo dell&quot;identificatore | <xref:System.Windows.Media.ArcSegment.PointProperty>|   | Impostare le proprietà dei metadati su **true**| None |</xref:System.Windows.Media.ArcSegment.PointProperty>"
  syntax:
    content: public System.Windows.Point Point { get; set; }
    return:
      type: System.Windows.Point
      description: "Il punto al quale viene disegnata l&quot;arco. Il valore predefinito è (0,0)."
  overload: System.Windows.Media.ArcSegment.Point*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.PointProperty
  id: PointProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: PointProperty
  nameWithType: ArcSegment.PointProperty
  fullName: System.Windows.Media.ArcSegment.PointProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifica la <xref:System.Windows.Media.ArcSegment.Point*>proprietà di dipendenza.</xref:System.Windows.Media.ArcSegment.Point*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty PointProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.RotationAngle
  id: RotationAngle
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: RotationAngle
  nameWithType: ArcSegment.RotationAngle
  fullName: System.Windows.Media.ArcSegment.RotationAngle
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Ottiene o imposta la quantità, in gradi, mediante il quale l&quot;ellisse viene ruotata sull&quot;asse x."
  remarks: "Nella figura seguente mostra diversi archi ellittici identici tranne che per le relative impostazioni RotationAngle.       ![ArcSegment con impostazioni RotationAngle differenti](~/add/media/arcsegment-rotationangle.png &quot;ArcSegment con impostazioni RotationAngle differenti&quot;) oggetti diversi ArcSegment con impostazioni RotationAngle differenti si noti che, se l&quot;arco larghezza e altezza sono uguali, impostazione di questa proprietà non ha alcun effetto.      <a name=&quot;dependencyPropertyInfo_RotationAngle&quot;></a># # Informazioni proprietà di dipendenza | | |   |-|-|   | Campo dell&quot;identificatore | <xref:System.Windows.Media.ArcSegment.RotationAngleProperty>|   | Impostare le proprietà dei metadati su **true**| None |</xref:System.Windows.Media.ArcSegment.RotationAngleProperty>"
  syntax:
    content: public double RotationAngle { get; set; }
    return:
      type: System.Double
      description: "Quantità, in gradi, mediante il quale l&quot;ellisse viene ruotata sull&quot;asse x. Il valore predefinito è 0."
  overload: System.Windows.Media.ArcSegment.RotationAngle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.RotationAngleProperty
  id: RotationAngleProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: RotationAngleProperty
  nameWithType: ArcSegment.RotationAngleProperty
  fullName: System.Windows.Media.ArcSegment.RotationAngleProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifica la <xref:System.Windows.Media.ArcSegment.RotationAngle*>proprietà di dipendenza.</xref:System.Windows.Media.ArcSegment.RotationAngle*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty RotationAngleProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.Size
  id: Size
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: Size
  nameWithType: ArcSegment.Size
  fullName: System.Windows.Media.ArcSegment.Size
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Ottiene o imposta il raggio x e y dell&quot;arco come una <xref href=&quot;System.Windows.Size&quot;> </xref> struttura."
  remarks: "Nella figura seguente mostra diversi archi ellittici identici tranne che per le impostazioni di dimensioni.       ![ArcSegment con impostazioni Size differenti](~/add/media/arcsegment-size.png &quot;ArcSegment con impostazioni Size differenti&quot;) oggetti diversi ArcSegment con impostazioni Size differenti <a name=&quot;dependencyPropertyInfo_Size&quot;> </a> # # informazioni proprietà di dipendenza | | |   |-|-|   | Campo dell&quot;identificatore | <xref:System.Windows.Media.ArcSegment.SizeProperty>|   | Impostare le proprietà dei metadati su **true**| None |</xref:System.Windows.Media.ArcSegment.SizeProperty>"
  syntax:
    content: public System.Windows.Size Size { get; set; }
    return:
      type: System.Windows.Size
      description: "Oggetto <xref href=&quot;System.Windows.Size&quot;> </xref> struttura che descrive i raggi x e y dell&quot;arco ellittico. Il <xref href=&quot;System.Windows.Size&quot;> </xref> della struttura <> </> *> proprietà specifica raggio x dell&quot;arco; relativo <> </> *> proprietà specifica raggio y dell&quot;arco. Il valore predefinito è 0,0."
  overload: System.Windows.Media.ArcSegment.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.SizeProperty
  id: SizeProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: SizeProperty
  nameWithType: ArcSegment.SizeProperty
  fullName: System.Windows.Media.ArcSegment.SizeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifica la <xref:System.Windows.Media.ArcSegment.Size*>proprietà di dipendenza.</xref:System.Windows.Media.ArcSegment.Size*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty SizeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.SweepDirection
  id: SweepDirection
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: SweepDirection
  nameWithType: ArcSegment.SweepDirection
  fullName: System.Windows.Media.ArcSegment.SweepDirection
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Ottiene o imposta un valore che specifica se l&quot;arco viene disegnato nel <xref href=&quot;System.Windows.Media.SweepDirection&quot;> </xref> o <xref href=&quot;System.Windows.Media.SweepDirection&quot;> </xref> direzione."
  remarks: "Per un <xref:System.Windows.Media.ArcSegment>con un determinato <xref:System.Windows.Media.ArcSegment.Size%2A>, <xref:System.Windows.Media.ArcSegment.RotationAngle%2A>, punto di inizio e fine <xref:System.Windows.Media.ArcSegment.Point%2A>, sono possibili quattro archi diversi.</xref:System.Windows.Media.ArcSegment.Point%2A> </xref:System.Windows.Media.ArcSegment.RotationAngle%2A> </xref:System.Windows.Media.ArcSegment.Size%2A> </xref:System.Windows.Media.ArcSegment> Specifica il <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>proprietà riduce il numero di possibili archi a due: un arco disegnato dal punto di inizio alla fine <xref:System.Windows.Media.ArcSegment.Point%2A>in un <xref:System.Windows.Media.SweepDirection>direzione e un arco disegnato dal punto di inizio per il punto finale in un <xref:System.Windows.Media.SweepDirection>direzione.</xref:System.Windows.Media.SweepDirection> </xref:System.Windows.Media.SweepDirection> </xref:System.Windows.Media.ArcSegment.Point%2A> </xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>       Nella figura seguente mostra due archi ellittici identici tranne che per le relative impostazioni SweepDirection.       ![ArcSegment con impostazioni SweepDirection differenti](~/add/media/arcsegment-sweepdirection.png &quot;ArcSegment con impostazioni SweepDirection differenti&quot;) oggetti ArcSegment con impostazioni SweepDirection differenti <a name=&quot;dependencyPropertyInfo_SweepDirection&quot;> </a> # # informazioni proprietà di dipendenza | | |   |-|-|   | Campo dell&quot;identificatore | <xref:System.Windows.Media.ArcSegment.SweepDirectionProperty>|   | Impostare le proprietà dei metadati su **true**| None |</xref:System.Windows.Media.ArcSegment.SweepDirectionProperty>"
  syntax:
    content: public System.Windows.Media.SweepDirection SweepDirection { get; set; }
    return:
      type: System.Windows.Media.SweepDirection
      description: "Un valore che specifica la direzione in cui viene disegnata l&quot;arco. Il valore predefinito è <xref href=&quot;System.Windows.Media.SweepDirection&quot;> </xref>."
  overload: System.Windows.Media.ArcSegment.SweepDirection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.ArcSegment.SweepDirectionProperty
  id: SweepDirectionProperty
  parent: System.Windows.Media.ArcSegment
  langs:
  - csharp
  name: SweepDirectionProperty
  nameWithType: ArcSegment.SweepDirectionProperty
  fullName: System.Windows.Media.ArcSegment.SweepDirectionProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifica la <xref:System.Windows.Media.ArcSegment.SweepDirection*>proprietà di dipendenza.</xref:System.Windows.Media.ArcSegment.SweepDirection*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty SweepDirectionProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.PathSegment
  isExternal: false
  name: System.Windows.Media.PathSegment
- uid: System.Windows.Media.ArcSegment.#ctor
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: ArcSegment()
  nameWithType: ArcSegment.ArcSegment()
  fullName: System.Windows.Media.ArcSegment.ArcSegment()
- uid: System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  nameWithType: ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
  fullName: System.Windows.Media.ArcSegment.ArcSegment(Point,Size,Double,Boolean,SweepDirection,Boolean)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Size
  parent: System.Windows
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.SweepDirection
  parent: System.Windows.Media
  isExternal: false
  name: SweepDirection
  nameWithType: SweepDirection
  fullName: System.Windows.Media.SweepDirection
- uid: System.Windows.Media.ArcSegment.Clone
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Clone()
  nameWithType: ArcSegment.Clone()
  fullName: System.Windows.Media.ArcSegment.Clone()
- uid: System.Windows.Media.ArcSegment
  parent: System.Windows.Media
  isExternal: false
  name: ArcSegment
  nameWithType: ArcSegment
  fullName: System.Windows.Media.ArcSegment
- uid: System.Windows.Media.ArcSegment.CloneCurrentValue
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: ArcSegment.CloneCurrentValue()
  fullName: System.Windows.Media.ArcSegment.CloneCurrentValue()
- uid: System.Windows.Media.ArcSegment.CreateInstanceCore
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: ArcSegment.CreateInstanceCore()
  fullName: System.Windows.Media.ArcSegment.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.ArcSegment.IsLargeArc
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: IsLargeArc
  nameWithType: ArcSegment.IsLargeArc
  fullName: System.Windows.Media.ArcSegment.IsLargeArc
- uid: System.Windows.Media.ArcSegment.IsLargeArcProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: IsLargeArcProperty
  nameWithType: ArcSegment.IsLargeArcProperty
  fullName: System.Windows.Media.ArcSegment.IsLargeArcProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.ArcSegment.Point
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Point
  nameWithType: ArcSegment.Point
  fullName: System.Windows.Media.ArcSegment.Point
- uid: System.Windows.Media.ArcSegment.PointProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: PointProperty
  nameWithType: ArcSegment.PointProperty
  fullName: System.Windows.Media.ArcSegment.PointProperty
- uid: System.Windows.Media.ArcSegment.RotationAngle
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: RotationAngle
  nameWithType: ArcSegment.RotationAngle
  fullName: System.Windows.Media.ArcSegment.RotationAngle
- uid: System.Windows.Media.ArcSegment.RotationAngleProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: RotationAngleProperty
  nameWithType: ArcSegment.RotationAngleProperty
  fullName: System.Windows.Media.ArcSegment.RotationAngleProperty
- uid: System.Windows.Media.ArcSegment.Size
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Size
  nameWithType: ArcSegment.Size
  fullName: System.Windows.Media.ArcSegment.Size
- uid: System.Windows.Media.ArcSegment.SizeProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: SizeProperty
  nameWithType: ArcSegment.SizeProperty
  fullName: System.Windows.Media.ArcSegment.SizeProperty
- uid: System.Windows.Media.ArcSegment.SweepDirection
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: SweepDirection
  nameWithType: ArcSegment.SweepDirection
  fullName: System.Windows.Media.ArcSegment.SweepDirection
- uid: System.Windows.Media.ArcSegment.SweepDirectionProperty
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: SweepDirectionProperty
  nameWithType: ArcSegment.SweepDirectionProperty
  fullName: System.Windows.Media.ArcSegment.SweepDirectionProperty
- uid: System.Windows.Media.ArcSegment.#ctor*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: ArcSegment
  nameWithType: ArcSegment.ArcSegment
- uid: System.Windows.Media.ArcSegment.Clone*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Clone
  nameWithType: ArcSegment.Clone
- uid: System.Windows.Media.ArcSegment.CloneCurrentValue*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: CloneCurrentValue
  nameWithType: ArcSegment.CloneCurrentValue
- uid: System.Windows.Media.ArcSegment.CreateInstanceCore*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: CreateInstanceCore
  nameWithType: ArcSegment.CreateInstanceCore
- uid: System.Windows.Media.ArcSegment.IsLargeArc*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: IsLargeArc
  nameWithType: ArcSegment.IsLargeArc
- uid: System.Windows.Media.ArcSegment.Point*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Point
  nameWithType: ArcSegment.Point
- uid: System.Windows.Media.ArcSegment.RotationAngle*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: RotationAngle
  nameWithType: ArcSegment.RotationAngle
- uid: System.Windows.Media.ArcSegment.Size*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: Size
  nameWithType: ArcSegment.Size
- uid: System.Windows.Media.ArcSegment.SweepDirection*
  parent: System.Windows.Media.ArcSegment
  isExternal: false
  name: SweepDirection
  nameWithType: ArcSegment.SweepDirection
