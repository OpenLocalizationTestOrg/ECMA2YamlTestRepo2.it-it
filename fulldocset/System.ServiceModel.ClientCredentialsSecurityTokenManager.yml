### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager
  id: ClientCredentialsSecurityTokenManager
  children:
  - System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ClientCredentials)
  - System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials
  - System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  - System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  - System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  - System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)
  - System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  langs:
  - csharp
  name: ClientCredentialsSecurityTokenManager
  nameWithType: ClientCredentialsSecurityTokenManager
  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager
  type: Class
  summary: "Gestisce i token di sicurezza per il client."
  remarks: "Questa classe gestisce la serializzazione del token di sicurezza, il provisioning di token di sicurezza e autenticazione token di sicurezza per il client. È un&quot;istanza di questa classe per ogni channel factory del client."
  example:
  - "The following code shows how you can override this class to create a custom Client Credentials Security Token Manager.  \n  \n [!code-vb[c_CustomCredentials#2](~/add/codesnippet/visualbasic/t-system.servicemodel.cl_1.vb)]\n [!code-cs[c_CustomCredentials#2](~/add/codesnippet/csharp/t-system.servicemodel.cl_1.cs)]"
  syntax:
    content: 'public class ClientCredentialsSecurityTokenManager : System.IdentityModel.Selectors.SecurityTokenManager'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenManager
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ClientCredentials)
  id: '#ctor(System.ServiceModel.Description.ClientCredentials)'
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  langs:
  - csharp
  name: ClientCredentialsSecurityTokenManager(ClientCredentials)
  nameWithType: ClientCredentialsSecurityTokenManager.ClientCredentialsSecurityTokenManager(ClientCredentials)
  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentialsSecurityTokenManager(ClientCredentials)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.ClientCredentialsSecurityTokenManager&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code shows how to override this constructor.  \n  \n [!code-vb[ClientCredentialsSecurityTokenManager#8](~/add/codesnippet/visualbasic/f7027904-ba13-4c11-87f9-_1.vb)]\n [!code-cs[ClientCredentialsSecurityTokenManager#8](~/add/codesnippet/csharp/f7027904-ba13-4c11-87f9-_1.cs)]"
  syntax:
    content: public ClientCredentialsSecurityTokenManager (System.ServiceModel.Description.ClientCredentials clientCredentials);
    parameters:
    - id: clientCredentials
      type: System.ServiceModel.Description.ClientCredentials
      description: "<xref:System.ServiceModel.Description.ClientCredentials>.</xref:System.ServiceModel.Description.ClientCredentials>"
  overload: System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>clientCredentials</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials
  id: ClientCredentials
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  langs:
  - csharp
  name: ClientCredentials
  nameWithType: ClientCredentialsSecurityTokenManager.ClientCredentials
  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ottiene le credenziali client."
  remarks: "Il <xref:System.ServiceModel.Description.ClientCredentials>oggetto consente di configurare le credenziali client da utilizzare per l&quot;autenticazione al servizio.</xref:System.ServiceModel.Description.ClientCredentials>"
  syntax:
    content: public System.ServiceModel.Description.ClientCredentials ClientCredentials { get; }
    return:
      type: System.ServiceModel.Description.ClientCredentials
      description: "Il <xref:System.ServiceModel.Description.ClientCredentials>oggetto.</xref:System.ServiceModel.Description.ClientCredentials>"
  overload: System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  id: CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Crea un autenticatore del token di sicurezza."
  remarks: "<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>È responsabile della convalida dei token di sicurezza e fornendo un <xref:System.IdentityModel.Policy.IAuthorizationPolicy>per ottenere le attestazioni per la sicurezza del token che soddisfano i requisiti specificati in <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.</xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement> </xref:System.IdentityModel.Policy.IAuthorizationPolicy> </xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator>"
  syntax:
    content: public override System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: tokenRequirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "The <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;></xref>."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "Quando termina, questo metodo contiene un <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref>. Questo parametro viene passato non inizializzato."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenAuthenticator
      description: "Il <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenAuthenticator&quot;> </xref> oggetto."
  overload: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenRequirement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  id: CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenProvider(SecurityTokenRequirement)
  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Crea un provider di token di sicurezza."
  remarks: "La <xref:System.IdentityModel.Selectors.SecurityTokenProvider>classe è responsabile di ottenere token per un determinato <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.</xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> Provider di token facoltativamente supporta il rinnovo e annullamento dei token."
  example:
  - "The following code shows how to override this method.  \n  \n [!code-vb[ClientCredentialsSecurityTokenManager#2](~/add/codesnippet/visualbasic/5c6f32c5-5142-4e18-b825-_1.vb)]\n [!code-cs[ClientCredentialsSecurityTokenManager#2](~/add/codesnippet/csharp/5c6f32c5-5142-4e18-b825-_1.cs)]"
  syntax:
    content: public override System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);
    parameters:
    - id: tokenRequirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "The <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;></xref>."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenProvider
      description: "Il <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenProvider&quot;> </xref> oggetto."
  overload: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenRequirement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  id: CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenSerializer(SecurityTokenVersion)
  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Crea un serializzatore di token di sicurezza."
  remarks: "Il <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>viene utilizzata per scrivere e leggere i token di sicurezza, gli identificatori di chiave di sicurezza e le clausole identificatore di chiave di sicurezza.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> Quando si deserializza il token da XML, il token restituito deve essere in grado di eseguire operazioni di crittografia. Il serializzatore di token deve pertanto garantire che il token deserializzato può eseguire operazioni di crittografia (l&quot;elaborazione dei ticket Kerberos, la decodifica x.&509;, la decodifica SAML e altre operazioni) tuttavia decisioni delle applicazioni spettano trust all&quot;autenticatore del token di sicurezza."
  syntax:
    content: public override System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);
    parameters:
    - id: version
      type: System.IdentityModel.Selectors.SecurityTokenVersion
      description: "Il <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenVersion&quot;> </xref> del token di sicurezza."
    return:
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "Il <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> oggetto."
  overload: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)
  id: CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  langs:
  - csharp
  name: CreateSecurityTokenSerializer(SecurityVersion)
  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityVersion)
  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityVersion)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Crea un serializzatore di token di sicurezza."
  remarks: "Il <xref:System.IdentityModel.Selectors.SecurityTokenSerializer>viene utilizzata per scrivere e leggere i token di sicurezza, gli identificatori di chiave di sicurezza e le clausole identificatore di chiave di sicurezza.</xref:System.IdentityModel.Selectors.SecurityTokenSerializer> Quando si deserializza il token da XML, il token restituito deve essere in grado di eseguire operazioni di crittografia. Il serializzatore di token deve pertanto garantire che il token deserializzato può eseguire operazioni di crittografia (l&quot;elaborazione dei ticket Kerberos, la decodifica x.&509;, la decodifica SAML e altre operazioni) tuttavia decisioni delle applicazioni spettano trust all&quot;autenticatore del token di sicurezza."
  syntax:
    content: protected System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.ServiceModel.Security.SecurityVersion version);
    parameters:
    - id: version
      type: System.ServiceModel.Security.SecurityVersion
      description: "Il <xref:System.ServiceModel.Security.SecurityVersion>del token di sicurezza.</xref:System.ServiceModel.Security.SecurityVersion>"
    return:
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "Il <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> oggetto."
  overload: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  id: IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  langs:
  - csharp
  name: IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  nameWithType: ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Ottiene un valore che indica se il requisito del token specificato è un requisito di token di sicurezza emesso."
  syntax:
    content: protected bool IsIssuedSecurityTokenRequirement (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);
    parameters:
    - id: requirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "The <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenRequirement&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il requisito del token specificato è un requisito di token di sicurezza emesso; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>requirement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenManager
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenManager
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ClientCredentials)
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  isExternal: false
  name: ClientCredentialsSecurityTokenManager(ClientCredentials)
  nameWithType: ClientCredentialsSecurityTokenManager.ClientCredentialsSecurityTokenManager(ClientCredentials)
  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentialsSecurityTokenManager(ClientCredentials)
- uid: System.ServiceModel.Description.ClientCredentials
  parent: System.ServiceModel.Description
  isExternal: true
  name: ClientCredentials
  nameWithType: ClientCredentials
  fullName: System.ServiceModel.Description.ClientCredentials
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  isExternal: false
  name: ClientCredentials
  nameWithType: ClientCredentialsSecurityTokenManager.ClientCredentials
  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(SecurityTokenRequirement,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenAuthenticator
  nameWithType: SecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenProvider(SecurityTokenRequirement)
  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(SecurityTokenRequirement)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer(SecurityTokenVersion)
  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityTokenVersion)
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenVersion
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenVersion
  nameWithType: SecurityTokenVersion
  fullName: System.IdentityModel.Selectors.SecurityTokenVersion
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer(SecurityVersion)
  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityVersion)
  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(SecurityVersion)
- uid: System.ServiceModel.Security.SecurityVersion
  parent: System.ServiceModel.Security
  isExternal: true
  name: SecurityVersion
  nameWithType: SecurityVersion
  fullName: System.ServiceModel.Security.SecurityVersion
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  isExternal: false
  name: IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  nameWithType: ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
  fullName: System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(SecurityTokenRequirement)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor*
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  isExternal: false
  name: ClientCredentialsSecurityTokenManager
  nameWithType: ClientCredentialsSecurityTokenManager.ClientCredentialsSecurityTokenManager
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials*
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  isExternal: false
  name: ClientCredentials
  nameWithType: ClientCredentialsSecurityTokenManager.ClientCredentials
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator*
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenAuthenticator
  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider*
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenProvider
  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer*
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  isExternal: false
  name: CreateSecurityTokenSerializer
  nameWithType: ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer
- uid: System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement*
  parent: System.ServiceModel.ClientCredentialsSecurityTokenManager
  isExternal: false
  name: IsIssuedSecurityTokenRequirement
  nameWithType: ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement
