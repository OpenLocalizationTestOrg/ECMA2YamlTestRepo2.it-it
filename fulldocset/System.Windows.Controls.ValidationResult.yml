### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ValidationResult
  id: ValidationResult
  children:
  - System.Windows.Controls.ValidationResult.#ctor(System.Boolean,System.Object)
  - System.Windows.Controls.ValidationResult.Equals(System.Object)
  - System.Windows.Controls.ValidationResult.ErrorContent
  - System.Windows.Controls.ValidationResult.GetHashCode
  - System.Windows.Controls.ValidationResult.IsValid
  - System.Windows.Controls.ValidationResult.op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)
  - System.Windows.Controls.ValidationResult.op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)
  - System.Windows.Controls.ValidationResult.ValidResult
  langs:
  - csharp
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: System.Windows.Controls.ValidationResult
  type: Class
  summary: "Rappresenta il risultato restituito dal <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref>.<xref:System.Windows.Controls.ValidationRule.Validate*> che indica se il valore selezionato è stato passato il <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref>.</xref:System.Windows.Controls.ValidationRule.Validate*>"
  remarks: "Il [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] modello di associazione dati consente di associare <xref:System.Windows.Data.Binding.ValidationRules%2A>con il <xref:System.Windows.Data.Binding>o <xref:System.Windows.Data.MultiBinding>oggetto.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.ValidationRules%2A> È possibile creare regole personalizzate creando sottoclassi di <xref:System.Windows.Controls.ValidationRule>classe e l&quot;implementazione di <xref:System.Windows.Controls.ValidationRule.Validate%2A>(metodo).</xref:System.Windows.Controls.ValidationRule.Validate%2A> </xref:System.Windows.Controls.ValidationRule> Il <xref:System.Windows.Controls.ValidationRule.Validate%2A>metodo restituisce un oggetto ValidationResult per segnalare se il valore controllato è valido.</xref:System.Windows.Controls.ValidationRule.Validate%2A>       Per una descrizione dettagliata del processo di convalida, vedere &quot;Convalida dei dati&quot; in [Panoramica del Data Binding](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows the implementation of a validation rule that marks the input value as invalid if it contains non-numeric characters or outside the lower and upper bounds. If the value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property of the returned ValidationResult are set to the appropriate error message and `false` respectively.  \n  \n For the complete example, see [How to: Implement Binding Validation](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[BindValidation#3](~/add/codesnippet/csharp/BindingValidation/AgeRangeRule.cs#3)]"
  syntax:
    content: public class ValidationResult
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationResult.#ctor(System.Boolean,System.Object)
  id: '#ctor(System.Boolean,System.Object)'
  parent: System.Windows.Controls.ValidationResult
  langs:
  - csharp
  name: ValidationResult(Boolean,Object)
  nameWithType: ValidationResult.ValidationResult(Boolean,Object)
  fullName: System.Windows.Controls.ValidationResult.ValidationResult(Boolean,Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Controls.ValidationResult&quot;> </xref> classe."
  remarks: "Il [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] modello di associazione dati consente di associare <xref:System.Windows.Data.Binding.ValidationRules%2A>con il <xref:System.Windows.Data.Binding>o <xref:System.Windows.Data.MultiBinding>oggetto.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.ValidationRules%2A> È possibile creare regole personalizzate creando sottoclassi di <xref:System.Windows.Controls.ValidationRule>classe e l&quot;implementazione di <xref:System.Windows.Controls.ValidationRule.Validate%2A>(metodo).</xref:System.Windows.Controls.ValidationRule.Validate%2A> </xref:System.Windows.Controls.ValidationRule> Il <xref:System.Windows.Controls.ValidationRule.Validate%2A>metodo restituisce un <xref:System.Windows.Controls.ValidationResult>per segnalare se il valore controllato è valido.</xref:System.Windows.Controls.ValidationResult> </xref:System.Windows.Controls.ValidationRule.Validate%2A>       Per una descrizione dettagliata del processo di convalida, vedere &quot;Convalida dei dati&quot; in [Panoramica del Data Binding](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows the implementation of a validation rule that marks the input value as invalid if it contains non-numeric characters or outside the lower and upper bounds. If the value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property of the returned <xref:System.Windows.Controls.ValidationResult> are set to the appropriate error message and `false` respectively.  \n  \n For the complete example, see [How to: Implement Binding Validation](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[BindValidation#3](~/add/codesnippet/csharp/BindingValidation/AgeRangeRule.cs#3)]"
  syntax:
    content: public ValidationResult (bool isValid, object errorContent);
    parameters:
    - id: isValid
      type: System.Boolean
      description: "Se il valore confrontato con il <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> è valido."
    - id: errorContent
      type: System.Object
      description: "Informazioni relative alla non validità."
  overload: System.Windows.Controls.ValidationResult.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationResult.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Controls.ValidationResult
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ValidationResult.Equals(Object)
  fullName: System.Windows.Controls.ValidationResult.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Confronta l&quot;istanza specificata e l&quot;istanza corrente di <xref href=&quot;System.Windows.Controls.ValidationResult&quot;> </xref> per determinarne l&quot;uguaglianza."
  remarks: "Questo metodo viene chiamato da override dell&quot;operatore."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Il <xref href=&quot;System.Windows.Controls.ValidationResult&quot;> </xref> istanza da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> obj </code> e questa istanza di <xref href=&quot;System.Windows.Controls.ValidationResult&quot;> </xref>hanno gli stessi valori."
  overload: System.Windows.Controls.ValidationResult.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationResult.ErrorContent
  id: ErrorContent
  parent: System.Windows.Controls.ValidationResult
  langs:
  - csharp
  name: ErrorContent
  nameWithType: ValidationResult.ErrorContent
  fullName: System.Windows.Controls.ValidationResult.ErrorContent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Ottiene un oggetto che fornisce informazioni aggiuntive relative alla non validità."
  remarks: "Il [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] modello di associazione dati consente di associare <xref:System.Windows.Data.Binding.ValidationRules%2A>con il <xref:System.Windows.Data.Binding>o <xref:System.Windows.Data.MultiBinding>oggetto.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.ValidationRules%2A> È possibile creare regole personalizzate creando sottoclassi di <xref:System.Windows.Controls.ValidationRule>classe e l&quot;implementazione di <xref:System.Windows.Controls.ValidationRule.Validate%2A>(metodo).</xref:System.Windows.Controls.ValidationRule.Validate%2A> </xref:System.Windows.Controls.ValidationRule> Il <xref:System.Windows.Controls.ValidationRule.Validate%2A>metodo restituisce un <xref:System.Windows.Controls.ValidationResult>per segnalare se il valore controllato è valido.</xref:System.Windows.Controls.ValidationResult> </xref:System.Windows.Controls.ValidationRule.Validate%2A>       Per una descrizione dettagliata del processo di convalida, vedere &quot;Convalida dei dati&quot; in [Panoramica del Data Binding](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows the implementation of a validation rule that marks the input value as invalid if it contains non-numeric characters or outside the lower and upper bounds. If the value is invalid, the ErrorContent property and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property of the returned <xref:System.Windows.Controls.ValidationResult> are set to the appropriate error message and `false` respectively.  \n  \n For the complete example, see [How to: Implement Binding Validation](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[BindValidation#3](~/add/codesnippet/csharp/BindingValidation/AgeRangeRule.cs#3)]"
  syntax:
    content: public object ErrorContent { get; }
    return:
      type: System.Object
      description: "Oggetto che fornisce informazioni aggiuntive relative alla non validità."
  overload: System.Windows.Controls.ValidationResult.ErrorContent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationResult.GetHashCode
  id: GetHashCode
  parent: System.Windows.Controls.ValidationResult
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ValidationResult.GetHashCode()
  fullName: System.Windows.Controls.ValidationResult.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Restituisce il codice hash per questo <xref href=&quot;System.Windows.Controls.ValidationResult&quot;> </xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Il codice hash per questo <xref href=&quot;System.Windows.Controls.ValidationResult&quot;> </xref>."
  overload: System.Windows.Controls.ValidationResult.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationResult.IsValid
  id: IsValid
  parent: System.Windows.Controls.ValidationResult
  langs:
  - csharp
  name: IsValid
  nameWithType: ValidationResult.IsValid
  fullName: System.Windows.Controls.ValidationResult.IsValid
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Ottiene un valore che indica se il valore confrontato con il <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> è valido."
  remarks: "Il [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] modello di associazione dati consente di associare <xref:System.Windows.Data.Binding.ValidationRules%2A>con il <xref:System.Windows.Data.Binding>o <xref:System.Windows.Data.MultiBinding>oggetto.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.ValidationRules%2A> È possibile creare regole personalizzate creando sottoclassi di <xref:System.Windows.Controls.ValidationRule>classe e l&quot;implementazione di <xref:System.Windows.Controls.ValidationRule.Validate%2A>(metodo).</xref:System.Windows.Controls.ValidationRule.Validate%2A> </xref:System.Windows.Controls.ValidationRule> Il <xref:System.Windows.Controls.ValidationRule.Validate%2A>metodo restituisce un <xref:System.Windows.Controls.ValidationResult>per segnalare se il valore controllato è valido.</xref:System.Windows.Controls.ValidationResult> </xref:System.Windows.Controls.ValidationRule.Validate%2A>       Per una descrizione dettagliata del processo di convalida, vedere &quot;Convalida dei dati&quot; in [Panoramica del Data Binding](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows the implementation of a validation rule that marks the input value as invalid if it contains non-numeric characters or outside the lower and upper bounds. If the value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property and the IsValid property of the returned <xref:System.Windows.Controls.ValidationResult> are set to the appropriate error message and `false` respectively.  \n  \n For the complete example, see [How to: Implement Binding Validation](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[BindValidation#3](~/add/codesnippet/csharp/BindingValidation/AgeRangeRule.cs#3)]"
  syntax:
    content: public bool IsValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il valore è valido. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.ValidationResult.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationResult.op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)
  id: op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)
  parent: System.Windows.Controls.ValidationResult
  langs:
  - csharp
  name: op_Equality(ValidationResult,ValidationResult)
  nameWithType: ValidationResult.op_Equality(ValidationResult,ValidationResult)
  fullName: System.Windows.Controls.ValidationResult.op_Equality(ValidationResult,ValidationResult)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Confronta due <xref href=&quot;System.Windows.Controls.ValidationResult&quot;> </xref> oggetti per l&quot;uguaglianza di valori."
  syntax:
    content: public static bool op_Equality (System.Windows.Controls.ValidationResult left, System.Windows.Controls.ValidationResult right);
    parameters:
    - id: left
      type: System.Windows.Controls.ValidationResult
      description: "La prima istanza da confrontare."
    - id: right
      type: System.Windows.Controls.ValidationResult
      description: "La seconda istanza da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i due oggetti sono uguali. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.ValidationResult.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationResult.op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)
  id: op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)
  parent: System.Windows.Controls.ValidationResult
  langs:
  - csharp
  name: op_Inequality(ValidationResult,ValidationResult)
  nameWithType: ValidationResult.op_Inequality(ValidationResult,ValidationResult)
  fullName: System.Windows.Controls.ValidationResult.op_Inequality(ValidationResult,ValidationResult)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Confronta due <xref href=&quot;System.Windows.Controls.ValidationResult&quot;> </xref> oggetti per verificarne la disuguaglianza di valore."
  syntax:
    content: public static bool op_Inequality (System.Windows.Controls.ValidationResult left, System.Windows.Controls.ValidationResult right);
    parameters:
    - id: left
      type: System.Windows.Controls.ValidationResult
      description: "La prima istanza da confrontare."
    - id: right
      type: System.Windows.Controls.ValidationResult
      description: "La seconda istanza da confrontare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i valori non sono uguali. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.ValidationResult.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationResult.ValidResult
  id: ValidResult
  parent: System.Windows.Controls.ValidationResult
  langs:
  - csharp
  name: ValidResult
  nameWithType: ValidationResult.ValidResult
  fullName: System.Windows.Controls.ValidationResult.ValidResult
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Ottiene un&quot;istanza valida di <xref href=&quot;System.Windows.Controls.ValidationResult&quot;> </xref>."
  syntax:
    content: public static System.Windows.Controls.ValidationResult ValidResult { get; }
    return:
      type: System.Windows.Controls.ValidationResult
      description: "Un&quot;istanza valida di <xref href=&quot;System.Windows.Controls.ValidationResult&quot;> </xref>."
  overload: System.Windows.Controls.ValidationResult.ValidResult*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Controls.ValidationResult.#ctor(System.Boolean,System.Object)
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: ValidationResult(Boolean,Object)
  nameWithType: ValidationResult.ValidationResult(Boolean,Object)
  fullName: System.Windows.Controls.ValidationResult.ValidationResult(Boolean,Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.ValidationResult.Equals(System.Object)
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: Equals(Object)
  nameWithType: ValidationResult.Equals(Object)
  fullName: System.Windows.Controls.ValidationResult.Equals(Object)
- uid: System.Windows.Controls.ValidationResult.ErrorContent
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: ErrorContent
  nameWithType: ValidationResult.ErrorContent
  fullName: System.Windows.Controls.ValidationResult.ErrorContent
- uid: System.Windows.Controls.ValidationResult.GetHashCode
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: GetHashCode()
  nameWithType: ValidationResult.GetHashCode()
  fullName: System.Windows.Controls.ValidationResult.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.ValidationResult.IsValid
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: IsValid
  nameWithType: ValidationResult.IsValid
  fullName: System.Windows.Controls.ValidationResult.IsValid
- uid: System.Windows.Controls.ValidationResult.op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: op_Equality(ValidationResult,ValidationResult)
  nameWithType: ValidationResult.op_Equality(ValidationResult,ValidationResult)
  fullName: System.Windows.Controls.ValidationResult.op_Equality(ValidationResult,ValidationResult)
- uid: System.Windows.Controls.ValidationResult
  parent: System.Windows.Controls
  isExternal: false
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: System.Windows.Controls.ValidationResult
- uid: System.Windows.Controls.ValidationResult.op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: op_Inequality(ValidationResult,ValidationResult)
  nameWithType: ValidationResult.op_Inequality(ValidationResult,ValidationResult)
  fullName: System.Windows.Controls.ValidationResult.op_Inequality(ValidationResult,ValidationResult)
- uid: System.Windows.Controls.ValidationResult.ValidResult
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: ValidResult
  nameWithType: ValidationResult.ValidResult
  fullName: System.Windows.Controls.ValidationResult.ValidResult
- uid: System.Windows.Controls.ValidationResult.#ctor*
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: ValidationResult
  nameWithType: ValidationResult.ValidationResult
- uid: System.Windows.Controls.ValidationResult.Equals*
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: Equals
  nameWithType: ValidationResult.Equals
- uid: System.Windows.Controls.ValidationResult.ErrorContent*
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: ErrorContent
  nameWithType: ValidationResult.ErrorContent
- uid: System.Windows.Controls.ValidationResult.GetHashCode*
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: GetHashCode
  nameWithType: ValidationResult.GetHashCode
- uid: System.Windows.Controls.ValidationResult.IsValid*
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: IsValid
  nameWithType: ValidationResult.IsValid
- uid: System.Windows.Controls.ValidationResult.op_Equality*
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: op_Equality
  nameWithType: ValidationResult.op_Equality
- uid: System.Windows.Controls.ValidationResult.op_Inequality*
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: op_Inequality
  nameWithType: ValidationResult.op_Inequality
- uid: System.Windows.Controls.ValidationResult.ValidResult*
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: ValidResult
  nameWithType: ValidationResult.ValidResult
