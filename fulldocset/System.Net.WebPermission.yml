### YamlMime:ManagedReference
items:
- uid: System.Net.WebPermission
  id: WebPermission
  children:
  - System.Net.WebPermission.#ctor
  - System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  - System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  - System.Net.WebPermission.AcceptList
  - System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  - System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  - System.Net.WebPermission.ConnectList
  - System.Net.WebPermission.Copy
  - System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  - System.Net.WebPermission.Intersect(System.Security.IPermission)
  - System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  - System.Net.WebPermission.IsUnrestricted
  - System.Net.WebPermission.ToXml
  - System.Net.WebPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: WebPermission
  nameWithType: WebPermission
  fullName: System.Net.WebPermission
  type: Class
  summary: "Controlla i diritti per accedere alle risorse HTTP Internet."
  remarks: "WebPermission fornisce un set di metodi e proprietà per controllare l&quot;accesso alle risorse Internet. È possibile utilizzare una WebPermission per fornire l&quot;accesso con o senza restrizioni alla risorsa, in base il <xref:System.Security.Permissions.PermissionState>impostato quando viene creato il WebPermission.</xref:System.Security.Permissions.PermissionState>       Creare un&quot;istanza di WebPermission chiamando il relativo costruttore utilizzando uno dei set di parametri seguenti:-senza parametri. Il valore predefinito <xref:System.Security.Permissions.PermissionState>è <xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>      -   A <xref:System.Security.Permissions.PermissionState>.</xref:System.Security.Permissions.PermissionState> Specificare il parametro <xref:System.Security.Permissions.PermissionState>per consentire qualsiasi URI da utilizzare nella classe di destinazione, o <xref:System.Security.Permissions.PermissionState>per consentire l&quot;accesso solo agli URI specificati mediante l&quot;utilizzo del <xref:System.Net.WebPermission.AddPermission%2A>metodo.</xref:System.Net.WebPermission.AddPermission%2A> </xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState>      -A <xref:System.Net.NetworkAccess>valore e una stringa URI.</xref:System.Net.NetworkAccess> L&quot;URI specificato ha le autorizzazioni concesse per la <xref:System.Net.NetworkAccess>valore.</xref:System.Net.NetworkAccess>      -A <xref:System.Net.NetworkAccess>identificatore e espressione regolare dell&quot;URI.</xref:System.Net.NetworkAccess>       Il <xref:System.Net.WebPermission.ConnectList%2A>e <xref:System.Net.WebPermission.AcceptList%2A>contengono gli URI a cui si dispone dell&quot;autorizzazione di accesso.</xref:System.Net.WebPermission.AcceptList%2A> </xref:System.Net.WebPermission.ConnectList%2A> Per aggiungere un URI a uno di questi elenchi, utilizzare <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A> Se si passa <xref:System.Net.NetworkAccess>come il <xref:System.Net.NetworkAccess>parametro, l&quot;URI verrà aggiunto al <xref:System.Net.WebPermission.AcceptList%2A>.</xref:System.Net.WebPermission.AcceptList%2A> </xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess> WebPermission consente connessioni alla classe di destinazione con l&quot;URI corrispondente <xref:System.Net.WebPermission.AcceptList%2A>.</xref:System.Net.WebPermission.AcceptList%2A>      > [!CAUTION] > Per negare l&quot;accesso a una risorsa Internet, è necessario negare l&quot;accesso a tutti i percorsi possibili a tale risorsa. Ciò richiede la chiamata <xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName>con il parametro di stato impostato su <xref:System.Security.CodeAccessPermission.Deny%2A>.</xref:System.Security.CodeAccessPermission.Deny%2A> </xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName> Un approccio migliore consiste nel consentire l&quot;accesso alla risorsa specifica. Per ulteriori informazioni su questo argomento, vedere il [NIB: uso del metodo Deny](http://msdn.microsoft.com/en-us/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25) argomento.      > [!NOTE] > È necessario negare l&quot;accesso utilizzando solo il percorso canonico della risorsa. Non è necessario utilizzare le variazioni di sintassi del percorso.      > [!NOTE] > Informazioni nome utente e predefinite porta viene rimossa dal <xref:System.Uri>prima del confronto con l&quot;argomento di espressione regolare fornita per il <xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29>costruttore.</xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29> </xref:System.Uri> Se l&quot;espressione regolare contiene informazioni sull&quot;utente o il numero di porta predefinito, quindi tutti i fax in ingresso <xref:System.Uri>s avrà esito negativo corrispondere all&quot;espressione regolare.</xref:System.Uri>"
  example:
  - "The following example demonstrates how to create a new instance of WebPermission using a <xref:System.Text.RegularExpressions.Regex>. Additional hosts are added to the connect and accept list of WebPermission. Finally, the connect and accept list are displayed to the console.  \n  \n [!code-cpp[WebPermission_Regex#1](~/add/codesnippet/cpp/t-system.net.webpermission_1.cpp)]\n [!code-vb[WebPermission_Regex#1](~/add/codesnippet/visualbasic/t-system.net.webpermission_1.vb)]\n [!code-cs[WebPermission_Regex#1](~/add/codesnippet/csharp/t-system.net.webpermission_1.cs)]"
  syntax:
    content: 'public sealed class WebPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor
  id: '#ctor'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission()
  nameWithType: WebPermission.WebPermission()
  fullName: System.Net.WebPermission.WebPermission()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Crea una nuova istanza di <xref href=&quot;System.Net.WebPermission&quot;> </xref> classe."
  remarks: "Crea una nuova istanza della <xref:System.Net.WebPermission>classe.</xref:System.Net.WebPermission> Questo costruttore crea un&quot;autorizzazione vuota che non concede alcun diritto."
  syntax:
    content: public WebPermission ();
    parameters: []
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(PermissionState)
  nameWithType: WebPermission.WebPermission(PermissionState)
  fullName: System.Net.WebPermission.WebPermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Crea una nuova istanza di <xref href=&quot;System.Net.WebPermission&quot;> </xref> classe che passa tutte le richieste o ha esito negativo di tutte le richieste."
  remarks: "Il valore di `state` parametro <xref:System.Security.Permissions.PermissionState?displayProperty=fullName>o <xref:System.Security.Permissions.PermissionState?displayProperty=fullName>rispettivamente generando un accesso a tutte le variabili di sicurezza o con restrizioni.</xref:System.Security.Permissions.PermissionState?displayProperty=fullName> </xref:System.Security.Permissions.PermissionState?displayProperty=fullName> Se si specifica <xref:System.Security.Permissions.PermissionState?displayProperty=fullName>, sarà possibile fornire l&quot;accesso ai singoli URI utilizzando <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A> </xref:System.Security.Permissions.PermissionState?displayProperty=fullName>"
  example:
  - "The following example creates an instance of <xref:System.Net.WebPermission> and gives access rights to specific URLs.  \n  \n [!code-vb[WebPermission_Copy#1](~/add/codesnippet/visualbasic/88c33480-1361-4059-add6-_1.vb)]\n [!code-cpp[WebPermission_Copy#1](~/add/codesnippet/cpp/88c33480-1361-4059-add6-_1.cpp)]\n [!code-cs[WebPermission_Copy#1](~/add/codesnippet/csharp/88c33480-1361-4059-add6-_1.cs)]"
  syntax:
    content: public WebPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "A <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> value."
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  id: '#ctor(System.Net.NetworkAccess,System.String)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(NetworkAccess,String)
  nameWithType: WebPermission.WebPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Net.WebPermission&quot;> </xref> classe con i diritti di accesso per l&quot;URI specificato."
  remarks: "Questo costruttore inizializza un <xref:System.Net.WebPermission>e concede l&quot;autorizzazione di destinazione per creare un remoto connessione o accettare una connessione all&quot;host remoto usando l&quot;URI descritto dal `uriString` parametro.</xref:System.Net.WebPermission>"
  example:
  - "The following example creates a new instance of <xref:System.Net.WebPermission> with connect rights for the specified URI.  \n  \n [!code-cpp[WebPermission_Union#1](~/add/codesnippet/cpp/m-system.net.webpermissi_3_1.cpp)]\n [!code-vb[WebPermission_Union#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_3_1.vb)]\n [!code-cs[WebPermission_Union#1](~/add/codesnippet/csharp/m-system.net.webpermissi_3_1.cs)]"
  syntax:
    content: public WebPermission (System.Net.NetworkAccess access, string uriString);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "Valore NetworkAccess che indica il tipo di accesso per concedere all&quot;URI specificato. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>indica che l&quot;applicazione può accettare connessioni da Internet su una risorsa locale. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>indica che l&quot;applicazione è autorizzato a connettersi a specifiche risorse Internet."
    - id: uriString
      type: System.String
      description: "Una stringa URI a cui accedono i diritti vengono concessi."
  overload: System.Net.WebPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  id: '#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)'
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: WebPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.WebPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,Regex)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Net.WebPermission&quot;> </xref> classe con i diritti di accesso per l&quot;espressione regolare di URI specificata."
  remarks: "Questo costruttore inizializza un <xref:System.Net.WebPermission>e concede l&quot;autorizzazione di destinazione per creare un remoto connessione o accettare una connessione all&quot;host remoto usando l&quot;URI descritto dal `uriRegex`parametro.</xref:System.Net.WebPermission>      > [!NOTE] > È consigliabile creare `uriRegex` utilizzando il <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, e <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>flag.</xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>      > [!NOTE] > Una stringa URI candidata viene controllata con l&quot;elenco di espressioni regolari relative (<xref:System.Net.WebPermission.AcceptList%2A> o <xref:System.Net.WebPermission.ConnectList%2A>) in due modi.</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> In primo luogo, la stringa URI candidata rispetto a elenco appropriato. quindi, se è presente alcuna corrispondenza, la stringa URI candidata viene convertita in un <xref:System.Uri>e confrontato con l&quot;elenco adatto.</xref:System.Uri>"
  example:
  - "The following example creates a new instance of <xref:System.Net.WebPermission> with connect rights for the specified <xref:System.Text.RegularExpressions.Regex?displayProperty=fullName>.  \n  \n [!code-vb[WebPermission_Constructor4#1](~/add/codesnippet/visualbasic/c1b4c805-3099-4a42-8ab3-_1.vb)]\n [!code-cpp[WebPermission_Constructor4#1](~/add/codesnippet/cpp/c1b4c805-3099-4a42-8ab3-_1.cpp)]\n [!code-cs[WebPermission_Constructor4#1](~/add/codesnippet/csharp/c1b4c805-3099-4a42-8ab3-_1.cs)]"
  syntax:
    content: public WebPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "Oggetto <xref href=&quot;System.Net.NetworkAccess&quot;> </xref> valore che indica il tipo di accesso per concedere all&quot;URI specificato. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>indica che l&quot;applicazione può accettare connessioni da Internet su una risorsa locale. <xref href=&quot;System.Net.NetworkAccess&quot;></xref>indica che l&quot;applicazione è autorizzato a connettersi a specifiche risorse Internet."
    - id: uriRegex
      type: System.Text.RegularExpressions.Regex
      description: "Un&quot;espressione regolare che descrive l&quot;URI a cui viene concesso l&quot;accesso."
  overload: System.Net.WebPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.AcceptList
  id: AcceptList
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AcceptList
  nameWithType: WebPermission.AcceptList
  fullName: System.Net.WebPermission.AcceptList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Questa proprietà restituisce un&quot;enumerazione di una singola autorizzazione di accettazione contenuta da questa <xref href=&quot;System.Net.WebPermission&quot;> </xref>. Gli oggetti di possibili tipi contenuti nell&quot;enumerazione restituita sono <xref:System.String>e &lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;.</xref:System.String>"
  remarks: "Questa proprietà ottiene un elenco di risorse locali consentite da questo <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> La classe a cui è stato applicato <xref:System.Net.WebPermission>dispone solo dell&quot;autorizzazione per la ricezione di una connessione in ingresso alle risorse locali presenti in questo elenco.</xref:System.Net.WebPermission>      > [!NOTE] > È possibile aggiungere gli URI a questo elenco utilizzando <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A>      > [!NOTE] > Una stringa URI candidata viene controllata con l&quot;elenco di espressioni regolari relative (AcceptList o <xref:System.Net.WebPermission.ConnectList%2A>) in due modi.</xref:System.Net.WebPermission.ConnectList%2A> In primo luogo, la stringa URI candidata rispetto a elenco appropriato. quindi, se è presente alcuna corrispondenza, la stringa URI candidata viene convertita in un <xref:System.Uri>e confrontato con l&quot;elenco adatto.</xref:System.Uri>"
  example:
  - "The following example prints the URLs in the AcceptList to the console.  \n  \n [!code-vb[WebPermission_AcceptConnectList#2](~/add/codesnippet/visualbasic/p-system.net.webpermissi_5_1.vb)]\n [!code-cs[WebPermission_AcceptConnectList#2](~/add/codesnippet/csharp/p-system.net.webpermissi_5_1.cs)]\n [!code-cpp[WebPermission_AcceptConnectList#2](~/add/codesnippet/cpp/p-system.net.webpermissi_5_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator AcceptList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "La <xref:System.Collections.IEnumerator>interfaccia che contiene le autorizzazioni di accettazione.</xref:System.Collections.IEnumerator>"
  overload: System.Net.WebPermission.AcceptList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  id: AddPermission(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,String)
  nameWithType: WebPermission.AddPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Aggiunge la stringa URI specificato con i diritti di accesso specificato all&quot;oggetto corrente <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "Se è stato specificato <xref:System.Security.Permissions.PermissionState>come il <xref:System.Security.Permissions.PermissionState>, utilizzare AddPermission per consentire l&quot;utilizzo di `uriString` nella classe di destinazione.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> Il modo in cui `uriString` può essere utilizzato dalla destinazione della classe è specificata da `access`. Specificare <xref:System.Net.NetworkAccess>come parametro di accesso per l&quot;URI specificato da aggiungere il `uriString` parametro all&quot;elenco di URI di stringhe di accettazione o specificare <xref:System.Net.NetworkAccess>come l&quot;accesso parametro da aggiungere all&quot;URI all&quot;elenco di URI di stringhe di connessione.</xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess>      > [!NOTE] > Chiamata AddPermission su <xref:System.Security.Permissions.PermissionState><xref:System.Net.WebPermission>avrà alcun effetto, poiché l&quot;autorizzazione viene concessa a tutti gli URI.</xref:System.Net.WebPermission></xref:System.Security.Permissions.PermissionState>      > [!NOTE] > Una stringa URI candidata viene controllata con l&quot;elenco di espressioni regolari relative (<xref:System.Net.WebPermission.AcceptList%2A> o <xref:System.Net.WebPermission.ConnectList%2A>) in due modi.</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> In primo luogo, la stringa URI candidata rispetto a elenco appropriato. quindi, se è presente alcuna corrispondenza, la stringa URI candidata viene convertita in un <xref:System.Uri>e confrontato con l&quot;elenco adatto.</xref:System.Uri>"
  example:
  - "The following example demonstrates how to add access rights to particular URL strings.  \n  \n [!code-cs[WebPermission_Intersect#2](~/add/codesnippet/csharp/m-system.net.webpermissi_2_1.cs)]\n [!code-cpp[WebPermission_Intersect#2](~/add/codesnippet/cpp/m-system.net.webpermissi_2_1.cpp)]\n [!code-vb[WebPermission_Intersect#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_2_1.vb)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, string uriString);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "Oggetto <xref href=&quot;System.Net.NetworkAccess&quot;> </xref> che specifica i diritti di accesso vengono concesse all&quot;URI."
    - id: uriString
      type: System.String
      description: "Stringa che descrive l&quot;URI a cui accedono i diritti vengono concessi."
  overload: System.Net.WebPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uriString</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  id: AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: AddPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.AddPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,Regex)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Aggiunge l&quot;URI specificato con i diritti di accesso specificato all&quot;oggetto corrente <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "Se è stato specificato <xref:System.Security.Permissions.PermissionState>come il <xref:System.Security.Permissions.PermissionState>, utilizzare <xref:System.Net.WebPermission.AddPermission%2A>per consentire l&quot;utilizzo di `uriRegex` nella classe di destinazione.</xref:System.Net.WebPermission.AddPermission%2A> </xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> Specificare <xref:System.Net.NetworkAccess>come il `access` parametro da aggiungere all&quot;URI specificato per il `uriRegex` parametro all&quot;elenco di URI di stringhe di accettazione o specificare <xref:System.Net.NetworkAccess>come l&quot;accesso parametro da aggiungere all&quot;URI all&quot;elenco di URI di stringhe di connessione.</xref:System.Net.NetworkAccess> </xref:System.Net.NetworkAccess>      > [!NOTE] > Chiamata <xref:System.Net.WebPermission.AddPermission%2A>su un <xref:System.Security.Permissions.PermissionState><xref:System.Net.WebPermission>istanza avrà alcun effetto quando l&quot;autorizzazione viene concessa a tutti gli URI.</xref:System.Net.WebPermission></xref:System.Security.Permissions.PermissionState> </xref:System.Net.WebPermission.AddPermission%2A>      > [!NOTE] > È consigliabile creare `uriRegex` utilizzando il <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>, e <xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>flag.</xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName>      > [!NOTE] > Una stringa URI candidata viene controllata con l&quot;elenco di espressioni regolari relative (<xref:System.Net.WebPermission.AcceptList%2A> o <xref:System.Net.WebPermission.ConnectList%2A>) in due modi.</xref:System.Net.WebPermission.ConnectList%2A> </xref:System.Net.WebPermission.AcceptList%2A> In primo luogo, la stringa URI candidata rispetto a elenco appropriato. quindi, se è presente alcuna corrispondenza, la stringa URI candidata viene convertita in un <xref:System.Uri>e confrontato con l&quot;elenco adatto.</xref:System.Uri>"
  example:
  - "The following example uses <xref:System.Net.WebPermission.AddPermission%2A> to give access rights for the specified URI.  \n  \n [!code-vb[WebPermission_IsSubset#1](~/add/codesnippet/visualbasic/38330477-33f7-43a1-bcd6-_1.vb)]\n [!code-cs[WebPermission_IsSubset#1](~/add/codesnippet/csharp/38330477-33f7-43a1-bcd6-_1.cs)]\n [!code-cpp[WebPermission_IsSubset#1](~/add/codesnippet/cpp/38330477-33f7-43a1-bcd6-_1.cpp)]"
  syntax:
    content: public void AddPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);
    parameters:
    - id: access
      type: System.Net.NetworkAccess
      description: "NetworkAccess che specifica i diritti di accesso vengono concesse all&quot;URI."
    - id: uriRegex
      type: System.Text.RegularExpressions.Regex
      description: "Un&quot;espressione regolare che descrive il set di URI a cui accedono i diritti vengono concessi."
  overload: System.Net.WebPermission.AddPermission*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>uriRegex</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.WebPermission.ConnectList
  id: ConnectList
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: ConnectList
  nameWithType: WebPermission.ConnectList
  fullName: System.Net.WebPermission.ConnectList
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Questa proprietà restituisce un&quot;enumerazione di una singola autorizzazione di connessione contenuta da questa <xref href=&quot;System.Net.WebPermission&quot;> </xref>. Gli oggetti di possibili tipi contenuti nell&quot;enumerazione restituita sono <xref:System.String>e &lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt;.</xref:System.String>"
  remarks: "Questa proprietà ottiene un elenco di risorse remote sono consentite da questo <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> La classe a cui è stato applicato <xref:System.Net.WebPermission>dispone solo dell&quot;autorizzazione per connettersi alle risorse presenti in questo elenco.</xref:System.Net.WebPermission>      > [!NOTE] > È possibile aggiungere gli URI a questo elenco utilizzando <xref:System.Net.WebPermission.AddPermission%2A>.</xref:System.Net.WebPermission.AddPermission%2A>      > [!NOTE] > Una stringa URI candidata viene controllata con l&quot;elenco di espressioni regolari relative (<xref:System.Net.WebPermission.AcceptList%2A> o ConnectList) in due modi.</xref:System.Net.WebPermission.AcceptList%2A> In primo luogo, la stringa URI candidata rispetto a elenco appropriato. quindi, se è presente alcuna corrispondenza, la stringa URI candidata viene convertita in un <xref:System.Uri>e confrontato con l&quot;elenco adatto.</xref:System.Uri>"
  example:
  - "The following example prints the URLs in the ConnectList to the console.  \n  \n [!code-vb[WebPermission_AcceptConnectList#1](~/add/codesnippet/visualbasic/p-system.net.webpermissi_2_1.vb)]\n [!code-cs[WebPermission_AcceptConnectList#1](~/add/codesnippet/csharp/p-system.net.webpermissi_2_1.cs)]\n [!code-cpp[WebPermission_AcceptConnectList#1](~/add/codesnippet/cpp/p-system.net.webpermissi_2_1.cpp)]"
  syntax:
    content: public System.Collections.IEnumerator ConnectList { get; }
    return:
      type: System.Collections.IEnumerator
      description: "Il <xref:System.Collections.IEnumerator>interfaccia che contiene le autorizzazioni di connessione.</xref:System.Collections.IEnumerator>"
  overload: System.Net.WebPermission.ConnectList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.Copy
  id: Copy
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: WebPermission.Copy()
  fullName: System.Net.WebPermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Crea una copia di un <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "L&quot;oggetto <xref:System.Security.IPermission>restituito da questo metodo rappresenta lo stesso accesso alle risorse dell&quot;originale <xref:System.Net.WebPermission>.</xref:System.Net.WebPermission> </xref:System.Security.IPermission> Questo metodo esegue l&quot;override <xref:System.Security.CodeAccessPermission.Copy%2A>ed è implementata per supportare la <xref:System.Security.IPermission>interfaccia.</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Copy%2A>"
  example:
  - "The following example demonstrates how to create a second instance of <xref:System.Net.WebPermission> using Copy. This second instance is identical to the first.  \n  \n [!code-vb[WebPermission_Copy#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_6_1.vb)]\n [!code-cpp[WebPermission_Copy#2](~/add/codesnippet/cpp/m-system.net.webpermissi_6_1.cpp)]\n [!code-cs[WebPermission_Copy#2](~/add/codesnippet/csharp/m-system.net.webpermissi_6_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Una nuova istanza di <xref href=&quot;System.Net.WebPermission&quot;> </xref> classe che ha gli stessi valori dell&quot;originale."
  overload: System.Net.WebPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: WebPermission.FromXml(SecurityElement)
  fullName: System.Net.WebPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Ricostruisce un <xref href=&quot;System.Net.WebPermission&quot;> </xref> da una codifica XML."
  remarks: "Il metodo FromXml ricostruisce un <xref:System.Net.WebPermission>da una codifica XML definito da una <xref:System.Security.SecurityElement>classe.</xref:System.Security.SecurityElement> </xref:System.Net.WebPermission>       Utilizzare il <xref:System.Net.WebPermission.ToXml%2A>metodo per la codifica XML di <xref:System.Net.WebPermission>, incluse informazioni sullo stato.</xref:System.Net.WebPermission> </xref:System.Net.WebPermission.ToXml%2A>"
  example:
  - "The following example creates a <xref:System.Security.SecurityElement?displayProperty=fullName>, populates its attributes, and uses FromXml to transfer this information to an instance of <xref:System.Net.WebPermission>.  \n  \n [!code-vb[WebPermission_FromToXml#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_7_1.vb)]\n [!code-cpp[WebPermission_FromToXml#1](~/add/codesnippet/cpp/m-system.net.webpermissi_7_1.cpp)]\n [!code-cs[WebPermission_FromToXml#1](~/add/codesnippet/csharp/m-system.net.webpermissi_7_1.cs)]"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "La codifica XML da cui ricostruire la <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  overload: System.Net.WebPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "La <code> securityElement </code> parametro<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>non è un elemento di autorizzazione per questo tipo."
  platform:
  - net462
- uid: System.Net.WebPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: WebPermission.Intersect(IPermission)
  fullName: System.Net.WebPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Restituisce l&quot;intersezione logica di due <xref href=&quot;System.Net.WebPermission&quot;> </xref> istanze."
  remarks: "Intersect restituisce un <xref:System.Net.WebPermission>che contiene le autorizzazioni che sono comuni sia in `target` e l&quot;istanza corrente.</xref:System.Net.WebPermission>       Questo metodo esegue l&quot;override <xref:System.Security.CodeAccessPermission.Intersect%2A>ed è implementata per supportare la <xref:System.Security.IPermission>interfaccia.</xref:System.Security.IPermission> </xref:System.Security.CodeAccessPermission.Intersect%2A>"
  example:
  - "The following example shows how to create an instance of <xref:System.Net.WebPermission> using the logical intersection of two existing <xref:System.Net.WebPermission> instances.  \n  \n [!code-cs[WebPermission_Intersect#3](~/add/codesnippet/csharp/m-system.net.webpermissi_5_1.cs)]\n [!code-cpp[WebPermission_Intersect#3](~/add/codesnippet/cpp/m-system.net.webpermissi_5_1.cpp)]\n [!code-vb[WebPermission_Intersect#3](~/add/codesnippet/visualbasic/m-system.net.webpermissi_5_1.vb)]"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "La <xref href=&quot;System.Net.WebPermission&quot;> </xref> da confrontare con l&quot;istanza corrente."
    return:
      type: System.Security.IPermission
      description: "Un nuovo <xref href=&quot;System.Net.WebPermission&quot;> </xref> che rappresenta l&quot;intersezione dell&quot;istanza corrente e <code> target </code> parametro. Se l&quot;intersezione è vuota, il metodo restituisce <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.WebPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o di tipo<xref href=&quot;System.Net.WebPermission&quot;></xref>"
  platform:
  - net462
- uid: System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: WebPermission.IsSubsetOf(IPermission)
  fullName: System.Net.WebPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Determina se l&quot;oggetto corrente <xref href=&quot;System.Net.WebPermission&quot;> </xref> è un subset dell&quot;oggetto specificato."
  remarks: "Se l&quot;oggetto corrente <xref:System.Net.WebPermission>Specifica un set di risorse associate che è interamente contenuto il `target` parametro, quindi corrente <xref:System.Net.WebPermission>è un subset di `target`.</xref:System.Net.WebPermission> </xref:System.Net.WebPermission> Questo metodo esegue l&quot;override IsSubsetOf e viene implementato per supportare il <xref:System.Security.IPermission>interfaccia.</xref:System.Security.IPermission>"
  example:
  - "The following example uses IsSubsetOf to determine whether the access rights found in one instance of <xref:System.Net.WebPermission> are found in another instance of <xref:System.Net.WebPermission>.  \n  \n [!code-cs[WebPermission_IsSubset2#1](~/add/codesnippet/csharp/m-system.net.webpermissi_1_1.cs)]\n [!code-vb[WebPermission_IsSubset2#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_1_1.vb)]\n [!code-cpp[WebPermission_IsSubset2#1](~/add/codesnippet/cpp/m-system.net.webpermissi_1_1.cpp)]"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Il <xref href=&quot;System.Net.WebPermission&quot;> </xref> da confrontare all&quot;oggetto corrente <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;istanza corrente è un subset del <code> target </code> parametro; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se la destinazione è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, il metodo restituisce <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> per un&quot;autorizzazione corrente vuota che non è senza restrizioni e <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> in caso contrario."
  overload: System.Net.WebPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il parametro di destinazione non è un&quot;istanza di <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "L&quot;istanza corrente contiene un diritto codificato Regex e è presente esattamente lo stesso diritto trovato nell&quot;istanza di destinazione."
  platform:
  - net462
- uid: System.Net.WebPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: WebPermission.IsUnrestricted()
  fullName: System.Net.WebPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Controlla lo stato dell&quot;autorizzazione globale di <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  remarks: "Se <xref:System.Net.WebPermission>è <xref:System.Security.Permissions.PermissionState>, la classe di destinazione può utilizzare tutti gli URI.</xref:System.Security.Permissions.PermissionState> </xref:System.Net.WebPermission> In caso contrario, è necessario assegnare l&quot;autorizzazione specifica per tutti gli URI a cui si desidera utilizzare con la classe di destinazione.      > [!NOTE] > Utilizzare <xref:System.Net.WebPermission.AddPermission%2A>per aggiungere un URI e specificare le relative autorizzazioni.</xref:System.Net.WebPermission.AddPermission%2A>"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Net.WebPermission&quot;></xref> was created with the <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref><xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.WebPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.ToXml
  id: ToXml
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: WebPermission.ToXml()
  fullName: System.Net.WebPermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Crea una codifica XML di un <xref href=&quot;System.Net.WebPermission&quot;> </xref> e lo stato corrente."
  remarks: "Utilizzare il <xref:System.Net.WebPermission.FromXml%2A>metodo per ripristinare le informazioni sullo stato da un <xref:System.Security.SecurityElement>.</xref:System.Security.SecurityElement> </xref:System.Net.WebPermission.FromXml%2A>"
  example:
  - "The following example demonstrates how to use ToXml to create a <xref:System.Security.SecurityElement?displayProperty=fullName> and print its attributes to the console.  \n  \n [!code-vb[WebPermission_FromToXml#1](~/add/codesnippet/visualbasic/m-system.net.webpermissi_4_1.vb)]\n [!code-cpp[WebPermission_FromToXml#1](~/add/codesnippet/cpp/m-system.net.webpermissi_4_1.cpp)]\n [!code-cs[WebPermission_FromToXml#1](~/add/codesnippet/csharp/m-system.net.webpermissi_4_1.cs)]"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Oggetto <xref href=&quot;System.Security.SecurityElement&quot;> </xref> che contiene una rappresentazione con codifica XML del <xref href=&quot;System.Net.WebPermission&quot;> </xref>, incluse informazioni sullo stato."
  overload: System.Net.WebPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Net.WebPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Net.WebPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: WebPermission.Union(IPermission)
  fullName: System.Net.WebPermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Restituisce l&quot;unione logica tra due istanze della <xref href=&quot;System.Net.WebPermission&quot;> </xref> classe."
  remarks: "Union restituisce un <xref:System.Net.WebPermission>che contiene tutte le autorizzazioni in `target` e l&quot;istanza corrente.</xref:System.Net.WebPermission>"
  example:
  - "The following example takes the logical union of two <xref:System.Net.WebPermission> instances to create a third instance of <xref:System.Net.WebPermission>.  \n  \n [!code-cpp[WebPermission_Union#2](~/add/codesnippet/cpp/m-system.net.webpermissi_0_1.cpp)]\n [!code-vb[WebPermission_Union#2](~/add/codesnippet/visualbasic/m-system.net.webpermissi_0_1.vb)]\n [!code-cs[WebPermission_Union#2](~/add/codesnippet/csharp/m-system.net.webpermissi_0_1.cs)]"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "La <xref href=&quot;System.Net.WebPermission&quot;> </xref> da combinare con corrente <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
    return:
      type: System.Security.IPermission
      description: "Oggetto <xref href=&quot;System.Net.WebPermission&quot;> </xref> che rappresenta l&quot;unione dell&quot;istanza corrente e <code> target </code> parametro. If either <xref uid=&quot;langword_csharp_WebPermission&quot; name=&quot;WebPermission&quot; href=&quot;&quot;></xref> is <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>, the method returns a <xref href=&quot;System.Net.WebPermission&quot;></xref> that is <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>. Se la destinazione è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, il metodo restituisce una copia dell&quot;oggetto corrente <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  overload: System.Net.WebPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "la destinazione non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> o di tipo <xref href=&quot;System.Net.WebPermission&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.WebPermission.#ctor
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission()
  nameWithType: WebPermission.WebPermission()
  fullName: System.Net.WebPermission.WebPermission()
- uid: System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(PermissionState)
  nameWithType: WebPermission.WebPermission(PermissionState)
  fullName: System.Net.WebPermission.WebPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(NetworkAccess,String)
  nameWithType: WebPermission.WebPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,String)
- uid: System.Net.NetworkAccess
  parent: System.Net
  isExternal: false
  name: NetworkAccess
  nameWithType: NetworkAccess
  fullName: System.Net.NetworkAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.WebPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.WebPermission(NetworkAccess,Regex)
- uid: System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Net.WebPermission.AcceptList
  parent: System.Net.WebPermission
  isExternal: false
  name: AcceptList
  nameWithType: WebPermission.AcceptList
  fullName: System.Net.WebPermission.AcceptList
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission(NetworkAccess,String)
  nameWithType: WebPermission.AddPermission(NetworkAccess,String)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,String)
- uid: System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission(NetworkAccess,Regex)
  nameWithType: WebPermission.AddPermission(NetworkAccess,Regex)
  fullName: System.Net.WebPermission.AddPermission(NetworkAccess,Regex)
- uid: System.Net.WebPermission.ConnectList
  parent: System.Net.WebPermission
  isExternal: false
  name: ConnectList
  nameWithType: WebPermission.ConnectList
  fullName: System.Net.WebPermission.ConnectList
- uid: System.Net.WebPermission.Copy
  parent: System.Net.WebPermission
  isExternal: false
  name: Copy()
  nameWithType: WebPermission.Copy()
  fullName: System.Net.WebPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.WebPermission.FromXml(System.Security.SecurityElement)
  parent: System.Net.WebPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: WebPermission.FromXml(SecurityElement)
  fullName: System.Net.WebPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Net.WebPermission.Intersect(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: WebPermission.Intersect(IPermission)
  fullName: System.Net.WebPermission.Intersect(IPermission)
- uid: System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: WebPermission.IsSubsetOf(IPermission)
  fullName: System.Net.WebPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.WebPermission.IsUnrestricted
  parent: System.Net.WebPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: WebPermission.IsUnrestricted()
  fullName: System.Net.WebPermission.IsUnrestricted()
- uid: System.Net.WebPermission.ToXml
  parent: System.Net.WebPermission
  isExternal: false
  name: ToXml()
  nameWithType: WebPermission.ToXml()
  fullName: System.Net.WebPermission.ToXml()
- uid: System.Net.WebPermission.Union(System.Security.IPermission)
  parent: System.Net.WebPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: WebPermission.Union(IPermission)
  fullName: System.Net.WebPermission.Union(IPermission)
- uid: System.Net.WebPermission.#ctor*
  parent: System.Net.WebPermission
  isExternal: false
  name: WebPermission
  nameWithType: WebPermission.WebPermission
- uid: System.Net.WebPermission.AcceptList*
  parent: System.Net.WebPermission
  isExternal: false
  name: AcceptList
  nameWithType: WebPermission.AcceptList
- uid: System.Net.WebPermission.AddPermission*
  parent: System.Net.WebPermission
  isExternal: false
  name: AddPermission
  nameWithType: WebPermission.AddPermission
- uid: System.Net.WebPermission.ConnectList*
  parent: System.Net.WebPermission
  isExternal: false
  name: ConnectList
  nameWithType: WebPermission.ConnectList
- uid: System.Net.WebPermission.Copy*
  parent: System.Net.WebPermission
  isExternal: false
  name: Copy
  nameWithType: WebPermission.Copy
- uid: System.Net.WebPermission.FromXml*
  parent: System.Net.WebPermission
  isExternal: false
  name: FromXml
  nameWithType: WebPermission.FromXml
- uid: System.Net.WebPermission.Intersect*
  parent: System.Net.WebPermission
  isExternal: false
  name: Intersect
  nameWithType: WebPermission.Intersect
- uid: System.Net.WebPermission.IsSubsetOf*
  parent: System.Net.WebPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: WebPermission.IsSubsetOf
- uid: System.Net.WebPermission.IsUnrestricted*
  parent: System.Net.WebPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: WebPermission.IsUnrestricted
- uid: System.Net.WebPermission.ToXml*
  parent: System.Net.WebPermission
  isExternal: false
  name: ToXml
  nameWithType: WebPermission.ToXml
- uid: System.Net.WebPermission.Union*
  parent: System.Net.WebPermission
  isExternal: false
  name: Union
  nameWithType: WebPermission.Union
