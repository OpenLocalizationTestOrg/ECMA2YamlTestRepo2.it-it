### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.MetaDataMember
  id: MetaDataMember
  children:
  - System.Data.Linq.Mapping.MetaDataMember.#ctor
  - System.Data.Linq.Mapping.MetaDataMember.Association
  - System.Data.Linq.Mapping.MetaDataMember.AutoSync
  - System.Data.Linq.Mapping.MetaDataMember.CanBeNull
  - System.Data.Linq.Mapping.MetaDataMember.DbType
  - System.Data.Linq.Mapping.MetaDataMember.DeclaringType
  - System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
  - System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
  - System.Data.Linq.Mapping.MetaDataMember.Expression
  - System.Data.Linq.Mapping.MetaDataMember.IsAssociation
  - System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
  - System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)
  - System.Data.Linq.Mapping.MetaDataMember.IsDeferred
  - System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
  - System.Data.Linq.Mapping.MetaDataMember.IsPersistent
  - System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
  - System.Data.Linq.Mapping.MetaDataMember.IsVersion
  - System.Data.Linq.Mapping.MetaDataMember.LoadMethod
  - System.Data.Linq.Mapping.MetaDataMember.MappedName
  - System.Data.Linq.Mapping.MetaDataMember.Member
  - System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
  - System.Data.Linq.Mapping.MetaDataMember.Name
  - System.Data.Linq.Mapping.MetaDataMember.Ordinal
  - System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
  - System.Data.Linq.Mapping.MetaDataMember.StorageMember
  - System.Data.Linq.Mapping.MetaDataMember.Type
  - System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
  langs:
  - csharp
  name: MetaDataMember
  nameWithType: MetaDataMember
  fullName: System.Data.Linq.Mapping.MetaDataMember
  type: Class
  summary: "Rappresenta il mapping tra un campo o una proprietà di un oggetto di dominio in una colonna di una tabella di database."
  syntax:
    content: public abstract class MetaDataMember
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: MetaDataMember()
  nameWithType: MetaDataMember.MetaDataMember()
  fullName: System.Data.Linq.Mapping.MetaDataMember.MetaDataMember()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Data.Linq.Mapping.MetaDataMember&quot;> </xref> classe."
  syntax:
    content: protected MetaDataMember ();
    parameters: []
  overload: System.Data.Linq.Mapping.MetaDataMember.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Association
  id: Association
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Association
  nameWithType: MetaDataMember.Association
  fullName: System.Data.Linq.Mapping.MetaDataMember.Association
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene il <xref href=&quot;System.Data.Linq.Mapping.MetaAssociation&quot;> </xref> che corrisponde a questo membro."
  remarks: "Questa proprietà rappresenta un&quot;associazione del database come una chiave esterna alla relazione di chiave primaria."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAssociation Association { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAssociation
      description: "Corrispondente <xref href=&quot;System.Data.Linq.Mapping.MetaAssociation&quot;> </xref> se ne esiste uno; in caso contrario, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.Association*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.AutoSync
  id: AutoSync
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: AutoSync
  nameWithType: MetaDataMember.AutoSync
  fullName: System.Data.Linq.Mapping.MetaDataMember.AutoSync
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene il comportamento di lettura-back per questo membro per l&quot;inserimento e operazioni di aggiornamento."
  syntax:
    content: public abstract System.Data.Linq.Mapping.AutoSync AutoSync { get; }
    return:
      type: System.Data.Linq.Mapping.AutoSync
      description: "Un <xref href=&quot;System.Data.Linq.Mapping.AutoSync&quot;> </xref> enumerazione."
  overload: System.Data.Linq.Mapping.MetaDataMember.AutoSync*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.CanBeNull
  id: CanBeNull
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: CanBeNull
  nameWithType: MetaDataMember.CanBeNull
  fullName: System.Data.Linq.Mapping.MetaDataMember.CanBeNull
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Indica se il valore di questo membro può essere assegnato il <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> valore."
  remarks: "Questa proprietà dipende il <xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A>, proprietà e viene fornita per comodità.</xref:System.Data.Linq.Mapping.MetaDataMember.DbType%2A>"
  syntax:
    content: public abstract bool CanBeNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo membro può essere assegnato il <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> valore; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.CanBeNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.DbType
  id: DbType
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: DbType
  nameWithType: MetaDataMember.DbType
  fullName: System.Data.Linq.Mapping.MetaDataMember.DbType
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene il tipo della colonna del database corrispondente."
  remarks: "Questo sarà il testo esatto usato per definire la colonna in un comando di dichiarazione di tabella Transact-SQL. Se non è definito, il tipo di colonna del database viene derivato dal tipo di membro."
  syntax:
    content: public abstract string DbType { get; }
    return:
      type: System.String
      description: "Il tipo della colonna di database sotto forma di stringa."
  overload: System.Data.Linq.Mapping.MetaDataMember.DbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.DeclaringType
  id: DeclaringType
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: DeclaringType
  nameWithType: MetaDataMember.DeclaringType
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeclaringType
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene il <xref href=&quot;System.Data.Linq.Mapping.MetaType&quot;> </xref> che contiene il membro dati."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaType DeclaringType { get; }
    return:
      type: System.Data.Linq.Mapping.MetaType
      description: "Tipo di meta-che contiene il membro corrente."
  overload: System.Data.Linq.Mapping.MetaDataMember.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
  id: DeferredSourceAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: DeferredSourceAccessor
  nameWithType: MetaDataMember.DeferredSourceAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene la funzione di accesso utilizzato per ottenere e impostare l&quot;origine di questo membro posticipato."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAccessor DeferredSourceAccessor { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAccessor
      description: "La funzione di accesso utilizzato per accedere all&quot;origine posticipata per questo membro."
  overload: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
  id: DeferredValueAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: DeferredValueAccessor
  nameWithType: MetaDataMember.DeferredValueAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene la funzione di accesso utilizzato per ottenere e impostare il valore di questo membro posticipato (senza eseguire il recupero)."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAccessor DeferredValueAccessor { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAccessor
      description: "La funzione di accesso utilizzato per accedere al valore posticipato per questo membro."
  overload: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Expression
  id: Expression
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Expression
  nameWithType: MetaDataMember.Expression
  fullName: System.Data.Linq.Mapping.MetaDataMember.Expression
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene l&quot;espressione che definisce una colonna calcolata."
  syntax:
    content: public abstract string Expression { get; }
    return:
      type: System.String
      description: "L&quot;espressione per la colonna calcolata come una stringa."
  overload: System.Data.Linq.Mapping.MetaDataMember.Expression*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsAssociation
  id: IsAssociation
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsAssociation
  nameWithType: MetaDataMember.IsAssociation
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsAssociation
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Indica se questo membro definisce una relazione di associazione."
  syntax:
    content: public abstract bool IsAssociation { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo membro definisce una relazione di associazione. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsAssociation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
  id: IsDbGenerated
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsDbGenerated
  nameWithType: MetaDataMember.IsDbGenerated
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Indica se questo membro viene generato automaticamente dal database."
  remarks: "I membri generati automaticamente vengono sincronizzati immediatamente dopo la riga di dati corrispondente viene inserita. Inserisci chiave generata dal trigger valori non sono supportati."
  syntax:
    content: public abstract bool IsDbGenerated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo membro viene generato automaticamente dal database. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)
  id: IsDeclaredBy(System.Data.Linq.Mapping.MetaType)
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsDeclaredBy(MetaType)
  nameWithType: MetaDataMember.IsDeclaredBy(MetaType)
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(MetaType)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Specifica se questo membro è dichiarato dal tipo specificato."
  syntax:
    content: public abstract bool IsDeclaredBy (System.Data.Linq.Mapping.MetaType type);
    parameters:
    - id: type
      type: System.Data.Linq.Mapping.MetaType
      description: "Tipo da controllare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo membro è dichiarato dal tipo specificato. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeferred
  id: IsDeferred
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsDeferred
  nameWithType: MetaDataMember.IsDeferred
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeferred
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Indica se il comportamento predefinito consiste nel caricare questo membro su base posticipata."
  syntax:
    content: public abstract bool IsDeferred { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo membro viene caricato su base posticipata per impostazione predefinita. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsDeferred*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
  id: IsDiscriminator
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsDiscriminator
  nameWithType: MetaDataMember.IsDiscriminator
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Indica se questo membro rappresenta il discriminatore di ereditarietà."
  remarks: "Questa proprietà può essere `true` per al massimo un membro di livello più alto mappata di classe in una gerarchia."
  syntax:
    content: public abstract bool IsDiscriminator { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo membro rappresenta il discriminatore di ereditarietà. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPersistent
  id: IsPersistent
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsPersistent
  nameWithType: MetaDataMember.IsPersistent
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPersistent
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Indica se questo membro è mappato a una colonna (o vincolo)."
  remarks: "Una classe può avere una combinazione di membri permanenti e non persistente. Membri permanenti vengono mappati, mentre i membri non persistenti non sono mappati. Una classe mappata deve avere almeno un membro permanente."
  syntax:
    content: public abstract bool IsPersistent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo membro è mappato a una colonna (o vincolo); in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsPersistent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
  id: IsPrimaryKey
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsPrimaryKey
  nameWithType: MetaDataMember.IsPrimaryKey
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Indica se questo membro è parte dell&quot;identità del tipo."
  remarks: "Se questa proprietà è `true`, il membro della classe rappresenta una colonna che fa parte della chiave univoca della tabella. Più di un membro della classe può disporre di questa proprietà è impostata su `true` per una chiave che è una combinazione di colonne associate. Per una classe di entità, almeno un membro deve avere l&quot;attributo e deve essere mappato per la chiave primaria o univoca nella tabella corrispondente o nella vista. In caso contrario, LINQ to SQL considera le istanze della classe come allo scopo di inviare modifiche al database di sola lettura.       Il set di colonne identificate da IsPrimaryKey non deve essere la chiave primaria. Indicano semplicemente un set che identifica in modo univoco l&quot;entità. Alternative comuni includono le colonne dell&quot;indice o altre colonne di chiave univoca di clustering."
  syntax:
    content: public abstract bool IsPrimaryKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo membro è parte dell&quot;identità del tipo. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.IsVersion
  id: IsVersion
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: IsVersion
  nameWithType: MetaDataMember.IsVersion
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsVersion
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Indica se questo membro rappresenta la versione di riga o il timestamp."
  remarks: "Numeri di versione vengono incrementati e colonne di tipo timestamp vengono aggiornate ogni volta che viene aggiornata la riga associata."
  syntax:
    content: public abstract bool IsVersion { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se questo membro rappresenta la versione di riga o di un timestamp. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaDataMember.IsVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.LoadMethod
  id: LoadMethod
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: LoadMethod
  nameWithType: MetaDataMember.LoadMethod
  fullName: System.Data.Linq.Mapping.MetaDataMember.LoadMethod
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene il <xref href=&quot;System.Data.Linq.DataContext&quot;> </xref> metodo utilizzato per eseguire operazioni di caricamento."
  syntax:
    content: public abstract System.Reflection.MethodInfo LoadMethod { get; }
    return:
      type: System.Reflection.MethodInfo
      description: "Il metodo load come <xref:System.Reflection.MethodInfo>.</xref:System.Reflection.MethodInfo>"
  overload: System.Data.Linq.Mapping.MetaDataMember.LoadMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.MappedName
  id: MappedName
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: MappedName
  nameWithType: MetaDataMember.MappedName
  fullName: System.Data.Linq.Mapping.MetaDataMember.MappedName
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene il nome della colonna (o vincolo) nel database."
  syntax:
    content: public abstract string MappedName { get; }
    return:
      type: System.String
      description: "Il nome della colonna (o vincolo) sotto forma di stringa."
  overload: System.Data.Linq.Mapping.MetaDataMember.MappedName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Member
  id: Member
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Member
  nameWithType: MetaDataMember.Member
  fullName: System.Data.Linq.Mapping.MetaDataMember.Member
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene il sottostante <xref:System.Reflection.MemberInfo>.</xref:System.Reflection.MemberInfo>"
  syntax:
    content: public abstract System.Reflection.MemberInfo Member { get; }
    return:
      type: System.Reflection.MemberInfo
      description: "Informazioni sui metadati e l&quot;attributo membri."
  overload: System.Data.Linq.Mapping.MetaDataMember.Member*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
  id: MemberAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: MemberAccessor
  nameWithType: MetaDataMember.MemberAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene la funzione di accesso utilizzato per ottenere o impostare il valore di questo membro."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAccessor MemberAccessor { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAccessor
      description: "La funzione di accesso."
  overload: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Name
  id: Name
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Name
  nameWithType: MetaDataMember.Name
  fullName: System.Data.Linq.Mapping.MetaDataMember.Name
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene il nome del membro, come il <xref:System.Reflection.MemberInfo>nome.</xref:System.Reflection.MemberInfo>"
  syntax:
    content: public abstract string Name { get; }
    return:
      type: System.String
      description: "Il nome, come il <xref:System.Reflection.MemberInfo>nome.</xref:System.Reflection.MemberInfo>"
  overload: System.Data.Linq.Mapping.MetaDataMember.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Ordinal
  id: Ordinal
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Ordinal
  nameWithType: MetaDataMember.Ordinal
  fullName: System.Data.Linq.Mapping.MetaDataMember.Ordinal
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene la posizione ordinale di questo membro nel layout predefinito dei risultati della query."
  syntax:
    content: public abstract int Ordinal { get; }
    return:
      type: System.Int32
      description: "La posizione ordinale."
  overload: System.Data.Linq.Mapping.MetaDataMember.Ordinal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
  id: StorageAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: StorageAccessor
  nameWithType: MetaDataMember.StorageAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene la funzione di accesso utilizzato per ottenere o impostare il valore di archiviazione di questo membro."
  syntax:
    content: public abstract System.Data.Linq.Mapping.MetaAccessor StorageAccessor { get; }
    return:
      type: System.Data.Linq.Mapping.MetaAccessor
      description: "La funzione di accesso per il valore di archiviazione di questo membro."
  overload: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageMember
  id: StorageMember
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: StorageMember
  nameWithType: MetaDataMember.StorageMember
  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageMember
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene il membro che archivia i dati per questo membro."
  syntax:
    content: public abstract System.Reflection.MemberInfo StorageMember { get; }
    return:
      type: System.Reflection.MemberInfo
      description: "Il membro di archiviazione."
  overload: System.Data.Linq.Mapping.MetaDataMember.StorageMember*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.Type
  id: Type
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: Type
  nameWithType: MetaDataMember.Type
  fullName: System.Data.Linq.Mapping.MetaDataMember.Type
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene il tipo di questo membro."
  syntax:
    content: public abstract Type Type { get; }
    return:
      type: System.Type
      description: "Il tipo del membro corrente."
  overload: System.Data.Linq.Mapping.MetaDataMember.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
  id: UpdateCheck
  parent: System.Data.Linq.Mapping.MetaDataMember
  langs:
  - csharp
  name: UpdateCheck
  nameWithType: MetaDataMember.UpdateCheck
  fullName: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Ottiene i criteri di controllo della concorrenza ottimistica per questo membro."
  remarks: "Se la classe dispone di un membro della versione (<xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A> impostato su `true`), il rilevamento viene eseguito confrontando i valori del membro originali con lo stato del database corrente.</xref:System.Data.Linq.Mapping.MetaDataMember.IsVersion%2A>       La proprietà UpdateCheck determina come LINQ to SQL implementa il rilevamento dei conflitti nella concorrenza ottimistica. Solo i membri di questa proprietà è impostata su <xref:System.Data.Linq.Mapping.UpdateCheck>o <xref:System.Data.Linq.Mapping.UpdateCheck>vengono considerati durante il rilevamento dei conflitti.</xref:System.Data.Linq.Mapping.UpdateCheck> </xref:System.Data.Linq.Mapping.UpdateCheck>"
  syntax:
    content: public abstract System.Data.Linq.Mapping.UpdateCheck UpdateCheck { get; }
    return:
      type: System.Data.Linq.Mapping.UpdateCheck
      description: "An <xref href=&quot;System.Data.Linq.Mapping.UpdateCheck&quot;></xref> enum."
  overload: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Linq.Mapping.MetaDataMember.#ctor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MetaDataMember()
  nameWithType: MetaDataMember.MetaDataMember()
  fullName: System.Data.Linq.Mapping.MetaDataMember.MetaDataMember()
- uid: System.Data.Linq.Mapping.MetaDataMember.Association
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Association
  nameWithType: MetaDataMember.Association
  fullName: System.Data.Linq.Mapping.MetaDataMember.Association
- uid: System.Data.Linq.Mapping.MetaAssociation
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaAssociation
  nameWithType: MetaAssociation
  fullName: System.Data.Linq.Mapping.MetaAssociation
- uid: System.Data.Linq.Mapping.MetaDataMember.AutoSync
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: AutoSync
  nameWithType: MetaDataMember.AutoSync
  fullName: System.Data.Linq.Mapping.MetaDataMember.AutoSync
- uid: System.Data.Linq.Mapping.AutoSync
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: AutoSync
  nameWithType: AutoSync
  fullName: System.Data.Linq.Mapping.AutoSync
- uid: System.Data.Linq.Mapping.MetaDataMember.CanBeNull
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: CanBeNull
  nameWithType: MetaDataMember.CanBeNull
  fullName: System.Data.Linq.Mapping.MetaDataMember.CanBeNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.Mapping.MetaDataMember.DbType
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DbType
  nameWithType: MetaDataMember.DbType
  fullName: System.Data.Linq.Mapping.MetaDataMember.DbType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Linq.Mapping.MetaDataMember.DeclaringType
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeclaringType
  nameWithType: MetaDataMember.DeclaringType
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeclaringType
- uid: System.Data.Linq.Mapping.MetaType
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaType
  nameWithType: MetaType
  fullName: System.Data.Linq.Mapping.MetaType
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeferredSourceAccessor
  nameWithType: MetaDataMember.DeferredSourceAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor
- uid: System.Data.Linq.Mapping.MetaAccessor
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: MetaAccessor
  nameWithType: MetaAccessor
  fullName: System.Data.Linq.Mapping.MetaAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeferredValueAccessor
  nameWithType: MetaDataMember.DeferredValueAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.Expression
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Expression
  nameWithType: MetaDataMember.Expression
  fullName: System.Data.Linq.Mapping.MetaDataMember.Expression
- uid: System.Data.Linq.Mapping.MetaDataMember.IsAssociation
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsAssociation
  nameWithType: MetaDataMember.IsAssociation
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsAssociation
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDbGenerated
  nameWithType: MetaDataMember.IsDbGenerated
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(System.Data.Linq.Mapping.MetaType)
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDeclaredBy(MetaType)
  nameWithType: MetaDataMember.IsDeclaredBy(MetaType)
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy(MetaType)
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeferred
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDeferred
  nameWithType: MetaDataMember.IsDeferred
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDeferred
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDiscriminator
  nameWithType: MetaDataMember.IsDiscriminator
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPersistent
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsPersistent
  nameWithType: MetaDataMember.IsPersistent
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPersistent
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsPrimaryKey
  nameWithType: MetaDataMember.IsPrimaryKey
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey
- uid: System.Data.Linq.Mapping.MetaDataMember.IsVersion
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsVersion
  nameWithType: MetaDataMember.IsVersion
  fullName: System.Data.Linq.Mapping.MetaDataMember.IsVersion
- uid: System.Data.Linq.Mapping.MetaDataMember.LoadMethod
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: LoadMethod
  nameWithType: MetaDataMember.LoadMethod
  fullName: System.Data.Linq.Mapping.MetaDataMember.LoadMethod
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Data.Linq.Mapping.MetaDataMember.MappedName
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MappedName
  nameWithType: MetaDataMember.MappedName
  fullName: System.Data.Linq.Mapping.MetaDataMember.MappedName
- uid: System.Data.Linq.Mapping.MetaDataMember.Member
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Member
  nameWithType: MetaDataMember.Member
  fullName: System.Data.Linq.Mapping.MetaDataMember.Member
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MemberAccessor
  nameWithType: MetaDataMember.MemberAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.Name
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Name
  nameWithType: MetaDataMember.Name
  fullName: System.Data.Linq.Mapping.MetaDataMember.Name
- uid: System.Data.Linq.Mapping.MetaDataMember.Ordinal
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Ordinal
  nameWithType: MetaDataMember.Ordinal
  fullName: System.Data.Linq.Mapping.MetaDataMember.Ordinal
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: StorageAccessor
  nameWithType: MetaDataMember.StorageAccessor
  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageMember
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: StorageMember
  nameWithType: MetaDataMember.StorageMember
  fullName: System.Data.Linq.Mapping.MetaDataMember.StorageMember
- uid: System.Data.Linq.Mapping.MetaDataMember.Type
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Type
  nameWithType: MetaDataMember.Type
  fullName: System.Data.Linq.Mapping.MetaDataMember.Type
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: UpdateCheck
  nameWithType: MetaDataMember.UpdateCheck
  fullName: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck
- uid: System.Data.Linq.Mapping.UpdateCheck
  parent: System.Data.Linq.Mapping
  isExternal: false
  name: UpdateCheck
  nameWithType: UpdateCheck
  fullName: System.Data.Linq.Mapping.UpdateCheck
- uid: System.Data.Linq.Mapping.MetaDataMember.#ctor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MetaDataMember
  nameWithType: MetaDataMember.MetaDataMember
- uid: System.Data.Linq.Mapping.MetaDataMember.Association*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Association
  nameWithType: MetaDataMember.Association
- uid: System.Data.Linq.Mapping.MetaDataMember.AutoSync*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: AutoSync
  nameWithType: MetaDataMember.AutoSync
- uid: System.Data.Linq.Mapping.MetaDataMember.CanBeNull*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: CanBeNull
  nameWithType: MetaDataMember.CanBeNull
- uid: System.Data.Linq.Mapping.MetaDataMember.DbType*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DbType
  nameWithType: MetaDataMember.DbType
- uid: System.Data.Linq.Mapping.MetaDataMember.DeclaringType*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeclaringType
  nameWithType: MetaDataMember.DeclaringType
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredSourceAccessor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeferredSourceAccessor
  nameWithType: MetaDataMember.DeferredSourceAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.DeferredValueAccessor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: DeferredValueAccessor
  nameWithType: MetaDataMember.DeferredValueAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.Expression*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Expression
  nameWithType: MetaDataMember.Expression
- uid: System.Data.Linq.Mapping.MetaDataMember.IsAssociation*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsAssociation
  nameWithType: MetaDataMember.IsAssociation
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDbGenerated*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDbGenerated
  nameWithType: MetaDataMember.IsDbGenerated
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeclaredBy*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDeclaredBy
  nameWithType: MetaDataMember.IsDeclaredBy
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDeferred*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDeferred
  nameWithType: MetaDataMember.IsDeferred
- uid: System.Data.Linq.Mapping.MetaDataMember.IsDiscriminator*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsDiscriminator
  nameWithType: MetaDataMember.IsDiscriminator
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPersistent*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsPersistent
  nameWithType: MetaDataMember.IsPersistent
- uid: System.Data.Linq.Mapping.MetaDataMember.IsPrimaryKey*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsPrimaryKey
  nameWithType: MetaDataMember.IsPrimaryKey
- uid: System.Data.Linq.Mapping.MetaDataMember.IsVersion*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: IsVersion
  nameWithType: MetaDataMember.IsVersion
- uid: System.Data.Linq.Mapping.MetaDataMember.LoadMethod*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: LoadMethod
  nameWithType: MetaDataMember.LoadMethod
- uid: System.Data.Linq.Mapping.MetaDataMember.MappedName*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MappedName
  nameWithType: MetaDataMember.MappedName
- uid: System.Data.Linq.Mapping.MetaDataMember.Member*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Member
  nameWithType: MetaDataMember.Member
- uid: System.Data.Linq.Mapping.MetaDataMember.MemberAccessor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: MemberAccessor
  nameWithType: MetaDataMember.MemberAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.Name*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Name
  nameWithType: MetaDataMember.Name
- uid: System.Data.Linq.Mapping.MetaDataMember.Ordinal*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Ordinal
  nameWithType: MetaDataMember.Ordinal
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageAccessor*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: StorageAccessor
  nameWithType: MetaDataMember.StorageAccessor
- uid: System.Data.Linq.Mapping.MetaDataMember.StorageMember*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: StorageMember
  nameWithType: MetaDataMember.StorageMember
- uid: System.Data.Linq.Mapping.MetaDataMember.Type*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: Type
  nameWithType: MetaDataMember.Type
- uid: System.Data.Linq.Mapping.MetaDataMember.UpdateCheck*
  parent: System.Data.Linq.Mapping.MetaDataMember
  isExternal: false
  name: UpdateCheck
  nameWithType: MetaDataMember.UpdateCheck
