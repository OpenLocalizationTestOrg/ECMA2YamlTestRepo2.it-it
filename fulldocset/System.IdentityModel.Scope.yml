### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Scope
  id: Scope
  children:
  - System.IdentityModel.Scope.#ctor
  - System.IdentityModel.Scope.#ctor(System.String)
  - System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)
  - System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Scope.AppliesToAddress
  - System.IdentityModel.Scope.EncryptingCredentials
  - System.IdentityModel.Scope.Properties
  - System.IdentityModel.Scope.ReplyToAddress
  - System.IdentityModel.Scope.SigningCredentials
  - System.IdentityModel.Scope.SymmetricKeyEncryptionRequired
  - System.IdentityModel.Scope.TokenEncryptionRequired
  langs:
  - csharp
  name: Scope
  nameWithType: Scope
  fullName: System.IdentityModel.Scope
  type: Class
  summary: "Rappresenta la configurazione per la richiesta di rilascio dei token."
  remarks: "La classe ambito incapsula le informazioni sulla relying party (RP) associata a una richiesta di token di sicurezza (RST). Queste informazioni vengono utilizzate dalle implementazioni del <xref:System.IdentityModel.SecurityTokenService>classe (STS) nella pipeline di rilascio dei token per restituire una risposta (RSTR) a una richiesta di token di sicurezza (RST).</xref:System.IdentityModel.SecurityTokenService>       Crea ambito oggetti contengono informazioni sull&quot;indirizzo del componente, la crittografia e la firma delle credenziali da utilizzare con il token di sicurezza emesso, e se il token di se stesso o le chiavi simmetriche emesso con il token deve essere crittografato. Per impostazione predefinita, vengono crittografate le chiavi simmetriche e token. È possibile estendere la classe di ambito per includere ulteriori informazioni sulla richiesta, ad esempio tipi di token accettato dal componente, durata predefinita dei token, durata massima dei token, la suite di algoritmi utilizzata dal componente e così via. Tuttavia, le informazioni incapsulate in questa classe non vanno relativi alle singole richieste.       La pipeline di rilascio dei token è implementata nel <xref:System.IdentityModel.SecurityTokenService.Issue%2A>metodo e questo metodo richiama il <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>metodo per ottenere la configurazione per l&quot;elemento RSR.</xref:System.IdentityModel.SecurityTokenService.GetScope%2A> </xref:System.IdentityModel.SecurityTokenService.Issue%2A> È necessario implementare un <xref:System.IdentityModel.SecurityTokenService.GetScope%2A>metodo in servizio token di sicurezza e restituire un oggetto ambito appropriato per il componente e l&quot;implementazione del servizio token di sicurezza personalizzato.</xref:System.IdentityModel.SecurityTokenService.GetScope%2A>"
  syntax:
    content: public class Scope
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: Scope()
  nameWithType: Scope.Scope()
  fullName: System.IdentityModel.Scope.Scope()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> classe."
  remarks: "Nella tabella seguente vengono illustrati i valori di proprietà iniziali per il nuovo <xref:System.IdentityModel.Scope>istanza.</xref:System.IdentityModel.Scope>      | Proprietà | Valore. |   |--------------|------------|   | <xref:System.IdentityModel.Scope.AppliesToAddress%2A>| `null` .|   | <xref:System.IdentityModel.Scope.EncryptingCredentials%2A>| `null`.|   | <xref:System.IdentityModel.Scope.Properties%2A>| Un dizionario vuoto. |   | <xref:System.IdentityModel.Scope.ReplyToAddress%2A>| `null`.|   | <xref:System.IdentityModel.Scope.SigningCredentials%2A>| `null`.|   | <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>| `true`.|   | <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>| `true`.|</xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A></xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A></xref:System.IdentityModel.Scope.SigningCredentials%2A></xref:System.IdentityModel.Scope.ReplyToAddress%2A></xref:System.IdentityModel.Scope.Properties%2A></xref:System.IdentityModel.Scope.EncryptingCredentials%2A></xref:System.IdentityModel.Scope.AppliesToAddress%2A>"
  syntax:
    content: public Scope ();
    parameters: []
  overload: System.IdentityModel.Scope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: Scope(String)
  nameWithType: Scope.Scope(String)
  fullName: System.IdentityModel.Scope.Scope(String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> classe con l&quot;indirizzo specificato appliesTo."
  remarks: "Nella tabella seguente vengono illustrati i valori di proprietà iniziali per il nuovo <xref:System.IdentityModel.Scope>istanza.</xref:System.IdentityModel.Scope>      | Proprietà | Valore. |   |--------------|------------|   | <xref:System.IdentityModel.Scope.AppliesToAddress%2A>| Il valore di `appliesToAddress` parametro. |   | <xref:System.IdentityModel.Scope.EncryptingCredentials%2A>| `null`.|   | <xref:System.IdentityModel.Scope.Properties%2A>| Un dizionario vuoto. |   | <xref:System.IdentityModel.Scope.ReplyToAddress%2A>| `null`.|   | <xref:System.IdentityModel.Scope.SigningCredentials%2A>| `null`.|   | <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>| `true`.|   | <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>| `true`.|</xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A></xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A></xref:System.IdentityModel.Scope.SigningCredentials%2A></xref:System.IdentityModel.Scope.ReplyToAddress%2A></xref:System.IdentityModel.Scope.Properties%2A></xref:System.IdentityModel.Scope.EncryptingCredentials%2A></xref:System.IdentityModel.Scope.AppliesToAddress%2A>"
  syntax:
    content: public Scope (string appliesToAddress);
    parameters:
    - id: appliesToAddress
      type: System.String
      description: "L&quot;indirizzo di appliesTo della relying party. In genere si tratta di un URI."
  overload: System.IdentityModel.Scope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: Scope(String,EncryptingCredentials)
  nameWithType: Scope.Scope(String,EncryptingCredentials)
  fullName: System.IdentityModel.Scope.Scope(String,EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> classe con l&quot;indirizzo specificato appliesTo e la crittografia delle credenziali."
  remarks: "Nella tabella seguente vengono illustrati i valori di proprietà iniziali per il nuovo <xref:System.IdentityModel.Scope>istanza.</xref:System.IdentityModel.Scope>      | Proprietà | Valore. |   |--------------|------------|   | <xref:System.IdentityModel.Scope.AppliesToAddress%2A>| Il valore di `appliesToAddress` parametro. |   | <xref:System.IdentityModel.Scope.EncryptingCredentials%2A>| `null`.|   | <xref:System.IdentityModel.Scope.Properties%2A>| Un dizionario vuoto. |   | <xref:System.IdentityModel.Scope.ReplyToAddress%2A>| `null`.|   | <xref:System.IdentityModel.Scope.SigningCredentials%2A>| Il valore di `signingCredentials` parametro. |   | <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>| `true`.|   | <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>| `true`.|</xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A></xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A></xref:System.IdentityModel.Scope.SigningCredentials%2A></xref:System.IdentityModel.Scope.ReplyToAddress%2A></xref:System.IdentityModel.Scope.Properties%2A></xref:System.IdentityModel.Scope.EncryptingCredentials%2A></xref:System.IdentityModel.Scope.AppliesToAddress%2A>"
  syntax:
    content: public Scope (string appliesToAddress, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);
    parameters:
    - id: appliesToAddress
      type: System.String
      description: "L&quot;indirizzo di appliesTo della relying party. In genere si tratta di un URI."
    - id: encryptingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Le credenziali di crittografia per la relying party."
  overload: System.IdentityModel.Scope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)
  id: '#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)'
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: Scope(String,SigningCredentials)
  nameWithType: Scope.Scope(String,SigningCredentials)
  fullName: System.IdentityModel.Scope.Scope(String,SigningCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> classe con l&quot;indirizzo specificato appliesTo e le credenziali di firma."
  remarks: "Nella tabella seguente vengono illustrati i valori di proprietà iniziali per il nuovo <xref:System.IdentityModel.Scope>istanza.</xref:System.IdentityModel.Scope>      | Proprietà | Valore. |   |--------------|------------|   | <xref:System.IdentityModel.Scope.AppliesToAddress%2A>| Il valore di `appliesToAddress` parametro. |   | <xref:System.IdentityModel.Scope.EncryptingCredentials%2A>| `null`.|   | <xref:System.IdentityModel.Scope.Properties%2A>| Un dizionario vuoto. |   | <xref:System.IdentityModel.Scope.ReplyToAddress%2A>| `null`.|   | <xref:System.IdentityModel.Scope.SigningCredentials%2A>| Il valore di `signingCredentials` parametro. |   | <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>| `true`.|   | <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>| `true`.|</xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A></xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A></xref:System.IdentityModel.Scope.SigningCredentials%2A></xref:System.IdentityModel.Scope.ReplyToAddress%2A></xref:System.IdentityModel.Scope.Properties%2A></xref:System.IdentityModel.Scope.EncryptingCredentials%2A></xref:System.IdentityModel.Scope.AppliesToAddress%2A>"
  syntax:
    content: public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials);
    parameters:
    - id: appliesToAddress
      type: System.String
      description: "L&quot;indirizzo di appliesTo della relying party. In genere si tratta di un URI."
    - id: signingCredentials
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "Le credenziali di firma per la relying party."
  overload: System.IdentityModel.Scope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: Scope(String,SigningCredentials,EncryptingCredentials)
  nameWithType: Scope.Scope(String,SigningCredentials,EncryptingCredentials)
  fullName: System.IdentityModel.Scope.Scope(String,SigningCredentials,EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.IdentityModel.Scope&quot;> </xref> classe con l&quot;indirizzo specificato appliesTo, le credenziali di firma e crittografia delle credenziali."
  remarks: "Nella tabella seguente vengono illustrati i valori di proprietà iniziali per il nuovo <xref:System.IdentityModel.Scope>istanza.</xref:System.IdentityModel.Scope>      | Proprietà | Valore |   |--------------|-----------|   | <xref:System.IdentityModel.Scope.AppliesToAddress%2A>| Il valore di `appliesToAddress` parametro. |   | <xref:System.IdentityModel.Scope.EncryptingCredentials%2A>| Il valore di `encryptingCredentials` parametro. |   | <xref:System.IdentityModel.Scope.Properties%2A>| Un dizionario vuoto. |   | <xref:System.IdentityModel.Scope.ReplyToAddress%2A>| `null`.|   | <xref:System.IdentityModel.Scope.SigningCredentials%2A>| Il valore di `signingCredentials` parametro. |   | <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>| `true`.|   | <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>| `true`.|</xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A></xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A></xref:System.IdentityModel.Scope.SigningCredentials%2A></xref:System.IdentityModel.Scope.ReplyToAddress%2A></xref:System.IdentityModel.Scope.Properties%2A></xref:System.IdentityModel.Scope.EncryptingCredentials%2A></xref:System.IdentityModel.Scope.AppliesToAddress%2A>"
  syntax:
    content: public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);
    parameters:
    - id: appliesToAddress
      type: System.String
      description: "L&quot;indirizzo di appliesTo della relying party. In genere si tratta di un URI."
    - id: signingCredentials
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "Le credenziali di firma per la relying party."
    - id: encryptingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Le credenziali di crittografia per la relying party."
  overload: System.IdentityModel.Scope.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.AppliesToAddress
  id: AppliesToAddress
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: AppliesToAddress
  nameWithType: Scope.AppliesToAddress
  fullName: System.IdentityModel.Scope.AppliesToAddress
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Ottiene o imposta l&quot;indirizzo appliesTo della relying party."
  syntax:
    content: public virtual string AppliesToAddress { get; set; }
    return:
      type: System.String
      description: "L&quot;indirizzo di appliesTo della relying party. In genere si tratta di un URI."
  overload: System.IdentityModel.Scope.AppliesToAddress*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.EncryptingCredentials
  id: EncryptingCredentials
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: EncryptingCredentials
  nameWithType: Scope.EncryptingCredentials
  fullName: System.IdentityModel.Scope.EncryptingCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Ottiene o imposta le credenziali di crittografia per la relying party."
  remarks: "Se il <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>proprietà `true`, le credenziali vengono utilizzate per crittografare i token di sicurezza emesso.</xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> Se la <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>proprietà `true`, le credenziali vengono utilizzate per crittografare le chiavi simmetriche con i token di sicurezza.</xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>"
  syntax:
    content: public virtual System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials { get; set; }
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Le credenziali di crittografia da utilizzare per la relying party."
  overload: System.IdentityModel.Scope.EncryptingCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.Properties
  id: Properties
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: Properties
  nameWithType: Scope.Properties
  fullName: System.IdentityModel.Scope.Properties
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Ottiene il contenitore delle proprietà per estendere l&quot;oggetto."
  syntax:
    content: public virtual System.Collections.Generic.Dictionary<string,object> Properties { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: "Il contenitore delle proprietà."
  overload: System.IdentityModel.Scope.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.ReplyToAddress
  id: ReplyToAddress
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: ReplyToAddress
  nameWithType: Scope.ReplyToAddress
  fullName: System.IdentityModel.Scope.ReplyToAddress
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Ottiene o imposta l&quot;indirizzo replyTo della relying party."
  syntax:
    content: public virtual string ReplyToAddress { get; set; }
    return:
      type: System.String
      description: "L&quot;indirizzo replyTo della relying party. In genere si tratta di un URI."
  overload: System.IdentityModel.Scope.ReplyToAddress*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.SigningCredentials
  id: SigningCredentials
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: SigningCredentials
  nameWithType: Scope.SigningCredentials
  fullName: System.IdentityModel.Scope.SigningCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Ottiene o imposta le credenziali di firma per la relying party."
  syntax:
    content: public virtual System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }
    return:
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "Le credenziali di firma da utilizzare per la relying party."
  overload: System.IdentityModel.Scope.SigningCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired
  id: SymmetricKeyEncryptionRequired
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: SymmetricKeyEncryptionRequired
  nameWithType: Scope.SymmetricKeyEncryptionRequired
  fullName: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Ottiene o imposta un valore che indica se le chiavi simmetriche emessa devono essere crittografate."
  remarks: "Se la proprietà SymmetricKeyEncryptionRequired `true`, chiavi simmetriche vengono crittografate utilizzando le credenziali di <xref:System.IdentityModel.Scope.EncryptingCredentials%2A>proprietà.</xref:System.IdentityModel.Scope.EncryptingCredentials%2A>"
  syntax:
    content: public virtual bool SymmetricKeyEncryptionRequired { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è necessario crittografare le chiavi simmetriche; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Scope.TokenEncryptionRequired
  id: TokenEncryptionRequired
  parent: System.IdentityModel.Scope
  langs:
  - csharp
  name: TokenEncryptionRequired
  nameWithType: Scope.TokenEncryptionRequired
  fullName: System.IdentityModel.Scope.TokenEncryptionRequired
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Ottiene o imposta un valore che indica se i token di sicurezza emesso devono essere crittografati."
  remarks: "Se la proprietà TokenEncryptionRequired `true`, i token di sicurezza vengono crittografati utilizzando le credenziali nella <xref:System.IdentityModel.Scope.EncryptingCredentials%2A>proprietà.</xref:System.IdentityModel.Scope.EncryptingCredentials%2A>"
  syntax:
    content: public virtual bool TokenEncryptionRequired { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se i token di sicurezza devono essere crittografati; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Il valore predefinito è <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Scope.TokenEncryptionRequired*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Scope.#ctor
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Scope()
  nameWithType: Scope.Scope()
  fullName: System.IdentityModel.Scope.Scope()
- uid: System.IdentityModel.Scope.#ctor(System.String)
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Scope(String)
  nameWithType: Scope.Scope(String)
  fullName: System.IdentityModel.Scope.Scope(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Scope(String,EncryptingCredentials)
  nameWithType: Scope.Scope(String,EncryptingCredentials)
  fullName: System.IdentityModel.Scope.Scope(String,EncryptingCredentials)
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Scope(String,SigningCredentials)
  nameWithType: Scope.Scope(String,SigningCredentials)
  fullName: System.IdentityModel.Scope.Scope(String,SigningCredentials)
- uid: System.IdentityModel.Tokens.SigningCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
- uid: System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Scope(String,SigningCredentials,EncryptingCredentials)
  nameWithType: Scope.Scope(String,SigningCredentials,EncryptingCredentials)
  fullName: System.IdentityModel.Scope.Scope(String,SigningCredentials,EncryptingCredentials)
- uid: System.IdentityModel.Scope.AppliesToAddress
  parent: System.IdentityModel.Scope
  isExternal: false
  name: AppliesToAddress
  nameWithType: Scope.AppliesToAddress
  fullName: System.IdentityModel.Scope.AppliesToAddress
- uid: System.IdentityModel.Scope.EncryptingCredentials
  parent: System.IdentityModel.Scope
  isExternal: false
  name: EncryptingCredentials
  nameWithType: Scope.EncryptingCredentials
  fullName: System.IdentityModel.Scope.EncryptingCredentials
- uid: System.IdentityModel.Scope.Properties
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Properties
  nameWithType: Scope.Properties
  fullName: System.IdentityModel.Scope.Properties
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<String,Object>
  nameWithType: Dictionary<String,Object>
  fullName: System.Collections.Generic.Dictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Scope.ReplyToAddress
  parent: System.IdentityModel.Scope
  isExternal: false
  name: ReplyToAddress
  nameWithType: Scope.ReplyToAddress
  fullName: System.IdentityModel.Scope.ReplyToAddress
- uid: System.IdentityModel.Scope.SigningCredentials
  parent: System.IdentityModel.Scope
  isExternal: false
  name: SigningCredentials
  nameWithType: Scope.SigningCredentials
  fullName: System.IdentityModel.Scope.SigningCredentials
- uid: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired
  parent: System.IdentityModel.Scope
  isExternal: false
  name: SymmetricKeyEncryptionRequired
  nameWithType: Scope.SymmetricKeyEncryptionRequired
  fullName: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Scope.TokenEncryptionRequired
  parent: System.IdentityModel.Scope
  isExternal: false
  name: TokenEncryptionRequired
  nameWithType: Scope.TokenEncryptionRequired
  fullName: System.IdentityModel.Scope.TokenEncryptionRequired
- uid: System.IdentityModel.Scope.#ctor*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Scope
  nameWithType: Scope.Scope
- uid: System.IdentityModel.Scope.AppliesToAddress*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: AppliesToAddress
  nameWithType: Scope.AppliesToAddress
- uid: System.IdentityModel.Scope.EncryptingCredentials*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: EncryptingCredentials
  nameWithType: Scope.EncryptingCredentials
- uid: System.IdentityModel.Scope.Properties*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: Properties
  nameWithType: Scope.Properties
- uid: System.IdentityModel.Scope.ReplyToAddress*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: ReplyToAddress
  nameWithType: Scope.ReplyToAddress
- uid: System.IdentityModel.Scope.SigningCredentials*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: SigningCredentials
  nameWithType: Scope.SigningCredentials
- uid: System.IdentityModel.Scope.SymmetricKeyEncryptionRequired*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: SymmetricKeyEncryptionRequired
  nameWithType: Scope.SymmetricKeyEncryptionRequired
- uid: System.IdentityModel.Scope.TokenEncryptionRequired*
  parent: System.IdentityModel.Scope
  isExternal: false
  name: TokenEncryptionRequired
  nameWithType: Scope.TokenEncryptionRequired
