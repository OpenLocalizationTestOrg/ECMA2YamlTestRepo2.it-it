### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.PeerNameResolver
  id: PeerNameResolver
  children:
  - System.Net.PeerToPeer.PeerNameResolver.#ctor
  - System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  - System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  - System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  langs:
  - csharp
  name: PeerNameResolver
  nameWithType: PeerNameResolver
  fullName: System.Net.PeerToPeer.PeerNameResolver
  type: Class
  summary: "Specifica i valori che risolvono un <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> per un <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> utilizzando il protocollo PNRP Namespace API del Provider."
  remarks: "Oggetto <xref:System.Net.PeerToPeer.PeerNameRecord>che contiene tutte le informazioni per il <xref:System.Net.PeerToPeer.PeerName>che è stato pubblicato nel <xref:System.Net.PeerToPeer.Cloud>o sottoposte a query durante il processo di risoluzione.</xref:System.Net.PeerToPeer.Cloud> </xref:System.Net.PeerToPeer.PeerName> </xref:System.Net.PeerToPeer.PeerNameRecord>"
  syntax:
    content: public class PeerNameResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.#ctor
  id: '#ctor'
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: PeerNameResolver()
  nameWithType: PeerNameResolver.PeerNameResolver()
  fullName: System.Net.PeerToPeer.PeerNameResolver.PeerNameResolver()
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inizializza una nuova istanza predefinita di <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver&quot;> </xref> classe."
  remarks: "Dopo aver risolto correttamente un <xref:System.Net.PeerToPeer.PeerName>, <xref:System.Net.PeerToPeer.PeerNameRecord>contiene tutte le informazioni per l&quot;oggetto specificato <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>che è stato pubblicato in sottoposte a query durante la <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>operazione.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> </xref:System.Net.PeerToPeer.PeerNameRecord> </xref:System.Net.PeerToPeer.PeerName>"
  syntax:
    content: public PeerNameResolver ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  id: OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: OnResolveCompleted(ResolveCompletedEventArgs)
  nameWithType: PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Restituisce i dati di risoluzione dopo peer di <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&quot;> </xref> viene generato l&quot;evento."
  remarks: "Questo metodo è un callback asincrono utilizzato per elaborare i dati di risoluzione nome peer dopo la risoluzione dei peer è stata completata.       I tipi derivati possono eseguire l&quot;override di questo metodo per eseguire altre attività quando il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento viene generato dall&quot;oggetto resolver peer.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.PeerToPeer.ResolveCompletedEventArgs
      description: "Il <xref href=&quot;System.Net.PeerToPeer.ResolveCompletedEventArgs&quot;> </xref> oggetto che contiene i dati restituiti dal <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&quot;> </xref> evento."
  overload: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  id: OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  nameWithType: PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Restituisce i dati di stato di risoluzione peer quando il <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&quot;> </xref> viene generato l&quot;evento."
  remarks: "Questo metodo è un callback asincrono utilizzato per elaborare i dati di risoluzione peer dopo la richiesta di stato di risoluzione peer.       I tipi derivati possono eseguire l&quot;override di questo metodo per eseguire altre attività quando il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>evento si verifica.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>"
  syntax:
    content: protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);
    parameters:
    - id: e
      type: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
      description: "<xref href=&quot;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&quot;></xref>oggetto che contiene informazioni sullo stato risoluzione nome peer restituite dal <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&quot;> </xref> evento."
  overload: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)
  id: Resolve(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName)
  nameWithType: PeerNameResolver.Resolve(PeerName)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Risolve l&quot;oggetto specificato <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> in tutte le aree note al peer chiamante."
  remarks: "Questo metodo associa un nome di peer a cloud. Tutti i cloud vengono interrogati per <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> Se il nome del peer non può essere risolta oppure non è `null`, un <xref:System.Net.PeerToPeer.PeerToPeerException>viene generata un&quot;eccezione.</xref:System.Net.PeerToPeer.PeerToPeerException>       Per i nomi di peer non protetti, lo stesso nome può essere registrato (e associato a endpoint diversi) da un peer diversi all&quot;interno dello stesso cloud.       Chiamare il <xref:System.Net.PeerToPeer.PeerNameResolver>metodo è simile alla chiamata al <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>metodo per ogni record di nome peer in <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</xref:System.Net.PeerToPeer.PeerNameRecordCollection> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver> Si noti che con il metodo di risoluzione in un record di nome peer specifico non invalida la risoluzione dei nomi di peer più.       Per ogni <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>(metodo), è presente un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>metodo.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  Gli elenchi dei parametri sono identici, ad eccezione del fatto che il metodo ResolveAsync include un token di sistema per la gestione degli eventi asincroni.       Se il <xref:System.Net.PeerToPeer.Cloud>parametro non viene specificato, il metodo utilizza il <xref:System.Net.PeerToPeer.Cloud.Available>scelta rapida per specificare i parametri di cloud.</xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.Cloud>       Il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>verrà generato l&quot;evento se l&quot;operazione di risoluzione di un errore o viene annullata.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  example:
  - "The following code example illustrates how to resolve a <xref:System.Net.PeerToPeer.PeerName> published in any <xref:System.Net.PeerToPeer.Cloud>.  \n  \n [!code-cs[NCLPNRPPeerNameResolver#1](~/add/codesnippet/csharp/m-system.net.peertopeer._2_1.cs)]"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "Il <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> risolvere."
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "Oggetto <xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;> </xref> che contiene tutti i record di nome peer (rappresentati come <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> oggetti) associato al nome peer specificato. Per i nomi di peer non protetti, lo stesso <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> possono essere registrati da utenti diversi nello stesso <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>e associate a endpoint diversi."
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Il nome del peer specificato non può essere risolto."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  id: Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Int32)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Risolve il nome del peer specificato in tutte le aree note al peer chiamante, restituendo un maggiore del numero specificato di <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> oggetti."
  remarks: "Questo metodo associa un nome di peer a cloud. Tutti i cloud vengono interrogati per il nome del peer. Per i nomi di peer non protetti, lo stesso nome peer può essere registrato da utenti diversi nello stesso <xref:System.Net.PeerToPeer.Cloud>e associate a endpoint diversi.</xref:System.Net.PeerToPeer.Cloud> Se il <xref:System.Net.PeerToPeer.PeerName>non può essere risolto (ad esempio, il nome del peer non è pubblicato) un <xref:System.Net.PeerToPeer.PeerToPeerException>viene generata un&quot;eccezione.</xref:System.Net.PeerToPeer.PeerToPeerException> </xref:System.Net.PeerToPeer.PeerName>       Per ogni <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>(metodo), è presente un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>metodo.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  Gli elenchi dei parametri sono identici, ad eccezione del fatto che il metodo ResolveAsync include un token di sistema per la gestione degli eventi asincroni.       Il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>verrà generato l&quot;evento se l&quot;operazione di risoluzione di un errore o viene annullata.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "Il <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> risolvere."
    - id: maxRecords
      type: System.Int32
      description: "Il numero massimo di <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> oggetti da ottenere da tutti <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> oggetti per l&quot;oggetto fornito `peerName`."
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "Oggetto <xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;> </xref> la cui dimensione è minore o uguale a <code> maxRecords </code> voci. Questa raccolta contiene record di nomi peer associato il <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> che è stato risolto."
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il <code> maxRecords </code> parametro è minore o uguale a zero."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Impossibile risolvere il nome del peer fornito."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  id: Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName,Cloud)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Risolve l&quot;oggetto specificato <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>specificato <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  remarks: "Se il <xref:System.Net.PeerToPeer.PeerName>non può essere risolto (ad esempio, il nome del peer non è pubblicato) un <xref:System.Net.PeerToPeer.PeerToPeerException>viene generata un&quot;eccezione.</xref:System.Net.PeerToPeer.PeerToPeerException> </xref:System.Net.PeerToPeer.PeerName>       Per i nomi di peer non protetti, lo stesso nome può essere registrato (e associato a endpoint diversi) da un peer diversi all&quot;interno dello stesso cloud.       Per ogni <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>(metodo), è presente un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>metodo.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  Gli elenchi dei parametri sono identici, ad eccezione del fatto che il metodo ResolveAsync include un token di sistema per la gestione degli eventi asincroni.       Se il <xref:System.Net.PeerToPeer.Cloud>parametro `null`, il <xref:System.Net.PeerToPeer.PeerNameResolver>utilizza il <xref:System.Net.PeerToPeer.Cloud.Available>scelta rapida per riempire il <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>e <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.PeerNameResolver> </xref:System.Net.PeerToPeer.Cloud>       Il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>verrà generato l&quot;evento se l&quot;operazione di risoluzione di un errore o viene annullata.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "Il <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> risolvere."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "Il <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> in cui si desidera risolvere il nome del peer."
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;></xref>che contiene tutti i record di nome peer (rappresentati come <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> oggetti) associato al nome peer specificato. Per i nomi di peer non protetti, lo stesso <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> possono essere registrati da utenti diversi nello stesso <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>e associate a endpoint diversi."
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Impossibile risolvere il nome del peer fornito."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  id: Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName,Cloud,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud,Int32)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Risolve l&quot;oggetto specificato <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>specificato <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>, restituendo un maggiore del numero specificato di <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> oggetti.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  remarks: "Per i nomi di peer non protetti, lo stesso nome può essere registrato (e associato a endpoint diversi) da un peer diversi all&quot;interno dello stesso cloud. Se il nome del peer non può essere risolto, un <xref:System.Net.PeerToPeer.PeerToPeerException>viene generata un&quot;eccezione.</xref:System.Net.PeerToPeer.PeerToPeerException>       Per ogni <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>(metodo), è presente un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>metodo.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  Gli elenchi dei parametri sono identici, ad eccezione del fatto che il metodo ResolveAsync include un token di sistema per la gestione degli eventi asincroni.       Se il <xref:System.Net.PeerToPeer.Cloud>parametro `null`, il <xref:System.Net.PeerToPeer.PeerNameResolver>utilizza il <xref:System.Net.PeerToPeer.Cloud.Available>scelta rapida per riempire il <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>e <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.PeerNameResolver> </xref:System.Net.PeerToPeer.Cloud>       Il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>verrà generato l&quot;evento se l&quot;operazione di risoluzione di un errore o viene annullata.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "Il <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> risolvere."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "Il <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> in cui si desidera risolvere il `peerName`."
    - id: maxRecords
      type: System.Int32
      description: "Il numero massimo di oggetti record di nome peer da ottenere dal cloud specificato per l&quot;oggetto specificato `peerName`."
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "Oggetto <xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;> </xref> la cui dimensione è minore o uguale a <code> maxRecords </code> voci. Questa raccolta contiene record di nomi peer associato il <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> che è stato risolto."
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il <code> maxRecords </code> parametro è minore o uguale a zero."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Impossibile risolvere il nome del peer fornito."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inizia un&quot;operazione di risoluzione asincrona per l&quot;oggetto specificato <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>in tutte le aree note al peer chiamante.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  remarks: "Questo metodo associa in modo asincrono un nome di peer a cloud. Tutti i cloud vengono interrogati per <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> Genera il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento, richiama il <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>(metodo).</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> In alternativa, genera il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>evento, richiama il il <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>(metodo).</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       Se il nome del peer non può essere risolto, un <xref:System.Net.PeerToPeer.PeerToPeerException>viene generata un&quot;eccezione.</xref:System.Net.PeerToPeer.PeerToPeerException>       Per i nomi di peer non protetti, lo stesso nome può essere registrato (e associato a endpoint diversi) da un peer diversi all&quot;interno dello stesso cloud.       Chiamare il <xref:System.Net.PeerToPeer.PeerNameResolver>metodo è simile alla chiamata al <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>metodo per ogni record di nome peer in <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</xref:System.Net.PeerToPeer.PeerNameRecordCollection> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver> Si noti che con il metodo di risoluzione in un record di nome peer specifico non invalida la risoluzione dei nomi di peer più.       Per ogni <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>(metodo), è presente un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>metodo.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  Gli elenchi dei parametri sono identici, ad eccezione del fatto che il metodo ResolveAsync include un token di sistema per la gestione degli eventi asincroni e il metodo di risoluzione è destinato l&quot;elaborazione sincrona.       Tutti i riferimenti all&quot;oggetto di sistema di risoluzione asincroni vengono coordinati tramite un token di identificatore univoco. Questo `userState` token o identificatore di messaggio consente a un sistema operativo di recapitare un messaggio a un singolo processo di destinazione dopo il messaggio è stato inserito nella coda di messaggi.       Il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>verrà generato l&quot;evento se l&quot;operazione di risoluzione di un errore o viene annullata.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "Il <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> risolvere."
    - id: userState
      type: System.Object
      description: "Un oggetto definito dall&quot;utente che contiene informazioni sullo stato di operazione di risoluzione."
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uno o entrambi i <code> peerName </code> e <code> userState </code> sono impostati su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inizia un&quot;operazione di risoluzione asincrona per l&quot;oggetto specificato <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> in tutte le aree note al peer chiamante, restituendo un più <code> maxRecords </code> voci per il nome del peer."
  remarks: "Questo metodo associa in modo asincrono un nome di peer a cloud. Tutti i cloud vengono interrogati per <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> Per i nomi di peer non protetti, lo stesso nome può essere registrato (e associato a endpoint diversi) da un peer diversi all&quot;interno dello stesso cloud. Se il nome del peer non può essere risolta oppure non è `null`, un <xref:System.Net.PeerToPeer.PeerToPeerException>viene generata un&quot;eccezione.</xref:System.Net.PeerToPeer.PeerToPeerException>       Questo metodo genera il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento, richiama il <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>metodo.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> In alternativa, genera il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>evento, richiama il il <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>(metodo).</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       Per ogni <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>(metodo), è presente un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>metodo.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  Gli elenchi dei parametri sono identici, ad eccezione del fatto che il metodo ResolveAsync include un token di sistema per la gestione degli eventi asincroni e il metodo di risoluzione è destinato l&quot;elaborazione sincrona.       Tutti i riferimenti all&quot;oggetto di sistema di risoluzione asincroni vengono coordinati tramite un token di identificatore univoco <xref:System.Object>.</xref:System.Object> Questo `userState` token o identificatore di messaggio consente a un sistema operativo di recapitare un messaggio a un singolo processo di destinazione dopo il messaggio è stato inserito nella coda di messaggi.       Il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>verrà generato l&quot;evento se l&quot;operazione di risoluzione di un errore o viene annullata.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "Il <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> risolvere."
    - id: maxRecords
      type: System.Int32
      description: "Il numero massimo di record per ottenere il nome del Peer."
    - id: userState
      type: System.Object
      description: "Un oggetto definito dall&quot;utente che contiene informazioni sull&quot;operazione di risoluzione."
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uno o entrambi i <code> peerName </code> e <code> userState </code> sono impostati su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il <code> maxRecords </code> parametro è minore o uguale a zero."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Cloud,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inizia un&quot;operazione di risoluzione asincrona per l&quot;oggetto specificato <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> specificato <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>."
  remarks: "Questo metodo genera il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento, richiama il <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>metodo.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> In alternativa, genera il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>evento, richiama il il <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>(metodo).</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       Per i nomi di peer non protetti, lo stesso nome può essere registrato (e associato a endpoint diversi) da un peer diversi all&quot;interno dello stesso cloud.       Se il <xref:System.Net.PeerToPeer.Cloud>parametro `null`, il nome viene risolto usando il <xref:System.Net.PeerToPeer.Cloud.Available>collegamento, in cui Inizializza i valori predefiniti per il <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, e <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>proprietà.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.Cloud>       Per ogni <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>(metodo), è presente un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>metodo.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  Gli elenchi dei parametri sono identici, ad eccezione del fatto che il metodo ResolveAsync include un token di sistema per la gestione degli eventi asincroni e il metodo di risoluzione è destinato l&quot;elaborazione sincrona.       Tutti i riferimenti all&quot;oggetto di sistema di risoluzione asincroni vengono coordinati tramite un token di identificatore univoco. Questo `userState` token o identificatore di messaggio consente a un sistema operativo di recapitare un messaggio a un singolo processo di destinazione dopo il messaggio è stato inserito nella coda di messaggi.       Il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>verrà generato l&quot;evento se l&quot;operazione di risoluzione di un errore o viene annullata.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "Il <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> risolvere."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "Il <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> in cui si desidera risolvere il `peerName`."
    - id: userState
      type: System.Object
      description: "Oggetto definito dall&quot;utente <xref:System.Object>che contiene informazioni sull&quot;operazione di risoluzione nome peer.</xref:System.Object>"
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uno o entrambi i <code> peerName </code> e <code> userState </code> sono impostati su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Cloud,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inizia un&quot;operazione di risoluzione asincrona per l&quot;oggetto specificato <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> specificato <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>.  L&quot;operazione di risoluzione verrà risolto non più di <code> maxRecords </code> voci per il nome del peer specificato."
  remarks: "Per i nomi di peer non protetti, lo stesso nome può essere registrato (e associato a endpoint diversi) da un peer diversi all&quot;interno dello stesso cloud.       Questo metodo genera il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento, richiama il <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>metodo.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> In alternativa, genera il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>evento, richiama il il <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>(metodo).</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       Se il <xref:System.Net.PeerToPeer.Cloud>parametro `null`, il nome viene risolto usando il <xref:System.Net.PeerToPeer.Cloud.Available>collegamento, in cui Inizializza i valori predefiniti per il <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, e <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>proprietà.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.Cloud>       Per ogni <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>(metodo), è presente un equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>metodo.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  Gli elenchi dei parametri sono identici, ad eccezione del fatto che il metodo ResolveAsync include un token di sistema per la gestione degli eventi asincroni e il metodo di risoluzione è destinato l&quot;elaborazione sincrona.       Tutti i riferimenti asincroni per l&quot;oggetto resolver del peer vengono coordinati tramite un token di identificatore univoco <xref:System.Object>.</xref:System.Object> Questo `userState` token o identificatore di messaggio consente a un sistema operativo di recapitare un messaggio a un singolo processo di destinazione dopo il messaggio è stato inserito nella coda di messaggi.       Il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>verrà generato l&quot;evento se l&quot;operazione di risoluzione di un errore o viene annullata.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "Il `peerName` risolvere."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "Il `cloud` in cui si desidera risolvere `peerName`."
    - id: maxRecords
      type: System.Int32
      description: "Il numero massimo di record da ottenere dal `cloud` per `peerName`."
    - id: userState
      type: System.Object
      description: "Un oggetto definito dall&quot;utente che contiene informazioni sull&quot;operazione di risoluzione nome peer."
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uno o entrambi i <code> peerName </code> e <code> userState </code> sono impostati su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Uno o più parametri specificati non sono validi."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "Completamento di questa operazione richiede almeno un gestore dell&quot;evento."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Il <code> maxRecords </code> parametro è minore o uguale a zero."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)
  id: ResolveAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsyncCancel(Object)
  nameWithType: PeerNameResolver.ResolveAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Annulla la richiesta di risoluzione del nome peer asincrona specificata."
  remarks: "Chiamare questo metodo garantisce che il sistema non tenterà di ottenere record aggiuntivi per specificato <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName>  Se questo metodo viene chiamato quando un&quot;operazione di risoluzione asincrona non è in attesa, funge da &quot;Nessuna operazione&quot; (OP NO).       Il `userState` è necessario specificare l&quot;oggetto perché è utilizzata per tenere traccia di una chiamata asincrona specifica quando sono più chiamate in corso. L&quot;oggetto fornito dal chiamante è univoco per ogni richiesta di risoluzione del nome peer.       Questo metodo restituirà immediatamente, ma l&quot;operazione può o non può annullare immediatamente. Gli argomenti dell&quot;evento restituiti dal <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento contiene un campo che può essere sottoposto a polling dai client per determinare se si è verificato l&quot;annullamento.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>       Chiamare questo metodo garantisce che l&quot;evento ResolveCompleted venga segnalato appena possibile con l&quot;argomento dell&quot;evento <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>impostato su `true`.</xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>"
  syntax:
    content: public void ResolveAsyncCancel (object userState);
    parameters:
    - id: userState
      type: System.Object
      description: "L&quot;oggetto fornito per il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>istanza di metodo che ha avviato l&quot;operazione di risoluzione.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>"
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <code> userState </code> parameters non possono essere <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  id: ResolveCompleted
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveCompleted
  nameWithType: PeerNameResolver.ResolveCompleted
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "L&quot;evento ResolveCompleted viene segnalato quando una richiesta di risoluzione nome per uno specifico <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>è stata completata.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  remarks: "Il <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>evento verrà generato una volta per ogni endpoint è stato trovato e verrà generato questo evento solo una volta quando tutti gli endpoint sono stati trovati.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       Questo evento viene generato anche se il <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>operazione viene completata in errore o viene annullata.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.ResolveCompletedEventArgs> ResolveCompleted;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.ResolveCompletedEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  id: ResolveProgressChanged
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveProgressChanged
  nameWithType: PeerNameResolver.ResolveProgressChanged
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Questo evento viene segnalato ogni volta che un <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> oggetto si trova in risposta a un <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>operazione per uno specifico <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>"
  remarks: "Se più <xref:System.Net.PeerToPeer.PeerName>esistono oggetti di sottoposte, questo evento viene segnalato una sola volta per ogni <xref:System.Net.PeerToPeer.PeerNameRecord>trovato.</xref:System.Net.PeerToPeer.PeerNameRecord> </xref:System.Net.PeerToPeer.PeerName>"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.ResolveProgressChangedEventArgs> ResolveProgressChanged;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.ResolveProgressChangedEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.PeerToPeer.PeerNameResolver.#ctor
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: PeerNameResolver()
  nameWithType: PeerNameResolver.PeerNameResolver()
  fullName: System.Net.PeerToPeer.PeerNameResolver.PeerNameResolver()
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveCompleted(ResolveCompletedEventArgs)
  nameWithType: PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
- uid: System.Net.PeerToPeer.ResolveCompletedEventArgs
  parent: System.Net.PeerToPeer
  isExternal: false
  name: ResolveCompletedEventArgs
  nameWithType: ResolveCompletedEventArgs
  fullName: System.Net.PeerToPeer.ResolveCompletedEventArgs
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  nameWithType: PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
- uid: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
  parent: System.Net.PeerToPeer
  isExternal: false
  name: ResolveProgressChangedEventArgs
  nameWithType: ResolveProgressChangedEventArgs
  fullName: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName)
  nameWithType: PeerNameResolver.Resolve(PeerName)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName)
- uid: System.Net.PeerToPeer.PeerNameRecordCollection
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerNameRecordCollection
  nameWithType: PeerNameRecordCollection
  fullName: System.Net.PeerToPeer.PeerNameRecordCollection
- uid: System.Net.PeerToPeer.PeerName
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName,Cloud)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud)
- uid: System.Net.PeerToPeer.Cloud
  parent: System.Net.PeerToPeer
  isExternal: false
  name: Cloud
  nameWithType: Cloud
  fullName: System.Net.PeerToPeer.Cloud
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName,Cloud,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud,Int32)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Cloud,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Cloud,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsyncCancel(Object)
  nameWithType: PeerNameResolver.ResolveAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveCompleted
  nameWithType: PeerNameResolver.ResolveCompleted
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
- uid: System.EventHandler{System.Net.PeerToPeer.ResolveCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ResolveCompletedEventArgs>
  nameWithType: EventHandler<ResolveCompletedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.ResolveCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.ResolveCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.ResolveCompletedEventArgs
    name: ResolveCompletedEventArgs
    nameWithType: ResolveCompletedEventArgs
    fullName: ResolveCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveProgressChanged
  nameWithType: PeerNameResolver.ResolveProgressChanged
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
- uid: System.EventHandler{System.Net.PeerToPeer.ResolveProgressChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ResolveProgressChangedEventArgs>
  nameWithType: EventHandler<ResolveProgressChangedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.ResolveProgressChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.ResolveProgressChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
    name: ResolveProgressChangedEventArgs
    nameWithType: ResolveProgressChangedEventArgs
    fullName: ResolveProgressChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.PeerNameResolver.#ctor*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: PeerNameResolver
  nameWithType: PeerNameResolver.PeerNameResolver
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveCompleted
  nameWithType: PeerNameResolver.OnResolveCompleted
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveProgressChanged
  nameWithType: PeerNameResolver.OnResolveProgressChanged
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve
  nameWithType: PeerNameResolver.Resolve
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync
  nameWithType: PeerNameResolver.ResolveAsync
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsyncCancel
  nameWithType: PeerNameResolver.ResolveAsyncCancel
