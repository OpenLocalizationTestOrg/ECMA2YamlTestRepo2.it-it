### YamlMime:ManagedReference
items:
- uid: System.Windows.VisualStateGroup
  id: VisualStateGroup
  children:
  - System.Windows.VisualStateGroup.#ctor
  - System.Windows.VisualStateGroup.CurrentState
  - System.Windows.VisualStateGroup.CurrentStateChanged
  - System.Windows.VisualStateGroup.CurrentStateChanging
  - System.Windows.VisualStateGroup.Name
  - System.Windows.VisualStateGroup.States
  - System.Windows.VisualStateGroup.Transitions
  langs:
  - csharp
  name: VisualStateGroup
  nameWithType: VisualStateGroup
  fullName: System.Windows.VisualStateGroup
  type: Class
  summary: "Contiene si escludono a vicenda <xref href=&quot;System.Windows.VisualState&quot;> </xref> oggetti e <xref href=&quot;System.Windows.VisualTransition&quot;> </xref> oggetti utilizzati per passare da uno stato a un altro."
  remarks: "Ogni VisualStateGroup contiene una raccolta di <xref:System.Windows.VisualState>oggetti.</xref:System.Windows.VisualState> Oggetto <xref:System.Windows.VisualState>contiene una raccolta di <xref:System.Windows.Media.Animation.Storyboard>oggetti che specificano come l&quot;aspetto del controllo cambia quando il controllo è in un determinato stato.</xref:System.Windows.Media.Animation.Storyboard> </xref:System.Windows.VisualState> Ad esempio, un <xref:System.Windows.Controls.Button>potrebbe avere un aspetto leggermente diverso quando viene premuto e quando non viene premuto.</xref:System.Windows.Controls.Button> Due stati che il <xref:System.Windows.Controls.Button>definisce corrisponde a quando viene premuto (`&quot;Pressed&quot;`) e quando non è (`&quot;Normal&quot;`).</xref:System.Windows.Controls.Button>       Aggiungere <xref:System.Windows.VisualState>a un controllo impostando la `VisualStateManager.VisualStateGroups` proprietà del controllo associata.</xref:System.Windows.VisualState> Gli Stati che si escludono tra loro in VisualStateGroup la stessa. Ad esempio, il <xref:System.Windows.Controls.CheckBox>dispone di due oggetti VisualStateGroup.</xref:System.Windows.Controls.CheckBox> Uno contiene gli stati `Normal`, `MouseOver`, `Pressed`, e `Disabled`. L&quot;altro contenente gli stati, `Checked`, `UnChecked`, e `Indeterminate`. Il <xref:System.Windows.Controls.CheckBox>può trovarsi in stati `MouseOver` e `UnChecked` allo stesso tempo, ma non può essere il `MouseOver` e `Pressed` stati nello stesso momento.</xref:System.Windows.Controls.CheckBox>       Sebbene sia possibile aggiungere <xref:System.Windows.VisualState>oggetti a qualsiasi elemento, sono particolarmente utile per consentire ad altri di ridefinire il comportamento visivo di un <xref:System.Windows.Controls.Control>.</xref:System.Windows.Controls.Control> </xref:System.Windows.VisualState> Se si crea un controllo personalizzato che utilizza un <xref:System.Windows.Controls.ControlTemplate>, è possibile specificare gli Stati che può essere controllo aggiungendo un <xref:System.Windows.TemplateVisualStateAttribute>nella relativa definizione di classe.</xref:System.Windows.TemplateVisualStateAttribute> </xref:System.Windows.Controls.ControlTemplate> Quindi tutti gli utenti che crea un nuovo <xref:System.Windows.Controls.ControlTemplate>per il controllo può aggiungere <xref:System.Windows.VisualState>oggetti al modello.</xref:System.Windows.VisualState> </xref:System.Windows.Controls.ControlTemplate> Il <xref:System.Windows.TemplateVisualStateAttribute>Abilita gli strumenti di progettazione, ad esempio Expression Blend, per esporre gli stati del controllo.</xref:System.Windows.TemplateVisualStateAttribute> Stati con lo stesso <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>appartengono le stesse VisualStateGroup.</xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>       Per ulteriori informazioni su come usare gli oggetti VisualStateGroup un <xref:System.Windows.Controls.ControlTemplate>, vedere [personalizzazione dell&quot;aspetto di un controllo esistente tramite la creazione di ControlTemplate](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.Controls.ControlTemplate> Per ulteriori informazioni su come creare controllano che utilizzano il <xref:System.Windows.VisualStateManager>, vedere [la creazione di un controllo che ha un aspetto personalizzabile](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.VisualStateManager>       Il <xref:System.Windows.VisualStateGroup.Transitions%2A>contiene proprietà <xref:System.Windows.VisualTransition>gli oggetti che vengono applicati quando il controllo la transizione tra stati sono definiti nel VisualStateGroup.</xref:System.Windows.VisualTransition> </xref:System.Windows.VisualStateGroup.Transitions%2A>"
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a VisualStateGroup named `CommonStates`, which defines the `MouseOver` and `Normal` states. The VisualStateGroup also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("States")]

      [System.Windows.Markup.RuntimeNameProperty("Name")]

      public class VisualStateGroup : System.Windows.DependencyObject
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.#ctor
  id: '#ctor'
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: VisualStateGroup()
  nameWithType: VisualStateGroup.VisualStateGroup()
  fullName: System.Windows.VisualStateGroup.VisualStateGroup()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref> classe."
  syntax:
    content: public VisualStateGroup ();
    parameters: []
  overload: System.Windows.VisualStateGroup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.CurrentState
  id: CurrentState
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
  fullName: System.Windows.VisualStateGroup.CurrentState
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Ottiene il <xref href=&quot;System.Windows.VisualState&quot;> </xref> attualmente applicato al controllo."
  syntax:
    content: public System.Windows.VisualState CurrentState { get; }
    return:
      type: System.Windows.VisualState
      description: "Il <xref href=&quot;System.Windows.VisualState&quot;> </xref> attualmente applicato al controllo."
  overload: System.Windows.VisualStateGroup.CurrentState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.CurrentStateChanged
  id: CurrentStateChanged
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentStateChanged
  nameWithType: VisualStateGroup.CurrentStateChanged
  fullName: System.Windows.VisualStateGroup.CurrentStateChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Si verifica dopo che un controllo passa a uno stato diverso."
  remarks: "Questo evento si verifica dopo che il controllo passa a un nuovo stato e <xref:System.Windows.VisualStateGroup.CurrentStateChanging>evento si verifica.</xref:System.Windows.VisualStateGroup.CurrentStateChanging>"
  syntax:
    content: public event EventHandler<System.Windows.VisualStateChangedEventArgs> CurrentStateChanged;
    return:
      type: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.CurrentStateChanging
  id: CurrentStateChanging
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentStateChanging
  nameWithType: VisualStateGroup.CurrentStateChanging
  fullName: System.Windows.VisualStateGroup.CurrentStateChanging
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Si verifica all&quot;avvio di un controllo in fase di transizione a uno stato diverso."
  remarks: "L&quot;evento si verifica quando il controllo inizia la transizione tra stati. Se un <xref:System.Windows.VisualTransition>viene applicato alla modifica dello stato, questo evento si verifica quando inizia la transizione.</xref:System.Windows.VisualTransition> Se un <xref:System.Windows.VisualTransition>non viene applicato, questo evento si verifica dopo che il controllo passa al nuovo stato, ma prima che il <xref:System.Windows.VisualStateGroup.CurrentStateChanged>evento.</xref:System.Windows.VisualStateGroup.CurrentStateChanged> </xref:System.Windows.VisualTransition>"
  syntax:
    content: public event EventHandler<System.Windows.VisualStateChangedEventArgs> CurrentStateChanging;
    return:
      type: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.Name
  id: Name
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: Name
  nameWithType: VisualStateGroup.Name
  fullName: System.Windows.VisualStateGroup.Name
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Ottiene o imposta il nome del <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref>."
  remarks: "Gli autori di controllo specificano gli stati il controllo può essere aggiungendo un <xref:System.Windows.TemplateVisualStateAttribute>nella relativa definizione di classe.</xref:System.Windows.TemplateVisualStateAttribute> Stati con la stessa <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>appartengono nella stessa <xref:System.Windows.VisualStateGroup>.</xref:System.Windows.VisualStateGroup> </xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> Impostare il nome del <xref:System.Windows.VisualStateGroup>il valore di <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName>proprietà.</xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> </xref:System.Windows.VisualStateGroup>"
  example:
  - "The following example creates two <xref:System.Windows.VisualStateGroup> objects that are named `CommonStates` and `FocusStates`. The control will be in exactly one state from each <xref:System.Windows.VisualStateGroup> at all times. For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[VSMButtonTemplate#5](~/add/codesnippet/xaml/vsmbuttontemplate/skinnedbutton.xaml#5)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Il nome del <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref>."
  overload: System.Windows.VisualStateGroup.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.States
  id: States
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: States
  nameWithType: VisualStateGroup.States
  fullName: System.Windows.VisualStateGroup.States
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Ottiene la raccolta di si escludono a vicenda <xref href=&quot;System.Windows.VisualState&quot;> </xref> oggetti."
  remarks: ''
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]"
  syntax:
    content: public System.Collections.IList States { get; }
    return:
      type: System.Collections.IList
      description: "La raccolta di si escludono a vicenda <xref href=&quot;System.Windows.VisualState&quot;> </xref> oggetti."
  overload: System.Windows.VisualStateGroup.States*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualStateGroup.Transitions
  id: Transitions
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
  fullName: System.Windows.VisualStateGroup.Transitions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Ottiene la raccolta di <xref href=&quot;System.Windows.VisualTransition&quot;> </xref> oggetti."
  remarks: "<xref:System.Windows.VisualTransition>Gli oggetti nelle transizioni vengono applicati quando la transizione di controllo tra gli stati definiti in <xref:System.Windows.VisualStateGroup>.</xref:System.Windows.VisualStateGroup> </xref:System.Windows.VisualTransition>"
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/add/codesnippet/xaml/vsmbuttontemplate/window1.xaml#11)]"
  syntax:
    content: public System.Collections.IList Transitions { get; }
    return:
      type: System.Collections.IList
      description: "La raccolta di <xref href=&quot;System.Windows.VisualTransition&quot;> </xref> oggetti."
  overload: System.Windows.VisualStateGroup.Transitions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.Windows.VisualStateGroup.#ctor
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: VisualStateGroup()
  nameWithType: VisualStateGroup.VisualStateGroup()
  fullName: System.Windows.VisualStateGroup.VisualStateGroup()
- uid: System.Windows.VisualStateGroup.CurrentState
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
  fullName: System.Windows.VisualStateGroup.CurrentState
- uid: System.Windows.VisualState
  parent: System.Windows
  isExternal: false
  name: VisualState
  nameWithType: VisualState
  fullName: System.Windows.VisualState
- uid: System.Windows.VisualStateGroup.CurrentStateChanged
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentStateChanged
  nameWithType: VisualStateGroup.CurrentStateChanged
  fullName: System.Windows.VisualStateGroup.CurrentStateChanged
- uid: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<VisualStateChangedEventArgs>
  nameWithType: EventHandler<VisualStateChangedEventArgs>
  fullName: System.EventHandler<System.Windows.VisualStateChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.VisualStateChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.VisualStateChangedEventArgs
    name: VisualStateChangedEventArgs
    nameWithType: VisualStateChangedEventArgs
    fullName: VisualStateChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.VisualStateGroup.CurrentStateChanging
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentStateChanging
  nameWithType: VisualStateGroup.CurrentStateChanging
  fullName: System.Windows.VisualStateGroup.CurrentStateChanging
- uid: System.Windows.VisualStateGroup.Name
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Name
  nameWithType: VisualStateGroup.Name
  fullName: System.Windows.VisualStateGroup.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.VisualStateGroup.States
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: States
  nameWithType: VisualStateGroup.States
  fullName: System.Windows.VisualStateGroup.States
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.VisualStateGroup.Transitions
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
  fullName: System.Windows.VisualStateGroup.Transitions
- uid: System.Windows.VisualStateGroup.#ctor*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: VisualStateGroup
  nameWithType: VisualStateGroup.VisualStateGroup
- uid: System.Windows.VisualStateGroup.CurrentState*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
- uid: System.Windows.VisualStateGroup.Name*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Name
  nameWithType: VisualStateGroup.Name
- uid: System.Windows.VisualStateGroup.States*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: States
  nameWithType: VisualStateGroup.States
- uid: System.Windows.VisualStateGroup.Transitions*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
