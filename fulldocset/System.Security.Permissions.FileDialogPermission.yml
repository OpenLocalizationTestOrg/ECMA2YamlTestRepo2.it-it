### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.FileDialogPermission
  id: FileDialogPermission
  children:
  - System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)
  - System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.FileDialogPermission.Access
  - System.Security.Permissions.FileDialogPermission.Copy
  - System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.FileDialogPermission.IsUnrestricted
  - System.Security.Permissions.FileDialogPermission.ToXml
  - System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: FileDialogPermission
  nameWithType: FileDialogPermission
  fullName: System.Security.Permissions.FileDialogPermission
  type: Class
  summary: "Controlla la possibilità di accedere ai file o alle cartelle attraverso una **File** la finestra di dialogo. Questa classe non può essere ereditata."
  remarks: "Questa autorizzazione viene in genere utilizzata per fornire accesso limitato a specificato dall&quot;utente quando i file <xref:System.Security.Permissions.FileIOPermission>non è stata concessa.</xref:System.Security.Permissions.FileIOPermission>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class FileDialogPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)
  id: '#ctor(System.Security.Permissions.FileDialogPermissionAccess)'
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: FileDialogPermission(FileDialogPermissionAccess)
  nameWithType: FileDialogPermission.FileDialogPermission(FileDialogPermissionAccess)
  fullName: System.Security.Permissions.FileDialogPermission.FileDialogPermission(FileDialogPermissionAccess)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Permissions.FileDialogPermission&quot;> </xref> classe con l&quot;accesso specificato."
  syntax:
    content: public FileDialogPermission (System.Security.Permissions.FileDialogPermissionAccess access);
    parameters:
    - id: access
      type: System.Security.Permissions.FileDialogPermissionAccess
      description: "Combinazione bit per bit di <xref href=&quot;System.Security.Permissions.FileDialogPermissionAccess&quot;> </xref> valori."
  overload: System.Security.Permissions.FileDialogPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> access </code> parametro non è una combinazione valida di <xref href=&quot;System.Security.Permissions.FileDialogPermissionAccess&quot;> </xref> valori."
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: FileDialogPermission(PermissionState)
  nameWithType: FileDialogPermission.FileDialogPermission(PermissionState)
  fullName: System.Security.Permissions.FileDialogPermission.FileDialogPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Permissions.FileDialogPermission&quot;> </xref> classe con autorizzazione con o senza restrizioni, come specificato."
  remarks: "Consente di creare un con restrizioni (`None`) o `Unrestricted` l&quot;accesso a **File** finestre di dialogo."
  syntax:
    content: public FileDialogPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "One of the <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> values (<xref uid=&quot;langword_csharp_Unrestricted&quot; name=&quot;Unrestricted&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;></xref>)."
  overload: System.Security.Permissions.FileDialogPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> state </code> parametro non è un valore valido di <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.Access
  id: Access
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: Access
  nameWithType: FileDialogPermission.Access
  fullName: System.Security.Permissions.FileDialogPermission.Access
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ottiene o imposta l&quot;accesso autorizzato ai file."
  syntax:
    content: public System.Security.Permissions.FileDialogPermissionAccess Access { get; set; }
    return:
      type: System.Security.Permissions.FileDialogPermissionAccess
      description: "L&quot;accesso autorizzato ai file."
  overload: System.Security.Permissions.FileDialogPermission.Access*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Viene effettuato un tentativo di impostare il <code> access </code> parametro con un valore che non è una combinazione valida del <xref href=&quot;System.Security.Permissions.FileDialogPermissionAccess&quot;> </xref> valori."
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.Copy
  id: Copy
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: FileDialogPermission.Copy()
  fullName: System.Security.Permissions.FileDialogPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea e restituisce una copia identica dell&quot;autorizzazione corrente."
  remarks: "Una copia dell&quot;autorizzazione rappresenta lo stesso accesso alle risorse dell&quot;autorizzazione originale."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Una copia dell&quot;autorizzazione corrente."
  overload: System.Security.Permissions.FileDialogPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: FileDialogPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.FileDialogPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Ricostruisce un&quot;autorizzazione con uno stato specificato da una codifica XML."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "La codifica XML usata per ricostruire l&quot;autorizzazione."
  overload: System.Security.Permissions.FileDialogPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> esd </code> parametro non è un elemento di autorizzazione valido.       - oppure - il numero di versione di <code> esd </code> parametro non è supportato."
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: FileDialogPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.FileDialogPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea e restituisce un&quot;autorizzazione che rappresenta l&quot;intersezione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata."
  remarks: "L&quot;intersezione delle due autorizzazioni è un&quot;autorizzazione che descrive il set di operazioni che hanno in comune. Solo una richiesta che supera entrambe le autorizzazioni originali passerà l&quot;intersezione."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da intersecare con l&quot;autorizzazione corrente. Deve essere lo stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Security.IPermission
      description: "Nuova autorizzazione che rappresenta l&quot;intersezione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata. La nuova autorizzazione è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se l&quot;intersezione è vuota."
  overload: System.Security.Permissions.FileDialogPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> target </code> parametro non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e non è dello stesso tipo dell&quot;autorizzazione corrente."
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: FileDialogPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.FileDialogPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Determina se l&quot;autorizzazione corrente è un subset dell&quot;autorizzazione specificata."
  remarks: "Se l&quot;autorizzazione corrente specifica un set di operazioni che è interamente contenuto l&quot;autorizzazione specificata, l&quot;autorizzazione corrente è un subset dell&quot;autorizzazione specificata. Ad esempio, un&quot;autorizzazione per <xref:System.Security.Permissions.FileDialogPermissionAccess>un subset di un&quot;autorizzazione per l&quot;accesso è <xref:System.Security.Permissions.FileDialogPermissionAccess>accesso.</xref:System.Security.Permissions.FileDialogPermissionAccess> </xref:System.Security.Permissions.FileDialogPermissionAccess>"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da testare per la relazione del subset. Questa autorizzazione deve essere lo stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;autorizzazione corrente è un subset dell&quot;autorizzazione specificata. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.FileDialogPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> target </code> parametro non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e non è dello stesso tipo dell&quot;autorizzazione corrente."
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: FileDialogPermission.IsUnrestricted()
  fullName: System.Security.Permissions.FileDialogPermission.IsUnrestricted()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Restituisce un valore che indica se l&quot;autorizzazione corrente è senza restrizioni."
  remarks: "Un&quot;autorizzazione senza restrizioni rappresenta l&quot;accesso a tutte le risorse protette dall&quot;autorizzazione."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se l&quot;autorizzazione corrente è senza restrizioni. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.FileDialogPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: FileDialogPermission.ToXml()
  fullName: System.Security.Permissions.FileDialogPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea una codifica XML dell&quot;autorizzazione e del relativo stato corrente."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Codifica XML dell&quot;autorizzazione, che include informazioni sullo stato."
  overload: System.Security.Permissions.FileDialogPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.FileDialogPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: FileDialogPermission.Union(IPermission)
  fullName: System.Security.Permissions.FileDialogPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Crea un&quot;autorizzazione che rappresenta l&quot;unione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata."
  remarks: "Il risultato di una chiamata a un&quot;unione è un&quot;autorizzazione che rappresenta tutte le operazioni indicate sia dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata. Qualsiasi richiesta che passa l&quot;autorizzazione passa l&quot;unione."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Autorizzazione da combinare con l&quot;autorizzazione corrente. Deve essere dello stesso tipo dell&quot;autorizzazione corrente."
    return:
      type: System.Security.IPermission
      description: "Nuova autorizzazione che rappresenta l&quot;unione dell&quot;autorizzazione corrente e l&quot;autorizzazione specificata."
  overload: System.Security.Permissions.FileDialogPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> target </code> parametro non è <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e non è dello stesso tipo dell&quot;autorizzazione corrente."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: FileDialogPermission(FileDialogPermissionAccess)
  nameWithType: FileDialogPermission.FileDialogPermission(FileDialogPermissionAccess)
  fullName: System.Security.Permissions.FileDialogPermission.FileDialogPermission(FileDialogPermissionAccess)
- uid: System.Security.Permissions.FileDialogPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: FileDialogPermissionAccess
  nameWithType: FileDialogPermissionAccess
  fullName: System.Security.Permissions.FileDialogPermissionAccess
- uid: System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: FileDialogPermission(PermissionState)
  nameWithType: FileDialogPermission.FileDialogPermission(PermissionState)
  fullName: System.Security.Permissions.FileDialogPermission.FileDialogPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.FileDialogPermission.Access
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: Access
  nameWithType: FileDialogPermission.Access
  fullName: System.Security.Permissions.FileDialogPermission.Access
- uid: System.Security.Permissions.FileDialogPermission.Copy
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: Copy()
  nameWithType: FileDialogPermission.Copy()
  fullName: System.Security.Permissions.FileDialogPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: FileDialogPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.FileDialogPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: FileDialogPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.FileDialogPermission.Intersect(IPermission)
- uid: System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: FileDialogPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.FileDialogPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.FileDialogPermission.IsUnrestricted
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: FileDialogPermission.IsUnrestricted()
  fullName: System.Security.Permissions.FileDialogPermission.IsUnrestricted()
- uid: System.Security.Permissions.FileDialogPermission.ToXml
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: ToXml()
  nameWithType: FileDialogPermission.ToXml()
  fullName: System.Security.Permissions.FileDialogPermission.ToXml()
- uid: System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: FileDialogPermission.Union(IPermission)
  fullName: System.Security.Permissions.FileDialogPermission.Union(IPermission)
- uid: System.Security.Permissions.FileDialogPermission.#ctor*
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: FileDialogPermission
  nameWithType: FileDialogPermission.FileDialogPermission
- uid: System.Security.Permissions.FileDialogPermission.Access*
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: Access
  nameWithType: FileDialogPermission.Access
- uid: System.Security.Permissions.FileDialogPermission.Copy*
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: Copy
  nameWithType: FileDialogPermission.Copy
- uid: System.Security.Permissions.FileDialogPermission.FromXml*
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: FromXml
  nameWithType: FileDialogPermission.FromXml
- uid: System.Security.Permissions.FileDialogPermission.Intersect*
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: Intersect
  nameWithType: FileDialogPermission.Intersect
- uid: System.Security.Permissions.FileDialogPermission.IsSubsetOf*
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: FileDialogPermission.IsSubsetOf
- uid: System.Security.Permissions.FileDialogPermission.IsUnrestricted*
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: FileDialogPermission.IsUnrestricted
- uid: System.Security.Permissions.FileDialogPermission.ToXml*
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: ToXml
  nameWithType: FileDialogPermission.ToXml
- uid: System.Security.Permissions.FileDialogPermission.Union*
  parent: System.Security.Permissions.FileDialogPermission
  isExternal: false
  name: Union
  nameWithType: FileDialogPermission.Union
