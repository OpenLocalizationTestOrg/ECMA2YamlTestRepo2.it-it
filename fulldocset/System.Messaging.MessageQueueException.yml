### YamlMime:ManagedReference
items:
- uid: System.Messaging.MessageQueueException
  id: MessageQueueException
  children:
  - System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Messaging.MessageQueueException.Message
  - System.Messaging.MessageQueueException.MessageQueueErrorCode
  langs:
  - csharp
  name: MessageQueueException
  nameWithType: MessageQueueException
  fullName: System.Messaging.MessageQueueException
  type: Class
  summary: "Eccezione generata quando si verifica un errore interno di Accodamento messaggi Microsoft."
  remarks: "Eccezioni associate alla classe MessageQueueException sono generate da errori interni di Accodamento messaggi che devono essere gestiti tramite il codice.       Ogni eccezione è costituita da un codice di errore e una stringa di testo che descrive l&quot;origine dell&quot;errore. Vedere la <xref:System.Messaging.MessageQueueErrorCode>classe per un elenco di questi codici di errore e le relative descrizioni.</xref:System.Messaging.MessageQueueErrorCode>       Se un <xref:System.Messaging.MessageQueue>apre una coda con il `sharedModeDenyReceive` parametro impostato su true, tutti gli oggetti <xref:System.Messaging.MessageQueue>che tenteranno successivamente di leggere tale coda genereranno un&quot;eccezione MessageQueueException a causa di una violazione di condivisione.</xref:System.Messaging.MessageQueue> </xref:System.Messaging.MessageQueue> La stessa eccezione viene generata se un <xref:System.Messaging.MessageQueue>tenta di accedere alla coda in modalità esclusiva mentre un altro <xref:System.Messaging.MessageQueue>dispone già dell&quot;accesso non esclusivo alla coda.</xref:System.Messaging.MessageQueue> </xref:System.Messaging.MessageQueue>      > **avviso non è supportato.**   > <xref:System.Messaging.MessageQueueTransaction>threading apartment-compatibile con.</xref:System.Messaging.MessageQueueTransaction> Visual Basic imposta lo stato del thread principale di `STA`, pertanto è necessario applicare il <xref:System.MTAThreadAttribute>nel `Main` subroutine.</xref:System.MTAThreadAttribute> In caso contrario, l&quot;invio di un messaggio transazionale mediante un altro thread che genera un&quot;eccezione di MessageQueueException."
  example:
  - >-
    [!code-vb[MessageQueue.ExistsDelete#1](~/add/codesnippet/visualbasic/t-system.messaging.messa_3_1.vb)]
     [!code-cs[MessageQueue.ExistsDelete#1](~/add/codesnippet/csharp/t-system.messaging.messa_3_1.cs)]
     [!code-cpp[MessageQueue.ExistsDelete#1](~/add/codesnippet/cpp/t-system.messaging.messa_3_1.cpp)]
  syntax:
    content: 'public class MessageQueueException : System.Runtime.InteropServices.ExternalException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  implements: []
  inheritedMembers:
  - System.Runtime.InteropServices.ExternalException.ErrorCode
  - System.Runtime.InteropServices.ExternalException.ToString
  platform:
  - net462
- uid: System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: MessageQueueException(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref> classe con dati serializzati."
  syntax:
    content: protected MessageQueueException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Oggetto <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> che contiene i dati serializzati associati il <xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Oggetto <xref:System.Runtime.Serialization.StreamingContext>contenente l&quot;origine e la destinazione del flusso serializzato associato il <xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Messaging.MessageQueueException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Popola un oggetto di informazioni di serializzazione con i dati necessari per serializzare la <xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Oggetto <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> che contiene i dati serializzati associati il <xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Oggetto <xref:System.Runtime.Serialization.StreamingContext>contenente l&quot;origine e la destinazione del flusso serializzato associato il <xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Messaging.MessageQueueException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>info</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.MessageQueueException.Message
  id: Message
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: Message
  nameWithType: MessageQueueException.Message
  fullName: System.Messaging.MessageQueueException.Message
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Ottiene un valore che descrive l&quot;errore di Accodamento messaggi."
  remarks: "Quando si ottiene questa proprietà, il metodo tenta di recuperare la stringa di testo associata con il <xref:System.Messaging.MessageQueueException.MessageQueueErrorCode%2A>proprietà.</xref:System.Messaging.MessageQueueException.MessageQueueErrorCode%2A> Se il metodo è in grado di interpretare il codice di errore generato da Accodamento, la proprietà del messaggio Ottiene il valore `UnknownError`."
  syntax:
    content: public override string Message { get; }
    return:
      type: System.String
      description: "La descrizione dell&quot;errore interno di Accodamento messaggi che ha generato questo <xref href=&quot;System.Messaging.MessageQueueException&quot;> </xref>."
  overload: System.Messaging.MessageQueueException.Message*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessageQueueException.MessageQueueErrorCode
  id: MessageQueueErrorCode
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: MessageQueueErrorCode
  nameWithType: MessageQueueException.MessageQueueErrorCode
  fullName: System.Messaging.MessageQueueException.MessageQueueErrorCode
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Ottiene un valore che indica il codice di errore associato all&quot;eccezione."
  remarks: "Il <xref:System.Messaging.MessageQueueException.Message%2A>proprietà contiene una stringa associata a questo MessageQueueErrorCode che meglio descrive l&quot;origine dell&quot;errore.</xref:System.Messaging.MessageQueueException.Message%2A>"
  syntax:
    content: public System.Messaging.MessageQueueErrorCode MessageQueueErrorCode { get; }
    return:
      type: System.Messaging.MessageQueueErrorCode
      description: "Oggetto <xref href=&quot;System.Messaging.MessageQueueErrorCode&quot;> </xref> che identifica il tipo di errore generato da Accodamento."
  overload: System.Messaging.MessageQueueException.MessageQueueErrorCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.ExternalException
  isExternal: false
  name: System.Runtime.InteropServices.ExternalException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueException(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Messaging.MessageQueueException.Message
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: Message
  nameWithType: MessageQueueException.Message
  fullName: System.Messaging.MessageQueueException.Message
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Messaging.MessageQueueException.MessageQueueErrorCode
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueErrorCode
  nameWithType: MessageQueueException.MessageQueueErrorCode
  fullName: System.Messaging.MessageQueueException.MessageQueueErrorCode
- uid: System.Messaging.MessageQueueErrorCode
  parent: System.Messaging
  isExternal: false
  name: MessageQueueErrorCode
  nameWithType: MessageQueueErrorCode
  fullName: System.Messaging.MessageQueueErrorCode
- uid: System.Messaging.MessageQueueException.#ctor*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueException
  nameWithType: MessageQueueException.MessageQueueException
- uid: System.Messaging.MessageQueueException.GetObjectData*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: GetObjectData
  nameWithType: MessageQueueException.GetObjectData
- uid: System.Messaging.MessageQueueException.Message*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: Message
  nameWithType: MessageQueueException.Message
- uid: System.Messaging.MessageQueueException.MessageQueueErrorCode*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueErrorCode
  nameWithType: MessageQueueException.MessageQueueErrorCode
