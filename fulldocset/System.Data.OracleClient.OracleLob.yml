### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleLob
  id: OracleLob
  children:
  - System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleLob.BeginBatch
  - System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  - System.Data.OracleClient.OracleLob.CanRead
  - System.Data.OracleClient.OracleLob.CanSeek
  - System.Data.OracleClient.OracleLob.CanWrite
  - System.Data.OracleClient.OracleLob.ChunkSize
  - System.Data.OracleClient.OracleLob.Clone
  - System.Data.OracleClient.OracleLob.Connection
  - System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  - System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  - System.Data.OracleClient.OracleLob.Dispose(System.Boolean)
  - System.Data.OracleClient.OracleLob.EndBatch
  - System.Data.OracleClient.OracleLob.Erase
  - System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)
  - System.Data.OracleClient.OracleLob.Flush
  - System.Data.OracleClient.OracleLob.IsBatched
  - System.Data.OracleClient.OracleLob.IsNull
  - System.Data.OracleClient.OracleLob.IsTemporary
  - System.Data.OracleClient.OracleLob.Length
  - System.Data.OracleClient.OracleLob.LobType
  - System.Data.OracleClient.OracleLob.Null
  - System.Data.OracleClient.OracleLob.Position
  - System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Data.OracleClient.OracleLob.SetLength(System.Int64)
  - System.Data.OracleClient.OracleLob.Value
  - System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleLob.WriteByte(System.Byte)
  langs:
  - csharp
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
  type: Class
  summary: "Rappresenta un oggetto di grandi dimensioni binario (<xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;></xref>) tipo di dati archiviati in un server Oracle. Questa classe non può essere ereditata."
  remarks: "Un OracleLob differisce da un <xref:System.Data.OracleClient.OracleBFile>in quanto i dati vengono archiviati nel server anziché in un file fisico nel sistema operativo.</xref:System.Data.OracleClient.OracleBFile> Può anche essere un oggetto di lettura / scrittura, a differenza di un <xref:System.Data.OracleClient.OracleBFile>, che è sempre di sola lettura.</xref:System.Data.OracleClient.OracleBFile>       Un OracleLob può essere uno di questi <xref:System.Data.OracleClient.OracleType>tipi di dati.</xref:System.Data.OracleClient.OracleType>      | Tipo di dati OracleType | Descrizione |   |--------------------------|-----------------|   | `Blob`| Oracle `BLOB` tipo di dati che contiene dati binari con dimensioni massime di 4 gigabyte (GB). Esegue il mapping a un <xref:System.Array>di tipo <xref:System.Byte>. |   | `Clob`| Oracle `CLOB` tipo di dati che contiene i dati di tipo carattere, in base al carattere predefinito impostato nel server, con una dimensione massima di 4 GB.</xref:System.Byte> </xref:System.Array> Esegue il mapping a <xref:System.String>. |   | `NClob`| Oracle `NCLOB` tipo di dati che contiene i dati di tipo carattere, basato su set nel server con una dimensione massima di 4 GB di caratteri nazionale.</xref:System.String> Esegue il mapping a <xref:System.String>. |       Uno sviluppatore di applicazioni .NET può recuperare Oracle `LOB` valori in tipi di dati di base .NET, ad esempio <xref:System.Array>di tipo <xref:System.Byte>e <xref:System.String>, o il tipo di dati specializzato OracleLob.</xref:System.String> </xref:System.Byte> </xref:System.Array> </xref:System.String> La classe OracleLob supporta la lettura dei dati da e la scrittura in Oracle `LOB` nel database Oracle.       Di seguito sono principali caratteristiche che distinguono dai tipi di dati .NET di base di un tipo di dati OracleLob: - dopo aver recuperato il Oracle `LOB` valore dal database Oracle nella classe OracleLob, è possibile modificare il `LOB` dati in una transazione aperta e le modifiche vengono riflesse direttamente al database. Se si recupera il Oracle `LOB` valore in un <xref:System.Array>di tipo <xref:System.Byte>o <xref:System.String>e aggiornare queste matrici, le modifiche non vengono riflesse nel database.</xref:System.String> </xref:System.Byte> </xref:System.Array>      -Quando si utilizza la classe OracleLob per accedere a un blocco di un `LOB` valore, solo tale blocco viene passato dal database di Oracle al client. Quando si utilizza il <xref:System.Data.OracleClient.OracleDataReader.GetChars%2A>per accedere a un blocco di un `LOB` valore, l&quot;intero contenuto del valore viene passato dal database di Oracle al client.</xref:System.Data.OracleClient.OracleDataReader.GetChars%2A>       Per ottenere un oggetto OracleLob, chiamare il <xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A>metodo.</xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A>       È possibile costruire un OracleLob null con questo formato: ```   OracleLob myLob = OracleLob.Null;   ``` questa tecnica viene utilizzata principalmente per verificare se un `LOB` restituito dal server è NULL, come illustrato in questo esempio: ```   If(myLob == OracleLob.Null)   ``` NULL A `LOB` si comporta in modo analogo a zero byte `LOB` in <xref:System.Data.OracleClient.OracleLob.Read%2A>ha esito positivo e restituisce sempre zero byte.</xref:System.Data.OracleClient.OracleLob.Read%2A>       Selezionando un `LOB` colonna che contiene un valore null restituisce <xref:System.Data.OracleClient.OracleLob.Null>.</xref:System.Data.OracleClient.OracleLob.Null>       È necessario avviare una transazione prima di ottenere una password temporanea `LOB`. In caso contrario, il <xref:System.Data.OracleClient.OracleDataReader>potrebbe non riuscire ottenere i dati in un secondo momento.</xref:System.Data.OracleClient.OracleDataReader>       È inoltre possibile aprire una memoria temporanea `LOB` in Oracle chiamando il DBMS_LOB. Sistema CREATETEMPORARY stored procedure e associazione un `LOB` parametro di output. Sul lato client, una password temporanea `LOB` si comporta come una tabella basata su `LOB`. Ad esempio, per aggiornare il file temporaneo `LOB`, deve essere incluso in una transazione.       Nell&quot;esempio c# seguente viene illustrato come aprire una memoria temporanea `LOB`.      ```   OracleConnection connection = new OracleConnection(&quot;server=MyServer; integrated security=yes;&quot;);   connection.Open();   OracleTransaction transaction = connection.BeginTransaction();   OracleCommand command = connection.CreateCommand();   command.Transaction = transaction;   command.CommandText = &quot;declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;&quot;;   command.Parameters.Add(new OracleParameter(&quot;tempblob&quot;, OracleType.Blob)).Direction = ParameterDirection.Output;   command.ExecuteNonQuery();   OracleLob tempLob = (OracleLob)command.Parameters[0].Value;   byte[] tempbuff = new byte[10000];   tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);   tempLob.Write(tempbuff,0,tempbuff.Length);   tempLob.EndBatch();   command.Parameters.Clear();   command.CommandText = &quot;MyTable.MyProc&quot;;   command.CommandType = CommandType.StoredProcedure;     command.Parameters.Add(new OracleParameter(&quot;ImportDoc&quot;, OracleType.Blob)).Value = tempLob;   command.ExecuteNonQuery();   transaction.Commit();   connection.Close   ```      > [!NOTE]> Ereditato <xref:System.IO.Stream.WriteByte%2A>metodo ha esito negativo se usato con dati di tipo carattere e un <xref:System.InvalidOperationException>viene generata un&quot;eccezione.</xref:System.InvalidOperationException> </xref:System.IO.Stream.WriteByte%2A> Utilizzare il <xref:System.Data.OracleClient.OracleLob.Write%2A>metodo invece.</xref:System.Data.OracleClient.OracleLob.Write%2A>   >> Temporaneo `LOB`s vengono chiusi solo quando la connessione viene chiusa, ma con il pool di carico temporaneo `LOB`s non si chiude. Questo può essere risolto eliminando il file temporaneo `LOB`, richiamando `tempLob.Dispose()`."
  syntax:
    content: 'public sealed class OracleLob : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable'
  inheritance:
  - System.IO.Stream
  implements:
  - System.Data.SqlTypes.INullable
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)
  id: Append(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Append(OracleLob)
  nameWithType: OracleLob.Append(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.Append(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Aggiunge i dati da specificato <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> corrente <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref>."
  remarks: "Per scrivere il `LOB`, è necessario aver recuperato il `LOB` mediante la clausola FOR UPDATE nell&quot;istruzione SQL SELECT e si deve avere una transazione locale avviata.       Tutti i dati dall&quot;origine `LOB` viene aggiunto alla fine dell&quot;oggetto corrente `LOB`. La posizione di entrambi `LOB` venga valutato o modificata durante questo processo.       I tipi di dati sottostante devono essere sempre lo stesso. Ad esempio, se proviene da un oggetto <xref:System.Data.OracleClient.OracleType>di destinazione <xref:System.Data.OracleClient.OracleLob>deve essere anche un <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType>      > [!NOTE] > In questa versione, un&quot;operazione di scrittura a sola lettura `LOB` potrebbe avere esito positivo, ma non aggiorna il `LOB` sul server. In questo caso, tuttavia, la copia locale del `LOB` viene aggiornato. Pertanto, operazioni di lettura successive sul <xref:System.Data.OracleClient.OracleLob>oggetto potrebbe restituire i risultati dell&quot;operazione di scrittura.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public void Append (System.Data.OracleClient.OracleLob source);
    parameters:
    - id: source
      type: System.Data.OracleClient.OracleLob
      description: "Il <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> da cui accodare i dati."
  overload: System.Data.OracleClient.OracleLob.Append*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "L&quot;origine <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> è null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;origine <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> è null, o la connessione viene chiusa."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;origine <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> oggetto è stato chiuso o eliminato."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Si è verificato un errore di Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.BeginBatch
  id: BeginBatch
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: BeginBatch()
  nameWithType: OracleLob.BeginBatch()
  fullName: System.Data.OracleClient.OracleLob.BeginBatch()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Impedisce l&quot;attivazione durante l&quot;esecuzione di più operazioni di lettura di trigger lato server."
  remarks: "Apre il `LOB` in <xref:System.Data.OracleClient.OracleLobOpenMode>modalità; pertanto, il `LOB` possono solo essere letti da, non scritto, fino alla chiamata corrispondente a <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>.</xref:System.Data.OracleClient.OracleLob.EndBatch%2A> </xref:System.Data.OracleClient.OracleLobOpenMode> Per eseguire operazioni di scrittura batch di `LOB`, chiamare <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>con <xref:System.Data.OracleClient.OracleLobOpenMode>.</xref:System.Data.OracleClient.OracleLobOpenMode> </xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>       La chiamata di più di una volta all&quot;interno della stessa transazione attualmente BeginBatch genera Oracle &quot;ORA-22293: LOB già aperto nella stessa transazione&quot; errore. Inoltre, se si ottiene il `LOB` utilizzando un altro <xref:System.Data.OracleClient.OracleDataReader>, e il chiamante originale non ha chiamato il <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>(metodo), lo stesso errore viene generato.</xref:System.Data.OracleClient.OracleLob.EndBatch%2A> </xref:System.Data.OracleClient.OracleDataReader> Pertanto, è necessario chiamare il <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>metodo quando si è terminato di utilizzare <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.EndBatch%2A>"
  syntax:
    content: public void BeginBatch ();
    parameters: []
  overload: System.Data.OracleClient.OracleLob.BeginBatch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione viene chiusa."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è stato chiuso o eliminato."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Si è verificato un errore di Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  id: BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: BeginBatch(OracleLobOpenMode)
  nameWithType: OracleLob.BeginBatch(OracleLobOpenMode)
  fullName: System.Data.OracleClient.OracleLob.BeginBatch(OracleLobOpenMode)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Impedisce trigger lato server di attivazione durante l&quot;esecuzione di più di lettura e operazioni di scrittura in modalità di accesso specificato."
  remarks: "Per scrivere il `LOB`, è necessario aver recuperato il `LOB` mediante la clausola FOR UPDATE nell&quot;istruzione SQL SELECT e si deve avere una transazione locale avviata.       La chiamata <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>più di una volta all&quot;interno della stessa transazione attualmente genera Oracle &quot;ORA-22293: LOB già aperto nella stessa transazione&quot; errore.</xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> Inoltre, se si ottiene il `LOB` utilizzando un altro <xref:System.Data.OracleClient.OracleDataReader>, e il chiamante originale non ha chiamato il <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>(metodo), lo stesso errore viene generato.</xref:System.Data.OracleClient.OracleLob.EndBatch%2A> </xref:System.Data.OracleClient.OracleDataReader> Pertanto, è necessario chiamare il <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>metodo quando si è terminato di utilizzare <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.EndBatch%2A>"
  syntax:
    content: public void BeginBatch (System.Data.OracleClient.OracleLobOpenMode mode);
    parameters:
    - id: mode
      type: System.Data.OracleClient.OracleLobOpenMode
      description: "Modalità (uno del <xref href=&quot;System.Data.OracleClient.OracleLobOpenMode&quot;> </xref> valori) in cui il <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> accessibili tra la chiamata di BeginBatch e i corrispondenti <xref:System.Data.OracleClient.OracleLob.EndBatch*>chiamare.</xref:System.Data.OracleClient.OracleLob.EndBatch*>"
  overload: System.Data.OracleClient.OracleLob.BeginBatch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione viene chiusa."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è stato chiuso o eliminato."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Si è verificato un errore di Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CanRead
  id: CanRead
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CanRead
  nameWithType: OracleLob.CanRead
  fullName: System.Data.OracleClient.OracleLob.CanRead
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un valore che indica se il <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> flusso può essere letto."
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> flusso supporta la lettura, in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se un <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> viene chiusa o eliminata."
  overload: System.Data.OracleClient.OracleLob.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CanSeek
  id: CanSeek
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CanSeek
  nameWithType: OracleLob.CanSeek
  fullName: System.Data.OracleClient.OracleLob.CanSeek
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un valore che indica se Avanti e indietro le operazioni di ricerca possono essere eseguite."
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se un <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> viene chiusa o eliminata, in caso contrario <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleLob.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleLob.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CanWrite
  id: CanWrite
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CanWrite
  nameWithType: OracleLob.CanWrite
  fullName: System.Data.OracleClient.OracleLob.CanWrite
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Restituisce sempre true, indipendentemente dal fatto che il <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> supporta o meno la scrittura."
  remarks: "Per scrivere il `LOB`, è necessario aver recuperato il `LOB` mediante la clausola FOR UPDATE nell&quot;istruzione SQL SELECT ed è necessario avere avviato una transazione locale."
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "Restituisce sempre <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, indipendentemente dal fatto che un tipo o aperto <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> supporta o meno, la scrittura <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se un <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> viene chiusa o eliminata."
  overload: System.Data.OracleClient.OracleLob.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.ChunkSize
  id: ChunkSize
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: ChunkSize
  nameWithType: OracleLob.ChunkSize
  fullName: System.Data.OracleClient.OracleLob.ChunkSize
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un valore che indica il numero minimo di byte da recuperare da o inviare al server durante un&quot;operazione di lettura/scrittura."
  remarks: "Il valore restituito dalla proprietà ChunkSize non è un&quot;impostazione del Provider di dati .NET Framework per Oracle. In alternativa, è il valore che viene utilizzata l&quot;interfaccia OCI (Oracle Call Interface) durante la comunicazione con il server. Utilizzare ChunkSize per assicurarsi che i blocchi lato client sono le stesse dimensioni. Lettura o scrittura in blocchi più piccoli non memorizzare dati nella cache e provoca un con ottimizzazione per la minore di round trip al server, perché non ha ricevuto o inviato un pacchetto completo."
  syntax:
    content: public int ChunkSize { get; }
    return:
      type: System.Int32
      description: "Il numero minimo di byte da recuperare o inviare."
  overload: System.Data.OracleClient.OracleLob.ChunkSize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione viene chiusa."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è stato chiuso o eliminato."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Si è verificato un errore di Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Clone
  id: Clone
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Clone()
  nameWithType: OracleLob.Clone()
  fullName: System.Data.OracleClient.OracleLob.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Crea un nuovo <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> oggetto cui fa riferimento lo stesso Oracle <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> dell&quot;originale <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> oggetto."
  remarks: "Le proprietà del nuovo <xref:System.Data.OracleClient.OracleLob>oggetto inizialmente sono associati gli stessi valori dell&quot;oggetto originale.</xref:System.Data.OracleClient.OracleLob> Tuttavia, al termine il Clone, ogni <xref:System.Data.OracleClient.OracleLob>oggetto è indipendente da altro.</xref:System.Data.OracleClient.OracleLob> Ad esempio, la modifica del valore del <xref:System.Data.OracleClient.OracleLob.Position%2A>proprietà originale <xref:System.Data.OracleClient.OracleLob>non modifica il valore di <xref:System.Data.OracleClient.OracleLob.Position%2A>sulla copia.</xref:System.Data.OracleClient.OracleLob.Position%2A> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.Position%2A>"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Un nuovo <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> oggetto cui fa riferimento lo stesso Oracle <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> dell&quot;originale <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> oggetto."
  overload: System.Data.OracleClient.OracleLob.Clone*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione viene chiusa."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è stato chiuso o eliminato."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Connection
  id: Connection
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Connection
  nameWithType: OracleLob.Connection
  fullName: System.Data.OracleClient.OracleLob.Connection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> utilizzato da questa istanza del <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  syntax:
    content: public System.Data.OracleClient.OracleConnection Connection { get; }
    return:
      type: System.Data.OracleClient.OracleConnection
      description: "La connessione a un&quot;origine dati."
  overload: System.Data.OracleClient.OracleLob.Connection*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è stato chiuso o eliminato."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)
  id: CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CopyTo(OracleLob)
  nameWithType: OracleLob.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Consente di copiare da questo <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> a una destinazione <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "I tipi di dati sottostante devono essere sempre lo stesso. Ad esempio, se si sta copiando un oggetto <xref:System.Data.OracleClient.OracleType>di destinazione <xref:System.Data.OracleClient.OracleLob>deve essere anche un <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType>       Se l&quot;offset di destinazione è oltre la fine della destinazione `LOB`, `LOB` a cui vengono copiati i dati estesi. Lo spazio tra la fine di `LOB` e l&quot;offset di destinazione oltre la fine verrà anteposti tanti zeri per `BLOB` tipi di dati e gli spazi per `CLOB` e `NCLOB` tipi di dati.       Per scrivere il `LOB`, è necessario aver recuperato il `LOB` mediante la clausola FOR UPDATE nell&quot;istruzione SQL SELECT e si deve avere una transazione locale avviata.      > [!NOTE] > In questa versione, un&quot;operazione di scrittura a sola lettura `LOB` potrebbe avere esito positivo, ma non aggiorna il `LOB` sul server. In questo caso, tuttavia, la copia locale del `LOB` verrà aggiornato. Pertanto, operazioni di lettura successive sul <xref:System.Data.OracleClient.OracleLob>oggetto potrebbe restituire i risultati dell&quot;operazione di scrittura.</xref:System.Data.OracleClient.OracleLob>   >> Di `CopyTo` metodo cancella il contenuto della destinazione `OracleLob` prima di eseguire l&quot;operazione di copia."
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "La destinazione <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
    return:
      type: System.Int64
      description: "Il numero di byte copiati. Consente di escludere i byte riempiti."
  overload: System.Data.OracleClient.OracleLob.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> specificato nella <code> destination </code> parametro è null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;operazione non è presente all&quot;interno di una transazione, il <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> oggetto è null, o la connessione viene chiusa."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Si è verificato un errore di Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  id: CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleLob.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Consente di copiare da questo <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> a una destinazione <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> con la quantità di dati specificata."
  remarks: "I tipi di dati sottostante devono essere sempre lo stesso. Ad esempio, se si sta copiando un oggetto <xref:System.Data.OracleClient.OracleType>di destinazione <xref:System.Data.OracleClient.OracleLob>deve essere anche un <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType>       Se l&quot;offset di destinazione è oltre la fine della destinazione `LOB`, `LOB` a cui vengono copiati i dati estesi. Lo spazio tra la fine del `LOB` e offset oltre la fine di destinazione verranno aggiunti degli zeri per `BLOB` tipi di dati e gli spazi per `CLOB` e `NCLOB` tipi di dati.       Per scrivere il `LOB`, è necessario aver recuperato il `LOB` mediante la clausola FOR UPDATE nell&quot;istruzione SQL SELECT e si deve avere una transazione locale avviata.      > [!NOTE] > In questa versione, un&quot;operazione di scrittura a sola lettura `LOB` potrebbe avere esito positivo, ma non aggiorna il `LOB` sul server. In questo caso, tuttavia, la copia locale del `LOB` viene aggiornato. Pertanto, operazioni di lettura successive sul <xref:System.Data.OracleClient.OracleLob>oggetto potrebbe restituire i risultati dell&quot;operazione di scrittura.</xref:System.Data.OracleClient.OracleLob>   >> Di `CopyTo` metodo cancella il contenuto della destinazione `OracleLob` prima di eseguire l&quot;operazione di copia."
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "La destinazione<xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref>"
    - id: destinationOffset
      type: System.Int64
      description: "Offset da cui copiare. Per <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipi di dati, deve essere un numero pari di byte."
    return:
      type: System.Int64
      description: "Il numero di byte copiati. Consente di escludere i byte riempiti."
  overload: System.Data.OracleClient.OracleLob.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> specificato nella <code> destination </code> parametro è pieno."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Un valore specificato nel <code> destinationOffset </code> parametro è minore di zero o maggiore di 4 GB.       - oppure - specificato un valore di <code> destinationOffset </code> parametro per un <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> o <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipo di dati non è pari.       è necessario specificare - oppure - <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipi di dati come un numero pari di byte."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;operazione non è presente all&quot;interno di una transazione, il <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> oggetto è null, o la connessione viene chiusa."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Si è verificato un errore di Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  id: CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Consente di copiare da questo <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> a una destinazione <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> con la quantità di dati e l&quot;offset di origine specificata."
  remarks: "I tipi di dati sottostante devono essere sempre lo stesso. Ad esempio, se si sta copiando un oggetto <xref:System.Data.OracleClient.OracleType>di destinazione <xref:System.Data.OracleClient.OracleLob>deve essere anche un <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType>       Se l&quot;offset di destinazione è oltre la fine della destinazione `LOB`, `LOB` a cui vengono copiati i dati estesi. Lo spazio tra la fine del `LOB` e offset oltre la fine di destinazione verranno aggiunti degli zeri per `BLOB` tipi di dati e gli spazi per `CLOB` e `NCLOB` tipi di dati.       Per scrivere il `LOB`, è necessario aver recuperato il `LOB` mediante la clausola FOR UPDATE nell&quot;istruzione SQL SELECT e si deve avere una transazione locale avviata.      > [!NOTE] > In questa versione, un&quot;operazione di scrittura a sola lettura `LOB` potrebbe avere esito positivo, ma non aggiorna il `LOB` sul server. In questo caso, tuttavia, la copia locale del `LOB` viene aggiornato. Pertanto, operazioni di lettura successive sul <xref:System.Data.OracleClient.OracleLob>oggetto potrebbe restituire i risultati dell&quot;operazione di scrittura.</xref:System.Data.OracleClient.OracleLob>   >> Di `CopyTo` metodo cancella il contenuto della destinazione `OracleLob` prima di eseguire l&quot;operazione di copia."
  syntax:
    content: public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);
    parameters:
    - id: sourceOffset
      type: System.Int64
      description: "Offset da cui copiare. Per <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipi di dati, deve essere un numero pari."
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "The destination <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;></xref><xref href=&quot;System.Data.OracleClient&quot;></xref>."
    - id: destinationOffset
      type: System.Int64
      description: "L&quot;offset di destinazione in cui copiare. Per <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipi di dati, deve essere un numero pari."
    - id: amount
      type: System.Int64
      description: "La quantità di dati, in byte da copiare. Per <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipi di dati, deve essere un numero pari."
    return:
      type: System.Int64
      description: "Il numero di byte copiati. Consente di escludere i byte riempiti."
  overload: System.Data.OracleClient.OracleLob.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> specificato nella <code> destination </code> parametro è pieno."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Un valore specificato nel <code> amount </code>, <code> sourceOffset </code>, o <code> destinationOffset </code> parametro è minore di zero o maggiore di 4 GB.       -or-       A value specified in the <code>amount</code>, <code>sourceOffset</code>, or <code>destinationOffset</code> parameter for a <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;></xref> data type is not even."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;operazione non è presente all&quot;interno di una transazione, il <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> oggetto è null, o la connessione viene chiusa."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Si è verificato un errore di Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OracleLob.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleLob.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Da aggiungere."
  overload: System.Data.OracleClient.OracleLob.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.EndBatch
  id: EndBatch
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: EndBatch()
  nameWithType: OracleLob.EndBatch()
  fullName: System.Data.OracleClient.OracleLob.EndBatch()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Consente di riprendere l&quot;attivazione dopo l&quot;esecuzione di operazioni di scrittura più trigger di sul lato server."
  remarks: "Chiamare il <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>metodo prima di iniziare l&quot;esecuzione di operazioni di scrittura in <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>"
  syntax:
    content: public void EndBatch ();
    parameters: []
  overload: System.Data.OracleClient.OracleLob.EndBatch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione viene chiusa."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è stato chiuso o eliminato."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Si è verificato un errore di Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Erase
  id: Erase
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Erase()
  nameWithType: OracleLob.Erase()
  fullName: System.Data.OracleClient.OracleLob.Erase()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Cancella tutti i dati da questo <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "Cancellazione non comporta il troncamento dei dati. Il `LOB` lunghezza rimane invariato per un `BLOB` tipo di dati e i dati cancellati vengono sostituiti da 0x00. `CLOB`e `NCLOB` tipi di dati vengono sostituiti da spazi.       Per scrivere il `LOB`, è necessario aver recuperato il `LOB` mediante la clausola FOR UPDATE nell&quot;istruzione SQL SELECT e si deve avere una transazione locale avviata.      > [!NOTE] > In questa versione, un&quot;operazione di scrittura a sola lettura `LOB` potrebbe avere esito positivo, ma non aggiorna il `LOB` sul server. In questo caso, tuttavia, la copia locale del `LOB` viene aggiornato. Pertanto, operazioni di lettura successive sul <xref:System.Data.OracleClient.OracleLob>oggetto potrebbe restituire i risultati dell&quot;operazione di scrittura.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long Erase ();
    parameters: []
    return:
      type: System.Int64
      description: "Il numero di byte cancellati."
  overload: System.Data.OracleClient.OracleLob.Erase*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;operazione non è presente all&quot;interno di una transazione, il <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> oggetto è null, o la connessione viene chiusa."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è stato chiuso o eliminato."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Si è verificato un errore di Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)
  id: Erase(System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Erase(Int64,Int64)
  nameWithType: OracleLob.Erase(Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.Erase(Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Cancella la quantità specificata di dati da questo oggetto <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "La somma dei valori di `offset` e `amount` parametri possono essere maggiori di quella delle dimensioni di <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> Pertanto, specificando un valore maggiore di quello restituito dal <xref:System.Data.OracleClient.OracleLob.Length%2A>proprietà ha esito positivo; tuttavia <xref:System.Data.OracleClient.OracleLob.Erase%2A>solo fino alla fine di <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.Erase%2A> </xref:System.Data.OracleClient.OracleLob.Length%2A> (In modo analogo, se viene passato un valore negativo `offset`, <xref:System.Data.OracleClient.OracleLob.Erase%2A>esito positivo, ma cancellare solo a partire dall&quot;inizio del <xref:System.Data.OracleClient.OracleLob>.)</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.Erase%2A> Questo comportamento è diverso da quello del <xref:System.Data.OracleClient.OracleLob.Read%2A>e <xref:System.Data.OracleClient.OracleLob.Write%2A>metodi e offre il vantaggio di essere in grado di eliminare tutti i dati dal valore specificato da `offset` senza un round trip aggiuntivo al server per verificare le dimensioni effettive.</xref:System.Data.OracleClient.OracleLob.Write%2A> </xref:System.Data.OracleClient.OracleLob.Read%2A>       <xref:System.Data.OracleClient.OracleLob.Erase%2A>non comporta il troncamento dei dati.</xref:System.Data.OracleClient.OracleLob.Erase%2A> Il `LOB` lunghezza rimane invariato per un `BLOB` tipo di dati e i dati cancellati vengono sostituiti da 0x00. `CLOB`e `NCLOB` tipi di dati vengono sostituiti da spazi.       Per scrivere il `LOB`, è necessario aver recuperato il `LOB` mediante la clausola FOR UPDATE nell&quot;istruzione SQL SELECT e si deve avere una transazione locale avviata.      > [!NOTE] > In questa versione, un&quot;operazione di scrittura a sola lettura `LOB` potrebbe avere esito positivo, ma non aggiorna il `LOB` sul server. In questo caso, tuttavia, la copia locale del `LOB` viene aggiornato. Pertanto, operazioni di lettura successive sul <xref:System.Data.OracleClient.OracleLob>oggetto potrebbe restituire i risultati dell&quot;operazione di scrittura.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long Erase (long offset, long amount);
    parameters:
    - id: offset
      type: System.Int64
      description: "Offset da cui si desidera cancellare. Per <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipi di dati, deve essere un numero pari."
    - id: amount
      type: System.Int64
      description: "La quantità di dati, in byte, da cancellare. Per <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipi di dati, deve essere un numero pari."
    return:
      type: System.Int64
      description: "Il numero di byte cancellati."
  overload: System.Data.OracleClient.OracleLob.Erase*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;operazione non è presente all&quot;interno di una transazione, il <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> oggetto è null, o la connessione viene chiusa."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è stato chiuso o eliminato."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Si è verificato un errore di Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Flush
  id: Flush
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Flush()
  nameWithType: OracleLob.Flush()
  fullName: System.Data.OracleClient.OracleLob.Flush()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Non è attualmente supportato."
  remarks: "In questa versione, questo metodo non è funzionale."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Data.OracleClient.OracleLob.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.IsBatched
  id: IsBatched
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: IsBatched
  nameWithType: OracleLob.IsBatched
  fullName: System.Data.OracleClient.OracleLob.IsBatched
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un valore che indica se è stato chiamato il <xref:System.Data.OracleClient.OracleLob.BeginBatch*>metodo.</xref:System.Data.OracleClient.OracleLob.BeginBatch*>"
  remarks: 'Quando si utilizza un server Oracle 8.0.5, Oracle &quot;ORA-00600: codice di errore interno&quot; viene generata un&quot;eccezione.'
  syntax:
    content: public bool IsBatched { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è stato chiamato il <xref:System.Data.OracleClient.OracleLob.BeginBatch*>(metodo), in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.OracleClient.OracleLob.BeginBatch*>"
  overload: System.Data.OracleClient.OracleLob.IsBatched*
  exceptions:
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Si è verificato un errore di Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.IsNull
  id: IsNull
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: IsNull
  nameWithType: OracleLob.IsNull
  fullName: System.Data.OracleClient.OracleLob.IsNull
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> è un <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;> </xref> flusso."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref> is a <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref> stream, otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleLob.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.IsTemporary
  id: IsTemporary
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: IsTemporary
  nameWithType: OracleLob.IsTemporary
  fullName: System.Data.OracleClient.OracleLob.IsTemporary
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un valore che indica se il <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> temporaneo <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref>."
  remarks: "Nell&quot;esempio riportato di seguito viene illustrato come creare una password temporanea `LOB`.      ```   OracleConnection connection = new OracleConnection(&quot;server=MyServer; integrated security=yes;&quot;);   connection.Open();   OracleTransaction transaction = connection.BeginTransaction();   OracleCommand command = connection.CreateCommand();   command.Transaction = transaction;   command.CommandText = &quot;declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;&quot;;   command.Parameters.Add(new OracleParameter(&quot;tempblob&quot;, OracleType.Blob)).Direction = ParameterDirection.Output;   command.ExecuteNonQuery();   OracleLob tempLob = (OracleLob)command.Parameters[0].Value;   tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);   tempLob.Write(tempbuff,0,tempbuff.Length);   tempLob.EndBatch();   command.Parameters.Clear();   command.CommandText = &quot;MyTable.MyProc&quot;;   command.CommandType = CommandType.StoredProcedure;     command.Parameters.Add(new OracleParameter(&quot;ImportDoc&quot;, OracleType.Blob)).Value = tempLob;   command.ExecuteNonQuery();   transaction.Commit();   connection.Close   ```"
  syntax:
    content: public bool IsTemporary { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> temporaneo <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref>, in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleLob.IsTemporary*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione viene chiusa."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è stato chiuso o eliminato."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Si è verificato un errore di Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Length
  id: Length
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Length
  nameWithType: OracleLob.Length
  fullName: System.Data.OracleClient.OracleLob.Length
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un valore che restituisce la dimensione del <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "Le dimensioni del <xref:System.Data.OracleClient.OracleLob>viene sempre restituito in byte per tutti i tipi di dati.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "Le dimensioni del <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> in byte."
  overload: System.Data.OracleClient.OracleLob.Length*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione viene chiusa."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è stato chiuso o eliminato."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Si è verificato un errore di Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.LobType
  id: LobType
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: LobType
  nameWithType: OracleLob.LobType
  fullName: System.Data.OracleClient.OracleLob.LobType
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene un valore che restituisce il <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> tipo di dati."
  remarks: "Un <xref:System.Data.OracleClient.OracleLob>può essere uno dei seguenti <xref:System.Data.OracleClient.OracleType>tipi di dati.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob>      | Tipo di dati OracleType | Descrizione |   |--------------------------|-----------------|   | `Blob`| Oracle `BLOB` tipo di dati che contiene dati binari con dimensioni massime di 4 GB. Esegue il mapping a un <xref:System.Array>di tipo <xref:System.Byte>. |   | `Clob`| Oracle `CLOB` tipo di dati che contiene i dati di tipo carattere, in base al carattere predefinito impostato nel server, con dimensioni massime di 4 GB.</xref:System.Byte> </xref:System.Array> Esegue il mapping a <xref:System.String>. |   | `NClob`| Oracle `NCLOB` tipo di dati che contiene i dati di tipo carattere, basato su set nel server con una dimensione massima di 4 GB di caratteri nazionale.</xref:System.String> Esegue il mapping a <xref:System.String>. |</xref:System.String>"
  syntax:
    content: public System.Data.OracleClient.OracleType LobType { get; }
    return:
      type: System.Data.OracleClient.OracleType
      description: "Uno del <xref href=&quot;System.Data.OracleClient.OracleType&quot;> </xref> <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> tipi di dati."
  overload: System.Data.OracleClient.OracleLob.LobType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Null
  id: "Null"
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: "Null"
  nameWithType: OracleLob.Null
  fullName: System.Data.OracleClient.OracleLob.Null
  type: Field
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Rappresenta un valore null <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> oggetto."
  remarks: "È possibile costruire un <xref:System.Data.OracleClient.OracleLob>null con questo formato: ```   OracleLob myLob = OracleLOB.Null;   ``` questa tecnica viene utilizzata principalmente per verificare se un `LOB` restituito dal server è NULL, come illustrato in questo esempio: ```   If(myLob == OracleLob.Null)   ``` NULL A `LOB` presenta un comportamento simile a un byte zero `LOB` in <xref:System.Data.OracleClient.OracleLob.Read%2A>ha esito positivo e restituisce sempre zero byte.</xref:System.Data.OracleClient.OracleLob.Read%2A> </xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public static readonly System.Data.OracleClient.OracleLob Null;
    return:
      type: System.Data.OracleClient.OracleLob
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Position
  id: Position
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Position
  nameWithType: OracleLob.Position
  fullName: System.Data.OracleClient.OracleLob.Position
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene la posizione di lettura corrente il <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> flusso."
  remarks: "Il flusso deve supportare la ricerca ottenere o impostare la posizione. Utilizzare il <xref:System.Data.OracleClient.OracleLob.CanSeek%2A>proprietà per determinare se il flusso supporta la ricerca.</xref:System.Data.OracleClient.OracleLob.CanSeek%2A>       La ricerca in qualsiasi posizione oltre la lunghezza del flusso è supportata. La ricerca in una posizione dispari per `CLOB` e `NCLOB` è supportato anche i tipi di dati. Per ulteriori informazioni, vedere la sezione Note della <xref:System.Data.OracleClient.OracleLob.Read%2A>proprietà.</xref:System.Data.OracleClient.OracleLob.Read%2A>       La posizione proprietà non tiene traccia del numero di byte del flusso che sono stati usati, ignorato, o entrambi."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "La posizione corrente all&quot;interno di <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> flusso."
  overload: System.Data.OracleClient.OracleLob.Position*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "La connessione viene chiusa."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è stato chiuso o eliminato."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleLob.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Legge una sequenza di byte dall&quot;oggetto corrente <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> flusso e avanza la posizione all&quot;interno del flusso per il numero di byte letti."
  remarks: "Il metodo Read Legge un numero massimo di `count` flusso di byte dall&quot;oggetto corrente e li archivia in `buffer` a partire da `offset`. La posizione corrente all&quot;interno del flusso viene anticipata per il numero di byte letti. Tuttavia, se si verifica un&quot;eccezione, la posizione corrente all&quot;interno del flusso non subisce modifiche. Lettura restituisce il numero di byte letti. Il valore restituito è zero solo se la posizione si trova alla fine del flusso. Lettura verrà bloccata finché non è possibile leggere almeno un byte di dati, nel caso in cui non sono disponibili dati. Lettura restituisce 0 se si tenta di leggere un `LOB` quando la posizione corrente è alla fine di `LOB`. Anche se non è stata raggiunta la fine del flusso, lettura può restituire un numero di byte rispetto a quello richiesto.       Il Provider di dati .NET Framework per Oracle gestisce tutto `CLOB` e `NCLOB` dati in formato Unicode. Pertanto, quando si accede a `CLOB` e `NCLOB` tipi di dati, è sempre correlato con il numero di byte, dove ogni carattere è 2 byte. Ad esempio, se una stringa di testo che contiene tre caratteri viene salvata come un `NCLOB` su un server Oracle in cui il set di caratteri è 4 byte per carattere e esegue un `Read` operazione, specificare la lunghezza della stringa pari a 6 byte, anche se viene memorizzata come 12 byte sul server.       Nell&quot;esempio c# seguente viene illustrato come leggere <xref:System.Data.OracleClient.OracleLob>oggetti.</xref:System.Data.OracleClient.OracleLob>      ```   public static void ReadLobExample(OracleCommand command)   {      int actual = 0;         //Select some data.      // Table Schema:      //  &quot;CREATE TABLE TableWithLobs (a int, b BLOB, c CLOB, d NCLOB)&quot;;      //  &quot;INSERT INTO TableWithLobs values (1, &quot;AA&quot;, &quot;AAA&quot;, N&quot;AAAA&quot;)&quot;;      command.CommandText = &quot;SELECT * FROM TableWithLobs&quot;;      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain the LOBs (all 3 varieties).         OracleLob BLOB = reader.GetOracleLob(1);         OracleLob CLOB  = reader.GetOracleLob(2);         OracleLob NCLOB = reader.GetOracleLob(3);            //Example - Reading binary data (in chunks).         byte[] buffer = new byte[100];         while((actual = BLOB.Read(buffer, 0, buffer.Length)) >0)            Console.WriteLine(BLOB.LobType + &quot;.Read(&quot; + buffer + &quot;, &quot; + buffer.Length + &quot;) => &quot; + actual);            //Example - Reading CLOB/NCLOB data (in chunks).         //Note: You can read character data as raw Unicode bytes (using OracleLob.Read as in the above example).         //However, because the OracleLob object inherits directly from the.NET stream object,          //all the existing classes that manipluate streams can also be used. For example, the          //.NET StreamReader makes converting the raw bytes into actual characters easier.         StreamReader streamreader = new StreamReader(CLOB, Encoding.Unicode);         char[] cbuffer = new char[100];         while((actual = streamreader.Read(cbuffer, 0, cbuffer.Length)) >0)            Console.WriteLine(CLOB.LobType + &quot;.Read(&quot; + new string(cbuffer, 0, actual) + &quot;, &quot; + cbuffer.Length + &quot;) => &quot; + actual);            //Example - Reading data (all at once).         //You could use StreamReader.ReadToEnd to obtain all the string data,or simply         //call OracleLob.Value to obtain a contiguous allocation of all the data.         Console.WriteLine(NCLOB.LobType + &quot;.Value => &quot; + NCLOB.Value);      }   }   ```È possibile costruire un <xref:System.Data.OracleClient.OracleLob>null con questo formato: ```   OracleLob myLob = OracleLob.Null;   ``` questa tecnica viene utilizzata principalmente per verificare se un `LOB` restituito dal server è NULL, come illustrato nell&quot;esempio seguente.</xref:System.Data.OracleClient.OracleLob>      ```   If(myLob == OracleLob.Null)   ```Un valore NULL `LOB` presenta un comportamento simile a un byte zero `LOB` in lettura ha esito positivo e sempre restituisce zero byte."
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Matrice di byte. Quando questo metodo viene restituito, il buffer contiene la matrice di byte specificata con i valori compresi tra `offset` e (`offset` + `count`) sostituiti dai byte letti dall&quot;origine corrente."
    - id: offset
      type: System.Int32
      description: "Offset dei byte in base zero in `buffer` da cui iniziare l&quot;archiviazione dei dati letti dal flusso corrente. Per <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipi di dati, deve essere un numero pari."
    - id: count
      type: System.Int32
      description: "Il numero massimo di byte da leggere dal flusso corrente. Per <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipi di dati, deve essere un numero pari."
    return:
      type: System.Int32
      description: "Il numero totale di byte letti nel buffer. Questo può essere inferiore al numero di byte richiesti se tale numero di byte non è attualmente disponibili, o zero (0) se è stata raggiunta la fine del flusso."
  overload: System.Data.OracleClient.OracleLob.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <code> buffer </code> è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Un valore di <code> offset </code> o <code> count </code> parametro non è un valore positivo.       oppure la somma dei parametri di offset e conteggio è maggiore della lunghezza del buffer.       - oppure - specificato un valore di <code> amount </code> o <code> offset </code> parametro è minore di zero o maggiore di 4 GB."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;operazione non è presente all&quot;interno di una transazione, il <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> oggetto è null, o la connessione viene chiusa."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è stato chiuso o eliminato."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Si è verificato un errore di Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleLob.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleLob.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Imposta la posizione nella corrente <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> flusso."
  remarks: "Se `offset` è negativo, la nuova posizione deve precedere la posizione specificata da `origin` per il numero di byte specificato da `offset`. Se `offset` è zero, la nuova posizione deve essere una posizione specificata da `origin`. Se `offset` è positivo, la nuova posizione deve seguire la posizione specificata da `origin` per il numero di byte specificato da `offset`.       La ricerca in qualsiasi posizione oltre la lunghezza del flusso è supportata. La ricerca in una posizione dispari per `CLOB` e `NCLOB` è supportato anche i tipi di dati. Per ulteriori informazioni, vedere la sezione Note della <xref:System.Data.OracleClient.OracleLob.Read%2A>proprietà.</xref:System.Data.OracleClient.OracleLob.Read%2A>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Offset di byte di origine. Se `offset` è negativo, la nuova posizione precede la posizione specificata da `origin` per il numero di byte specificato da `offset`. Se `offset` è zero, la nuova posizione è la posizione specificata da `origin`. Se `offset` è positivo, la nuova posizione segue la posizione specificata da `origin` per il numero di byte specificato da `offset`."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Un valore di tipo <xref:System.IO.SeekOrigin>che indica il punto di riferimento usato per ottenere la nuova posizione.</xref:System.IO.SeekOrigin>"
    return:
      type: System.Int64
      description: "Nuova posizione all&quot;interno del flusso corrente."
  overload: System.Data.OracleClient.OracleLob.Seek*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il <code> origin </code> parametro non contiene un valore valido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "La posizione risulta è oltre la lunghezza del valore."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Il <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> oggetto è stato chiuso o eliminato."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Si è verificato un errore di Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: OracleLob.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleLob.SetLength(Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Imposta il numero di <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> flusso su un valore minore della lunghezza corrente."
  remarks: "Tentativo di aumentare la lunghezza del <xref:System.Data.OracleClient.OracleLob>ha esito negativo di flusso e restituisce &quot;messaggio: ORA-22926: specificato trim lunghezza è superiore alla lunghezza del valore LOB corrente&quot; dal server Oracle.</xref:System.Data.OracleClient.OracleLob>       Un flusso deve supportare la scrittura e ricerca per SetLength alla funzione.       Il Provider di dati .NET Framework per Oracle gestisce tutto `CLOB` e `NCLOB` dati in formato Unicode. Pertanto, quando si accede a `CLOB` e `NCLOB` tipi di dati, è sempre correlato con il numero di byte, dove ogni carattere è 2 byte. Ad esempio, se una stringa di testo che contiene tre caratteri viene salvata come un `NCLOB` su un server Oracle in cui il set di caratteri è 4 byte per carattere e esegue un `SetLength` operazione, specificare la lunghezza della stringa pari a 6 byte, anche se viene memorizzata come 12 byte sul server.       Per scrivere il `LOB`, è necessario aver recuperato il `LOB` mediante la clausola FOR UPDATE nell&quot;istruzione SQL SELECT e si deve avere una transazione locale avviata.      > [!NOTE] > Un&quot;operazione di scrittura a sola lettura `LOB` potrebbe avere esito positivo, ma non aggiorna il `LOB` sul server. In questo caso, tuttavia, la copia locale del `LOB` viene aggiornato. Pertanto, operazioni di lettura successive sul <xref:System.Data.OracleClient.OracleLob>oggetto potrebbe restituire i risultati dell&quot;operazione di scrittura.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "La lunghezza desiderata dell&quot;oggetto corrente <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> flusso in byte. Per <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipi di dati, deve essere un numero pari."
  overload: System.Data.OracleClient.OracleLob.SetLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Un valore specificato nel <code> value </code> parametro per un <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> o <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipo di dati non è pari.       - oppure - specificato un valore di <code> value </code> parametro è minore di zero o maggiore di 4 GB."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;operazione non è presente all&quot;interno di una transazione, il <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> oggetto è null, o la connessione viene chiusa."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è stato chiuso o eliminato."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Si è verificato un errore di Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Value
  id: Value
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Value
  nameWithType: OracleLob.Value
  fullName: System.Data.OracleClient.OracleLob.Value
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Ottiene il valore di flusso di common language runtime equivalente del valore sottostante."
  remarks: "Per <xref:System.Data.OracleClient.OracleType>tipi di dati, valore restituisce tutti i dati sottostanti come una matrice di tipo contigua `Byte[]`.</xref:System.Data.OracleClient.OracleType> Per <xref:System.Data.OracleClient.OracleType>e <xref:System.Data.OracleClient.OracleType>tipi di dati, valore restituisce tutti i dati come un `String` tipo di dati.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleType> Per i dati null, valore restituisce <xref:System.DBNull>.</xref:System.DBNull> Confrontando i valori restituiti, è possibile distinguere tra i dati vuoti, null e dati.      > [!NOTE] > Un vantaggio dell&quot;utilizzo `LOB` tipi di dati è la possibilità di recuperare grandi quantità di dati in blocchi client. Tuttavia, quando si usa valore, è possibile ottenere tutti i dati per il `LOB` colonna come blocco contiguo, condizione che aumenta notevolmente il sovraccarico dell&quot;applicazione."
  syntax:
    content: public object Value { get; }
    return:
      type: System.Object
      description: "For <xref href=&quot;System.Data.OracleClient.OracleType&quot;></xref>, an array of type <xref uid=&quot;langword_csharp_Byte[]&quot; name=&quot;Byte[]&quot; href=&quot;&quot;></xref>. For <xref href=&quot;System.Data.OracleClient.OracleType&quot;></xref> and <xref href=&quot;System.Data.OracleClient.OracleType&quot;></xref>, a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Per i dati null, <xref href=&quot;System.DBNull&quot;> </xref>."
  overload: System.Data.OracleClient.OracleLob.Value*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è stato chiuso o eliminato."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Si è verificato un errore di Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleLob.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Scrive una sequenza di byte corrente <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> flusso e fa avanzare la posizione corrente nel flusso del numero di byte scritti."
  remarks: "Se l&quot;operazione di scrittura ha esito positivo, fa avanzare la posizione all&quot;interno del flusso del numero di byte scritti. Se si verifica un&quot;eccezione, la posizione all&quot;interno del flusso rimane invariata.       Scrittura oltre la fine di `LOB` è consentito e aumenta la `LOB` per il numero di byte scritti.       Il Provider di dati .NET Framework per Oracle gestisce tutto `CLOB` e `NCLOB` dati in formato Unicode. Pertanto, quando si accede a `CLOB` e `NCLOB` tipi di dati, è sempre correlato con il numero di byte, dove ogni carattere è 2 byte. Ad esempio, se una stringa di testo che contiene tre caratteri viene salvata come un `NCLOB` su un server Oracle in cui il set di caratteri è 4 byte per carattere e esegue un `Write` operazione, specificare la lunghezza della stringa pari a 6 byte, anche se viene memorizzata come 12 byte sul server.       Per scrivere il `LOB`, è necessario aver recuperato il `LOB` mediante la clausola FOR UPDATE nell&quot;istruzione SQL SELECT e si deve avere una transazione locale avviata.       Nell&quot;esempio c# seguente viene illustrato come scrivere <xref:System.Data.OracleClient.OracleLob>oggetti.</xref:System.Data.OracleClient.OracleLob>      ```   public static void WriteLobExample(OracleCommand command)   {      //Note: Updating LOB data requires a transaction.      command.Transaction = command.Connection.BeginTransaction();      //Select some data.      //    Table Schema:      //        &quot;CREATE TABLE tablewithlobs (a int, b BLOB, c BLOB)&quot;;      //        &quot;INSERT INTO tablewithlobs values (1, &quot;AA&quot;, &quot;AAA&quot;)&quot;;      command.CommandText = &quot;SELECT * FROM TableWithLobs FOR UPDATE&quot;;      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain both LOBs.         OracleLob BLOB1    = reader.GetOracleLob(1);         OracleLob BLOB2    = reader.GetOracleLob(2);         //Perform any desired operations on the LOB, (read, position, and so on).         //...         //Example - Writing binary data (directly to the backend).         //To write, you can use any of the stream classes, or write raw binary data using          //the OracleLob write method. Writing character vs. binary is the same;         //however note that character is always in terms of Unicode byte counts         //(for example: even number of bytes - 2 bytes for every Unicode character).         byte[] buffer = new byte[100];         buffer[0] = 0xCC;         buffer[1] = 0xDD;         BLOB1.Write(buffer, 0, 2);         BLOB1.Position = 0;         Console.WriteLine(BLOB1.LobType + &quot;.Write(&quot; + buffer + &quot;, 0, 2) => &quot; + BLOB1.Value);            //Example - Copying data into another LOB.         long actual = BLOB1.CopyTo(BLOB2);         Console.WriteLine(BLOB1.LobType + &quot;.CopyTo(&quot; + BLOB2.Value + &quot;) => &quot; + actual);            //Commit the transaction now that everything succeeded.         //Note: On error, Transaction.Dispose is called (from the using statement)         //and will automatically roll-back the pending transaction.         command.Transaction.Commit();      }   }   ```      > [!NOTE]> Operazione di scrittura a sola lettura `LOB` potrebbe avere esito positivo, ma non aggiorna il `LOB` sul server. In questo caso, tuttavia, la copia locale del `LOB` viene aggiornato. Pertanto, operazioni di lettura successive sul <xref:System.Data.OracleClient.OracleLob>oggetto potrebbe restituire i risultati dell&quot;operazione di scrittura.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Matrice di byte. Questo metodo copia il numero di byte specificato `count` da `buffer` nel flusso corrente."
    - id: offset
      type: System.Int32
      description: "Offset dei byte in base zero in `buffer` in corrispondenza del quale iniziare la copia dei byte nel flusso corrente. Per <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipi di dati, deve essere un numero pari."
    - id: count
      type: System.Int32
      description: "Il numero di byte da scrivere nel flusso corrente. Per <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipi di dati, deve essere un numero pari."
  overload: System.Data.OracleClient.OracleLob.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <code> buffer </code> parametro è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Un valore di <code> offset </code> o <code> count </code> parametro non è un valore positivo.       La somma di - oppure - il <code> offset </code> e <code> count </code> parametri è maggiore di <code> buffer </code> lunghezza.       - oppure - specificato un valore di <code> count </code> o <code> offset </code> parametro è minore di zero o maggiore di 4 GB.       è necessario specificare - oppure - <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipi di dati come un numero pari di byte."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;operazione non è presente all&quot;interno di una transazione, il <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> oggetto è null, o la connessione viene chiusa."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "L&quot;oggetto è stato chiuso o eliminato."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Si è verificato un errore di Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: OracleLob.WriteByte(Byte)
  fullName: System.Data.OracleClient.OracleLob.WriteByte(Byte)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Scrive un byte nella posizione corrente di <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> flusso e fa avanzare la posizione all&quot;interno del flusso di un byte."
  remarks: "Se l&quot;operazione di scrittura ha esito positivo, fa avanzare la posizione all&quot;interno del flusso di un byte. Se si verifica un&quot;eccezione, la posizione all&quot;interno del flusso rimane invariata.       Scrittura oltre la fine del `LOB` è consentito e aumenta la `LOB` di un byte.       Per scrivere il `LOB`, è necessario aver recuperato il `LOB` mediante la clausola FOR UPDATE nell&quot;istruzione SQL SELECT e si deve avere una transazione locale avviata.      > [!NOTE] > Un&quot;operazione di scrittura a sola lettura `LOB` potrebbe avere esito positivo, ma non aggiorna il `LOB` sul server. In questo caso, tuttavia, la copia locale del `LOB` viene aggiornato. Pertanto, operazioni di lettura successive sul <xref:System.Data.OracleClient.OracleLob>oggetto potrebbe restituire i risultati dell&quot;operazione di scrittura.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "Byte da scrivere nel flusso."
  overload: System.Data.OracleClient.OracleLob.WriteByte*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Data.OracleClient.OracleException
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleException
  nameWithType: OracleException
  fullName: System.Data.OracleClient.OracleException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Append(OracleLob)
  nameWithType: OracleLob.Append(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.Append(OracleLob)
- uid: System.Data.OracleClient.OracleLob
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
- uid: System.Data.OracleClient.OracleLob.BeginBatch
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: BeginBatch()
  nameWithType: OracleLob.BeginBatch()
  fullName: System.Data.OracleClient.OracleLob.BeginBatch()
- uid: System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: BeginBatch(OracleLobOpenMode)
  nameWithType: OracleLob.BeginBatch(OracleLobOpenMode)
  fullName: System.Data.OracleClient.OracleLob.BeginBatch(OracleLobOpenMode)
- uid: System.Data.OracleClient.OracleLobOpenMode
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLobOpenMode
  nameWithType: OracleLobOpenMode
  fullName: System.Data.OracleClient.OracleLobOpenMode
- uid: System.Data.OracleClient.OracleLob.CanRead
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanRead
  nameWithType: OracleLob.CanRead
  fullName: System.Data.OracleClient.OracleLob.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleLob.CanSeek
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanSeek
  nameWithType: OracleLob.CanSeek
  fullName: System.Data.OracleClient.OracleLob.CanSeek
- uid: System.Data.OracleClient.OracleLob.CanWrite
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanWrite
  nameWithType: OracleLob.CanWrite
  fullName: System.Data.OracleClient.OracleLob.CanWrite
- uid: System.Data.OracleClient.OracleLob.ChunkSize
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: ChunkSize
  nameWithType: OracleLob.ChunkSize
  fullName: System.Data.OracleClient.OracleLob.ChunkSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleLob.Clone
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Clone()
  nameWithType: OracleLob.Clone()
  fullName: System.Data.OracleClient.OracleLob.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleLob.Connection
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Connection
  nameWithType: OracleLob.Connection
  fullName: System.Data.OracleClient.OracleLob.Connection
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo(OracleLob)
  nameWithType: OracleLob.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleLob.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob,Int64)
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
- uid: System.Data.OracleClient.OracleLob.Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OracleLob.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleLob.Dispose(Boolean)
- uid: System.Data.OracleClient.OracleLob.EndBatch
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: EndBatch()
  nameWithType: OracleLob.EndBatch()
  fullName: System.Data.OracleClient.OracleLob.EndBatch()
- uid: System.Data.OracleClient.OracleLob.Erase
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Erase()
  nameWithType: OracleLob.Erase()
  fullName: System.Data.OracleClient.OracleLob.Erase()
- uid: System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Erase(Int64,Int64)
  nameWithType: OracleLob.Erase(Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.Erase(Int64,Int64)
- uid: System.Data.OracleClient.OracleLob.Flush
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Flush()
  nameWithType: OracleLob.Flush()
  fullName: System.Data.OracleClient.OracleLob.Flush()
- uid: System.Data.OracleClient.OracleLob.IsBatched
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsBatched
  nameWithType: OracleLob.IsBatched
  fullName: System.Data.OracleClient.OracleLob.IsBatched
- uid: System.Data.OracleClient.OracleLob.IsNull
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsNull
  nameWithType: OracleLob.IsNull
  fullName: System.Data.OracleClient.OracleLob.IsNull
- uid: System.Data.OracleClient.OracleLob.IsTemporary
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsTemporary
  nameWithType: OracleLob.IsTemporary
  fullName: System.Data.OracleClient.OracleLob.IsTemporary
- uid: System.Data.OracleClient.OracleLob.Length
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Length
  nameWithType: OracleLob.Length
  fullName: System.Data.OracleClient.OracleLob.Length
- uid: System.Data.OracleClient.OracleLob.LobType
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: LobType
  nameWithType: OracleLob.LobType
  fullName: System.Data.OracleClient.OracleLob.LobType
- uid: System.Data.OracleClient.OracleType
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleType
  nameWithType: OracleType
  fullName: System.Data.OracleClient.OracleType
- uid: System.Data.OracleClient.OracleLob.Null
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: "Null"
  nameWithType: OracleLob.Null
  fullName: System.Data.OracleClient.OracleLob.Null
- uid: System.Data.OracleClient.OracleLob.Position
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Position
  nameWithType: OracleLob.Position
  fullName: System.Data.OracleClient.OracleLob.Position
- uid: System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleLob.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Read(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleLob.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleLob.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Data.OracleClient.OracleLob.SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: SetLength(Int64)
  nameWithType: OracleLob.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleLob.SetLength(Int64)
- uid: System.Data.OracleClient.OracleLob.Value
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Value
  nameWithType: OracleLob.Value
  fullName: System.Data.OracleClient.OracleLob.Value
- uid: System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleLob.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Write(Byte[],Int32,Int32)
- uid: System.Data.OracleClient.OracleLob.WriteByte(System.Byte)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: OracleLob.WriteByte(Byte)
  fullName: System.Data.OracleClient.OracleLob.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.OracleClient.OracleLob.Append*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Append
  nameWithType: OracleLob.Append
- uid: System.Data.OracleClient.OracleLob.BeginBatch*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: BeginBatch
  nameWithType: OracleLob.BeginBatch
- uid: System.Data.OracleClient.OracleLob.CanRead*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanRead
  nameWithType: OracleLob.CanRead
- uid: System.Data.OracleClient.OracleLob.CanSeek*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanSeek
  nameWithType: OracleLob.CanSeek
- uid: System.Data.OracleClient.OracleLob.CanWrite*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanWrite
  nameWithType: OracleLob.CanWrite
- uid: System.Data.OracleClient.OracleLob.ChunkSize*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: ChunkSize
  nameWithType: OracleLob.ChunkSize
- uid: System.Data.OracleClient.OracleLob.Clone*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Clone
  nameWithType: OracleLob.Clone
- uid: System.Data.OracleClient.OracleLob.Connection*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Connection
  nameWithType: OracleLob.Connection
- uid: System.Data.OracleClient.OracleLob.CopyTo*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo
  nameWithType: OracleLob.CopyTo
- uid: System.Data.OracleClient.OracleLob.Dispose*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Dispose
  nameWithType: OracleLob.Dispose
- uid: System.Data.OracleClient.OracleLob.EndBatch*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: EndBatch
  nameWithType: OracleLob.EndBatch
- uid: System.Data.OracleClient.OracleLob.Erase*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Erase
  nameWithType: OracleLob.Erase
- uid: System.Data.OracleClient.OracleLob.Flush*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Flush
  nameWithType: OracleLob.Flush
- uid: System.Data.OracleClient.OracleLob.IsBatched*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsBatched
  nameWithType: OracleLob.IsBatched
- uid: System.Data.OracleClient.OracleLob.IsNull*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsNull
  nameWithType: OracleLob.IsNull
- uid: System.Data.OracleClient.OracleLob.IsTemporary*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsTemporary
  nameWithType: OracleLob.IsTemporary
- uid: System.Data.OracleClient.OracleLob.Length*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Length
  nameWithType: OracleLob.Length
- uid: System.Data.OracleClient.OracleLob.LobType*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: LobType
  nameWithType: OracleLob.LobType
- uid: System.Data.OracleClient.OracleLob.Position*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Position
  nameWithType: OracleLob.Position
- uid: System.Data.OracleClient.OracleLob.Read*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Read
  nameWithType: OracleLob.Read
- uid: System.Data.OracleClient.OracleLob.Seek*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Seek
  nameWithType: OracleLob.Seek
- uid: System.Data.OracleClient.OracleLob.SetLength*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: SetLength
  nameWithType: OracleLob.SetLength
- uid: System.Data.OracleClient.OracleLob.Value*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Value
  nameWithType: OracleLob.Value
- uid: System.Data.OracleClient.OracleLob.Write*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Write
  nameWithType: OracleLob.Write
- uid: System.Data.OracleClient.OracleLob.WriteByte*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: WriteByte
  nameWithType: OracleLob.WriteByte
