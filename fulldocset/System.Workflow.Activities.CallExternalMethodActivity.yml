### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.CallExternalMethodActivity
  id: CallExternalMethodActivity
  children:
  - System.Workflow.Activities.CallExternalMethodActivity.#ctor
  - System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)
  - System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken
  - System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty
  - System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties
  - System.Workflow.Activities.CallExternalMethodActivity.InterfaceType
  - System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty
  - System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking
  - System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent
  - System.Workflow.Activities.CallExternalMethodActivity.MethodName
  - System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty
  - System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)
  - System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)
  - System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings
  - System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty
  - System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  - System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  langs:
  - csharp
  name: CallExternalMethodActivity
  nameWithType: CallExternalMethodActivity
  fullName: System.Workflow.Activities.CallExternalMethodActivity
  type: Class
  summary: "Definisce un&quot;attività di comunicazione del flusso di lavoro che viene utilizzata per chiamare un metodo in un servizio locale. Questa attività viene utilizzata per inviare dati dal flusso di lavoro all&quot;host tramite il servizio locale."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Un servizio locale è una classe che implementa un&quot;interfaccia di servizio locale (un&quot;interfaccia contrassegnata con <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>) e viene aggiunto a <xref:System.Workflow.Activities.ExternalDataExchangeService>.</xref:System.Workflow.Activities.ExternalDataExchangeService> </xref:System.Workflow.Activities.ExternalDataExchangeAttribute>      > [!NOTE] > Quando il metodo esterno viene chiamato tutti i parametri del metodo vengono duplicati. Se i tipi di parametro implementano <xref:System.ICloneable>il `Clone` metodo viene chiamato o essere serializzati e deserializzati con un <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> </xref:System.ICloneable>"
  example:
  - "The following code example shows how to use the CallExternalMethodActivity in a custom activity to call an external method. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \n  \n [!code-cs[wf_samples#213](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#213)]\n [!code-vb[wf_samples#213](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#213)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("MethodInvoking")]

      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.CallExternalMethodActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.CallExternalMethodActivityValidator))]

      public class CallExternalMethodActivity : System.Workflow.ComponentModel.Activity, System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  implements:
  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  inheritedMembers:
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: CallExternalMethodActivity()
  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity()
  fullName: System.Workflow.Activities.CallExternalMethodActivity.CallExternalMethodActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Workflow.Activities.CallExternalMethodActivity&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code example shows how initialize a new instance of the <xref:System.Workflow.Activities.CallExternalMethodActivity>. The code also initializes new instances of the <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.EventDrivenActivity>, <xref:System.Workflow.Activities.HandleExternalEventActivity>, <xref:System.Workflow.Activities.DelayActivity> and <xref:System.Workflow.Activities.CodeActivity> classes. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \n  \n [!code-cs[wf_samples#214](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#214)]\n [!code-vb[wf_samples#214](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#214)]"
  syntax:
    content: public CallExternalMethodActivity ();
    parameters: []
  overload: System.Workflow.Activities.CallExternalMethodActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: CallExternalMethodActivity(String)
  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity(String)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.CallExternalMethodActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Workflow.Activities.CallExternalMethodActivity&quot;> </xref> classe utilizzando il nome dell&quot;attività."
  syntax:
    content: public CallExternalMethodActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "Il nome dell&quot;attività, utilizzato per inizializzare la proprietà nome dell&quot;attività definita dall&quot;utente."
  overload: System.Workflow.Activities.CallExternalMethodActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken
  id: CorrelationToken
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: CorrelationToken
  nameWithType: CallExternalMethodActivity.CorrelationToken
  fullName: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Ottiene o imposta il <xref href=&quot;System.Workflow.Runtime.CorrelationToken&quot;> </xref> per il metodo esterno."
  remarks: "Questa proprietà definisce quali specifiche <xref:System.Workflow.Activities.CallExternalMethodActivity>attività proviene da una chiamata al metodo esterno specificato da.</xref:System.Workflow.Activities.CallExternalMethodActivity> Questo valore può quindi essere utilizzato nel payload di un evento del servizio di comunicazione locale per indirizzare tale evento per il corretto <xref:System.Workflow.Activities.HandleExternalEventActivity>attività.</xref:System.Workflow.Activities.HandleExternalEventActivity>       [!INCLUDE[crexample](~/add/includes/ajax-current-ext-md.md)]correlazione, vedere il [correlato di esempio di servizio locale](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd)."
  example:
  - "The following sample shows how to access the `CorrelationToken` property of a `CallExternalMethodActivity` object. This sample is from the Correlated Local Service SDK sample, from the CorrelatedLocalServiceWorkflow.designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  \n  \n [!code-cs[wf_samples#200](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#200)]\n [!code-vb[wf_samples#200](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#200)]"
  syntax:
    content: public virtual System.Workflow.Runtime.CorrelationToken CorrelationToken { get; set; }
    return:
      type: System.Workflow.Runtime.CorrelationToken
      description: "Il token di correlazione per il metodo esterno."
  overload: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty
  id: CorrelationTokenProperty
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: CorrelationTokenProperty
  nameWithType: CallExternalMethodActivity.CorrelationTokenProperty
  fullName: System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Rappresenta il <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> che fa riferimento il <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken*>proprietà.</xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken*>"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CorrelationTokenProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: CallExternalMethodActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Tenta di eseguire il <xref href=&quot;System.Workflow.Activities.CallExternalMethodActivity&quot;> </xref> con l&quot;oggetto specificato <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>."
  syntax:
    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "Il <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> che contiene l&quot;ambiente di esecuzione in cui eseguire il <xref href=&quot;System.Workflow.Activities.CallExternalMethodActivity&quot;> </xref>."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "Uno del <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;> </xref> valori."
  overload: System.Workflow.Activities.CallExternalMethodActivity.Execute*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Questo &lt;xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A?displayProperty=fullName&gt; è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>executionContext</code>è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "L&quot;oggetto servizio per il <code> executionContext </code> è un riferimento null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties
  id: InitializeProperties
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: InitializeProperties()
  nameWithType: CallExternalMethodActivity.InitializeProperties()
  fullName: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Esegue l&quot;inizializzazione sulle proprietà di dipendenza."
  remarks: "Questo metodo inizializza la <xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A>proprietà, viene verificata la <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A>e <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A>siano impostate e verifica che l&quot;evento a cui fa riferimento nel <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A>proprietà è disponibile nell&quot;interfaccia di riferimento nel <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A>proprietà.</xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> </xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> </xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A> </xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A> </xref:System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken%2A>"
  syntax:
    content: protected override void InitializeProperties ();
    parameters: []
  overload: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType
  id: InterfaceType
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: InterfaceType
  nameWithType: CallExternalMethodActivity.InterfaceType
  fullName: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Ottiene o imposta un metodo esterno della dichiarazione di interfaccia con il <xref href=&quot;System.Workflow.Activities.ExternalDataExchangeAttribute&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example shows how to set the InterfaceType property. The interface type must be attributed with the <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \n  \n [!code-cs[wf_samples#217](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#217)]\n [!code-vb[wf_samples#217](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#217)]"
  syntax:
    content: public virtual Type InterfaceType { get; set; }
    return:
      type: System.Type
      description: "Il metodo esterno di dichiarazione di interfaccia con il <xref href=&quot;System.Workflow.Activities.ExternalDataExchangeAttribute&quot;> </xref>."
  overload: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty
  id: InterfaceTypeProperty
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: InterfaceTypeProperty
  nameWithType: CallExternalMethodActivity.InterfaceTypeProperty
  fullName: System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Rappresenta il <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> che fa riferimento il <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType*>proprietà.</xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType*>"
  remarks: "La <xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A>proprietà corrisponde al nome dell&quot;interfaccia che è stato contrassegnato con <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</xref:System.Workflow.Activities.ExternalDataExchangeAttribute> </xref:System.Workflow.Activities.CallExternalMethodActivity.InterfaceType%2A>       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InterfaceTypeProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking
  id: MethodInvoking
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: MethodInvoking
  nameWithType: CallExternalMethodActivity.MethodInvoking
  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking
  type: Event
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Si verifica prima di richiamare il metodo."
  remarks: ''
  example:
  - "The following code example shows how to use the MethodInvoking event to set the method to call before invoking the external method. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \n  \n [!code-cs[wf_samples#217](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#217)]\n [!code-vb[wf_samples#217](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#217)]"
  syntax:
    content: public event EventHandler MethodInvoking;
    return:
      type: System.EventHandler
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent
  id: MethodInvokingEvent
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: MethodInvokingEvent
  nameWithType: CallExternalMethodActivity.MethodInvokingEvent
  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Rappresenta il <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> che fa riferimento il <xref href=&quot;System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking&quot;> </xref> evento."
  remarks: "Il <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking>evento definisce un delegato di evento che viene eseguito prima che l&quot;attività richiama il metodo esterno nel servizio locale.</xref:System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking>       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty MethodInvokingEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodName
  id: MethodName
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: MethodName
  nameWithType: CallExternalMethodActivity.MethodName
  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Ottiene o imposta il nome del metodo da chiamare nel servizio locale si registrato con il <xref href=&quot;System.Workflow.Activities.ExternalDataExchangeService&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example shows how to use the MethodName property to set the method name of the external method. This code example is part of the Listen SDK sample from the PurchaseOrderWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Listen Sample](http://msdn.microsoft.com/en-us/1cec0e82-7544-429f-b717-0fc25eb42b7f).  \n  \n [!code-cs[wf_samples#217](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#217)]\n [!code-vb[wf_samples#217](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#217)]"
  syntax:
    content: public virtual string MethodName { get; set; }
    return:
      type: System.String
      description: "Il nome del metodo di <xref href=&quot;System.Workflow.Activities.ExternalDataExchangeService&quot;> </xref> interfaccia."
  overload: System.Workflow.Activities.CallExternalMethodActivity.MethodName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty
  id: MethodNameProperty
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: MethodNameProperty
  nameWithType: CallExternalMethodActivity.MethodNameProperty
  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Rappresenta il <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> che fa riferimento il <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName*>proprietà.</xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName*>"
  remarks: "La <xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A>proprietà corrisponde al nome del metodo contenuto in un&quot;interfaccia contrassegnata con <xref:System.Workflow.Activities.ExternalDataExchangeAttribute>.</xref:System.Workflow.Activities.ExternalDataExchangeAttribute> </xref:System.Workflow.Activities.CallExternalMethodActivity.MethodName%2A>       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty MethodNameProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)
  id: OnMethodInvoked(System.EventArgs)
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: OnMethodInvoked(EventArgs)
  nameWithType: CallExternalMethodActivity.OnMethodInvoked(EventArgs)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(EventArgs)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Fornisce un hook per le classi derivate per estrarre e restituire valori da <xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*>.</xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*> Questo metodo viene chiamato subito dopo l&quot;esecuzione del metodo esterno."
  remarks: ''
  example:
  - "The following example shows an implementation of the `OnMethodInvoked` method.  \n  \n [!code-cs[wf_samples#1](~/add/codesnippet/csharp/wf_snippets/snippets.cs#1)]\n [!code-vb[wf_samples#1](~/add/codesnippet/visualbasic/wf_snippets/snippets.vb#1)]"
  syntax:
    content: protected virtual void OnMethodInvoked (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>che contiene i dati per il <xref href=&quot;System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking&quot;> </xref> evento.</xref:System.EventArgs>"
  overload: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)
  id: OnMethodInvoking(System.EventArgs)
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: OnMethodInvoking(EventArgs)
  nameWithType: CallExternalMethodActivity.OnMethodInvoking(EventArgs)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(EventArgs)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Fornisce un hook per le classi derivate impostare <xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*>.</xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*> Questo metodo viene chiamato appena prima di eseguita il metodo esterno."
  remarks: ''
  example:
  - "The following example demonstrates an implementation of the `OnMethodInvoking` method. This example is from the Correlated Local Service SDK sample, from the CreateTask.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Correlated Local Service Sample](http://msdn.microsoft.com/en-us/5a3d0733-bbea-4dbf-88ee-a8316db55fbd).  \n  \n [!code-cs[wf_samples#207](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#207)]\n [!code-vb[wf_samples#207](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#207)]"
  syntax:
    content: protected virtual void OnMethodInvoking (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Un <xref:System.EventArgs>che contiene i dati per il <xref href=&quot;System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking&quot;> </xref> evento.</xref:System.EventArgs>"
  overload: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings
  id: ParameterBindings
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: ParameterBindings
  nameWithType: CallExternalMethodActivity.ParameterBindings
  fullName: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Ottiene la raccolta di parametri associabili come disponibile nell&quot;elenco di parametri formali del metodo esterno."
  remarks: ''
  example:
  - "The following example shows how to add a parameter binding to the parameter bindings collection. This example is from the Host Communication SDK sample, from the VotingServiceWorkflow.designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Host Communication Sample](http://msdn.microsoft.com/en-us/ce4b0b8c-bfa3-4c24-b85a-5835a440ea8f).  \n  \n [!code-cs[WF_Samples#301](~/add/codesnippet/csharp/wf_snippets/snippets38.cs#301)]"
  syntax:
    content: public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }
    return:
      type: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
      description: "Il <xref href=&quot;System.Workflow.ComponentModel.WorkflowParameterBindingCollection&quot;> </xref> di parametri associabili."
  overload: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty
  id: ParameterBindingsProperty
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: ParameterBindingsProperty
  nameWithType: CallExternalMethodActivity.ParameterBindingsProperty
  fullName: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Rappresenta il <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> che fa riferimento il <xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*>proprietà.</xref:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*>"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ParameterBindingsProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  isEii: true
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Restituisce il tipo di accesso per la proprietà specificata."
  remarks: "Utilizzato in fase di compilazione per convalidare le proprietà sono associate correttamente uno a altro. Senza questa interfaccia queste informazioni vengono derivate direttamente dai getter/setter di proprietà."
  syntax:
    content: System.Workflow.ComponentModel.Compiler.AccessTypes IDynamicPropertyTypeProvider.GetAccessType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Oggetto che implementa <xref:System.IServiceProvider>per fornire accesso ai servizi in fase di progettazione se sono necessarie.</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "Il nome della proprietà."
    return:
      type: System.Workflow.ComponentModel.Compiler.AccessTypes
      description: "Un <xref href=&quot;System.Workflow.ComponentModel.Compiler.AccessTypes&quot;> </xref> valore di enumerazione che indica il livello di accesso della proprietà."
  overload: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  id: System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  isEii: true
  parent: System.Workflow.Activities.CallExternalMethodActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Restituisce il <xref:System.Type>della proprietà specificata.</xref:System.Type>"
  remarks: "Utilizzato in fase di compilazione per convalidare le proprietà sono associate correttamente fra loro."
  syntax:
    content: Type IDynamicPropertyTypeProvider.GetPropertyType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Oggetto che implementa <xref:System.IServiceProvider>per fornire accesso ai servizi in fase di progettazione se sono necessarie.</xref:System.IServiceProvider>"
    - id: propertyName
      type: System.String
      description: "Il nome della proprietà."
    return:
      type: System.Type
      description: "Il <xref:System.Type>per la proprietà il cui nome è passato come il <code> propertyName  </code>parametro.</xref:System.Type>"
  overload: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: System.Workflow.ComponentModel.Activity
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: CallExternalMethodActivity()
  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity()
  fullName: System.Workflow.Activities.CallExternalMethodActivity.CallExternalMethodActivity()
- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: CallExternalMethodActivity(String)
  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity(String)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.CallExternalMethodActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: CorrelationToken
  nameWithType: CallExternalMethodActivity.CorrelationToken
  fullName: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken
- uid: System.Workflow.Runtime.CorrelationToken
  parent: System.Workflow.Runtime
  isExternal: false
  name: CorrelationToken
  nameWithType: CorrelationToken
  fullName: System.Workflow.Runtime.CorrelationToken
- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: CorrelationTokenProperty
  nameWithType: CallExternalMethodActivity.CorrelationTokenProperty
  fullName: System.Workflow.Activities.CallExternalMethodActivity.CorrelationTokenProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.CallExternalMethodActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: CallExternalMethodActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: InitializeProperties()
  nameWithType: CallExternalMethodActivity.InitializeProperties()
  fullName: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties()
- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: InterfaceType
  nameWithType: CallExternalMethodActivity.InterfaceType
  fullName: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: InterfaceTypeProperty
  nameWithType: CallExternalMethodActivity.InterfaceTypeProperty
  fullName: System.Workflow.Activities.CallExternalMethodActivity.InterfaceTypeProperty
- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: MethodInvoking
  nameWithType: CallExternalMethodActivity.MethodInvoking
  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodInvoking
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: MethodInvokingEvent
  nameWithType: CallExternalMethodActivity.MethodInvokingEvent
  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodInvokingEvent
- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodName
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: MethodName
  nameWithType: CallExternalMethodActivity.MethodName
  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodName
- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: MethodNameProperty
  nameWithType: CallExternalMethodActivity.MethodNameProperty
  fullName: System.Workflow.Activities.CallExternalMethodActivity.MethodNameProperty
- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(System.EventArgs)
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: OnMethodInvoked(EventArgs)
  nameWithType: CallExternalMethodActivity.OnMethodInvoked(EventArgs)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(System.EventArgs)
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: OnMethodInvoking(EventArgs)
  nameWithType: CallExternalMethodActivity.OnMethodInvoking(EventArgs)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking(EventArgs)
- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: CallExternalMethodActivity.ParameterBindings
  fullName: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings
- uid: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: WorkflowParameterBindingCollection
  nameWithType: WorkflowParameterBindingCollection
  fullName: System.Workflow.ComponentModel.WorkflowParameterBindingCollection
- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: ParameterBindingsProperty
  nameWithType: CallExternalMethodActivity.ParameterBindingsProperty
  fullName: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindingsProperty
- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
- uid: System.Workflow.ComponentModel.Compiler.AccessTypes
  parent: System.Workflow.ComponentModel.Compiler
  isExternal: false
  name: AccessTypes
  nameWithType: AccessTypes
  fullName: System.Workflow.ComponentModel.Compiler.AccessTypes
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.Activities.CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
- uid: System.Workflow.Activities.CallExternalMethodActivity.#ctor*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: CallExternalMethodActivity
  nameWithType: CallExternalMethodActivity.CallExternalMethodActivity
- uid: System.Workflow.Activities.CallExternalMethodActivity.CorrelationToken*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: CorrelationToken
  nameWithType: CallExternalMethodActivity.CorrelationToken
- uid: System.Workflow.Activities.CallExternalMethodActivity.Execute*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: Execute
  nameWithType: CallExternalMethodActivity.Execute
- uid: System.Workflow.Activities.CallExternalMethodActivity.InitializeProperties*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: InitializeProperties
  nameWithType: CallExternalMethodActivity.InitializeProperties
- uid: System.Workflow.Activities.CallExternalMethodActivity.InterfaceType*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: InterfaceType
  nameWithType: CallExternalMethodActivity.InterfaceType
- uid: System.Workflow.Activities.CallExternalMethodActivity.MethodName*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: MethodName
  nameWithType: CallExternalMethodActivity.MethodName
- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoked*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: OnMethodInvoked
  nameWithType: CallExternalMethodActivity.OnMethodInvoked
- uid: System.Workflow.Activities.CallExternalMethodActivity.OnMethodInvoking*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: OnMethodInvoking
  nameWithType: CallExternalMethodActivity.OnMethodInvoking
- uid: System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: ParameterBindings
  nameWithType: CallExternalMethodActivity.ParameterBindings
- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType
- uid: System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType*
  parent: System.Workflow.Activities.CallExternalMethodActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
  nameWithType: CallExternalMethodActivity.System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType
