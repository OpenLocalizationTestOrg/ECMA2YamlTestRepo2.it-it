### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.DelimitedListTraceListener
  id: DelimitedListTraceListener
  children:
  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)
  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)
  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)
  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)
  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)
  - System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)
  - System.Diagnostics.DelimitedListTraceListener.Delimiter
  - System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes
  - System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  langs:
  - csharp
  name: DelimitedListTraceListener
  nameWithType: DelimitedListTraceListener
  fullName: System.Diagnostics.DelimitedListTraceListener
  type: Class
  summary: "Indirizza traccia o di debug in un writer di testo, ad esempio un writer di flusso o in un flusso, ad esempio un flusso di file di output."
  remarks: "L&quot;output di traccia è in un formato di testo delimitato che usa il delimitatore specificato dal <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>proprietà.</xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> Il delimitatore viene utilizzato per terminare ogni campo in una riga di output. Per visualizzare l&quot;output di traccia in un foglio di calcolo di Microsoft Excel, ad esempio, è possibile specificare una virgola (&quot;,&quot;) come delimitatore e creare un file con valori delimitato da virgole (CSV).      > [!IMPORTANT] > <xref:System.IDisposable>interfaccia.</xref:System.IDisposable> Dopo aver utilizzando il tipo, è necessario eliminarlo di esso direttamente o indirettamente. Per eliminare direttamente il tipo, chiamare il relativo <xref:System.IDisposable.Dispose%2A>metodo in un`try` / `catch` blocco.</xref:System.IDisposable.Dispose%2A> Per eliminarlo indirettamente, utilizzare un costrutto di linguaggio, ad esempio `using` (in c#) o `Using` (in Visual Basic). Per ulteriori informazioni, vedere la sezione &quot;Utilizzo di oggetti che implementano IDisposable&quot; nel <xref:System.IDisposable>argomento relativo all&quot;interfaccia.</xref:System.IDisposable>       È possibile abilitare o disabilitare un DelimitedListTraceListener tramite file di configurazione dell&quot;applicazione e quindi utilizzare il DelimitedListTraceListener configurato nell&quot;applicazione. In alternativa, è possibile creare un DelimitedListTraceListener nel codice.      > [!NOTE] > Il DelimitedListTraceListener delimita solo il testo che viene generato utilizzando i metodi i cui nomi iniziano con la parola `Trace`, ad esempio <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=fullName>o <xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=fullName>.</xref:System.Diagnostics.Trace.TraceWarning%2A?displayProperty=fullName> </xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A?displayProperty=fullName> Traccia di dati che viene generati tramite il <xref:System.Diagnostics.Debug.Write%2A?displayProperty=fullName>e <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=fullName>metodi non sono delimitati.</xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A?displayProperty=fullName> </xref:System.Diagnostics.Debug.Write%2A?displayProperty=fullName>       Per configurare un DelimitedListTraceListener, modificare il file di configurazione che corrisponde al nome dell&quot;applicazione. In questo file, è possibile aggiungere un listener, impostare le proprietà di un listener o rimuovere un listener. Il file di configurazione deve essere formattato come illustrato nell&quot;esempio seguente: ```   <configuration>     <system.diagnostics>       <trace autoflush=&quot;false&quot; indentsize=&quot;4&quot;>         <listeners>           <add name=&quot;delimitedListener&quot;              type=&quot;System.Diagnostics.DelimitedListTraceListener&quot;              delimiter=&quot;,&quot;              initializeData=&quot;delimitedOutput.csv&quot;              traceOutputOptions=&quot;ProcessId, DateTime&quot; />         </listeners>       </trace>     </system.diagnostics>   </configuration>   ```       >  [!NOTE] > se si tenta di scrivere in un file che è in uso o non disponibile, il nome del file viene automaticamente preceduto da un GUID.      > [!NOTE] > I listener sono destinati a essere utilizzato dai metodi del <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource>per scrivere informazioni di traccia.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> Metodi di listener, ad eccezione di costruttori, non devono essere chiamati direttamente dal codice dell&quot;applicazione."
  syntax:
    content: 'public class DelimitedListTraceListener : System.Diagnostics.TextWriterTraceListener'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  - System.Diagnostics.TextWriterTraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TextWriterTraceListener.Close
  - System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TextWriterTraceListener.Flush
  - System.Diagnostics.TextWriterTraceListener.Write(System.String)
  - System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  - System.Diagnostics.TextWriterTraceListener.Writer
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: DelimitedListTraceListener(Stream)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(Stream)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Diagnostics.DelimitedListTraceListener&quot;> </xref> classe che scrive nel flusso di output specificato."
  remarks: "Questo costruttore inizializza la <xref:System.Diagnostics.TraceListener.Name%2A>proprietà in una stringa vuota (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public DelimitedListTraceListener (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Il <xref:System.IO.Stream>per ricevere l&quot;output.</xref:System.IO.Stream>"
  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: DelimitedListTraceListener(TextWriter)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(TextWriter)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Diagnostics.DelimitedListTraceListener&quot;> </xref> classe che scrive nel writer di testo specificato."
  remarks: "Questo costruttore inizializza la <xref:System.Diagnostics.TraceListener.Name%2A>proprietà in una stringa vuota (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public DelimitedListTraceListener (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "Il <xref:System.IO.TextWriter>per ricevere l&quot;output.</xref:System.IO.TextWriter>"
  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: DelimitedListTraceListener(String)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(String)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Diagnostics.DelimitedListTraceListener&quot;> </xref> classe che scrive nel file specificato."
  remarks: "Questo costruttore inizializza la <xref:System.Diagnostics.TraceListener.Name%2A>proprietà in una stringa vuota (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  syntax:
    content: public DelimitedListTraceListener (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Il nome del file da ricevere l&quot;output."
  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: DelimitedListTraceListener(Stream,String)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(Stream,String)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(Stream,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Diagnostics.DelimitedListTraceListener&quot;> </xref> classe che scrive nel flusso di output specificato e ha il nome specificato."
  remarks: "Questo costruttore inizializza la <xref:System.Diagnostics.TraceListener.Name%2A>il valore di proprietà di `name` parametro, o su una stringa vuota (&quot;&quot;) se il `name` parametro è `null`.</xref:System.Diagnostics.TraceListener.Name%2A>  Il <xref:System.Diagnostics.TraceListener.Name%2A>proprietà può essere utilizzata come indice di `Listeners` insieme a livello di codice modificare le proprietà per il listener.</xref:System.Diagnostics.TraceListener.Name%2A> Ad esempio, il codice seguente imposta la <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>proprietà per l&quot;istanza di <xref:System.Diagnostics.DelimitedListTraceListener>che ha il nome &quot;delimListener&quot;: ```   ((DelimitedListTraceListener)Trace.Listeners[&quot;delimListener&quot;]).Delimiter = &quot;:&quot;   ``` </xref:System.Diagnostics.DelimitedListTraceListener> </xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>"
  syntax:
    content: public DelimitedListTraceListener (System.IO.Stream stream, string name);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Il <xref:System.IO.Stream>per ricevere l&quot;output.</xref:System.IO.Stream>"
    - id: name
      type: System.String
      description: "Il nome della nuova istanza del listener di traccia."
  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)
  id: '#ctor(System.IO.TextWriter,System.String)'
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: DelimitedListTraceListener(TextWriter,String)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter,String)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(TextWriter,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Diagnostics.DelimitedListTraceListener&quot;> </xref> classe che scrive nel writer di testo specificato e con il nome specificato."
  remarks: "Questo costruttore inizializza la <xref:System.Diagnostics.TraceListener.Name%2A>il valore di proprietà di `name` parametro, o su una stringa vuota (&quot;&quot;) se il `name` parametro è `null`.</xref:System.Diagnostics.TraceListener.Name%2A> Il <xref:System.Diagnostics.TraceListener.Name%2A>proprietà può essere utilizzata come indice di `Listeners` insieme a livello di codice modificare le proprietà per il listener.</xref:System.Diagnostics.TraceListener.Name%2A> Ad esempio il codice seguente imposta la <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>proprietà per l&quot;istanza di <xref:System.Diagnostics.DelimitedListTraceListener>che ha il nome &quot;delimListener&quot;: ```   ((DelimitedListTraceListener)Trace.Listeners[&quot;delimListener&quot;]).Delimiter = &quot;:&quot;   ``` </xref:System.Diagnostics.DelimitedListTraceListener> </xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>"
  syntax:
    content: public DelimitedListTraceListener (System.IO.TextWriter writer, string name);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "Il <xref:System.IO.TextWriter>per ricevere l&quot;output.</xref:System.IO.TextWriter>"
    - id: name
      type: System.String
      description: "Il nome della nuova istanza del listener di traccia."
  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: DelimitedListTraceListener(String,String)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(String,String)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Diagnostics.DelimitedListTraceListener&quot;> </xref> classe che scrive nel file specificato e con il nome specificato."
  remarks: "Questo costruttore inizializza una nuova istanza di <xref:System.IO.StreamWriter>classe per il file specificato nel percorso specificato, utilizzando <xref:System.Text.Encoding.UTF8%2A>codifica.</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.StreamWriter> Se il file esiste, viene aggiunto a. Se il file non esiste, viene creato un nuovo file.      > [!NOTE] > Per ridurre le probabilità di un&quot;eccezione, qualsiasi carattere che potrebbe invalidare l&quot;output viene sostituito con un &quot;?&quot; caratteri.       Il <xref:System.Diagnostics.TraceListener.Name%2A>proprietà è impostata sul valore del `name` parametro, o su una stringa vuota (&quot;&quot;) se il `name` parametro `null`.</xref:System.Diagnostics.TraceListener.Name%2A> Il <xref:System.Diagnostics.TraceListener.Name%2A>proprietà può essere utilizzata come indice di `Listeners` insieme a livello di codice modificare le proprietà per il listener.</xref:System.Diagnostics.TraceListener.Name%2A> Ad esempio, il codice seguente imposta la <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>proprietà per l&quot;istanza di <xref:System.Diagnostics.DelimitedListTraceListener>che ha il nome &quot;delimListener&quot;: ```   ((DelimitedListTraceListener)Trace.Listeners[&quot;delimListener&quot;]).Delimiter = &quot;:&quot;   ``` </xref:System.Diagnostics.DelimitedListTraceListener> </xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>"
  syntax:
    content: public DelimitedListTraceListener (string fileName, string name);
    parameters:
    - id: fileName
      type: System.String
      description: "Il nome del file da ricevere l&quot;output."
    - id: name
      type: System.String
      description: "Il nome della nuova istanza del listener di traccia."
  overload: System.Diagnostics.DelimitedListTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.Delimiter
  id: Delimiter
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: Delimiter
  nameWithType: DelimitedListTraceListener.Delimiter
  fullName: System.Diagnostics.DelimitedListTraceListener.Delimiter
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Ottiene o imposta il delimitatore per un elenco delimitato da virgole."
  remarks: "Il delimitatore predefinito è &quot;;&quot; punto e virgola (). Esempio di file di configurazione seguente viene illustrata l&quot;impostazione della proprietà delimitatore con la `delimiter` attributo in un file di configurazione:```   <configuration>     <system.diagnostics>       <trace autoflush=&quot;false&quot; indentsize=&quot;4&quot;>         <listeners>           <add name=&quot;delimitedListener&quot;              type=&quot;System.Diagnostics.DelimitedListTraceListener&quot;              delimiter=&quot;:&quot;              initializeData=&quot;delimitedOutput.txt&quot;              traceOutputOptions=&quot;ProcessId, DateTime&quot; />           <remove name=&quot;Default&quot; />         </listeners>       </trace>     </system.diagnostics>   </configuration>      ```"
  syntax:
    content: public string Delimiter { get; set; }
    return:
      type: System.String
      description: "Il delimitatore per un elenco delimitato da virgole."
  overload: System.Diagnostics.DelimitedListTraceListener.Delimiter*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Delimitatore è impostato su <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Il delimitatore è impostato su una stringa vuota (&quot;&quot;)."
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: DelimitedListTraceListener.GetSupportedAttributes()
  fullName: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Restituisce l&quot;attributo di file di configurazione personalizzati supportato dal listener di traccia delimitato da virgole."
  remarks: "Un attributo personalizzato è un attributo che non viene ereditato dalla classe di base che può essere utilizzata per impostare una proprietà per la classe. L&quot;attributo personalizzato per <xref:System.Diagnostics.DelimitedListTraceListener>utilizzato per impostare il <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>proprietà.</xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A> </xref:System.Diagnostics.DelimitedListTraceListener> Esempio di file di configurazione seguente viene illustrato come utilizzare il `delimiter` attributo da impostare il <xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>proprietà: ```   <configuration>     <system.diagnostics>       <trace autoflush=&quot;false&quot; indentsize=&quot;4&quot;>         <listeners>           <add name=&quot;delimitedListener&quot;              type=&quot;System.Diagnostics.DelimitedListTraceListener&quot;              delimiter=&quot;:&quot;              initializeData=&quot;delimitedOutput.txt&quot;              traceOutputOptions=&quot;ProcessId, DateTime&quot; />           <remove name=&quot;Default&quot; />         </listeners>       </trace>     </system.diagnostics>   </configuration>   ``` </xref:System.Diagnostics.DelimitedListTraceListener.Delimiter%2A>"
  syntax:
    content: protected override string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "Matrice di stringhe che contiene il valore singolo &quot;delimitatore&quot;."
  overload: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Scrive le informazioni di traccia, un oggetto dati e informazioni sull&quot;evento nel file di output o di un flusso."
  remarks: "I valori del `source`, `eventType`, e `id` i parametri vengono scritti come intestazione. L&quot;oggetto dati viene convertito in una stringa tramite il `ToString` metodo dell&quot;oggetto. Il `eventCache` i dati vengono scritti come piè di pagina il cui contenuto dipende dal valore del <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>proprietà.</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      > [!IMPORTANT] > Il <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A>metodo non è destinato a essere chiamato dal codice dell&quot;applicazione.</xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> Viene chiamato dai metodi del <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource>per scrivere i dati di traccia.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Oggetto <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> oggetto che contiene l&quot;oggetto corrente ID processo, ID thread e le informazioni di traccia dello stack."
    - id: source
      type: System.String
      description: "Nome utilizzato per identificare l&quot;output, in genere il nome dell&quot;applicazione che ha generato l&quot;evento di traccia."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Uno del <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valori che specificano il tipo di evento che ha causato la traccia."
    - id: id
      type: System.Int32
      description: "Identificatore numerico per l&quot;evento."
    - id: data
      type: System.Object
      description: "Oggetto da scrivere nel flusso o nel file di output di dati."
  overload: System.Diagnostics.DelimitedListTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Scrive informazioni di traccia, una matrice di oggetti dati e informazioni sull&quot;evento nel file di output o nel flusso."
  remarks: "I valori del `source`, `eventType`, e `id` i parametri vengono scritti come intestazione. Gli oggetti dati vengono convertiti in stringhe usando il `ToString` metodo di ogni oggetto. Il `eventCache` i dati vengono scritti come piè di pagina il cui contenuto dipende dal valore del <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>proprietà.</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      > [!IMPORTANT] > Il <xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A>metodo non è destinato a essere chiamato dal codice dell&quot;applicazione.</xref:System.Diagnostics.DelimitedListTraceListener.TraceData%2A> Viene chiamato dai metodi del <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource>per scrivere i dati di traccia.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Oggetto <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> oggetto che contiene l&quot;oggetto corrente ID processo, ID thread e le informazioni di traccia dello stack."
    - id: source
      type: System.String
      description: "Nome utilizzato per identificare l&quot;output, in genere il nome dell&quot;applicazione che ha generato l&quot;evento di traccia."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Uno del <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valori che specificano il tipo di evento che ha causato la traccia."
    - id: id
      type: System.Int32
      description: "Identificatore numerico per l&quot;evento."
    - id: data
      type: System.Object[]
      description: "Matrice di oggetti dati da scrivere nel file di output o di un flusso."
  overload: System.Diagnostics.DelimitedListTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Scrive le informazioni, un messaggio e informazioni sull&quot;evento nel flusso o nel file di output di traccia."
  remarks: "I valori del `source`, `eventType`, e `id` i parametri vengono scritti come un&quot;intestazione, seguita dal `message` dati. Il `eventCache` i dati vengono scritti come piè di pagina il cui contenuto dipende dal valore del <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>proprietà.</xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>      > [!IMPORTANT] > Il <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A>metodo non è destinato a essere chiamato dal codice dell&quot;applicazione.</xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> Viene chiamato dai metodi del <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, e <xref:System.Diagnostics.TraceSource>per scrivere i dati di traccia.</xref:System.Diagnostics.TraceSource> </xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug>"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Oggetto <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> oggetto che contiene l&quot;oggetto corrente ID processo, ID thread e le informazioni di traccia dello stack."
    - id: source
      type: System.String
      description: "Nome utilizzato per identificare l&quot;output, in genere il nome dell&quot;applicazione che ha generato l&quot;evento di traccia."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Uno del <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valori che specificano il tipo di evento che ha causato la traccia."
    - id: id
      type: System.Int32
      description: "Identificatore numerico per l&quot;evento."
    - id: message
      type: System.String
      description: "Messaggio di traccia da scrivere nel file di output o di un flusso."
  overload: System.Diagnostics.DelimitedListTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.DelimitedListTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Scrive informazioni di traccia, una matrice formattata di oggetti e informazioni sull&quot;evento nel file di output o di un flusso."
  remarks: "The values of the `source`, `eventType`, and `id` parameters are written as a header. The `args` object array is converted to a string using the [String.Format(String, Object\\[\\])](assetId:///M:System.String.Format(System.String,System.Object[])?qualifyHint=True&autoUpgrade=False) method, passing the `format` string and `args` array to format the string as the message portion of the trace. The `eventCache` data is written as a footer whose content depends on the value of the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Diagnostics.DelimitedListTraceListener.TraceEvent%2A> method is not intended to be called by application code. It is called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data."
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Oggetto <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> oggetto che contiene l&quot;oggetto corrente ID processo, ID thread e le informazioni di traccia dello stack."
    - id: source
      type: System.String
      description: "Nome utilizzato per identificare l&quot;output, in genere il nome dell&quot;applicazione che ha generato l&quot;evento di traccia."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Uno del <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valori che specificano il tipo di evento che ha causato la traccia."
    - id: id
      type: System.Int32
      description: "Identificatore numerico per l&quot;evento."
    - id: format
      type: System.String
      description: "Stringa di formato che contiene zero o più elementi di formato che corrispondono agli oggetti di `args` matrice."
    - id: args
      type: System.Object[]
      description: "Matrice che contiene zero o più oggetti da formattare."
  overload: System.Diagnostics.DelimitedListTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: System.Diagnostics.TextWriterTraceListener
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: DelimitedListTraceListener(Stream)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(Stream)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: DelimitedListTraceListener(TextWriter)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.String)
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: DelimitedListTraceListener(String)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(String)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: DelimitedListTraceListener(Stream,String)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(Stream,String)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(Stream,String)
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: DelimitedListTraceListener(TextWriter,String)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(TextWriter,String)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(TextWriter,String)
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor(System.String,System.String)
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: DelimitedListTraceListener(String,String)
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener(String,String)
  fullName: System.Diagnostics.DelimitedListTraceListener.DelimitedListTraceListener(String,String)
- uid: System.Diagnostics.DelimitedListTraceListener.Delimiter
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: DelimitedListTraceListener.Delimiter
  fullName: System.Diagnostics.DelimitedListTraceListener.Delimiter
- uid: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: DelimitedListTraceListener.GetSupportedAttributes()
  fullName: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.DelimitedListTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: System.Diagnostics.DelimitedListTraceListener.#ctor*
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: DelimitedListTraceListener
  nameWithType: DelimitedListTraceListener.DelimitedListTraceListener
- uid: System.Diagnostics.DelimitedListTraceListener.Delimiter*
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: DelimitedListTraceListener.Delimiter
- uid: System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes*
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: DelimitedListTraceListener.GetSupportedAttributes
- uid: System.Diagnostics.DelimitedListTraceListener.TraceData*
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: TraceData
  nameWithType: DelimitedListTraceListener.TraceData
- uid: System.Diagnostics.DelimitedListTraceListener.TraceEvent*
  parent: System.Diagnostics.DelimitedListTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: DelimitedListTraceListener.TraceEvent
