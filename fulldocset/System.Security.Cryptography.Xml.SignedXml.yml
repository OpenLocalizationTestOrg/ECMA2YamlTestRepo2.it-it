### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.SignedXml
  id: SignedXml
  children:
  - System.Security.Cryptography.Xml.SignedXml.#ctor
  - System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)
  - System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)
  - System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  - System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  - System.Security.Cryptography.Xml.SignedXml.ComputeSignature
  - System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  - System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  - System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  - System.Security.Cryptography.Xml.SignedXml.GetPublicKey
  - System.Security.Cryptography.Xml.SignedXml.GetXml
  - System.Security.Cryptography.Xml.SignedXml.KeyInfo
  - System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.SignedXml.m_signature
  - System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  - System.Security.Cryptography.Xml.SignedXml.Resolver
  - System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  - System.Security.Cryptography.Xml.SignedXml.Signature
  - System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  - System.Security.Cryptography.Xml.SignedXml.SignatureLength
  - System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  - System.Security.Cryptography.Xml.SignedXml.SignatureValue
  - System.Security.Cryptography.Xml.SignedXml.SignedInfo
  - System.Security.Cryptography.Xml.SignedXml.SigningKey
  - System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  - System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  - System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  langs:
  - csharp
  name: SignedXml
  nameWithType: SignedXml
  fullName: System.Security.Cryptography.Xml.SignedXml
  type: Class
  summary: "Fornisce un wrapper per un oggetto firma XML di base per semplificare la creazione di firme XML."
  remarks: "La classe SignedXml è l&quot;implementazione di .NET Framework del World Wide Web Consortium (W3C) [sintassi della firma XML e specifica di elaborazione](http://www.w3.org/TR/xmldsig-core/), noto anche come XMLDSIG (firma digitale XML).  XMLDSIG è un metodo basato su standard e interoperativo per firmare e verificare tutta o parte di un documento XML o altri dati indirizzabili da un URI (Uniform Resource Identifier).       Utilizzare la classe SignedXml ogni volta che si desidera condividere dati XML firmati tra applicazioni o organizzazioni in modo standard.  I dati firmati utilizzando questa classe possono essere verificati per qualsiasi implementazione conforme alla specifica W3C per XMLDSIG.       La classe SignedXml consente di creare i seguenti tre tipi di firme digitali XML: | Tipo di firma | Descrizione |   |--------------------|-----------------|   | Firma protetta | La firma è contenuta all&quot;interno dell&quot;elemento XML da firmare. |   | Firma di protezione | Il documento XML firmato è contenuto all&quot;interno di `Signature`> elemento. |   | Firma disconnessa interno | La firma e un documento XML firmato sono nello stesso documento, ma non contiene l&quot;altro. |       È inoltre disponibile un quarto tipo di firma di chiamata di una firma disconnessa esterna quando i dati e la firma presenti nei documenti XML separati. Firme scollegate esterne non sono supportate dalla classe SignedXml.      ## Crea la struttura di un XMLDSIG firma XML un `Signature`> elemento che contiene una firma digitale di un documento XML o altri dati indirizzabili da URI.  Il `Signature`> elemento può contenere informazioni su dove trovare una chiave che la verifica della firma e l&quot;algoritmo di crittografia utilizzato per la firma. La struttura di base è la seguente: ```xml      <Signature xmlns:ds=&quot;http://www.w3.org/2000/09/xmldsig#&quot;>       <SignedInfo>         <CanonicalizationMethod Algorithm=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;/>         <SignatureMethod Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;/>         <Reference URI=&quot;&quot;>           <Transforms>             <Transform Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;/>           </Transforms>           <DigestMethod Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;/>           <DigestValue>Base64EncodedValue==</DigestValue>         </Reference>       </SignedInfo>       <SignatureValue>AnotherBase64EncodedValue===</SignatureValue>     </Signature>      ``` sono le parti principali di questa struttura: il `CanonicalizationMethod`> elemento specifica le regole per la riscrittura il `Signature` elemento da XML, testo, in byte per la convalida della firma. Il valore predefinito in .NET Framework è http://www.w3.org/TR/2001/REC-xml-c14n-20010315, che identifica un algoritmo attendibile. Questo elemento è rappresentato dal <xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=fullName>proprietà.</xref:System.Security.Cryptography.Xml.SignedInfo.CanonicalizationMethod%2A?displayProperty=fullName>       Il `SignatureMethod`> elemento specifica l&quot;algoritmo utilizzato per la generazione di firma e convalida, è stata applicata al `Signature`> elemento per produrre il valore in `SignatureValue`>. Nell&quot;esempio precedente, il valore http://www.w3.org/2000/09/xmldsig#rsa-sha1 identifica una firma RSA PKCS1 SHA-1. Questo elemento è rappresentato dal <xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A>proprietà.</xref:System.Security.Cryptography.Xml.SignedXml.SignatureMethod%2A>       Il `SignatureValue`> elemento specifica la firma del servizio di crittografia per il `Signature`> elemento. Se la firma non viene verificato, quindi una parte di `Signature`> blocco è stato alterato e il documento viene considerato non valido. Purché il `CanonicalizationMethod`> valore sia attendibile, questo valore è resistente alle manomissioni. Questo elemento è rappresentato dal <xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A>proprietà.</xref:System.Security.Cryptography.Xml.SignedXml.SignatureValue%2A>       Il `URI` attributo del `Reference`> elemento specifica un oggetto dati utilizzando un riferimento URI. Questo attributo è rappresentato dal <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName>proprietà.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName>      -Non si specifica il `URI` attributo, vale a dire l&quot;impostazione di <xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName>proprietà `null`, significa che l&quot;applicazione ricevente deve conoscere l&quot;identità dell&quot;oggetto.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A?displayProperty=fullName> Nella maggior parte dei casi, un `null` URI genererà un&quot;eccezione. Non utilizzare un `null` URI, a meno che l&quot;applicazione interagisce con un protocollo che lo richiedono.      -Impostazione di `URI` attributo a una stringa vuota indica che l&quot;elemento radice del documento da firmare, un modulo di firma protetta.      -Se il valore di `URI` attributo inizia con #, quindi il valore deve essere risolto in un elemento nel documento corrente. Questo modulo è utilizzabile con uno dei tipi di firma supportato (firma protetta, busta firma o la firma scollegato interno).      -Qualsiasi altro elemento viene considerato una risorsa esterna scollegato firma e non è supportata dalla classe SignedXml.       Il `Transforms`> elemento contiene un elenco ordinato di `Transform`> gli elementi che descrivono come firmatario ottenuto l&quot;oggetto dati che è stata digest. Un algoritmo di trasformazione è simile al metodo di canonizzazione, ma anziché la riscrittura il `Signature`> elemento, la riscrittura il contenuto identificato dal `URI` attributo del `Reference`> elemento. Il `Transforms`> elemento è rappresentato dalla <xref:System.Security.Cryptography.Xml.TransformChain>classe.</xref:System.Security.Cryptography.Xml.TransformChain>      -Ogni algoritmo di trasformazione è definito come accettando XML (un&quot;espressione XPath set di nodi) o byte come input. Se il formato dei dati correnti è diverso dai requisiti di input di trasformazione, vengono applicate le regole di conversione.      -Ogni algoritmo di trasformazione è definito come produrre XML o byte come output.      -Se l&quot;output dell&quot;algoritmo di trasformazione ultimo non è definito in byte (o nessuna trasformazioni specificate), allora il http://www.w3.org/TR/2001/REC-xml-c14n-20010315 metodo canonizzazione viene utilizzato come una trasformazione implicita (anche se è stato specificato un algoritmo diverso nel `CanonicalizationMethod`> elemento).      -Il valore http://www.w3.org/2000/09/xmldsig#enveloped-signature per l&quot;algoritmo di trasformazione consente di codificare una regola che viene interpretata come rimuovere il `Signature`> elemento dal documento. In caso contrario, un verificatore di una firma protetta verrà digest documento, inclusa la firma, ma il firmatario sarebbe hanno digest il documento prima che l&quot;applicazione della firma, causando risposte diverse.       Il `DigestMethod`> elemento identifica il metodo digest (hash di crittografia) da applicare al contenuto trasformato identificato dal `URI` attributo del `Reference`> elemento. È rappresentato dal <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=fullName>proprietà.</xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A?displayProperty=fullName>      ## Scelta di un metodo di canonizzazione a meno che non interagisce con una specifica che richiede l&quot;utilizzo di un valore diverso, è consigliabile utilizzare il metodo di canonizzazione predefinito in .NET Framework che è l&quot;algoritmo C14N a XML 1.0, il cui valore è http://www.w3.org/TR/2001/REC-xml-c14n-20010315. L&quot;algoritmo C14N a XML 1.0 è necessario essere supportati da tutte le implementazioni di XMLDSIG, soprattutto perché è una trasformazione finale implicita da applicare.       Sono disponibili versioni degli algoritmi di canonizzazione che supporta commenti conservare. I metodi di canonizzazione a mantenimento del commento non sono consigliati perché violano il principio di &quot;firmare cosa viene visualizzata&quot;. Ovvero, i commenti in un `Signature`> elemento non modificherà la logica di elaborazione per la modalità di esecuzione della firma, è semplicemente quali il valore della firma. In combinazione con un algoritmo di firma vulnerabile, che consente i commenti per essere inclusi offre un utente malintenzionato non necessari liberamente forzare una collisione hash, visualizzando un documento alterato legittimi.  In .NET Framework, sono supportati solo canonicalizers incorporato per impostazione predefinita. Per supportare canonicalizers aggiuntivi o personalizzati, vedere il <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>proprietà.</xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A> Se il documento viene utilizzato un metodo di canonizzazione che non è presente nella raccolta rappresentata dal <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>proprietà, quindi il <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>metodo restituirà `false`.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> </xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>      > [!NOTE] > Un&quot;applicazione molto difensiva può rimuovere tutti i valori non è previsto firmatari da utilizzare il <xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>insieme.</xref:System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods%2A>      ## Sono valori di riferimento sicuri da eventuali manomissioni?    Sì, il `Reference`> i valori sono sicuri da eventuali manomissioni.  Verifica di .NET framework la `SignatureValue`> calcolo prima di elaborare qualsiasi il `Reference`> valori e i relativi Trasforma e si interrompe in anticipo per evitare le istruzioni di elaborazione potenzialmente dannose.      ## Scegliere gli elementi da firmare è consigliabile utilizzare il valore di &quot;&quot; per il `URI` attributo (o impostare il <xref:System.Security.Cryptography.Xml.Reference.Uri%2A>proprietà in una stringa vuota), se possibile.</xref:System.Security.Cryptography.Xml.Reference.Uri%2A> Ciò significa che l&quot;intero documento viene considerato per il calcolo del digest, ovvero che l&quot;intero documento è protetto da eventuali manomissioni.       È molto comune per visualizzare `URI` valori sotto forma di punti di ancoraggio, ad esempio #foo, che fa riferimento a un elemento il cui attributo ID è &quot;foo&quot;. Purtroppo, è facile per questa opzione per essere manomessi perché sono inclusi solo il contenuto dell&quot;elemento di destinazione, non il contesto. Utilizzino questa distinzione è noto come Wrapping firma XML (XSW).       Se l&quot;applicazione considera commenti semantica (che è non comune quando si gestiscono XML), sarà necessario utilizzare &quot;#xpointer(/)&quot; anziché &quot;&quot; e &quot;#xpointer(id(&quot;foo&quot;))&quot; anziché &quot;#foo&quot;. Le versioni #xpointer vengono interpretate come comprensivo di commenti, mentre i moduli di shortname sono esclusi i commenti.       Se è necessario accettare i documenti che sono protetti solo parzialmente e si desidera verificare di avere a disposizione lo stesso contenuto che la firma è protetto, utilizzare il <xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A>metodo.</xref:System.Security.Cryptography.Xml.SignedXml.GetIdElement%2A>      ## Considerazioni sulla sicurezza sull&quot;elemento KeyInfo i dati nella facoltativa `KeyInfo`> elemento (vale a dire il <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>proprietà), che contiene una chiave per convalidare la firma, non deve essere attendibile.</xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>       In particolare, quando il <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>valore rappresenta una chiave pubblica RSA, DSA o ECDSA bare, il documento potrebbe essere stato alterato, nonostante il <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>metodo reporting che la firma è valida.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> </xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo%2A>  Ciò può verificarsi perché l&quot;entità che esegue solo la manomissione deve generare una nuova chiave e firmare nuovamente il documento alterato con la nuova chiave. In tal caso, a meno che l&quot;applicazione verifica che la chiave pubblica è un valore previsto, il documento deve essere considerato come se sono stati alterato. È necessario che l&quot;applicazione, esaminare la chiave pubblica incorporata all&quot;interno del documento e verificarlo con un elenco di valori noti per il contesto del documento. Ad esempio, se il documento è compresa per essere emesso da un utente noto, si potrebbe controllare la chiave con un elenco di chiavi note utilizzati da tale utente.       È inoltre possibile verificare la chiave dopo l&quot;elaborazione del documento usando il <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A>(metodo), anziché utilizzare il <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>metodo.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> </xref:System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey%2A> Tuttavia, per una protezione ottimale, è necessario verificare in anticipo la chiave.       In alternativa, prendere in considerazione durante il tentativo dell&quot;utente registrato le chiavi pubbliche, invece di leggere il contenuto di `KeyInfo`> elemento.      ## Considerazioni sulla sicurezza sull&quot;elemento X509Data facoltativo `X509Data`> è un elemento figlio del `KeyInfo`> elemento e contiene X509 uno o più certificati o identificatori per X509 certificati. I dati di `X509Data`> elemento inoltre non deve essere implicitamente attendibile.       Quando si verifica un documento con l&quot;oggetto incorporato `X509Data`> elemento, .NET Framework consente di verificare solo che i dati si risolve in un X509 certificato la cui chiave pubblica può essere utilizzato correttamente per convalidare la firma del documento. A differenza di chiamata di <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>metodo con il `verifySignatureOnly` parametro impostato su `false`, viene eseguito alcun controllo di revoca, non è selezionata alcuna catena di certificati e non viene verificata scadenza.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> Anche se l&quot;applicazione estrae il certificato stesso e lo passa al <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>metodo con il `verifySignatureOnly` parametro impostato su `false`, che è comunque la convalida non sufficiente per impedire manomissioni documento.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> Il certificato deve comunque essere considerato appropriato per il documento viene apposta la firma.       Usando un certificato di firma incorporato può fornire le strategie di rotazione delle chiavi utile, se nel `X509Data`> sezione o il contenuto del documento. Quando si utilizza questo approccio un&quot;applicazione deve estrarre manualmente il certificato e convalida simile a:: il certificato è stato emesso direttamente o tramite una catena da un&quot;autorità di certificazione (CA) il cui certificato pubblico è incorporato nell&quot;applicazione.           Utilizzo dell&quot;elenco di trust fornita dal sistema operativo senza ulteriori controlli, ad esempio un nome di un oggetto noto, non è sufficiente per impedire manomissioni in SignedXml.      -Il certificato viene verificato che non scaduti al momento della firma di documenti (o &quot;ora&quot; per prossimità di elaborazione dei documenti in tempo reale).      -Per lunga durati certificati emessi da un&quot;autorità di certificazione che supporta revoche di certificati, verificare che il certificato non è stato revocato.      -Il soggetto del certificato viene considerato appropriato per il documento corrente.      ## Se occorre interoperare con una specifica che ha determinato valori specifici (ad esempio XrML) la scelta dell&quot;algoritmo di trasformazione, quindi è necessario seguire la specifica.  Se si dispone di una firma protetta (ad esempio quando la firma dell&quot;intero documento), quindi è necessario utilizzare http://www.w3.org/2000/09/xmldsig#enveloped-signature (rappresentato dalla <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>classe).</xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> È possibile specificare anche la trasformazione XML C14N implicita, ma non è necessario.  Per una firma di protezione o scollegata, non sono necessari alcuna trasformazione. La trasformazione XML C14N implicita si occupa di tutti gli elementi.       Con la sicurezza aggiornata introdotti dal [Bollettino Microsoft sulla sicurezza MS16-035](https://technet.microsoft.com/en-us/library/security/ms16-035.aspx), .NET Framework è limitato trasformazioni possono essere utilizzata nella verifica di documento per impostazione predefinita, con trasformazioni non attendibili che causa <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>per restituire sempre `false`.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A> In particolare, le trasformazioni che richiedono input aggiuntive (specificato come elementi figlio nel codice XML) non è più consentite a causa delle loro eventualità di abuso da utenti malintenzionati. Il W3C consiglia di evitare le trasformazioni XSLT e XPath, sono le due trasformazioni principali interessate da queste restrizioni.      ## Il problema con i riferimenti esterni, se un&quot;applicazione non verifica che i riferimenti esterni non sono appropriati per il contesto corrente, che può essere sfruttati in modi che forniscono molte vulnerabilità di sicurezza (incluso un attacco Denial of Service, Distributed Reflection Denial of Service, la divulgazione di informazioni, Bypass firma e l&quot;esecuzione di codice). Anche se un&quot;applicazione per convalidare l&quot;URI di riferimento esterno, vi resta un problema della risorsa caricato due volte: una volta quando l&quot;applicazione legge e una volta quando SignedXml lo legge. Poiché non c&quot;è garanzia che la lettura di applicazione e il documento verificare passaggi hanno lo stesso contenuto, la firma non fornisce i livelli di attendibilità.       Dato il rischio di riferimenti esterni, SignedXml genererà un&quot;eccezione quando viene rilevato un riferimento esterno.  Per ulteriori informazioni, vedere [articolo della Knowledge Base 3148821](https://support.microsoft.com/en-us/kb/3148821)."
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/t-system.security.crypto_96_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/t-system.security.crypto_96_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/t-system.security.crypto_96_1.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/t-system.security.crypto_96_2.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/t-system.security.crypto_96_2.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/t-system.security.crypto_96_2.vb)]"
  syntax:
    content: public class SignedXml
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedXml()
  nameWithType: SignedXml.SignedXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_88_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_88_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_88_1.cpp)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_88_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_88_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_88_2.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/m-system.security.crypto_88_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/m-system.security.crypto_88_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/m-system.security.crypto_88_3.vb)]"
  syntax:
    content: public SignedXml ();
    parameters: []
  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)
  id: '#ctor(System.Xml.XmlDocument)'
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedXml(XmlDocument)
  nameWithType: SignedXml.SignedXml(XmlDocument)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlDocument)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> classe dal documento XML specificato."
  remarks: ''
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_111_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_111_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_111_1.cpp)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_111_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_111_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_111_2.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/m-system.security.crypto_111_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/m-system.security.crypto_111_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/m-system.security.crypto_111_3.vb)]"
  syntax:
    content: public SignedXml (System.Xml.XmlDocument document);
    parameters:
    - id: document
      type: System.Xml.XmlDocument
      description: "Il <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> oggetto da utilizzare per inizializzare la nuova istanza di <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>document</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - o - <code> document </code> parametro contiene un valore null <xref:System.Xml.XmlDocument.DocumentElement*>proprietà.</xref:System.Xml.XmlDocument.DocumentElement*>"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)
  id: '#ctor(System.Xml.XmlElement)'
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedXml(XmlElement)
  nameWithType: SignedXml.SignedXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlElement)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> classe dall&quot;oggetto specificato <xref href=&quot;System.Xml.XmlElement&quot;> </xref> oggetto."
  syntax:
    content: public SignedXml (System.Xml.XmlElement elem);
    parameters:
    - id: elem
      type: System.Xml.XmlElement
      description: "Il <xref href=&quot;System.Xml.XmlElement&quot;> </xref> oggetto da utilizzare per inizializzare la nuova istanza di <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>elem</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)
  id: AddObject(System.Security.Cryptography.Xml.DataObject)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: AddObject(DataObject)
  nameWithType: SignedXml.AddObject(DataObject)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddObject(DataObject)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Aggiunge un <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> oggetto all&quot;elenco di oggetti da firmare."
  remarks: "Il metodo AddObject aggiunge un `Object`> elemento che rappresenta un oggetto da firmare il `Signature`> elemento di una firma digitale XML.       Chiama internamente il metodo AddObject il <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>metodo il <xref:System.Security.Cryptography.Xml.Signature>incapsulato dall&quot;oggetto di <xref:System.Security.Cryptography.Xml.SignedXml>oggetto.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.Signature> </xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>  È inoltre possibile aggiungere un <xref:System.Security.Cryptography.Xml.DataObject>oggetto chiamando direttamente il <xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>metodo il <xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A>proprietà.</xref:System.Security.Cryptography.Xml.SignedXml.Signature%2A> </xref:System.Security.Cryptography.Xml.Signature.AddObject%2A> </xref:System.Security.Cryptography.Xml.DataObject>       Per ulteriori informazioni sulle firme digitali XML, vedere la specifica XMLDSIG disponibile all&quot;indirizzo www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example computes and XML signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/add/codesnippet/csharp/cc2302c9-707b-486f-888b-_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/add/codesnippet/cpp/cc2302c9-707b-486f-888b-_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml-AddObject-AddReference#1](~/add/codesnippet/visualbasic/cc2302c9-707b-486f-888b-_1.vb)]"
  syntax:
    content: public void AddObject (System.Security.Cryptography.Xml.DataObject dataObject);
    parameters:
    - id: dataObject
      type: System.Security.Cryptography.Xml.DataObject
      description: "Il <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> oggetto da aggiungere all&quot;elenco di oggetti da firmare."
  overload: System.Security.Cryptography.Xml.SignedXml.AddObject*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)
  id: AddReference(System.Security.Cryptography.Xml.Reference)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: AddReference(Reference)
  nameWithType: SignedXml.AddReference(Reference)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddReference(Reference)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Aggiunge un <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> dell&quot;oggetto per il <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto che descrive un metodo digest, il valore digest e la trasformazione da utilizzare per la creazione di una firma digitale XML."
  remarks: "Il metodo AddReference aggiunge un `Reference`> elemento per il <xref:System.Security.Cryptography.Xml.SignedXml>oggetto che descrive un metodo digest, il valore digest e la trasformazione da utilizzare per la creazione di una firma digitale XML.</xref:System.Security.Cryptography.Xml.SignedXml>  Il `Reference`> elemento è un sottoelemento dell&quot;elemento di `SignedInfo`> elemento.       Il metodo AddReference chiama internamente il <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>metodo il <xref:System.Security.Cryptography.Xml.SignedInfo>incapsulato dall&quot;oggetto il <xref:System.Security.Cryptography.Xml.SignedXml>oggetto.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.SignedInfo> </xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>  È inoltre possibile aggiungere un <xref:System.Security.Cryptography.Xml.Reference>oggetto chiamando direttamente il <xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A>metodo il <xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A>proprietà.</xref:System.Security.Cryptography.Xml.SignedXml.SignedInfo%2A> </xref:System.Security.Cryptography.Xml.SignedInfo.AddReference%2A> </xref:System.Security.Cryptography.Xml.Reference>       Per ulteriori informazioni sulle firme digitali XML, vedere la specifica XMLDSIG disponibile all&quot;indirizzo www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/86d65b61-ebc7-4a08-b833-_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/86d65b61-ebc7-4a08-b833-_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/86d65b61-ebc7-4a08-b833-_1.cpp)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/86d65b61-ebc7-4a08-b833-_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/86d65b61-ebc7-4a08-b833-_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/86d65b61-ebc7-4a08-b833-_2.vb)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/86d65b61-ebc7-4a08-b833-_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/86d65b61-ebc7-4a08-b833-_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/86d65b61-ebc7-4a08-b833-_3.vb)]"
  syntax:
    content: public void AddReference (System.Security.Cryptography.Xml.Reference reference);
    parameters:
    - id: reference
      type: System.Security.Cryptography.Xml.Reference
      description: "Il <xref href=&quot;System.Security.Cryptography.Xml.Reference&quot;> </xref> oggetto che descrive un metodo digest, il valore digest e la trasformazione da utilizzare per la creazione di una firma digitale XML."
  overload: System.Security.Cryptography.Xml.SignedXml.AddReference*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature
  id: CheckSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature()
  nameWithType: SignedXml.CheckSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Determina se il <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>proprietà verifica utilizzando la chiave pubblica nella firma.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: "Questo metodo consente anche di calcolare il digest dei riferimenti e il valore della firma.       Se un documento XML è stato firmato con una firma x.&509;, il metodo CheckSignature eseguirà la ricerca nell&quot;archivio &quot;AddressBook&quot; i certificati utilizzabili per la verifica. Ad esempio, se il certificato viene fatto riferimento da un identificatore SKI (Subject Key Identifier), il <xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>metodo selezionare i certificati con tale identificatore e li prova uno dopo l&quot;altro fino a quando non è possibile verificare il certificato.</xref:System.Security.Cryptography.Xml.SignedXml.CheckSignature%2A>"
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_17_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_17_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_17_1.vb)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_17_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_17_2.vb)]\n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_17_2.cs)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/m-system.security.crypto_17_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/m-system.security.crypto_17_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/m-system.security.crypto_17_3.vb)]"
  syntax:
    content: public bool CheckSignature ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>verifica proprietà; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il <> </> *> proprietà della chiave pubblica della firma non corrisponde la <> </> *> proprietà.       - oppure - Impossibile creare la descrizione della firma.       - o non è stato possibile creare l&quot;algoritmo hash."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  id: CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignature(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Determina se il <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>proprietà verifica per la chiave specificata.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ''
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/cpp/3bad083a-16aa-4e4b-9114-_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/visualbasic/3bad083a-16aa-4e4b-9114-_1.vb)]\n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/csharp/3bad083a-16aa-4e4b-9114-_1.cs)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/3bad083a-16aa-4e4b-9114-_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/3bad083a-16aa-4e4b-9114-_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/3bad083a-16aa-4e4b-9114-_2.vb)]"
  syntax:
    content: public bool CheckSignature (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "L&quot;implementazione del <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> proprietà che contiene la chiave da utilizzare per verificare la <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>proprietà.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>proprietà verifica per l&quot;oggetto chiave; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il <> </> *> proprietà del <code> key </code> il parametro non corrisponde la <> </> *> proprietà.       - oppure - Impossibile creare la descrizione della firma.       - o non è stato possibile creare l&quot;algoritmo hash."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  id: CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.CheckSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(KeyedHashAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Determina se il <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>proprietà viene verificata per l&quot;algoritmo message authentication specificato code (MAC).</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ''
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/csharp/90ca4404-0fd2-4d7f-a2b2-_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/visualbasic/90ca4404-0fd2-4d7f-a2b2-_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/cpp/90ca4404-0fd2-4d7f-a2b2-_1.cpp)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/csharp/90ca4404-0fd2-4d7f-a2b2-_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/cpp/90ca4404-0fd2-4d7f-a2b2-_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/visualbasic/90ca4404-0fd2-4d7f-a2b2-_2.vb)]"
  syntax:
    content: public bool CheckSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);
    parameters:
    - id: macAlg
      type: System.Security.Cryptography.KeyedHashAlgorithm
      description: "L&quot;implementazione di <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> che contiene il MAC per essere utilizzato per verificare la <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>proprietà.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>proprietà viene verificata per MAC specificato; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>macAlg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il <> </> *> proprietà dell&quot;oggetto specificato <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> oggetto non è valido.       -or-       The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - oppure - Impossibile creare la trasformazione crittografica utilizzata per verificare la firma."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  id: CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignature(X509Certificate2,Boolean)
  nameWithType: SignedXml.CheckSignature(X509Certificate2,Boolean)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Determina se il <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>proprietà verifica per l&quot;oggetto specificato <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> oggetto e, facoltativamente, se il certificato è valido.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: "Nella versione 1.1 di .NET Framework, il certificato x. 509 non viene verificato.  Nella versione 2.0 e versioni successive, il certificato x. 509 viene verificato.       Nella versione 2.0 e versioni successive di .NET Framework, il metodo CheckSignature eseguirà la ricerca nell&quot;archivio &quot;AddressBook&quot; i certificati utilizzabili per la verifica. Ad esempio, se il certificato viene fatto riferimento da un identificatore SKI (Subject Key Identifier), il metodo di CheckSignature verrà selezionare i certificati con tale identificatore e li prova uno dopo l&quot;altro fino a quando non è possibile verificare il certificato."
  example:
  - "The following code example uses an X.509 certificate from a certificate store to sign and verify an XML document.  \n  \n [!code-vb[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/add/codesnippet/visualbasic/e51a3b72-eabb-4d0b-b51a-_1.vb)]\n [!code-cs[Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)#1](~/add/codesnippet/csharp/e51a3b72-eabb-4d0b-b51a-_1.cs)]"
  syntax:
    content: public bool CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, bool verifySignatureOnly);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "Il <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> oggetto da usare per verificare la <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>proprietà.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
    - id: verifySignatureOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Per verificare la firma di sola lettura. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> per verificare la firma e certificato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la firma è valida. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       - oppure - <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se la firma e il certificato è valido; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>certificate</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Non è stato possibile creare una descrizione di firma per il <code> certificate </code> parametro."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  id: CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: CheckSignatureReturningKey(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Determina se il <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>proprietà verifica utilizzando la chiave pubblica nella firma.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  remarks: ''
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/add/codesnippet/cpp/193181f3-8100-4b63-8720-_1.cpp)]\n [!code-cs[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/add/codesnippet/csharp/193181f3-8100-4b63-8720-_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Detached#1](~/add/codesnippet/visualbasic/193181f3-8100-4b63-8720-_1.vb)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/add/codesnippet/cpp/193181f3-8100-4b63-8720-_2.cpp)]\n [!code-cs[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/add/codesnippet/csharp/193181f3-8100-4b63-8720-_2.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXML_CheckReturnValue_Envelope#1](~/add/codesnippet/visualbasic/193181f3-8100-4b63-8720-_2.vb)]"
  syntax:
    content: public bool CheckSignatureReturningKey (out System.Security.Cryptography.AsymmetricAlgorithm signingKey);
    parameters:
    - id: signingKey
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "Quando termina, questo metodo contiene l&quot;implementazione di <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> che contiene la chiave pubblica nella firma. Questo parametro viene passato non inizializzato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>proprietà verifica utilizzo pubblico nella firma chiave; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Il <code> signingKey </code> parametro è null."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il <> </> *> proprietà della chiave pubblica della firma non corrisponde la <> </> *> proprietà.       - oppure - Impossibile creare la descrizione della firma.       - o non è stato possibile creare l&quot;algoritmo hash."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature
  id: ComputeSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: ComputeSignature()
  nameWithType: SignedXml.ComputeSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Calcola una firma digitale XML."
  remarks: "Il metodo ComputeSignature crea una firma digitale XML e molti degli elementi XML necessari.       È necessario impostare i dati da firmare e <xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A>proprietà prima di chiamare questo metodo.</xref:System.Security.Cryptography.Xml.SignedXml.SigningKey%2A>"
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/m-system.security.crypto_74_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_74_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/m-system.security.crypto_74_1.cpp)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/m-system.security.crypto_74_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/m-system.security.crypto_74_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_74_2.vb)]"
  syntax:
    content: public void ComputeSignature ();
    parameters: []
  overload: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - o - <> </> *> proprietà non è un <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> oggetto o <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> oggetto.       - oppure - Impossibile caricare la chiave."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  id: ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: ComputeSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.ComputeSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(KeyedHashAlgorithm)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Calcola una firma digitale XML utilizzando l&quot;algoritmo message authentication specificato code (MAC)."
  remarks: "Il metodo ComputeSignature crea una firma digitale XML utilizzando l&quot;algoritmo MAC specificato e molti degli elementi XML necessari.       È necessario impostare i dati vengano firmati prima di chiamare questo metodo."
  example:
  - "The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/csharp/a3e65477-6e59-4270-bb2f-_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/visualbasic/a3e65477-6e59-4270-bb2f-_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Detached#1](~/add/codesnippet/cpp/a3e65477-6e59-4270-bb2f-_1.cpp)]  \n  \n The following code example shows how to sign and verify an entire XML document using an enveloping signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/csharp/a3e65477-6e59-4270-bb2f-_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/cpp/a3e65477-6e59-4270-bb2f-_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-KeyedHash-Envelope#1](~/add/codesnippet/visualbasic/a3e65477-6e59-4270-bb2f-_2.vb)]"
  syntax:
    content: public void ComputeSignature (System.Security.Cryptography.KeyedHashAlgorithm macAlg);
    parameters:
    - id: macAlg
      type: System.Security.Cryptography.KeyedHashAlgorithm
      description: "A <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> oggetto che contiene il MAC da utilizzare per calcolare il valore di <xref:System.Security.Cryptography.Xml.SignedXml.Signature*>proprietà.</xref:System.Security.Cryptography.Xml.SignedXml.Signature*>"
  overload: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>macAlg</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> specificato dall&quot;oggetto di <code> macAlg </code> parametro non è un&quot;istanza di <xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;> </xref>.       - o - <xref:System.Security.Cryptography.HashAlgorithm.HashSize*>proprietà dell&quot;oggetto specificato <xref href=&quot;System.Security.Cryptography.KeyedHashAlgorithm&quot;> </xref> oggetto non è valido.</xref:System.Security.Cryptography.HashAlgorithm.HashSize*>       - oppure - Impossibile creare la trasformazione crittografica utilizzata per verificare la firma."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  id: EncryptedXml
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: EncryptedXml
  nameWithType: SignedXml.EncryptedXml
  fullName: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ottiene o imposta un <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> oggetto che definisce le regole di elaborazione della crittografia XML."
  syntax:
    content: public System.Security.Cryptography.Xml.EncryptedXml EncryptedXml { get; set; }
    return:
      type: System.Security.Cryptography.Xml.EncryptedXml
      description: "Un <xref href=&quot;System.Security.Cryptography.Xml.EncryptedXml&quot;> </xref> oggetto che definisce le regole di elaborazione della crittografia XML."
  overload: System.Security.Cryptography.Xml.SignedXml.EncryptedXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  id: GetIdElement(System.Xml.XmlDocument,System.String)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: GetIdElement(XmlDocument,String)
  nameWithType: SignedXml.GetIdElement(XmlDocument,String)
  fullName: System.Security.Cryptography.Xml.SignedXml.GetIdElement(XmlDocument,String)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Restituisce il <xref href=&quot;System.Xml.XmlElement&quot;> </xref> oggetto con l&quot;ID specificato dall&quot;oggetto specificato <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> oggetto."
  syntax:
    content: public virtual System.Xml.XmlElement GetIdElement (System.Xml.XmlDocument document, string idValue);
    parameters:
    - id: document
      type: System.Xml.XmlDocument
      description: "Il <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> oggetto per recuperare il <xref href=&quot;System.Xml.XmlElement&quot;> </xref> dall&quot;oggetto."
    - id: idValue
      type: System.String
      description: "L&quot;ID del <xref href=&quot;System.Xml.XmlElement&quot;> </xref> oggetto per recuperare dal <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> oggetto."
    return:
      type: System.Xml.XmlElement
      description: "Il <xref href=&quot;System.Xml.XmlElement&quot;> </xref> oggetto con l&quot;ID specificato dall&quot;oggetto specificato <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> oggetto, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se non è stato possibile trovarlo."
  overload: System.Security.Cryptography.Xml.SignedXml.GetIdElement*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey
  id: GetPublicKey
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: GetPublicKey()
  nameWithType: SignedXml.GetPublicKey()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetPublicKey()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Restituisce la chiave pubblica di una firma."
  remarks: "Il metodo GetPublicKey restituisce un <xref:System.Security.Cryptography.AsymmetricAlgorithm>oggetto che contiene una chiave pubblica può essere utilizzata per verificare una firma digitale XML.</xref:System.Security.Cryptography.AsymmetricAlgorithm>       La chiave deve essere un <xref:System.Security.Cryptography.DSA>o <xref:System.Security.Cryptography.RSA>chiave.</xref:System.Security.Cryptography.RSA> </xref:System.Security.Cryptography.DSA>"
  syntax:
    content: protected virtual System.Security.Cryptography.AsymmetricAlgorithm GetPublicKey ();
    parameters: []
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "Un <xref href=&quot;System.Security.Cryptography.AsymmetricAlgorithm&quot;> </xref> oggetto che contiene la chiave pubblica della firma o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se la chiave non viene trovata."
  overload: System.Security.Cryptography.Xml.SignedXml.GetPublicKey*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il <xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo*>proprietà <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Cryptography.Xml.SignedXml.KeyInfo*>"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: GetXml()
  nameWithType: SignedXml.GetXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Restituisce la rappresentazione XML di un <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "La rappresentazione XML del <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> oggetto."
  overload: System.Security.Cryptography.Xml.SignedXml.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo
  id: KeyInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: KeyInfo
  nameWithType: SignedXml.KeyInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.KeyInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ottiene o imposta il <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> oggetto <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  remarks: "La proprietà rappresenta KeyInfo il `KeyInfo`> elemento di una firma digitale XML mediante un <xref:System.Security.Cryptography.Xml.KeyInfo>oggetti contenuti all&quot;interno della proprietà.</xref:System.Security.Cryptography.Xml.KeyInfo>  Il `KeyInfo`> elemento è un sottoelemento dell&quot;elemento di `Signature`> elemento.       Utilizzare la proprietà KeyInfo per incorporare informazioni relative alla chiave per identificare la chiave necessaria per la convalida di un documento XML.       Per ulteriori informazioni sul `<KeyInfo>` elemento, vedere la specifica XMLDSIG, disponibile all&quot;indirizzo www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfo> object when signing a resource represented by a Universal Resource Identifier (URI).  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/csharp/p-system.security.crypto_31_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_31_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/add/codesnippet/cpp/p-system.security.crypto_31_1.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.KeyInfo> object when signing an XML document.  This example saves the signature in a new file.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/csharp/p-system.security.crypto_31_2.cs)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/cpp/p-system.security.crypto_31_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_31_2.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }
    return:
      type: System.Security.Cryptography.Xml.KeyInfo
      description: "Il <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> oggetto <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  overload: System.Security.Cryptography.Xml.SignedXml.KeyInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: SignedXml.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Carica un <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> dello stato da un elemento XML."
  remarks: ''
  example:
  - "The following code example shows how to use the LoadXml method to verify an XML document.  \n  \n [!code-cs[System.Security.Cryptography.XML-XMLDsigDetached#3](~/add/codesnippet/csharp/m-system.security.crypto_14_1.cs)]\n [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#3](~/add/codesnippet/visualbasic/m-system.security.crypto_14_1.vb)]\n [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#3](~/add/codesnippet/cpp/m-system.security.crypto_14_1.cpp)]"
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "L&quot;elemento XML da cui caricare il <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> dello stato da."
  overload: System.Security.Cryptography.Xml.SignedXml.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Il <code> value </code> parametro non contiene un valore valido <> </> *> proprietà.       - o - <code> value </code> parametro non contiene un valore valido <> </> *> proprietà."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.m_signature
  id: m_signature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: m_signature
  nameWithType: SignedXml.m_signature
  fullName: System.Security.Cryptography.Xml.SignedXml.m_signature
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta il <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> oggetto <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  syntax:
    content: protected System.Security.Cryptography.Xml.Signature m_signature;
    return:
      type: System.Security.Cryptography.Xml.Signature
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  id: m_strSigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: m_strSigningKeyName
  nameWithType: SignedXml.m_strSigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta il nome della chiave installata da utilizzare per la firma di <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  syntax:
    content: protected string m_strSigningKeyName;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.Resolver
  id: Resolver
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: Resolver
  nameWithType: SignedXml.Resolver
  fullName: System.Security.Cryptography.Xml.SignedXml.Resolver
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Imposta l&quot;oggetto corrente <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> oggetto."
  remarks: "La <xref:System.Xml.XmlResolver>classe risolve risorse XML esterne denominate da un URI (Uniform Resource Identifier).</xref:System.Xml.XmlResolver> Se si ritiene attendibile l&quot;origine del file XML, è possibile evitare di consentire l&quot;accesso alle risorse di computer denominate dall&quot;URI del file XML. È possibile utilizzare la proprietà di sistema di risoluzione per controllare il livello di accesso dei file XML alle risorse del computer specificando differenti <xref:System.Xml.XmlResolver>oggetti.</xref:System.Xml.XmlResolver> Se non si desidera consentire l&quot;accesso, è possibile impostare questa proprietà `null` (`Nothing` in Visual Basic)."
  syntax:
    content: public System.Xml.XmlResolver Resolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "Corrente <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> oggetto. Il valore predefinito è una <xref href=&quot;System.Xml.XmlSecureResolver&quot;> </xref> oggetto."
  overload: System.Security.Cryptography.Xml.SignedXml.Resolver*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  id: SafeCanonicalizationMethods
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SafeCanonicalizationMethods
  nameWithType: SignedXml.SafeCanonicalizationMethods
  fullName: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "[Supportato in .NET Framework 4.5.1 e versioni successive]       Ottiene i nomi dei metodi a cui gli algoritmi di canonizzazione sono consentiti in modo esplicito."
  remarks: "I metodi di canonizzazione convertono un documento XML in forma canonica. Per ulteriori informazioni su XML in formato canonico, vedere [XML in formato canonico](http://www.w3.org/TR/xml-c14n) nel sito Web W3C."
  syntax:
    content: public System.Collections.ObjectModel.Collection<string> SafeCanonicalizationMethods { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.String}
      description: "Raccolta di nomi dei metodi che producono in modo sicuro di XML in formato canonico."
  overload: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.Signature
  id: Signature
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: Signature
  nameWithType: SignedXml.Signature
  fullName: System.Security.Cryptography.Xml.SignedXml.Signature
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ottiene il <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> oggetto <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  remarks: "La proprietà di firma rappresenta la `Signature`> elemento di una firma digitale XML mediante un <xref:System.Security.Cryptography.Xml.Signature>oggetti contenuti all&quot;interno della proprietà.</xref:System.Security.Cryptography.Xml.Signature>  Il `Signature`> è l&quot;elemento radice usato per la creazione della firma digitale di XML e la verifica.       Utilizzare la proprietà di firma per recuperare il <xref:System.Security.Cryptography.Xml.Signature>oggetto utilizzato per il <xref:System.Security.Cryptography.Xml.SignedXml>oggetto.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.Signature>       Per ulteriori informazioni sul `<Signature>` elemento, vedere la specifica XMLDSIG, disponibile all&quot;indirizzo www.w3.org/TR/xmldsig-core/."
  example:
  - "The following code example uses the Signature property to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/p-system.security.crypto_9_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_9_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/p-system.security.crypto_9_1.cpp)]  \n  \n The following code example uses the Signature property to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/p-system.security.crypto_9_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/p-system.security.crypto_9_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_9_2.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.Signature Signature { get; }
    return:
      type: System.Security.Cryptography.Xml.Signature
      description: "Il <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref> oggetto <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  overload: System.Security.Cryptography.Xml.SignedXml.Signature*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  id: SignatureFormatValidator
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureFormatValidator
  nameWithType: SignedXml.SignatureFormatValidator
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ottiene un delegato che verrà chiamato per convalidare il formato (non la protezione con crittografia) di una firma XML."
  remarks: "Questo metodo può essere utilizzato per garantire che solo determinate trasformazioni vengono utilizzate o che la firma viene utilizzato un determinato algoritmo di hash e così via.       Imposta la proprietà `null` rimuove tutte le convalida del formato di firma dal <xref:System.Security.Cryptography.Xml.SignedXml>oggetto.</xref:System.Security.Cryptography.Xml.SignedXml>       È anche possibile leggere l&quot;oggetto delegato corrente e catena a tale se si desidera.       Se si imposta un validator di formato, il delegato è fornito verrà visualizzato come un parametro di input di <xref:System.Security.Cryptography.Xml.SignedXml>in corso la verifica dell&quot;oggetto e restituisce un valore booleano: `true` se il formato è accettabile, `false` se non lo è.</xref:System.Security.Cryptography.Xml.SignedXml> Se il delegato restituisce `false` per qualsiasi motivo, il <xref:System.Security.Cryptography.Xml.SignedXml>oggetto segnalerà che la firma XML non è valida.</xref:System.Security.Cryptography.Xml.SignedXml>"
  syntax:
    content: public Func<System.Security.Cryptography.Xml.SignedXml,bool> SignatureFormatValidator { get; set; }
    return:
      type: System.Func{System.Security.Cryptography.Xml.SignedXml,System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il formato è accettabile. in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength
  id: SignatureLength
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureLength
  nameWithType: SignedXml.SignatureLength
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureLength
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ottiene la lunghezza della firma per l&quot;oggetto corrente <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  syntax:
    content: public string SignatureLength { get; }
    return:
      type: System.String
      description: "La lunghezza della firma per l&quot;oggetto corrente <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  id: SignatureMethod
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureMethod
  nameWithType: SignedXml.SignatureMethod
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ottiene il metodo di firma dell&quot;oggetto corrente <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  remarks: "La proprietà rappresenta SignatureMethod il `SignatureMethod`> elemento di una firma digitale XML utilizzando una stringa identificatore URI (Uniform Resource) all&quot;interno della proprietà. Il `SignatureMethod`> elemento è un sottoelemento dell&quot;elemento di `SignedInfo`> elemento.       Utilizzare la proprietà SignatureMethod per recuperare il `SignatureMethod`> URI utilizzato per il <xref:System.Security.Cryptography.Xml.SignedXml>oggetto.</xref:System.Security.Cryptography.Xml.SignedXml> Questa proprietà è di sola lettura. Per ulteriori informazioni sull&quot;impostazione a livello di codice un URI per il `SignatureMethod`> elemento, vedere il <xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A>proprietà.</xref:System.Security.Cryptography.Xml.SignedInfo.SignatureMethod%2A>       Per ulteriori informazioni sul `<SignatureMethod>` elemento, vedere la specifica XMLDSIG, disponibile all&quot;indirizzo www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public string SignatureMethod { get; }
    return:
      type: System.String
      description: "Il metodo di firma dell&quot;oggetto corrente <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue
  id: SignatureValue
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignatureValue
  nameWithType: SignedXml.SignatureValue
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureValue
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ottiene il valore della firma dell&quot;oggetto corrente <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  remarks: "La proprietà di SignatureValue rappresenta il `SignatureValue`> elemento di una firma digitale XML utilizzando una matrice di byte contenuti all&quot;interno della proprietà.  Il `SignatureValue`> elemento è un sottoelemento dell&quot;elemento di `Signature>` elemento.       Utilizzare la proprietà SignatureValue per recuperare il valore della firma digitale XML.  Questa proprietà viene popolata automaticamente quando si effettua una chiamata ha esito positivo per il <xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A>metodo.</xref:System.Security.Cryptography.Xml.SignedXml.ComputeSignature%2A>       Per ulteriori informazioni sul `<SignatureValue>` elemento, vedere la specifica XMLDSIG, disponibile all&quot;indirizzo www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public byte[] SignatureValue { get; }
    return:
      type: System.Byte[]
      description: "Matrice di byte che contiene il valore della firma dell&quot;oggetto corrente <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  overload: System.Security.Cryptography.Xml.SignedXml.SignatureValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo
  id: SignedInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SignedInfo
  nameWithType: SignedXml.SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ottiene il <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> oggetto <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  remarks: "La proprietà rappresenta SignedInfo il `SignedInfo`> elemento di una firma digitale XML utilizzando una matrice di byte contenuti all&quot;interno della proprietà.  Il `SignedInfo`> elemento è un sottoelemento dell&quot;elemento di `Signature>` elemento.       Utilizzare la proprietà SignedInfo per recuperare il <xref:System.Security.Cryptography.Xml.SignedInfo>oggetto che viene utilizzato il <xref:System.Security.Cryptography.Xml.SignedXml>oggetto per creare una firma digitale XML.</xref:System.Security.Cryptography.Xml.SignedXml> </xref:System.Security.Cryptography.Xml.SignedInfo>       Per ulteriori informazioni sul `<SignedInfo>` elemento, vedere la specifica XMLDSIG, disponibile all&quot;indirizzo www.w3.org/TR/xmldsig-core/."
  syntax:
    content: public System.Security.Cryptography.Xml.SignedInfo SignedInfo { get; }
    return:
      type: System.Security.Cryptography.Xml.SignedInfo
      description: "Il <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> oggetto <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  overload: System.Security.Cryptography.Xml.SignedXml.SignedInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey
  id: SigningKey
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SigningKey
  nameWithType: SignedXml.SigningKey
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKey
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ottiene o imposta la chiave dell&quot;algoritmo asimmetrico utilizzata per firmare un <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  remarks: "Utilizzare la proprietà SigningKey per specificare la chiave asimmetrica da utilizzare per creare una firma digitale XML."
  example:
  - "The following code example shows how to sign and verify an entire XML document using an enveloped signature.  \n  \n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/csharp/p-system.security.crypto_40_1.cs)]\n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/cpp/p-system.security.crypto_40_1.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Envelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_40_1.vb)]  \n  \n The following code example shows how to sign and verify a Uniform Resource Identifier (URI) addressable object using a detached signature.  \n  \n [!code-cpp[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/cpp/p-system.security.crypto_40_2.cpp)]\n [!code-vb[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_40_2.vb)]\n [!code-cs[System.Security.Cryptography.XML.SignedXml.ComputeSig-Check-AsymetricAlg-Detached#1](~/add/codesnippet/csharp/p-system.security.crypto_40_2.cs)]  \n  \n The following code example shows how to sign and verify a single element of an XML document using an enveloping signature.  \n  \n [!code-cpp[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/cpp/p-system.security.crypto_40_3.cpp)]\n [!code-cs[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/csharp/p-system.security.crypto_40_3.cs)]\n [!code-vb[Cryptography.XML.SignVerifyEnvelope - Specify Element#1](~/add/codesnippet/visualbasic/p-system.security.crypto_40_3.vb)]"
  syntax:
    content: public System.Security.Cryptography.AsymmetricAlgorithm SigningKey { get; set; }
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "La chiave dell&quot;algoritmo asimmetrico utilizzata per firmare il <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  overload: System.Security.Cryptography.Xml.SignedXml.SigningKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  id: SigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: SigningKeyName
  nameWithType: SignedXml.SigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Ottiene o imposta il nome della chiave installata da utilizzare per la firma di <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  syntax:
    content: public string SigningKeyName { get; set; }
    return:
      type: System.String
      description: "Il nome della chiave installata da utilizzare per la firma di <xref href=&quot;System.Security.Cryptography.Xml.SignedXml&quot;> </xref> oggetto."
  overload: System.Security.Cryptography.Xml.SignedXml.SigningKeyName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  id: XmlDecryptionTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDecryptionTransformUrl
  nameWithType: SignedXml.XmlDecryptionTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per la trasformazione di decrittografia modalità XML. Questo campo è costante."
  remarks: "Il valore del campo XmlDecryptionTransformUrl è &quot;http://www.w3.org/2002/07/decrypt#XML&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) all&quot;http://www.w3.org/2002/07/decrypt#XML."
  syntax:
    content: public const string XmlDecryptionTransformUrl;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  id: XmlDsigBase64TransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigBase64TransformUrl
  nameWithType: SignedXml.XmlDsigBase64TransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per la trasformazione base 64. Questo campo è costante."
  remarks: "Il valore del campo XmlDsigBase64TransformUrl è &quot;http://www.w3.org/2000/09/xmldsig#base64&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       La <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform>classe implementa la trasformazione descritta dal campo XmlDsigBase64TransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform>       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) all&quot;http://www.w3.org/2000/09/xmldsig#base64."
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigBase64Transform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/csharp/f-system.security.crypto_0_1.cs)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_0_1.vb)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigBase64Transform#2](~/add/codesnippet/cpp/f-system.security.crypto_0_1.cpp)]"
  syntax:
    content: public const string XmlDsigBase64TransformUrl;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  id: XmlDsigC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigC14NTransformUrl
  nameWithType: SignedXml.XmlDsigC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per la trasformazione XML in formato canonico. Questo campo è costante."
  remarks: "Il valore del campo XmlDsigC14NTransformUrl è &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       La <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>classe implementa la trasformazione descritta dal campo XmlDsigC14NTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) all&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315.       Questo campo ha lo stesso valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl>campo.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl>"
  example:
  - "The following code example demonstrates how to call members of the <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform> class.  \n  \n [!code-cpp[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/cpp/f-system.security.crypto_4_1.cpp)]\n [!code-cs[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/csharp/f-system.security.crypto_4_1.cs)]\n [!code-vb[System.Security.Cryptography.XML.XMLDsigC14NTransform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_4_1.vb)]"
  syntax:
    content: public const string XmlDsigC14NTransformUrl;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  id: XmlDsigC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per la trasformazione XML in formato canonico, con i commenti. Questo campo è costante."
  remarks: "Il valore del campo XmlDsigC14NWithCommentsTransformUrl è &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       La <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>classe implementa la trasformazione descritta dal campo XmlDsigC14NWithCommentsTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) all&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.       Questo campo ha lo stesso valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl>campo.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl>"
  syntax:
    content: public const string XmlDsigC14NWithCommentsTransformUrl;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  id: XmlDsigCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per l&quot;algoritmo di canonizzazione standard per le firme digitali XML. Questo campo è costante."
  remarks: "Il valore del campo XmlDsigCanonicalizationUrl è &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       La <xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>classe implementa la trasformazione descritta dal campo XmlDsigCanonicalizationUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NTransform>       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) all&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315.       Questo campo ha lo stesso valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>campo.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>"
  syntax:
    content: public const string XmlDsigCanonicalizationUrl;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  id: XmlDsigCanonicalizationWithCommentsUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigCanonicalizationWithCommentsUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per l&quot;algoritmo di canonizzazione standard per le firme digitali XML e include i commenti. Questo campo è costante."
  remarks: "Il valore del campo XmlDsigCanonicalizationWithCommentsUrl è &quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       La <xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>classe implementa la trasformazione descritta dal campo XmlDsigCanonicalizationWithCommentsUrl.</xref:System.Security.Cryptography.Xml.XmlDsigC14NWithCommentsTransform>       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) all&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments.       Questo campo ha lo stesso valore di <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl>campo.</xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl>"
  syntax:
    content: public const string XmlDsigCanonicalizationWithCommentsUrl;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  id: XmlDsigDSAUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigDSAUrl
  nameWithType: SignedXml.XmlDsigDSAUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per lo standard <xref href=&quot;System.Security.Cryptography.DSA&quot;> </xref> algoritmo per le firme digitali XML. Questo campo è costante."
  remarks: "Il valore del campo XmlDsigDSAUrl è &quot;http://www.w3.org/2000/09/xmldsig#dsa-sha1&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) all&quot;http://www.w3.org/2000/09/xmldsig#dsa-sha1."
  syntax:
    content: public const string XmlDsigDSAUrl;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  id: XmlDsigEnvelopedSignatureTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigEnvelopedSignatureTransformUrl
  nameWithType: SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per la trasformazione della firma protetta. Questo campo è costante."
  remarks: "Il valore del campo XmlDsigEnvelopedSignatureTransformUrl è &quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       La <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>classe implementa la trasformazione descritta dal campo XmlDsigEnvelopedSignatureTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform>       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) all&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature."
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform> class.  \n  \n [!code-cs[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/csharp/62dc9f7e-cdc8-4569-bf73-_1.cs)]\n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/cpp/62dc9f7e-cdc8-4569-bf73-_1.cpp)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#2](~/add/codesnippet/visualbasic/62dc9f7e-cdc8-4569-bf73-_1.vb)]"
  syntax:
    content: public const string XmlDsigEnvelopedSignatureTransformUrl;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  id: XmlDsigExcC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigExcC14NTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per canonizzazione esclusivo di XML. Questo campo è costante."
  remarks: "Il valore del campo XmlDsigExcC14NTransformUrl è &quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       La <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>classe implementa la trasformazione descritta dal campo XmlDsigExcC14NTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform>       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) all&quot;http://www.w3.org/2001/10/xml-exc-c14n#."
  example:
  - "The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NTransform> class.  This sample creates an envelope signature.  \n  \n [!code-cs[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/add/codesnippet/csharp/f-system.security.crypto_9_1.cs)]\n [!code-cpp[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/add/codesnippet/cpp/f-system.security.crypto_9_1.cpp)]\n [!code-vb[Cryptography.Xml.XmlDsigExcC14NTransform#1](~/add/codesnippet/visualbasic/f-system.security.crypto_9_1.vb)]"
  syntax:
    content: public const string XmlDsigExcC14NTransformUrl;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  id: XmlDsigExcC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigExcC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per canonizzazione esclusivo di XML, con i commenti. Questo campo è costante."
  remarks: "Il valore del campo XmlDsigExcC14NWithCommentsTransformUrl è &quot;http://www.w3.org/2001/10/xml-exc-c14n#WithComments&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       La <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>classe implementa la trasformazione descritta dal campo XmlDsigExcC14NWithCommentsTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform>       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) all&quot;http://www.w3.org/2001/10/xml-exc-c14n#WithComments."
  example:
  - "The following code example shows how to sign and verify an XML document using the <xref:System.Security.Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform> class.  This sample creates an envelope signature.  \n  \n [!code-cs[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/add/codesnippet/csharp/15045a8f-c740-45e0-8c9c-_1.cs)]\n [!code-cpp[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/add/codesnippet/cpp/15045a8f-c740-45e0-8c9c-_1.cpp)]\n [!code-vb[Cryptography.Xml.XmlDsigExcC14NWithCommentsTransform#1](~/add/codesnippet/visualbasic/15045a8f-c740-45e0-8c9c-_1.vb)]"
  syntax:
    content: public const string XmlDsigExcC14NWithCommentsTransformUrl;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  id: XmlDsigHMACSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigHMACSHA1Url
  nameWithType: SignedXml.XmlDsigHMACSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per lo standard <xref href=&quot;System.Security.Cryptography.HMACSHA1&quot;> </xref> algoritmo per le firme digitali XML. Questo campo è costante."
  remarks: "Il valore del campo XmlDsigHMACSHA1Url è &quot;http://www.w3.org/2000/09/xmldsig#hmac-sha1&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) all&quot;http://www.w3.org/2000/09/xmldsig#hmac-sha1."
  syntax:
    content: public const string XmlDsigHMACSHA1Url;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  id: XmlDsigMinimalCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigMinimalCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigMinimalCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per l&quot;algoritmo di canonizzazione minima standard per le firme digitali XML. Questo campo è costante."
  remarks: "Il valore del campo XmlDsigMinimalCanonicalizationUrl è &quot;http://www.w3.org/2000/09/xmldsig#minimal&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) all&quot;http://www.w3.org/2000/09/xmldsig#minimal."
  syntax:
    content: public const string XmlDsigMinimalCanonicalizationUrl;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  id: XmlDsigNamespaceUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigNamespaceUrl
  nameWithType: SignedXml.XmlDsigNamespaceUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per lo spazio dei nomi standard per le firme digitali XML. Questo campo è costante."
  remarks: "Il valore del campo XmlDsigNamespaceUrl è &quot;http://www.w3.org/2000/09/xmldsig#&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) all&quot;http://www.w3.org/2000/09/xmldsig#."
  syntax:
    content: public const string XmlDsigNamespaceUrl;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  id: XmlDsigRSASHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA1Url
  nameWithType: SignedXml.XmlDsigRSASHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per lo standard <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> il metodo di firma per le firme digitali XML. Questo campo è costante."
  remarks: "Il valore del campo XmlDsigRSASHA1Url è &quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) all&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1."
  syntax:
    content: public const string XmlDsigRSASHA1Url;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  id: XmlDsigRSASHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA256Url
  nameWithType: SignedXml.XmlDsigRSASHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per il <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> variazione di metodo di firma SHA-256 per le firme digitali XML. Questo campo è costante."
  remarks: "Il valore del campo XmlDsigRSASHA256Url è &quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) al [http://www.w3.org/2001/04/xmldsig-more#rsa-sha256](http://www.w3.org/2001/04/xmldsig-more)."
  syntax:
    content: public const string XmlDsigRSASHA256Url;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  id: XmlDsigRSASHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA384Url
  nameWithType: SignedXml.XmlDsigRSASHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per il <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> variazione di metodo di firma SHA-384 per le firme digitali XML. Questo campo è costante."
  remarks: "Il valore del campo XmlDsigRSASHA384Url è &quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha384&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) al [http://www.w3.org/2001/04/xmldsig-more#rsa-sha384](http://www.w3.org/2001/04/xmldsig-more#rsa-sha384)."
  syntax:
    content: public const string XmlDsigRSASHA384Url;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  id: XmlDsigRSASHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigRSASHA512Url
  nameWithType: SignedXml.XmlDsigRSASHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per il <xref href=&quot;System.Security.Cryptography.RSA&quot;> </xref> variazione di metodo di firma SHA-512 per le firme digitali XML. Questo campo è costante."
  remarks: "Il valore del campo XmlDsigRSASHA512Url è &quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha512&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) al [http://www.w3.org/2001/04/xmldsig-more#rsa-sha512](http://www.w3.org/2001/04/xmldsig-more#rsa-sha512)."
  syntax:
    content: public const string XmlDsigRSASHA512Url;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  id: XmlDsigSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA1Url
  nameWithType: SignedXml.XmlDsigSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per lo standard <xref href=&quot;System.Security.Cryptography.SHA1&quot;> </xref> digest di firme digitali XML (metodo). Questo campo è costante."
  remarks: "Il valore del campo XmlDsigSHA1Url è &quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) all&quot;http://www.w3.org/2000/09/xmldsig#sha1."
  syntax:
    content: public const string XmlDsigSHA1Url;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  id: XmlDsigSHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA256Url
  nameWithType: SignedXml.XmlDsigSHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per lo standard <xref href=&quot;System.Security.Cryptography.SHA256&quot;> </xref> digest di firme digitali XML (metodo). Questo campo è costante."
  remarks: "Il valore del campo XmlDsigSHA256Url è &quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) al [http://www.w3.org/2001/04/xmlenc#sha256](http://www.w3.org/2001/04/xmlenc#sha256)."
  syntax:
    content: public const string XmlDsigSHA256Url;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  id: XmlDsigSHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA384Url
  nameWithType: SignedXml.XmlDsigSHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per lo standard <xref href=&quot;System.Security.Cryptography.SHA384&quot;> </xref> digest di firme digitali XML (metodo). Questo campo è costante."
  remarks: "Il valore del campo XmlDsigSHA384Url è &quot;http://www.w3.org/2001/04/xmldsig-more#sha384&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) al [http://www.w3.org/2001/04/xmldsig-more#sha384](http://www.w3.org/2001/04/xmldsig-more#sha384)."
  syntax:
    content: public const string XmlDsigSHA384Url;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  id: XmlDsigSHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigSHA512Url
  nameWithType: SignedXml.XmlDsigSHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per lo standard <xref href=&quot;System.Security.Cryptography.SHA512&quot;> </xref> digest di firme digitali XML (metodo). Questo campo è costante."
  remarks: "Il valore del campo XmlDsigSHA512Url è &quot;http://www.w3.org/2001/04/xmlenc#sha512&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) al [http://www.w3.org/2001/04/xmlenc#sha512](http://www.w3.org/2001/04/xmlenc#sha512)."
  syntax:
    content: public const string XmlDsigSHA512Url;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  id: XmlDsigXPathTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigXPathTransformUrl
  nameWithType: SignedXml.XmlDsigXPathTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;Uniform Resource Identifier (URI) per XML Path Language (XPath). Questo campo è costante."
  remarks: "Il valore del campo XmlDsigXPathTransformUrl è &quot;http://www.w3.org/TR/1999/REC-xpath-19991116&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       La <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform>classe implementa la trasformazione descritta dal campo XmlDsigXPathTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform>       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) all&quot;http://www.w3.org/TR/1999/REC-xpath-19991116."
  example:
  - "The following code example demonstrates how to call members of the <xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform> class.  \n  \n [!code-vb[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_1_1.vb)]\n [!code-cs[System.Security.Cryptography.Xml.XmlDsigXPathTransform#2](~/add/codesnippet/csharp/f-system.security.crypto_1_1.cs)]"
  syntax:
    content: public const string XmlDsigXPathTransformUrl;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  id: XmlDsigXsltTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlDsigXsltTransformUrl
  nameWithType: SignedXml.XmlDsigXsltTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per le trasformazioni XSLT. Questo campo è costante."
  remarks: "Il valore del campo XmlDsigXsltTransformUrl è &quot;http://www.w3.org/TR/1999/REC-xslt-19991116&quot;.       Utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       La <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>classe implementa la trasformazione descritta dal campo XmlDsigXsltTransformUrl.</xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform>       Per ulteriori informazioni, vedere la specifica World Wide Web Consortium (W3C) all&quot;http://www.w3.org/TR/1999/REC-xslt-19991116."
  example:
  - "The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform> class.  \n  \n [!code-cpp[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/add/codesnippet/cpp/f-system.security.crypto_3_1.cpp)]\n [!code-cs[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/add/codesnippet/csharp/f-system.security.crypto_3_1.cs)]\n [!code-vb[System.Security.Cryptography.Xml.XmlDsigXsltTransform#2](~/add/codesnippet/visualbasic/f-system.security.crypto_3_1.vb)]"
  syntax:
    content: public const string XmlDsigXsltTransformUrl;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  id: XmlLicenseTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  langs:
  - csharp
  name: XmlLicenseTransformUrl
  nameWithType: SignedXml.XmlLicenseTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  type: Field
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Rappresenta l&quot;identificatore URI (Uniform Resource) per l&quot;algoritmo di trasformazione licenza utilizzato per normalizzare le licenze XrML delle firme."
  remarks: "Il valore del campo XmlLicenseTransformUrl è &quot;urn: mpeg:mpeg21:2003:01-REL-R-NS: licenseTransform&quot; utilizzare questo campo per fornire un valore per uno degli attributi di un elemento utilizzato per XMLDSIG URI.       La <xref:System.Security.Cryptography.Xml.XmlLicenseTransform>classe implementa la trasformazione descritta dal campo XmlLicenseTransformUrl.</xref:System.Security.Cryptography.Xml.XmlLicenseTransform>"
  syntax:
    content: public const string XmlLicenseTransformUrl;
    return:
      type: System.String
      description: "Da aggiungere."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml()
  nameWithType: SignedXml.SignedXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml()
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlDocument)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml(XmlDocument)
  nameWithType: SignedXml.SignedXml(XmlDocument)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlDocument)
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml(XmlElement)
  nameWithType: SignedXml.SignedXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedXml(XmlElement)
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.SignedXml.AddObject(System.Security.Cryptography.Xml.DataObject)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddObject(DataObject)
  nameWithType: SignedXml.AddObject(DataObject)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddObject(DataObject)
- uid: System.Security.Cryptography.Xml.DataObject
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: DataObject
  nameWithType: DataObject
  fullName: System.Security.Cryptography.Xml.DataObject
- uid: System.Security.Cryptography.Xml.SignedXml.AddReference(System.Security.Cryptography.Xml.Reference)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddReference(Reference)
  nameWithType: SignedXml.AddReference(Reference)
  fullName: System.Security.Cryptography.Xml.SignedXml.AddReference(Reference)
- uid: System.Security.Cryptography.Xml.Reference
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Reference
  nameWithType: Reference
  fullName: System.Security.Cryptography.Xml.Reference
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature()
  nameWithType: SignedXml.CheckSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignature(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.CheckSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(KeyedHashAlgorithm)
- uid: System.Security.Cryptography.KeyedHashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: KeyedHashAlgorithm
  nameWithType: KeyedHashAlgorithm
  fullName: System.Security.Cryptography.KeyedHashAlgorithm
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature(X509Certificate2,Boolean)
  nameWithType: SignedXml.CheckSignature(X509Certificate2,Boolean)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignature(X509Certificate2,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(System.Security.Cryptography.AsymmetricAlgorithm@)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignatureReturningKey(AsymmetricAlgorithm)
  nameWithType: SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: ComputeSignature()
  nameWithType: SignedXml.ComputeSignature()
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature()
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(System.Security.Cryptography.KeyedHashAlgorithm)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: ComputeSignature(KeyedHashAlgorithm)
  nameWithType: SignedXml.ComputeSignature(KeyedHashAlgorithm)
  fullName: System.Security.Cryptography.Xml.SignedXml.ComputeSignature(KeyedHashAlgorithm)
- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: EncryptedXml
  nameWithType: SignedXml.EncryptedXml
  fullName: System.Security.Cryptography.Xml.SignedXml.EncryptedXml
- uid: System.Security.Cryptography.Xml.EncryptedXml
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptedXml
  nameWithType: EncryptedXml
  fullName: System.Security.Cryptography.Xml.EncryptedXml
- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement(System.Xml.XmlDocument,System.String)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetIdElement(XmlDocument,String)
  nameWithType: SignedXml.GetIdElement(XmlDocument,String)
  fullName: System.Security.Cryptography.Xml.SignedXml.GetIdElement(XmlDocument,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetPublicKey()
  nameWithType: SignedXml.GetPublicKey()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetPublicKey()
- uid: System.Security.Cryptography.Xml.SignedXml.GetXml
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetXml()
  nameWithType: SignedXml.GetXml()
  fullName: System.Security.Cryptography.Xml.SignedXml.GetXml()
- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: KeyInfo
  nameWithType: SignedXml.KeyInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.KeyInfo
- uid: System.Security.Cryptography.Xml.KeyInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: KeyInfo
  nameWithType: KeyInfo
  fullName: System.Security.Cryptography.Xml.KeyInfo
- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: SignedXml.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.SignedXml.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.SignedXml.m_signature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: m_signature
  nameWithType: SignedXml.m_signature
  fullName: System.Security.Cryptography.Xml.SignedXml.m_signature
- uid: System.Security.Cryptography.Xml.Signature
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: Signature
  nameWithType: Signature
  fullName: System.Security.Cryptography.Xml.Signature
- uid: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: m_strSigningKeyName
  nameWithType: SignedXml.m_strSigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.m_strSigningKeyName
- uid: System.Security.Cryptography.Xml.SignedXml.Resolver
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Resolver
  nameWithType: SignedXml.Resolver
  fullName: System.Security.Cryptography.Xml.SignedXml.Resolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SafeCanonicalizationMethods
  nameWithType: SignedXml.SafeCanonicalizationMethods
  fullName: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods
- uid: System.Collections.ObjectModel.Collection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<String>
  nameWithType: Collection<String>
  fullName: System.Collections.ObjectModel.Collection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Cryptography.Xml.SignedXml.Signature
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Signature
  nameWithType: SignedXml.Signature
  fullName: System.Security.Cryptography.Xml.SignedXml.Signature
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureFormatValidator
  nameWithType: SignedXml.SignatureFormatValidator
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator
- uid: System.Func{System.Security.Cryptography.Xml.SignedXml,System.Boolean}
  parent: System
  isExternal: true
  name: Func<SignedXml,Boolean>
  nameWithType: Func<SignedXml,Boolean>
  fullName: System.Func<System.Security.Cryptography.Xml.SignedXml,System.Boolean>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Security.Cryptography.Xml.SignedXml,System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Cryptography.Xml.SignedXml
    name: SignedXml
    nameWithType: SignedXml
    fullName: SignedXml
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureLength
  nameWithType: SignedXml.SignatureLength
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureLength
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureMethod
  nameWithType: SignedXml.SignatureMethod
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureMethod
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureValue
  nameWithType: SignedXml.SignatureValue
  fullName: System.Security.Cryptography.Xml.SignedXml.SignatureValue
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedXml.SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedXml.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKey
  nameWithType: SignedXml.SigningKey
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKey
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKeyName
  nameWithType: SignedXml.SigningKeyName
  fullName: System.Security.Cryptography.Xml.SignedXml.SigningKeyName
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDecryptionTransformUrl
  nameWithType: SignedXml.XmlDecryptionTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDecryptionTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigBase64TransformUrl
  nameWithType: SignedXml.XmlDsigBase64TransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigBase64TransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigC14NTransformUrl
  nameWithType: SignedXml.XmlDsigC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NWithCommentsTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigCanonicalizationWithCommentsUrl
  nameWithType: SignedXml.XmlDsigCanonicalizationWithCommentsUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigCanonicalizationWithCommentsUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigDSAUrl
  nameWithType: SignedXml.XmlDsigDSAUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigEnvelopedSignatureTransformUrl
  nameWithType: SignedXml.XmlDsigEnvelopedSignatureTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigEnvelopedSignatureTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigExcC14NTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigExcC14NWithCommentsTransformUrl
  nameWithType: SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigExcC14NWithCommentsTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigHMACSHA1Url
  nameWithType: SignedXml.XmlDsigHMACSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigHMACSHA1Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigMinimalCanonicalizationUrl
  nameWithType: SignedXml.XmlDsigMinimalCanonicalizationUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigMinimalCanonicalizationUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigNamespaceUrl
  nameWithType: SignedXml.XmlDsigNamespaceUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigNamespaceUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA1Url
  nameWithType: SignedXml.XmlDsigRSASHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA256Url
  nameWithType: SignedXml.XmlDsigRSASHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA256Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA384Url
  nameWithType: SignedXml.XmlDsigRSASHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA384Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigRSASHA512Url
  nameWithType: SignedXml.XmlDsigRSASHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA512Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA1Url
  nameWithType: SignedXml.XmlDsigSHA1Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA256Url
  nameWithType: SignedXml.XmlDsigSHA256Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA256Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA384Url
  nameWithType: SignedXml.XmlDsigSHA384Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA384Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigSHA512Url
  nameWithType: SignedXml.XmlDsigSHA512Url
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA512Url
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigXPathTransformUrl
  nameWithType: SignedXml.XmlDsigXPathTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXPathTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlDsigXsltTransformUrl
  nameWithType: SignedXml.XmlDsigXsltTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: XmlLicenseTransformUrl
  nameWithType: SignedXml.XmlLicenseTransformUrl
  fullName: System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl
- uid: System.Security.Cryptography.Xml.SignedXml.#ctor*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedXml
  nameWithType: SignedXml.SignedXml
- uid: System.Security.Cryptography.Xml.SignedXml.AddObject*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddObject
  nameWithType: SignedXml.AddObject
- uid: System.Security.Cryptography.Xml.SignedXml.AddReference*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: AddReference
  nameWithType: SignedXml.AddReference
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignature*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignature
  nameWithType: SignedXml.CheckSignature
- uid: System.Security.Cryptography.Xml.SignedXml.CheckSignatureReturningKey*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: CheckSignatureReturningKey
  nameWithType: SignedXml.CheckSignatureReturningKey
- uid: System.Security.Cryptography.Xml.SignedXml.ComputeSignature*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: ComputeSignature
  nameWithType: SignedXml.ComputeSignature
- uid: System.Security.Cryptography.Xml.SignedXml.EncryptedXml*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: EncryptedXml
  nameWithType: SignedXml.EncryptedXml
- uid: System.Security.Cryptography.Xml.SignedXml.GetIdElement*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetIdElement
  nameWithType: SignedXml.GetIdElement
- uid: System.Security.Cryptography.Xml.SignedXml.GetPublicKey*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetPublicKey
  nameWithType: SignedXml.GetPublicKey
- uid: System.Security.Cryptography.Xml.SignedXml.GetXml*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: GetXml
  nameWithType: SignedXml.GetXml
- uid: System.Security.Cryptography.Xml.SignedXml.KeyInfo*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: KeyInfo
  nameWithType: SignedXml.KeyInfo
- uid: System.Security.Cryptography.Xml.SignedXml.LoadXml*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: LoadXml
  nameWithType: SignedXml.LoadXml
- uid: System.Security.Cryptography.Xml.SignedXml.Resolver*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Resolver
  nameWithType: SignedXml.Resolver
- uid: System.Security.Cryptography.Xml.SignedXml.SafeCanonicalizationMethods*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SafeCanonicalizationMethods
  nameWithType: SignedXml.SafeCanonicalizationMethods
- uid: System.Security.Cryptography.Xml.SignedXml.Signature*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: Signature
  nameWithType: SignedXml.Signature
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureFormatValidator*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureFormatValidator
  nameWithType: SignedXml.SignatureFormatValidator
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureLength*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureLength
  nameWithType: SignedXml.SignatureLength
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureMethod*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureMethod
  nameWithType: SignedXml.SignatureMethod
- uid: System.Security.Cryptography.Xml.SignedXml.SignatureValue*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignatureValue
  nameWithType: SignedXml.SignatureValue
- uid: System.Security.Cryptography.Xml.SignedXml.SignedInfo*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedXml.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKey*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKey
  nameWithType: SignedXml.SigningKey
- uid: System.Security.Cryptography.Xml.SignedXml.SigningKeyName*
  parent: System.Security.Cryptography.Xml.SignedXml
  isExternal: false
  name: SigningKeyName
  nameWithType: SignedXml.SigningKeyName
