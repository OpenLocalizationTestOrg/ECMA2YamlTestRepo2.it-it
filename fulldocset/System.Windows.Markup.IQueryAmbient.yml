### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.IQueryAmbient
  id: IQueryAmbient
  children:
  - System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)
  langs:
  - csharp
  name: IQueryAmbient
  nameWithType: IQueryAmbient
  fullName: System.Windows.Markup.IQueryAmbient
  type: Interface
  summary: "Attende che una proprietà specificata deve essere considerata di ambiente nell&quot;ambito corrente."
  remarks: "Lo scopo di un meccanismo di proprietà di ambiente è per migliorare il tempo di analisi informando un writer di oggetti XAML per evitare di creare un&quot;istanza di determinati oggetti, nei casi in cui è noto che gli oggetti sono i valori che sono temporanei e non sono utili per un&quot;applicazione tipica fase di esecuzione. In genere, le ricerche XAML o elaborazione XAML di una funzione di accesso get di proprietà necessario creare un&quot;istanza di tali oggetti per riempire la rappresentazione grafica dell&quot;oggetto con valori di pronto all&quot;uso.       IQueryAmbient dispone di un membro: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.</xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>       IQueryAmbient è un meccanismo parallelo a <xref:System.Windows.Markup.AmbientAttribute>.</xref:System.Windows.Markup.AmbientAttribute> IQueryAmbient è il meccanismo specializzato che evita l&quot;uso della reflection per determinare le informazioni e può anche agire seconda della situazione (un oggetto specificato è possibile scegliere di report `true` o `false` per <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>), mentre l&quot;attributo è essenzialmente un&quot;analisi statica).</xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A> <xref:System.Windows.Markup.AmbientAttribute>è il meccanismo generale che può essere utilizzato dal writer di oggetti XAML e che in genere correlato al dedicato XAML tipo di sistema delle proprietà <xref:System.Xaml.XamlMember.IsAmbient%2A>e <xref:System.Xaml.XamlType.IsAmbient%2A>.</xref:System.Xaml.XamlType.IsAmbient%2A> </xref:System.Xaml.XamlMember.IsAmbient%2A></xref:System.Windows.Markup.AmbientAttribute>      ## WPF implementazioni di IQueryAmbient In WPF, IQueryAmbient viene utilizzato per il processo di ricerca del dizionario risorse. Il processo di ricerca Ottiene successivo `Resources` valori in tutto l&quot;albero logico WPF, procedendo verso la radice dell&quot;ambito di risorsa fino a quando non una chiave viene trovata o la chiave viene determinata che non esista nell&quot;ambito. In genere, tale operazione richiederebbe creare un&quot;istanza di un <xref:System.Windows.ResourceDictionary>ogni volta che si ricevono i risultati.</xref:System.Windows.ResourceDictionary> La dichiarazione del contenuto di `Resources` di ambiente, purché `Resources` esiste ottimizza il processo di ricerca. In WPF, questa interfaccia viene implementata nei casi seguenti:- <xref:System.Windows.FrameworkElement>implementa <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A>per restituire `true` per tutti i nomi di proprietà se contiene un oggetto esistente <xref:System.Windows.ResourceDictionary>per <xref:System.Windows.FrameworkElement.Resources%2A>, e, purché la query non è disponibile per il <xref:System.Windows.FrameworkElement.Resources%2A>proprietà stessa.</xref:System.Windows.FrameworkElement.Resources%2A> </xref:System.Windows.FrameworkElement.Resources%2A> </xref:System.Windows.ResourceDictionary> </xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> </xref:System.Windows.FrameworkElement>      - <xref:System.Windows.Style>implementa lo stesso modello per il relativo <xref:System.Windows.Style.Resources%2A>.</xref:System.Windows.Style.Resources%2A> </xref:System.Windows.Style>      - <xref:System.Windows.Application>implementa lo stesso modello per il relativo <xref:System.Windows.Application.Resources%2A>.</xref:System.Windows.Application.Resources%2A> </xref:System.Windows.Application>      - <xref:System.Windows.FrameworkContentElement>implementa lo stesso modello per il relativo <xref:System.Windows.FrameworkContentElement.Resources%2A>.</xref:System.Windows.FrameworkContentElement.Resources%2A> </xref:System.Windows.FrameworkContentElement>      - <xref:System.Windows.FrameworkTemplate>implementa lo stesso modello per il relativo <xref:System.Windows.FrameworkTemplate.Resources%2A>.</xref:System.Windows.FrameworkTemplate.Resources%2A> </xref:System.Windows.FrameworkTemplate> Inoltre, segnala <xref:System.Windows.FrameworkTemplate.Template%2A>contenuto come ambiente ma restituisce `false` se l&quot;esecuzione di query per <xref:System.Windows.FrameworkTemplate.Template%2A>stesso.</xref:System.Windows.FrameworkTemplate.Template%2A> </xref:System.Windows.FrameworkTemplate.Template%2A>      -In ognuno di questi casi, la corrispondente `Resources` proprietà (e <xref:System.Windows.FrameworkTemplate.Template%2A>) viene attribuita come <xref:System.Windows.Markup.AmbientAttribute>.</xref:System.Windows.Markup.AmbientAttribute> </xref:System.Windows.FrameworkTemplate.Template%2A> L&quot;utilizzo tipico consiste nell&quot;eseguire una query per le proprietà che non sono il <xref:System.Windows.Markup.AmbientAttribute>con attributi di proprietà dell&quot;oggetto che definisce l&quot;interfaccia.</xref:System.Windows.Markup.AmbientAttribute> In altre parole, purché un dizionario risorse esistente per fornire il valore della fase di esecuzione potenziale quando viene creato l&quot;oggetto grafico, qualsiasi altra proprietà oltre contenitore delle proprietà del dizionario risorse può essere considerata di ambiente."
  syntax:
    content: public interface IQueryAmbient
  implements: []
  platform:
  - net462
- uid: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)
  id: IsAmbientPropertyAvailable(System.String)
  parent: System.Windows.Markup.IQueryAmbient
  langs:
  - csharp
  name: IsAmbientPropertyAvailable(String)
  nameWithType: IQueryAmbient.IsAmbientPropertyAvailable(String)
  fullName: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "Attende che una proprietà denominata specificata può essere considerata di ambiente nell&quot;ambito corrente."
  syntax:
    content: public bool IsAmbientPropertyAvailable (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "Il nome della proprietà per controllare lo stato di ambiente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se la proprietà richiesta può essere considerata ambiente; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)
  parent: System.Windows.Markup.IQueryAmbient
  isExternal: false
  name: IsAmbientPropertyAvailable(String)
  nameWithType: IQueryAmbient.IsAmbientPropertyAvailable(String)
  fullName: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable*
  parent: System.Windows.Markup.IQueryAmbient
  isExternal: false
  name: IsAmbientPropertyAvailable
  nameWithType: IQueryAmbient.IsAmbientPropertyAvailable
