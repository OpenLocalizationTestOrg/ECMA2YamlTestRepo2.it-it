### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.ChannelListenerBase
  id: ChannelListenerBase
  children:
  - System.ServiceModel.Channels.ChannelListenerBase.#ctor
  - System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  - System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  - System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)
  - System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1
  - System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)
  - System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)
  - System.ServiceModel.Channels.ChannelListenerBase.Uri
  - System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)
  langs:
  - csharp
  name: ChannelListenerBase
  nameWithType: ChannelListenerBase
  fullName: System.ServiceModel.Channels.ChannelListenerBase
  type: Class
  summary: "Fornisce un&quot;implementazione di base comune per i listener del canale nel servizio."
  remarks: "I listener del canale nel servizio attendono e quindi accettano i canali creati dalle factory nel client. Una volta stabilita la connessione del canale tra client e servizio, è possibile scambiare messaggi e le applicazioni distribuite possono comunicare. La funzionalità di elaborazione fornita dal listener è su più livelli in una serie in pila del listener del canale per fornire modularità quando si seleziona il [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] le funzionalità da distribuire. Ogni listener del canale nello stack del servizio corrisponde a una channel factory nello stack client. Il canale creato dalla factory è effettivamente uno stack di canali accettati ed elaborati dallo stack di listener nel servizio."
  syntax:
    content: 'public abstract class ChannelListenerBase : System.ServiceModel.Channels.ChannelManagerBase, System.ServiceModel.Channels.IChannelListener'
  inheritance:
  - System.ServiceModel.Channels.ChannelManagerBase
  implements:
  - System.ServiceModel.Channels.IChannelListener
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: ChannelListenerBase()
  nameWithType: ChannelListenerBase.ChannelListenerBase()
  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Channels.ChannelListenerBase&quot;> </xref> classe."
  remarks: "Il costruttore predefinito inizializza le proprietà di timeout con i valori di timeout del modello di servizio quando si scambiano messaggi. Il valore predefinito è 1 minuto per l&quot;apertura, invio e chiudere operazioni e a 10 minuti per l&quot;operazione di ricezione. Utilizzare <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>Se si desidera specificare altri valori per i timeout dell&quot;operazione.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>"
  syntax:
    content: protected ChannelListenerBase ();
    parameters: []
  overload: System.ServiceModel.Channels.ChannelListenerBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  id: '#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)'
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: ChannelListenerBase(IDefaultCommunicationTimeouts)
  nameWithType: ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.ServiceModel.Channels.ChannelListenerBase&quot;> </xref> classe con i timeout di comunicazione predefiniti specificati."
  remarks: "Se si desidera specificare valori personalizzati per l&quot;open, send, ricezione e chiudere i timeout operazione anziché utilizzare i valori predefiniti del modello di servizio, utilizzare ChannelListenerBase anziché il costruttore predefinito."
  syntax:
    content: protected ChannelListenerBase (System.ServiceModel.IDefaultCommunicationTimeouts timeouts);
    parameters:
    - id: timeouts
      type: System.ServiceModel.IDefaultCommunicationTimeouts
      description: "Il <xref:System.ServiceModel.IDefaultCommunicationTimeouts>che consente di specificare i timeout predefiniti per apertura, inviare, ricevere e operazioni di chiusura quando si scambiano messaggi.</xref:System.ServiceModel.IDefaultCommunicationTimeouts>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Quando viene implementato in una classe derivata, avvia un&quot;operazione asincrona per attendere l&quot;arrivo di un canale."
  syntax:
    content: public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>che specifica quanto tempo l&quot;operazione di attesa di una canale deve essere completata prima del timeout.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "Il <xref:System.AsyncCallback>delegato che riceve la notifica del completamento asincrono dell&quot;attesa per un&quot;operazione di canale.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Un oggetto, specificato dall&quot;applicazione, che contiene informazioni sullo stato associate all&quot;asincrona di attesa per un&quot;operazione di canale."
    return:
      type: System.IAsyncResult
      description: "Il <xref:System.IAsyncResult>che fa riferimento l&quot;asincrona di attesa di un&quot;operazione di canale.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Il listener del canale non è stata aperta e non può essere utilizzato."
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: ChannelListenerBase.DefaultCloseTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Ottiene l&quot;intervallo di tempo fornito per completare un&quot;operazione di chiusura predefinito."
  remarks: "Questo valore viene impostato quando si crea un nuovo <xref:System.ServiceModel.Channels.ChannelListenerBase>oggetto.</xref:System.ServiceModel.Channels.ChannelListenerBase> Il valore predefinito <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>costruttore imposta la proprietà DefaultCloseTimeout su un valore di 1 minuto.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> Utilizzare <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>Se si desidera specificare un altro valore per il timeout.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>"
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: "Il valore predefinito <xref:System.TimeSpan>che specifica quanto tempo l&quot;operazione di chiusura deve essere completata prima del timeout.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: ChannelListenerBase.DefaultOpenTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Ottiene l&quot;intervallo di tempo fornito per completare un&quot;operazione di apertura predefinito."
  remarks: "Questo valore viene impostato quando si crea un nuovo <xref:System.ServiceModel.Channels.ChannelListenerBase>oggetto.</xref:System.ServiceModel.Channels.ChannelListenerBase> Il valore predefinito <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>costruttore imposta la proprietà DefaultOpenTimeout su un valore di 1 minuto.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> Utilizzare <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>Se si desidera specificare un altro valore per il timeout.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>"
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: "Il valore predefinito <xref:System.TimeSpan>che specifica quanto tempo l&quot;operazione di apertura deve essere completata prima del timeout.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  id: DefaultReceiveTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultReceiveTimeout
  nameWithType: ChannelListenerBase.DefaultReceiveTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Ottiene l&quot;intervallo di tempo fornito completare un&quot;operazione di ricezione predefinito."
  remarks: "Questo valore viene impostato quando si crea un nuovo <xref:System.ServiceModel.Channels.ChannelListenerBase>oggetto.</xref:System.ServiceModel.Channels.ChannelListenerBase> Il valore predefinito <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>costruttore imposta la proprietà DefaultReceiveTimeout su un valore di 10 minuti.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> Utilizzare <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>Se si desidera specificare un altro valore per il timeout.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>"
  syntax:
    content: protected override TimeSpan DefaultReceiveTimeout { get; }
    return:
      type: System.TimeSpan
      description: "Il valore predefinito <xref:System.TimeSpan>che specifica quanto tempo l&quot;operazione di ricezione deve essere completata prima del timeout.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  id: DefaultSendTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: DefaultSendTimeout
  nameWithType: ChannelListenerBase.DefaultSendTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Ottiene l&quot;intervallo di tempo fornito per completare un&quot;operazione di trasmissione predefinito."
  remarks: "Questo valore viene impostato quando si crea un nuovo <xref:System.ServiceModel.Channels.ChannelListenerBase>oggetto.</xref:System.ServiceModel.Channels.ChannelListenerBase> Il valore predefinito <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor>costruttore imposta la proprietà DefaultSendTimeout su un valore di 1 minuto.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> Utilizzare <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>Se si desidera specificare un altro valore per il timeout.</xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>"
  syntax:
    content: protected override TimeSpan DefaultSendTimeout { get; }
    return:
      type: System.TimeSpan
      description: "Il valore predefinito <xref:System.TimeSpan>che specifica la durata dell&quot;operazione di invio deve essere completata prima del timeout.</xref:System.TimeSpan>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)
  id: EndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: EndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.EndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Quando viene implementato in una classe derivata, completa un&quot;operazione asincrona per attendere l&quot;arrivo dei canali."
  syntax:
    content: public bool EndWaitForChannel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Il <xref:System.IAsyncResult>restituito da una chiamata al metodo EndWaitForChannel.</xref:System.IAsyncResult>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se è arrivato un messaggio. in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1
  id: GetProperty``1
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: GetProperty()
  nameWithType: ChannelListenerBase.GetProperty()
  fullName: System.ServiceModel.Channels.ChannelListenerBase.GetProperty()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public virtual T GetProperty<T> () where T : class;'
    parameters: []
    return:
      type: T
      description: "Da aggiungere."
  overload: System.ServiceModel.Channels.ChannelListenerBase.GetProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Quando implementato in una classe derivata, fornisce un punto di estendibilità quando inizia ad attendere l&quot;arrivo di un canale."
  syntax:
    content: protected abstract IAsyncResult OnBeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>che specifica quanto tempo l&quot;operazione di attesa iniziale deve essere completata prima del timeout.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "Il <xref:System.AsyncCallback>delegato che riceve la notifica dell&quot;operazione asincrona per iniziare a completamento dell&quot;attesa.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Un oggetto, specificato dall&quot;applicazione, che contiene informazioni sullo stato associato asincrono su iniziare un&quot;operazione di attesa."
    return:
      type: System.IAsyncResult
      description: "Il <xref:System.IAsyncResult>riferimenti asincrona begin operazione di attesa.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)
  id: OnEndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: OnEndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Quando implementato in una classe derivata, fornisce un punto di estendibilità quando termina l&quot;attesa dell&quot;arrivo di un canale."
  syntax:
    content: protected abstract bool OnEndWaitForChannel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Il <xref:System.IAsyncResult>restituito da una chiamata al &lt;xref:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt; metodo.</xref:System.IAsyncResult>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il metodo viene completato prima dell&quot;intervallo di tempo specificato da di <code> timeout </code> scaduta; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)
  id: OnWaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: OnWaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.OnWaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Quando sottoposto a override in una classe derivata, fornisce un punto di estendibilità quando in attesa dell&quot;arrivo di un canale."
  syntax:
    content: protected abstract bool OnWaitForChannel (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>che specifica il tempo di attesa per un&quot;operazione di canale deve essere completata prima del timeout.</xref:System.TimeSpan>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il metodo viene completato prima dell&quot;intervallo di tempo specificato da di <code> timeout </code> scaduta; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri
  id: Uri
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: Uri
  nameWithType: ChannelListenerBase.Uri
  fullName: System.ServiceModel.Channels.ChannelListenerBase.Uri
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Se implementato in una classe derivata, ottiene l&quot;URI su cui il listener del canale ascolta un canale in ingresso."
  syntax:
    content: public abstract Uri Uri { get; }
    return:
      type: System.Uri
      description: "Il <xref:System.Uri>in cui il listener del canale è in ascolto di canali in ingresso.</xref:System.Uri>"
  overload: System.ServiceModel.Channels.ChannelListenerBase.Uri*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)
  id: WaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  langs:
  - csharp
  name: WaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.WaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Quando viene implementato in una classe derivata, attende l&quot;arrivo di un canale."
  syntax:
    content: public bool WaitForChannel (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Il <xref:System.TimeSpan>che specifica quanto tempo l&quot;operazione di attesa di una canale deve essere completata prima del timeout.</xref:System.TimeSpan>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se un canale arriva prima che l&quot;intervallo di tempo specificato da di <code> timeout </code> scaduta; in caso contrario <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.ChannelManagerBase
  isExternal: false
  name: System.ServiceModel.Channels.ChannelManagerBase
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: ChannelListenerBase()
  nameWithType: ChannelListenerBase.ChannelListenerBase()
  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase()
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: ChannelListenerBase(IDefaultCommunicationTimeouts)
  nameWithType: ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)
- uid: System.ServiceModel.IDefaultCommunicationTimeouts
  parent: System.ServiceModel
  isExternal: true
  name: IDefaultCommunicationTimeouts
  nameWithType: IDefaultCommunicationTimeouts
  fullName: System.ServiceModel.IDefaultCommunicationTimeouts
- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelListenerBase.DefaultCloseTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelListenerBase.DefaultOpenTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultReceiveTimeout
  nameWithType: ChannelListenerBase.DefaultReceiveTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultSendTimeout
  nameWithType: ChannelListenerBase.DefaultSendTimeout
  fullName: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: EndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.EndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(IAsyncResult)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: GetProperty()
  nameWithType: ChannelListenerBase.GetProperty()
  fullName: System.ServiceModel.Channels.ChannelListenerBase.GetProperty()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnEndWaitForChannel(IAsyncResult)
  nameWithType: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnWaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.OnWaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(TimeSpan)
- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: Uri
  nameWithType: ChannelListenerBase.Uri
  fullName: System.ServiceModel.Channels.ChannelListenerBase.Uri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: WaitForChannel(TimeSpan)
  nameWithType: ChannelListenerBase.WaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(TimeSpan)
- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: ChannelListenerBase
  nameWithType: ChannelListenerBase.ChannelListenerBase
- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: BeginWaitForChannel
  nameWithType: ChannelListenerBase.BeginWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ChannelListenerBase.DefaultCloseTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ChannelListenerBase.DefaultOpenTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultReceiveTimeout
  nameWithType: ChannelListenerBase.DefaultReceiveTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: DefaultSendTimeout
  nameWithType: ChannelListenerBase.DefaultSendTimeout
- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: EndWaitForChannel
  nameWithType: ChannelListenerBase.EndWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty<T>*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: GetProperty<T>
  nameWithType: ChannelListenerBase.GetProperty<T>
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnBeginWaitForChannel
  nameWithType: ChannelListenerBase.OnBeginWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnEndWaitForChannel
  nameWithType: ChannelListenerBase.OnEndWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: OnWaitForChannel
  nameWithType: ChannelListenerBase.OnWaitForChannel
- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: Uri
  nameWithType: ChannelListenerBase.Uri
- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel*
  parent: System.ServiceModel.Channels.ChannelListenerBase
  isExternal: false
  name: WaitForChannel
  nameWithType: ChannelListenerBase.WaitForChannel
