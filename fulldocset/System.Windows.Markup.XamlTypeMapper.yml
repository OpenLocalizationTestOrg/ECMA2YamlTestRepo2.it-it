### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.XamlTypeMapper
  id: XamlTypeMapper
  children:
  - System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])
  - System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])
  - System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)
  - System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)
  - System.Windows.Markup.XamlTypeMapper.DefaultMapper
  - System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)
  - System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)
  langs:
  - csharp
  name: XamlTypeMapper
  nameWithType: XamlTypeMapper
  fullName: System.Windows.Markup.XamlTypeMapper
  type: Class
  summary: "Esegue il mapping di un nome di un elemento XAML a CLR appropriato <xref:System.Type>negli assembly.</xref:System.Type>"
  remarks: "XamlTypeMapper fa parte di uno scenario avanzato di WPF che fornisce contesto alternativo <xref:System.Windows.Markup.XamlReader>e <xref:System.Windows.Markup.XamlWriter>.</xref:System.Windows.Markup.XamlWriter> </xref:System.Windows.Markup.XamlReader> Per [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] applicazioni WPF, è consigliabile eseguire l&quot;override <xref:System.Xaml.XamlSchemaContext>per questo scenario, anziché tentare di utilizzare XamlTypeMapper.</xref:System.Xaml.XamlSchemaContext>       XamlTypeMapper può essere usato per fornire il parser XAML con informazioni di mapping personalizzato tramite una tecnica più diretta rispetto all&quot;applicazione di <xref:System.Windows.Markup.XmlnsDefinitionAttribute>valori al codice assembly.</xref:System.Windows.Markup.XmlnsDefinitionAttribute> Questo potrebbe essere utile per il consolidamento di tutti gli spazi dei nomi CLR in un assembly o per fare riferimento a tipi che supportano il XAML in un assembly esistente senza doverlo ricompilare solo per aggiungere <xref:System.Windows.Markup.XmlnsDefinitionAttribute>attribuzione.</xref:System.Windows.Markup.XmlnsDefinitionAttribute>       È in genere creare un&quot;istanza di XamlTypeMapper per specificare il <xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A>valore della proprietà per un <xref:System.Windows.Markup.ParserContext>.</xref:System.Windows.Markup.ParserContext> </xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A> Il <xref:System.Windows.Markup.ParserContext>a sua volta può essere utilizzato come contesto per un <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName>chiamare.</xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=fullName> </xref:System.Windows.Markup.ParserContext>      ## Mapper predefinito è possibile ottenere un&quot;utilità di mapping predefinito utilizzando il <xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A>proprietà statica.</xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A> Il mapper predefinito funziona solo su un elenco di assembly predefinito. Non viene utilizzati alcun informazioni specifiche sugli assembly (come specificato nel XamlTypeMapper costruttori).      <a name=&quot;xamlTextUsage_XamlTypeMapper&quot;></a># # Utilizzo di testo XAML"
  syntax:
    content: public class XamlTypeMapper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: XamlTypeMapper(String[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[])
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> i nomi della classe specificando una matrice di assembly il <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> deve utilizzare."
  syntax:
    content: public XamlTypeMapper (string[] assemblyNames);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "Matrice di nomi di assembly di <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> deve utilizzare."
  overload: System.Windows.Markup.XamlTypeMapper.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyNames</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])
  id: '#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])'
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: XamlTypeMapper(String[],NamespaceMapEntry[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Inizializza una nuova istanza di <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> classe usando la matrice di nomi di assembly specificata e lo spazio dei nomi specificato viene eseguito il mapping."
  syntax:
    content: public XamlTypeMapper (string[] assemblyNames, System.Windows.Markup.NamespaceMapEntry[] namespaceMaps);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "Matrice di nomi di assembly di <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> deve utilizzare."
    - id: namespaceMaps
      type: System.Windows.Markup.NamespaceMapEntry[]
      description: "Matrice di mapping dello spazio dei nomi di <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> deve utilizzare."
  overload: System.Windows.Markup.XamlTypeMapper.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyNames</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)
  id: AddMappingProcessingInstruction(System.String,System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: AddMappingProcessingInstruction(String,String,String)
  nameWithType: XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Definisce un mapping tra uno spazio dei nomi XML e spazi dei nomi CLR negli assembly e aggiunge il <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> informazioni."
  remarks: "AddMappingProcessingInstruction è un modo programmatico per aggiungere un mapping.  Ad esempio, le diverse parti dell&quot;istruzione di mapping XAML seguente corrispondono ai parametri del AddMappingProcessingInstruction: ```   <Window xmlns:SDK=&quot;clr-namespace:Samples;assembly=SDKSamples&quot;>   ...   ``` il `xmlNamespace` è `SDK`, `clrNamespace` è `Samples`e il `assemblyName` è `SDKSamples`."
  syntax:
    content: public void AddMappingProcessingInstruction (string xmlNamespace, string clrNamespace, string assemblyName);
    parameters:
    - id: xmlNamespace
      type: System.String
      description: "Il prefisso dello spazio dei nomi XML..."
    - id: clrNamespace
      type: System.String
      description: "Lo spazio dei nomi CLR che contiene i tipi per eseguire il mapping."
    - id: assemblyName
      type: System.String
      description: "L&quot;assembly contenente lo spazio dei nomi CLR."
  overload: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xmlNamespace</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>clrNamespace</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>assemblyName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)
  id: AllowInternalType(System.Type)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: AllowInternalType(Type)
  nameWithType: XamlTypeMapper.AllowInternalType(Type)
  fullName: System.Windows.Markup.XamlTypeMapper.AllowInternalType(Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Richiede l&quot;autorizzazione per un <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> tipo che viene chiamato con l&quot;attendibilità totale per accedere a un tipo interno specifico derivato."
  remarks: "Se non sottoposto a override da una sottoclasse, restituisce sempre AllowInternalType `false`.       Quando sottoposto a override da una sottoclasse, deve essere il comportamento che deve restituire AllowInternalType `true` se il tipo interno può essere eseguito; in caso contrario, `false`."
  syntax:
    content: protected virtual bool AllowInternalType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Tipo a cui accedere."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se il tipo interno è accessibile; in caso contrario, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Markup.XamlTypeMapper.AllowInternalType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.DefaultMapper
  id: DefaultMapper
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: DefaultMapper
  nameWithType: XamlTypeMapper.DefaultMapper
  fullName: System.Windows.Markup.XamlTypeMapper.DefaultMapper
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Ottiene un&quot;istanza di <xref href=&quot;System.Windows.Markup.XamlTypeMapper&quot;> </xref> da utilizzare se non ne è stato specificato."
  remarks: "Il mapper predefinito funziona solo su un elenco di assembly predefinito. Nessuna informazioni specifiche sugli assembly (come specificato nel <xref:System.Windows.Markup.XamlTypeMapper>costruttori) viene utilizzato.</xref:System.Windows.Markup.XamlTypeMapper> Nell&quot;implementazione corrente l&quot;elenco di assembly valore predefinito è: `WindowsBase`, `PresentationCore`, `PresentationFramework`.       Utilizzando BizTalk mapper predefinito non significa che non è possibile utilizzare tipi di assembly personalizzati in XAML affatto. Significa solo se si utilizzano tipi/assembly personalizzati, è necessario quindi utilizzare la tecnica XAML convenzionale di creazione dei mapping come `xmlns` attributi in ogni pagina XAML in cui fa riferimento, tipi/assembly anziché un mapper del tipo di API. Per ulteriori informazioni, vedere [spazi dei nomi XAML e Namespace Mapping per XAML di WPF](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Windows.Markup.XamlTypeMapper DefaultMapper { get; }
    return:
      type: System.Windows.Markup.XamlTypeMapper
      description: "Il mapper del tipo di valore predefinito."
  overload: System.Windows.Markup.XamlTypeMapper.DefaultMapper*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)
  id: GetType(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: GetType(String,String)
  nameWithType: XamlTypeMapper.GetType(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.GetType(String,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Ottiene il CLR <xref:System.Type>che viene eseguito il mapping di un determinato elemento XAML, utilizzando il nome specificato di prefisso e un elemento dello spazio dei nomi XML.</xref:System.Type>"
  remarks: "Se non viene trovato un tipo che esegue il mapping per le informazioni fornite, `null` viene restituito.       Non includere il prefisso come parte di `localName`. Per informazioni sull&quot;elemento XAML qualsiasi il prefisso, separarlo in `xmlNamespace` e `localName` componenti per questa chiamata API."
  syntax:
    content: public Type GetType (string xmlNamespace, string localName);
    parameters:
    - id: xmlNamespace
      type: System.String
      description: "Il prefisso di spazio dei nomi XML specificato."
    - id: localName
      type: System.String
      description: "Il nome &quot;locale&quot; dell&quot;elemento XAML per ottenere il mappate <xref:System.Type>for.</xref:System.Type> Locale in questo contesto significa mappato rispetto forniti `xmlNamespace`."
    return:
      type: System.Type
      description: "Il <xref:System.Type>per l&quot;oggetto, o <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nessun mapping è stato risolto.</xref:System.Type>"
  overload: System.Windows.Markup.XamlTypeMapper.GetType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xmlNamespace</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>localName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)
  id: SetAssemblyPath(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  langs:
  - csharp
  name: SetAssemblyPath(String,String)
  nameWithType: XamlTypeMapper.SetAssemblyPath(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(String,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Specifica il percorso da usare quando si carica un assembly."
  syntax:
    content: public void SetAssemblyPath (string assemblyName, string assemblyPath);
    parameters:
    - id: assemblyName
      type: System.String
      description: "Il nome breve dell&quot;assembly senza un&quot;estensione o un percorso specificato (equivalente a &lt;xref:System.Reflection.AssemblyName.Name%2A?displayProperty=fullName&gt;)."
    - id: assemblyPath
      type: System.String
      description: "Il percorso del file dell&quot;assembly. Il percorso dell&quot;assembly deve essere un percorso completo del file contenente un&quot;estensione di file."
  overload: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>assemblyPath</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Windows.Markup.XamlParseException
    commentId: T:System.Windows.Markup.XamlParseException
    description: "<code>assemblyName</code>è <xref:System.String> - oppure - <code>assemblyPath</code> è <xref:System.String> - oppure - <code>assemblyPath</code> non è un percorso completo del file contenente un&quot;estensione di file."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Markup.XamlParseException
  parent: System.Windows.Markup
  isExternal: false
  name: XamlParseException
  nameWithType: XamlParseException
  fullName: System.Windows.Markup.XamlParseException
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: XamlTypeMapper(String[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: XamlTypeMapper(String[],NamespaceMapEntry[])
  nameWithType: XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
  fullName: System.Windows.Markup.XamlTypeMapper.XamlTypeMapper(String[],NamespaceMapEntry[])
- uid: System.Windows.Markup.NamespaceMapEntry[]
  parent: System.Windows.Markup
  isExternal: false
  name: NamespaceMapEntry
  nameWithType: NamespaceMapEntry
  fullName: System.Windows.Markup.NamespaceMapEntry[]
  spec.csharp:
  - uid: System.Windows.Markup.NamespaceMapEntry
    name: NamespaceMapEntry
    nameWithType: NamespaceMapEntry
    fullName: NamespaceMapEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AddMappingProcessingInstruction(String,String,String)
  nameWithType: XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AllowInternalType(Type)
  nameWithType: XamlTypeMapper.AllowInternalType(Type)
  fullName: System.Windows.Markup.XamlTypeMapper.AllowInternalType(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.XamlTypeMapper.DefaultMapper
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: DefaultMapper
  nameWithType: XamlTypeMapper.DefaultMapper
  fullName: System.Windows.Markup.XamlTypeMapper.DefaultMapper
- uid: System.Windows.Markup.XamlTypeMapper
  parent: System.Windows.Markup
  isExternal: false
  name: XamlTypeMapper
  nameWithType: XamlTypeMapper
  fullName: System.Windows.Markup.XamlTypeMapper
- uid: System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: GetType(String,String)
  nameWithType: XamlTypeMapper.GetType(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.GetType(String,String)
- uid: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: SetAssemblyPath(String,String)
  nameWithType: XamlTypeMapper.SetAssemblyPath(String,String)
  fullName: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(String,String)
- uid: System.Windows.Markup.XamlTypeMapper.#ctor*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: XamlTypeMapper
  nameWithType: XamlTypeMapper.XamlTypeMapper
- uid: System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AddMappingProcessingInstruction
  nameWithType: XamlTypeMapper.AddMappingProcessingInstruction
- uid: System.Windows.Markup.XamlTypeMapper.AllowInternalType*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: AllowInternalType
  nameWithType: XamlTypeMapper.AllowInternalType
- uid: System.Windows.Markup.XamlTypeMapper.DefaultMapper*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: DefaultMapper
  nameWithType: XamlTypeMapper.DefaultMapper
- uid: System.Windows.Markup.XamlTypeMapper.GetType*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: GetType
  nameWithType: XamlTypeMapper.GetType
- uid: System.Windows.Markup.XamlTypeMapper.SetAssemblyPath*
  parent: System.Windows.Markup.XamlTypeMapper
  isExternal: false
  name: SetAssemblyPath
  nameWithType: XamlTypeMapper.SetAssemblyPath
